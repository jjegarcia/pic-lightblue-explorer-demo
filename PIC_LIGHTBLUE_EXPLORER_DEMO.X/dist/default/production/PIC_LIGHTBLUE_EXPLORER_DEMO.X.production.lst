

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Dec 23 21:41:09 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16LF18456
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    15                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
    17                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    21                           	psect	cinit,global,class=CODE,merge=1,delta=2
    22                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    23                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    25                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    26                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    27                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    28                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    29                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,noexec
    30                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,noexec
    31                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,noexec
    32                           	psect	inittext,global,class=CODE,delta=2
    33                           	psect	clrtext,global,class=CODE,delta=2
    34                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    35                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    36                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    37                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    38                           	psect	text1,local,class=CODE,merge=1,delta=2
    39                           	psect	text2,local,class=CODE,merge=1,delta=2
    40                           	psect	text3,local,class=CODE,merge=1,delta=2
    41                           	psect	text4,local,class=CODE,merge=1,delta=2
    42                           	psect	text5,local,class=CODE,merge=1,delta=2
    43                           	psect	text6,local,class=CODE,merge=1,delta=2
    44                           	psect	text7,local,class=CODE,merge=1,delta=2
    45                           	psect	text8,local,class=CODE,merge=1,delta=2
    46                           	psect	text9,local,class=CODE,merge=1,delta=2
    47                           	psect	text10,local,class=CODE,merge=1,delta=2
    48                           	psect	text11,local,class=CODE,merge=1,delta=2
    49                           	psect	text12,local,class=CODE,merge=1,delta=2
    50                           	psect	text13,local,class=CODE,merge=1,delta=2
    51                           	psect	text14,local,class=CODE,merge=1,delta=2
    52                           	psect	text15,local,class=CODE,merge=1,delta=2
    53                           	psect	text16,local,class=CODE,merge=1,delta=2
    54                           	psect	text17,local,class=CODE,merge=1,delta=2
    55                           	psect	text18,local,class=CODE,merge=1,delta=2
    56                           	psect	text19,local,class=CODE,merge=1,delta=2
    57                           	psect	text20,local,class=CODE,merge=1,delta=2
    58                           	psect	text21,local,class=CODE,merge=1,delta=2
    59                           	psect	text22,local,class=CODE,merge=1,delta=2
    60                           	psect	text23,local,class=CODE,merge=1,delta=2
    61                           	psect	text24,local,class=CODE,merge=1,delta=2
    62                           	psect	text25,local,class=CODE,merge=1,delta=2
    63                           	psect	text26,local,class=CODE,merge=1,delta=2
    64                           	psect	text27,local,class=CODE,merge=1,delta=2
    65                           	psect	text28,local,class=CODE,merge=1,delta=2
    66                           	psect	text29,local,class=CODE,merge=1,delta=2
    67                           	psect	text30,local,class=CODE,merge=1,delta=2
    68                           	psect	text31,local,class=CODE,merge=1,delta=2
    69                           	psect	text32,local,class=CODE,merge=1,delta=2
    70                           	psect	text33,local,class=CODE,merge=1,delta=2
    71                           	psect	text34,local,class=CODE,merge=1,delta=2
    72                           	psect	text35,local,class=CODE,merge=1,delta=2
    73                           	psect	text36,local,class=CODE,merge=1,delta=2
    74                           	psect	text37,local,class=CODE,merge=1,delta=2
    75                           	psect	text38,local,class=CODE,merge=1,delta=2
    76                           	psect	text39,local,class=CODE,merge=1,delta=2
    77                           	psect	text40,local,class=CODE,merge=1,delta=2
    78                           	psect	text41,local,class=CODE,merge=1,delta=2
    79                           	psect	text42,local,class=CODE,merge=1,delta=2
    80                           	psect	text43,local,class=CODE,merge=1,delta=2
    81                           	psect	text44,local,class=CODE,merge=1,delta=2
    82                           	psect	text45,local,class=CODE,merge=1,delta=2
    83                           	psect	text46,local,class=CODE,merge=1,delta=2
    84                           	psect	text47,local,class=CODE,merge=1,delta=2,group=2
    85                           	psect	text48,local,class=CODE,merge=1,delta=2,group=2
    86                           	psect	text49,local,class=CODE,merge=1,delta=2,group=2
    87                           	psect	text50,local,class=CODE,merge=1,inline,delta=2
    88                           	psect	text51,local,class=CODE,merge=1,inline,delta=2
    89                           	psect	text52,local,class=CODE,merge=1,inline,delta=2
    90                           	psect	text53,local,class=CODE,merge=1,delta=2,group=2
    91                           	psect	text54,local,class=CODE,merge=1,inline,delta=2
    92                           	psect	text55,local,class=CODE,merge=1,delta=2
    93                           	psect	text56,local,class=CODE,merge=1,delta=2
    94                           	psect	text57,local,class=CODE,merge=1,inline,delta=2
    95                           	psect	text58,local,class=CODE,merge=1,delta=2
    96                           	psect	text59,local,class=CODE,merge=1,delta=2
    97                           	psect	text60,local,class=CODE,merge=1,delta=2
    98                           	psect	text61,local,class=CODE,merge=1,delta=2
    99                           	psect	text62,local,class=CODE,merge=1,delta=2
   100                           	psect	text63,local,class=CODE,merge=1,delta=2
   101                           	psect	text64,local,class=CODE,merge=1,delta=2
   102                           	psect	text65,local,class=CODE,merge=1,delta=2
   103                           	psect	text66,local,class=CODE,merge=1,delta=2
   104                           	psect	text67,local,class=CODE,merge=1,delta=2
   105                           	psect	text68,local,class=CODE,merge=1,delta=2
   106                           	psect	text69,local,class=CODE,merge=1,delta=2
   107                           	psect	text70,local,class=CODE,merge=1,delta=2
   108                           	psect	text71,local,class=CODE,merge=1,delta=2
   109                           	psect	text72,local,class=CODE,merge=1,delta=2
   110                           	psect	text73,local,class=CODE,merge=1,delta=2
   111                           	psect	text74,local,class=CODE,merge=1,delta=2
   112                           	psect	text75,local,class=CODE,merge=1,delta=2
   113                           	psect	text76,local,class=CODE,merge=1,delta=2
   114                           	psect	text77,local,class=CODE,merge=1,delta=2
   115                           	psect	text78,local,class=CODE,merge=1,inline,delta=2
   116                           	psect	text79,local,class=CODE,merge=1,delta=2
   117                           	psect	text80,local,class=CODE,merge=1,delta=2
   118                           	psect	text81,local,class=CODE,merge=1,delta=2
   119                           	psect	text82,local,class=CODE,merge=1,inline,delta=2
   120                           	psect	text83,local,class=CODE,merge=1,delta=2
   121                           	psect	text84,local,class=CODE,merge=1,delta=2
   122                           	psect	text85,local,class=CODE,merge=1,inline,delta=2
   123                           	psect	text86,local,class=CODE,merge=1,delta=2
   124                           	psect	text87,local,class=CODE,merge=1,delta=2
   125                           	psect	text88,local,class=CODE,merge=1,delta=2
   126                           	psect	text89,local,class=CODE,merge=1,delta=2
   127                           	psect	text90,local,class=CODE,merge=1,delta=2
   128                           	psect	text91,local,class=CODE,merge=1,delta=2
   129                           	psect	text92,local,class=CODE,merge=1,delta=2
   130                           	psect	text93,local,class=CODE,merge=1,delta=2
   131                           	psect	text94,local,class=CODE,merge=1,delta=2
   132                           	psect	text95,local,class=CODE,merge=1,delta=2,group=2
   133                           	psect	text96,local,class=CODE,merge=1,inline,delta=2
   134                           	psect	text97,local,class=CODE,merge=1,delta=2
   135                           	psect	text98,local,class=CODE,merge=1,delta=2
   136                           	psect	text99,local,class=CODE,merge=1,delta=2
   137                           	psect	text100,local,class=CODE,merge=1,delta=2
   138                           	psect	text101,local,class=CODE,merge=1,delta=2
   139                           	psect	text102,local,class=CODE,merge=1,delta=2
   140                           	psect	text103,local,class=CODE,merge=1,delta=2
   141                           	psect	text104,local,class=CODE,merge=1,delta=2
   142                           	psect	text105,local,class=CODE,merge=1,delta=2
   143                           	psect	text106,local,class=CODE,merge=1,delta=2
   144                           	psect	text107,local,class=CODE,merge=1,delta=2
   145                           	psect	text108,local,class=CODE,merge=1,delta=2
   146                           	psect	text109,local,class=CODE,merge=1,delta=2
   147                           	psect	text110,local,class=CODE,merge=1,inline,delta=2
   148                           	psect	text111,local,class=CODE,merge=1,delta=2
   149                           	psect	text112,local,class=CODE,merge=1,delta=2
   150                           	psect	text113,local,class=CODE,merge=1,delta=2
   151                           	psect	text114,local,class=CODE,merge=1,inline,delta=2
   152                           	psect	text115,local,class=CODE,merge=1,inline,delta=2
   153                           	psect	text116,local,class=CODE,merge=1,delta=2
   154                           	psect	text117,local,class=CODE,merge=1,delta=2
   155                           	psect	text118,local,class=CODE,merge=1,delta=2
   156                           	psect	text119,local,class=CODE,merge=1,delta=2
   157                           	psect	text120,local,class=CODE,merge=1,delta=2
   158                           	psect	text121,local,class=CODE,merge=1,delta=2
   159                           	psect	text122,local,class=CODE,merge=1,delta=2
   160                           	psect	text123,local,class=CODE,merge=1,delta=2
   161                           	psect	text124,local,class=CODE,merge=1,delta=2
   162                           	psect	text125,local,class=CODE,merge=1,delta=2
   163                           	psect	text126,local,class=CODE,merge=1,delta=2
   164                           	psect	text127,local,class=CODE,merge=1,delta=2
   165                           	psect	text128,local,class=CODE,merge=1,delta=2
   166                           	psect	text129,local,class=CODE,merge=1,delta=2
   167                           	psect	text130,local,class=CODE,merge=1,delta=2
   168                           	psect	text131,local,class=CODE,merge=1,delta=2
   169                           	psect	text132,local,class=CODE,merge=1,inline,delta=2
   170                           	psect	text133,local,class=CODE,merge=1,inline,delta=2
   171                           	psect	text134,local,class=CODE,merge=1,inline,delta=2
   172                           	psect	text135,local,class=CODE,merge=1,inline,delta=2
   173                           	psect	text136,local,class=CODE,merge=1,inline,delta=2
   174                           	psect	text137,local,class=CODE,merge=1,inline,delta=2
   175                           	psect	text138,local,class=CODE,merge=1,inline,delta=2
   176                           	psect	text139,local,class=CODE,merge=1,delta=2
   177                           	psect	text140,local,class=CODE,merge=1,delta=2
   178                           	psect	text141,local,class=CODE,merge=1,delta=2
   179                           	psect	text142,local,class=CODE,merge=1,delta=2
   180                           	psect	text143,local,class=CODE,merge=1,delta=2
   181                           	psect	text144,local,class=CODE,merge=1,delta=2
   182                           	psect	text145,local,class=CODE,merge=1,delta=2
   183                           	psect	text146,local,class=CODE,merge=1,delta=2
   184                           	psect	text147,local,class=CODE,merge=1,delta=2
   185                           	psect	text148,local,class=CODE,merge=1,delta=2
   186                           	psect	text149,local,class=CODE,merge=1,delta=2
   187                           	psect	text150,local,class=CODE,merge=1,delta=2
   188                           	psect	text151,local,class=CODE,merge=1,delta=2
   189                           	psect	text152,local,class=CODE,merge=1,delta=2
   190                           	psect	text153,local,class=CODE,merge=1,delta=2
   191                           	psect	text154,local,class=CODE,merge=1,inline,delta=2
   192                           	psect	text155,local,class=CODE,merge=1,inline,delta=2
   193                           	psect	text156,local,class=CODE,merge=1,inline,delta=2
   194                           	psect	text157,local,class=CODE,merge=1,delta=2
   195                           	psect	text158,local,class=CODE,merge=1,inline,delta=2
   196                           	psect	text159,local,class=CODE,merge=1,inline,delta=2
   197                           	psect	text160,local,class=CODE,merge=1,inline,delta=2
   198                           	psect	intentry,global,class=CODE,delta=2
   199                           	psect	text162,local,class=CODE,merge=1,delta=2
   200                           	psect	text163,local,class=CODE,merge=1,delta=2
   201                           	psect	text164,local,class=CODE,merge=1,delta=2
   202                           	psect	text165,local,class=CODE,merge=1,delta=2
   203                           	psect	text166,local,class=CODE,merge=1,delta=2
   204                           	psect	text167,local,class=CODE,merge=1,delta=2
   205                           	psect	text168,local,class=CODE,merge=1,delta=2
   206                           	psect	text169,local,class=CODE,merge=1,delta=2
   207                           	psect	text170,local,class=CODE,merge=1,delta=2
   208                           	psect	text171,local,class=CODE,merge=1,delta=2
   209                           	psect	text172,local,class=CODE,merge=1,delta=2
   210                           	psect	text173,local,class=CODE,merge=1,delta=2
   211                           	psect	text174,local,class=CODE,merge=1,delta=2
   212                           	psect	text175,local,class=CODE,merge=1,delta=2
   213                           	psect	text176,local,class=CODE,merge=1,delta=2
   214                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
   215                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   216                           	dabs	1,0x7E,2
   217     0000                     
   218                           ; Version 2.35
   219                           ; Generated 01/06/2021 GMT
   220                           ; 
   221                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   222                           ; All rights reserved.
   223                           ; 
   224                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   225                           ; 
   226                           ; Redistribution and use in source and binary forms, with or without modification, are
   227                           ; permitted provided that the following conditions are met:
   228                           ; 
   229                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   230                           ;        conditions and the following disclaimer.
   231                           ; 
   232                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   233                           ;        of conditions and the following disclaimer in the documentation and/or other
   234                           ;        materials provided with the distribution. Publication is not required when
   235                           ;        this file is used in an embedded application.
   236                           ; 
   237                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   238                           ;        software without specific prior written permission.
   239                           ; 
   240                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   241                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   242                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   243                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   244                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   245                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   246                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   247                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   248                           ; 
   249                           ; 
   250                           ; Code-generator required, PIC16LF18456 Definitions
   251                           ; 
   252                           ; SFR Addresses
   253     0000                     	;# 
   254     0001                     	;# 
   255     0002                     	;# 
   256     0003                     	;# 
   257     0004                     	;# 
   258     0005                     	;# 
   259     0006                     	;# 
   260     0007                     	;# 
   261     0008                     	;# 
   262     0009                     	;# 
   263     000A                     	;# 
   264     000B                     	;# 
   265     000C                     	;# 
   266     000D                     	;# 
   267     000E                     	;# 
   268     0010                     	;# 
   269     0012                     	;# 
   270     0013                     	;# 
   271     0014                     	;# 
   272     0016                     	;# 
   273     0018                     	;# 
   274     0019                     	;# 
   275     001A                     	;# 
   276     001C                     	;# 
   277     008C                     	;# 
   278     008C                     	;# 
   279     008D                     	;# 
   280     008E                     	;# 
   281     008E                     	;# 
   282     008F                     	;# 
   283     0090                     	;# 
   284     0090                     	;# 
   285     0091                     	;# 
   286     0092                     	;# 
   287     0092                     	;# 
   288     0093                     	;# 
   289     0094                     	;# 
   290     0094                     	;# 
   291     0095                     	;# 
   292     0096                     	;# 
   293     0096                     	;# 
   294     0097                     	;# 
   295     0098                     	;# 
   296     0099                     	;# 
   297     009A                     	;# 
   298     009B                     	;# 
   299     009B                     	;# 
   300     009C                     	;# 
   301     009D                     	;# 
   302     009D                     	;# 
   303     009E                     	;# 
   304     009F                     	;# 
   305     010C                     	;# 
   306     010C                     	;# 
   307     010D                     	;# 
   308     010E                     	;# 
   309     010F                     	;# 
   310     010F                     	;# 
   311     0110                     	;# 
   312     0111                     	;# 
   313     0112                     	;# 
   314     0113                     	;# 
   315     0114                     	;# 
   316     0115                     	;# 
   317     0116                     	;# 
   318     0117                     	;# 
   319     0118                     	;# 
   320     0119                     	;# 
   321     0119                     	;# 
   322     0119                     	;# 
   323     011A                     	;# 
   324     011A                     	;# 
   325     011A                     	;# 
   326     011B                     	;# 
   327     011B                     	;# 
   328     011B                     	;# 
   329     011B                     	;# 
   330     011B                     	;# 
   331     011C                     	;# 
   332     011C                     	;# 
   333     011C                     	;# 
   334     011D                     	;# 
   335     011D                     	;# 
   336     011D                     	;# 
   337     011E                     	;# 
   338     011E                     	;# 
   339     011E                     	;# 
   340     011F                     	;# 
   341     011F                     	;# 
   342     011F                     	;# 
   343     011F                     	;# 
   344     011F                     	;# 
   345     018C                     	;# 
   346     018D                     	;# 
   347     018E                     	;# 
   348     018F                     	;# 
   349     0190                     	;# 
   350     0191                     	;# 
   351     0192                     	;# 
   352     0196                     	;# 
   353     0197                     	;# 
   354     0198                     	;# 
   355     0199                     	;# 
   356     019A                     	;# 
   357     019B                     	;# 
   358     019C                     	;# 
   359     020C                     	;# 
   360     020D                     	;# 
   361     020E                     	;# 
   362     020E                     	;# 
   363     020F                     	;# 
   364     020F                     	;# 
   365     0210                     	;# 
   366     0210                     	;# 
   367     0211                     	;# 
   368     0211                     	;# 
   369     0212                     	;# 
   370     0213                     	;# 
   371     0214                     	;# 
   372     0214                     	;# 
   373     0215                     	;# 
   374     0215                     	;# 
   375     0216                     	;# 
   376     0216                     	;# 
   377     0217                     	;# 
   378     0217                     	;# 
   379     0218                     	;# 
   380     0219                     	;# 
   381     021A                     	;# 
   382     021A                     	;# 
   383     021B                     	;# 
   384     021B                     	;# 
   385     021C                     	;# 
   386     021C                     	;# 
   387     021D                     	;# 
   388     021D                     	;# 
   389     021E                     	;# 
   390     021F                     	;# 
   391     028C                     	;# 
   392     028C                     	;# 
   393     028D                     	;# 
   394     028D                     	;# 
   395     028E                     	;# 
   396     028F                     	;# 
   397     0290                     	;# 
   398     0291                     	;# 
   399     0292                     	;# 
   400     0292                     	;# 
   401     0293                     	;# 
   402     0293                     	;# 
   403     0294                     	;# 
   404     0295                     	;# 
   405     0296                     	;# 
   406     0297                     	;# 
   407     0298                     	;# 
   408     0298                     	;# 
   409     0299                     	;# 
   410     0299                     	;# 
   411     029A                     	;# 
   412     029B                     	;# 
   413     029C                     	;# 
   414     029D                     	;# 
   415     029F                     	;# 
   416     030C                     	;# 
   417     030C                     	;# 
   418     030D                     	;# 
   419     030E                     	;# 
   420     030F                     	;# 
   421     0310                     	;# 
   422     0310                     	;# 
   423     0311                     	;# 
   424     0312                     	;# 
   425     0313                     	;# 
   426     0314                     	;# 
   427     0314                     	;# 
   428     0315                     	;# 
   429     0316                     	;# 
   430     0317                     	;# 
   431     0318                     	;# 
   432     0318                     	;# 
   433     0319                     	;# 
   434     031A                     	;# 
   435     031B                     	;# 
   436     031C                     	;# 
   437     031C                     	;# 
   438     031D                     	;# 
   439     031E                     	;# 
   440     031F                     	;# 
   441     038C                     	;# 
   442     038C                     	;# 
   443     038D                     	;# 
   444     038E                     	;# 
   445     0390                     	;# 
   446     0390                     	;# 
   447     0391                     	;# 
   448     0392                     	;# 
   449     048C                     	;# 
   450     048C                     	;# 
   451     048D                     	;# 
   452     048E                     	;# 
   453     048F                     	;# 
   454     048F                     	;# 
   455     0490                     	;# 
   456     0491                     	;# 
   457     0492                     	;# 
   458     0492                     	;# 
   459     0493                     	;# 
   460     0494                     	;# 
   461     0495                     	;# 
   462     0495                     	;# 
   463     0496                     	;# 
   464     0497                     	;# 
   465     0498                     	;# 
   466     0499                     	;# 
   467     049A                     	;# 
   468     049B                     	;# 
   469     049C                     	;# 
   470     049D                     	;# 
   471     050C                     	;# 
   472     050C                     	;# 
   473     050D                     	;# 
   474     050E                     	;# 
   475     050F                     	;# 
   476     050F                     	;# 
   477     0510                     	;# 
   478     0511                     	;# 
   479     0512                     	;# 
   480     0512                     	;# 
   481     0513                     	;# 
   482     0514                     	;# 
   483     0515                     	;# 
   484     0515                     	;# 
   485     0516                     	;# 
   486     0517                     	;# 
   487     0518                     	;# 
   488     0519                     	;# 
   489     051A                     	;# 
   490     051B                     	;# 
   491     051C                     	;# 
   492     051D                     	;# 
   493     058C                     	;# 
   494     058C                     	;# 
   495     058D                     	;# 
   496     058E                     	;# 
   497     058F                     	;# 
   498     058F                     	;# 
   499     0590                     	;# 
   500     0591                     	;# 
   501     0592                     	;# 
   502     0593                     	;# 
   503     059C                     	;# 
   504     059C                     	;# 
   505     059D                     	;# 
   506     059D                     	;# 
   507     059E                     	;# 
   508     059F                     	;# 
   509     060C                     	;# 
   510     060C                     	;# 
   511     060D                     	;# 
   512     060D                     	;# 
   513     060E                     	;# 
   514     060F                     	;# 
   515     0610                     	;# 
   516     0611                     	;# 
   517     0612                     	;# 
   518     0613                     	;# 
   519     0614                     	;# 
   520     0616                     	;# 
   521     0616                     	;# 
   522     0617                     	;# 
   523     0617                     	;# 
   524     0618                     	;# 
   525     0619                     	;# 
   526     061A                     	;# 
   527     061B                     	;# 
   528     061C                     	;# 
   529     061D                     	;# 
   530     061E                     	;# 
   531     068C                     	;# 
   532     068D                     	;# 
   533     068E                     	;# 
   534     068F                     	;# 
   535     0690                     	;# 
   536     0691                     	;# 
   537     0692                     	;# 
   538     0693                     	;# 
   539     0694                     	;# 
   540     070C                     	;# 
   541     070D                     	;# 
   542     070E                     	;# 
   543     070F                     	;# 
   544     0710                     	;# 
   545     0711                     	;# 
   546     0712                     	;# 
   547     0713                     	;# 
   548     0714                     	;# 
   549     0716                     	;# 
   550     0717                     	;# 
   551     0718                     	;# 
   552     0719                     	;# 
   553     071A                     	;# 
   554     071B                     	;# 
   555     071C                     	;# 
   556     071D                     	;# 
   557     071E                     	;# 
   558     0796                     	;# 
   559     0797                     	;# 
   560     0798                     	;# 
   561     0799                     	;# 
   562     079A                     	;# 
   563     079B                     	;# 
   564     079C                     	;# 
   565     079D                     	;# 
   566     080C                     	;# 
   567     080D                     	;# 
   568     080E                     	;# 
   569     080F                     	;# 
   570     0810                     	;# 
   571     0811                     	;# 
   572     0813                     	;# 
   573     0814                     	;# 
   574     081A                     	;# 
   575     081A                     	;# 
   576     081B                     	;# 
   577     081C                     	;# 
   578     081C                     	;# 
   579     081D                     	;# 
   580     081E                     	;# 
   581     081F                     	;# 
   582     088C                     	;# 
   583     088D                     	;# 
   584     088E                     	;# 
   585     088F                     	;# 
   586     0890                     	;# 
   587     0891                     	;# 
   588     0892                     	;# 
   589     0893                     	;# 
   590     0895                     	;# 
   591     0896                     	;# 
   592     0897                     	;# 
   593     0898                     	;# 
   594     0899                     	;# 
   595     089A                     	;# 
   596     089B                     	;# 
   597     090C                     	;# 
   598     090E                     	;# 
   599     090F                     	;# 
   600     091F                     	;# 
   601     098F                     	;# 
   602     098F                     	;# 
   603     0990                     	;# 
   604     0991                     	;# 
   605     0992                     	;# 
   606     0993                     	;# 
   607     0994                     	;# 
   608     0995                     	;# 
   609     0996                     	;# 
   610     0997                     	;# 
   611     0A19                     	;# 
   612     0A19                     	;# 
   613     0A1A                     	;# 
   614     0A1A                     	;# 
   615     0A1B                     	;# 
   616     0A1B                     	;# 
   617     0A1B                     	;# 
   618     0A1C                     	;# 
   619     0A1C                     	;# 
   620     0A1D                     	;# 
   621     0A1D                     	;# 
   622     0A1E                     	;# 
   623     0A1E                     	;# 
   624     0A1F                     	;# 
   625     0A1F                     	;# 
   626     0A1F                     	;# 
   627     1E0F                     	;# 
   628     1E10                     	;# 
   629     1E11                     	;# 
   630     1E12                     	;# 
   631     1E13                     	;# 
   632     1E14                     	;# 
   633     1E15                     	;# 
   634     1E16                     	;# 
   635     1E17                     	;# 
   636     1E18                     	;# 
   637     1E19                     	;# 
   638     1E1A                     	;# 
   639     1E1B                     	;# 
   640     1E1C                     	;# 
   641     1E1D                     	;# 
   642     1E1E                     	;# 
   643     1E1F                     	;# 
   644     1E20                     	;# 
   645     1E21                     	;# 
   646     1E22                     	;# 
   647     1E23                     	;# 
   648     1E24                     	;# 
   649     1E25                     	;# 
   650     1E26                     	;# 
   651     1E27                     	;# 
   652     1E28                     	;# 
   653     1E29                     	;# 
   654     1E2A                     	;# 
   655     1E2B                     	;# 
   656     1E2C                     	;# 
   657     1E2D                     	;# 
   658     1E2E                     	;# 
   659     1E2F                     	;# 
   660     1E30                     	;# 
   661     1E31                     	;# 
   662     1E32                     	;# 
   663     1E33                     	;# 
   664     1E34                     	;# 
   665     1E35                     	;# 
   666     1E36                     	;# 
   667     1E37                     	;# 
   668     1E8F                     	;# 
   669     1E90                     	;# 
   670     1E91                     	;# 
   671     1E92                     	;# 
   672     1E93                     	;# 
   673     1E94                     	;# 
   674     1E95                     	;# 
   675     1E96                     	;# 
   676     1E97                     	;# 
   677     1E9C                     	;# 
   678     1E9D                     	;# 
   679     1E9E                     	;# 
   680     1EA1                     	;# 
   681     1EA2                     	;# 
   682     1EA3                     	;# 
   683     1EA4                     	;# 
   684     1EA5                     	;# 
   685     1EA9                     	;# 
   686     1EAA                     	;# 
   687     1EAB                     	;# 
   688     1EAC                     	;# 
   689     1EB1                     	;# 
   690     1EB2                     	;# 
   691     1EB3                     	;# 
   692     1EB8                     	;# 
   693     1EB9                     	;# 
   694     1EBA                     	;# 
   695     1EBB                     	;# 
   696     1EBC                     	;# 
   697     1EBD                     	;# 
   698     1EBE                     	;# 
   699     1EC3                     	;# 
   700     1EC5                     	;# 
   701     1EC6                     	;# 
   702     1EC7                     	;# 
   703     1EC8                     	;# 
   704     1EC9                     	;# 
   705     1ECA                     	;# 
   706     1ECB                     	;# 
   707     1ECC                     	;# 
   708     1ECD                     	;# 
   709     1ECE                     	;# 
   710     1F10                     	;# 
   711     1F11                     	;# 
   712     1F12                     	;# 
   713     1F13                     	;# 
   714     1F14                     	;# 
   715     1F15                     	;# 
   716     1F16                     	;# 
   717     1F17                     	;# 
   718     1F18                     	;# 
   719     1F19                     	;# 
   720     1F1A                     	;# 
   721     1F1B                     	;# 
   722     1F1C                     	;# 
   723     1F1D                     	;# 
   724     1F1E                     	;# 
   725     1F1F                     	;# 
   726     1F20                     	;# 
   727     1F21                     	;# 
   728     1F22                     	;# 
   729     1F23                     	;# 
   730     1F24                     	;# 
   731     1F25                     	;# 
   732     1F26                     	;# 
   733     1F27                     	;# 
   734     1F38                     	;# 
   735     1F39                     	;# 
   736     1F3A                     	;# 
   737     1F3B                     	;# 
   738     1F3C                     	;# 
   739     1F3D                     	;# 
   740     1F3E                     	;# 
   741     1F3F                     	;# 
   742     1F43                     	;# 
   743     1F44                     	;# 
   744     1F45                     	;# 
   745     1F46                     	;# 
   746     1F47                     	;# 
   747     1F48                     	;# 
   748     1F49                     	;# 
   749     1F4A                     	;# 
   750     1F4E                     	;# 
   751     1F4F                     	;# 
   752     1F50                     	;# 
   753     1F51                     	;# 
   754     1F52                     	;# 
   755     1F53                     	;# 
   756     1F54                     	;# 
   757     1F55                     	;# 
   758     1F65                     	;# 
   759     1F66                     	;# 
   760     1F67                     	;# 
   761     1F68                     	;# 
   762     1F69                     	;# 
   763     1F6A                     	;# 
   764     1F6B                     	;# 
   765     1FE4                     	;# 
   766     1FE5                     	;# 
   767     1FE6                     	;# 
   768     1FE7                     	;# 
   769     1FE8                     	;# 
   770     1FE8                     	;# 
   771     1FE9                     	;# 
   772     1FEA                     	;# 
   773     1FEB                     	;# 
   774     1FED                     	;# 
   775     1FEE                     	;# 
   776     1FEF                     	;# 
   777     0000                     	;# 
   778     0001                     	;# 
   779     0002                     	;# 
   780     0003                     	;# 
   781     0004                     	;# 
   782     0005                     	;# 
   783     0006                     	;# 
   784     0007                     	;# 
   785     0008                     	;# 
   786     0009                     	;# 
   787     000A                     	;# 
   788     000B                     	;# 
   789     000C                     	;# 
   790     000D                     	;# 
   791     000E                     	;# 
   792     0010                     	;# 
   793     0012                     	;# 
   794     0013                     	;# 
   795     0014                     	;# 
   796     0016                     	;# 
   797     0018                     	;# 
   798     0019                     	;# 
   799     001A                     	;# 
   800     001C                     	;# 
   801     008C                     	;# 
   802     008C                     	;# 
   803     008D                     	;# 
   804     008E                     	;# 
   805     008E                     	;# 
   806     008F                     	;# 
   807     0090                     	;# 
   808     0090                     	;# 
   809     0091                     	;# 
   810     0092                     	;# 
   811     0092                     	;# 
   812     0093                     	;# 
   813     0094                     	;# 
   814     0094                     	;# 
   815     0095                     	;# 
   816     0096                     	;# 
   817     0096                     	;# 
   818     0097                     	;# 
   819     0098                     	;# 
   820     0099                     	;# 
   821     009A                     	;# 
   822     009B                     	;# 
   823     009B                     	;# 
   824     009C                     	;# 
   825     009D                     	;# 
   826     009D                     	;# 
   827     009E                     	;# 
   828     009F                     	;# 
   829     010C                     	;# 
   830     010C                     	;# 
   831     010D                     	;# 
   832     010E                     	;# 
   833     010F                     	;# 
   834     010F                     	;# 
   835     0110                     	;# 
   836     0111                     	;# 
   837     0112                     	;# 
   838     0113                     	;# 
   839     0114                     	;# 
   840     0115                     	;# 
   841     0116                     	;# 
   842     0117                     	;# 
   843     0118                     	;# 
   844     0119                     	;# 
   845     0119                     	;# 
   846     0119                     	;# 
   847     011A                     	;# 
   848     011A                     	;# 
   849     011A                     	;# 
   850     011B                     	;# 
   851     011B                     	;# 
   852     011B                     	;# 
   853     011B                     	;# 
   854     011B                     	;# 
   855     011C                     	;# 
   856     011C                     	;# 
   857     011C                     	;# 
   858     011D                     	;# 
   859     011D                     	;# 
   860     011D                     	;# 
   861     011E                     	;# 
   862     011E                     	;# 
   863     011E                     	;# 
   864     011F                     	;# 
   865     011F                     	;# 
   866     011F                     	;# 
   867     011F                     	;# 
   868     011F                     	;# 
   869     018C                     	;# 
   870     018D                     	;# 
   871     018E                     	;# 
   872     018F                     	;# 
   873     0190                     	;# 
   874     0191                     	;# 
   875     0192                     	;# 
   876     0196                     	;# 
   877     0197                     	;# 
   878     0198                     	;# 
   879     0199                     	;# 
   880     019A                     	;# 
   881     019B                     	;# 
   882     019C                     	;# 
   883     020C                     	;# 
   884     020D                     	;# 
   885     020E                     	;# 
   886     020E                     	;# 
   887     020F                     	;# 
   888     020F                     	;# 
   889     0210                     	;# 
   890     0210                     	;# 
   891     0211                     	;# 
   892     0211                     	;# 
   893     0212                     	;# 
   894     0213                     	;# 
   895     0214                     	;# 
   896     0214                     	;# 
   897     0215                     	;# 
   898     0215                     	;# 
   899     0216                     	;# 
   900     0216                     	;# 
   901     0217                     	;# 
   902     0217                     	;# 
   903     0218                     	;# 
   904     0219                     	;# 
   905     021A                     	;# 
   906     021A                     	;# 
   907     021B                     	;# 
   908     021B                     	;# 
   909     021C                     	;# 
   910     021C                     	;# 
   911     021D                     	;# 
   912     021D                     	;# 
   913     021E                     	;# 
   914     021F                     	;# 
   915     028C                     	;# 
   916     028C                     	;# 
   917     028D                     	;# 
   918     028D                     	;# 
   919     028E                     	;# 
   920     028F                     	;# 
   921     0290                     	;# 
   922     0291                     	;# 
   923     0292                     	;# 
   924     0292                     	;# 
   925     0293                     	;# 
   926     0293                     	;# 
   927     0294                     	;# 
   928     0295                     	;# 
   929     0296                     	;# 
   930     0297                     	;# 
   931     0298                     	;# 
   932     0298                     	;# 
   933     0299                     	;# 
   934     0299                     	;# 
   935     029A                     	;# 
   936     029B                     	;# 
   937     029C                     	;# 
   938     029D                     	;# 
   939     029F                     	;# 
   940     030C                     	;# 
   941     030C                     	;# 
   942     030D                     	;# 
   943     030E                     	;# 
   944     030F                     	;# 
   945     0310                     	;# 
   946     0310                     	;# 
   947     0311                     	;# 
   948     0312                     	;# 
   949     0313                     	;# 
   950     0314                     	;# 
   951     0314                     	;# 
   952     0315                     	;# 
   953     0316                     	;# 
   954     0317                     	;# 
   955     0318                     	;# 
   956     0318                     	;# 
   957     0319                     	;# 
   958     031A                     	;# 
   959     031B                     	;# 
   960     031C                     	;# 
   961     031C                     	;# 
   962     031D                     	;# 
   963     031E                     	;# 
   964     031F                     	;# 
   965     038C                     	;# 
   966     038C                     	;# 
   967     038D                     	;# 
   968     038E                     	;# 
   969     0390                     	;# 
   970     0390                     	;# 
   971     0391                     	;# 
   972     0392                     	;# 
   973     048C                     	;# 
   974     048C                     	;# 
   975     048D                     	;# 
   976     048E                     	;# 
   977     048F                     	;# 
   978     048F                     	;# 
   979     0490                     	;# 
   980     0491                     	;# 
   981     0492                     	;# 
   982     0492                     	;# 
   983     0493                     	;# 
   984     0494                     	;# 
   985     0495                     	;# 
   986     0495                     	;# 
   987     0496                     	;# 
   988     0497                     	;# 
   989     0498                     	;# 
   990     0499                     	;# 
   991     049A                     	;# 
   992     049B                     	;# 
   993     049C                     	;# 
   994     049D                     	;# 
   995     050C                     	;# 
   996     050C                     	;# 
   997     050D                     	;# 
   998     050E                     	;# 
   999     050F                     	;# 
  1000     050F                     	;# 
  1001     0510                     	;# 
  1002     0511                     	;# 
  1003     0512                     	;# 
  1004     0512                     	;# 
  1005     0513                     	;# 
  1006     0514                     	;# 
  1007     0515                     	;# 
  1008     0515                     	;# 
  1009     0516                     	;# 
  1010     0517                     	;# 
  1011     0518                     	;# 
  1012     0519                     	;# 
  1013     051A                     	;# 
  1014     051B                     	;# 
  1015     051C                     	;# 
  1016     051D                     	;# 
  1017     058C                     	;# 
  1018     058C                     	;# 
  1019     058D                     	;# 
  1020     058E                     	;# 
  1021     058F                     	;# 
  1022     058F                     	;# 
  1023     0590                     	;# 
  1024     0591                     	;# 
  1025     0592                     	;# 
  1026     0593                     	;# 
  1027     059C                     	;# 
  1028     059C                     	;# 
  1029     059D                     	;# 
  1030     059D                     	;# 
  1031     059E                     	;# 
  1032     059F                     	;# 
  1033     060C                     	;# 
  1034     060C                     	;# 
  1035     060D                     	;# 
  1036     060D                     	;# 
  1037     060E                     	;# 
  1038     060F                     	;# 
  1039     0610                     	;# 
  1040     0611                     	;# 
  1041     0612                     	;# 
  1042     0613                     	;# 
  1043     0614                     	;# 
  1044     0616                     	;# 
  1045     0616                     	;# 
  1046     0617                     	;# 
  1047     0617                     	;# 
  1048     0618                     	;# 
  1049     0619                     	;# 
  1050     061A                     	;# 
  1051     061B                     	;# 
  1052     061C                     	;# 
  1053     061D                     	;# 
  1054     061E                     	;# 
  1055     068C                     	;# 
  1056     068D                     	;# 
  1057     068E                     	;# 
  1058     068F                     	;# 
  1059     0690                     	;# 
  1060     0691                     	;# 
  1061     0692                     	;# 
  1062     0693                     	;# 
  1063     0694                     	;# 
  1064     070C                     	;# 
  1065     070D                     	;# 
  1066     070E                     	;# 
  1067     070F                     	;# 
  1068     0710                     	;# 
  1069     0711                     	;# 
  1070     0712                     	;# 
  1071     0713                     	;# 
  1072     0714                     	;# 
  1073     0716                     	;# 
  1074     0717                     	;# 
  1075     0718                     	;# 
  1076     0719                     	;# 
  1077     071A                     	;# 
  1078     071B                     	;# 
  1079     071C                     	;# 
  1080     071D                     	;# 
  1081     071E                     	;# 
  1082     0796                     	;# 
  1083     0797                     	;# 
  1084     0798                     	;# 
  1085     0799                     	;# 
  1086     079A                     	;# 
  1087     079B                     	;# 
  1088     079C                     	;# 
  1089     079D                     	;# 
  1090     080C                     	;# 
  1091     080D                     	;# 
  1092     080E                     	;# 
  1093     080F                     	;# 
  1094     0810                     	;# 
  1095     0811                     	;# 
  1096     0813                     	;# 
  1097     0814                     	;# 
  1098     081A                     	;# 
  1099     081A                     	;# 
  1100     081B                     	;# 
  1101     081C                     	;# 
  1102     081C                     	;# 
  1103     081D                     	;# 
  1104     081E                     	;# 
  1105     081F                     	;# 
  1106     088C                     	;# 
  1107     088D                     	;# 
  1108     088E                     	;# 
  1109     088F                     	;# 
  1110     0890                     	;# 
  1111     0891                     	;# 
  1112     0892                     	;# 
  1113     0893                     	;# 
  1114     0895                     	;# 
  1115     0896                     	;# 
  1116     0897                     	;# 
  1117     0898                     	;# 
  1118     0899                     	;# 
  1119     089A                     	;# 
  1120     089B                     	;# 
  1121     090C                     	;# 
  1122     090E                     	;# 
  1123     090F                     	;# 
  1124     091F                     	;# 
  1125     098F                     	;# 
  1126     098F                     	;# 
  1127     0990                     	;# 
  1128     0991                     	;# 
  1129     0992                     	;# 
  1130     0993                     	;# 
  1131     0994                     	;# 
  1132     0995                     	;# 
  1133     0996                     	;# 
  1134     0997                     	;# 
  1135     0A19                     	;# 
  1136     0A19                     	;# 
  1137     0A1A                     	;# 
  1138     0A1A                     	;# 
  1139     0A1B                     	;# 
  1140     0A1B                     	;# 
  1141     0A1B                     	;# 
  1142     0A1C                     	;# 
  1143     0A1C                     	;# 
  1144     0A1D                     	;# 
  1145     0A1D                     	;# 
  1146     0A1E                     	;# 
  1147     0A1E                     	;# 
  1148     0A1F                     	;# 
  1149     0A1F                     	;# 
  1150     0A1F                     	;# 
  1151     1E0F                     	;# 
  1152     1E10                     	;# 
  1153     1E11                     	;# 
  1154     1E12                     	;# 
  1155     1E13                     	;# 
  1156     1E14                     	;# 
  1157     1E15                     	;# 
  1158     1E16                     	;# 
  1159     1E17                     	;# 
  1160     1E18                     	;# 
  1161     1E19                     	;# 
  1162     1E1A                     	;# 
  1163     1E1B                     	;# 
  1164     1E1C                     	;# 
  1165     1E1D                     	;# 
  1166     1E1E                     	;# 
  1167     1E1F                     	;# 
  1168     1E20                     	;# 
  1169     1E21                     	;# 
  1170     1E22                     	;# 
  1171     1E23                     	;# 
  1172     1E24                     	;# 
  1173     1E25                     	;# 
  1174     1E26                     	;# 
  1175     1E27                     	;# 
  1176     1E28                     	;# 
  1177     1E29                     	;# 
  1178     1E2A                     	;# 
  1179     1E2B                     	;# 
  1180     1E2C                     	;# 
  1181     1E2D                     	;# 
  1182     1E2E                     	;# 
  1183     1E2F                     	;# 
  1184     1E30                     	;# 
  1185     1E31                     	;# 
  1186     1E32                     	;# 
  1187     1E33                     	;# 
  1188     1E34                     	;# 
  1189     1E35                     	;# 
  1190     1E36                     	;# 
  1191     1E37                     	;# 
  1192     1E8F                     	;# 
  1193     1E90                     	;# 
  1194     1E91                     	;# 
  1195     1E92                     	;# 
  1196     1E93                     	;# 
  1197     1E94                     	;# 
  1198     1E95                     	;# 
  1199     1E96                     	;# 
  1200     1E97                     	;# 
  1201     1E9C                     	;# 
  1202     1E9D                     	;# 
  1203     1E9E                     	;# 
  1204     1EA1                     	;# 
  1205     1EA2                     	;# 
  1206     1EA3                     	;# 
  1207     1EA4                     	;# 
  1208     1EA5                     	;# 
  1209     1EA9                     	;# 
  1210     1EAA                     	;# 
  1211     1EAB                     	;# 
  1212     1EAC                     	;# 
  1213     1EB1                     	;# 
  1214     1EB2                     	;# 
  1215     1EB3                     	;# 
  1216     1EB8                     	;# 
  1217     1EB9                     	;# 
  1218     1EBA                     	;# 
  1219     1EBB                     	;# 
  1220     1EBC                     	;# 
  1221     1EBD                     	;# 
  1222     1EBE                     	;# 
  1223     1EC3                     	;# 
  1224     1EC5                     	;# 
  1225     1EC6                     	;# 
  1226     1EC7                     	;# 
  1227     1EC8                     	;# 
  1228     1EC9                     	;# 
  1229     1ECA                     	;# 
  1230     1ECB                     	;# 
  1231     1ECC                     	;# 
  1232     1ECD                     	;# 
  1233     1ECE                     	;# 
  1234     1F10                     	;# 
  1235     1F11                     	;# 
  1236     1F12                     	;# 
  1237     1F13                     	;# 
  1238     1F14                     	;# 
  1239     1F15                     	;# 
  1240     1F16                     	;# 
  1241     1F17                     	;# 
  1242     1F18                     	;# 
  1243     1F19                     	;# 
  1244     1F1A                     	;# 
  1245     1F1B                     	;# 
  1246     1F1C                     	;# 
  1247     1F1D                     	;# 
  1248     1F1E                     	;# 
  1249     1F1F                     	;# 
  1250     1F20                     	;# 
  1251     1F21                     	;# 
  1252     1F22                     	;# 
  1253     1F23                     	;# 
  1254     1F24                     	;# 
  1255     1F25                     	;# 
  1256     1F26                     	;# 
  1257     1F27                     	;# 
  1258     1F38                     	;# 
  1259     1F39                     	;# 
  1260     1F3A                     	;# 
  1261     1F3B                     	;# 
  1262     1F3C                     	;# 
  1263     1F3D                     	;# 
  1264     1F3E                     	;# 
  1265     1F3F                     	;# 
  1266     1F43                     	;# 
  1267     1F44                     	;# 
  1268     1F45                     	;# 
  1269     1F46                     	;# 
  1270     1F47                     	;# 
  1271     1F48                     	;# 
  1272     1F49                     	;# 
  1273     1F4A                     	;# 
  1274     1F4E                     	;# 
  1275     1F4F                     	;# 
  1276     1F50                     	;# 
  1277     1F51                     	;# 
  1278     1F52                     	;# 
  1279     1F53                     	;# 
  1280     1F54                     	;# 
  1281     1F55                     	;# 
  1282     1F65                     	;# 
  1283     1F66                     	;# 
  1284     1F67                     	;# 
  1285     1F68                     	;# 
  1286     1F69                     	;# 
  1287     1F6A                     	;# 
  1288     1F6B                     	;# 
  1289     1FE4                     	;# 
  1290     1FE5                     	;# 
  1291     1FE6                     	;# 
  1292     1FE7                     	;# 
  1293     1FE8                     	;# 
  1294     1FE8                     	;# 
  1295     1FE9                     	;# 
  1296     1FEA                     	;# 
  1297     1FEB                     	;# 
  1298     1FED                     	;# 
  1299     1FEE                     	;# 
  1300     1FEF                     	;# 
  1301     0000                     	;# 
  1302     0001                     	;# 
  1303     0002                     	;# 
  1304     0003                     	;# 
  1305     0004                     	;# 
  1306     0005                     	;# 
  1307     0006                     	;# 
  1308     0007                     	;# 
  1309     0008                     	;# 
  1310     0009                     	;# 
  1311     000A                     	;# 
  1312     000B                     	;# 
  1313     000C                     	;# 
  1314     000D                     	;# 
  1315     000E                     	;# 
  1316     0010                     	;# 
  1317     0012                     	;# 
  1318     0013                     	;# 
  1319     0014                     	;# 
  1320     0016                     	;# 
  1321     0018                     	;# 
  1322     0019                     	;# 
  1323     001A                     	;# 
  1324     001C                     	;# 
  1325     008C                     	;# 
  1326     008C                     	;# 
  1327     008D                     	;# 
  1328     008E                     	;# 
  1329     008E                     	;# 
  1330     008F                     	;# 
  1331     0090                     	;# 
  1332     0090                     	;# 
  1333     0091                     	;# 
  1334     0092                     	;# 
  1335     0092                     	;# 
  1336     0093                     	;# 
  1337     0094                     	;# 
  1338     0094                     	;# 
  1339     0095                     	;# 
  1340     0096                     	;# 
  1341     0096                     	;# 
  1342     0097                     	;# 
  1343     0098                     	;# 
  1344     0099                     	;# 
  1345     009A                     	;# 
  1346     009B                     	;# 
  1347     009B                     	;# 
  1348     009C                     	;# 
  1349     009D                     	;# 
  1350     009D                     	;# 
  1351     009E                     	;# 
  1352     009F                     	;# 
  1353     010C                     	;# 
  1354     010C                     	;# 
  1355     010D                     	;# 
  1356     010E                     	;# 
  1357     010F                     	;# 
  1358     010F                     	;# 
  1359     0110                     	;# 
  1360     0111                     	;# 
  1361     0112                     	;# 
  1362     0113                     	;# 
  1363     0114                     	;# 
  1364     0115                     	;# 
  1365     0116                     	;# 
  1366     0117                     	;# 
  1367     0118                     	;# 
  1368     0119                     	;# 
  1369     0119                     	;# 
  1370     0119                     	;# 
  1371     011A                     	;# 
  1372     011A                     	;# 
  1373     011A                     	;# 
  1374     011B                     	;# 
  1375     011B                     	;# 
  1376     011B                     	;# 
  1377     011B                     	;# 
  1378     011B                     	;# 
  1379     011C                     	;# 
  1380     011C                     	;# 
  1381     011C                     	;# 
  1382     011D                     	;# 
  1383     011D                     	;# 
  1384     011D                     	;# 
  1385     011E                     	;# 
  1386     011E                     	;# 
  1387     011E                     	;# 
  1388     011F                     	;# 
  1389     011F                     	;# 
  1390     011F                     	;# 
  1391     011F                     	;# 
  1392     011F                     	;# 
  1393     018C                     	;# 
  1394     018D                     	;# 
  1395     018E                     	;# 
  1396     018F                     	;# 
  1397     0190                     	;# 
  1398     0191                     	;# 
  1399     0192                     	;# 
  1400     0196                     	;# 
  1401     0197                     	;# 
  1402     0198                     	;# 
  1403     0199                     	;# 
  1404     019A                     	;# 
  1405     019B                     	;# 
  1406     019C                     	;# 
  1407     020C                     	;# 
  1408     020D                     	;# 
  1409     020E                     	;# 
  1410     020E                     	;# 
  1411     020F                     	;# 
  1412     020F                     	;# 
  1413     0210                     	;# 
  1414     0210                     	;# 
  1415     0211                     	;# 
  1416     0211                     	;# 
  1417     0212                     	;# 
  1418     0213                     	;# 
  1419     0214                     	;# 
  1420     0214                     	;# 
  1421     0215                     	;# 
  1422     0215                     	;# 
  1423     0216                     	;# 
  1424     0216                     	;# 
  1425     0217                     	;# 
  1426     0217                     	;# 
  1427     0218                     	;# 
  1428     0219                     	;# 
  1429     021A                     	;# 
  1430     021A                     	;# 
  1431     021B                     	;# 
  1432     021B                     	;# 
  1433     021C                     	;# 
  1434     021C                     	;# 
  1435     021D                     	;# 
  1436     021D                     	;# 
  1437     021E                     	;# 
  1438     021F                     	;# 
  1439     028C                     	;# 
  1440     028C                     	;# 
  1441     028D                     	;# 
  1442     028D                     	;# 
  1443     028E                     	;# 
  1444     028F                     	;# 
  1445     0290                     	;# 
  1446     0291                     	;# 
  1447     0292                     	;# 
  1448     0292                     	;# 
  1449     0293                     	;# 
  1450     0293                     	;# 
  1451     0294                     	;# 
  1452     0295                     	;# 
  1453     0296                     	;# 
  1454     0297                     	;# 
  1455     0298                     	;# 
  1456     0298                     	;# 
  1457     0299                     	;# 
  1458     0299                     	;# 
  1459     029A                     	;# 
  1460     029B                     	;# 
  1461     029C                     	;# 
  1462     029D                     	;# 
  1463     029F                     	;# 
  1464     030C                     	;# 
  1465     030C                     	;# 
  1466     030D                     	;# 
  1467     030E                     	;# 
  1468     030F                     	;# 
  1469     0310                     	;# 
  1470     0310                     	;# 
  1471     0311                     	;# 
  1472     0312                     	;# 
  1473     0313                     	;# 
  1474     0314                     	;# 
  1475     0314                     	;# 
  1476     0315                     	;# 
  1477     0316                     	;# 
  1478     0317                     	;# 
  1479     0318                     	;# 
  1480     0318                     	;# 
  1481     0319                     	;# 
  1482     031A                     	;# 
  1483     031B                     	;# 
  1484     031C                     	;# 
  1485     031C                     	;# 
  1486     031D                     	;# 
  1487     031E                     	;# 
  1488     031F                     	;# 
  1489     038C                     	;# 
  1490     038C                     	;# 
  1491     038D                     	;# 
  1492     038E                     	;# 
  1493     0390                     	;# 
  1494     0390                     	;# 
  1495     0391                     	;# 
  1496     0392                     	;# 
  1497     048C                     	;# 
  1498     048C                     	;# 
  1499     048D                     	;# 
  1500     048E                     	;# 
  1501     048F                     	;# 
  1502     048F                     	;# 
  1503     0490                     	;# 
  1504     0491                     	;# 
  1505     0492                     	;# 
  1506     0492                     	;# 
  1507     0493                     	;# 
  1508     0494                     	;# 
  1509     0495                     	;# 
  1510     0495                     	;# 
  1511     0496                     	;# 
  1512     0497                     	;# 
  1513     0498                     	;# 
  1514     0499                     	;# 
  1515     049A                     	;# 
  1516     049B                     	;# 
  1517     049C                     	;# 
  1518     049D                     	;# 
  1519     050C                     	;# 
  1520     050C                     	;# 
  1521     050D                     	;# 
  1522     050E                     	;# 
  1523     050F                     	;# 
  1524     050F                     	;# 
  1525     0510                     	;# 
  1526     0511                     	;# 
  1527     0512                     	;# 
  1528     0512                     	;# 
  1529     0513                     	;# 
  1530     0514                     	;# 
  1531     0515                     	;# 
  1532     0515                     	;# 
  1533     0516                     	;# 
  1534     0517                     	;# 
  1535     0518                     	;# 
  1536     0519                     	;# 
  1537     051A                     	;# 
  1538     051B                     	;# 
  1539     051C                     	;# 
  1540     051D                     	;# 
  1541     058C                     	;# 
  1542     058C                     	;# 
  1543     058D                     	;# 
  1544     058E                     	;# 
  1545     058F                     	;# 
  1546     058F                     	;# 
  1547     0590                     	;# 
  1548     0591                     	;# 
  1549     0592                     	;# 
  1550     0593                     	;# 
  1551     059C                     	;# 
  1552     059C                     	;# 
  1553     059D                     	;# 
  1554     059D                     	;# 
  1555     059E                     	;# 
  1556     059F                     	;# 
  1557     060C                     	;# 
  1558     060C                     	;# 
  1559     060D                     	;# 
  1560     060D                     	;# 
  1561     060E                     	;# 
  1562     060F                     	;# 
  1563     0610                     	;# 
  1564     0611                     	;# 
  1565     0612                     	;# 
  1566     0613                     	;# 
  1567     0614                     	;# 
  1568     0616                     	;# 
  1569     0616                     	;# 
  1570     0617                     	;# 
  1571     0617                     	;# 
  1572     0618                     	;# 
  1573     0619                     	;# 
  1574     061A                     	;# 
  1575     061B                     	;# 
  1576     061C                     	;# 
  1577     061D                     	;# 
  1578     061E                     	;# 
  1579     068C                     	;# 
  1580     068D                     	;# 
  1581     068E                     	;# 
  1582     068F                     	;# 
  1583     0690                     	;# 
  1584     0691                     	;# 
  1585     0692                     	;# 
  1586     0693                     	;# 
  1587     0694                     	;# 
  1588     070C                     	;# 
  1589     070D                     	;# 
  1590     070E                     	;# 
  1591     070F                     	;# 
  1592     0710                     	;# 
  1593     0711                     	;# 
  1594     0712                     	;# 
  1595     0713                     	;# 
  1596     0714                     	;# 
  1597     0716                     	;# 
  1598     0717                     	;# 
  1599     0718                     	;# 
  1600     0719                     	;# 
  1601     071A                     	;# 
  1602     071B                     	;# 
  1603     071C                     	;# 
  1604     071D                     	;# 
  1605     071E                     	;# 
  1606     0796                     	;# 
  1607     0797                     	;# 
  1608     0798                     	;# 
  1609     0799                     	;# 
  1610     079A                     	;# 
  1611     079B                     	;# 
  1612     079C                     	;# 
  1613     079D                     	;# 
  1614     080C                     	;# 
  1615     080D                     	;# 
  1616     080E                     	;# 
  1617     080F                     	;# 
  1618     0810                     	;# 
  1619     0811                     	;# 
  1620     0813                     	;# 
  1621     0814                     	;# 
  1622     081A                     	;# 
  1623     081A                     	;# 
  1624     081B                     	;# 
  1625     081C                     	;# 
  1626     081C                     	;# 
  1627     081D                     	;# 
  1628     081E                     	;# 
  1629     081F                     	;# 
  1630     088C                     	;# 
  1631     088D                     	;# 
  1632     088E                     	;# 
  1633     088F                     	;# 
  1634     0890                     	;# 
  1635     0891                     	;# 
  1636     0892                     	;# 
  1637     0893                     	;# 
  1638     0895                     	;# 
  1639     0896                     	;# 
  1640     0897                     	;# 
  1641     0898                     	;# 
  1642     0899                     	;# 
  1643     089A                     	;# 
  1644     089B                     	;# 
  1645     090C                     	;# 
  1646     090E                     	;# 
  1647     090F                     	;# 
  1648     091F                     	;# 
  1649     098F                     	;# 
  1650     098F                     	;# 
  1651     0990                     	;# 
  1652     0991                     	;# 
  1653     0992                     	;# 
  1654     0993                     	;# 
  1655     0994                     	;# 
  1656     0995                     	;# 
  1657     0996                     	;# 
  1658     0997                     	;# 
  1659     0A19                     	;# 
  1660     0A19                     	;# 
  1661     0A1A                     	;# 
  1662     0A1A                     	;# 
  1663     0A1B                     	;# 
  1664     0A1B                     	;# 
  1665     0A1B                     	;# 
  1666     0A1C                     	;# 
  1667     0A1C                     	;# 
  1668     0A1D                     	;# 
  1669     0A1D                     	;# 
  1670     0A1E                     	;# 
  1671     0A1E                     	;# 
  1672     0A1F                     	;# 
  1673     0A1F                     	;# 
  1674     0A1F                     	;# 
  1675     1E0F                     	;# 
  1676     1E10                     	;# 
  1677     1E11                     	;# 
  1678     1E12                     	;# 
  1679     1E13                     	;# 
  1680     1E14                     	;# 
  1681     1E15                     	;# 
  1682     1E16                     	;# 
  1683     1E17                     	;# 
  1684     1E18                     	;# 
  1685     1E19                     	;# 
  1686     1E1A                     	;# 
  1687     1E1B                     	;# 
  1688     1E1C                     	;# 
  1689     1E1D                     	;# 
  1690     1E1E                     	;# 
  1691     1E1F                     	;# 
  1692     1E20                     	;# 
  1693     1E21                     	;# 
  1694     1E22                     	;# 
  1695     1E23                     	;# 
  1696     1E24                     	;# 
  1697     1E25                     	;# 
  1698     1E26                     	;# 
  1699     1E27                     	;# 
  1700     1E28                     	;# 
  1701     1E29                     	;# 
  1702     1E2A                     	;# 
  1703     1E2B                     	;# 
  1704     1E2C                     	;# 
  1705     1E2D                     	;# 
  1706     1E2E                     	;# 
  1707     1E2F                     	;# 
  1708     1E30                     	;# 
  1709     1E31                     	;# 
  1710     1E32                     	;# 
  1711     1E33                     	;# 
  1712     1E34                     	;# 
  1713     1E35                     	;# 
  1714     1E36                     	;# 
  1715     1E37                     	;# 
  1716     1E8F                     	;# 
  1717     1E90                     	;# 
  1718     1E91                     	;# 
  1719     1E92                     	;# 
  1720     1E93                     	;# 
  1721     1E94                     	;# 
  1722     1E95                     	;# 
  1723     1E96                     	;# 
  1724     1E97                     	;# 
  1725     1E9C                     	;# 
  1726     1E9D                     	;# 
  1727     1E9E                     	;# 
  1728     1EA1                     	;# 
  1729     1EA2                     	;# 
  1730     1EA3                     	;# 
  1731     1EA4                     	;# 
  1732     1EA5                     	;# 
  1733     1EA9                     	;# 
  1734     1EAA                     	;# 
  1735     1EAB                     	;# 
  1736     1EAC                     	;# 
  1737     1EB1                     	;# 
  1738     1EB2                     	;# 
  1739     1EB3                     	;# 
  1740     1EB8                     	;# 
  1741     1EB9                     	;# 
  1742     1EBA                     	;# 
  1743     1EBB                     	;# 
  1744     1EBC                     	;# 
  1745     1EBD                     	;# 
  1746     1EBE                     	;# 
  1747     1EC3                     	;# 
  1748     1EC5                     	;# 
  1749     1EC6                     	;# 
  1750     1EC7                     	;# 
  1751     1EC8                     	;# 
  1752     1EC9                     	;# 
  1753     1ECA                     	;# 
  1754     1ECB                     	;# 
  1755     1ECC                     	;# 
  1756     1ECD                     	;# 
  1757     1ECE                     	;# 
  1758     1F10                     	;# 
  1759     1F11                     	;# 
  1760     1F12                     	;# 
  1761     1F13                     	;# 
  1762     1F14                     	;# 
  1763     1F15                     	;# 
  1764     1F16                     	;# 
  1765     1F17                     	;# 
  1766     1F18                     	;# 
  1767     1F19                     	;# 
  1768     1F1A                     	;# 
  1769     1F1B                     	;# 
  1770     1F1C                     	;# 
  1771     1F1D                     	;# 
  1772     1F1E                     	;# 
  1773     1F1F                     	;# 
  1774     1F20                     	;# 
  1775     1F21                     	;# 
  1776     1F22                     	;# 
  1777     1F23                     	;# 
  1778     1F24                     	;# 
  1779     1F25                     	;# 
  1780     1F26                     	;# 
  1781     1F27                     	;# 
  1782     1F38                     	;# 
  1783     1F39                     	;# 
  1784     1F3A                     	;# 
  1785     1F3B                     	;# 
  1786     1F3C                     	;# 
  1787     1F3D                     	;# 
  1788     1F3E                     	;# 
  1789     1F3F                     	;# 
  1790     1F43                     	;# 
  1791     1F44                     	;# 
  1792     1F45                     	;# 
  1793     1F46                     	;# 
  1794     1F47                     	;# 
  1795     1F48                     	;# 
  1796     1F49                     	;# 
  1797     1F4A                     	;# 
  1798     1F4E                     	;# 
  1799     1F4F                     	;# 
  1800     1F50                     	;# 
  1801     1F51                     	;# 
  1802     1F52                     	;# 
  1803     1F53                     	;# 
  1804     1F54                     	;# 
  1805     1F55                     	;# 
  1806     1F65                     	;# 
  1807     1F66                     	;# 
  1808     1F67                     	;# 
  1809     1F68                     	;# 
  1810     1F69                     	;# 
  1811     1F6A                     	;# 
  1812     1F6B                     	;# 
  1813     1FE4                     	;# 
  1814     1FE5                     	;# 
  1815     1FE6                     	;# 
  1816     1FE7                     	;# 
  1817     1FE8                     	;# 
  1818     1FE8                     	;# 
  1819     1FE9                     	;# 
  1820     1FEA                     	;# 
  1821     1FEB                     	;# 
  1822     1FED                     	;# 
  1823     1FEE                     	;# 
  1824     1FEF                     	;# 
  1825     0000                     	;# 
  1826     0001                     	;# 
  1827     0002                     	;# 
  1828     0003                     	;# 
  1829     0004                     	;# 
  1830     0005                     	;# 
  1831     0006                     	;# 
  1832     0007                     	;# 
  1833     0008                     	;# 
  1834     0009                     	;# 
  1835     000A                     	;# 
  1836     000B                     	;# 
  1837     000C                     	;# 
  1838     000D                     	;# 
  1839     000E                     	;# 
  1840     0010                     	;# 
  1841     0012                     	;# 
  1842     0013                     	;# 
  1843     0014                     	;# 
  1844     0016                     	;# 
  1845     0018                     	;# 
  1846     0019                     	;# 
  1847     001A                     	;# 
  1848     001C                     	;# 
  1849     008C                     	;# 
  1850     008C                     	;# 
  1851     008D                     	;# 
  1852     008E                     	;# 
  1853     008E                     	;# 
  1854     008F                     	;# 
  1855     0090                     	;# 
  1856     0090                     	;# 
  1857     0091                     	;# 
  1858     0092                     	;# 
  1859     0092                     	;# 
  1860     0093                     	;# 
  1861     0094                     	;# 
  1862     0094                     	;# 
  1863     0095                     	;# 
  1864     0096                     	;# 
  1865     0096                     	;# 
  1866     0097                     	;# 
  1867     0098                     	;# 
  1868     0099                     	;# 
  1869     009A                     	;# 
  1870     009B                     	;# 
  1871     009B                     	;# 
  1872     009C                     	;# 
  1873     009D                     	;# 
  1874     009D                     	;# 
  1875     009E                     	;# 
  1876     009F                     	;# 
  1877     010C                     	;# 
  1878     010C                     	;# 
  1879     010D                     	;# 
  1880     010E                     	;# 
  1881     010F                     	;# 
  1882     010F                     	;# 
  1883     0110                     	;# 
  1884     0111                     	;# 
  1885     0112                     	;# 
  1886     0113                     	;# 
  1887     0114                     	;# 
  1888     0115                     	;# 
  1889     0116                     	;# 
  1890     0117                     	;# 
  1891     0118                     	;# 
  1892     0119                     	;# 
  1893     0119                     	;# 
  1894     0119                     	;# 
  1895     011A                     	;# 
  1896     011A                     	;# 
  1897     011A                     	;# 
  1898     011B                     	;# 
  1899     011B                     	;# 
  1900     011B                     	;# 
  1901     011B                     	;# 
  1902     011B                     	;# 
  1903     011C                     	;# 
  1904     011C                     	;# 
  1905     011C                     	;# 
  1906     011D                     	;# 
  1907     011D                     	;# 
  1908     011D                     	;# 
  1909     011E                     	;# 
  1910     011E                     	;# 
  1911     011E                     	;# 
  1912     011F                     	;# 
  1913     011F                     	;# 
  1914     011F                     	;# 
  1915     011F                     	;# 
  1916     011F                     	;# 
  1917     018C                     	;# 
  1918     018D                     	;# 
  1919     018E                     	;# 
  1920     018F                     	;# 
  1921     0190                     	;# 
  1922     0191                     	;# 
  1923     0192                     	;# 
  1924     0196                     	;# 
  1925     0197                     	;# 
  1926     0198                     	;# 
  1927     0199                     	;# 
  1928     019A                     	;# 
  1929     019B                     	;# 
  1930     019C                     	;# 
  1931     020C                     	;# 
  1932     020D                     	;# 
  1933     020E                     	;# 
  1934     020E                     	;# 
  1935     020F                     	;# 
  1936     020F                     	;# 
  1937     0210                     	;# 
  1938     0210                     	;# 
  1939     0211                     	;# 
  1940     0211                     	;# 
  1941     0212                     	;# 
  1942     0213                     	;# 
  1943     0214                     	;# 
  1944     0214                     	;# 
  1945     0215                     	;# 
  1946     0215                     	;# 
  1947     0216                     	;# 
  1948     0216                     	;# 
  1949     0217                     	;# 
  1950     0217                     	;# 
  1951     0218                     	;# 
  1952     0219                     	;# 
  1953     021A                     	;# 
  1954     021A                     	;# 
  1955     021B                     	;# 
  1956     021B                     	;# 
  1957     021C                     	;# 
  1958     021C                     	;# 
  1959     021D                     	;# 
  1960     021D                     	;# 
  1961     021E                     	;# 
  1962     021F                     	;# 
  1963     028C                     	;# 
  1964     028C                     	;# 
  1965     028D                     	;# 
  1966     028D                     	;# 
  1967     028E                     	;# 
  1968     028F                     	;# 
  1969     0290                     	;# 
  1970     0291                     	;# 
  1971     0292                     	;# 
  1972     0292                     	;# 
  1973     0293                     	;# 
  1974     0293                     	;# 
  1975     0294                     	;# 
  1976     0295                     	;# 
  1977     0296                     	;# 
  1978     0297                     	;# 
  1979     0298                     	;# 
  1980     0298                     	;# 
  1981     0299                     	;# 
  1982     0299                     	;# 
  1983     029A                     	;# 
  1984     029B                     	;# 
  1985     029C                     	;# 
  1986     029D                     	;# 
  1987     029F                     	;# 
  1988     030C                     	;# 
  1989     030C                     	;# 
  1990     030D                     	;# 
  1991     030E                     	;# 
  1992     030F                     	;# 
  1993     0310                     	;# 
  1994     0310                     	;# 
  1995     0311                     	;# 
  1996     0312                     	;# 
  1997     0313                     	;# 
  1998     0314                     	;# 
  1999     0314                     	;# 
  2000     0315                     	;# 
  2001     0316                     	;# 
  2002     0317                     	;# 
  2003     0318                     	;# 
  2004     0318                     	;# 
  2005     0319                     	;# 
  2006     031A                     	;# 
  2007     031B                     	;# 
  2008     031C                     	;# 
  2009     031C                     	;# 
  2010     031D                     	;# 
  2011     031E                     	;# 
  2012     031F                     	;# 
  2013     038C                     	;# 
  2014     038C                     	;# 
  2015     038D                     	;# 
  2016     038E                     	;# 
  2017     0390                     	;# 
  2018     0390                     	;# 
  2019     0391                     	;# 
  2020     0392                     	;# 
  2021     048C                     	;# 
  2022     048C                     	;# 
  2023     048D                     	;# 
  2024     048E                     	;# 
  2025     048F                     	;# 
  2026     048F                     	;# 
  2027     0490                     	;# 
  2028     0491                     	;# 
  2029     0492                     	;# 
  2030     0492                     	;# 
  2031     0493                     	;# 
  2032     0494                     	;# 
  2033     0495                     	;# 
  2034     0495                     	;# 
  2035     0496                     	;# 
  2036     0497                     	;# 
  2037     0498                     	;# 
  2038     0499                     	;# 
  2039     049A                     	;# 
  2040     049B                     	;# 
  2041     049C                     	;# 
  2042     049D                     	;# 
  2043     050C                     	;# 
  2044     050C                     	;# 
  2045     050D                     	;# 
  2046     050E                     	;# 
  2047     050F                     	;# 
  2048     050F                     	;# 
  2049     0510                     	;# 
  2050     0511                     	;# 
  2051     0512                     	;# 
  2052     0512                     	;# 
  2053     0513                     	;# 
  2054     0514                     	;# 
  2055     0515                     	;# 
  2056     0515                     	;# 
  2057     0516                     	;# 
  2058     0517                     	;# 
  2059     0518                     	;# 
  2060     0519                     	;# 
  2061     051A                     	;# 
  2062     051B                     	;# 
  2063     051C                     	;# 
  2064     051D                     	;# 
  2065     058C                     	;# 
  2066     058C                     	;# 
  2067     058D                     	;# 
  2068     058E                     	;# 
  2069     058F                     	;# 
  2070     058F                     	;# 
  2071     0590                     	;# 
  2072     0591                     	;# 
  2073     0592                     	;# 
  2074     0593                     	;# 
  2075     059C                     	;# 
  2076     059C                     	;# 
  2077     059D                     	;# 
  2078     059D                     	;# 
  2079     059E                     	;# 
  2080     059F                     	;# 
  2081     060C                     	;# 
  2082     060C                     	;# 
  2083     060D                     	;# 
  2084     060D                     	;# 
  2085     060E                     	;# 
  2086     060F                     	;# 
  2087     0610                     	;# 
  2088     0611                     	;# 
  2089     0612                     	;# 
  2090     0613                     	;# 
  2091     0614                     	;# 
  2092     0616                     	;# 
  2093     0616                     	;# 
  2094     0617                     	;# 
  2095     0617                     	;# 
  2096     0618                     	;# 
  2097     0619                     	;# 
  2098     061A                     	;# 
  2099     061B                     	;# 
  2100     061C                     	;# 
  2101     061D                     	;# 
  2102     061E                     	;# 
  2103     068C                     	;# 
  2104     068D                     	;# 
  2105     068E                     	;# 
  2106     068F                     	;# 
  2107     0690                     	;# 
  2108     0691                     	;# 
  2109     0692                     	;# 
  2110     0693                     	;# 
  2111     0694                     	;# 
  2112     070C                     	;# 
  2113     070D                     	;# 
  2114     070E                     	;# 
  2115     070F                     	;# 
  2116     0710                     	;# 
  2117     0711                     	;# 
  2118     0712                     	;# 
  2119     0713                     	;# 
  2120     0714                     	;# 
  2121     0716                     	;# 
  2122     0717                     	;# 
  2123     0718                     	;# 
  2124     0719                     	;# 
  2125     071A                     	;# 
  2126     071B                     	;# 
  2127     071C                     	;# 
  2128     071D                     	;# 
  2129     071E                     	;# 
  2130     0796                     	;# 
  2131     0797                     	;# 
  2132     0798                     	;# 
  2133     0799                     	;# 
  2134     079A                     	;# 
  2135     079B                     	;# 
  2136     079C                     	;# 
  2137     079D                     	;# 
  2138     080C                     	;# 
  2139     080D                     	;# 
  2140     080E                     	;# 
  2141     080F                     	;# 
  2142     0810                     	;# 
  2143     0811                     	;# 
  2144     0813                     	;# 
  2145     0814                     	;# 
  2146     081A                     	;# 
  2147     081A                     	;# 
  2148     081B                     	;# 
  2149     081C                     	;# 
  2150     081C                     	;# 
  2151     081D                     	;# 
  2152     081E                     	;# 
  2153     081F                     	;# 
  2154     088C                     	;# 
  2155     088D                     	;# 
  2156     088E                     	;# 
  2157     088F                     	;# 
  2158     0890                     	;# 
  2159     0891                     	;# 
  2160     0892                     	;# 
  2161     0893                     	;# 
  2162     0895                     	;# 
  2163     0896                     	;# 
  2164     0897                     	;# 
  2165     0898                     	;# 
  2166     0899                     	;# 
  2167     089A                     	;# 
  2168     089B                     	;# 
  2169     090C                     	;# 
  2170     090E                     	;# 
  2171     090F                     	;# 
  2172     091F                     	;# 
  2173     098F                     	;# 
  2174     098F                     	;# 
  2175     0990                     	;# 
  2176     0991                     	;# 
  2177     0992                     	;# 
  2178     0993                     	;# 
  2179     0994                     	;# 
  2180     0995                     	;# 
  2181     0996                     	;# 
  2182     0997                     	;# 
  2183     0A19                     	;# 
  2184     0A19                     	;# 
  2185     0A1A                     	;# 
  2186     0A1A                     	;# 
  2187     0A1B                     	;# 
  2188     0A1B                     	;# 
  2189     0A1B                     	;# 
  2190     0A1C                     	;# 
  2191     0A1C                     	;# 
  2192     0A1D                     	;# 
  2193     0A1D                     	;# 
  2194     0A1E                     	;# 
  2195     0A1E                     	;# 
  2196     0A1F                     	;# 
  2197     0A1F                     	;# 
  2198     0A1F                     	;# 
  2199     1E0F                     	;# 
  2200     1E10                     	;# 
  2201     1E11                     	;# 
  2202     1E12                     	;# 
  2203     1E13                     	;# 
  2204     1E14                     	;# 
  2205     1E15                     	;# 
  2206     1E16                     	;# 
  2207     1E17                     	;# 
  2208     1E18                     	;# 
  2209     1E19                     	;# 
  2210     1E1A                     	;# 
  2211     1E1B                     	;# 
  2212     1E1C                     	;# 
  2213     1E1D                     	;# 
  2214     1E1E                     	;# 
  2215     1E1F                     	;# 
  2216     1E20                     	;# 
  2217     1E21                     	;# 
  2218     1E22                     	;# 
  2219     1E23                     	;# 
  2220     1E24                     	;# 
  2221     1E25                     	;# 
  2222     1E26                     	;# 
  2223     1E27                     	;# 
  2224     1E28                     	;# 
  2225     1E29                     	;# 
  2226     1E2A                     	;# 
  2227     1E2B                     	;# 
  2228     1E2C                     	;# 
  2229     1E2D                     	;# 
  2230     1E2E                     	;# 
  2231     1E2F                     	;# 
  2232     1E30                     	;# 
  2233     1E31                     	;# 
  2234     1E32                     	;# 
  2235     1E33                     	;# 
  2236     1E34                     	;# 
  2237     1E35                     	;# 
  2238     1E36                     	;# 
  2239     1E37                     	;# 
  2240     1E8F                     	;# 
  2241     1E90                     	;# 
  2242     1E91                     	;# 
  2243     1E92                     	;# 
  2244     1E93                     	;# 
  2245     1E94                     	;# 
  2246     1E95                     	;# 
  2247     1E96                     	;# 
  2248     1E97                     	;# 
  2249     1E9C                     	;# 
  2250     1E9D                     	;# 
  2251     1E9E                     	;# 
  2252     1EA1                     	;# 
  2253     1EA2                     	;# 
  2254     1EA3                     	;# 
  2255     1EA4                     	;# 
  2256     1EA5                     	;# 
  2257     1EA9                     	;# 
  2258     1EAA                     	;# 
  2259     1EAB                     	;# 
  2260     1EAC                     	;# 
  2261     1EB1                     	;# 
  2262     1EB2                     	;# 
  2263     1EB3                     	;# 
  2264     1EB8                     	;# 
  2265     1EB9                     	;# 
  2266     1EBA                     	;# 
  2267     1EBB                     	;# 
  2268     1EBC                     	;# 
  2269     1EBD                     	;# 
  2270     1EBE                     	;# 
  2271     1EC3                     	;# 
  2272     1EC5                     	;# 
  2273     1EC6                     	;# 
  2274     1EC7                     	;# 
  2275     1EC8                     	;# 
  2276     1EC9                     	;# 
  2277     1ECA                     	;# 
  2278     1ECB                     	;# 
  2279     1ECC                     	;# 
  2280     1ECD                     	;# 
  2281     1ECE                     	;# 
  2282     1F10                     	;# 
  2283     1F11                     	;# 
  2284     1F12                     	;# 
  2285     1F13                     	;# 
  2286     1F14                     	;# 
  2287     1F15                     	;# 
  2288     1F16                     	;# 
  2289     1F17                     	;# 
  2290     1F18                     	;# 
  2291     1F19                     	;# 
  2292     1F1A                     	;# 
  2293     1F1B                     	;# 
  2294     1F1C                     	;# 
  2295     1F1D                     	;# 
  2296     1F1E                     	;# 
  2297     1F1F                     	;# 
  2298     1F20                     	;# 
  2299     1F21                     	;# 
  2300     1F22                     	;# 
  2301     1F23                     	;# 
  2302     1F24                     	;# 
  2303     1F25                     	;# 
  2304     1F26                     	;# 
  2305     1F27                     	;# 
  2306     1F38                     	;# 
  2307     1F39                     	;# 
  2308     1F3A                     	;# 
  2309     1F3B                     	;# 
  2310     1F3C                     	;# 
  2311     1F3D                     	;# 
  2312     1F3E                     	;# 
  2313     1F3F                     	;# 
  2314     1F43                     	;# 
  2315     1F44                     	;# 
  2316     1F45                     	;# 
  2317     1F46                     	;# 
  2318     1F47                     	;# 
  2319     1F48                     	;# 
  2320     1F49                     	;# 
  2321     1F4A                     	;# 
  2322     1F4E                     	;# 
  2323     1F4F                     	;# 
  2324     1F50                     	;# 
  2325     1F51                     	;# 
  2326     1F52                     	;# 
  2327     1F53                     	;# 
  2328     1F54                     	;# 
  2329     1F55                     	;# 
  2330     1F65                     	;# 
  2331     1F66                     	;# 
  2332     1F67                     	;# 
  2333     1F68                     	;# 
  2334     1F69                     	;# 
  2335     1F6A                     	;# 
  2336     1F6B                     	;# 
  2337     1FE4                     	;# 
  2338     1FE5                     	;# 
  2339     1FE6                     	;# 
  2340     1FE7                     	;# 
  2341     1FE8                     	;# 
  2342     1FE8                     	;# 
  2343     1FE9                     	;# 
  2344     1FEA                     	;# 
  2345     1FEB                     	;# 
  2346     1FED                     	;# 
  2347     1FEE                     	;# 
  2348     1FEF                     	;# 
  2349     0000                     	;# 
  2350     0001                     	;# 
  2351     0002                     	;# 
  2352     0003                     	;# 
  2353     0004                     	;# 
  2354     0005                     	;# 
  2355     0006                     	;# 
  2356     0007                     	;# 
  2357     0008                     	;# 
  2358     0009                     	;# 
  2359     000A                     	;# 
  2360     000B                     	;# 
  2361     000C                     	;# 
  2362     000D                     	;# 
  2363     000E                     	;# 
  2364     0010                     	;# 
  2365     0012                     	;# 
  2366     0013                     	;# 
  2367     0014                     	;# 
  2368     0016                     	;# 
  2369     0018                     	;# 
  2370     0019                     	;# 
  2371     001A                     	;# 
  2372     001C                     	;# 
  2373     008C                     	;# 
  2374     008C                     	;# 
  2375     008D                     	;# 
  2376     008E                     	;# 
  2377     008E                     	;# 
  2378     008F                     	;# 
  2379     0090                     	;# 
  2380     0090                     	;# 
  2381     0091                     	;# 
  2382     0092                     	;# 
  2383     0092                     	;# 
  2384     0093                     	;# 
  2385     0094                     	;# 
  2386     0094                     	;# 
  2387     0095                     	;# 
  2388     0096                     	;# 
  2389     0096                     	;# 
  2390     0097                     	;# 
  2391     0098                     	;# 
  2392     0099                     	;# 
  2393     009A                     	;# 
  2394     009B                     	;# 
  2395     009B                     	;# 
  2396     009C                     	;# 
  2397     009D                     	;# 
  2398     009D                     	;# 
  2399     009E                     	;# 
  2400     009F                     	;# 
  2401     010C                     	;# 
  2402     010C                     	;# 
  2403     010D                     	;# 
  2404     010E                     	;# 
  2405     010F                     	;# 
  2406     010F                     	;# 
  2407     0110                     	;# 
  2408     0111                     	;# 
  2409     0112                     	;# 
  2410     0113                     	;# 
  2411     0114                     	;# 
  2412     0115                     	;# 
  2413     0116                     	;# 
  2414     0117                     	;# 
  2415     0118                     	;# 
  2416     0119                     	;# 
  2417     0119                     	;# 
  2418     0119                     	;# 
  2419     011A                     	;# 
  2420     011A                     	;# 
  2421     011A                     	;# 
  2422     011B                     	;# 
  2423     011B                     	;# 
  2424     011B                     	;# 
  2425     011B                     	;# 
  2426     011B                     	;# 
  2427     011C                     	;# 
  2428     011C                     	;# 
  2429     011C                     	;# 
  2430     011D                     	;# 
  2431     011D                     	;# 
  2432     011D                     	;# 
  2433     011E                     	;# 
  2434     011E                     	;# 
  2435     011E                     	;# 
  2436     011F                     	;# 
  2437     011F                     	;# 
  2438     011F                     	;# 
  2439     011F                     	;# 
  2440     011F                     	;# 
  2441     018C                     	;# 
  2442     018D                     	;# 
  2443     018E                     	;# 
  2444     018F                     	;# 
  2445     0190                     	;# 
  2446     0191                     	;# 
  2447     0192                     	;# 
  2448     0196                     	;# 
  2449     0197                     	;# 
  2450     0198                     	;# 
  2451     0199                     	;# 
  2452     019A                     	;# 
  2453     019B                     	;# 
  2454     019C                     	;# 
  2455     020C                     	;# 
  2456     020D                     	;# 
  2457     020E                     	;# 
  2458     020E                     	;# 
  2459     020F                     	;# 
  2460     020F                     	;# 
  2461     0210                     	;# 
  2462     0210                     	;# 
  2463     0211                     	;# 
  2464     0211                     	;# 
  2465     0212                     	;# 
  2466     0213                     	;# 
  2467     0214                     	;# 
  2468     0214                     	;# 
  2469     0215                     	;# 
  2470     0215                     	;# 
  2471     0216                     	;# 
  2472     0216                     	;# 
  2473     0217                     	;# 
  2474     0217                     	;# 
  2475     0218                     	;# 
  2476     0219                     	;# 
  2477     021A                     	;# 
  2478     021A                     	;# 
  2479     021B                     	;# 
  2480     021B                     	;# 
  2481     021C                     	;# 
  2482     021C                     	;# 
  2483     021D                     	;# 
  2484     021D                     	;# 
  2485     021E                     	;# 
  2486     021F                     	;# 
  2487     028C                     	;# 
  2488     028C                     	;# 
  2489     028D                     	;# 
  2490     028D                     	;# 
  2491     028E                     	;# 
  2492     028F                     	;# 
  2493     0290                     	;# 
  2494     0291                     	;# 
  2495     0292                     	;# 
  2496     0292                     	;# 
  2497     0293                     	;# 
  2498     0293                     	;# 
  2499     0294                     	;# 
  2500     0295                     	;# 
  2501     0296                     	;# 
  2502     0297                     	;# 
  2503     0298                     	;# 
  2504     0298                     	;# 
  2505     0299                     	;# 
  2506     0299                     	;# 
  2507     029A                     	;# 
  2508     029B                     	;# 
  2509     029C                     	;# 
  2510     029D                     	;# 
  2511     029F                     	;# 
  2512     030C                     	;# 
  2513     030C                     	;# 
  2514     030D                     	;# 
  2515     030E                     	;# 
  2516     030F                     	;# 
  2517     0310                     	;# 
  2518     0310                     	;# 
  2519     0311                     	;# 
  2520     0312                     	;# 
  2521     0313                     	;# 
  2522     0314                     	;# 
  2523     0314                     	;# 
  2524     0315                     	;# 
  2525     0316                     	;# 
  2526     0317                     	;# 
  2527     0318                     	;# 
  2528     0318                     	;# 
  2529     0319                     	;# 
  2530     031A                     	;# 
  2531     031B                     	;# 
  2532     031C                     	;# 
  2533     031C                     	;# 
  2534     031D                     	;# 
  2535     031E                     	;# 
  2536     031F                     	;# 
  2537     038C                     	;# 
  2538     038C                     	;# 
  2539     038D                     	;# 
  2540     038E                     	;# 
  2541     0390                     	;# 
  2542     0390                     	;# 
  2543     0391                     	;# 
  2544     0392                     	;# 
  2545     048C                     	;# 
  2546     048C                     	;# 
  2547     048D                     	;# 
  2548     048E                     	;# 
  2549     048F                     	;# 
  2550     048F                     	;# 
  2551     0490                     	;# 
  2552     0491                     	;# 
  2553     0492                     	;# 
  2554     0492                     	;# 
  2555     0493                     	;# 
  2556     0494                     	;# 
  2557     0495                     	;# 
  2558     0495                     	;# 
  2559     0496                     	;# 
  2560     0497                     	;# 
  2561     0498                     	;# 
  2562     0499                     	;# 
  2563     049A                     	;# 
  2564     049B                     	;# 
  2565     049C                     	;# 
  2566     049D                     	;# 
  2567     050C                     	;# 
  2568     050C                     	;# 
  2569     050D                     	;# 
  2570     050E                     	;# 
  2571     050F                     	;# 
  2572     050F                     	;# 
  2573     0510                     	;# 
  2574     0511                     	;# 
  2575     0512                     	;# 
  2576     0512                     	;# 
  2577     0513                     	;# 
  2578     0514                     	;# 
  2579     0515                     	;# 
  2580     0515                     	;# 
  2581     0516                     	;# 
  2582     0517                     	;# 
  2583     0518                     	;# 
  2584     0519                     	;# 
  2585     051A                     	;# 
  2586     051B                     	;# 
  2587     051C                     	;# 
  2588     051D                     	;# 
  2589     058C                     	;# 
  2590     058C                     	;# 
  2591     058D                     	;# 
  2592     058E                     	;# 
  2593     058F                     	;# 
  2594     058F                     	;# 
  2595     0590                     	;# 
  2596     0591                     	;# 
  2597     0592                     	;# 
  2598     0593                     	;# 
  2599     059C                     	;# 
  2600     059C                     	;# 
  2601     059D                     	;# 
  2602     059D                     	;# 
  2603     059E                     	;# 
  2604     059F                     	;# 
  2605     060C                     	;# 
  2606     060C                     	;# 
  2607     060D                     	;# 
  2608     060D                     	;# 
  2609     060E                     	;# 
  2610     060F                     	;# 
  2611     0610                     	;# 
  2612     0611                     	;# 
  2613     0612                     	;# 
  2614     0613                     	;# 
  2615     0614                     	;# 
  2616     0616                     	;# 
  2617     0616                     	;# 
  2618     0617                     	;# 
  2619     0617                     	;# 
  2620     0618                     	;# 
  2621     0619                     	;# 
  2622     061A                     	;# 
  2623     061B                     	;# 
  2624     061C                     	;# 
  2625     061D                     	;# 
  2626     061E                     	;# 
  2627     068C                     	;# 
  2628     068D                     	;# 
  2629     068E                     	;# 
  2630     068F                     	;# 
  2631     0690                     	;# 
  2632     0691                     	;# 
  2633     0692                     	;# 
  2634     0693                     	;# 
  2635     0694                     	;# 
  2636     070C                     	;# 
  2637     070D                     	;# 
  2638     070E                     	;# 
  2639     070F                     	;# 
  2640     0710                     	;# 
  2641     0711                     	;# 
  2642     0712                     	;# 
  2643     0713                     	;# 
  2644     0714                     	;# 
  2645     0716                     	;# 
  2646     0717                     	;# 
  2647     0718                     	;# 
  2648     0719                     	;# 
  2649     071A                     	;# 
  2650     071B                     	;# 
  2651     071C                     	;# 
  2652     071D                     	;# 
  2653     071E                     	;# 
  2654     0796                     	;# 
  2655     0797                     	;# 
  2656     0798                     	;# 
  2657     0799                     	;# 
  2658     079A                     	;# 
  2659     079B                     	;# 
  2660     079C                     	;# 
  2661     079D                     	;# 
  2662     080C                     	;# 
  2663     080D                     	;# 
  2664     080E                     	;# 
  2665     080F                     	;# 
  2666     0810                     	;# 
  2667     0811                     	;# 
  2668     0813                     	;# 
  2669     0814                     	;# 
  2670     081A                     	;# 
  2671     081A                     	;# 
  2672     081B                     	;# 
  2673     081C                     	;# 
  2674     081C                     	;# 
  2675     081D                     	;# 
  2676     081E                     	;# 
  2677     081F                     	;# 
  2678     088C                     	;# 
  2679     088D                     	;# 
  2680     088E                     	;# 
  2681     088F                     	;# 
  2682     0890                     	;# 
  2683     0891                     	;# 
  2684     0892                     	;# 
  2685     0893                     	;# 
  2686     0895                     	;# 
  2687     0896                     	;# 
  2688     0897                     	;# 
  2689     0898                     	;# 
  2690     0899                     	;# 
  2691     089A                     	;# 
  2692     089B                     	;# 
  2693     090C                     	;# 
  2694     090E                     	;# 
  2695     090F                     	;# 
  2696     091F                     	;# 
  2697     098F                     	;# 
  2698     098F                     	;# 
  2699     0990                     	;# 
  2700     0991                     	;# 
  2701     0992                     	;# 
  2702     0993                     	;# 
  2703     0994                     	;# 
  2704     0995                     	;# 
  2705     0996                     	;# 
  2706     0997                     	;# 
  2707     0A19                     	;# 
  2708     0A19                     	;# 
  2709     0A1A                     	;# 
  2710     0A1A                     	;# 
  2711     0A1B                     	;# 
  2712     0A1B                     	;# 
  2713     0A1B                     	;# 
  2714     0A1C                     	;# 
  2715     0A1C                     	;# 
  2716     0A1D                     	;# 
  2717     0A1D                     	;# 
  2718     0A1E                     	;# 
  2719     0A1E                     	;# 
  2720     0A1F                     	;# 
  2721     0A1F                     	;# 
  2722     0A1F                     	;# 
  2723     1E0F                     	;# 
  2724     1E10                     	;# 
  2725     1E11                     	;# 
  2726     1E12                     	;# 
  2727     1E13                     	;# 
  2728     1E14                     	;# 
  2729     1E15                     	;# 
  2730     1E16                     	;# 
  2731     1E17                     	;# 
  2732     1E18                     	;# 
  2733     1E19                     	;# 
  2734     1E1A                     	;# 
  2735     1E1B                     	;# 
  2736     1E1C                     	;# 
  2737     1E1D                     	;# 
  2738     1E1E                     	;# 
  2739     1E1F                     	;# 
  2740     1E20                     	;# 
  2741     1E21                     	;# 
  2742     1E22                     	;# 
  2743     1E23                     	;# 
  2744     1E24                     	;# 
  2745     1E25                     	;# 
  2746     1E26                     	;# 
  2747     1E27                     	;# 
  2748     1E28                     	;# 
  2749     1E29                     	;# 
  2750     1E2A                     	;# 
  2751     1E2B                     	;# 
  2752     1E2C                     	;# 
  2753     1E2D                     	;# 
  2754     1E2E                     	;# 
  2755     1E2F                     	;# 
  2756     1E30                     	;# 
  2757     1E31                     	;# 
  2758     1E32                     	;# 
  2759     1E33                     	;# 
  2760     1E34                     	;# 
  2761     1E35                     	;# 
  2762     1E36                     	;# 
  2763     1E37                     	;# 
  2764     1E8F                     	;# 
  2765     1E90                     	;# 
  2766     1E91                     	;# 
  2767     1E92                     	;# 
  2768     1E93                     	;# 
  2769     1E94                     	;# 
  2770     1E95                     	;# 
  2771     1E96                     	;# 
  2772     1E97                     	;# 
  2773     1E9C                     	;# 
  2774     1E9D                     	;# 
  2775     1E9E                     	;# 
  2776     1EA1                     	;# 
  2777     1EA2                     	;# 
  2778     1EA3                     	;# 
  2779     1EA4                     	;# 
  2780     1EA5                     	;# 
  2781     1EA9                     	;# 
  2782     1EAA                     	;# 
  2783     1EAB                     	;# 
  2784     1EAC                     	;# 
  2785     1EB1                     	;# 
  2786     1EB2                     	;# 
  2787     1EB3                     	;# 
  2788     1EB8                     	;# 
  2789     1EB9                     	;# 
  2790     1EBA                     	;# 
  2791     1EBB                     	;# 
  2792     1EBC                     	;# 
  2793     1EBD                     	;# 
  2794     1EBE                     	;# 
  2795     1EC3                     	;# 
  2796     1EC5                     	;# 
  2797     1EC6                     	;# 
  2798     1EC7                     	;# 
  2799     1EC8                     	;# 
  2800     1EC9                     	;# 
  2801     1ECA                     	;# 
  2802     1ECB                     	;# 
  2803     1ECC                     	;# 
  2804     1ECD                     	;# 
  2805     1ECE                     	;# 
  2806     1F10                     	;# 
  2807     1F11                     	;# 
  2808     1F12                     	;# 
  2809     1F13                     	;# 
  2810     1F14                     	;# 
  2811     1F15                     	;# 
  2812     1F16                     	;# 
  2813     1F17                     	;# 
  2814     1F18                     	;# 
  2815     1F19                     	;# 
  2816     1F1A                     	;# 
  2817     1F1B                     	;# 
  2818     1F1C                     	;# 
  2819     1F1D                     	;# 
  2820     1F1E                     	;# 
  2821     1F1F                     	;# 
  2822     1F20                     	;# 
  2823     1F21                     	;# 
  2824     1F22                     	;# 
  2825     1F23                     	;# 
  2826     1F24                     	;# 
  2827     1F25                     	;# 
  2828     1F26                     	;# 
  2829     1F27                     	;# 
  2830     1F38                     	;# 
  2831     1F39                     	;# 
  2832     1F3A                     	;# 
  2833     1F3B                     	;# 
  2834     1F3C                     	;# 
  2835     1F3D                     	;# 
  2836     1F3E                     	;# 
  2837     1F3F                     	;# 
  2838     1F43                     	;# 
  2839     1F44                     	;# 
  2840     1F45                     	;# 
  2841     1F46                     	;# 
  2842     1F47                     	;# 
  2843     1F48                     	;# 
  2844     1F49                     	;# 
  2845     1F4A                     	;# 
  2846     1F4E                     	;# 
  2847     1F4F                     	;# 
  2848     1F50                     	;# 
  2849     1F51                     	;# 
  2850     1F52                     	;# 
  2851     1F53                     	;# 
  2852     1F54                     	;# 
  2853     1F55                     	;# 
  2854     1F65                     	;# 
  2855     1F66                     	;# 
  2856     1F67                     	;# 
  2857     1F68                     	;# 
  2858     1F69                     	;# 
  2859     1F6A                     	;# 
  2860     1F6B                     	;# 
  2861     1FE4                     	;# 
  2862     1FE5                     	;# 
  2863     1FE6                     	;# 
  2864     1FE7                     	;# 
  2865     1FE8                     	;# 
  2866     1FE8                     	;# 
  2867     1FE9                     	;# 
  2868     1FEA                     	;# 
  2869     1FEB                     	;# 
  2870     1FED                     	;# 
  2871     1FEE                     	;# 
  2872     1FEF                     	;# 
  2873     0000                     	;# 
  2874     0001                     	;# 
  2875     0002                     	;# 
  2876     0003                     	;# 
  2877     0004                     	;# 
  2878     0005                     	;# 
  2879     0006                     	;# 
  2880     0007                     	;# 
  2881     0008                     	;# 
  2882     0009                     	;# 
  2883     000A                     	;# 
  2884     000B                     	;# 
  2885     000C                     	;# 
  2886     000D                     	;# 
  2887     000E                     	;# 
  2888     0010                     	;# 
  2889     0012                     	;# 
  2890     0013                     	;# 
  2891     0014                     	;# 
  2892     0016                     	;# 
  2893     0018                     	;# 
  2894     0019                     	;# 
  2895     001A                     	;# 
  2896     001C                     	;# 
  2897     008C                     	;# 
  2898     008C                     	;# 
  2899     008D                     	;# 
  2900     008E                     	;# 
  2901     008E                     	;# 
  2902     008F                     	;# 
  2903     0090                     	;# 
  2904     0090                     	;# 
  2905     0091                     	;# 
  2906     0092                     	;# 
  2907     0092                     	;# 
  2908     0093                     	;# 
  2909     0094                     	;# 
  2910     0094                     	;# 
  2911     0095                     	;# 
  2912     0096                     	;# 
  2913     0096                     	;# 
  2914     0097                     	;# 
  2915     0098                     	;# 
  2916     0099                     	;# 
  2917     009A                     	;# 
  2918     009B                     	;# 
  2919     009B                     	;# 
  2920     009C                     	;# 
  2921     009D                     	;# 
  2922     009D                     	;# 
  2923     009E                     	;# 
  2924     009F                     	;# 
  2925     010C                     	;# 
  2926     010C                     	;# 
  2927     010D                     	;# 
  2928     010E                     	;# 
  2929     010F                     	;# 
  2930     010F                     	;# 
  2931     0110                     	;# 
  2932     0111                     	;# 
  2933     0112                     	;# 
  2934     0113                     	;# 
  2935     0114                     	;# 
  2936     0115                     	;# 
  2937     0116                     	;# 
  2938     0117                     	;# 
  2939     0118                     	;# 
  2940     0119                     	;# 
  2941     0119                     	;# 
  2942     0119                     	;# 
  2943     011A                     	;# 
  2944     011A                     	;# 
  2945     011A                     	;# 
  2946     011B                     	;# 
  2947     011B                     	;# 
  2948     011B                     	;# 
  2949     011B                     	;# 
  2950     011B                     	;# 
  2951     011C                     	;# 
  2952     011C                     	;# 
  2953     011C                     	;# 
  2954     011D                     	;# 
  2955     011D                     	;# 
  2956     011D                     	;# 
  2957     011E                     	;# 
  2958     011E                     	;# 
  2959     011E                     	;# 
  2960     011F                     	;# 
  2961     011F                     	;# 
  2962     011F                     	;# 
  2963     011F                     	;# 
  2964     011F                     	;# 
  2965     018C                     	;# 
  2966     018D                     	;# 
  2967     018E                     	;# 
  2968     018F                     	;# 
  2969     0190                     	;# 
  2970     0191                     	;# 
  2971     0192                     	;# 
  2972     0196                     	;# 
  2973     0197                     	;# 
  2974     0198                     	;# 
  2975     0199                     	;# 
  2976     019A                     	;# 
  2977     019B                     	;# 
  2978     019C                     	;# 
  2979     020C                     	;# 
  2980     020D                     	;# 
  2981     020E                     	;# 
  2982     020E                     	;# 
  2983     020F                     	;# 
  2984     020F                     	;# 
  2985     0210                     	;# 
  2986     0210                     	;# 
  2987     0211                     	;# 
  2988     0211                     	;# 
  2989     0212                     	;# 
  2990     0213                     	;# 
  2991     0214                     	;# 
  2992     0214                     	;# 
  2993     0215                     	;# 
  2994     0215                     	;# 
  2995     0216                     	;# 
  2996     0216                     	;# 
  2997     0217                     	;# 
  2998     0217                     	;# 
  2999     0218                     	;# 
  3000     0219                     	;# 
  3001     021A                     	;# 
  3002     021A                     	;# 
  3003     021B                     	;# 
  3004     021B                     	;# 
  3005     021C                     	;# 
  3006     021C                     	;# 
  3007     021D                     	;# 
  3008     021D                     	;# 
  3009     021E                     	;# 
  3010     021F                     	;# 
  3011     028C                     	;# 
  3012     028C                     	;# 
  3013     028D                     	;# 
  3014     028D                     	;# 
  3015     028E                     	;# 
  3016     028F                     	;# 
  3017     0290                     	;# 
  3018     0291                     	;# 
  3019     0292                     	;# 
  3020     0292                     	;# 
  3021     0293                     	;# 
  3022     0293                     	;# 
  3023     0294                     	;# 
  3024     0295                     	;# 
  3025     0296                     	;# 
  3026     0297                     	;# 
  3027     0298                     	;# 
  3028     0298                     	;# 
  3029     0299                     	;# 
  3030     0299                     	;# 
  3031     029A                     	;# 
  3032     029B                     	;# 
  3033     029C                     	;# 
  3034     029D                     	;# 
  3035     029F                     	;# 
  3036     030C                     	;# 
  3037     030C                     	;# 
  3038     030D                     	;# 
  3039     030E                     	;# 
  3040     030F                     	;# 
  3041     0310                     	;# 
  3042     0310                     	;# 
  3043     0311                     	;# 
  3044     0312                     	;# 
  3045     0313                     	;# 
  3046     0314                     	;# 
  3047     0314                     	;# 
  3048     0315                     	;# 
  3049     0316                     	;# 
  3050     0317                     	;# 
  3051     0318                     	;# 
  3052     0318                     	;# 
  3053     0319                     	;# 
  3054     031A                     	;# 
  3055     031B                     	;# 
  3056     031C                     	;# 
  3057     031C                     	;# 
  3058     031D                     	;# 
  3059     031E                     	;# 
  3060     031F                     	;# 
  3061     038C                     	;# 
  3062     038C                     	;# 
  3063     038D                     	;# 
  3064     038E                     	;# 
  3065     0390                     	;# 
  3066     0390                     	;# 
  3067     0391                     	;# 
  3068     0392                     	;# 
  3069     048C                     	;# 
  3070     048C                     	;# 
  3071     048D                     	;# 
  3072     048E                     	;# 
  3073     048F                     	;# 
  3074     048F                     	;# 
  3075     0490                     	;# 
  3076     0491                     	;# 
  3077     0492                     	;# 
  3078     0492                     	;# 
  3079     0493                     	;# 
  3080     0494                     	;# 
  3081     0495                     	;# 
  3082     0495                     	;# 
  3083     0496                     	;# 
  3084     0497                     	;# 
  3085     0498                     	;# 
  3086     0499                     	;# 
  3087     049A                     	;# 
  3088     049B                     	;# 
  3089     049C                     	;# 
  3090     049D                     	;# 
  3091     050C                     	;# 
  3092     050C                     	;# 
  3093     050D                     	;# 
  3094     050E                     	;# 
  3095     050F                     	;# 
  3096     050F                     	;# 
  3097     0510                     	;# 
  3098     0511                     	;# 
  3099     0512                     	;# 
  3100     0512                     	;# 
  3101     0513                     	;# 
  3102     0514                     	;# 
  3103     0515                     	;# 
  3104     0515                     	;# 
  3105     0516                     	;# 
  3106     0517                     	;# 
  3107     0518                     	;# 
  3108     0519                     	;# 
  3109     051A                     	;# 
  3110     051B                     	;# 
  3111     051C                     	;# 
  3112     051D                     	;# 
  3113     058C                     	;# 
  3114     058C                     	;# 
  3115     058D                     	;# 
  3116     058E                     	;# 
  3117     058F                     	;# 
  3118     058F                     	;# 
  3119     0590                     	;# 
  3120     0591                     	;# 
  3121     0592                     	;# 
  3122     0593                     	;# 
  3123     059C                     	;# 
  3124     059C                     	;# 
  3125     059D                     	;# 
  3126     059D                     	;# 
  3127     059E                     	;# 
  3128     059F                     	;# 
  3129     060C                     	;# 
  3130     060C                     	;# 
  3131     060D                     	;# 
  3132     060D                     	;# 
  3133     060E                     	;# 
  3134     060F                     	;# 
  3135     0610                     	;# 
  3136     0611                     	;# 
  3137     0612                     	;# 
  3138     0613                     	;# 
  3139     0614                     	;# 
  3140     0616                     	;# 
  3141     0616                     	;# 
  3142     0617                     	;# 
  3143     0617                     	;# 
  3144     0618                     	;# 
  3145     0619                     	;# 
  3146     061A                     	;# 
  3147     061B                     	;# 
  3148     061C                     	;# 
  3149     061D                     	;# 
  3150     061E                     	;# 
  3151     068C                     	;# 
  3152     068D                     	;# 
  3153     068E                     	;# 
  3154     068F                     	;# 
  3155     0690                     	;# 
  3156     0691                     	;# 
  3157     0692                     	;# 
  3158     0693                     	;# 
  3159     0694                     	;# 
  3160     070C                     	;# 
  3161     070D                     	;# 
  3162     070E                     	;# 
  3163     070F                     	;# 
  3164     0710                     	;# 
  3165     0711                     	;# 
  3166     0712                     	;# 
  3167     0713                     	;# 
  3168     0714                     	;# 
  3169     0716                     	;# 
  3170     0717                     	;# 
  3171     0718                     	;# 
  3172     0719                     	;# 
  3173     071A                     	;# 
  3174     071B                     	;# 
  3175     071C                     	;# 
  3176     071D                     	;# 
  3177     071E                     	;# 
  3178     0796                     	;# 
  3179     0797                     	;# 
  3180     0798                     	;# 
  3181     0799                     	;# 
  3182     079A                     	;# 
  3183     079B                     	;# 
  3184     079C                     	;# 
  3185     079D                     	;# 
  3186     080C                     	;# 
  3187     080D                     	;# 
  3188     080E                     	;# 
  3189     080F                     	;# 
  3190     0810                     	;# 
  3191     0811                     	;# 
  3192     0813                     	;# 
  3193     0814                     	;# 
  3194     081A                     	;# 
  3195     081A                     	;# 
  3196     081B                     	;# 
  3197     081C                     	;# 
  3198     081C                     	;# 
  3199     081D                     	;# 
  3200     081E                     	;# 
  3201     081F                     	;# 
  3202     088C                     	;# 
  3203     088D                     	;# 
  3204     088E                     	;# 
  3205     088F                     	;# 
  3206     0890                     	;# 
  3207     0891                     	;# 
  3208     0892                     	;# 
  3209     0893                     	;# 
  3210     0895                     	;# 
  3211     0896                     	;# 
  3212     0897                     	;# 
  3213     0898                     	;# 
  3214     0899                     	;# 
  3215     089A                     	;# 
  3216     089B                     	;# 
  3217     090C                     	;# 
  3218     090E                     	;# 
  3219     090F                     	;# 
  3220     091F                     	;# 
  3221     098F                     	;# 
  3222     098F                     	;# 
  3223     0990                     	;# 
  3224     0991                     	;# 
  3225     0992                     	;# 
  3226     0993                     	;# 
  3227     0994                     	;# 
  3228     0995                     	;# 
  3229     0996                     	;# 
  3230     0997                     	;# 
  3231     0A19                     	;# 
  3232     0A19                     	;# 
  3233     0A1A                     	;# 
  3234     0A1A                     	;# 
  3235     0A1B                     	;# 
  3236     0A1B                     	;# 
  3237     0A1B                     	;# 
  3238     0A1C                     	;# 
  3239     0A1C                     	;# 
  3240     0A1D                     	;# 
  3241     0A1D                     	;# 
  3242     0A1E                     	;# 
  3243     0A1E                     	;# 
  3244     0A1F                     	;# 
  3245     0A1F                     	;# 
  3246     0A1F                     	;# 
  3247     1E0F                     	;# 
  3248     1E10                     	;# 
  3249     1E11                     	;# 
  3250     1E12                     	;# 
  3251     1E13                     	;# 
  3252     1E14                     	;# 
  3253     1E15                     	;# 
  3254     1E16                     	;# 
  3255     1E17                     	;# 
  3256     1E18                     	;# 
  3257     1E19                     	;# 
  3258     1E1A                     	;# 
  3259     1E1B                     	;# 
  3260     1E1C                     	;# 
  3261     1E1D                     	;# 
  3262     1E1E                     	;# 
  3263     1E1F                     	;# 
  3264     1E20                     	;# 
  3265     1E21                     	;# 
  3266     1E22                     	;# 
  3267     1E23                     	;# 
  3268     1E24                     	;# 
  3269     1E25                     	;# 
  3270     1E26                     	;# 
  3271     1E27                     	;# 
  3272     1E28                     	;# 
  3273     1E29                     	;# 
  3274     1E2A                     	;# 
  3275     1E2B                     	;# 
  3276     1E2C                     	;# 
  3277     1E2D                     	;# 
  3278     1E2E                     	;# 
  3279     1E2F                     	;# 
  3280     1E30                     	;# 
  3281     1E31                     	;# 
  3282     1E32                     	;# 
  3283     1E33                     	;# 
  3284     1E34                     	;# 
  3285     1E35                     	;# 
  3286     1E36                     	;# 
  3287     1E37                     	;# 
  3288     1E8F                     	;# 
  3289     1E90                     	;# 
  3290     1E91                     	;# 
  3291     1E92                     	;# 
  3292     1E93                     	;# 
  3293     1E94                     	;# 
  3294     1E95                     	;# 
  3295     1E96                     	;# 
  3296     1E97                     	;# 
  3297     1E9C                     	;# 
  3298     1E9D                     	;# 
  3299     1E9E                     	;# 
  3300     1EA1                     	;# 
  3301     1EA2                     	;# 
  3302     1EA3                     	;# 
  3303     1EA4                     	;# 
  3304     1EA5                     	;# 
  3305     1EA9                     	;# 
  3306     1EAA                     	;# 
  3307     1EAB                     	;# 
  3308     1EAC                     	;# 
  3309     1EB1                     	;# 
  3310     1EB2                     	;# 
  3311     1EB3                     	;# 
  3312     1EB8                     	;# 
  3313     1EB9                     	;# 
  3314     1EBA                     	;# 
  3315     1EBB                     	;# 
  3316     1EBC                     	;# 
  3317     1EBD                     	;# 
  3318     1EBE                     	;# 
  3319     1EC3                     	;# 
  3320     1EC5                     	;# 
  3321     1EC6                     	;# 
  3322     1EC7                     	;# 
  3323     1EC8                     	;# 
  3324     1EC9                     	;# 
  3325     1ECA                     	;# 
  3326     1ECB                     	;# 
  3327     1ECC                     	;# 
  3328     1ECD                     	;# 
  3329     1ECE                     	;# 
  3330     1F10                     	;# 
  3331     1F11                     	;# 
  3332     1F12                     	;# 
  3333     1F13                     	;# 
  3334     1F14                     	;# 
  3335     1F15                     	;# 
  3336     1F16                     	;# 
  3337     1F17                     	;# 
  3338     1F18                     	;# 
  3339     1F19                     	;# 
  3340     1F1A                     	;# 
  3341     1F1B                     	;# 
  3342     1F1C                     	;# 
  3343     1F1D                     	;# 
  3344     1F1E                     	;# 
  3345     1F1F                     	;# 
  3346     1F20                     	;# 
  3347     1F21                     	;# 
  3348     1F22                     	;# 
  3349     1F23                     	;# 
  3350     1F24                     	;# 
  3351     1F25                     	;# 
  3352     1F26                     	;# 
  3353     1F27                     	;# 
  3354     1F38                     	;# 
  3355     1F39                     	;# 
  3356     1F3A                     	;# 
  3357     1F3B                     	;# 
  3358     1F3C                     	;# 
  3359     1F3D                     	;# 
  3360     1F3E                     	;# 
  3361     1F3F                     	;# 
  3362     1F43                     	;# 
  3363     1F44                     	;# 
  3364     1F45                     	;# 
  3365     1F46                     	;# 
  3366     1F47                     	;# 
  3367     1F48                     	;# 
  3368     1F49                     	;# 
  3369     1F4A                     	;# 
  3370     1F4E                     	;# 
  3371     1F4F                     	;# 
  3372     1F50                     	;# 
  3373     1F51                     	;# 
  3374     1F52                     	;# 
  3375     1F53                     	;# 
  3376     1F54                     	;# 
  3377     1F55                     	;# 
  3378     1F65                     	;# 
  3379     1F66                     	;# 
  3380     1F67                     	;# 
  3381     1F68                     	;# 
  3382     1F69                     	;# 
  3383     1F6A                     	;# 
  3384     1F6B                     	;# 
  3385     1FE4                     	;# 
  3386     1FE5                     	;# 
  3387     1FE6                     	;# 
  3388     1FE7                     	;# 
  3389     1FE8                     	;# 
  3390     1FE8                     	;# 
  3391     1FE9                     	;# 
  3392     1FEA                     	;# 
  3393     1FEB                     	;# 
  3394     1FED                     	;# 
  3395     1FEE                     	;# 
  3396     1FEF                     	;# 
  3397     0000                     	;# 
  3398     0001                     	;# 
  3399     0002                     	;# 
  3400     0003                     	;# 
  3401     0004                     	;# 
  3402     0005                     	;# 
  3403     0006                     	;# 
  3404     0007                     	;# 
  3405     0008                     	;# 
  3406     0009                     	;# 
  3407     000A                     	;# 
  3408     000B                     	;# 
  3409     000C                     	;# 
  3410     000D                     	;# 
  3411     000E                     	;# 
  3412     0010                     	;# 
  3413     0012                     	;# 
  3414     0013                     	;# 
  3415     0014                     	;# 
  3416     0016                     	;# 
  3417     0018                     	;# 
  3418     0019                     	;# 
  3419     001A                     	;# 
  3420     001C                     	;# 
  3421     008C                     	;# 
  3422     008C                     	;# 
  3423     008D                     	;# 
  3424     008E                     	;# 
  3425     008E                     	;# 
  3426     008F                     	;# 
  3427     0090                     	;# 
  3428     0090                     	;# 
  3429     0091                     	;# 
  3430     0092                     	;# 
  3431     0092                     	;# 
  3432     0093                     	;# 
  3433     0094                     	;# 
  3434     0094                     	;# 
  3435     0095                     	;# 
  3436     0096                     	;# 
  3437     0096                     	;# 
  3438     0097                     	;# 
  3439     0098                     	;# 
  3440     0099                     	;# 
  3441     009A                     	;# 
  3442     009B                     	;# 
  3443     009B                     	;# 
  3444     009C                     	;# 
  3445     009D                     	;# 
  3446     009D                     	;# 
  3447     009E                     	;# 
  3448     009F                     	;# 
  3449     010C                     	;# 
  3450     010C                     	;# 
  3451     010D                     	;# 
  3452     010E                     	;# 
  3453     010F                     	;# 
  3454     010F                     	;# 
  3455     0110                     	;# 
  3456     0111                     	;# 
  3457     0112                     	;# 
  3458     0113                     	;# 
  3459     0114                     	;# 
  3460     0115                     	;# 
  3461     0116                     	;# 
  3462     0117                     	;# 
  3463     0118                     	;# 
  3464     0119                     	;# 
  3465     0119                     	;# 
  3466     0119                     	;# 
  3467     011A                     	;# 
  3468     011A                     	;# 
  3469     011A                     	;# 
  3470     011B                     	;# 
  3471     011B                     	;# 
  3472     011B                     	;# 
  3473     011B                     	;# 
  3474     011B                     	;# 
  3475     011C                     	;# 
  3476     011C                     	;# 
  3477     011C                     	;# 
  3478     011D                     	;# 
  3479     011D                     	;# 
  3480     011D                     	;# 
  3481     011E                     	;# 
  3482     011E                     	;# 
  3483     011E                     	;# 
  3484     011F                     	;# 
  3485     011F                     	;# 
  3486     011F                     	;# 
  3487     011F                     	;# 
  3488     011F                     	;# 
  3489     018C                     	;# 
  3490     018D                     	;# 
  3491     018E                     	;# 
  3492     018F                     	;# 
  3493     0190                     	;# 
  3494     0191                     	;# 
  3495     0192                     	;# 
  3496     0196                     	;# 
  3497     0197                     	;# 
  3498     0198                     	;# 
  3499     0199                     	;# 
  3500     019A                     	;# 
  3501     019B                     	;# 
  3502     019C                     	;# 
  3503     020C                     	;# 
  3504     020D                     	;# 
  3505     020E                     	;# 
  3506     020E                     	;# 
  3507     020F                     	;# 
  3508     020F                     	;# 
  3509     0210                     	;# 
  3510     0210                     	;# 
  3511     0211                     	;# 
  3512     0211                     	;# 
  3513     0212                     	;# 
  3514     0213                     	;# 
  3515     0214                     	;# 
  3516     0214                     	;# 
  3517     0215                     	;# 
  3518     0215                     	;# 
  3519     0216                     	;# 
  3520     0216                     	;# 
  3521     0217                     	;# 
  3522     0217                     	;# 
  3523     0218                     	;# 
  3524     0219                     	;# 
  3525     021A                     	;# 
  3526     021A                     	;# 
  3527     021B                     	;# 
  3528     021B                     	;# 
  3529     021C                     	;# 
  3530     021C                     	;# 
  3531     021D                     	;# 
  3532     021D                     	;# 
  3533     021E                     	;# 
  3534     021F                     	;# 
  3535     028C                     	;# 
  3536     028C                     	;# 
  3537     028D                     	;# 
  3538     028D                     	;# 
  3539     028E                     	;# 
  3540     028F                     	;# 
  3541     0290                     	;# 
  3542     0291                     	;# 
  3543     0292                     	;# 
  3544     0292                     	;# 
  3545     0293                     	;# 
  3546     0293                     	;# 
  3547     0294                     	;# 
  3548     0295                     	;# 
  3549     0296                     	;# 
  3550     0297                     	;# 
  3551     0298                     	;# 
  3552     0298                     	;# 
  3553     0299                     	;# 
  3554     0299                     	;# 
  3555     029A                     	;# 
  3556     029B                     	;# 
  3557     029C                     	;# 
  3558     029D                     	;# 
  3559     029F                     	;# 
  3560     030C                     	;# 
  3561     030C                     	;# 
  3562     030D                     	;# 
  3563     030E                     	;# 
  3564     030F                     	;# 
  3565     0310                     	;# 
  3566     0310                     	;# 
  3567     0311                     	;# 
  3568     0312                     	;# 
  3569     0313                     	;# 
  3570     0314                     	;# 
  3571     0314                     	;# 
  3572     0315                     	;# 
  3573     0316                     	;# 
  3574     0317                     	;# 
  3575     0318                     	;# 
  3576     0318                     	;# 
  3577     0319                     	;# 
  3578     031A                     	;# 
  3579     031B                     	;# 
  3580     031C                     	;# 
  3581     031C                     	;# 
  3582     031D                     	;# 
  3583     031E                     	;# 
  3584     031F                     	;# 
  3585     038C                     	;# 
  3586     038C                     	;# 
  3587     038D                     	;# 
  3588     038E                     	;# 
  3589     0390                     	;# 
  3590     0390                     	;# 
  3591     0391                     	;# 
  3592     0392                     	;# 
  3593     048C                     	;# 
  3594     048C                     	;# 
  3595     048D                     	;# 
  3596     048E                     	;# 
  3597     048F                     	;# 
  3598     048F                     	;# 
  3599     0490                     	;# 
  3600     0491                     	;# 
  3601     0492                     	;# 
  3602     0492                     	;# 
  3603     0493                     	;# 
  3604     0494                     	;# 
  3605     0495                     	;# 
  3606     0495                     	;# 
  3607     0496                     	;# 
  3608     0497                     	;# 
  3609     0498                     	;# 
  3610     0499                     	;# 
  3611     049A                     	;# 
  3612     049B                     	;# 
  3613     049C                     	;# 
  3614     049D                     	;# 
  3615     050C                     	;# 
  3616     050C                     	;# 
  3617     050D                     	;# 
  3618     050E                     	;# 
  3619     050F                     	;# 
  3620     050F                     	;# 
  3621     0510                     	;# 
  3622     0511                     	;# 
  3623     0512                     	;# 
  3624     0512                     	;# 
  3625     0513                     	;# 
  3626     0514                     	;# 
  3627     0515                     	;# 
  3628     0515                     	;# 
  3629     0516                     	;# 
  3630     0517                     	;# 
  3631     0518                     	;# 
  3632     0519                     	;# 
  3633     051A                     	;# 
  3634     051B                     	;# 
  3635     051C                     	;# 
  3636     051D                     	;# 
  3637     058C                     	;# 
  3638     058C                     	;# 
  3639     058D                     	;# 
  3640     058E                     	;# 
  3641     058F                     	;# 
  3642     058F                     	;# 
  3643     0590                     	;# 
  3644     0591                     	;# 
  3645     0592                     	;# 
  3646     0593                     	;# 
  3647     059C                     	;# 
  3648     059C                     	;# 
  3649     059D                     	;# 
  3650     059D                     	;# 
  3651     059E                     	;# 
  3652     059F                     	;# 
  3653     060C                     	;# 
  3654     060C                     	;# 
  3655     060D                     	;# 
  3656     060D                     	;# 
  3657     060E                     	;# 
  3658     060F                     	;# 
  3659     0610                     	;# 
  3660     0611                     	;# 
  3661     0612                     	;# 
  3662     0613                     	;# 
  3663     0614                     	;# 
  3664     0616                     	;# 
  3665     0616                     	;# 
  3666     0617                     	;# 
  3667     0617                     	;# 
  3668     0618                     	;# 
  3669     0619                     	;# 
  3670     061A                     	;# 
  3671     061B                     	;# 
  3672     061C                     	;# 
  3673     061D                     	;# 
  3674     061E                     	;# 
  3675     068C                     	;# 
  3676     068D                     	;# 
  3677     068E                     	;# 
  3678     068F                     	;# 
  3679     0690                     	;# 
  3680     0691                     	;# 
  3681     0692                     	;# 
  3682     0693                     	;# 
  3683     0694                     	;# 
  3684     070C                     	;# 
  3685     070D                     	;# 
  3686     070E                     	;# 
  3687     070F                     	;# 
  3688     0710                     	;# 
  3689     0711                     	;# 
  3690     0712                     	;# 
  3691     0713                     	;# 
  3692     0714                     	;# 
  3693     0716                     	;# 
  3694     0717                     	;# 
  3695     0718                     	;# 
  3696     0719                     	;# 
  3697     071A                     	;# 
  3698     071B                     	;# 
  3699     071C                     	;# 
  3700     071D                     	;# 
  3701     071E                     	;# 
  3702     0796                     	;# 
  3703     0797                     	;# 
  3704     0798                     	;# 
  3705     0799                     	;# 
  3706     079A                     	;# 
  3707     079B                     	;# 
  3708     079C                     	;# 
  3709     079D                     	;# 
  3710     080C                     	;# 
  3711     080D                     	;# 
  3712     080E                     	;# 
  3713     080F                     	;# 
  3714     0810                     	;# 
  3715     0811                     	;# 
  3716     0813                     	;# 
  3717     0814                     	;# 
  3718     081A                     	;# 
  3719     081A                     	;# 
  3720     081B                     	;# 
  3721     081C                     	;# 
  3722     081C                     	;# 
  3723     081D                     	;# 
  3724     081E                     	;# 
  3725     081F                     	;# 
  3726     088C                     	;# 
  3727     088D                     	;# 
  3728     088E                     	;# 
  3729     088F                     	;# 
  3730     0890                     	;# 
  3731     0891                     	;# 
  3732     0892                     	;# 
  3733     0893                     	;# 
  3734     0895                     	;# 
  3735     0896                     	;# 
  3736     0897                     	;# 
  3737     0898                     	;# 
  3738     0899                     	;# 
  3739     089A                     	;# 
  3740     089B                     	;# 
  3741     090C                     	;# 
  3742     090E                     	;# 
  3743     090F                     	;# 
  3744     091F                     	;# 
  3745     098F                     	;# 
  3746     098F                     	;# 
  3747     0990                     	;# 
  3748     0991                     	;# 
  3749     0992                     	;# 
  3750     0993                     	;# 
  3751     0994                     	;# 
  3752     0995                     	;# 
  3753     0996                     	;# 
  3754     0997                     	;# 
  3755     0A19                     	;# 
  3756     0A19                     	;# 
  3757     0A1A                     	;# 
  3758     0A1A                     	;# 
  3759     0A1B                     	;# 
  3760     0A1B                     	;# 
  3761     0A1B                     	;# 
  3762     0A1C                     	;# 
  3763     0A1C                     	;# 
  3764     0A1D                     	;# 
  3765     0A1D                     	;# 
  3766     0A1E                     	;# 
  3767     0A1E                     	;# 
  3768     0A1F                     	;# 
  3769     0A1F                     	;# 
  3770     0A1F                     	;# 
  3771     1E0F                     	;# 
  3772     1E10                     	;# 
  3773     1E11                     	;# 
  3774     1E12                     	;# 
  3775     1E13                     	;# 
  3776     1E14                     	;# 
  3777     1E15                     	;# 
  3778     1E16                     	;# 
  3779     1E17                     	;# 
  3780     1E18                     	;# 
  3781     1E19                     	;# 
  3782     1E1A                     	;# 
  3783     1E1B                     	;# 
  3784     1E1C                     	;# 
  3785     1E1D                     	;# 
  3786     1E1E                     	;# 
  3787     1E1F                     	;# 
  3788     1E20                     	;# 
  3789     1E21                     	;# 
  3790     1E22                     	;# 
  3791     1E23                     	;# 
  3792     1E24                     	;# 
  3793     1E25                     	;# 
  3794     1E26                     	;# 
  3795     1E27                     	;# 
  3796     1E28                     	;# 
  3797     1E29                     	;# 
  3798     1E2A                     	;# 
  3799     1E2B                     	;# 
  3800     1E2C                     	;# 
  3801     1E2D                     	;# 
  3802     1E2E                     	;# 
  3803     1E2F                     	;# 
  3804     1E30                     	;# 
  3805     1E31                     	;# 
  3806     1E32                     	;# 
  3807     1E33                     	;# 
  3808     1E34                     	;# 
  3809     1E35                     	;# 
  3810     1E36                     	;# 
  3811     1E37                     	;# 
  3812     1E8F                     	;# 
  3813     1E90                     	;# 
  3814     1E91                     	;# 
  3815     1E92                     	;# 
  3816     1E93                     	;# 
  3817     1E94                     	;# 
  3818     1E95                     	;# 
  3819     1E96                     	;# 
  3820     1E97                     	;# 
  3821     1E9C                     	;# 
  3822     1E9D                     	;# 
  3823     1E9E                     	;# 
  3824     1EA1                     	;# 
  3825     1EA2                     	;# 
  3826     1EA3                     	;# 
  3827     1EA4                     	;# 
  3828     1EA5                     	;# 
  3829     1EA9                     	;# 
  3830     1EAA                     	;# 
  3831     1EAB                     	;# 
  3832     1EAC                     	;# 
  3833     1EB1                     	;# 
  3834     1EB2                     	;# 
  3835     1EB3                     	;# 
  3836     1EB8                     	;# 
  3837     1EB9                     	;# 
  3838     1EBA                     	;# 
  3839     1EBB                     	;# 
  3840     1EBC                     	;# 
  3841     1EBD                     	;# 
  3842     1EBE                     	;# 
  3843     1EC3                     	;# 
  3844     1EC5                     	;# 
  3845     1EC6                     	;# 
  3846     1EC7                     	;# 
  3847     1EC8                     	;# 
  3848     1EC9                     	;# 
  3849     1ECA                     	;# 
  3850     1ECB                     	;# 
  3851     1ECC                     	;# 
  3852     1ECD                     	;# 
  3853     1ECE                     	;# 
  3854     1F10                     	;# 
  3855     1F11                     	;# 
  3856     1F12                     	;# 
  3857     1F13                     	;# 
  3858     1F14                     	;# 
  3859     1F15                     	;# 
  3860     1F16                     	;# 
  3861     1F17                     	;# 
  3862     1F18                     	;# 
  3863     1F19                     	;# 
  3864     1F1A                     	;# 
  3865     1F1B                     	;# 
  3866     1F1C                     	;# 
  3867     1F1D                     	;# 
  3868     1F1E                     	;# 
  3869     1F1F                     	;# 
  3870     1F20                     	;# 
  3871     1F21                     	;# 
  3872     1F22                     	;# 
  3873     1F23                     	;# 
  3874     1F24                     	;# 
  3875     1F25                     	;# 
  3876     1F26                     	;# 
  3877     1F27                     	;# 
  3878     1F38                     	;# 
  3879     1F39                     	;# 
  3880     1F3A                     	;# 
  3881     1F3B                     	;# 
  3882     1F3C                     	;# 
  3883     1F3D                     	;# 
  3884     1F3E                     	;# 
  3885     1F3F                     	;# 
  3886     1F43                     	;# 
  3887     1F44                     	;# 
  3888     1F45                     	;# 
  3889     1F46                     	;# 
  3890     1F47                     	;# 
  3891     1F48                     	;# 
  3892     1F49                     	;# 
  3893     1F4A                     	;# 
  3894     1F4E                     	;# 
  3895     1F4F                     	;# 
  3896     1F50                     	;# 
  3897     1F51                     	;# 
  3898     1F52                     	;# 
  3899     1F53                     	;# 
  3900     1F54                     	;# 
  3901     1F55                     	;# 
  3902     1F65                     	;# 
  3903     1F66                     	;# 
  3904     1F67                     	;# 
  3905     1F68                     	;# 
  3906     1F69                     	;# 
  3907     1F6A                     	;# 
  3908     1F6B                     	;# 
  3909     1FE4                     	;# 
  3910     1FE5                     	;# 
  3911     1FE6                     	;# 
  3912     1FE7                     	;# 
  3913     1FE8                     	;# 
  3914     1FE8                     	;# 
  3915     1FE9                     	;# 
  3916     1FEA                     	;# 
  3917     1FEB                     	;# 
  3918     1FED                     	;# 
  3919     1FEE                     	;# 
  3920     1FEF                     	;# 
  3921     0000                     	;# 
  3922     0001                     	;# 
  3923     0002                     	;# 
  3924     0003                     	;# 
  3925     0004                     	;# 
  3926     0005                     	;# 
  3927     0006                     	;# 
  3928     0007                     	;# 
  3929     0008                     	;# 
  3930     0009                     	;# 
  3931     000A                     	;# 
  3932     000B                     	;# 
  3933     000C                     	;# 
  3934     000D                     	;# 
  3935     000E                     	;# 
  3936     0010                     	;# 
  3937     0012                     	;# 
  3938     0013                     	;# 
  3939     0014                     	;# 
  3940     0016                     	;# 
  3941     0018                     	;# 
  3942     0019                     	;# 
  3943     001A                     	;# 
  3944     001C                     	;# 
  3945     008C                     	;# 
  3946     008C                     	;# 
  3947     008D                     	;# 
  3948     008E                     	;# 
  3949     008E                     	;# 
  3950     008F                     	;# 
  3951     0090                     	;# 
  3952     0090                     	;# 
  3953     0091                     	;# 
  3954     0092                     	;# 
  3955     0092                     	;# 
  3956     0093                     	;# 
  3957     0094                     	;# 
  3958     0094                     	;# 
  3959     0095                     	;# 
  3960     0096                     	;# 
  3961     0096                     	;# 
  3962     0097                     	;# 
  3963     0098                     	;# 
  3964     0099                     	;# 
  3965     009A                     	;# 
  3966     009B                     	;# 
  3967     009B                     	;# 
  3968     009C                     	;# 
  3969     009D                     	;# 
  3970     009D                     	;# 
  3971     009E                     	;# 
  3972     009F                     	;# 
  3973     010C                     	;# 
  3974     010C                     	;# 
  3975     010D                     	;# 
  3976     010E                     	;# 
  3977     010F                     	;# 
  3978     010F                     	;# 
  3979     0110                     	;# 
  3980     0111                     	;# 
  3981     0112                     	;# 
  3982     0113                     	;# 
  3983     0114                     	;# 
  3984     0115                     	;# 
  3985     0116                     	;# 
  3986     0117                     	;# 
  3987     0118                     	;# 
  3988     0119                     	;# 
  3989     0119                     	;# 
  3990     0119                     	;# 
  3991     011A                     	;# 
  3992     011A                     	;# 
  3993     011A                     	;# 
  3994     011B                     	;# 
  3995     011B                     	;# 
  3996     011B                     	;# 
  3997     011B                     	;# 
  3998     011B                     	;# 
  3999     011C                     	;# 
  4000     011C                     	;# 
  4001     011C                     	;# 
  4002     011D                     	;# 
  4003     011D                     	;# 
  4004     011D                     	;# 
  4005     011E                     	;# 
  4006     011E                     	;# 
  4007     011E                     	;# 
  4008     011F                     	;# 
  4009     011F                     	;# 
  4010     011F                     	;# 
  4011     011F                     	;# 
  4012     011F                     	;# 
  4013     018C                     	;# 
  4014     018D                     	;# 
  4015     018E                     	;# 
  4016     018F                     	;# 
  4017     0190                     	;# 
  4018     0191                     	;# 
  4019     0192                     	;# 
  4020     0196                     	;# 
  4021     0197                     	;# 
  4022     0198                     	;# 
  4023     0199                     	;# 
  4024     019A                     	;# 
  4025     019B                     	;# 
  4026     019C                     	;# 
  4027     020C                     	;# 
  4028     020D                     	;# 
  4029     020E                     	;# 
  4030     020E                     	;# 
  4031     020F                     	;# 
  4032     020F                     	;# 
  4033     0210                     	;# 
  4034     0210                     	;# 
  4035     0211                     	;# 
  4036     0211                     	;# 
  4037     0212                     	;# 
  4038     0213                     	;# 
  4039     0214                     	;# 
  4040     0214                     	;# 
  4041     0215                     	;# 
  4042     0215                     	;# 
  4043     0216                     	;# 
  4044     0216                     	;# 
  4045     0217                     	;# 
  4046     0217                     	;# 
  4047     0218                     	;# 
  4048     0219                     	;# 
  4049     021A                     	;# 
  4050     021A                     	;# 
  4051     021B                     	;# 
  4052     021B                     	;# 
  4053     021C                     	;# 
  4054     021C                     	;# 
  4055     021D                     	;# 
  4056     021D                     	;# 
  4057     021E                     	;# 
  4058     021F                     	;# 
  4059     028C                     	;# 
  4060     028C                     	;# 
  4061     028D                     	;# 
  4062     028D                     	;# 
  4063     028E                     	;# 
  4064     028F                     	;# 
  4065     0290                     	;# 
  4066     0291                     	;# 
  4067     0292                     	;# 
  4068     0292                     	;# 
  4069     0293                     	;# 
  4070     0293                     	;# 
  4071     0294                     	;# 
  4072     0295                     	;# 
  4073     0296                     	;# 
  4074     0297                     	;# 
  4075     0298                     	;# 
  4076     0298                     	;# 
  4077     0299                     	;# 
  4078     0299                     	;# 
  4079     029A                     	;# 
  4080     029B                     	;# 
  4081     029C                     	;# 
  4082     029D                     	;# 
  4083     029F                     	;# 
  4084     030C                     	;# 
  4085     030C                     	;# 
  4086     030D                     	;# 
  4087     030E                     	;# 
  4088     030F                     	;# 
  4089     0310                     	;# 
  4090     0310                     	;# 
  4091     0311                     	;# 
  4092     0312                     	;# 
  4093     0313                     	;# 
  4094     0314                     	;# 
  4095     0314                     	;# 
  4096     0315                     	;# 
  4097     0316                     	;# 
  4098     0317                     	;# 
  4099     0318                     	;# 
  4100     0318                     	;# 
  4101     0319                     	;# 
  4102     031A                     	;# 
  4103     031B                     	;# 
  4104     031C                     	;# 
  4105     031C                     	;# 
  4106     031D                     	;# 
  4107     031E                     	;# 
  4108     031F                     	;# 
  4109     038C                     	;# 
  4110     038C                     	;# 
  4111     038D                     	;# 
  4112     038E                     	;# 
  4113     0390                     	;# 
  4114     0390                     	;# 
  4115     0391                     	;# 
  4116     0392                     	;# 
  4117     048C                     	;# 
  4118     048C                     	;# 
  4119     048D                     	;# 
  4120     048E                     	;# 
  4121     048F                     	;# 
  4122     048F                     	;# 
  4123     0490                     	;# 
  4124     0491                     	;# 
  4125     0492                     	;# 
  4126     0492                     	;# 
  4127     0493                     	;# 
  4128     0494                     	;# 
  4129     0495                     	;# 
  4130     0495                     	;# 
  4131     0496                     	;# 
  4132     0497                     	;# 
  4133     0498                     	;# 
  4134     0499                     	;# 
  4135     049A                     	;# 
  4136     049B                     	;# 
  4137     049C                     	;# 
  4138     049D                     	;# 
  4139     050C                     	;# 
  4140     050C                     	;# 
  4141     050D                     	;# 
  4142     050E                     	;# 
  4143     050F                     	;# 
  4144     050F                     	;# 
  4145     0510                     	;# 
  4146     0511                     	;# 
  4147     0512                     	;# 
  4148     0512                     	;# 
  4149     0513                     	;# 
  4150     0514                     	;# 
  4151     0515                     	;# 
  4152     0515                     	;# 
  4153     0516                     	;# 
  4154     0517                     	;# 
  4155     0518                     	;# 
  4156     0519                     	;# 
  4157     051A                     	;# 
  4158     051B                     	;# 
  4159     051C                     	;# 
  4160     051D                     	;# 
  4161     058C                     	;# 
  4162     058C                     	;# 
  4163     058D                     	;# 
  4164     058E                     	;# 
  4165     058F                     	;# 
  4166     058F                     	;# 
  4167     0590                     	;# 
  4168     0591                     	;# 
  4169     0592                     	;# 
  4170     0593                     	;# 
  4171     059C                     	;# 
  4172     059C                     	;# 
  4173     059D                     	;# 
  4174     059D                     	;# 
  4175     059E                     	;# 
  4176     059F                     	;# 
  4177     060C                     	;# 
  4178     060C                     	;# 
  4179     060D                     	;# 
  4180     060D                     	;# 
  4181     060E                     	;# 
  4182     060F                     	;# 
  4183     0610                     	;# 
  4184     0611                     	;# 
  4185     0612                     	;# 
  4186     0613                     	;# 
  4187     0614                     	;# 
  4188     0616                     	;# 
  4189     0616                     	;# 
  4190     0617                     	;# 
  4191     0617                     	;# 
  4192     0618                     	;# 
  4193     0619                     	;# 
  4194     061A                     	;# 
  4195     061B                     	;# 
  4196     061C                     	;# 
  4197     061D                     	;# 
  4198     061E                     	;# 
  4199     068C                     	;# 
  4200     068D                     	;# 
  4201     068E                     	;# 
  4202     068F                     	;# 
  4203     0690                     	;# 
  4204     0691                     	;# 
  4205     0692                     	;# 
  4206     0693                     	;# 
  4207     0694                     	;# 
  4208     070C                     	;# 
  4209     070D                     	;# 
  4210     070E                     	;# 
  4211     070F                     	;# 
  4212     0710                     	;# 
  4213     0711                     	;# 
  4214     0712                     	;# 
  4215     0713                     	;# 
  4216     0714                     	;# 
  4217     0716                     	;# 
  4218     0717                     	;# 
  4219     0718                     	;# 
  4220     0719                     	;# 
  4221     071A                     	;# 
  4222     071B                     	;# 
  4223     071C                     	;# 
  4224     071D                     	;# 
  4225     071E                     	;# 
  4226     0796                     	;# 
  4227     0797                     	;# 
  4228     0798                     	;# 
  4229     0799                     	;# 
  4230     079A                     	;# 
  4231     079B                     	;# 
  4232     079C                     	;# 
  4233     079D                     	;# 
  4234     080C                     	;# 
  4235     080D                     	;# 
  4236     080E                     	;# 
  4237     080F                     	;# 
  4238     0810                     	;# 
  4239     0811                     	;# 
  4240     0813                     	;# 
  4241     0814                     	;# 
  4242     081A                     	;# 
  4243     081A                     	;# 
  4244     081B                     	;# 
  4245     081C                     	;# 
  4246     081C                     	;# 
  4247     081D                     	;# 
  4248     081E                     	;# 
  4249     081F                     	;# 
  4250     088C                     	;# 
  4251     088D                     	;# 
  4252     088E                     	;# 
  4253     088F                     	;# 
  4254     0890                     	;# 
  4255     0891                     	;# 
  4256     0892                     	;# 
  4257     0893                     	;# 
  4258     0895                     	;# 
  4259     0896                     	;# 
  4260     0897                     	;# 
  4261     0898                     	;# 
  4262     0899                     	;# 
  4263     089A                     	;# 
  4264     089B                     	;# 
  4265     090C                     	;# 
  4266     090E                     	;# 
  4267     090F                     	;# 
  4268     091F                     	;# 
  4269     098F                     	;# 
  4270     098F                     	;# 
  4271     0990                     	;# 
  4272     0991                     	;# 
  4273     0992                     	;# 
  4274     0993                     	;# 
  4275     0994                     	;# 
  4276     0995                     	;# 
  4277     0996                     	;# 
  4278     0997                     	;# 
  4279     0A19                     	;# 
  4280     0A19                     	;# 
  4281     0A1A                     	;# 
  4282     0A1A                     	;# 
  4283     0A1B                     	;# 
  4284     0A1B                     	;# 
  4285     0A1B                     	;# 
  4286     0A1C                     	;# 
  4287     0A1C                     	;# 
  4288     0A1D                     	;# 
  4289     0A1D                     	;# 
  4290     0A1E                     	;# 
  4291     0A1E                     	;# 
  4292     0A1F                     	;# 
  4293     0A1F                     	;# 
  4294     0A1F                     	;# 
  4295     1E0F                     	;# 
  4296     1E10                     	;# 
  4297     1E11                     	;# 
  4298     1E12                     	;# 
  4299     1E13                     	;# 
  4300     1E14                     	;# 
  4301     1E15                     	;# 
  4302     1E16                     	;# 
  4303     1E17                     	;# 
  4304     1E18                     	;# 
  4305     1E19                     	;# 
  4306     1E1A                     	;# 
  4307     1E1B                     	;# 
  4308     1E1C                     	;# 
  4309     1E1D                     	;# 
  4310     1E1E                     	;# 
  4311     1E1F                     	;# 
  4312     1E20                     	;# 
  4313     1E21                     	;# 
  4314     1E22                     	;# 
  4315     1E23                     	;# 
  4316     1E24                     	;# 
  4317     1E25                     	;# 
  4318     1E26                     	;# 
  4319     1E27                     	;# 
  4320     1E28                     	;# 
  4321     1E29                     	;# 
  4322     1E2A                     	;# 
  4323     1E2B                     	;# 
  4324     1E2C                     	;# 
  4325     1E2D                     	;# 
  4326     1E2E                     	;# 
  4327     1E2F                     	;# 
  4328     1E30                     	;# 
  4329     1E31                     	;# 
  4330     1E32                     	;# 
  4331     1E33                     	;# 
  4332     1E34                     	;# 
  4333     1E35                     	;# 
  4334     1E36                     	;# 
  4335     1E37                     	;# 
  4336     1E8F                     	;# 
  4337     1E90                     	;# 
  4338     1E91                     	;# 
  4339     1E92                     	;# 
  4340     1E93                     	;# 
  4341     1E94                     	;# 
  4342     1E95                     	;# 
  4343     1E96                     	;# 
  4344     1E97                     	;# 
  4345     1E9C                     	;# 
  4346     1E9D                     	;# 
  4347     1E9E                     	;# 
  4348     1EA1                     	;# 
  4349     1EA2                     	;# 
  4350     1EA3                     	;# 
  4351     1EA4                     	;# 
  4352     1EA5                     	;# 
  4353     1EA9                     	;# 
  4354     1EAA                     	;# 
  4355     1EAB                     	;# 
  4356     1EAC                     	;# 
  4357     1EB1                     	;# 
  4358     1EB2                     	;# 
  4359     1EB3                     	;# 
  4360     1EB8                     	;# 
  4361     1EB9                     	;# 
  4362     1EBA                     	;# 
  4363     1EBB                     	;# 
  4364     1EBC                     	;# 
  4365     1EBD                     	;# 
  4366     1EBE                     	;# 
  4367     1EC3                     	;# 
  4368     1EC5                     	;# 
  4369     1EC6                     	;# 
  4370     1EC7                     	;# 
  4371     1EC8                     	;# 
  4372     1EC9                     	;# 
  4373     1ECA                     	;# 
  4374     1ECB                     	;# 
  4375     1ECC                     	;# 
  4376     1ECD                     	;# 
  4377     1ECE                     	;# 
  4378     1F10                     	;# 
  4379     1F11                     	;# 
  4380     1F12                     	;# 
  4381     1F13                     	;# 
  4382     1F14                     	;# 
  4383     1F15                     	;# 
  4384     1F16                     	;# 
  4385     1F17                     	;# 
  4386     1F18                     	;# 
  4387     1F19                     	;# 
  4388     1F1A                     	;# 
  4389     1F1B                     	;# 
  4390     1F1C                     	;# 
  4391     1F1D                     	;# 
  4392     1F1E                     	;# 
  4393     1F1F                     	;# 
  4394     1F20                     	;# 
  4395     1F21                     	;# 
  4396     1F22                     	;# 
  4397     1F23                     	;# 
  4398     1F24                     	;# 
  4399     1F25                     	;# 
  4400     1F26                     	;# 
  4401     1F27                     	;# 
  4402     1F38                     	;# 
  4403     1F39                     	;# 
  4404     1F3A                     	;# 
  4405     1F3B                     	;# 
  4406     1F3C                     	;# 
  4407     1F3D                     	;# 
  4408     1F3E                     	;# 
  4409     1F3F                     	;# 
  4410     1F43                     	;# 
  4411     1F44                     	;# 
  4412     1F45                     	;# 
  4413     1F46                     	;# 
  4414     1F47                     	;# 
  4415     1F48                     	;# 
  4416     1F49                     	;# 
  4417     1F4A                     	;# 
  4418     1F4E                     	;# 
  4419     1F4F                     	;# 
  4420     1F50                     	;# 
  4421     1F51                     	;# 
  4422     1F52                     	;# 
  4423     1F53                     	;# 
  4424     1F54                     	;# 
  4425     1F55                     	;# 
  4426     1F65                     	;# 
  4427     1F66                     	;# 
  4428     1F67                     	;# 
  4429     1F68                     	;# 
  4430     1F69                     	;# 
  4431     1F6A                     	;# 
  4432     1F6B                     	;# 
  4433     1FE4                     	;# 
  4434     1FE5                     	;# 
  4435     1FE6                     	;# 
  4436     1FE7                     	;# 
  4437     1FE8                     	;# 
  4438     1FE8                     	;# 
  4439     1FE9                     	;# 
  4440     1FEA                     	;# 
  4441     1FEB                     	;# 
  4442     1FED                     	;# 
  4443     1FEE                     	;# 
  4444     1FEF                     	;# 
  4445     0000                     	;# 
  4446     0001                     	;# 
  4447     0002                     	;# 
  4448     0003                     	;# 
  4449     0004                     	;# 
  4450     0005                     	;# 
  4451     0006                     	;# 
  4452     0007                     	;# 
  4453     0008                     	;# 
  4454     0009                     	;# 
  4455     000A                     	;# 
  4456     000B                     	;# 
  4457     000C                     	;# 
  4458     000D                     	;# 
  4459     000E                     	;# 
  4460     0010                     	;# 
  4461     0012                     	;# 
  4462     0013                     	;# 
  4463     0014                     	;# 
  4464     0016                     	;# 
  4465     0018                     	;# 
  4466     0019                     	;# 
  4467     001A                     	;# 
  4468     001C                     	;# 
  4469     008C                     	;# 
  4470     008C                     	;# 
  4471     008D                     	;# 
  4472     008E                     	;# 
  4473     008E                     	;# 
  4474     008F                     	;# 
  4475     0090                     	;# 
  4476     0090                     	;# 
  4477     0091                     	;# 
  4478     0092                     	;# 
  4479     0092                     	;# 
  4480     0093                     	;# 
  4481     0094                     	;# 
  4482     0094                     	;# 
  4483     0095                     	;# 
  4484     0096                     	;# 
  4485     0096                     	;# 
  4486     0097                     	;# 
  4487     0098                     	;# 
  4488     0099                     	;# 
  4489     009A                     	;# 
  4490     009B                     	;# 
  4491     009B                     	;# 
  4492     009C                     	;# 
  4493     009D                     	;# 
  4494     009D                     	;# 
  4495     009E                     	;# 
  4496     009F                     	;# 
  4497     010C                     	;# 
  4498     010C                     	;# 
  4499     010D                     	;# 
  4500     010E                     	;# 
  4501     010F                     	;# 
  4502     010F                     	;# 
  4503     0110                     	;# 
  4504     0111                     	;# 
  4505     0112                     	;# 
  4506     0113                     	;# 
  4507     0114                     	;# 
  4508     0115                     	;# 
  4509     0116                     	;# 
  4510     0117                     	;# 
  4511     0118                     	;# 
  4512     0119                     	;# 
  4513     0119                     	;# 
  4514     0119                     	;# 
  4515     011A                     	;# 
  4516     011A                     	;# 
  4517     011A                     	;# 
  4518     011B                     	;# 
  4519     011B                     	;# 
  4520     011B                     	;# 
  4521     011B                     	;# 
  4522     011B                     	;# 
  4523     011C                     	;# 
  4524     011C                     	;# 
  4525     011C                     	;# 
  4526     011D                     	;# 
  4527     011D                     	;# 
  4528     011D                     	;# 
  4529     011E                     	;# 
  4530     011E                     	;# 
  4531     011E                     	;# 
  4532     011F                     	;# 
  4533     011F                     	;# 
  4534     011F                     	;# 
  4535     011F                     	;# 
  4536     011F                     	;# 
  4537     018C                     	;# 
  4538     018D                     	;# 
  4539     018E                     	;# 
  4540     018F                     	;# 
  4541     0190                     	;# 
  4542     0191                     	;# 
  4543     0192                     	;# 
  4544     0196                     	;# 
  4545     0197                     	;# 
  4546     0198                     	;# 
  4547     0199                     	;# 
  4548     019A                     	;# 
  4549     019B                     	;# 
  4550     019C                     	;# 
  4551     020C                     	;# 
  4552     020D                     	;# 
  4553     020E                     	;# 
  4554     020E                     	;# 
  4555     020F                     	;# 
  4556     020F                     	;# 
  4557     0210                     	;# 
  4558     0210                     	;# 
  4559     0211                     	;# 
  4560     0211                     	;# 
  4561     0212                     	;# 
  4562     0213                     	;# 
  4563     0214                     	;# 
  4564     0214                     	;# 
  4565     0215                     	;# 
  4566     0215                     	;# 
  4567     0216                     	;# 
  4568     0216                     	;# 
  4569     0217                     	;# 
  4570     0217                     	;# 
  4571     0218                     	;# 
  4572     0219                     	;# 
  4573     021A                     	;# 
  4574     021A                     	;# 
  4575     021B                     	;# 
  4576     021B                     	;# 
  4577     021C                     	;# 
  4578     021C                     	;# 
  4579     021D                     	;# 
  4580     021D                     	;# 
  4581     021E                     	;# 
  4582     021F                     	;# 
  4583     028C                     	;# 
  4584     028C                     	;# 
  4585     028D                     	;# 
  4586     028D                     	;# 
  4587     028E                     	;# 
  4588     028F                     	;# 
  4589     0290                     	;# 
  4590     0291                     	;# 
  4591     0292                     	;# 
  4592     0292                     	;# 
  4593     0293                     	;# 
  4594     0293                     	;# 
  4595     0294                     	;# 
  4596     0295                     	;# 
  4597     0296                     	;# 
  4598     0297                     	;# 
  4599     0298                     	;# 
  4600     0298                     	;# 
  4601     0299                     	;# 
  4602     0299                     	;# 
  4603     029A                     	;# 
  4604     029B                     	;# 
  4605     029C                     	;# 
  4606     029D                     	;# 
  4607     029F                     	;# 
  4608     030C                     	;# 
  4609     030C                     	;# 
  4610     030D                     	;# 
  4611     030E                     	;# 
  4612     030F                     	;# 
  4613     0310                     	;# 
  4614     0310                     	;# 
  4615     0311                     	;# 
  4616     0312                     	;# 
  4617     0313                     	;# 
  4618     0314                     	;# 
  4619     0314                     	;# 
  4620     0315                     	;# 
  4621     0316                     	;# 
  4622     0317                     	;# 
  4623     0318                     	;# 
  4624     0318                     	;# 
  4625     0319                     	;# 
  4626     031A                     	;# 
  4627     031B                     	;# 
  4628     031C                     	;# 
  4629     031C                     	;# 
  4630     031D                     	;# 
  4631     031E                     	;# 
  4632     031F                     	;# 
  4633     038C                     	;# 
  4634     038C                     	;# 
  4635     038D                     	;# 
  4636     038E                     	;# 
  4637     0390                     	;# 
  4638     0390                     	;# 
  4639     0391                     	;# 
  4640     0392                     	;# 
  4641     048C                     	;# 
  4642     048C                     	;# 
  4643     048D                     	;# 
  4644     048E                     	;# 
  4645     048F                     	;# 
  4646     048F                     	;# 
  4647     0490                     	;# 
  4648     0491                     	;# 
  4649     0492                     	;# 
  4650     0492                     	;# 
  4651     0493                     	;# 
  4652     0494                     	;# 
  4653     0495                     	;# 
  4654     0495                     	;# 
  4655     0496                     	;# 
  4656     0497                     	;# 
  4657     0498                     	;# 
  4658     0499                     	;# 
  4659     049A                     	;# 
  4660     049B                     	;# 
  4661     049C                     	;# 
  4662     049D                     	;# 
  4663     050C                     	;# 
  4664     050C                     	;# 
  4665     050D                     	;# 
  4666     050E                     	;# 
  4667     050F                     	;# 
  4668     050F                     	;# 
  4669     0510                     	;# 
  4670     0511                     	;# 
  4671     0512                     	;# 
  4672     0512                     	;# 
  4673     0513                     	;# 
  4674     0514                     	;# 
  4675     0515                     	;# 
  4676     0515                     	;# 
  4677     0516                     	;# 
  4678     0517                     	;# 
  4679     0518                     	;# 
  4680     0519                     	;# 
  4681     051A                     	;# 
  4682     051B                     	;# 
  4683     051C                     	;# 
  4684     051D                     	;# 
  4685     058C                     	;# 
  4686     058C                     	;# 
  4687     058D                     	;# 
  4688     058E                     	;# 
  4689     058F                     	;# 
  4690     058F                     	;# 
  4691     0590                     	;# 
  4692     0591                     	;# 
  4693     0592                     	;# 
  4694     0593                     	;# 
  4695     059C                     	;# 
  4696     059C                     	;# 
  4697     059D                     	;# 
  4698     059D                     	;# 
  4699     059E                     	;# 
  4700     059F                     	;# 
  4701     060C                     	;# 
  4702     060C                     	;# 
  4703     060D                     	;# 
  4704     060D                     	;# 
  4705     060E                     	;# 
  4706     060F                     	;# 
  4707     0610                     	;# 
  4708     0611                     	;# 
  4709     0612                     	;# 
  4710     0613                     	;# 
  4711     0614                     	;# 
  4712     0616                     	;# 
  4713     0616                     	;# 
  4714     0617                     	;# 
  4715     0617                     	;# 
  4716     0618                     	;# 
  4717     0619                     	;# 
  4718     061A                     	;# 
  4719     061B                     	;# 
  4720     061C                     	;# 
  4721     061D                     	;# 
  4722     061E                     	;# 
  4723     068C                     	;# 
  4724     068D                     	;# 
  4725     068E                     	;# 
  4726     068F                     	;# 
  4727     0690                     	;# 
  4728     0691                     	;# 
  4729     0692                     	;# 
  4730     0693                     	;# 
  4731     0694                     	;# 
  4732     070C                     	;# 
  4733     070D                     	;# 
  4734     070E                     	;# 
  4735     070F                     	;# 
  4736     0710                     	;# 
  4737     0711                     	;# 
  4738     0712                     	;# 
  4739     0713                     	;# 
  4740     0714                     	;# 
  4741     0716                     	;# 
  4742     0717                     	;# 
  4743     0718                     	;# 
  4744     0719                     	;# 
  4745     071A                     	;# 
  4746     071B                     	;# 
  4747     071C                     	;# 
  4748     071D                     	;# 
  4749     071E                     	;# 
  4750     0796                     	;# 
  4751     0797                     	;# 
  4752     0798                     	;# 
  4753     0799                     	;# 
  4754     079A                     	;# 
  4755     079B                     	;# 
  4756     079C                     	;# 
  4757     079D                     	;# 
  4758     080C                     	;# 
  4759     080D                     	;# 
  4760     080E                     	;# 
  4761     080F                     	;# 
  4762     0810                     	;# 
  4763     0811                     	;# 
  4764     0813                     	;# 
  4765     0814                     	;# 
  4766     081A                     	;# 
  4767     081A                     	;# 
  4768     081B                     	;# 
  4769     081C                     	;# 
  4770     081C                     	;# 
  4771     081D                     	;# 
  4772     081E                     	;# 
  4773     081F                     	;# 
  4774     088C                     	;# 
  4775     088D                     	;# 
  4776     088E                     	;# 
  4777     088F                     	;# 
  4778     0890                     	;# 
  4779     0891                     	;# 
  4780     0892                     	;# 
  4781     0893                     	;# 
  4782     0895                     	;# 
  4783     0896                     	;# 
  4784     0897                     	;# 
  4785     0898                     	;# 
  4786     0899                     	;# 
  4787     089A                     	;# 
  4788     089B                     	;# 
  4789     090C                     	;# 
  4790     090E                     	;# 
  4791     090F                     	;# 
  4792     091F                     	;# 
  4793     098F                     	;# 
  4794     098F                     	;# 
  4795     0990                     	;# 
  4796     0991                     	;# 
  4797     0992                     	;# 
  4798     0993                     	;# 
  4799     0994                     	;# 
  4800     0995                     	;# 
  4801     0996                     	;# 
  4802     0997                     	;# 
  4803     0A19                     	;# 
  4804     0A19                     	;# 
  4805     0A1A                     	;# 
  4806     0A1A                     	;# 
  4807     0A1B                     	;# 
  4808     0A1B                     	;# 
  4809     0A1B                     	;# 
  4810     0A1C                     	;# 
  4811     0A1C                     	;# 
  4812     0A1D                     	;# 
  4813     0A1D                     	;# 
  4814     0A1E                     	;# 
  4815     0A1E                     	;# 
  4816     0A1F                     	;# 
  4817     0A1F                     	;# 
  4818     0A1F                     	;# 
  4819     1E0F                     	;# 
  4820     1E10                     	;# 
  4821     1E11                     	;# 
  4822     1E12                     	;# 
  4823     1E13                     	;# 
  4824     1E14                     	;# 
  4825     1E15                     	;# 
  4826     1E16                     	;# 
  4827     1E17                     	;# 
  4828     1E18                     	;# 
  4829     1E19                     	;# 
  4830     1E1A                     	;# 
  4831     1E1B                     	;# 
  4832     1E1C                     	;# 
  4833     1E1D                     	;# 
  4834     1E1E                     	;# 
  4835     1E1F                     	;# 
  4836     1E20                     	;# 
  4837     1E21                     	;# 
  4838     1E22                     	;# 
  4839     1E23                     	;# 
  4840     1E24                     	;# 
  4841     1E25                     	;# 
  4842     1E26                     	;# 
  4843     1E27                     	;# 
  4844     1E28                     	;# 
  4845     1E29                     	;# 
  4846     1E2A                     	;# 
  4847     1E2B                     	;# 
  4848     1E2C                     	;# 
  4849     1E2D                     	;# 
  4850     1E2E                     	;# 
  4851     1E2F                     	;# 
  4852     1E30                     	;# 
  4853     1E31                     	;# 
  4854     1E32                     	;# 
  4855     1E33                     	;# 
  4856     1E34                     	;# 
  4857     1E35                     	;# 
  4858     1E36                     	;# 
  4859     1E37                     	;# 
  4860     1E8F                     	;# 
  4861     1E90                     	;# 
  4862     1E91                     	;# 
  4863     1E92                     	;# 
  4864     1E93                     	;# 
  4865     1E94                     	;# 
  4866     1E95                     	;# 
  4867     1E96                     	;# 
  4868     1E97                     	;# 
  4869     1E9C                     	;# 
  4870     1E9D                     	;# 
  4871     1E9E                     	;# 
  4872     1EA1                     	;# 
  4873     1EA2                     	;# 
  4874     1EA3                     	;# 
  4875     1EA4                     	;# 
  4876     1EA5                     	;# 
  4877     1EA9                     	;# 
  4878     1EAA                     	;# 
  4879     1EAB                     	;# 
  4880     1EAC                     	;# 
  4881     1EB1                     	;# 
  4882     1EB2                     	;# 
  4883     1EB3                     	;# 
  4884     1EB8                     	;# 
  4885     1EB9                     	;# 
  4886     1EBA                     	;# 
  4887     1EBB                     	;# 
  4888     1EBC                     	;# 
  4889     1EBD                     	;# 
  4890     1EBE                     	;# 
  4891     1EC3                     	;# 
  4892     1EC5                     	;# 
  4893     1EC6                     	;# 
  4894     1EC7                     	;# 
  4895     1EC8                     	;# 
  4896     1EC9                     	;# 
  4897     1ECA                     	;# 
  4898     1ECB                     	;# 
  4899     1ECC                     	;# 
  4900     1ECD                     	;# 
  4901     1ECE                     	;# 
  4902     1F10                     	;# 
  4903     1F11                     	;# 
  4904     1F12                     	;# 
  4905     1F13                     	;# 
  4906     1F14                     	;# 
  4907     1F15                     	;# 
  4908     1F16                     	;# 
  4909     1F17                     	;# 
  4910     1F18                     	;# 
  4911     1F19                     	;# 
  4912     1F1A                     	;# 
  4913     1F1B                     	;# 
  4914     1F1C                     	;# 
  4915     1F1D                     	;# 
  4916     1F1E                     	;# 
  4917     1F1F                     	;# 
  4918     1F20                     	;# 
  4919     1F21                     	;# 
  4920     1F22                     	;# 
  4921     1F23                     	;# 
  4922     1F24                     	;# 
  4923     1F25                     	;# 
  4924     1F26                     	;# 
  4925     1F27                     	;# 
  4926     1F38                     	;# 
  4927     1F39                     	;# 
  4928     1F3A                     	;# 
  4929     1F3B                     	;# 
  4930     1F3C                     	;# 
  4931     1F3D                     	;# 
  4932     1F3E                     	;# 
  4933     1F3F                     	;# 
  4934     1F43                     	;# 
  4935     1F44                     	;# 
  4936     1F45                     	;# 
  4937     1F46                     	;# 
  4938     1F47                     	;# 
  4939     1F48                     	;# 
  4940     1F49                     	;# 
  4941     1F4A                     	;# 
  4942     1F4E                     	;# 
  4943     1F4F                     	;# 
  4944     1F50                     	;# 
  4945     1F51                     	;# 
  4946     1F52                     	;# 
  4947     1F53                     	;# 
  4948     1F54                     	;# 
  4949     1F55                     	;# 
  4950     1F65                     	;# 
  4951     1F66                     	;# 
  4952     1F67                     	;# 
  4953     1F68                     	;# 
  4954     1F69                     	;# 
  4955     1F6A                     	;# 
  4956     1F6B                     	;# 
  4957     1FE4                     	;# 
  4958     1FE5                     	;# 
  4959     1FE6                     	;# 
  4960     1FE7                     	;# 
  4961     1FE8                     	;# 
  4962     1FE8                     	;# 
  4963     1FE9                     	;# 
  4964     1FEA                     	;# 
  4965     1FEB                     	;# 
  4966     1FED                     	;# 
  4967     1FEE                     	;# 
  4968     1FEF                     	;# 
  4969     0000                     	;# 
  4970     0001                     	;# 
  4971     0002                     	;# 
  4972     0003                     	;# 
  4973     0004                     	;# 
  4974     0005                     	;# 
  4975     0006                     	;# 
  4976     0007                     	;# 
  4977     0008                     	;# 
  4978     0009                     	;# 
  4979     000A                     	;# 
  4980     000B                     	;# 
  4981     000C                     	;# 
  4982     000D                     	;# 
  4983     000E                     	;# 
  4984     0010                     	;# 
  4985     0012                     	;# 
  4986     0013                     	;# 
  4987     0014                     	;# 
  4988     0016                     	;# 
  4989     0018                     	;# 
  4990     0019                     	;# 
  4991     001A                     	;# 
  4992     001C                     	;# 
  4993     008C                     	;# 
  4994     008C                     	;# 
  4995     008D                     	;# 
  4996     008E                     	;# 
  4997     008E                     	;# 
  4998     008F                     	;# 
  4999     0090                     	;# 
  5000     0090                     	;# 
  5001     0091                     	;# 
  5002     0092                     	;# 
  5003     0092                     	;# 
  5004     0093                     	;# 
  5005     0094                     	;# 
  5006     0094                     	;# 
  5007     0095                     	;# 
  5008     0096                     	;# 
  5009     0096                     	;# 
  5010     0097                     	;# 
  5011     0098                     	;# 
  5012     0099                     	;# 
  5013     009A                     	;# 
  5014     009B                     	;# 
  5015     009B                     	;# 
  5016     009C                     	;# 
  5017     009D                     	;# 
  5018     009D                     	;# 
  5019     009E                     	;# 
  5020     009F                     	;# 
  5021     010C                     	;# 
  5022     010C                     	;# 
  5023     010D                     	;# 
  5024     010E                     	;# 
  5025     010F                     	;# 
  5026     010F                     	;# 
  5027     0110                     	;# 
  5028     0111                     	;# 
  5029     0112                     	;# 
  5030     0113                     	;# 
  5031     0114                     	;# 
  5032     0115                     	;# 
  5033     0116                     	;# 
  5034     0117                     	;# 
  5035     0118                     	;# 
  5036     0119                     	;# 
  5037     0119                     	;# 
  5038     0119                     	;# 
  5039     011A                     	;# 
  5040     011A                     	;# 
  5041     011A                     	;# 
  5042     011B                     	;# 
  5043     011B                     	;# 
  5044     011B                     	;# 
  5045     011B                     	;# 
  5046     011B                     	;# 
  5047     011C                     	;# 
  5048     011C                     	;# 
  5049     011C                     	;# 
  5050     011D                     	;# 
  5051     011D                     	;# 
  5052     011D                     	;# 
  5053     011E                     	;# 
  5054     011E                     	;# 
  5055     011E                     	;# 
  5056     011F                     	;# 
  5057     011F                     	;# 
  5058     011F                     	;# 
  5059     011F                     	;# 
  5060     011F                     	;# 
  5061     018C                     	;# 
  5062     018D                     	;# 
  5063     018E                     	;# 
  5064     018F                     	;# 
  5065     0190                     	;# 
  5066     0191                     	;# 
  5067     0192                     	;# 
  5068     0196                     	;# 
  5069     0197                     	;# 
  5070     0198                     	;# 
  5071     0199                     	;# 
  5072     019A                     	;# 
  5073     019B                     	;# 
  5074     019C                     	;# 
  5075     020C                     	;# 
  5076     020D                     	;# 
  5077     020E                     	;# 
  5078     020E                     	;# 
  5079     020F                     	;# 
  5080     020F                     	;# 
  5081     0210                     	;# 
  5082     0210                     	;# 
  5083     0211                     	;# 
  5084     0211                     	;# 
  5085     0212                     	;# 
  5086     0213                     	;# 
  5087     0214                     	;# 
  5088     0214                     	;# 
  5089     0215                     	;# 
  5090     0215                     	;# 
  5091     0216                     	;# 
  5092     0216                     	;# 
  5093     0217                     	;# 
  5094     0217                     	;# 
  5095     0218                     	;# 
  5096     0219                     	;# 
  5097     021A                     	;# 
  5098     021A                     	;# 
  5099     021B                     	;# 
  5100     021B                     	;# 
  5101     021C                     	;# 
  5102     021C                     	;# 
  5103     021D                     	;# 
  5104     021D                     	;# 
  5105     021E                     	;# 
  5106     021F                     	;# 
  5107     028C                     	;# 
  5108     028C                     	;# 
  5109     028D                     	;# 
  5110     028D                     	;# 
  5111     028E                     	;# 
  5112     028F                     	;# 
  5113     0290                     	;# 
  5114     0291                     	;# 
  5115     0292                     	;# 
  5116     0292                     	;# 
  5117     0293                     	;# 
  5118     0293                     	;# 
  5119     0294                     	;# 
  5120     0295                     	;# 
  5121     0296                     	;# 
  5122     0297                     	;# 
  5123     0298                     	;# 
  5124     0298                     	;# 
  5125     0299                     	;# 
  5126     0299                     	;# 
  5127     029A                     	;# 
  5128     029B                     	;# 
  5129     029C                     	;# 
  5130     029D                     	;# 
  5131     029F                     	;# 
  5132     030C                     	;# 
  5133     030C                     	;# 
  5134     030D                     	;# 
  5135     030E                     	;# 
  5136     030F                     	;# 
  5137     0310                     	;# 
  5138     0310                     	;# 
  5139     0311                     	;# 
  5140     0312                     	;# 
  5141     0313                     	;# 
  5142     0314                     	;# 
  5143     0314                     	;# 
  5144     0315                     	;# 
  5145     0316                     	;# 
  5146     0317                     	;# 
  5147     0318                     	;# 
  5148     0318                     	;# 
  5149     0319                     	;# 
  5150     031A                     	;# 
  5151     031B                     	;# 
  5152     031C                     	;# 
  5153     031C                     	;# 
  5154     031D                     	;# 
  5155     031E                     	;# 
  5156     031F                     	;# 
  5157     038C                     	;# 
  5158     038C                     	;# 
  5159     038D                     	;# 
  5160     038E                     	;# 
  5161     0390                     	;# 
  5162     0390                     	;# 
  5163     0391                     	;# 
  5164     0392                     	;# 
  5165     048C                     	;# 
  5166     048C                     	;# 
  5167     048D                     	;# 
  5168     048E                     	;# 
  5169     048F                     	;# 
  5170     048F                     	;# 
  5171     0490                     	;# 
  5172     0491                     	;# 
  5173     0492                     	;# 
  5174     0492                     	;# 
  5175     0493                     	;# 
  5176     0494                     	;# 
  5177     0495                     	;# 
  5178     0495                     	;# 
  5179     0496                     	;# 
  5180     0497                     	;# 
  5181     0498                     	;# 
  5182     0499                     	;# 
  5183     049A                     	;# 
  5184     049B                     	;# 
  5185     049C                     	;# 
  5186     049D                     	;# 
  5187     050C                     	;# 
  5188     050C                     	;# 
  5189     050D                     	;# 
  5190     050E                     	;# 
  5191     050F                     	;# 
  5192     050F                     	;# 
  5193     0510                     	;# 
  5194     0511                     	;# 
  5195     0512                     	;# 
  5196     0512                     	;# 
  5197     0513                     	;# 
  5198     0514                     	;# 
  5199     0515                     	;# 
  5200     0515                     	;# 
  5201     0516                     	;# 
  5202     0517                     	;# 
  5203     0518                     	;# 
  5204     0519                     	;# 
  5205     051A                     	;# 
  5206     051B                     	;# 
  5207     051C                     	;# 
  5208     051D                     	;# 
  5209     058C                     	;# 
  5210     058C                     	;# 
  5211     058D                     	;# 
  5212     058E                     	;# 
  5213     058F                     	;# 
  5214     058F                     	;# 
  5215     0590                     	;# 
  5216     0591                     	;# 
  5217     0592                     	;# 
  5218     0593                     	;# 
  5219     059C                     	;# 
  5220     059C                     	;# 
  5221     059D                     	;# 
  5222     059D                     	;# 
  5223     059E                     	;# 
  5224     059F                     	;# 
  5225     060C                     	;# 
  5226     060C                     	;# 
  5227     060D                     	;# 
  5228     060D                     	;# 
  5229     060E                     	;# 
  5230     060F                     	;# 
  5231     0610                     	;# 
  5232     0611                     	;# 
  5233     0612                     	;# 
  5234     0613                     	;# 
  5235     0614                     	;# 
  5236     0616                     	;# 
  5237     0616                     	;# 
  5238     0617                     	;# 
  5239     0617                     	;# 
  5240     0618                     	;# 
  5241     0619                     	;# 
  5242     061A                     	;# 
  5243     061B                     	;# 
  5244     061C                     	;# 
  5245     061D                     	;# 
  5246     061E                     	;# 
  5247     068C                     	;# 
  5248     068D                     	;# 
  5249     068E                     	;# 
  5250     068F                     	;# 
  5251     0690                     	;# 
  5252     0691                     	;# 
  5253     0692                     	;# 
  5254     0693                     	;# 
  5255     0694                     	;# 
  5256     070C                     	;# 
  5257     070D                     	;# 
  5258     070E                     	;# 
  5259     070F                     	;# 
  5260     0710                     	;# 
  5261     0711                     	;# 
  5262     0712                     	;# 
  5263     0713                     	;# 
  5264     0714                     	;# 
  5265     0716                     	;# 
  5266     0717                     	;# 
  5267     0718                     	;# 
  5268     0719                     	;# 
  5269     071A                     	;# 
  5270     071B                     	;# 
  5271     071C                     	;# 
  5272     071D                     	;# 
  5273     071E                     	;# 
  5274     0796                     	;# 
  5275     0797                     	;# 
  5276     0798                     	;# 
  5277     0799                     	;# 
  5278     079A                     	;# 
  5279     079B                     	;# 
  5280     079C                     	;# 
  5281     079D                     	;# 
  5282     080C                     	;# 
  5283     080D                     	;# 
  5284     080E                     	;# 
  5285     080F                     	;# 
  5286     0810                     	;# 
  5287     0811                     	;# 
  5288     0813                     	;# 
  5289     0814                     	;# 
  5290     081A                     	;# 
  5291     081A                     	;# 
  5292     081B                     	;# 
  5293     081C                     	;# 
  5294     081C                     	;# 
  5295     081D                     	;# 
  5296     081E                     	;# 
  5297     081F                     	;# 
  5298     088C                     	;# 
  5299     088D                     	;# 
  5300     088E                     	;# 
  5301     088F                     	;# 
  5302     0890                     	;# 
  5303     0891                     	;# 
  5304     0892                     	;# 
  5305     0893                     	;# 
  5306     0895                     	;# 
  5307     0896                     	;# 
  5308     0897                     	;# 
  5309     0898                     	;# 
  5310     0899                     	;# 
  5311     089A                     	;# 
  5312     089B                     	;# 
  5313     090C                     	;# 
  5314     090E                     	;# 
  5315     090F                     	;# 
  5316     091F                     	;# 
  5317     098F                     	;# 
  5318     098F                     	;# 
  5319     0990                     	;# 
  5320     0991                     	;# 
  5321     0992                     	;# 
  5322     0993                     	;# 
  5323     0994                     	;# 
  5324     0995                     	;# 
  5325     0996                     	;# 
  5326     0997                     	;# 
  5327     0A19                     	;# 
  5328     0A19                     	;# 
  5329     0A1A                     	;# 
  5330     0A1A                     	;# 
  5331     0A1B                     	;# 
  5332     0A1B                     	;# 
  5333     0A1B                     	;# 
  5334     0A1C                     	;# 
  5335     0A1C                     	;# 
  5336     0A1D                     	;# 
  5337     0A1D                     	;# 
  5338     0A1E                     	;# 
  5339     0A1E                     	;# 
  5340     0A1F                     	;# 
  5341     0A1F                     	;# 
  5342     0A1F                     	;# 
  5343     1E0F                     	;# 
  5344     1E10                     	;# 
  5345     1E11                     	;# 
  5346     1E12                     	;# 
  5347     1E13                     	;# 
  5348     1E14                     	;# 
  5349     1E15                     	;# 
  5350     1E16                     	;# 
  5351     1E17                     	;# 
  5352     1E18                     	;# 
  5353     1E19                     	;# 
  5354     1E1A                     	;# 
  5355     1E1B                     	;# 
  5356     1E1C                     	;# 
  5357     1E1D                     	;# 
  5358     1E1E                     	;# 
  5359     1E1F                     	;# 
  5360     1E20                     	;# 
  5361     1E21                     	;# 
  5362     1E22                     	;# 
  5363     1E23                     	;# 
  5364     1E24                     	;# 
  5365     1E25                     	;# 
  5366     1E26                     	;# 
  5367     1E27                     	;# 
  5368     1E28                     	;# 
  5369     1E29                     	;# 
  5370     1E2A                     	;# 
  5371     1E2B                     	;# 
  5372     1E2C                     	;# 
  5373     1E2D                     	;# 
  5374     1E2E                     	;# 
  5375     1E2F                     	;# 
  5376     1E30                     	;# 
  5377     1E31                     	;# 
  5378     1E32                     	;# 
  5379     1E33                     	;# 
  5380     1E34                     	;# 
  5381     1E35                     	;# 
  5382     1E36                     	;# 
  5383     1E37                     	;# 
  5384     1E8F                     	;# 
  5385     1E90                     	;# 
  5386     1E91                     	;# 
  5387     1E92                     	;# 
  5388     1E93                     	;# 
  5389     1E94                     	;# 
  5390     1E95                     	;# 
  5391     1E96                     	;# 
  5392     1E97                     	;# 
  5393     1E9C                     	;# 
  5394     1E9D                     	;# 
  5395     1E9E                     	;# 
  5396     1EA1                     	;# 
  5397     1EA2                     	;# 
  5398     1EA3                     	;# 
  5399     1EA4                     	;# 
  5400     1EA5                     	;# 
  5401     1EA9                     	;# 
  5402     1EAA                     	;# 
  5403     1EAB                     	;# 
  5404     1EAC                     	;# 
  5405     1EB1                     	;# 
  5406     1EB2                     	;# 
  5407     1EB3                     	;# 
  5408     1EB8                     	;# 
  5409     1EB9                     	;# 
  5410     1EBA                     	;# 
  5411     1EBB                     	;# 
  5412     1EBC                     	;# 
  5413     1EBD                     	;# 
  5414     1EBE                     	;# 
  5415     1EC3                     	;# 
  5416     1EC5                     	;# 
  5417     1EC6                     	;# 
  5418     1EC7                     	;# 
  5419     1EC8                     	;# 
  5420     1EC9                     	;# 
  5421     1ECA                     	;# 
  5422     1ECB                     	;# 
  5423     1ECC                     	;# 
  5424     1ECD                     	;# 
  5425     1ECE                     	;# 
  5426     1F10                     	;# 
  5427     1F11                     	;# 
  5428     1F12                     	;# 
  5429     1F13                     	;# 
  5430     1F14                     	;# 
  5431     1F15                     	;# 
  5432     1F16                     	;# 
  5433     1F17                     	;# 
  5434     1F18                     	;# 
  5435     1F19                     	;# 
  5436     1F1A                     	;# 
  5437     1F1B                     	;# 
  5438     1F1C                     	;# 
  5439     1F1D                     	;# 
  5440     1F1E                     	;# 
  5441     1F1F                     	;# 
  5442     1F20                     	;# 
  5443     1F21                     	;# 
  5444     1F22                     	;# 
  5445     1F23                     	;# 
  5446     1F24                     	;# 
  5447     1F25                     	;# 
  5448     1F26                     	;# 
  5449     1F27                     	;# 
  5450     1F38                     	;# 
  5451     1F39                     	;# 
  5452     1F3A                     	;# 
  5453     1F3B                     	;# 
  5454     1F3C                     	;# 
  5455     1F3D                     	;# 
  5456     1F3E                     	;# 
  5457     1F3F                     	;# 
  5458     1F43                     	;# 
  5459     1F44                     	;# 
  5460     1F45                     	;# 
  5461     1F46                     	;# 
  5462     1F47                     	;# 
  5463     1F48                     	;# 
  5464     1F49                     	;# 
  5465     1F4A                     	;# 
  5466     1F4E                     	;# 
  5467     1F4F                     	;# 
  5468     1F50                     	;# 
  5469     1F51                     	;# 
  5470     1F52                     	;# 
  5471     1F53                     	;# 
  5472     1F54                     	;# 
  5473     1F55                     	;# 
  5474     1F65                     	;# 
  5475     1F66                     	;# 
  5476     1F67                     	;# 
  5477     1F68                     	;# 
  5478     1F69                     	;# 
  5479     1F6A                     	;# 
  5480     1F6B                     	;# 
  5481     1FE4                     	;# 
  5482     1FE5                     	;# 
  5483     1FE6                     	;# 
  5484     1FE7                     	;# 
  5485     1FE8                     	;# 
  5486     1FE8                     	;# 
  5487     1FE9                     	;# 
  5488     1FEA                     	;# 
  5489     1FEB                     	;# 
  5490     1FED                     	;# 
  5491     1FEE                     	;# 
  5492     1FEF                     	;# 
  5493     0000                     	;# 
  5494     0001                     	;# 
  5495     0002                     	;# 
  5496     0003                     	;# 
  5497     0004                     	;# 
  5498     0005                     	;# 
  5499     0006                     	;# 
  5500     0007                     	;# 
  5501     0008                     	;# 
  5502     0009                     	;# 
  5503     000A                     	;# 
  5504     000B                     	;# 
  5505     000C                     	;# 
  5506     000D                     	;# 
  5507     000E                     	;# 
  5508     0010                     	;# 
  5509     0012                     	;# 
  5510     0013                     	;# 
  5511     0014                     	;# 
  5512     0016                     	;# 
  5513     0018                     	;# 
  5514     0019                     	;# 
  5515     001A                     	;# 
  5516     001C                     	;# 
  5517     008C                     	;# 
  5518     008C                     	;# 
  5519     008D                     	;# 
  5520     008E                     	;# 
  5521     008E                     	;# 
  5522     008F                     	;# 
  5523     0090                     	;# 
  5524     0090                     	;# 
  5525     0091                     	;# 
  5526     0092                     	;# 
  5527     0092                     	;# 
  5528     0093                     	;# 
  5529     0094                     	;# 
  5530     0094                     	;# 
  5531     0095                     	;# 
  5532     0096                     	;# 
  5533     0096                     	;# 
  5534     0097                     	;# 
  5535     0098                     	;# 
  5536     0099                     	;# 
  5537     009A                     	;# 
  5538     009B                     	;# 
  5539     009B                     	;# 
  5540     009C                     	;# 
  5541     009D                     	;# 
  5542     009D                     	;# 
  5543     009E                     	;# 
  5544     009F                     	;# 
  5545     010C                     	;# 
  5546     010C                     	;# 
  5547     010D                     	;# 
  5548     010E                     	;# 
  5549     010F                     	;# 
  5550     010F                     	;# 
  5551     0110                     	;# 
  5552     0111                     	;# 
  5553     0112                     	;# 
  5554     0113                     	;# 
  5555     0114                     	;# 
  5556     0115                     	;# 
  5557     0116                     	;# 
  5558     0117                     	;# 
  5559     0118                     	;# 
  5560     0119                     	;# 
  5561     0119                     	;# 
  5562     0119                     	;# 
  5563     011A                     	;# 
  5564     011A                     	;# 
  5565     011A                     	;# 
  5566     011B                     	;# 
  5567     011B                     	;# 
  5568     011B                     	;# 
  5569     011B                     	;# 
  5570     011B                     	;# 
  5571     011C                     	;# 
  5572     011C                     	;# 
  5573     011C                     	;# 
  5574     011D                     	;# 
  5575     011D                     	;# 
  5576     011D                     	;# 
  5577     011E                     	;# 
  5578     011E                     	;# 
  5579     011E                     	;# 
  5580     011F                     	;# 
  5581     011F                     	;# 
  5582     011F                     	;# 
  5583     011F                     	;# 
  5584     011F                     	;# 
  5585     018C                     	;# 
  5586     018D                     	;# 
  5587     018E                     	;# 
  5588     018F                     	;# 
  5589     0190                     	;# 
  5590     0191                     	;# 
  5591     0192                     	;# 
  5592     0196                     	;# 
  5593     0197                     	;# 
  5594     0198                     	;# 
  5595     0199                     	;# 
  5596     019A                     	;# 
  5597     019B                     	;# 
  5598     019C                     	;# 
  5599     020C                     	;# 
  5600     020D                     	;# 
  5601     020E                     	;# 
  5602     020E                     	;# 
  5603     020F                     	;# 
  5604     020F                     	;# 
  5605     0210                     	;# 
  5606     0210                     	;# 
  5607     0211                     	;# 
  5608     0211                     	;# 
  5609     0212                     	;# 
  5610     0213                     	;# 
  5611     0214                     	;# 
  5612     0214                     	;# 
  5613     0215                     	;# 
  5614     0215                     	;# 
  5615     0216                     	;# 
  5616     0216                     	;# 
  5617     0217                     	;# 
  5618     0217                     	;# 
  5619     0218                     	;# 
  5620     0219                     	;# 
  5621     021A                     	;# 
  5622     021A                     	;# 
  5623     021B                     	;# 
  5624     021B                     	;# 
  5625     021C                     	;# 
  5626     021C                     	;# 
  5627     021D                     	;# 
  5628     021D                     	;# 
  5629     021E                     	;# 
  5630     021F                     	;# 
  5631     028C                     	;# 
  5632     028C                     	;# 
  5633     028D                     	;# 
  5634     028D                     	;# 
  5635     028E                     	;# 
  5636     028F                     	;# 
  5637     0290                     	;# 
  5638     0291                     	;# 
  5639     0292                     	;# 
  5640     0292                     	;# 
  5641     0293                     	;# 
  5642     0293                     	;# 
  5643     0294                     	;# 
  5644     0295                     	;# 
  5645     0296                     	;# 
  5646     0297                     	;# 
  5647     0298                     	;# 
  5648     0298                     	;# 
  5649     0299                     	;# 
  5650     0299                     	;# 
  5651     029A                     	;# 
  5652     029B                     	;# 
  5653     029C                     	;# 
  5654     029D                     	;# 
  5655     029F                     	;# 
  5656     030C                     	;# 
  5657     030C                     	;# 
  5658     030D                     	;# 
  5659     030E                     	;# 
  5660     030F                     	;# 
  5661     0310                     	;# 
  5662     0310                     	;# 
  5663     0311                     	;# 
  5664     0312                     	;# 
  5665     0313                     	;# 
  5666     0314                     	;# 
  5667     0314                     	;# 
  5668     0315                     	;# 
  5669     0316                     	;# 
  5670     0317                     	;# 
  5671     0318                     	;# 
  5672     0318                     	;# 
  5673     0319                     	;# 
  5674     031A                     	;# 
  5675     031B                     	;# 
  5676     031C                     	;# 
  5677     031C                     	;# 
  5678     031D                     	;# 
  5679     031E                     	;# 
  5680     031F                     	;# 
  5681     038C                     	;# 
  5682     038C                     	;# 
  5683     038D                     	;# 
  5684     038E                     	;# 
  5685     0390                     	;# 
  5686     0390                     	;# 
  5687     0391                     	;# 
  5688     0392                     	;# 
  5689     048C                     	;# 
  5690     048C                     	;# 
  5691     048D                     	;# 
  5692     048E                     	;# 
  5693     048F                     	;# 
  5694     048F                     	;# 
  5695     0490                     	;# 
  5696     0491                     	;# 
  5697     0492                     	;# 
  5698     0492                     	;# 
  5699     0493                     	;# 
  5700     0494                     	;# 
  5701     0495                     	;# 
  5702     0495                     	;# 
  5703     0496                     	;# 
  5704     0497                     	;# 
  5705     0498                     	;# 
  5706     0499                     	;# 
  5707     049A                     	;# 
  5708     049B                     	;# 
  5709     049C                     	;# 
  5710     049D                     	;# 
  5711     050C                     	;# 
  5712     050C                     	;# 
  5713     050D                     	;# 
  5714     050E                     	;# 
  5715     050F                     	;# 
  5716     050F                     	;# 
  5717     0510                     	;# 
  5718     0511                     	;# 
  5719     0512                     	;# 
  5720     0512                     	;# 
  5721     0513                     	;# 
  5722     0514                     	;# 
  5723     0515                     	;# 
  5724     0515                     	;# 
  5725     0516                     	;# 
  5726     0517                     	;# 
  5727     0518                     	;# 
  5728     0519                     	;# 
  5729     051A                     	;# 
  5730     051B                     	;# 
  5731     051C                     	;# 
  5732     051D                     	;# 
  5733     058C                     	;# 
  5734     058C                     	;# 
  5735     058D                     	;# 
  5736     058E                     	;# 
  5737     058F                     	;# 
  5738     058F                     	;# 
  5739     0590                     	;# 
  5740     0591                     	;# 
  5741     0592                     	;# 
  5742     0593                     	;# 
  5743     059C                     	;# 
  5744     059C                     	;# 
  5745     059D                     	;# 
  5746     059D                     	;# 
  5747     059E                     	;# 
  5748     059F                     	;# 
  5749     060C                     	;# 
  5750     060C                     	;# 
  5751     060D                     	;# 
  5752     060D                     	;# 
  5753     060E                     	;# 
  5754     060F                     	;# 
  5755     0610                     	;# 
  5756     0611                     	;# 
  5757     0612                     	;# 
  5758     0613                     	;# 
  5759     0614                     	;# 
  5760     0616                     	;# 
  5761     0616                     	;# 
  5762     0617                     	;# 
  5763     0617                     	;# 
  5764     0618                     	;# 
  5765     0619                     	;# 
  5766     061A                     	;# 
  5767     061B                     	;# 
  5768     061C                     	;# 
  5769     061D                     	;# 
  5770     061E                     	;# 
  5771     068C                     	;# 
  5772     068D                     	;# 
  5773     068E                     	;# 
  5774     068F                     	;# 
  5775     0690                     	;# 
  5776     0691                     	;# 
  5777     0692                     	;# 
  5778     0693                     	;# 
  5779     0694                     	;# 
  5780     070C                     	;# 
  5781     070D                     	;# 
  5782     070E                     	;# 
  5783     070F                     	;# 
  5784     0710                     	;# 
  5785     0711                     	;# 
  5786     0712                     	;# 
  5787     0713                     	;# 
  5788     0714                     	;# 
  5789     0716                     	;# 
  5790     0717                     	;# 
  5791     0718                     	;# 
  5792     0719                     	;# 
  5793     071A                     	;# 
  5794     071B                     	;# 
  5795     071C                     	;# 
  5796     071D                     	;# 
  5797     071E                     	;# 
  5798     0796                     	;# 
  5799     0797                     	;# 
  5800     0798                     	;# 
  5801     0799                     	;# 
  5802     079A                     	;# 
  5803     079B                     	;# 
  5804     079C                     	;# 
  5805     079D                     	;# 
  5806     080C                     	;# 
  5807     080D                     	;# 
  5808     080E                     	;# 
  5809     080F                     	;# 
  5810     0810                     	;# 
  5811     0811                     	;# 
  5812     0813                     	;# 
  5813     0814                     	;# 
  5814     081A                     	;# 
  5815     081A                     	;# 
  5816     081B                     	;# 
  5817     081C                     	;# 
  5818     081C                     	;# 
  5819     081D                     	;# 
  5820     081E                     	;# 
  5821     081F                     	;# 
  5822     088C                     	;# 
  5823     088D                     	;# 
  5824     088E                     	;# 
  5825     088F                     	;# 
  5826     0890                     	;# 
  5827     0891                     	;# 
  5828     0892                     	;# 
  5829     0893                     	;# 
  5830     0895                     	;# 
  5831     0896                     	;# 
  5832     0897                     	;# 
  5833     0898                     	;# 
  5834     0899                     	;# 
  5835     089A                     	;# 
  5836     089B                     	;# 
  5837     090C                     	;# 
  5838     090E                     	;# 
  5839     090F                     	;# 
  5840     091F                     	;# 
  5841     098F                     	;# 
  5842     098F                     	;# 
  5843     0990                     	;# 
  5844     0991                     	;# 
  5845     0992                     	;# 
  5846     0993                     	;# 
  5847     0994                     	;# 
  5848     0995                     	;# 
  5849     0996                     	;# 
  5850     0997                     	;# 
  5851     0A19                     	;# 
  5852     0A19                     	;# 
  5853     0A1A                     	;# 
  5854     0A1A                     	;# 
  5855     0A1B                     	;# 
  5856     0A1B                     	;# 
  5857     0A1B                     	;# 
  5858     0A1C                     	;# 
  5859     0A1C                     	;# 
  5860     0A1D                     	;# 
  5861     0A1D                     	;# 
  5862     0A1E                     	;# 
  5863     0A1E                     	;# 
  5864     0A1F                     	;# 
  5865     0A1F                     	;# 
  5866     0A1F                     	;# 
  5867     1E0F                     	;# 
  5868     1E10                     	;# 
  5869     1E11                     	;# 
  5870     1E12                     	;# 
  5871     1E13                     	;# 
  5872     1E14                     	;# 
  5873     1E15                     	;# 
  5874     1E16                     	;# 
  5875     1E17                     	;# 
  5876     1E18                     	;# 
  5877     1E19                     	;# 
  5878     1E1A                     	;# 
  5879     1E1B                     	;# 
  5880     1E1C                     	;# 
  5881     1E1D                     	;# 
  5882     1E1E                     	;# 
  5883     1E1F                     	;# 
  5884     1E20                     	;# 
  5885     1E21                     	;# 
  5886     1E22                     	;# 
  5887     1E23                     	;# 
  5888     1E24                     	;# 
  5889     1E25                     	;# 
  5890     1E26                     	;# 
  5891     1E27                     	;# 
  5892     1E28                     	;# 
  5893     1E29                     	;# 
  5894     1E2A                     	;# 
  5895     1E2B                     	;# 
  5896     1E2C                     	;# 
  5897     1E2D                     	;# 
  5898     1E2E                     	;# 
  5899     1E2F                     	;# 
  5900     1E30                     	;# 
  5901     1E31                     	;# 
  5902     1E32                     	;# 
  5903     1E33                     	;# 
  5904     1E34                     	;# 
  5905     1E35                     	;# 
  5906     1E36                     	;# 
  5907     1E37                     	;# 
  5908     1E8F                     	;# 
  5909     1E90                     	;# 
  5910     1E91                     	;# 
  5911     1E92                     	;# 
  5912     1E93                     	;# 
  5913     1E94                     	;# 
  5914     1E95                     	;# 
  5915     1E96                     	;# 
  5916     1E97                     	;# 
  5917     1E9C                     	;# 
  5918     1E9D                     	;# 
  5919     1E9E                     	;# 
  5920     1EA1                     	;# 
  5921     1EA2                     	;# 
  5922     1EA3                     	;# 
  5923     1EA4                     	;# 
  5924     1EA5                     	;# 
  5925     1EA9                     	;# 
  5926     1EAA                     	;# 
  5927     1EAB                     	;# 
  5928     1EAC                     	;# 
  5929     1EB1                     	;# 
  5930     1EB2                     	;# 
  5931     1EB3                     	;# 
  5932     1EB8                     	;# 
  5933     1EB9                     	;# 
  5934     1EBA                     	;# 
  5935     1EBB                     	;# 
  5936     1EBC                     	;# 
  5937     1EBD                     	;# 
  5938     1EBE                     	;# 
  5939     1EC3                     	;# 
  5940     1EC5                     	;# 
  5941     1EC6                     	;# 
  5942     1EC7                     	;# 
  5943     1EC8                     	;# 
  5944     1EC9                     	;# 
  5945     1ECA                     	;# 
  5946     1ECB                     	;# 
  5947     1ECC                     	;# 
  5948     1ECD                     	;# 
  5949     1ECE                     	;# 
  5950     1F10                     	;# 
  5951     1F11                     	;# 
  5952     1F12                     	;# 
  5953     1F13                     	;# 
  5954     1F14                     	;# 
  5955     1F15                     	;# 
  5956     1F16                     	;# 
  5957     1F17                     	;# 
  5958     1F18                     	;# 
  5959     1F19                     	;# 
  5960     1F1A                     	;# 
  5961     1F1B                     	;# 
  5962     1F1C                     	;# 
  5963     1F1D                     	;# 
  5964     1F1E                     	;# 
  5965     1F1F                     	;# 
  5966     1F20                     	;# 
  5967     1F21                     	;# 
  5968     1F22                     	;# 
  5969     1F23                     	;# 
  5970     1F24                     	;# 
  5971     1F25                     	;# 
  5972     1F26                     	;# 
  5973     1F27                     	;# 
  5974     1F38                     	;# 
  5975     1F39                     	;# 
  5976     1F3A                     	;# 
  5977     1F3B                     	;# 
  5978     1F3C                     	;# 
  5979     1F3D                     	;# 
  5980     1F3E                     	;# 
  5981     1F3F                     	;# 
  5982     1F43                     	;# 
  5983     1F44                     	;# 
  5984     1F45                     	;# 
  5985     1F46                     	;# 
  5986     1F47                     	;# 
  5987     1F48                     	;# 
  5988     1F49                     	;# 
  5989     1F4A                     	;# 
  5990     1F4E                     	;# 
  5991     1F4F                     	;# 
  5992     1F50                     	;# 
  5993     1F51                     	;# 
  5994     1F52                     	;# 
  5995     1F53                     	;# 
  5996     1F54                     	;# 
  5997     1F55                     	;# 
  5998     1F65                     	;# 
  5999     1F66                     	;# 
  6000     1F67                     	;# 
  6001     1F68                     	;# 
  6002     1F69                     	;# 
  6003     1F6A                     	;# 
  6004     1F6B                     	;# 
  6005     1FE4                     	;# 
  6006     1FE5                     	;# 
  6007     1FE6                     	;# 
  6008     1FE7                     	;# 
  6009     1FE8                     	;# 
  6010     1FE8                     	;# 
  6011     1FE9                     	;# 
  6012     1FEA                     	;# 
  6013     1FEB                     	;# 
  6014     1FED                     	;# 
  6015     1FEE                     	;# 
  6016     1FEF                     	;# 
  6017     0000                     	;# 
  6018     0001                     	;# 
  6019     0002                     	;# 
  6020     0003                     	;# 
  6021     0004                     	;# 
  6022     0005                     	;# 
  6023     0006                     	;# 
  6024     0007                     	;# 
  6025     0008                     	;# 
  6026     0009                     	;# 
  6027     000A                     	;# 
  6028     000B                     	;# 
  6029     000C                     	;# 
  6030     000D                     	;# 
  6031     000E                     	;# 
  6032     0010                     	;# 
  6033     0012                     	;# 
  6034     0013                     	;# 
  6035     0014                     	;# 
  6036     0016                     	;# 
  6037     0018                     	;# 
  6038     0019                     	;# 
  6039     001A                     	;# 
  6040     001C                     	;# 
  6041     008C                     	;# 
  6042     008C                     	;# 
  6043     008D                     	;# 
  6044     008E                     	;# 
  6045     008E                     	;# 
  6046     008F                     	;# 
  6047     0090                     	;# 
  6048     0090                     	;# 
  6049     0091                     	;# 
  6050     0092                     	;# 
  6051     0092                     	;# 
  6052     0093                     	;# 
  6053     0094                     	;# 
  6054     0094                     	;# 
  6055     0095                     	;# 
  6056     0096                     	;# 
  6057     0096                     	;# 
  6058     0097                     	;# 
  6059     0098                     	;# 
  6060     0099                     	;# 
  6061     009A                     	;# 
  6062     009B                     	;# 
  6063     009B                     	;# 
  6064     009C                     	;# 
  6065     009D                     	;# 
  6066     009D                     	;# 
  6067     009E                     	;# 
  6068     009F                     	;# 
  6069     010C                     	;# 
  6070     010C                     	;# 
  6071     010D                     	;# 
  6072     010E                     	;# 
  6073     010F                     	;# 
  6074     010F                     	;# 
  6075     0110                     	;# 
  6076     0111                     	;# 
  6077     0112                     	;# 
  6078     0113                     	;# 
  6079     0114                     	;# 
  6080     0115                     	;# 
  6081     0116                     	;# 
  6082     0117                     	;# 
  6083     0118                     	;# 
  6084     0119                     	;# 
  6085     0119                     	;# 
  6086     0119                     	;# 
  6087     011A                     	;# 
  6088     011A                     	;# 
  6089     011A                     	;# 
  6090     011B                     	;# 
  6091     011B                     	;# 
  6092     011B                     	;# 
  6093     011B                     	;# 
  6094     011B                     	;# 
  6095     011C                     	;# 
  6096     011C                     	;# 
  6097     011C                     	;# 
  6098     011D                     	;# 
  6099     011D                     	;# 
  6100     011D                     	;# 
  6101     011E                     	;# 
  6102     011E                     	;# 
  6103     011E                     	;# 
  6104     011F                     	;# 
  6105     011F                     	;# 
  6106     011F                     	;# 
  6107     011F                     	;# 
  6108     011F                     	;# 
  6109     018C                     	;# 
  6110     018D                     	;# 
  6111     018E                     	;# 
  6112     018F                     	;# 
  6113     0190                     	;# 
  6114     0191                     	;# 
  6115     0192                     	;# 
  6116     0196                     	;# 
  6117     0197                     	;# 
  6118     0198                     	;# 
  6119     0199                     	;# 
  6120     019A                     	;# 
  6121     019B                     	;# 
  6122     019C                     	;# 
  6123     020C                     	;# 
  6124     020D                     	;# 
  6125     020E                     	;# 
  6126     020E                     	;# 
  6127     020F                     	;# 
  6128     020F                     	;# 
  6129     0210                     	;# 
  6130     0210                     	;# 
  6131     0211                     	;# 
  6132     0211                     	;# 
  6133     0212                     	;# 
  6134     0213                     	;# 
  6135     0214                     	;# 
  6136     0214                     	;# 
  6137     0215                     	;# 
  6138     0215                     	;# 
  6139     0216                     	;# 
  6140     0216                     	;# 
  6141     0217                     	;# 
  6142     0217                     	;# 
  6143     0218                     	;# 
  6144     0219                     	;# 
  6145     021A                     	;# 
  6146     021A                     	;# 
  6147     021B                     	;# 
  6148     021B                     	;# 
  6149     021C                     	;# 
  6150     021C                     	;# 
  6151     021D                     	;# 
  6152     021D                     	;# 
  6153     021E                     	;# 
  6154     021F                     	;# 
  6155     028C                     	;# 
  6156     028C                     	;# 
  6157     028D                     	;# 
  6158     028D                     	;# 
  6159     028E                     	;# 
  6160     028F                     	;# 
  6161     0290                     	;# 
  6162     0291                     	;# 
  6163     0292                     	;# 
  6164     0292                     	;# 
  6165     0293                     	;# 
  6166     0293                     	;# 
  6167     0294                     	;# 
  6168     0295                     	;# 
  6169     0296                     	;# 
  6170     0297                     	;# 
  6171     0298                     	;# 
  6172     0298                     	;# 
  6173     0299                     	;# 
  6174     0299                     	;# 
  6175     029A                     	;# 
  6176     029B                     	;# 
  6177     029C                     	;# 
  6178     029D                     	;# 
  6179     029F                     	;# 
  6180     030C                     	;# 
  6181     030C                     	;# 
  6182     030D                     	;# 
  6183     030E                     	;# 
  6184     030F                     	;# 
  6185     0310                     	;# 
  6186     0310                     	;# 
  6187     0311                     	;# 
  6188     0312                     	;# 
  6189     0313                     	;# 
  6190     0314                     	;# 
  6191     0314                     	;# 
  6192     0315                     	;# 
  6193     0316                     	;# 
  6194     0317                     	;# 
  6195     0318                     	;# 
  6196     0318                     	;# 
  6197     0319                     	;# 
  6198     031A                     	;# 
  6199     031B                     	;# 
  6200     031C                     	;# 
  6201     031C                     	;# 
  6202     031D                     	;# 
  6203     031E                     	;# 
  6204     031F                     	;# 
  6205     038C                     	;# 
  6206     038C                     	;# 
  6207     038D                     	;# 
  6208     038E                     	;# 
  6209     0390                     	;# 
  6210     0390                     	;# 
  6211     0391                     	;# 
  6212     0392                     	;# 
  6213     048C                     	;# 
  6214     048C                     	;# 
  6215     048D                     	;# 
  6216     048E                     	;# 
  6217     048F                     	;# 
  6218     048F                     	;# 
  6219     0490                     	;# 
  6220     0491                     	;# 
  6221     0492                     	;# 
  6222     0492                     	;# 
  6223     0493                     	;# 
  6224     0494                     	;# 
  6225     0495                     	;# 
  6226     0495                     	;# 
  6227     0496                     	;# 
  6228     0497                     	;# 
  6229     0498                     	;# 
  6230     0499                     	;# 
  6231     049A                     	;# 
  6232     049B                     	;# 
  6233     049C                     	;# 
  6234     049D                     	;# 
  6235     050C                     	;# 
  6236     050C                     	;# 
  6237     050D                     	;# 
  6238     050E                     	;# 
  6239     050F                     	;# 
  6240     050F                     	;# 
  6241     0510                     	;# 
  6242     0511                     	;# 
  6243     0512                     	;# 
  6244     0512                     	;# 
  6245     0513                     	;# 
  6246     0514                     	;# 
  6247     0515                     	;# 
  6248     0515                     	;# 
  6249     0516                     	;# 
  6250     0517                     	;# 
  6251     0518                     	;# 
  6252     0519                     	;# 
  6253     051A                     	;# 
  6254     051B                     	;# 
  6255     051C                     	;# 
  6256     051D                     	;# 
  6257     058C                     	;# 
  6258     058C                     	;# 
  6259     058D                     	;# 
  6260     058E                     	;# 
  6261     058F                     	;# 
  6262     058F                     	;# 
  6263     0590                     	;# 
  6264     0591                     	;# 
  6265     0592                     	;# 
  6266     0593                     	;# 
  6267     059C                     	;# 
  6268     059C                     	;# 
  6269     059D                     	;# 
  6270     059D                     	;# 
  6271     059E                     	;# 
  6272     059F                     	;# 
  6273     060C                     	;# 
  6274     060C                     	;# 
  6275     060D                     	;# 
  6276     060D                     	;# 
  6277     060E                     	;# 
  6278     060F                     	;# 
  6279     0610                     	;# 
  6280     0611                     	;# 
  6281     0612                     	;# 
  6282     0613                     	;# 
  6283     0614                     	;# 
  6284     0616                     	;# 
  6285     0616                     	;# 
  6286     0617                     	;# 
  6287     0617                     	;# 
  6288     0618                     	;# 
  6289     0619                     	;# 
  6290     061A                     	;# 
  6291     061B                     	;# 
  6292     061C                     	;# 
  6293     061D                     	;# 
  6294     061E                     	;# 
  6295     068C                     	;# 
  6296     068D                     	;# 
  6297     068E                     	;# 
  6298     068F                     	;# 
  6299     0690                     	;# 
  6300     0691                     	;# 
  6301     0692                     	;# 
  6302     0693                     	;# 
  6303     0694                     	;# 
  6304     070C                     	;# 
  6305     070D                     	;# 
  6306     070E                     	;# 
  6307     070F                     	;# 
  6308     0710                     	;# 
  6309     0711                     	;# 
  6310     0712                     	;# 
  6311     0713                     	;# 
  6312     0714                     	;# 
  6313     0716                     	;# 
  6314     0717                     	;# 
  6315     0718                     	;# 
  6316     0719                     	;# 
  6317     071A                     	;# 
  6318     071B                     	;# 
  6319     071C                     	;# 
  6320     071D                     	;# 
  6321     071E                     	;# 
  6322     0796                     	;# 
  6323     0797                     	;# 
  6324     0798                     	;# 
  6325     0799                     	;# 
  6326     079A                     	;# 
  6327     079B                     	;# 
  6328     079C                     	;# 
  6329     079D                     	;# 
  6330     080C                     	;# 
  6331     080D                     	;# 
  6332     080E                     	;# 
  6333     080F                     	;# 
  6334     0810                     	;# 
  6335     0811                     	;# 
  6336     0813                     	;# 
  6337     0814                     	;# 
  6338     081A                     	;# 
  6339     081A                     	;# 
  6340     081B                     	;# 
  6341     081C                     	;# 
  6342     081C                     	;# 
  6343     081D                     	;# 
  6344     081E                     	;# 
  6345     081F                     	;# 
  6346     088C                     	;# 
  6347     088D                     	;# 
  6348     088E                     	;# 
  6349     088F                     	;# 
  6350     0890                     	;# 
  6351     0891                     	;# 
  6352     0892                     	;# 
  6353     0893                     	;# 
  6354     0895                     	;# 
  6355     0896                     	;# 
  6356     0897                     	;# 
  6357     0898                     	;# 
  6358     0899                     	;# 
  6359     089A                     	;# 
  6360     089B                     	;# 
  6361     090C                     	;# 
  6362     090E                     	;# 
  6363     090F                     	;# 
  6364     091F                     	;# 
  6365     098F                     	;# 
  6366     098F                     	;# 
  6367     0990                     	;# 
  6368     0991                     	;# 
  6369     0992                     	;# 
  6370     0993                     	;# 
  6371     0994                     	;# 
  6372     0995                     	;# 
  6373     0996                     	;# 
  6374     0997                     	;# 
  6375     0A19                     	;# 
  6376     0A19                     	;# 
  6377     0A1A                     	;# 
  6378     0A1A                     	;# 
  6379     0A1B                     	;# 
  6380     0A1B                     	;# 
  6381     0A1B                     	;# 
  6382     0A1C                     	;# 
  6383     0A1C                     	;# 
  6384     0A1D                     	;# 
  6385     0A1D                     	;# 
  6386     0A1E                     	;# 
  6387     0A1E                     	;# 
  6388     0A1F                     	;# 
  6389     0A1F                     	;# 
  6390     0A1F                     	;# 
  6391     1E0F                     	;# 
  6392     1E10                     	;# 
  6393     1E11                     	;# 
  6394     1E12                     	;# 
  6395     1E13                     	;# 
  6396     1E14                     	;# 
  6397     1E15                     	;# 
  6398     1E16                     	;# 
  6399     1E17                     	;# 
  6400     1E18                     	;# 
  6401     1E19                     	;# 
  6402     1E1A                     	;# 
  6403     1E1B                     	;# 
  6404     1E1C                     	;# 
  6405     1E1D                     	;# 
  6406     1E1E                     	;# 
  6407     1E1F                     	;# 
  6408     1E20                     	;# 
  6409     1E21                     	;# 
  6410     1E22                     	;# 
  6411     1E23                     	;# 
  6412     1E24                     	;# 
  6413     1E25                     	;# 
  6414     1E26                     	;# 
  6415     1E27                     	;# 
  6416     1E28                     	;# 
  6417     1E29                     	;# 
  6418     1E2A                     	;# 
  6419     1E2B                     	;# 
  6420     1E2C                     	;# 
  6421     1E2D                     	;# 
  6422     1E2E                     	;# 
  6423     1E2F                     	;# 
  6424     1E30                     	;# 
  6425     1E31                     	;# 
  6426     1E32                     	;# 
  6427     1E33                     	;# 
  6428     1E34                     	;# 
  6429     1E35                     	;# 
  6430     1E36                     	;# 
  6431     1E37                     	;# 
  6432     1E8F                     	;# 
  6433     1E90                     	;# 
  6434     1E91                     	;# 
  6435     1E92                     	;# 
  6436     1E93                     	;# 
  6437     1E94                     	;# 
  6438     1E95                     	;# 
  6439     1E96                     	;# 
  6440     1E97                     	;# 
  6441     1E9C                     	;# 
  6442     1E9D                     	;# 
  6443     1E9E                     	;# 
  6444     1EA1                     	;# 
  6445     1EA2                     	;# 
  6446     1EA3                     	;# 
  6447     1EA4                     	;# 
  6448     1EA5                     	;# 
  6449     1EA9                     	;# 
  6450     1EAA                     	;# 
  6451     1EAB                     	;# 
  6452     1EAC                     	;# 
  6453     1EB1                     	;# 
  6454     1EB2                     	;# 
  6455     1EB3                     	;# 
  6456     1EB8                     	;# 
  6457     1EB9                     	;# 
  6458     1EBA                     	;# 
  6459     1EBB                     	;# 
  6460     1EBC                     	;# 
  6461     1EBD                     	;# 
  6462     1EBE                     	;# 
  6463     1EC3                     	;# 
  6464     1EC5                     	;# 
  6465     1EC6                     	;# 
  6466     1EC7                     	;# 
  6467     1EC8                     	;# 
  6468     1EC9                     	;# 
  6469     1ECA                     	;# 
  6470     1ECB                     	;# 
  6471     1ECC                     	;# 
  6472     1ECD                     	;# 
  6473     1ECE                     	;# 
  6474     1F10                     	;# 
  6475     1F11                     	;# 
  6476     1F12                     	;# 
  6477     1F13                     	;# 
  6478     1F14                     	;# 
  6479     1F15                     	;# 
  6480     1F16                     	;# 
  6481     1F17                     	;# 
  6482     1F18                     	;# 
  6483     1F19                     	;# 
  6484     1F1A                     	;# 
  6485     1F1B                     	;# 
  6486     1F1C                     	;# 
  6487     1F1D                     	;# 
  6488     1F1E                     	;# 
  6489     1F1F                     	;# 
  6490     1F20                     	;# 
  6491     1F21                     	;# 
  6492     1F22                     	;# 
  6493     1F23                     	;# 
  6494     1F24                     	;# 
  6495     1F25                     	;# 
  6496     1F26                     	;# 
  6497     1F27                     	;# 
  6498     1F38                     	;# 
  6499     1F39                     	;# 
  6500     1F3A                     	;# 
  6501     1F3B                     	;# 
  6502     1F3C                     	;# 
  6503     1F3D                     	;# 
  6504     1F3E                     	;# 
  6505     1F3F                     	;# 
  6506     1F43                     	;# 
  6507     1F44                     	;# 
  6508     1F45                     	;# 
  6509     1F46                     	;# 
  6510     1F47                     	;# 
  6511     1F48                     	;# 
  6512     1F49                     	;# 
  6513     1F4A                     	;# 
  6514     1F4E                     	;# 
  6515     1F4F                     	;# 
  6516     1F50                     	;# 
  6517     1F51                     	;# 
  6518     1F52                     	;# 
  6519     1F53                     	;# 
  6520     1F54                     	;# 
  6521     1F55                     	;# 
  6522     1F65                     	;# 
  6523     1F66                     	;# 
  6524     1F67                     	;# 
  6525     1F68                     	;# 
  6526     1F69                     	;# 
  6527     1F6A                     	;# 
  6528     1F6B                     	;# 
  6529     1FE4                     	;# 
  6530     1FE5                     	;# 
  6531     1FE6                     	;# 
  6532     1FE7                     	;# 
  6533     1FE8                     	;# 
  6534     1FE8                     	;# 
  6535     1FE9                     	;# 
  6536     1FEA                     	;# 
  6537     1FEB                     	;# 
  6538     1FED                     	;# 
  6539     1FEE                     	;# 
  6540     1FEF                     	;# 
  6541     0000                     	;# 
  6542     0001                     	;# 
  6543     0002                     	;# 
  6544     0003                     	;# 
  6545     0004                     	;# 
  6546     0005                     	;# 
  6547     0006                     	;# 
  6548     0007                     	;# 
  6549     0008                     	;# 
  6550     0009                     	;# 
  6551     000A                     	;# 
  6552     000B                     	;# 
  6553     000C                     	;# 
  6554     000D                     	;# 
  6555     000E                     	;# 
  6556     0010                     	;# 
  6557     0012                     	;# 
  6558     0013                     	;# 
  6559     0014                     	;# 
  6560     0016                     	;# 
  6561     0018                     	;# 
  6562     0019                     	;# 
  6563     001A                     	;# 
  6564     001C                     	;# 
  6565     008C                     	;# 
  6566     008C                     	;# 
  6567     008D                     	;# 
  6568     008E                     	;# 
  6569     008E                     	;# 
  6570     008F                     	;# 
  6571     0090                     	;# 
  6572     0090                     	;# 
  6573     0091                     	;# 
  6574     0092                     	;# 
  6575     0092                     	;# 
  6576     0093                     	;# 
  6577     0094                     	;# 
  6578     0094                     	;# 
  6579     0095                     	;# 
  6580     0096                     	;# 
  6581     0096                     	;# 
  6582     0097                     	;# 
  6583     0098                     	;# 
  6584     0099                     	;# 
  6585     009A                     	;# 
  6586     009B                     	;# 
  6587     009B                     	;# 
  6588     009C                     	;# 
  6589     009D                     	;# 
  6590     009D                     	;# 
  6591     009E                     	;# 
  6592     009F                     	;# 
  6593     010C                     	;# 
  6594     010C                     	;# 
  6595     010D                     	;# 
  6596     010E                     	;# 
  6597     010F                     	;# 
  6598     010F                     	;# 
  6599     0110                     	;# 
  6600     0111                     	;# 
  6601     0112                     	;# 
  6602     0113                     	;# 
  6603     0114                     	;# 
  6604     0115                     	;# 
  6605     0116                     	;# 
  6606     0117                     	;# 
  6607     0118                     	;# 
  6608     0119                     	;# 
  6609     0119                     	;# 
  6610     0119                     	;# 
  6611     011A                     	;# 
  6612     011A                     	;# 
  6613     011A                     	;# 
  6614     011B                     	;# 
  6615     011B                     	;# 
  6616     011B                     	;# 
  6617     011B                     	;# 
  6618     011B                     	;# 
  6619     011C                     	;# 
  6620     011C                     	;# 
  6621     011C                     	;# 
  6622     011D                     	;# 
  6623     011D                     	;# 
  6624     011D                     	;# 
  6625     011E                     	;# 
  6626     011E                     	;# 
  6627     011E                     	;# 
  6628     011F                     	;# 
  6629     011F                     	;# 
  6630     011F                     	;# 
  6631     011F                     	;# 
  6632     011F                     	;# 
  6633     018C                     	;# 
  6634     018D                     	;# 
  6635     018E                     	;# 
  6636     018F                     	;# 
  6637     0190                     	;# 
  6638     0191                     	;# 
  6639     0192                     	;# 
  6640     0196                     	;# 
  6641     0197                     	;# 
  6642     0198                     	;# 
  6643     0199                     	;# 
  6644     019A                     	;# 
  6645     019B                     	;# 
  6646     019C                     	;# 
  6647     020C                     	;# 
  6648     020D                     	;# 
  6649     020E                     	;# 
  6650     020E                     	;# 
  6651     020F                     	;# 
  6652     020F                     	;# 
  6653     0210                     	;# 
  6654     0210                     	;# 
  6655     0211                     	;# 
  6656     0211                     	;# 
  6657     0212                     	;# 
  6658     0213                     	;# 
  6659     0214                     	;# 
  6660     0214                     	;# 
  6661     0215                     	;# 
  6662     0215                     	;# 
  6663     0216                     	;# 
  6664     0216                     	;# 
  6665     0217                     	;# 
  6666     0217                     	;# 
  6667     0218                     	;# 
  6668     0219                     	;# 
  6669     021A                     	;# 
  6670     021A                     	;# 
  6671     021B                     	;# 
  6672     021B                     	;# 
  6673     021C                     	;# 
  6674     021C                     	;# 
  6675     021D                     	;# 
  6676     021D                     	;# 
  6677     021E                     	;# 
  6678     021F                     	;# 
  6679     028C                     	;# 
  6680     028C                     	;# 
  6681     028D                     	;# 
  6682     028D                     	;# 
  6683     028E                     	;# 
  6684     028F                     	;# 
  6685     0290                     	;# 
  6686     0291                     	;# 
  6687     0292                     	;# 
  6688     0292                     	;# 
  6689     0293                     	;# 
  6690     0293                     	;# 
  6691     0294                     	;# 
  6692     0295                     	;# 
  6693     0296                     	;# 
  6694     0297                     	;# 
  6695     0298                     	;# 
  6696     0298                     	;# 
  6697     0299                     	;# 
  6698     0299                     	;# 
  6699     029A                     	;# 
  6700     029B                     	;# 
  6701     029C                     	;# 
  6702     029D                     	;# 
  6703     029F                     	;# 
  6704     030C                     	;# 
  6705     030C                     	;# 
  6706     030D                     	;# 
  6707     030E                     	;# 
  6708     030F                     	;# 
  6709     0310                     	;# 
  6710     0310                     	;# 
  6711     0311                     	;# 
  6712     0312                     	;# 
  6713     0313                     	;# 
  6714     0314                     	;# 
  6715     0314                     	;# 
  6716     0315                     	;# 
  6717     0316                     	;# 
  6718     0317                     	;# 
  6719     0318                     	;# 
  6720     0318                     	;# 
  6721     0319                     	;# 
  6722     031A                     	;# 
  6723     031B                     	;# 
  6724     031C                     	;# 
  6725     031C                     	;# 
  6726     031D                     	;# 
  6727     031E                     	;# 
  6728     031F                     	;# 
  6729     038C                     	;# 
  6730     038C                     	;# 
  6731     038D                     	;# 
  6732     038E                     	;# 
  6733     0390                     	;# 
  6734     0390                     	;# 
  6735     0391                     	;# 
  6736     0392                     	;# 
  6737     048C                     	;# 
  6738     048C                     	;# 
  6739     048D                     	;# 
  6740     048E                     	;# 
  6741     048F                     	;# 
  6742     048F                     	;# 
  6743     0490                     	;# 
  6744     0491                     	;# 
  6745     0492                     	;# 
  6746     0492                     	;# 
  6747     0493                     	;# 
  6748     0494                     	;# 
  6749     0495                     	;# 
  6750     0495                     	;# 
  6751     0496                     	;# 
  6752     0497                     	;# 
  6753     0498                     	;# 
  6754     0499                     	;# 
  6755     049A                     	;# 
  6756     049B                     	;# 
  6757     049C                     	;# 
  6758     049D                     	;# 
  6759     050C                     	;# 
  6760     050C                     	;# 
  6761     050D                     	;# 
  6762     050E                     	;# 
  6763     050F                     	;# 
  6764     050F                     	;# 
  6765     0510                     	;# 
  6766     0511                     	;# 
  6767     0512                     	;# 
  6768     0512                     	;# 
  6769     0513                     	;# 
  6770     0514                     	;# 
  6771     0515                     	;# 
  6772     0515                     	;# 
  6773     0516                     	;# 
  6774     0517                     	;# 
  6775     0518                     	;# 
  6776     0519                     	;# 
  6777     051A                     	;# 
  6778     051B                     	;# 
  6779     051C                     	;# 
  6780     051D                     	;# 
  6781     058C                     	;# 
  6782     058C                     	;# 
  6783     058D                     	;# 
  6784     058E                     	;# 
  6785     058F                     	;# 
  6786     058F                     	;# 
  6787     0590                     	;# 
  6788     0591                     	;# 
  6789     0592                     	;# 
  6790     0593                     	;# 
  6791     059C                     	;# 
  6792     059C                     	;# 
  6793     059D                     	;# 
  6794     059D                     	;# 
  6795     059E                     	;# 
  6796     059F                     	;# 
  6797     060C                     	;# 
  6798     060C                     	;# 
  6799     060D                     	;# 
  6800     060D                     	;# 
  6801     060E                     	;# 
  6802     060F                     	;# 
  6803     0610                     	;# 
  6804     0611                     	;# 
  6805     0612                     	;# 
  6806     0613                     	;# 
  6807     0614                     	;# 
  6808     0616                     	;# 
  6809     0616                     	;# 
  6810     0617                     	;# 
  6811     0617                     	;# 
  6812     0618                     	;# 
  6813     0619                     	;# 
  6814     061A                     	;# 
  6815     061B                     	;# 
  6816     061C                     	;# 
  6817     061D                     	;# 
  6818     061E                     	;# 
  6819     068C                     	;# 
  6820     068D                     	;# 
  6821     068E                     	;# 
  6822     068F                     	;# 
  6823     0690                     	;# 
  6824     0691                     	;# 
  6825     0692                     	;# 
  6826     0693                     	;# 
  6827     0694                     	;# 
  6828     070C                     	;# 
  6829     070D                     	;# 
  6830     070E                     	;# 
  6831     070F                     	;# 
  6832     0710                     	;# 
  6833     0711                     	;# 
  6834     0712                     	;# 
  6835     0713                     	;# 
  6836     0714                     	;# 
  6837     0716                     	;# 
  6838     0717                     	;# 
  6839     0718                     	;# 
  6840     0719                     	;# 
  6841     071A                     	;# 
  6842     071B                     	;# 
  6843     071C                     	;# 
  6844     071D                     	;# 
  6845     071E                     	;# 
  6846     0796                     	;# 
  6847     0797                     	;# 
  6848     0798                     	;# 
  6849     0799                     	;# 
  6850     079A                     	;# 
  6851     079B                     	;# 
  6852     079C                     	;# 
  6853     079D                     	;# 
  6854     080C                     	;# 
  6855     080D                     	;# 
  6856     080E                     	;# 
  6857     080F                     	;# 
  6858     0810                     	;# 
  6859     0811                     	;# 
  6860     0813                     	;# 
  6861     0814                     	;# 
  6862     081A                     	;# 
  6863     081A                     	;# 
  6864     081B                     	;# 
  6865     081C                     	;# 
  6866     081C                     	;# 
  6867     081D                     	;# 
  6868     081E                     	;# 
  6869     081F                     	;# 
  6870     088C                     	;# 
  6871     088D                     	;# 
  6872     088E                     	;# 
  6873     088F                     	;# 
  6874     0890                     	;# 
  6875     0891                     	;# 
  6876     0892                     	;# 
  6877     0893                     	;# 
  6878     0895                     	;# 
  6879     0896                     	;# 
  6880     0897                     	;# 
  6881     0898                     	;# 
  6882     0899                     	;# 
  6883     089A                     	;# 
  6884     089B                     	;# 
  6885     090C                     	;# 
  6886     090E                     	;# 
  6887     090F                     	;# 
  6888     091F                     	;# 
  6889     098F                     	;# 
  6890     098F                     	;# 
  6891     0990                     	;# 
  6892     0991                     	;# 
  6893     0992                     	;# 
  6894     0993                     	;# 
  6895     0994                     	;# 
  6896     0995                     	;# 
  6897     0996                     	;# 
  6898     0997                     	;# 
  6899     0A19                     	;# 
  6900     0A19                     	;# 
  6901     0A1A                     	;# 
  6902     0A1A                     	;# 
  6903     0A1B                     	;# 
  6904     0A1B                     	;# 
  6905     0A1B                     	;# 
  6906     0A1C                     	;# 
  6907     0A1C                     	;# 
  6908     0A1D                     	;# 
  6909     0A1D                     	;# 
  6910     0A1E                     	;# 
  6911     0A1E                     	;# 
  6912     0A1F                     	;# 
  6913     0A1F                     	;# 
  6914     0A1F                     	;# 
  6915     1E0F                     	;# 
  6916     1E10                     	;# 
  6917     1E11                     	;# 
  6918     1E12                     	;# 
  6919     1E13                     	;# 
  6920     1E14                     	;# 
  6921     1E15                     	;# 
  6922     1E16                     	;# 
  6923     1E17                     	;# 
  6924     1E18                     	;# 
  6925     1E19                     	;# 
  6926     1E1A                     	;# 
  6927     1E1B                     	;# 
  6928     1E1C                     	;# 
  6929     1E1D                     	;# 
  6930     1E1E                     	;# 
  6931     1E1F                     	;# 
  6932     1E20                     	;# 
  6933     1E21                     	;# 
  6934     1E22                     	;# 
  6935     1E23                     	;# 
  6936     1E24                     	;# 
  6937     1E25                     	;# 
  6938     1E26                     	;# 
  6939     1E27                     	;# 
  6940     1E28                     	;# 
  6941     1E29                     	;# 
  6942     1E2A                     	;# 
  6943     1E2B                     	;# 
  6944     1E2C                     	;# 
  6945     1E2D                     	;# 
  6946     1E2E                     	;# 
  6947     1E2F                     	;# 
  6948     1E30                     	;# 
  6949     1E31                     	;# 
  6950     1E32                     	;# 
  6951     1E33                     	;# 
  6952     1E34                     	;# 
  6953     1E35                     	;# 
  6954     1E36                     	;# 
  6955     1E37                     	;# 
  6956     1E8F                     	;# 
  6957     1E90                     	;# 
  6958     1E91                     	;# 
  6959     1E92                     	;# 
  6960     1E93                     	;# 
  6961     1E94                     	;# 
  6962     1E95                     	;# 
  6963     1E96                     	;# 
  6964     1E97                     	;# 
  6965     1E9C                     	;# 
  6966     1E9D                     	;# 
  6967     1E9E                     	;# 
  6968     1EA1                     	;# 
  6969     1EA2                     	;# 
  6970     1EA3                     	;# 
  6971     1EA4                     	;# 
  6972     1EA5                     	;# 
  6973     1EA9                     	;# 
  6974     1EAA                     	;# 
  6975     1EAB                     	;# 
  6976     1EAC                     	;# 
  6977     1EB1                     	;# 
  6978     1EB2                     	;# 
  6979     1EB3                     	;# 
  6980     1EB8                     	;# 
  6981     1EB9                     	;# 
  6982     1EBA                     	;# 
  6983     1EBB                     	;# 
  6984     1EBC                     	;# 
  6985     1EBD                     	;# 
  6986     1EBE                     	;# 
  6987     1EC3                     	;# 
  6988     1EC5                     	;# 
  6989     1EC6                     	;# 
  6990     1EC7                     	;# 
  6991     1EC8                     	;# 
  6992     1EC9                     	;# 
  6993     1ECA                     	;# 
  6994     1ECB                     	;# 
  6995     1ECC                     	;# 
  6996     1ECD                     	;# 
  6997     1ECE                     	;# 
  6998     1F10                     	;# 
  6999     1F11                     	;# 
  7000     1F12                     	;# 
  7001     1F13                     	;# 
  7002     1F14                     	;# 
  7003     1F15                     	;# 
  7004     1F16                     	;# 
  7005     1F17                     	;# 
  7006     1F18                     	;# 
  7007     1F19                     	;# 
  7008     1F1A                     	;# 
  7009     1F1B                     	;# 
  7010     1F1C                     	;# 
  7011     1F1D                     	;# 
  7012     1F1E                     	;# 
  7013     1F1F                     	;# 
  7014     1F20                     	;# 
  7015     1F21                     	;# 
  7016     1F22                     	;# 
  7017     1F23                     	;# 
  7018     1F24                     	;# 
  7019     1F25                     	;# 
  7020     1F26                     	;# 
  7021     1F27                     	;# 
  7022     1F38                     	;# 
  7023     1F39                     	;# 
  7024     1F3A                     	;# 
  7025     1F3B                     	;# 
  7026     1F3C                     	;# 
  7027     1F3D                     	;# 
  7028     1F3E                     	;# 
  7029     1F3F                     	;# 
  7030     1F43                     	;# 
  7031     1F44                     	;# 
  7032     1F45                     	;# 
  7033     1F46                     	;# 
  7034     1F47                     	;# 
  7035     1F48                     	;# 
  7036     1F49                     	;# 
  7037     1F4A                     	;# 
  7038     1F4E                     	;# 
  7039     1F4F                     	;# 
  7040     1F50                     	;# 
  7041     1F51                     	;# 
  7042     1F52                     	;# 
  7043     1F53                     	;# 
  7044     1F54                     	;# 
  7045     1F55                     	;# 
  7046     1F65                     	;# 
  7047     1F66                     	;# 
  7048     1F67                     	;# 
  7049     1F68                     	;# 
  7050     1F69                     	;# 
  7051     1F6A                     	;# 
  7052     1F6B                     	;# 
  7053     1FE4                     	;# 
  7054     1FE5                     	;# 
  7055     1FE6                     	;# 
  7056     1FE7                     	;# 
  7057     1FE8                     	;# 
  7058     1FE8                     	;# 
  7059     1FE9                     	;# 
  7060     1FEA                     	;# 
  7061     1FEB                     	;# 
  7062     1FED                     	;# 
  7063     1FEE                     	;# 
  7064     1FEF                     	;# 
  7065     0000                     	;# 
  7066     0001                     	;# 
  7067     0002                     	;# 
  7068     0003                     	;# 
  7069     0004                     	;# 
  7070     0005                     	;# 
  7071     0006                     	;# 
  7072     0007                     	;# 
  7073     0008                     	;# 
  7074     0009                     	;# 
  7075     000A                     	;# 
  7076     000B                     	;# 
  7077     000C                     	;# 
  7078     000D                     	;# 
  7079     000E                     	;# 
  7080     0010                     	;# 
  7081     0012                     	;# 
  7082     0013                     	;# 
  7083     0014                     	;# 
  7084     0016                     	;# 
  7085     0018                     	;# 
  7086     0019                     	;# 
  7087     001A                     	;# 
  7088     001C                     	;# 
  7089     008C                     	;# 
  7090     008C                     	;# 
  7091     008D                     	;# 
  7092     008E                     	;# 
  7093     008E                     	;# 
  7094     008F                     	;# 
  7095     0090                     	;# 
  7096     0090                     	;# 
  7097     0091                     	;# 
  7098     0092                     	;# 
  7099     0092                     	;# 
  7100     0093                     	;# 
  7101     0094                     	;# 
  7102     0094                     	;# 
  7103     0095                     	;# 
  7104     0096                     	;# 
  7105     0096                     	;# 
  7106     0097                     	;# 
  7107     0098                     	;# 
  7108     0099                     	;# 
  7109     009A                     	;# 
  7110     009B                     	;# 
  7111     009B                     	;# 
  7112     009C                     	;# 
  7113     009D                     	;# 
  7114     009D                     	;# 
  7115     009E                     	;# 
  7116     009F                     	;# 
  7117     010C                     	;# 
  7118     010C                     	;# 
  7119     010D                     	;# 
  7120     010E                     	;# 
  7121     010F                     	;# 
  7122     010F                     	;# 
  7123     0110                     	;# 
  7124     0111                     	;# 
  7125     0112                     	;# 
  7126     0113                     	;# 
  7127     0114                     	;# 
  7128     0115                     	;# 
  7129     0116                     	;# 
  7130     0117                     	;# 
  7131     0118                     	;# 
  7132     0119                     	;# 
  7133     0119                     	;# 
  7134     0119                     	;# 
  7135     011A                     	;# 
  7136     011A                     	;# 
  7137     011A                     	;# 
  7138     011B                     	;# 
  7139     011B                     	;# 
  7140     011B                     	;# 
  7141     011B                     	;# 
  7142     011B                     	;# 
  7143     011C                     	;# 
  7144     011C                     	;# 
  7145     011C                     	;# 
  7146     011D                     	;# 
  7147     011D                     	;# 
  7148     011D                     	;# 
  7149     011E                     	;# 
  7150     011E                     	;# 
  7151     011E                     	;# 
  7152     011F                     	;# 
  7153     011F                     	;# 
  7154     011F                     	;# 
  7155     011F                     	;# 
  7156     011F                     	;# 
  7157     018C                     	;# 
  7158     018D                     	;# 
  7159     018E                     	;# 
  7160     018F                     	;# 
  7161     0190                     	;# 
  7162     0191                     	;# 
  7163     0192                     	;# 
  7164     0196                     	;# 
  7165     0197                     	;# 
  7166     0198                     	;# 
  7167     0199                     	;# 
  7168     019A                     	;# 
  7169     019B                     	;# 
  7170     019C                     	;# 
  7171     020C                     	;# 
  7172     020D                     	;# 
  7173     020E                     	;# 
  7174     020E                     	;# 
  7175     020F                     	;# 
  7176     020F                     	;# 
  7177     0210                     	;# 
  7178     0210                     	;# 
  7179     0211                     	;# 
  7180     0211                     	;# 
  7181     0212                     	;# 
  7182     0213                     	;# 
  7183     0214                     	;# 
  7184     0214                     	;# 
  7185     0215                     	;# 
  7186     0215                     	;# 
  7187     0216                     	;# 
  7188     0216                     	;# 
  7189     0217                     	;# 
  7190     0217                     	;# 
  7191     0218                     	;# 
  7192     0219                     	;# 
  7193     021A                     	;# 
  7194     021A                     	;# 
  7195     021B                     	;# 
  7196     021B                     	;# 
  7197     021C                     	;# 
  7198     021C                     	;# 
  7199     021D                     	;# 
  7200     021D                     	;# 
  7201     021E                     	;# 
  7202     021F                     	;# 
  7203     028C                     	;# 
  7204     028C                     	;# 
  7205     028D                     	;# 
  7206     028D                     	;# 
  7207     028E                     	;# 
  7208     028F                     	;# 
  7209     0290                     	;# 
  7210     0291                     	;# 
  7211     0292                     	;# 
  7212     0292                     	;# 
  7213     0293                     	;# 
  7214     0293                     	;# 
  7215     0294                     	;# 
  7216     0295                     	;# 
  7217     0296                     	;# 
  7218     0297                     	;# 
  7219     0298                     	;# 
  7220     0298                     	;# 
  7221     0299                     	;# 
  7222     0299                     	;# 
  7223     029A                     	;# 
  7224     029B                     	;# 
  7225     029C                     	;# 
  7226     029D                     	;# 
  7227     029F                     	;# 
  7228     030C                     	;# 
  7229     030C                     	;# 
  7230     030D                     	;# 
  7231     030E                     	;# 
  7232     030F                     	;# 
  7233     0310                     	;# 
  7234     0310                     	;# 
  7235     0311                     	;# 
  7236     0312                     	;# 
  7237     0313                     	;# 
  7238     0314                     	;# 
  7239     0314                     	;# 
  7240     0315                     	;# 
  7241     0316                     	;# 
  7242     0317                     	;# 
  7243     0318                     	;# 
  7244     0318                     	;# 
  7245     0319                     	;# 
  7246     031A                     	;# 
  7247     031B                     	;# 
  7248     031C                     	;# 
  7249     031C                     	;# 
  7250     031D                     	;# 
  7251     031E                     	;# 
  7252     031F                     	;# 
  7253     038C                     	;# 
  7254     038C                     	;# 
  7255     038D                     	;# 
  7256     038E                     	;# 
  7257     0390                     	;# 
  7258     0390                     	;# 
  7259     0391                     	;# 
  7260     0392                     	;# 
  7261     048C                     	;# 
  7262     048C                     	;# 
  7263     048D                     	;# 
  7264     048E                     	;# 
  7265     048F                     	;# 
  7266     048F                     	;# 
  7267     0490                     	;# 
  7268     0491                     	;# 
  7269     0492                     	;# 
  7270     0492                     	;# 
  7271     0493                     	;# 
  7272     0494                     	;# 
  7273     0495                     	;# 
  7274     0495                     	;# 
  7275     0496                     	;# 
  7276     0497                     	;# 
  7277     0498                     	;# 
  7278     0499                     	;# 
  7279     049A                     	;# 
  7280     049B                     	;# 
  7281     049C                     	;# 
  7282     049D                     	;# 
  7283     050C                     	;# 
  7284     050C                     	;# 
  7285     050D                     	;# 
  7286     050E                     	;# 
  7287     050F                     	;# 
  7288     050F                     	;# 
  7289     0510                     	;# 
  7290     0511                     	;# 
  7291     0512                     	;# 
  7292     0512                     	;# 
  7293     0513                     	;# 
  7294     0514                     	;# 
  7295     0515                     	;# 
  7296     0515                     	;# 
  7297     0516                     	;# 
  7298     0517                     	;# 
  7299     0518                     	;# 
  7300     0519                     	;# 
  7301     051A                     	;# 
  7302     051B                     	;# 
  7303     051C                     	;# 
  7304     051D                     	;# 
  7305     058C                     	;# 
  7306     058C                     	;# 
  7307     058D                     	;# 
  7308     058E                     	;# 
  7309     058F                     	;# 
  7310     058F                     	;# 
  7311     0590                     	;# 
  7312     0591                     	;# 
  7313     0592                     	;# 
  7314     0593                     	;# 
  7315     059C                     	;# 
  7316     059C                     	;# 
  7317     059D                     	;# 
  7318     059D                     	;# 
  7319     059E                     	;# 
  7320     059F                     	;# 
  7321     060C                     	;# 
  7322     060C                     	;# 
  7323     060D                     	;# 
  7324     060D                     	;# 
  7325     060E                     	;# 
  7326     060F                     	;# 
  7327     0610                     	;# 
  7328     0611                     	;# 
  7329     0612                     	;# 
  7330     0613                     	;# 
  7331     0614                     	;# 
  7332     0616                     	;# 
  7333     0616                     	;# 
  7334     0617                     	;# 
  7335     0617                     	;# 
  7336     0618                     	;# 
  7337     0619                     	;# 
  7338     061A                     	;# 
  7339     061B                     	;# 
  7340     061C                     	;# 
  7341     061D                     	;# 
  7342     061E                     	;# 
  7343     068C                     	;# 
  7344     068D                     	;# 
  7345     068E                     	;# 
  7346     068F                     	;# 
  7347     0690                     	;# 
  7348     0691                     	;# 
  7349     0692                     	;# 
  7350     0693                     	;# 
  7351     0694                     	;# 
  7352     070C                     	;# 
  7353     070D                     	;# 
  7354     070E                     	;# 
  7355     070F                     	;# 
  7356     0710                     	;# 
  7357     0711                     	;# 
  7358     0712                     	;# 
  7359     0713                     	;# 
  7360     0714                     	;# 
  7361     0716                     	;# 
  7362     0717                     	;# 
  7363     0718                     	;# 
  7364     0719                     	;# 
  7365     071A                     	;# 
  7366     071B                     	;# 
  7367     071C                     	;# 
  7368     071D                     	;# 
  7369     071E                     	;# 
  7370     0796                     	;# 
  7371     0797                     	;# 
  7372     0798                     	;# 
  7373     0799                     	;# 
  7374     079A                     	;# 
  7375     079B                     	;# 
  7376     079C                     	;# 
  7377     079D                     	;# 
  7378     080C                     	;# 
  7379     080D                     	;# 
  7380     080E                     	;# 
  7381     080F                     	;# 
  7382     0810                     	;# 
  7383     0811                     	;# 
  7384     0813                     	;# 
  7385     0814                     	;# 
  7386     081A                     	;# 
  7387     081A                     	;# 
  7388     081B                     	;# 
  7389     081C                     	;# 
  7390     081C                     	;# 
  7391     081D                     	;# 
  7392     081E                     	;# 
  7393     081F                     	;# 
  7394     088C                     	;# 
  7395     088D                     	;# 
  7396     088E                     	;# 
  7397     088F                     	;# 
  7398     0890                     	;# 
  7399     0891                     	;# 
  7400     0892                     	;# 
  7401     0893                     	;# 
  7402     0895                     	;# 
  7403     0896                     	;# 
  7404     0897                     	;# 
  7405     0898                     	;# 
  7406     0899                     	;# 
  7407     089A                     	;# 
  7408     089B                     	;# 
  7409     090C                     	;# 
  7410     090E                     	;# 
  7411     090F                     	;# 
  7412     091F                     	;# 
  7413     098F                     	;# 
  7414     098F                     	;# 
  7415     0990                     	;# 
  7416     0991                     	;# 
  7417     0992                     	;# 
  7418     0993                     	;# 
  7419     0994                     	;# 
  7420     0995                     	;# 
  7421     0996                     	;# 
  7422     0997                     	;# 
  7423     0A19                     	;# 
  7424     0A19                     	;# 
  7425     0A1A                     	;# 
  7426     0A1A                     	;# 
  7427     0A1B                     	;# 
  7428     0A1B                     	;# 
  7429     0A1B                     	;# 
  7430     0A1C                     	;# 
  7431     0A1C                     	;# 
  7432     0A1D                     	;# 
  7433     0A1D                     	;# 
  7434     0A1E                     	;# 
  7435     0A1E                     	;# 
  7436     0A1F                     	;# 
  7437     0A1F                     	;# 
  7438     0A1F                     	;# 
  7439     1E0F                     	;# 
  7440     1E10                     	;# 
  7441     1E11                     	;# 
  7442     1E12                     	;# 
  7443     1E13                     	;# 
  7444     1E14                     	;# 
  7445     1E15                     	;# 
  7446     1E16                     	;# 
  7447     1E17                     	;# 
  7448     1E18                     	;# 
  7449     1E19                     	;# 
  7450     1E1A                     	;# 
  7451     1E1B                     	;# 
  7452     1E1C                     	;# 
  7453     1E1D                     	;# 
  7454     1E1E                     	;# 
  7455     1E1F                     	;# 
  7456     1E20                     	;# 
  7457     1E21                     	;# 
  7458     1E22                     	;# 
  7459     1E23                     	;# 
  7460     1E24                     	;# 
  7461     1E25                     	;# 
  7462     1E26                     	;# 
  7463     1E27                     	;# 
  7464     1E28                     	;# 
  7465     1E29                     	;# 
  7466     1E2A                     	;# 
  7467     1E2B                     	;# 
  7468     1E2C                     	;# 
  7469     1E2D                     	;# 
  7470     1E2E                     	;# 
  7471     1E2F                     	;# 
  7472     1E30                     	;# 
  7473     1E31                     	;# 
  7474     1E32                     	;# 
  7475     1E33                     	;# 
  7476     1E34                     	;# 
  7477     1E35                     	;# 
  7478     1E36                     	;# 
  7479     1E37                     	;# 
  7480     1E8F                     	;# 
  7481     1E90                     	;# 
  7482     1E91                     	;# 
  7483     1E92                     	;# 
  7484     1E93                     	;# 
  7485     1E94                     	;# 
  7486     1E95                     	;# 
  7487     1E96                     	;# 
  7488     1E97                     	;# 
  7489     1E9C                     	;# 
  7490     1E9D                     	;# 
  7491     1E9E                     	;# 
  7492     1EA1                     	;# 
  7493     1EA2                     	;# 
  7494     1EA3                     	;# 
  7495     1EA4                     	;# 
  7496     1EA5                     	;# 
  7497     1EA9                     	;# 
  7498     1EAA                     	;# 
  7499     1EAB                     	;# 
  7500     1EAC                     	;# 
  7501     1EB1                     	;# 
  7502     1EB2                     	;# 
  7503     1EB3                     	;# 
  7504     1EB8                     	;# 
  7505     1EB9                     	;# 
  7506     1EBA                     	;# 
  7507     1EBB                     	;# 
  7508     1EBC                     	;# 
  7509     1EBD                     	;# 
  7510     1EBE                     	;# 
  7511     1EC3                     	;# 
  7512     1EC5                     	;# 
  7513     1EC6                     	;# 
  7514     1EC7                     	;# 
  7515     1EC8                     	;# 
  7516     1EC9                     	;# 
  7517     1ECA                     	;# 
  7518     1ECB                     	;# 
  7519     1ECC                     	;# 
  7520     1ECD                     	;# 
  7521     1ECE                     	;# 
  7522     1F10                     	;# 
  7523     1F11                     	;# 
  7524     1F12                     	;# 
  7525     1F13                     	;# 
  7526     1F14                     	;# 
  7527     1F15                     	;# 
  7528     1F16                     	;# 
  7529     1F17                     	;# 
  7530     1F18                     	;# 
  7531     1F19                     	;# 
  7532     1F1A                     	;# 
  7533     1F1B                     	;# 
  7534     1F1C                     	;# 
  7535     1F1D                     	;# 
  7536     1F1E                     	;# 
  7537     1F1F                     	;# 
  7538     1F20                     	;# 
  7539     1F21                     	;# 
  7540     1F22                     	;# 
  7541     1F23                     	;# 
  7542     1F24                     	;# 
  7543     1F25                     	;# 
  7544     1F26                     	;# 
  7545     1F27                     	;# 
  7546     1F38                     	;# 
  7547     1F39                     	;# 
  7548     1F3A                     	;# 
  7549     1F3B                     	;# 
  7550     1F3C                     	;# 
  7551     1F3D                     	;# 
  7552     1F3E                     	;# 
  7553     1F3F                     	;# 
  7554     1F43                     	;# 
  7555     1F44                     	;# 
  7556     1F45                     	;# 
  7557     1F46                     	;# 
  7558     1F47                     	;# 
  7559     1F48                     	;# 
  7560     1F49                     	;# 
  7561     1F4A                     	;# 
  7562     1F4E                     	;# 
  7563     1F4F                     	;# 
  7564     1F50                     	;# 
  7565     1F51                     	;# 
  7566     1F52                     	;# 
  7567     1F53                     	;# 
  7568     1F54                     	;# 
  7569     1F55                     	;# 
  7570     1F65                     	;# 
  7571     1F66                     	;# 
  7572     1F67                     	;# 
  7573     1F68                     	;# 
  7574     1F69                     	;# 
  7575     1F6A                     	;# 
  7576     1F6B                     	;# 
  7577     1FE4                     	;# 
  7578     1FE5                     	;# 
  7579     1FE6                     	;# 
  7580     1FE7                     	;# 
  7581     1FE8                     	;# 
  7582     1FE8                     	;# 
  7583     1FE9                     	;# 
  7584     1FEA                     	;# 
  7585     1FEB                     	;# 
  7586     1FED                     	;# 
  7587     1FEE                     	;# 
  7588     1FEF                     	;# 
  7589     0000                     	;# 
  7590     0001                     	;# 
  7591     0002                     	;# 
  7592     0003                     	;# 
  7593     0004                     	;# 
  7594     0005                     	;# 
  7595     0006                     	;# 
  7596     0007                     	;# 
  7597     0008                     	;# 
  7598     0009                     	;# 
  7599     000A                     	;# 
  7600     000B                     	;# 
  7601     000C                     	;# 
  7602     000D                     	;# 
  7603     000E                     	;# 
  7604     0010                     	;# 
  7605     0012                     	;# 
  7606     0013                     	;# 
  7607     0014                     	;# 
  7608     0016                     	;# 
  7609     0018                     	;# 
  7610     0019                     	;# 
  7611     001A                     	;# 
  7612     001C                     	;# 
  7613     008C                     	;# 
  7614     008C                     	;# 
  7615     008D                     	;# 
  7616     008E                     	;# 
  7617     008E                     	;# 
  7618     008F                     	;# 
  7619     0090                     	;# 
  7620     0090                     	;# 
  7621     0091                     	;# 
  7622     0092                     	;# 
  7623     0092                     	;# 
  7624     0093                     	;# 
  7625     0094                     	;# 
  7626     0094                     	;# 
  7627     0095                     	;# 
  7628     0096                     	;# 
  7629     0096                     	;# 
  7630     0097                     	;# 
  7631     0098                     	;# 
  7632     0099                     	;# 
  7633     009A                     	;# 
  7634     009B                     	;# 
  7635     009B                     	;# 
  7636     009C                     	;# 
  7637     009D                     	;# 
  7638     009D                     	;# 
  7639     009E                     	;# 
  7640     009F                     	;# 
  7641     010C                     	;# 
  7642     010C                     	;# 
  7643     010D                     	;# 
  7644     010E                     	;# 
  7645     010F                     	;# 
  7646     010F                     	;# 
  7647     0110                     	;# 
  7648     0111                     	;# 
  7649     0112                     	;# 
  7650     0113                     	;# 
  7651     0114                     	;# 
  7652     0115                     	;# 
  7653     0116                     	;# 
  7654     0117                     	;# 
  7655     0118                     	;# 
  7656     0119                     	;# 
  7657     0119                     	;# 
  7658     0119                     	;# 
  7659     011A                     	;# 
  7660     011A                     	;# 
  7661     011A                     	;# 
  7662     011B                     	;# 
  7663     011B                     	;# 
  7664     011B                     	;# 
  7665     011B                     	;# 
  7666     011B                     	;# 
  7667     011C                     	;# 
  7668     011C                     	;# 
  7669     011C                     	;# 
  7670     011D                     	;# 
  7671     011D                     	;# 
  7672     011D                     	;# 
  7673     011E                     	;# 
  7674     011E                     	;# 
  7675     011E                     	;# 
  7676     011F                     	;# 
  7677     011F                     	;# 
  7678     011F                     	;# 
  7679     011F                     	;# 
  7680     011F                     	;# 
  7681     018C                     	;# 
  7682     018D                     	;# 
  7683     018E                     	;# 
  7684     018F                     	;# 
  7685     0190                     	;# 
  7686     0191                     	;# 
  7687     0192                     	;# 
  7688     0196                     	;# 
  7689     0197                     	;# 
  7690     0198                     	;# 
  7691     0199                     	;# 
  7692     019A                     	;# 
  7693     019B                     	;# 
  7694     019C                     	;# 
  7695     020C                     	;# 
  7696     020D                     	;# 
  7697     020E                     	;# 
  7698     020E                     	;# 
  7699     020F                     	;# 
  7700     020F                     	;# 
  7701     0210                     	;# 
  7702     0210                     	;# 
  7703     0211                     	;# 
  7704     0211                     	;# 
  7705     0212                     	;# 
  7706     0213                     	;# 
  7707     0214                     	;# 
  7708     0214                     	;# 
  7709     0215                     	;# 
  7710     0215                     	;# 
  7711     0216                     	;# 
  7712     0216                     	;# 
  7713     0217                     	;# 
  7714     0217                     	;# 
  7715     0218                     	;# 
  7716     0219                     	;# 
  7717     021A                     	;# 
  7718     021A                     	;# 
  7719     021B                     	;# 
  7720     021B                     	;# 
  7721     021C                     	;# 
  7722     021C                     	;# 
  7723     021D                     	;# 
  7724     021D                     	;# 
  7725     021E                     	;# 
  7726     021F                     	;# 
  7727     028C                     	;# 
  7728     028C                     	;# 
  7729     028D                     	;# 
  7730     028D                     	;# 
  7731     028E                     	;# 
  7732     028F                     	;# 
  7733     0290                     	;# 
  7734     0291                     	;# 
  7735     0292                     	;# 
  7736     0292                     	;# 
  7737     0293                     	;# 
  7738     0293                     	;# 
  7739     0294                     	;# 
  7740     0295                     	;# 
  7741     0296                     	;# 
  7742     0297                     	;# 
  7743     0298                     	;# 
  7744     0298                     	;# 
  7745     0299                     	;# 
  7746     0299                     	;# 
  7747     029A                     	;# 
  7748     029B                     	;# 
  7749     029C                     	;# 
  7750     029D                     	;# 
  7751     029F                     	;# 
  7752     030C                     	;# 
  7753     030C                     	;# 
  7754     030D                     	;# 
  7755     030E                     	;# 
  7756     030F                     	;# 
  7757     0310                     	;# 
  7758     0310                     	;# 
  7759     0311                     	;# 
  7760     0312                     	;# 
  7761     0313                     	;# 
  7762     0314                     	;# 
  7763     0314                     	;# 
  7764     0315                     	;# 
  7765     0316                     	;# 
  7766     0317                     	;# 
  7767     0318                     	;# 
  7768     0318                     	;# 
  7769     0319                     	;# 
  7770     031A                     	;# 
  7771     031B                     	;# 
  7772     031C                     	;# 
  7773     031C                     	;# 
  7774     031D                     	;# 
  7775     031E                     	;# 
  7776     031F                     	;# 
  7777     038C                     	;# 
  7778     038C                     	;# 
  7779     038D                     	;# 
  7780     038E                     	;# 
  7781     0390                     	;# 
  7782     0390                     	;# 
  7783     0391                     	;# 
  7784     0392                     	;# 
  7785     048C                     	;# 
  7786     048C                     	;# 
  7787     048D                     	;# 
  7788     048E                     	;# 
  7789     048F                     	;# 
  7790     048F                     	;# 
  7791     0490                     	;# 
  7792     0491                     	;# 
  7793     0492                     	;# 
  7794     0492                     	;# 
  7795     0493                     	;# 
  7796     0494                     	;# 
  7797     0495                     	;# 
  7798     0495                     	;# 
  7799     0496                     	;# 
  7800     0497                     	;# 
  7801     0498                     	;# 
  7802     0499                     	;# 
  7803     049A                     	;# 
  7804     049B                     	;# 
  7805     049C                     	;# 
  7806     049D                     	;# 
  7807     050C                     	;# 
  7808     050C                     	;# 
  7809     050D                     	;# 
  7810     050E                     	;# 
  7811     050F                     	;# 
  7812     050F                     	;# 
  7813     0510                     	;# 
  7814     0511                     	;# 
  7815     0512                     	;# 
  7816     0512                     	;# 
  7817     0513                     	;# 
  7818     0514                     	;# 
  7819     0515                     	;# 
  7820     0515                     	;# 
  7821     0516                     	;# 
  7822     0517                     	;# 
  7823     0518                     	;# 
  7824     0519                     	;# 
  7825     051A                     	;# 
  7826     051B                     	;# 
  7827     051C                     	;# 
  7828     051D                     	;# 
  7829     058C                     	;# 
  7830     058C                     	;# 
  7831     058D                     	;# 
  7832     058E                     	;# 
  7833     058F                     	;# 
  7834     058F                     	;# 
  7835     0590                     	;# 
  7836     0591                     	;# 
  7837     0592                     	;# 
  7838     0593                     	;# 
  7839     059C                     	;# 
  7840     059C                     	;# 
  7841     059D                     	;# 
  7842     059D                     	;# 
  7843     059E                     	;# 
  7844     059F                     	;# 
  7845     060C                     	;# 
  7846     060C                     	;# 
  7847     060D                     	;# 
  7848     060D                     	;# 
  7849     060E                     	;# 
  7850     060F                     	;# 
  7851     0610                     	;# 
  7852     0611                     	;# 
  7853     0612                     	;# 
  7854     0613                     	;# 
  7855     0614                     	;# 
  7856     0616                     	;# 
  7857     0616                     	;# 
  7858     0617                     	;# 
  7859     0617                     	;# 
  7860     0618                     	;# 
  7861     0619                     	;# 
  7862     061A                     	;# 
  7863     061B                     	;# 
  7864     061C                     	;# 
  7865     061D                     	;# 
  7866     061E                     	;# 
  7867     068C                     	;# 
  7868     068D                     	;# 
  7869     068E                     	;# 
  7870     068F                     	;# 
  7871     0690                     	;# 
  7872     0691                     	;# 
  7873     0692                     	;# 
  7874     0693                     	;# 
  7875     0694                     	;# 
  7876     070C                     	;# 
  7877     070D                     	;# 
  7878     070E                     	;# 
  7879     070F                     	;# 
  7880     0710                     	;# 
  7881     0711                     	;# 
  7882     0712                     	;# 
  7883     0713                     	;# 
  7884     0714                     	;# 
  7885     0716                     	;# 
  7886     0717                     	;# 
  7887     0718                     	;# 
  7888     0719                     	;# 
  7889     071A                     	;# 
  7890     071B                     	;# 
  7891     071C                     	;# 
  7892     071D                     	;# 
  7893     071E                     	;# 
  7894     0796                     	;# 
  7895     0797                     	;# 
  7896     0798                     	;# 
  7897     0799                     	;# 
  7898     079A                     	;# 
  7899     079B                     	;# 
  7900     079C                     	;# 
  7901     079D                     	;# 
  7902     080C                     	;# 
  7903     080D                     	;# 
  7904     080E                     	;# 
  7905     080F                     	;# 
  7906     0810                     	;# 
  7907     0811                     	;# 
  7908     0813                     	;# 
  7909     0814                     	;# 
  7910     081A                     	;# 
  7911     081A                     	;# 
  7912     081B                     	;# 
  7913     081C                     	;# 
  7914     081C                     	;# 
  7915     081D                     	;# 
  7916     081E                     	;# 
  7917     081F                     	;# 
  7918     088C                     	;# 
  7919     088D                     	;# 
  7920     088E                     	;# 
  7921     088F                     	;# 
  7922     0890                     	;# 
  7923     0891                     	;# 
  7924     0892                     	;# 
  7925     0893                     	;# 
  7926     0895                     	;# 
  7927     0896                     	;# 
  7928     0897                     	;# 
  7929     0898                     	;# 
  7930     0899                     	;# 
  7931     089A                     	;# 
  7932     089B                     	;# 
  7933     090C                     	;# 
  7934     090E                     	;# 
  7935     090F                     	;# 
  7936     091F                     	;# 
  7937     098F                     	;# 
  7938     098F                     	;# 
  7939     0990                     	;# 
  7940     0991                     	;# 
  7941     0992                     	;# 
  7942     0993                     	;# 
  7943     0994                     	;# 
  7944     0995                     	;# 
  7945     0996                     	;# 
  7946     0997                     	;# 
  7947     0A19                     	;# 
  7948     0A19                     	;# 
  7949     0A1A                     	;# 
  7950     0A1A                     	;# 
  7951     0A1B                     	;# 
  7952     0A1B                     	;# 
  7953     0A1B                     	;# 
  7954     0A1C                     	;# 
  7955     0A1C                     	;# 
  7956     0A1D                     	;# 
  7957     0A1D                     	;# 
  7958     0A1E                     	;# 
  7959     0A1E                     	;# 
  7960     0A1F                     	;# 
  7961     0A1F                     	;# 
  7962     0A1F                     	;# 
  7963     1E0F                     	;# 
  7964     1E10                     	;# 
  7965     1E11                     	;# 
  7966     1E12                     	;# 
  7967     1E13                     	;# 
  7968     1E14                     	;# 
  7969     1E15                     	;# 
  7970     1E16                     	;# 
  7971     1E17                     	;# 
  7972     1E18                     	;# 
  7973     1E19                     	;# 
  7974     1E1A                     	;# 
  7975     1E1B                     	;# 
  7976     1E1C                     	;# 
  7977     1E1D                     	;# 
  7978     1E1E                     	;# 
  7979     1E1F                     	;# 
  7980     1E20                     	;# 
  7981     1E21                     	;# 
  7982     1E22                     	;# 
  7983     1E23                     	;# 
  7984     1E24                     	;# 
  7985     1E25                     	;# 
  7986     1E26                     	;# 
  7987     1E27                     	;# 
  7988     1E28                     	;# 
  7989     1E29                     	;# 
  7990     1E2A                     	;# 
  7991     1E2B                     	;# 
  7992     1E2C                     	;# 
  7993     1E2D                     	;# 
  7994     1E2E                     	;# 
  7995     1E2F                     	;# 
  7996     1E30                     	;# 
  7997     1E31                     	;# 
  7998     1E32                     	;# 
  7999     1E33                     	;# 
  8000     1E34                     	;# 
  8001     1E35                     	;# 
  8002     1E36                     	;# 
  8003     1E37                     	;# 
  8004     1E8F                     	;# 
  8005     1E90                     	;# 
  8006     1E91                     	;# 
  8007     1E92                     	;# 
  8008     1E93                     	;# 
  8009     1E94                     	;# 
  8010     1E95                     	;# 
  8011     1E96                     	;# 
  8012     1E97                     	;# 
  8013     1E9C                     	;# 
  8014     1E9D                     	;# 
  8015     1E9E                     	;# 
  8016     1EA1                     	;# 
  8017     1EA2                     	;# 
  8018     1EA3                     	;# 
  8019     1EA4                     	;# 
  8020     1EA5                     	;# 
  8021     1EA9                     	;# 
  8022     1EAA                     	;# 
  8023     1EAB                     	;# 
  8024     1EAC                     	;# 
  8025     1EB1                     	;# 
  8026     1EB2                     	;# 
  8027     1EB3                     	;# 
  8028     1EB8                     	;# 
  8029     1EB9                     	;# 
  8030     1EBA                     	;# 
  8031     1EBB                     	;# 
  8032     1EBC                     	;# 
  8033     1EBD                     	;# 
  8034     1EBE                     	;# 
  8035     1EC3                     	;# 
  8036     1EC5                     	;# 
  8037     1EC6                     	;# 
  8038     1EC7                     	;# 
  8039     1EC8                     	;# 
  8040     1EC9                     	;# 
  8041     1ECA                     	;# 
  8042     1ECB                     	;# 
  8043     1ECC                     	;# 
  8044     1ECD                     	;# 
  8045     1ECE                     	;# 
  8046     1F10                     	;# 
  8047     1F11                     	;# 
  8048     1F12                     	;# 
  8049     1F13                     	;# 
  8050     1F14                     	;# 
  8051     1F15                     	;# 
  8052     1F16                     	;# 
  8053     1F17                     	;# 
  8054     1F18                     	;# 
  8055     1F19                     	;# 
  8056     1F1A                     	;# 
  8057     1F1B                     	;# 
  8058     1F1C                     	;# 
  8059     1F1D                     	;# 
  8060     1F1E                     	;# 
  8061     1F1F                     	;# 
  8062     1F20                     	;# 
  8063     1F21                     	;# 
  8064     1F22                     	;# 
  8065     1F23                     	;# 
  8066     1F24                     	;# 
  8067     1F25                     	;# 
  8068     1F26                     	;# 
  8069     1F27                     	;# 
  8070     1F38                     	;# 
  8071     1F39                     	;# 
  8072     1F3A                     	;# 
  8073     1F3B                     	;# 
  8074     1F3C                     	;# 
  8075     1F3D                     	;# 
  8076     1F3E                     	;# 
  8077     1F3F                     	;# 
  8078     1F43                     	;# 
  8079     1F44                     	;# 
  8080     1F45                     	;# 
  8081     1F46                     	;# 
  8082     1F47                     	;# 
  8083     1F48                     	;# 
  8084     1F49                     	;# 
  8085     1F4A                     	;# 
  8086     1F4E                     	;# 
  8087     1F4F                     	;# 
  8088     1F50                     	;# 
  8089     1F51                     	;# 
  8090     1F52                     	;# 
  8091     1F53                     	;# 
  8092     1F54                     	;# 
  8093     1F55                     	;# 
  8094     1F65                     	;# 
  8095     1F66                     	;# 
  8096     1F67                     	;# 
  8097     1F68                     	;# 
  8098     1F69                     	;# 
  8099     1F6A                     	;# 
  8100     1F6B                     	;# 
  8101     1FE4                     	;# 
  8102     1FE5                     	;# 
  8103     1FE6                     	;# 
  8104     1FE7                     	;# 
  8105     1FE8                     	;# 
  8106     1FE8                     	;# 
  8107     1FE9                     	;# 
  8108     1FEA                     	;# 
  8109     1FEB                     	;# 
  8110     1FED                     	;# 
  8111     1FEE                     	;# 
  8112     1FEF                     	;# 
  8113     0000                     	;# 
  8114     0001                     	;# 
  8115     0002                     	;# 
  8116     0003                     	;# 
  8117     0004                     	;# 
  8118     0005                     	;# 
  8119     0006                     	;# 
  8120     0007                     	;# 
  8121     0008                     	;# 
  8122     0009                     	;# 
  8123     000A                     	;# 
  8124     000B                     	;# 
  8125     000C                     	;# 
  8126     000D                     	;# 
  8127     000E                     	;# 
  8128     0010                     	;# 
  8129     0012                     	;# 
  8130     0013                     	;# 
  8131     0014                     	;# 
  8132     0016                     	;# 
  8133     0018                     	;# 
  8134     0019                     	;# 
  8135     001A                     	;# 
  8136     001C                     	;# 
  8137     008C                     	;# 
  8138     008C                     	;# 
  8139     008D                     	;# 
  8140     008E                     	;# 
  8141     008E                     	;# 
  8142     008F                     	;# 
  8143     0090                     	;# 
  8144     0090                     	;# 
  8145     0091                     	;# 
  8146     0092                     	;# 
  8147     0092                     	;# 
  8148     0093                     	;# 
  8149     0094                     	;# 
  8150     0094                     	;# 
  8151     0095                     	;# 
  8152     0096                     	;# 
  8153     0096                     	;# 
  8154     0097                     	;# 
  8155     0098                     	;# 
  8156     0099                     	;# 
  8157     009A                     	;# 
  8158     009B                     	;# 
  8159     009B                     	;# 
  8160     009C                     	;# 
  8161     009D                     	;# 
  8162     009D                     	;# 
  8163     009E                     	;# 
  8164     009F                     	;# 
  8165     010C                     	;# 
  8166     010C                     	;# 
  8167     010D                     	;# 
  8168     010E                     	;# 
  8169     010F                     	;# 
  8170     010F                     	;# 
  8171     0110                     	;# 
  8172     0111                     	;# 
  8173     0112                     	;# 
  8174     0113                     	;# 
  8175     0114                     	;# 
  8176     0115                     	;# 
  8177     0116                     	;# 
  8178     0117                     	;# 
  8179     0118                     	;# 
  8180     0119                     	;# 
  8181     0119                     	;# 
  8182     0119                     	;# 
  8183     011A                     	;# 
  8184     011A                     	;# 
  8185     011A                     	;# 
  8186     011B                     	;# 
  8187     011B                     	;# 
  8188     011B                     	;# 
  8189     011B                     	;# 
  8190     011B                     	;# 
  8191     011C                     	;# 
  8192     011C                     	;# 
  8193     011C                     	;# 
  8194     011D                     	;# 
  8195     011D                     	;# 
  8196     011D                     	;# 
  8197     011E                     	;# 
  8198     011E                     	;# 
  8199     011E                     	;# 
  8200     011F                     	;# 
  8201     011F                     	;# 
  8202     011F                     	;# 
  8203     011F                     	;# 
  8204     011F                     	;# 
  8205     018C                     	;# 
  8206     018D                     	;# 
  8207     018E                     	;# 
  8208     018F                     	;# 
  8209     0190                     	;# 
  8210     0191                     	;# 
  8211     0192                     	;# 
  8212     0196                     	;# 
  8213     0197                     	;# 
  8214     0198                     	;# 
  8215     0199                     	;# 
  8216     019A                     	;# 
  8217     019B                     	;# 
  8218     019C                     	;# 
  8219     020C                     	;# 
  8220     020D                     	;# 
  8221     020E                     	;# 
  8222     020E                     	;# 
  8223     020F                     	;# 
  8224     020F                     	;# 
  8225     0210                     	;# 
  8226     0210                     	;# 
  8227     0211                     	;# 
  8228     0211                     	;# 
  8229     0212                     	;# 
  8230     0213                     	;# 
  8231     0214                     	;# 
  8232     0214                     	;# 
  8233     0215                     	;# 
  8234     0215                     	;# 
  8235     0216                     	;# 
  8236     0216                     	;# 
  8237     0217                     	;# 
  8238     0217                     	;# 
  8239     0218                     	;# 
  8240     0219                     	;# 
  8241     021A                     	;# 
  8242     021A                     	;# 
  8243     021B                     	;# 
  8244     021B                     	;# 
  8245     021C                     	;# 
  8246     021C                     	;# 
  8247     021D                     	;# 
  8248     021D                     	;# 
  8249     021E                     	;# 
  8250     021F                     	;# 
  8251     028C                     	;# 
  8252     028C                     	;# 
  8253     028D                     	;# 
  8254     028D                     	;# 
  8255     028E                     	;# 
  8256     028F                     	;# 
  8257     0290                     	;# 
  8258     0291                     	;# 
  8259     0292                     	;# 
  8260     0292                     	;# 
  8261     0293                     	;# 
  8262     0293                     	;# 
  8263     0294                     	;# 
  8264     0295                     	;# 
  8265     0296                     	;# 
  8266     0297                     	;# 
  8267     0298                     	;# 
  8268     0298                     	;# 
  8269     0299                     	;# 
  8270     0299                     	;# 
  8271     029A                     	;# 
  8272     029B                     	;# 
  8273     029C                     	;# 
  8274     029D                     	;# 
  8275     029F                     	;# 
  8276     030C                     	;# 
  8277     030C                     	;# 
  8278     030D                     	;# 
  8279     030E                     	;# 
  8280     030F                     	;# 
  8281     0310                     	;# 
  8282     0310                     	;# 
  8283     0311                     	;# 
  8284     0312                     	;# 
  8285     0313                     	;# 
  8286     0314                     	;# 
  8287     0314                     	;# 
  8288     0315                     	;# 
  8289     0316                     	;# 
  8290     0317                     	;# 
  8291     0318                     	;# 
  8292     0318                     	;# 
  8293     0319                     	;# 
  8294     031A                     	;# 
  8295     031B                     	;# 
  8296     031C                     	;# 
  8297     031C                     	;# 
  8298     031D                     	;# 
  8299     031E                     	;# 
  8300     031F                     	;# 
  8301     038C                     	;# 
  8302     038C                     	;# 
  8303     038D                     	;# 
  8304     038E                     	;# 
  8305     0390                     	;# 
  8306     0390                     	;# 
  8307     0391                     	;# 
  8308     0392                     	;# 
  8309     048C                     	;# 
  8310     048C                     	;# 
  8311     048D                     	;# 
  8312     048E                     	;# 
  8313     048F                     	;# 
  8314     048F                     	;# 
  8315     0490                     	;# 
  8316     0491                     	;# 
  8317     0492                     	;# 
  8318     0492                     	;# 
  8319     0493                     	;# 
  8320     0494                     	;# 
  8321     0495                     	;# 
  8322     0495                     	;# 
  8323     0496                     	;# 
  8324     0497                     	;# 
  8325     0498                     	;# 
  8326     0499                     	;# 
  8327     049A                     	;# 
  8328     049B                     	;# 
  8329     049C                     	;# 
  8330     049D                     	;# 
  8331     050C                     	;# 
  8332     050C                     	;# 
  8333     050D                     	;# 
  8334     050E                     	;# 
  8335     050F                     	;# 
  8336     050F                     	;# 
  8337     0510                     	;# 
  8338     0511                     	;# 
  8339     0512                     	;# 
  8340     0512                     	;# 
  8341     0513                     	;# 
  8342     0514                     	;# 
  8343     0515                     	;# 
  8344     0515                     	;# 
  8345     0516                     	;# 
  8346     0517                     	;# 
  8347     0518                     	;# 
  8348     0519                     	;# 
  8349     051A                     	;# 
  8350     051B                     	;# 
  8351     051C                     	;# 
  8352     051D                     	;# 
  8353     058C                     	;# 
  8354     058C                     	;# 
  8355     058D                     	;# 
  8356     058E                     	;# 
  8357     058F                     	;# 
  8358     058F                     	;# 
  8359     0590                     	;# 
  8360     0591                     	;# 
  8361     0592                     	;# 
  8362     0593                     	;# 
  8363     059C                     	;# 
  8364     059C                     	;# 
  8365     059D                     	;# 
  8366     059D                     	;# 
  8367     059E                     	;# 
  8368     059F                     	;# 
  8369     060C                     	;# 
  8370     060C                     	;# 
  8371     060D                     	;# 
  8372     060D                     	;# 
  8373     060E                     	;# 
  8374     060F                     	;# 
  8375     0610                     	;# 
  8376     0611                     	;# 
  8377     0612                     	;# 
  8378     0613                     	;# 
  8379     0614                     	;# 
  8380     0616                     	;# 
  8381     0616                     	;# 
  8382     0617                     	;# 
  8383     0617                     	;# 
  8384     0618                     	;# 
  8385     0619                     	;# 
  8386     061A                     	;# 
  8387     061B                     	;# 
  8388     061C                     	;# 
  8389     061D                     	;# 
  8390     061E                     	;# 
  8391     068C                     	;# 
  8392     068D                     	;# 
  8393     068E                     	;# 
  8394     068F                     	;# 
  8395     0690                     	;# 
  8396     0691                     	;# 
  8397     0692                     	;# 
  8398     0693                     	;# 
  8399     0694                     	;# 
  8400     070C                     	;# 
  8401     070D                     	;# 
  8402     070E                     	;# 
  8403     070F                     	;# 
  8404     0710                     	;# 
  8405     0711                     	;# 
  8406     0712                     	;# 
  8407     0713                     	;# 
  8408     0714                     	;# 
  8409     0716                     	;# 
  8410     0717                     	;# 
  8411     0718                     	;# 
  8412     0719                     	;# 
  8413     071A                     	;# 
  8414     071B                     	;# 
  8415     071C                     	;# 
  8416     071D                     	;# 
  8417     071E                     	;# 
  8418     0796                     	;# 
  8419     0797                     	;# 
  8420     0798                     	;# 
  8421     0799                     	;# 
  8422     079A                     	;# 
  8423     079B                     	;# 
  8424     079C                     	;# 
  8425     079D                     	;# 
  8426     080C                     	;# 
  8427     080D                     	;# 
  8428     080E                     	;# 
  8429     080F                     	;# 
  8430     0810                     	;# 
  8431     0811                     	;# 
  8432     0813                     	;# 
  8433     0814                     	;# 
  8434     081A                     	;# 
  8435     081A                     	;# 
  8436     081B                     	;# 
  8437     081C                     	;# 
  8438     081C                     	;# 
  8439     081D                     	;# 
  8440     081E                     	;# 
  8441     081F                     	;# 
  8442     088C                     	;# 
  8443     088D                     	;# 
  8444     088E                     	;# 
  8445     088F                     	;# 
  8446     0890                     	;# 
  8447     0891                     	;# 
  8448     0892                     	;# 
  8449     0893                     	;# 
  8450     0895                     	;# 
  8451     0896                     	;# 
  8452     0897                     	;# 
  8453     0898                     	;# 
  8454     0899                     	;# 
  8455     089A                     	;# 
  8456     089B                     	;# 
  8457     090C                     	;# 
  8458     090E                     	;# 
  8459     090F                     	;# 
  8460     091F                     	;# 
  8461     098F                     	;# 
  8462     098F                     	;# 
  8463     0990                     	;# 
  8464     0991                     	;# 
  8465     0992                     	;# 
  8466     0993                     	;# 
  8467     0994                     	;# 
  8468     0995                     	;# 
  8469     0996                     	;# 
  8470     0997                     	;# 
  8471     0A19                     	;# 
  8472     0A19                     	;# 
  8473     0A1A                     	;# 
  8474     0A1A                     	;# 
  8475     0A1B                     	;# 
  8476     0A1B                     	;# 
  8477     0A1B                     	;# 
  8478     0A1C                     	;# 
  8479     0A1C                     	;# 
  8480     0A1D                     	;# 
  8481     0A1D                     	;# 
  8482     0A1E                     	;# 
  8483     0A1E                     	;# 
  8484     0A1F                     	;# 
  8485     0A1F                     	;# 
  8486     0A1F                     	;# 
  8487     1E0F                     	;# 
  8488     1E10                     	;# 
  8489     1E11                     	;# 
  8490     1E12                     	;# 
  8491     1E13                     	;# 
  8492     1E14                     	;# 
  8493     1E15                     	;# 
  8494     1E16                     	;# 
  8495     1E17                     	;# 
  8496     1E18                     	;# 
  8497     1E19                     	;# 
  8498     1E1A                     	;# 
  8499     1E1B                     	;# 
  8500     1E1C                     	;# 
  8501     1E1D                     	;# 
  8502     1E1E                     	;# 
  8503     1E1F                     	;# 
  8504     1E20                     	;# 
  8505     1E21                     	;# 
  8506     1E22                     	;# 
  8507     1E23                     	;# 
  8508     1E24                     	;# 
  8509     1E25                     	;# 
  8510     1E26                     	;# 
  8511     1E27                     	;# 
  8512     1E28                     	;# 
  8513     1E29                     	;# 
  8514     1E2A                     	;# 
  8515     1E2B                     	;# 
  8516     1E2C                     	;# 
  8517     1E2D                     	;# 
  8518     1E2E                     	;# 
  8519     1E2F                     	;# 
  8520     1E30                     	;# 
  8521     1E31                     	;# 
  8522     1E32                     	;# 
  8523     1E33                     	;# 
  8524     1E34                     	;# 
  8525     1E35                     	;# 
  8526     1E36                     	;# 
  8527     1E37                     	;# 
  8528     1E8F                     	;# 
  8529     1E90                     	;# 
  8530     1E91                     	;# 
  8531     1E92                     	;# 
  8532     1E93                     	;# 
  8533     1E94                     	;# 
  8534     1E95                     	;# 
  8535     1E96                     	;# 
  8536     1E97                     	;# 
  8537     1E9C                     	;# 
  8538     1E9D                     	;# 
  8539     1E9E                     	;# 
  8540     1EA1                     	;# 
  8541     1EA2                     	;# 
  8542     1EA3                     	;# 
  8543     1EA4                     	;# 
  8544     1EA5                     	;# 
  8545     1EA9                     	;# 
  8546     1EAA                     	;# 
  8547     1EAB                     	;# 
  8548     1EAC                     	;# 
  8549     1EB1                     	;# 
  8550     1EB2                     	;# 
  8551     1EB3                     	;# 
  8552     1EB8                     	;# 
  8553     1EB9                     	;# 
  8554     1EBA                     	;# 
  8555     1EBB                     	;# 
  8556     1EBC                     	;# 
  8557     1EBD                     	;# 
  8558     1EBE                     	;# 
  8559     1EC3                     	;# 
  8560     1EC5                     	;# 
  8561     1EC6                     	;# 
  8562     1EC7                     	;# 
  8563     1EC8                     	;# 
  8564     1EC9                     	;# 
  8565     1ECA                     	;# 
  8566     1ECB                     	;# 
  8567     1ECC                     	;# 
  8568     1ECD                     	;# 
  8569     1ECE                     	;# 
  8570     1F10                     	;# 
  8571     1F11                     	;# 
  8572     1F12                     	;# 
  8573     1F13                     	;# 
  8574     1F14                     	;# 
  8575     1F15                     	;# 
  8576     1F16                     	;# 
  8577     1F17                     	;# 
  8578     1F18                     	;# 
  8579     1F19                     	;# 
  8580     1F1A                     	;# 
  8581     1F1B                     	;# 
  8582     1F1C                     	;# 
  8583     1F1D                     	;# 
  8584     1F1E                     	;# 
  8585     1F1F                     	;# 
  8586     1F20                     	;# 
  8587     1F21                     	;# 
  8588     1F22                     	;# 
  8589     1F23                     	;# 
  8590     1F24                     	;# 
  8591     1F25                     	;# 
  8592     1F26                     	;# 
  8593     1F27                     	;# 
  8594     1F38                     	;# 
  8595     1F39                     	;# 
  8596     1F3A                     	;# 
  8597     1F3B                     	;# 
  8598     1F3C                     	;# 
  8599     1F3D                     	;# 
  8600     1F3E                     	;# 
  8601     1F3F                     	;# 
  8602     1F43                     	;# 
  8603     1F44                     	;# 
  8604     1F45                     	;# 
  8605     1F46                     	;# 
  8606     1F47                     	;# 
  8607     1F48                     	;# 
  8608     1F49                     	;# 
  8609     1F4A                     	;# 
  8610     1F4E                     	;# 
  8611     1F4F                     	;# 
  8612     1F50                     	;# 
  8613     1F51                     	;# 
  8614     1F52                     	;# 
  8615     1F53                     	;# 
  8616     1F54                     	;# 
  8617     1F55                     	;# 
  8618     1F65                     	;# 
  8619     1F66                     	;# 
  8620     1F67                     	;# 
  8621     1F68                     	;# 
  8622     1F69                     	;# 
  8623     1F6A                     	;# 
  8624     1F6B                     	;# 
  8625     1FE4                     	;# 
  8626     1FE5                     	;# 
  8627     1FE6                     	;# 
  8628     1FE7                     	;# 
  8629     1FE8                     	;# 
  8630     1FE8                     	;# 
  8631     1FE9                     	;# 
  8632     1FEA                     	;# 
  8633     1FEB                     	;# 
  8634     1FED                     	;# 
  8635     1FEE                     	;# 
  8636     1FEF                     	;# 
  8637     0000                     	;# 
  8638     0001                     	;# 
  8639     0002                     	;# 
  8640     0003                     	;# 
  8641     0004                     	;# 
  8642     0005                     	;# 
  8643     0006                     	;# 
  8644     0007                     	;# 
  8645     0008                     	;# 
  8646     0009                     	;# 
  8647     000A                     	;# 
  8648     000B                     	;# 
  8649     000C                     	;# 
  8650     000D                     	;# 
  8651     000E                     	;# 
  8652     0010                     	;# 
  8653     0012                     	;# 
  8654     0013                     	;# 
  8655     0014                     	;# 
  8656     0016                     	;# 
  8657     0018                     	;# 
  8658     0019                     	;# 
  8659     001A                     	;# 
  8660     001C                     	;# 
  8661     008C                     	;# 
  8662     008C                     	;# 
  8663     008D                     	;# 
  8664     008E                     	;# 
  8665     008E                     	;# 
  8666     008F                     	;# 
  8667     0090                     	;# 
  8668     0090                     	;# 
  8669     0091                     	;# 
  8670     0092                     	;# 
  8671     0092                     	;# 
  8672     0093                     	;# 
  8673     0094                     	;# 
  8674     0094                     	;# 
  8675     0095                     	;# 
  8676     0096                     	;# 
  8677     0096                     	;# 
  8678     0097                     	;# 
  8679     0098                     	;# 
  8680     0099                     	;# 
  8681     009A                     	;# 
  8682     009B                     	;# 
  8683     009B                     	;# 
  8684     009C                     	;# 
  8685     009D                     	;# 
  8686     009D                     	;# 
  8687     009E                     	;# 
  8688     009F                     	;# 
  8689     010C                     	;# 
  8690     010C                     	;# 
  8691     010D                     	;# 
  8692     010E                     	;# 
  8693     010F                     	;# 
  8694     010F                     	;# 
  8695     0110                     	;# 
  8696     0111                     	;# 
  8697     0112                     	;# 
  8698     0113                     	;# 
  8699     0114                     	;# 
  8700     0115                     	;# 
  8701     0116                     	;# 
  8702     0117                     	;# 
  8703     0118                     	;# 
  8704     0119                     	;# 
  8705     0119                     	;# 
  8706     0119                     	;# 
  8707     011A                     	;# 
  8708     011A                     	;# 
  8709     011A                     	;# 
  8710     011B                     	;# 
  8711     011B                     	;# 
  8712     011B                     	;# 
  8713     011B                     	;# 
  8714     011B                     	;# 
  8715     011C                     	;# 
  8716     011C                     	;# 
  8717     011C                     	;# 
  8718     011D                     	;# 
  8719     011D                     	;# 
  8720     011D                     	;# 
  8721     011E                     	;# 
  8722     011E                     	;# 
  8723     011E                     	;# 
  8724     011F                     	;# 
  8725     011F                     	;# 
  8726     011F                     	;# 
  8727     011F                     	;# 
  8728     011F                     	;# 
  8729     018C                     	;# 
  8730     018D                     	;# 
  8731     018E                     	;# 
  8732     018F                     	;# 
  8733     0190                     	;# 
  8734     0191                     	;# 
  8735     0192                     	;# 
  8736     0196                     	;# 
  8737     0197                     	;# 
  8738     0198                     	;# 
  8739     0199                     	;# 
  8740     019A                     	;# 
  8741     019B                     	;# 
  8742     019C                     	;# 
  8743     020C                     	;# 
  8744     020D                     	;# 
  8745     020E                     	;# 
  8746     020E                     	;# 
  8747     020F                     	;# 
  8748     020F                     	;# 
  8749     0210                     	;# 
  8750     0210                     	;# 
  8751     0211                     	;# 
  8752     0211                     	;# 
  8753     0212                     	;# 
  8754     0213                     	;# 
  8755     0214                     	;# 
  8756     0214                     	;# 
  8757     0215                     	;# 
  8758     0215                     	;# 
  8759     0216                     	;# 
  8760     0216                     	;# 
  8761     0217                     	;# 
  8762     0217                     	;# 
  8763     0218                     	;# 
  8764     0219                     	;# 
  8765     021A                     	;# 
  8766     021A                     	;# 
  8767     021B                     	;# 
  8768     021B                     	;# 
  8769     021C                     	;# 
  8770     021C                     	;# 
  8771     021D                     	;# 
  8772     021D                     	;# 
  8773     021E                     	;# 
  8774     021F                     	;# 
  8775     028C                     	;# 
  8776     028C                     	;# 
  8777     028D                     	;# 
  8778     028D                     	;# 
  8779     028E                     	;# 
  8780     028F                     	;# 
  8781     0290                     	;# 
  8782     0291                     	;# 
  8783     0292                     	;# 
  8784     0292                     	;# 
  8785     0293                     	;# 
  8786     0293                     	;# 
  8787     0294                     	;# 
  8788     0295                     	;# 
  8789     0296                     	;# 
  8790     0297                     	;# 
  8791     0298                     	;# 
  8792     0298                     	;# 
  8793     0299                     	;# 
  8794     0299                     	;# 
  8795     029A                     	;# 
  8796     029B                     	;# 
  8797     029C                     	;# 
  8798     029D                     	;# 
  8799     029F                     	;# 
  8800     030C                     	;# 
  8801     030C                     	;# 
  8802     030D                     	;# 
  8803     030E                     	;# 
  8804     030F                     	;# 
  8805     0310                     	;# 
  8806     0310                     	;# 
  8807     0311                     	;# 
  8808     0312                     	;# 
  8809     0313                     	;# 
  8810     0314                     	;# 
  8811     0314                     	;# 
  8812     0315                     	;# 
  8813     0316                     	;# 
  8814     0317                     	;# 
  8815     0318                     	;# 
  8816     0318                     	;# 
  8817     0319                     	;# 
  8818     031A                     	;# 
  8819     031B                     	;# 
  8820     031C                     	;# 
  8821     031C                     	;# 
  8822     031D                     	;# 
  8823     031E                     	;# 
  8824     031F                     	;# 
  8825     038C                     	;# 
  8826     038C                     	;# 
  8827     038D                     	;# 
  8828     038E                     	;# 
  8829     0390                     	;# 
  8830     0390                     	;# 
  8831     0391                     	;# 
  8832     0392                     	;# 
  8833     048C                     	;# 
  8834     048C                     	;# 
  8835     048D                     	;# 
  8836     048E                     	;# 
  8837     048F                     	;# 
  8838     048F                     	;# 
  8839     0490                     	;# 
  8840     0491                     	;# 
  8841     0492                     	;# 
  8842     0492                     	;# 
  8843     0493                     	;# 
  8844     0494                     	;# 
  8845     0495                     	;# 
  8846     0495                     	;# 
  8847     0496                     	;# 
  8848     0497                     	;# 
  8849     0498                     	;# 
  8850     0499                     	;# 
  8851     049A                     	;# 
  8852     049B                     	;# 
  8853     049C                     	;# 
  8854     049D                     	;# 
  8855     050C                     	;# 
  8856     050C                     	;# 
  8857     050D                     	;# 
  8858     050E                     	;# 
  8859     050F                     	;# 
  8860     050F                     	;# 
  8861     0510                     	;# 
  8862     0511                     	;# 
  8863     0512                     	;# 
  8864     0512                     	;# 
  8865     0513                     	;# 
  8866     0514                     	;# 
  8867     0515                     	;# 
  8868     0515                     	;# 
  8869     0516                     	;# 
  8870     0517                     	;# 
  8871     0518                     	;# 
  8872     0519                     	;# 
  8873     051A                     	;# 
  8874     051B                     	;# 
  8875     051C                     	;# 
  8876     051D                     	;# 
  8877     058C                     	;# 
  8878     058C                     	;# 
  8879     058D                     	;# 
  8880     058E                     	;# 
  8881     058F                     	;# 
  8882     058F                     	;# 
  8883     0590                     	;# 
  8884     0591                     	;# 
  8885     0592                     	;# 
  8886     0593                     	;# 
  8887     059C                     	;# 
  8888     059C                     	;# 
  8889     059D                     	;# 
  8890     059D                     	;# 
  8891     059E                     	;# 
  8892     059F                     	;# 
  8893     060C                     	;# 
  8894     060C                     	;# 
  8895     060D                     	;# 
  8896     060D                     	;# 
  8897     060E                     	;# 
  8898     060F                     	;# 
  8899     0610                     	;# 
  8900     0611                     	;# 
  8901     0612                     	;# 
  8902     0613                     	;# 
  8903     0614                     	;# 
  8904     0616                     	;# 
  8905     0616                     	;# 
  8906     0617                     	;# 
  8907     0617                     	;# 
  8908     0618                     	;# 
  8909     0619                     	;# 
  8910     061A                     	;# 
  8911     061B                     	;# 
  8912     061C                     	;# 
  8913     061D                     	;# 
  8914     061E                     	;# 
  8915     068C                     	;# 
  8916     068D                     	;# 
  8917     068E                     	;# 
  8918     068F                     	;# 
  8919     0690                     	;# 
  8920     0691                     	;# 
  8921     0692                     	;# 
  8922     0693                     	;# 
  8923     0694                     	;# 
  8924     070C                     	;# 
  8925     070D                     	;# 
  8926     070E                     	;# 
  8927     070F                     	;# 
  8928     0710                     	;# 
  8929     0711                     	;# 
  8930     0712                     	;# 
  8931     0713                     	;# 
  8932     0714                     	;# 
  8933     0716                     	;# 
  8934     0717                     	;# 
  8935     0718                     	;# 
  8936     0719                     	;# 
  8937     071A                     	;# 
  8938     071B                     	;# 
  8939     071C                     	;# 
  8940     071D                     	;# 
  8941     071E                     	;# 
  8942     0796                     	;# 
  8943     0797                     	;# 
  8944     0798                     	;# 
  8945     0799                     	;# 
  8946     079A                     	;# 
  8947     079B                     	;# 
  8948     079C                     	;# 
  8949     079D                     	;# 
  8950     080C                     	;# 
  8951     080D                     	;# 
  8952     080E                     	;# 
  8953     080F                     	;# 
  8954     0810                     	;# 
  8955     0811                     	;# 
  8956     0813                     	;# 
  8957     0814                     	;# 
  8958     081A                     	;# 
  8959     081A                     	;# 
  8960     081B                     	;# 
  8961     081C                     	;# 
  8962     081C                     	;# 
  8963     081D                     	;# 
  8964     081E                     	;# 
  8965     081F                     	;# 
  8966     088C                     	;# 
  8967     088D                     	;# 
  8968     088E                     	;# 
  8969     088F                     	;# 
  8970     0890                     	;# 
  8971     0891                     	;# 
  8972     0892                     	;# 
  8973     0893                     	;# 
  8974     0895                     	;# 
  8975     0896                     	;# 
  8976     0897                     	;# 
  8977     0898                     	;# 
  8978     0899                     	;# 
  8979     089A                     	;# 
  8980     089B                     	;# 
  8981     090C                     	;# 
  8982     090E                     	;# 
  8983     090F                     	;# 
  8984     091F                     	;# 
  8985     098F                     	;# 
  8986     098F                     	;# 
  8987     0990                     	;# 
  8988     0991                     	;# 
  8989     0992                     	;# 
  8990     0993                     	;# 
  8991     0994                     	;# 
  8992     0995                     	;# 
  8993     0996                     	;# 
  8994     0997                     	;# 
  8995     0A19                     	;# 
  8996     0A19                     	;# 
  8997     0A1A                     	;# 
  8998     0A1A                     	;# 
  8999     0A1B                     	;# 
  9000     0A1B                     	;# 
  9001     0A1B                     	;# 
  9002     0A1C                     	;# 
  9003     0A1C                     	;# 
  9004     0A1D                     	;# 
  9005     0A1D                     	;# 
  9006     0A1E                     	;# 
  9007     0A1E                     	;# 
  9008     0A1F                     	;# 
  9009     0A1F                     	;# 
  9010     0A1F                     	;# 
  9011     1E0F                     	;# 
  9012     1E10                     	;# 
  9013     1E11                     	;# 
  9014     1E12                     	;# 
  9015     1E13                     	;# 
  9016     1E14                     	;# 
  9017     1E15                     	;# 
  9018     1E16                     	;# 
  9019     1E17                     	;# 
  9020     1E18                     	;# 
  9021     1E19                     	;# 
  9022     1E1A                     	;# 
  9023     1E1B                     	;# 
  9024     1E1C                     	;# 
  9025     1E1D                     	;# 
  9026     1E1E                     	;# 
  9027     1E1F                     	;# 
  9028     1E20                     	;# 
  9029     1E21                     	;# 
  9030     1E22                     	;# 
  9031     1E23                     	;# 
  9032     1E24                     	;# 
  9033     1E25                     	;# 
  9034     1E26                     	;# 
  9035     1E27                     	;# 
  9036     1E28                     	;# 
  9037     1E29                     	;# 
  9038     1E2A                     	;# 
  9039     1E2B                     	;# 
  9040     1E2C                     	;# 
  9041     1E2D                     	;# 
  9042     1E2E                     	;# 
  9043     1E2F                     	;# 
  9044     1E30                     	;# 
  9045     1E31                     	;# 
  9046     1E32                     	;# 
  9047     1E33                     	;# 
  9048     1E34                     	;# 
  9049     1E35                     	;# 
  9050     1E36                     	;# 
  9051     1E37                     	;# 
  9052     1E8F                     	;# 
  9053     1E90                     	;# 
  9054     1E91                     	;# 
  9055     1E92                     	;# 
  9056     1E93                     	;# 
  9057     1E94                     	;# 
  9058     1E95                     	;# 
  9059     1E96                     	;# 
  9060     1E97                     	;# 
  9061     1E9C                     	;# 
  9062     1E9D                     	;# 
  9063     1E9E                     	;# 
  9064     1EA1                     	;# 
  9065     1EA2                     	;# 
  9066     1EA3                     	;# 
  9067     1EA4                     	;# 
  9068     1EA5                     	;# 
  9069     1EA9                     	;# 
  9070     1EAA                     	;# 
  9071     1EAB                     	;# 
  9072     1EAC                     	;# 
  9073     1EB1                     	;# 
  9074     1EB2                     	;# 
  9075     1EB3                     	;# 
  9076     1EB8                     	;# 
  9077     1EB9                     	;# 
  9078     1EBA                     	;# 
  9079     1EBB                     	;# 
  9080     1EBC                     	;# 
  9081     1EBD                     	;# 
  9082     1EBE                     	;# 
  9083     1EC3                     	;# 
  9084     1EC5                     	;# 
  9085     1EC6                     	;# 
  9086     1EC7                     	;# 
  9087     1EC8                     	;# 
  9088     1EC9                     	;# 
  9089     1ECA                     	;# 
  9090     1ECB                     	;# 
  9091     1ECC                     	;# 
  9092     1ECD                     	;# 
  9093     1ECE                     	;# 
  9094     1F10                     	;# 
  9095     1F11                     	;# 
  9096     1F12                     	;# 
  9097     1F13                     	;# 
  9098     1F14                     	;# 
  9099     1F15                     	;# 
  9100     1F16                     	;# 
  9101     1F17                     	;# 
  9102     1F18                     	;# 
  9103     1F19                     	;# 
  9104     1F1A                     	;# 
  9105     1F1B                     	;# 
  9106     1F1C                     	;# 
  9107     1F1D                     	;# 
  9108     1F1E                     	;# 
  9109     1F1F                     	;# 
  9110     1F20                     	;# 
  9111     1F21                     	;# 
  9112     1F22                     	;# 
  9113     1F23                     	;# 
  9114     1F24                     	;# 
  9115     1F25                     	;# 
  9116     1F26                     	;# 
  9117     1F27                     	;# 
  9118     1F38                     	;# 
  9119     1F39                     	;# 
  9120     1F3A                     	;# 
  9121     1F3B                     	;# 
  9122     1F3C                     	;# 
  9123     1F3D                     	;# 
  9124     1F3E                     	;# 
  9125     1F3F                     	;# 
  9126     1F43                     	;# 
  9127     1F44                     	;# 
  9128     1F45                     	;# 
  9129     1F46                     	;# 
  9130     1F47                     	;# 
  9131     1F48                     	;# 
  9132     1F49                     	;# 
  9133     1F4A                     	;# 
  9134     1F4E                     	;# 
  9135     1F4F                     	;# 
  9136     1F50                     	;# 
  9137     1F51                     	;# 
  9138     1F52                     	;# 
  9139     1F53                     	;# 
  9140     1F54                     	;# 
  9141     1F55                     	;# 
  9142     1F65                     	;# 
  9143     1F66                     	;# 
  9144     1F67                     	;# 
  9145     1F68                     	;# 
  9146     1F69                     	;# 
  9147     1F6A                     	;# 
  9148     1F6B                     	;# 
  9149     1FE4                     	;# 
  9150     1FE5                     	;# 
  9151     1FE6                     	;# 
  9152     1FE7                     	;# 
  9153     1FE8                     	;# 
  9154     1FE8                     	;# 
  9155     1FE9                     	;# 
  9156     1FEA                     	;# 
  9157     1FEB                     	;# 
  9158     1FED                     	;# 
  9159     1FEE                     	;# 
  9160     1FEF                     	;# 
  9161     0000                     	;# 
  9162     0001                     	;# 
  9163     0002                     	;# 
  9164     0003                     	;# 
  9165     0004                     	;# 
  9166     0005                     	;# 
  9167     0006                     	;# 
  9168     0007                     	;# 
  9169     0008                     	;# 
  9170     0009                     	;# 
  9171     000A                     	;# 
  9172     000B                     	;# 
  9173     000C                     	;# 
  9174     000D                     	;# 
  9175     000E                     	;# 
  9176     0010                     	;# 
  9177     0012                     	;# 
  9178     0013                     	;# 
  9179     0014                     	;# 
  9180     0016                     	;# 
  9181     0018                     	;# 
  9182     0019                     	;# 
  9183     001A                     	;# 
  9184     001C                     	;# 
  9185     008C                     	;# 
  9186     008C                     	;# 
  9187     008D                     	;# 
  9188     008E                     	;# 
  9189     008E                     	;# 
  9190     008F                     	;# 
  9191     0090                     	;# 
  9192     0090                     	;# 
  9193     0091                     	;# 
  9194     0092                     	;# 
  9195     0092                     	;# 
  9196     0093                     	;# 
  9197     0094                     	;# 
  9198     0094                     	;# 
  9199     0095                     	;# 
  9200     0096                     	;# 
  9201     0096                     	;# 
  9202     0097                     	;# 
  9203     0098                     	;# 
  9204     0099                     	;# 
  9205     009A                     	;# 
  9206     009B                     	;# 
  9207     009B                     	;# 
  9208     009C                     	;# 
  9209     009D                     	;# 
  9210     009D                     	;# 
  9211     009E                     	;# 
  9212     009F                     	;# 
  9213     010C                     	;# 
  9214     010C                     	;# 
  9215     010D                     	;# 
  9216     010E                     	;# 
  9217     010F                     	;# 
  9218     010F                     	;# 
  9219     0110                     	;# 
  9220     0111                     	;# 
  9221     0112                     	;# 
  9222     0113                     	;# 
  9223     0114                     	;# 
  9224     0115                     	;# 
  9225     0116                     	;# 
  9226     0117                     	;# 
  9227     0118                     	;# 
  9228     0119                     	;# 
  9229     0119                     	;# 
  9230     0119                     	;# 
  9231     011A                     	;# 
  9232     011A                     	;# 
  9233     011A                     	;# 
  9234     011B                     	;# 
  9235     011B                     	;# 
  9236     011B                     	;# 
  9237     011B                     	;# 
  9238     011B                     	;# 
  9239     011C                     	;# 
  9240     011C                     	;# 
  9241     011C                     	;# 
  9242     011D                     	;# 
  9243     011D                     	;# 
  9244     011D                     	;# 
  9245     011E                     	;# 
  9246     011E                     	;# 
  9247     011E                     	;# 
  9248     011F                     	;# 
  9249     011F                     	;# 
  9250     011F                     	;# 
  9251     011F                     	;# 
  9252     011F                     	;# 
  9253     018C                     	;# 
  9254     018D                     	;# 
  9255     018E                     	;# 
  9256     018F                     	;# 
  9257     0190                     	;# 
  9258     0191                     	;# 
  9259     0192                     	;# 
  9260     0196                     	;# 
  9261     0197                     	;# 
  9262     0198                     	;# 
  9263     0199                     	;# 
  9264     019A                     	;# 
  9265     019B                     	;# 
  9266     019C                     	;# 
  9267     020C                     	;# 
  9268     020D                     	;# 
  9269     020E                     	;# 
  9270     020E                     	;# 
  9271     020F                     	;# 
  9272     020F                     	;# 
  9273     0210                     	;# 
  9274     0210                     	;# 
  9275     0211                     	;# 
  9276     0211                     	;# 
  9277     0212                     	;# 
  9278     0213                     	;# 
  9279     0214                     	;# 
  9280     0214                     	;# 
  9281     0215                     	;# 
  9282     0215                     	;# 
  9283     0216                     	;# 
  9284     0216                     	;# 
  9285     0217                     	;# 
  9286     0217                     	;# 
  9287     0218                     	;# 
  9288     0219                     	;# 
  9289     021A                     	;# 
  9290     021A                     	;# 
  9291     021B                     	;# 
  9292     021B                     	;# 
  9293     021C                     	;# 
  9294     021C                     	;# 
  9295     021D                     	;# 
  9296     021D                     	;# 
  9297     021E                     	;# 
  9298     021F                     	;# 
  9299     028C                     	;# 
  9300     028C                     	;# 
  9301     028D                     	;# 
  9302     028D                     	;# 
  9303     028E                     	;# 
  9304     028F                     	;# 
  9305     0290                     	;# 
  9306     0291                     	;# 
  9307     0292                     	;# 
  9308     0292                     	;# 
  9309     0293                     	;# 
  9310     0293                     	;# 
  9311     0294                     	;# 
  9312     0295                     	;# 
  9313     0296                     	;# 
  9314     0297                     	;# 
  9315     0298                     	;# 
  9316     0298                     	;# 
  9317     0299                     	;# 
  9318     0299                     	;# 
  9319     029A                     	;# 
  9320     029B                     	;# 
  9321     029C                     	;# 
  9322     029D                     	;# 
  9323     029F                     	;# 
  9324     030C                     	;# 
  9325     030C                     	;# 
  9326     030D                     	;# 
  9327     030E                     	;# 
  9328     030F                     	;# 
  9329     0310                     	;# 
  9330     0310                     	;# 
  9331     0311                     	;# 
  9332     0312                     	;# 
  9333     0313                     	;# 
  9334     0314                     	;# 
  9335     0314                     	;# 
  9336     0315                     	;# 
  9337     0316                     	;# 
  9338     0317                     	;# 
  9339     0318                     	;# 
  9340     0318                     	;# 
  9341     0319                     	;# 
  9342     031A                     	;# 
  9343     031B                     	;# 
  9344     031C                     	;# 
  9345     031C                     	;# 
  9346     031D                     	;# 
  9347     031E                     	;# 
  9348     031F                     	;# 
  9349     038C                     	;# 
  9350     038C                     	;# 
  9351     038D                     	;# 
  9352     038E                     	;# 
  9353     0390                     	;# 
  9354     0390                     	;# 
  9355     0391                     	;# 
  9356     0392                     	;# 
  9357     048C                     	;# 
  9358     048C                     	;# 
  9359     048D                     	;# 
  9360     048E                     	;# 
  9361     048F                     	;# 
  9362     048F                     	;# 
  9363     0490                     	;# 
  9364     0491                     	;# 
  9365     0492                     	;# 
  9366     0492                     	;# 
  9367     0493                     	;# 
  9368     0494                     	;# 
  9369     0495                     	;# 
  9370     0495                     	;# 
  9371     0496                     	;# 
  9372     0497                     	;# 
  9373     0498                     	;# 
  9374     0499                     	;# 
  9375     049A                     	;# 
  9376     049B                     	;# 
  9377     049C                     	;# 
  9378     049D                     	;# 
  9379     050C                     	;# 
  9380     050C                     	;# 
  9381     050D                     	;# 
  9382     050E                     	;# 
  9383     050F                     	;# 
  9384     050F                     	;# 
  9385     0510                     	;# 
  9386     0511                     	;# 
  9387     0512                     	;# 
  9388     0512                     	;# 
  9389     0513                     	;# 
  9390     0514                     	;# 
  9391     0515                     	;# 
  9392     0515                     	;# 
  9393     0516                     	;# 
  9394     0517                     	;# 
  9395     0518                     	;# 
  9396     0519                     	;# 
  9397     051A                     	;# 
  9398     051B                     	;# 
  9399     051C                     	;# 
  9400     051D                     	;# 
  9401     058C                     	;# 
  9402     058C                     	;# 
  9403     058D                     	;# 
  9404     058E                     	;# 
  9405     058F                     	;# 
  9406     058F                     	;# 
  9407     0590                     	;# 
  9408     0591                     	;# 
  9409     0592                     	;# 
  9410     0593                     	;# 
  9411     059C                     	;# 
  9412     059C                     	;# 
  9413     059D                     	;# 
  9414     059D                     	;# 
  9415     059E                     	;# 
  9416     059F                     	;# 
  9417     060C                     	;# 
  9418     060C                     	;# 
  9419     060D                     	;# 
  9420     060D                     	;# 
  9421     060E                     	;# 
  9422     060F                     	;# 
  9423     0610                     	;# 
  9424     0611                     	;# 
  9425     0612                     	;# 
  9426     0613                     	;# 
  9427     0614                     	;# 
  9428     0616                     	;# 
  9429     0616                     	;# 
  9430     0617                     	;# 
  9431     0617                     	;# 
  9432     0618                     	;# 
  9433     0619                     	;# 
  9434     061A                     	;# 
  9435     061B                     	;# 
  9436     061C                     	;# 
  9437     061D                     	;# 
  9438     061E                     	;# 
  9439     068C                     	;# 
  9440     068D                     	;# 
  9441     068E                     	;# 
  9442     068F                     	;# 
  9443     0690                     	;# 
  9444     0691                     	;# 
  9445     0692                     	;# 
  9446     0693                     	;# 
  9447     0694                     	;# 
  9448     070C                     	;# 
  9449     070D                     	;# 
  9450     070E                     	;# 
  9451     070F                     	;# 
  9452     0710                     	;# 
  9453     0711                     	;# 
  9454     0712                     	;# 
  9455     0713                     	;# 
  9456     0714                     	;# 
  9457     0716                     	;# 
  9458     0717                     	;# 
  9459     0718                     	;# 
  9460     0719                     	;# 
  9461     071A                     	;# 
  9462     071B                     	;# 
  9463     071C                     	;# 
  9464     071D                     	;# 
  9465     071E                     	;# 
  9466     0796                     	;# 
  9467     0797                     	;# 
  9468     0798                     	;# 
  9469     0799                     	;# 
  9470     079A                     	;# 
  9471     079B                     	;# 
  9472     079C                     	;# 
  9473     079D                     	;# 
  9474     080C                     	;# 
  9475     080D                     	;# 
  9476     080E                     	;# 
  9477     080F                     	;# 
  9478     0810                     	;# 
  9479     0811                     	;# 
  9480     0813                     	;# 
  9481     0814                     	;# 
  9482     081A                     	;# 
  9483     081A                     	;# 
  9484     081B                     	;# 
  9485     081C                     	;# 
  9486     081C                     	;# 
  9487     081D                     	;# 
  9488     081E                     	;# 
  9489     081F                     	;# 
  9490     088C                     	;# 
  9491     088D                     	;# 
  9492     088E                     	;# 
  9493     088F                     	;# 
  9494     0890                     	;# 
  9495     0891                     	;# 
  9496     0892                     	;# 
  9497     0893                     	;# 
  9498     0895                     	;# 
  9499     0896                     	;# 
  9500     0897                     	;# 
  9501     0898                     	;# 
  9502     0899                     	;# 
  9503     089A                     	;# 
  9504     089B                     	;# 
  9505     090C                     	;# 
  9506     090E                     	;# 
  9507     090F                     	;# 
  9508     091F                     	;# 
  9509     098F                     	;# 
  9510     098F                     	;# 
  9511     0990                     	;# 
  9512     0991                     	;# 
  9513     0992                     	;# 
  9514     0993                     	;# 
  9515     0994                     	;# 
  9516     0995                     	;# 
  9517     0996                     	;# 
  9518     0997                     	;# 
  9519     0A19                     	;# 
  9520     0A19                     	;# 
  9521     0A1A                     	;# 
  9522     0A1A                     	;# 
  9523     0A1B                     	;# 
  9524     0A1B                     	;# 
  9525     0A1B                     	;# 
  9526     0A1C                     	;# 
  9527     0A1C                     	;# 
  9528     0A1D                     	;# 
  9529     0A1D                     	;# 
  9530     0A1E                     	;# 
  9531     0A1E                     	;# 
  9532     0A1F                     	;# 
  9533     0A1F                     	;# 
  9534     0A1F                     	;# 
  9535     1E0F                     	;# 
  9536     1E10                     	;# 
  9537     1E11                     	;# 
  9538     1E12                     	;# 
  9539     1E13                     	;# 
  9540     1E14                     	;# 
  9541     1E15                     	;# 
  9542     1E16                     	;# 
  9543     1E17                     	;# 
  9544     1E18                     	;# 
  9545     1E19                     	;# 
  9546     1E1A                     	;# 
  9547     1E1B                     	;# 
  9548     1E1C                     	;# 
  9549     1E1D                     	;# 
  9550     1E1E                     	;# 
  9551     1E1F                     	;# 
  9552     1E20                     	;# 
  9553     1E21                     	;# 
  9554     1E22                     	;# 
  9555     1E23                     	;# 
  9556     1E24                     	;# 
  9557     1E25                     	;# 
  9558     1E26                     	;# 
  9559     1E27                     	;# 
  9560     1E28                     	;# 
  9561     1E29                     	;# 
  9562     1E2A                     	;# 
  9563     1E2B                     	;# 
  9564     1E2C                     	;# 
  9565     1E2D                     	;# 
  9566     1E2E                     	;# 
  9567     1E2F                     	;# 
  9568     1E30                     	;# 
  9569     1E31                     	;# 
  9570     1E32                     	;# 
  9571     1E33                     	;# 
  9572     1E34                     	;# 
  9573     1E35                     	;# 
  9574     1E36                     	;# 
  9575     1E37                     	;# 
  9576     1E8F                     	;# 
  9577     1E90                     	;# 
  9578     1E91                     	;# 
  9579     1E92                     	;# 
  9580     1E93                     	;# 
  9581     1E94                     	;# 
  9582     1E95                     	;# 
  9583     1E96                     	;# 
  9584     1E97                     	;# 
  9585     1E9C                     	;# 
  9586     1E9D                     	;# 
  9587     1E9E                     	;# 
  9588     1EA1                     	;# 
  9589     1EA2                     	;# 
  9590     1EA3                     	;# 
  9591     1EA4                     	;# 
  9592     1EA5                     	;# 
  9593     1EA9                     	;# 
  9594     1EAA                     	;# 
  9595     1EAB                     	;# 
  9596     1EAC                     	;# 
  9597     1EB1                     	;# 
  9598     1EB2                     	;# 
  9599     1EB3                     	;# 
  9600     1EB8                     	;# 
  9601     1EB9                     	;# 
  9602     1EBA                     	;# 
  9603     1EBB                     	;# 
  9604     1EBC                     	;# 
  9605     1EBD                     	;# 
  9606     1EBE                     	;# 
  9607     1EC3                     	;# 
  9608     1EC5                     	;# 
  9609     1EC6                     	;# 
  9610     1EC7                     	;# 
  9611     1EC8                     	;# 
  9612     1EC9                     	;# 
  9613     1ECA                     	;# 
  9614     1ECB                     	;# 
  9615     1ECC                     	;# 
  9616     1ECD                     	;# 
  9617     1ECE                     	;# 
  9618     1F10                     	;# 
  9619     1F11                     	;# 
  9620     1F12                     	;# 
  9621     1F13                     	;# 
  9622     1F14                     	;# 
  9623     1F15                     	;# 
  9624     1F16                     	;# 
  9625     1F17                     	;# 
  9626     1F18                     	;# 
  9627     1F19                     	;# 
  9628     1F1A                     	;# 
  9629     1F1B                     	;# 
  9630     1F1C                     	;# 
  9631     1F1D                     	;# 
  9632     1F1E                     	;# 
  9633     1F1F                     	;# 
  9634     1F20                     	;# 
  9635     1F21                     	;# 
  9636     1F22                     	;# 
  9637     1F23                     	;# 
  9638     1F24                     	;# 
  9639     1F25                     	;# 
  9640     1F26                     	;# 
  9641     1F27                     	;# 
  9642     1F38                     	;# 
  9643     1F39                     	;# 
  9644     1F3A                     	;# 
  9645     1F3B                     	;# 
  9646     1F3C                     	;# 
  9647     1F3D                     	;# 
  9648     1F3E                     	;# 
  9649     1F3F                     	;# 
  9650     1F43                     	;# 
  9651     1F44                     	;# 
  9652     1F45                     	;# 
  9653     1F46                     	;# 
  9654     1F47                     	;# 
  9655     1F48                     	;# 
  9656     1F49                     	;# 
  9657     1F4A                     	;# 
  9658     1F4E                     	;# 
  9659     1F4F                     	;# 
  9660     1F50                     	;# 
  9661     1F51                     	;# 
  9662     1F52                     	;# 
  9663     1F53                     	;# 
  9664     1F54                     	;# 
  9665     1F55                     	;# 
  9666     1F65                     	;# 
  9667     1F66                     	;# 
  9668     1F67                     	;# 
  9669     1F68                     	;# 
  9670     1F69                     	;# 
  9671     1F6A                     	;# 
  9672     1F6B                     	;# 
  9673     1FE4                     	;# 
  9674     1FE5                     	;# 
  9675     1FE6                     	;# 
  9676     1FE7                     	;# 
  9677     1FE8                     	;# 
  9678     1FE8                     	;# 
  9679     1FE9                     	;# 
  9680     1FEA                     	;# 
  9681     1FEB                     	;# 
  9682     1FED                     	;# 
  9683     1FEE                     	;# 
  9684     1FEF                     	;# 
  9685     0000                     	;# 
  9686     0001                     	;# 
  9687     0002                     	;# 
  9688     0003                     	;# 
  9689     0004                     	;# 
  9690     0005                     	;# 
  9691     0006                     	;# 
  9692     0007                     	;# 
  9693     0008                     	;# 
  9694     0009                     	;# 
  9695     000A                     	;# 
  9696     000B                     	;# 
  9697     000C                     	;# 
  9698     000D                     	;# 
  9699     000E                     	;# 
  9700     0010                     	;# 
  9701     0012                     	;# 
  9702     0013                     	;# 
  9703     0014                     	;# 
  9704     0016                     	;# 
  9705     0018                     	;# 
  9706     0019                     	;# 
  9707     001A                     	;# 
  9708     001C                     	;# 
  9709     008C                     	;# 
  9710     008C                     	;# 
  9711     008D                     	;# 
  9712     008E                     	;# 
  9713     008E                     	;# 
  9714     008F                     	;# 
  9715     0090                     	;# 
  9716     0090                     	;# 
  9717     0091                     	;# 
  9718     0092                     	;# 
  9719     0092                     	;# 
  9720     0093                     	;# 
  9721     0094                     	;# 
  9722     0094                     	;# 
  9723     0095                     	;# 
  9724     0096                     	;# 
  9725     0096                     	;# 
  9726     0097                     	;# 
  9727     0098                     	;# 
  9728     0099                     	;# 
  9729     009A                     	;# 
  9730     009B                     	;# 
  9731     009B                     	;# 
  9732     009C                     	;# 
  9733     009D                     	;# 
  9734     009D                     	;# 
  9735     009E                     	;# 
  9736     009F                     	;# 
  9737     010C                     	;# 
  9738     010C                     	;# 
  9739     010D                     	;# 
  9740     010E                     	;# 
  9741     010F                     	;# 
  9742     010F                     	;# 
  9743     0110                     	;# 
  9744     0111                     	;# 
  9745     0112                     	;# 
  9746     0113                     	;# 
  9747     0114                     	;# 
  9748     0115                     	;# 
  9749     0116                     	;# 
  9750     0117                     	;# 
  9751     0118                     	;# 
  9752     0119                     	;# 
  9753     0119                     	;# 
  9754     0119                     	;# 
  9755     011A                     	;# 
  9756     011A                     	;# 
  9757     011A                     	;# 
  9758     011B                     	;# 
  9759     011B                     	;# 
  9760     011B                     	;# 
  9761     011B                     	;# 
  9762     011B                     	;# 
  9763     011C                     	;# 
  9764     011C                     	;# 
  9765     011C                     	;# 
  9766     011D                     	;# 
  9767     011D                     	;# 
  9768     011D                     	;# 
  9769     011E                     	;# 
  9770     011E                     	;# 
  9771     011E                     	;# 
  9772     011F                     	;# 
  9773     011F                     	;# 
  9774     011F                     	;# 
  9775     011F                     	;# 
  9776     011F                     	;# 
  9777     018C                     	;# 
  9778     018D                     	;# 
  9779     018E                     	;# 
  9780     018F                     	;# 
  9781     0190                     	;# 
  9782     0191                     	;# 
  9783     0192                     	;# 
  9784     0196                     	;# 
  9785     0197                     	;# 
  9786     0198                     	;# 
  9787     0199                     	;# 
  9788     019A                     	;# 
  9789     019B                     	;# 
  9790     019C                     	;# 
  9791     020C                     	;# 
  9792     020D                     	;# 
  9793     020E                     	;# 
  9794     020E                     	;# 
  9795     020F                     	;# 
  9796     020F                     	;# 
  9797     0210                     	;# 
  9798     0210                     	;# 
  9799     0211                     	;# 
  9800     0211                     	;# 
  9801     0212                     	;# 
  9802     0213                     	;# 
  9803     0214                     	;# 
  9804     0214                     	;# 
  9805     0215                     	;# 
  9806     0215                     	;# 
  9807     0216                     	;# 
  9808     0216                     	;# 
  9809     0217                     	;# 
  9810     0217                     	;# 
  9811     0218                     	;# 
  9812     0219                     	;# 
  9813     021A                     	;# 
  9814     021A                     	;# 
  9815     021B                     	;# 
  9816     021B                     	;# 
  9817     021C                     	;# 
  9818     021C                     	;# 
  9819     021D                     	;# 
  9820     021D                     	;# 
  9821     021E                     	;# 
  9822     021F                     	;# 
  9823     028C                     	;# 
  9824     028C                     	;# 
  9825     028D                     	;# 
  9826     028D                     	;# 
  9827     028E                     	;# 
  9828     028F                     	;# 
  9829     0290                     	;# 
  9830     0291                     	;# 
  9831     0292                     	;# 
  9832     0292                     	;# 
  9833     0293                     	;# 
  9834     0293                     	;# 
  9835     0294                     	;# 
  9836     0295                     	;# 
  9837     0296                     	;# 
  9838     0297                     	;# 
  9839     0298                     	;# 
  9840     0298                     	;# 
  9841     0299                     	;# 
  9842     0299                     	;# 
  9843     029A                     	;# 
  9844     029B                     	;# 
  9845     029C                     	;# 
  9846     029D                     	;# 
  9847     029F                     	;# 
  9848     030C                     	;# 
  9849     030C                     	;# 
  9850     030D                     	;# 
  9851     030E                     	;# 
  9852     030F                     	;# 
  9853     0310                     	;# 
  9854     0310                     	;# 
  9855     0311                     	;# 
  9856     0312                     	;# 
  9857     0313                     	;# 
  9858     0314                     	;# 
  9859     0314                     	;# 
  9860     0315                     	;# 
  9861     0316                     	;# 
  9862     0317                     	;# 
  9863     0318                     	;# 
  9864     0318                     	;# 
  9865     0319                     	;# 
  9866     031A                     	;# 
  9867     031B                     	;# 
  9868     031C                     	;# 
  9869     031C                     	;# 
  9870     031D                     	;# 
  9871     031E                     	;# 
  9872     031F                     	;# 
  9873     038C                     	;# 
  9874     038C                     	;# 
  9875     038D                     	;# 
  9876     038E                     	;# 
  9877     0390                     	;# 
  9878     0390                     	;# 
  9879     0391                     	;# 
  9880     0392                     	;# 
  9881     048C                     	;# 
  9882     048C                     	;# 
  9883     048D                     	;# 
  9884     048E                     	;# 
  9885     048F                     	;# 
  9886     048F                     	;# 
  9887     0490                     	;# 
  9888     0491                     	;# 
  9889     0492                     	;# 
  9890     0492                     	;# 
  9891     0493                     	;# 
  9892     0494                     	;# 
  9893     0495                     	;# 
  9894     0495                     	;# 
  9895     0496                     	;# 
  9896     0497                     	;# 
  9897     0498                     	;# 
  9898     0499                     	;# 
  9899     049A                     	;# 
  9900     049B                     	;# 
  9901     049C                     	;# 
  9902     049D                     	;# 
  9903     050C                     	;# 
  9904     050C                     	;# 
  9905     050D                     	;# 
  9906     050E                     	;# 
  9907     050F                     	;# 
  9908     050F                     	;# 
  9909     0510                     	;# 
  9910     0511                     	;# 
  9911     0512                     	;# 
  9912     0512                     	;# 
  9913     0513                     	;# 
  9914     0514                     	;# 
  9915     0515                     	;# 
  9916     0515                     	;# 
  9917     0516                     	;# 
  9918     0517                     	;# 
  9919     0518                     	;# 
  9920     0519                     	;# 
  9921     051A                     	;# 
  9922     051B                     	;# 
  9923     051C                     	;# 
  9924     051D                     	;# 
  9925     058C                     	;# 
  9926     058C                     	;# 
  9927     058D                     	;# 
  9928     058E                     	;# 
  9929     058F                     	;# 
  9930     058F                     	;# 
  9931     0590                     	;# 
  9932     0591                     	;# 
  9933     0592                     	;# 
  9934     0593                     	;# 
  9935     059C                     	;# 
  9936     059C                     	;# 
  9937     059D                     	;# 
  9938     059D                     	;# 
  9939     059E                     	;# 
  9940     059F                     	;# 
  9941     060C                     	;# 
  9942     060C                     	;# 
  9943     060D                     	;# 
  9944     060D                     	;# 
  9945     060E                     	;# 
  9946     060F                     	;# 
  9947     0610                     	;# 
  9948     0611                     	;# 
  9949     0612                     	;# 
  9950     0613                     	;# 
  9951     0614                     	;# 
  9952     0616                     	;# 
  9953     0616                     	;# 
  9954     0617                     	;# 
  9955     0617                     	;# 
  9956     0618                     	;# 
  9957     0619                     	;# 
  9958     061A                     	;# 
  9959     061B                     	;# 
  9960     061C                     	;# 
  9961     061D                     	;# 
  9962     061E                     	;# 
  9963     068C                     	;# 
  9964     068D                     	;# 
  9965     068E                     	;# 
  9966     068F                     	;# 
  9967     0690                     	;# 
  9968     0691                     	;# 
  9969     0692                     	;# 
  9970     0693                     	;# 
  9971     0694                     	;# 
  9972     070C                     	;# 
  9973     070D                     	;# 
  9974     070E                     	;# 
  9975     070F                     	;# 
  9976     0710                     	;# 
  9977     0711                     	;# 
  9978     0712                     	;# 
  9979     0713                     	;# 
  9980     0714                     	;# 
  9981     0716                     	;# 
  9982     0717                     	;# 
  9983     0718                     	;# 
  9984     0719                     	;# 
  9985     071A                     	;# 
  9986     071B                     	;# 
  9987     071C                     	;# 
  9988     071D                     	;# 
  9989     071E                     	;# 
  9990     0796                     	;# 
  9991     0797                     	;# 
  9992     0798                     	;# 
  9993     0799                     	;# 
  9994     079A                     	;# 
  9995     079B                     	;# 
  9996     079C                     	;# 
  9997     079D                     	;# 
  9998     080C                     	;# 
  9999     080D                     	;# 
 10000     080E                     	;# 
 10001     080F                     	;# 
 10002     0810                     	;# 
 10003     0811                     	;# 
 10004     0813                     	;# 
 10005     0814                     	;# 
 10006     081A                     	;# 
 10007     081A                     	;# 
 10008     081B                     	;# 
 10009     081C                     	;# 
 10010     081C                     	;# 
 10011     081D                     	;# 
 10012     081E                     	;# 
 10013     081F                     	;# 
 10014     088C                     	;# 
 10015     088D                     	;# 
 10016     088E                     	;# 
 10017     088F                     	;# 
 10018     0890                     	;# 
 10019     0891                     	;# 
 10020     0892                     	;# 
 10021     0893                     	;# 
 10022     0895                     	;# 
 10023     0896                     	;# 
 10024     0897                     	;# 
 10025     0898                     	;# 
 10026     0899                     	;# 
 10027     089A                     	;# 
 10028     089B                     	;# 
 10029     090C                     	;# 
 10030     090E                     	;# 
 10031     090F                     	;# 
 10032     091F                     	;# 
 10033     098F                     	;# 
 10034     098F                     	;# 
 10035     0990                     	;# 
 10036     0991                     	;# 
 10037     0992                     	;# 
 10038     0993                     	;# 
 10039     0994                     	;# 
 10040     0995                     	;# 
 10041     0996                     	;# 
 10042     0997                     	;# 
 10043     0A19                     	;# 
 10044     0A19                     	;# 
 10045     0A1A                     	;# 
 10046     0A1A                     	;# 
 10047     0A1B                     	;# 
 10048     0A1B                     	;# 
 10049     0A1B                     	;# 
 10050     0A1C                     	;# 
 10051     0A1C                     	;# 
 10052     0A1D                     	;# 
 10053     0A1D                     	;# 
 10054     0A1E                     	;# 
 10055     0A1E                     	;# 
 10056     0A1F                     	;# 
 10057     0A1F                     	;# 
 10058     0A1F                     	;# 
 10059     1E0F                     	;# 
 10060     1E10                     	;# 
 10061     1E11                     	;# 
 10062     1E12                     	;# 
 10063     1E13                     	;# 
 10064     1E14                     	;# 
 10065     1E15                     	;# 
 10066     1E16                     	;# 
 10067     1E17                     	;# 
 10068     1E18                     	;# 
 10069     1E19                     	;# 
 10070     1E1A                     	;# 
 10071     1E1B                     	;# 
 10072     1E1C                     	;# 
 10073     1E1D                     	;# 
 10074     1E1E                     	;# 
 10075     1E1F                     	;# 
 10076     1E20                     	;# 
 10077     1E21                     	;# 
 10078     1E22                     	;# 
 10079     1E23                     	;# 
 10080     1E24                     	;# 
 10081     1E25                     	;# 
 10082     1E26                     	;# 
 10083     1E27                     	;# 
 10084     1E28                     	;# 
 10085     1E29                     	;# 
 10086     1E2A                     	;# 
 10087     1E2B                     	;# 
 10088     1E2C                     	;# 
 10089     1E2D                     	;# 
 10090     1E2E                     	;# 
 10091     1E2F                     	;# 
 10092     1E30                     	;# 
 10093     1E31                     	;# 
 10094     1E32                     	;# 
 10095     1E33                     	;# 
 10096     1E34                     	;# 
 10097     1E35                     	;# 
 10098     1E36                     	;# 
 10099     1E37                     	;# 
 10100     1E8F                     	;# 
 10101     1E90                     	;# 
 10102     1E91                     	;# 
 10103     1E92                     	;# 
 10104     1E93                     	;# 
 10105     1E94                     	;# 
 10106     1E95                     	;# 
 10107     1E96                     	;# 
 10108     1E97                     	;# 
 10109     1E9C                     	;# 
 10110     1E9D                     	;# 
 10111     1E9E                     	;# 
 10112     1EA1                     	;# 
 10113     1EA2                     	;# 
 10114     1EA3                     	;# 
 10115     1EA4                     	;# 
 10116     1EA5                     	;# 
 10117     1EA9                     	;# 
 10118     1EAA                     	;# 
 10119     1EAB                     	;# 
 10120     1EAC                     	;# 
 10121     1EB1                     	;# 
 10122     1EB2                     	;# 
 10123     1EB3                     	;# 
 10124     1EB8                     	;# 
 10125     1EB9                     	;# 
 10126     1EBA                     	;# 
 10127     1EBB                     	;# 
 10128     1EBC                     	;# 
 10129     1EBD                     	;# 
 10130     1EBE                     	;# 
 10131     1EC3                     	;# 
 10132     1EC5                     	;# 
 10133     1EC6                     	;# 
 10134     1EC7                     	;# 
 10135     1EC8                     	;# 
 10136     1EC9                     	;# 
 10137     1ECA                     	;# 
 10138     1ECB                     	;# 
 10139     1ECC                     	;# 
 10140     1ECD                     	;# 
 10141     1ECE                     	;# 
 10142     1F10                     	;# 
 10143     1F11                     	;# 
 10144     1F12                     	;# 
 10145     1F13                     	;# 
 10146     1F14                     	;# 
 10147     1F15                     	;# 
 10148     1F16                     	;# 
 10149     1F17                     	;# 
 10150     1F18                     	;# 
 10151     1F19                     	;# 
 10152     1F1A                     	;# 
 10153     1F1B                     	;# 
 10154     1F1C                     	;# 
 10155     1F1D                     	;# 
 10156     1F1E                     	;# 
 10157     1F1F                     	;# 
 10158     1F20                     	;# 
 10159     1F21                     	;# 
 10160     1F22                     	;# 
 10161     1F23                     	;# 
 10162     1F24                     	;# 
 10163     1F25                     	;# 
 10164     1F26                     	;# 
 10165     1F27                     	;# 
 10166     1F38                     	;# 
 10167     1F39                     	;# 
 10168     1F3A                     	;# 
 10169     1F3B                     	;# 
 10170     1F3C                     	;# 
 10171     1F3D                     	;# 
 10172     1F3E                     	;# 
 10173     1F3F                     	;# 
 10174     1F43                     	;# 
 10175     1F44                     	;# 
 10176     1F45                     	;# 
 10177     1F46                     	;# 
 10178     1F47                     	;# 
 10179     1F48                     	;# 
 10180     1F49                     	;# 
 10181     1F4A                     	;# 
 10182     1F4E                     	;# 
 10183     1F4F                     	;# 
 10184     1F50                     	;# 
 10185     1F51                     	;# 
 10186     1F52                     	;# 
 10187     1F53                     	;# 
 10188     1F54                     	;# 
 10189     1F55                     	;# 
 10190     1F65                     	;# 
 10191     1F66                     	;# 
 10192     1F67                     	;# 
 10193     1F68                     	;# 
 10194     1F69                     	;# 
 10195     1F6A                     	;# 
 10196     1F6B                     	;# 
 10197     1FE4                     	;# 
 10198     1FE5                     	;# 
 10199     1FE6                     	;# 
 10200     1FE7                     	;# 
 10201     1FE8                     	;# 
 10202     1FE8                     	;# 
 10203     1FE9                     	;# 
 10204     1FEA                     	;# 
 10205     1FEB                     	;# 
 10206     1FED                     	;# 
 10207     1FEE                     	;# 
 10208     1FEF                     	;# 
 10209                           
 10210 ;; Function _do_I2C_RESET is unused but had its address taken
 10211     0000                     
 10212 ;; Function _do_I2C_IDLE is unused but had its address taken
 10213     0000                     
 10214 ;; Function _do_I2C_SEND_RESTART_READ is unused but had its address taken
 10215     0000                     
 10216 ;; Function _do_I2C_SEND_RESTART_WRITE is unused but had its address taken
 10217     0000                     
 10218 ;; Function _do_I2C_SEND_RESTART is unused but had its address taken
 10219     0000                     
 10220 ;; Function _do_I2C_SEND_STOP is unused but had its address taken
 10221     0000                     
 10222 ;; Function _do_I2C_SEND_ADR_READ is unused but had its address taken
 10223     0000                     
 10224 ;; Function _do_I2C_SEND_ADR_WRITE is unused but had its address taken
 10225     0000                     
 10226 ;; Function _do_I2C_RCEN is unused but had its address taken
 10227     0000                     
 10228 ;; Function _do_I2C_DO_ACK is unused but had its address taken
 10229     0000                     
 10230 ;; Function _do_I2C_DO_NACK_STOP is unused but had its address taken
 10231     0000                     
 10232 ;; Function _do_I2C_DO_NACK_RESTART is unused but had its address taken
 10233     0000                     
 10234 ;; Function _do_I2C_DO_ADDRESS_NACK is unused but had its address taken
 10235     0000                     
 10236 ;; Function _do_I2C_TX is unused but had its address taken
 10237     0000                     
 10238 ;; Function _do_I2C_RX is unused but had its address taken
 10239     0000                     
 10240 ;; Function _do_I2C_TX_EMPTY is unused but had its address taken
 10241     0000                     
 10242 ;; Function _i2c_ISR is unused but had its address taken
 10243     0000                     
 10244 ;; Function _i2c_busCollisionISR is unused but had its address taken
 10245     0000                     
 10246 ;; Function _returnStop is unused but had its address taken
 10247     0000                     
 10248 ;; Function _returnReset is unused but had its address taken
 10249     0000                     
 10250 ;; Function _EUSART2_is_tx_ready is unused but had its address taken
 10251     0000                     
 10252 ;; Function _EUSART1_is_tx_ready is unused but had its address taken
 10253     0000                     
 10254                           	psect	idataBANK1
 10255     0002                     __pidataBANK1:
 10256                           
 10257                           ;initializer for RN487X_GetInputsValues@F12901
 10258     0002  3430               	retlw	48
 10259     0003  3430               	retlw	48
 10260                           
 10261                           	psect	idataBANK3
 10262     10D3                     __pidataBANK3:
 10263                           
 10264                           ;initializer for __hex
 10265     10D3  3430               	retlw	48
 10266     10D4  3431               	retlw	49
 10267     10D5  3432               	retlw	50
 10268     10D6  3433               	retlw	51
 10269     10D7  3434               	retlw	52
 10270     10D8  3435               	retlw	53
 10271     10D9  3436               	retlw	54
 10272     10DA  3437               	retlw	55
 10273     10DB  3438               	retlw	56
 10274     10DC  3439               	retlw	57
 10275     10DD  3441               	retlw	65
 10276     10DE  3442               	retlw	66
 10277     10DF  3443               	retlw	67
 10278     10E0  3444               	retlw	68
 10279     10E1  3445               	retlw	69
 10280     10E2  3446               	retlw	70
 10281     10E3  3400               	retlw	0
 10282                           
 10283                           	psect	stringtext1
 10284     1800                     __pstringtext1:
 10285     1800                     _uart:
 10286     1800  345E               	retlw	low _EUSART1_Read
 10287     1801  3415               	retlw	high _EUSART1_Read
 10288     1802  34E5               	retlw	low _EUSART1_Write
 10289     1803  3414               	retlw	high _EUSART1_Write
 10290     1804  3400               	retlw	0
 10291     1805  3400               	retlw	0
 10292     1806  3490               	retlw	low _EUSART1_is_rx_ready
 10293     1807  341F               	retlw	high _EUSART1_is_rx_ready
 10294     1808  3421               	retlw	low _EUSART1_SetTxInterruptHandler
 10295     1809  341F               	retlw	high _EUSART1_SetTxInterruptHandler
 10296     180A  34CF               	retlw	low _EUSART1_Receive_ISR
 10297     180B  3408               	retlw	high _EUSART1_Receive_ISR
 10298     180C  341B               	retlw	low _EUSART1_SetRxInterruptHandler
 10299     180D  341F               	retlw	high _EUSART1_SetRxInterruptHandler
 10300     180E  34AB               	retlw	low _EUSART1_is_tx_done
 10301     180F  341E               	retlw	high _EUSART1_is_tx_done
 10302     1810  342A               	retlw	low _EUSART1_Transmit_ISR
 10303     1811  3414               	retlw	high _EUSART1_Transmit_ISR
 10304     1812  3486               	retlw	low _EUSART1_Initialize
 10305     1813  3409               	retlw	high _EUSART1_Initialize
 10306     1814  340D               	retlw	low _EUSART2_Read
 10307     1815  3415               	retlw	high _EUSART2_Read
 10308     1816  3496               	retlw	low _EUSART2_Write
 10309     1817  3414               	retlw	high _EUSART2_Write
 10310     1818  3400               	retlw	0
 10311     1819  3400               	retlw	0
 10312     181A  3487               	retlw	low _EUSART2_is_rx_ready
 10313     181B  341F               	retlw	high _EUSART2_is_rx_ready
 10314     181C  343F               	retlw	low _EUSART2_SetTxInterruptHandler
 10315     181D  341F               	retlw	high _EUSART2_SetTxInterruptHandler
 10316     181E  345D               	retlw	low _EUSART2_Receive_ISR
 10317     181F  3408               	retlw	high _EUSART2_Receive_ISR
 10318     1820  3439               	retlw	low _EUSART2_SetRxInterruptHandler
 10319     1821  341F               	retlw	high _EUSART2_SetRxInterruptHandler
 10320     1822  34A7               	retlw	low _EUSART2_is_tx_done
 10321     1823  341E               	retlw	high _EUSART2_is_tx_done
 10322     1824  3408               	retlw	low _EUSART2_Transmit_ISR
 10323     1825  3414               	retlw	high _EUSART2_Transmit_ISR
 10324     1826  34C5               	retlw	low _EUSART2_Initialize
 10325     1827  3409               	retlw	high _EUSART2_Initialize
 10326     1828                     __end_of_uart:
 10327                           
 10328                           	psect	stringtext2
 10329     1828                     __pstringtext2:
 10330     1828                     _i2c1_fsmStateTable:
 10331     1828  34B4               	retlw	low _I2C1_DO_IDLE
 10332     1829  341E               	retlw	high _I2C1_DO_IDLE
 10333     182A  347E               	retlw	low _I2C1_DO_SEND_ADR_READ
 10334     182B  341F               	retlw	high _I2C1_DO_SEND_ADR_READ
 10335     182C  3465               	retlw	low _I2C1_DO_SEND_ADR_WRITE
 10336     182D  341F               	retlw	high _I2C1_DO_SEND_ADR_WRITE
 10337     182E  349D               	retlw	low _I2C1_DO_TX
 10338     182F  340D               	retlw	high _I2C1_DO_TX
 10339     1830  34D1               	retlw	low _I2C1_DO_RX
 10340     1831  340A               	retlw	high _I2C1_DO_RX
 10341     1832  3457               	retlw	low _I2C1_DO_RCEN
 10342     1833  341F               	retlw	high _I2C1_DO_RCEN
 10343     1834  34B2               	retlw	low _I2C1_DO_TX_EMPTY
 10344     1835  3415               	retlw	high _I2C1_DO_TX_EMPTY
 10345     1836  34B9               	retlw	low _I2C1_DO_SEND_RESTART_READ
 10346     1837  341E               	retlw	high _I2C1_DO_SEND_RESTART_READ
 10347     1838  34BE               	retlw	low _I2C1_DO_SEND_RESTART_WRITE
 10348     1839  341E               	retlw	high _I2C1_DO_SEND_RESTART_WRITE
 10349     183A  34C3               	retlw	low _I2C1_DO_SEND_RESTART
 10350     183B  341E               	retlw	high _I2C1_DO_SEND_RESTART
 10351     183C  34C8               	retlw	low _I2C1_DO_SEND_STOP
 10352     183D  341E               	retlw	high _I2C1_DO_SEND_STOP
 10353     183E  34CD               	retlw	low _I2C1_DO_RX_ACK
 10354     183F  341E               	retlw	high _I2C1_DO_RX_ACK
 10355     1840  34D2               	retlw	low _I2C1_DO_RX_NACK_STOP
 10356     1841  341E               	retlw	high _I2C1_DO_RX_NACK_STOP
 10357     1842  34D7               	retlw	low _I2C1_DO_RX_NACK_RESTART
 10358     1843  341E               	retlw	high _I2C1_DO_RX_NACK_RESTART
 10359     1844  34DC               	retlw	low _I2C1_DO_RESET
 10360     1845  341E               	retlw	high _I2C1_DO_RESET
 10361     1846  34BD               	retlw	low _I2C1_DO_ADDRESS_NACK
 10362     1847  3414               	retlw	high _I2C1_DO_ADDRESS_NACK
 10363     1848                     __end_of_i2c1_fsmStateTable:
 10364                           
 10365                           	psect	stringtext3
 10366     1848                     __pstringtext3:
 10367     1848                     _fsmStateTable:
 10368     1848  3400               	retlw	0
 10369     1849  3400               	retlw	0
 10370     184A  3400               	retlw	0
 10371     184B  3400               	retlw	0
 10372     184C  3400               	retlw	0
 10373     184D  3400               	retlw	0
 10374     184E  3400               	retlw	0
 10375     184F  3400               	retlw	0
 10376     1850  3400               	retlw	0
 10377     1851  3400               	retlw	0
 10378     1852  3400               	retlw	0
 10379     1853  3400               	retlw	0
 10380     1854  3400               	retlw	0
 10381     1855  3400               	retlw	0
 10382     1856  3400               	retlw	0
 10383     1857  3400               	retlw	0
 10384     1858  3400               	retlw	0
 10385     1859  3400               	retlw	0
 10386     185A  3400               	retlw	0
 10387     185B  3400               	retlw	0
 10388     185C  3400               	retlw	0
 10389     185D  3400               	retlw	0
 10390     185E  3400               	retlw	0
 10391     185F  3400               	retlw	0
 10392     1860  3400               	retlw	0
 10393     1861  3400               	retlw	0
 10394     1862  3400               	retlw	0
 10395     1863  3400               	retlw	0
 10396     1864  3400               	retlw	0
 10397     1865  3400               	retlw	0
 10398     1866  3400               	retlw	0
 10399     1867  3400               	retlw	0
 10400     1868                     __end_of_fsmStateTable:
 10401                           
 10402                           	psect	stringtext4
 10403     1868                     __pstringtext4:
 10404     1868                     _RN487X:
 10405     1868  3410               	retlw	low _RN487X_Write
 10406     1869  3410               	retlw	high _RN487X_Write
 10407     186A  34A2               	retlw	low _RN487X_Read@rn487x_interface$F1835
 10408     186B  341F               	retlw	high _RN487X_Read@rn487x_interface$F1835
 10409     186C  34AC               	retlw	low _RN487X_is_tx_done
 10410     186D  341F               	retlw	high _RN487X_is_tx_done
 10411     186E  34B6               	retlw	low _RN487X_is_rx_ready
 10412     186F  341F               	retlw	high _RN487X_is_rx_ready
 10413     1870  34EA               	retlw	low _RN487X_IndicateRx
 10414     1871  341F               	retlw	high _RN487X_IndicateRx
 10415     1872  34F5               	retlw	low _RN487X_Reset
 10416     1873  341F               	retlw	high _RN487X_Reset
 10417     1874  341C               	retlw	low _RN487X_SetSystemMode
 10418     1875  3410               	retlw	high _RN487X_SetSystemMode
 10419     1876  346D               	retlw	low _RN487X_Delay
 10420     1877  341F               	retlw	high _RN487X_Delay
 10421     1878  34C9               	retlw	low _RN487X_MessageHandler
 10422     1879  3417               	retlw	high _RN487X_MessageHandler
 10423     187A                     __end_of_RN487X:
 10424                           
 10425                           	psect	stringtext5
 10426     2010                     __pstringtext5:
 10427     2010                     _rn487x_driver_version:
 10428     2010  3400               	retlw	low (STR_1| (0+32768))
 10429     2011  34A0               	retlw	high (STR_1| (0+32768))
 10430     2012                     __end_of_rn487x_driver_version:
 10431                           
 10432                           	psect	stringtext6
 10433     2012                     __pstringtext6:
 10434     2012                     _protocol_version_number:
 10435     2012  3400               	retlw	low (STR_1| (0+32768))
 10436     2013  34A0               	retlw	high (STR_1| (0+32768))
 10437     2014                     __end_of_protocol_version_number:
 10438                           
 10439                           	psect	stringtext7
 10440     1886                     __pstringtext7:
 10441     1886                     RN487X_RebootCmd@reboot:
 10442     1886  3452               	retlw	82
 10443     1887  3465               	retlw	101
 10444     1888  3462               	retlw	98
 10445     1889  346F               	retlw	111
 10446     188A  346F               	retlw	111
 10447     188B  3474               	retlw	116
 10448     188C  3469               	retlw	105
 10449     188D  346E               	retlw	110
 10450     188E  3467               	retlw	103
 10451     188F  340D               	retlw	13
 10452     1890  340A               	retlw	10
 10453     1891                     __end_ofRN487X_RebootCmd@reboot:
 10454                           
 10455                           	psect	stringtext8
 10456     2006                     __pstringtext8:
 10457     2006                     RN487X_EnterDataMode@cmdPrompt:
 10458     2006  3445               	retlw	69
 10459     2007  344E               	retlw	78
 10460     2008  3444               	retlw	68
 10461     2009  340D               	retlw	13
 10462     200A  340A               	retlw	10
 10463     200B                     __end_ofRN487X_EnterDataMode@cmdPrompt:
 10464                           
 10465                           	psect	stringtext9
 10466     200B                     __pstringtext9:
 10467     200B                     RN487X_EnterCmdMode@cmdPrompt:
 10468     200B  3443               	retlw	67
 10469     200C  344D               	retlw	77
 10470     200D  3444               	retlw	68
 10471     200E  343E               	retlw	62
 10472     200F  3420               	retlw	32
 10473     2010                     __end_ofRN487X_EnterCmdMode@cmdPrompt:
 10474                           
 10475                           	psect	nvBANK1
 10476     00EA                     __pnvBANK1:
 10477     00EA                     _IOCAF6_InterruptHandler:
 10478     00EA                     	ds	2
 10479     00EC                     _EUSART2_TxDefaultInterruptHandler:
 10480     00EC                     	ds	2
 10481                           
 10482                           	psect	nvBANK2
 10483     0154                     __pnvBANK2:
 10484     0154                     _EUSART1_ErrorHandler:
 10485     0154                     	ds	2
 10486     0156                     _EUSART1_OverrunErrorHandler:
 10487     0156                     	ds	2
 10488     0158                     _EUSART1_FramingErrorHandler:
 10489     0158                     	ds	2
 10490     015A                     _EUSART1_RxDefaultInterruptHandler:
 10491     015A                     	ds	2
 10492     015C                     _EUSART1_TxDefaultInterruptHandler:
 10493     015C                     	ds	2
 10494     015E                     _EUSART2_ErrorHandler:
 10495     015E                     	ds	2
 10496     0160                     _EUSART2_OverrunErrorHandler:
 10497     0160                     	ds	2
 10498     0162                     _EUSART2_FramingErrorHandler:
 10499     0162                     	ds	2
 10500     0164                     _EUSART2_RxDefaultInterruptHandler:
 10501     0164                     	ds	2
 10502     0014                     _TRISC	set	20
 10503     0013                     _TRISB	set	19
 10504     0012                     _TRISA	set	18
 10505     0016                     _TRISE	set	22
 10506     001A                     _LATC	set	26
 10507     0019                     _LATB	set	25
 10508     0018                     _LATA	set	24
 10509     001C                     _LATE	set	28
 10510     0012                     _TRISAbits	set	18
 10511     001A                     _LATCbits	set	26
 10512     000B                     _INTCONbits	set	11
 10513     0018                     _LATAbits	set	24
 10514     000C                     _PORTAbits	set	12
 10515     0119                     _RC1REG	set	281
 10516     011D                     _RC1STAbits	set	285
 10517     011A                     _TX1REG	set	282
 10518     011E                     _TX1STAbits	set	286
 10519     011C                     _SP1BRGH	set	284
 10520     011B                     _SP1BRGL	set	283
 10521     011E                     _TX1STA	set	286
 10522     011D                     _RC1STA	set	285
 10523     011F                     _BAUD1CON	set	287
 10524     018F                     _SSP1STATbits	set	399
 10525     018E                     _SSP1MSK	set	398
 10526     018C                     _SSP1BUF	set	396
 10527     0191                     _SSP1CON2bits	set	401
 10528     018D                     _SSP1ADD	set	397
 10529     0191                     _SSP1CON2	set	401
 10530     0190                     _SSP1CON1	set	400
 10531     018F                     _SSP1STAT	set	399
 10532     0190                     _SSP1CON1bits	set	400
 10533     059E                     _T0CON0bits	set	1438
 10534     059E                     _T0CON0	set	1438
 10535     059C                     _TMR0L	set	1436
 10536     059D                     _TMR0H	set	1437
 10537     059F                     _T0CON1	set	1439
 10538     070F                     _PIR3bits	set	1807
 10539     070C                     _PIR0bits	set	1804
 10540     0716                     _PIE0bits	set	1814
 10541     0719                     _PIE3bits	set	1817
 10542     079D                     _PMD7	set	1949
 10543     079C                     _PMD6	set	1948
 10544     079B                     _PMD5	set	1947
 10545     079A                     _PMD4	set	1946
 10546     0799                     _PMD3	set	1945
 10547     0798                     _PMD2	set	1944
 10548     0797                     _PMD1	set	1943
 10549     0796                     _PMD0	set	1942
 10550     0892                     _OSCTUNE	set	2194
 10551     0890                     _OSCSTAT	set	2192
 10552     0893                     _OSCFRQ	set	2195
 10553     0891                     _OSCEN	set	2193
 10554     088F                     _OSCCON3	set	2191
 10555     088D                     _OSCCON1	set	2189
 10556     0A19                     _RC2REG	set	2585
 10557     0A1D                     _RC2STAbits	set	2589
 10558     0A1A                     _TX2REG	set	2586
 10559     0A1E                     _TX2STAbits	set	2590
 10560     0A1C                     _SP2BRGH	set	2588
 10561     0A1B                     _SP2BRGL	set	2587
 10562     0A1E                     _TX2STA	set	2590
 10563     0A1D                     _RC2STA	set	2589
 10564     0A1F                     _BAUD2CON	set	2591
 10565     1ECB                     _RX1DTPPS	set	7883
 10566     1EC6                     _SSP1DATPPS	set	7878
 10567     1ECD                     _RX2DTPPS	set	7885
 10568     1EC5                     _SSP1CLKPPS	set	7877
 10569     1F1C                     _RB4PPS	set	7964
 10570     1F24                     _RC4PPS	set	7972
 10571     1F1A                     _RB2PPS	set	7962
 10572     1F19                     _RB1PPS	set	7961
 10573     1F3D                     _IOCAPbits	set	7997
 10574     1F3E                     _IOCANbits	set	7998
 10575     1F3F                     _IOCAFbits	set	7999
 10576     1F52                     _INLVLC	set	8018
 10577     1F47                     _INLVLB	set	8007
 10578     1F3C                     _INLVLA	set	7996
 10579     1F51                     _SLRCONC	set	8017
 10580     1F46                     _SLRCONB	set	8006
 10581     1F3B                     _SLRCONA	set	7995
 10582     1F50                     _ODCONC	set	8016
 10583     1F45                     _ODCONB	set	8005
 10584     1F3A                     _ODCONA	set	7994
 10585     1F66                     _ODCONE	set	8038
 10586     1F4F                     _WPUC	set	8015
 10587     1F39                     _WPUA	set	7993
 10588     1F44                     _WPUB	set	8004
 10589     1F65                     _WPUE	set	8037
 10590     1F38                     _ANSELA	set	7992
 10591     1F43                     _ANSELB	set	8003
 10592     1F4E                     _ANSELC	set	8014
 10593                           
 10594                           	psect	stringtext10
 10595     187A                     __pstringtext10:
 10596     187A                     STR_4:
 10597     187A  3453               	retlw	83	;'S'
 10598     187B  3454               	retlw	84	;'T'
 10599     187C  3452               	retlw	82	;'R'
 10600     187D  3445               	retlw	69	;'E'
 10601     187E  3441               	retlw	65	;'A'
 10602     187F  344D               	retlw	77	;'M'
 10603     1880  345F               	retlw	95	;'_'
 10604     1881  344F               	retlw	79	;'O'
 10605     1882  3450               	retlw	80	;'P'
 10606     1883  3445               	retlw	69	;'E'
 10607     1884  344E               	retlw	78	;'N'
 10608     1885  3400               	retlw	0
 10609                           
 10610                           	psect	stringtext11
 10611     1891                     __pstringtext11:
 10612     1891                     STR_2:
 10613     1891  3444               	retlw	68	;'D'
 10614     1892  3449               	retlw	73	;'I'
 10615     1893  3453               	retlw	83	;'S'
 10616     1894  3443               	retlw	67	;'C'
 10617     1895  344F               	retlw	79	;'O'
 10618     1896  344E               	retlw	78	;'N'
 10619     1897  344E               	retlw	78	;'N'
 10620     1898  3445               	retlw	69	;'E'
 10621     1899  3443               	retlw	67	;'C'
 10622     189A  3454               	retlw	84	;'T'
 10623     189B  3400               	retlw	0
 10624                           
 10625                           	psect	stringtext12
 10626     2000                     __pstringtext12:
 10627     2000                     STR_1:
 10628     2000  3431               	retlw	49	;'1'
 10629     2001  342E               	retlw	46	;'.'
 10630     2002  3431               	retlw	49	;'1'
 10631     2003  342E               	retlw	46	;'.'
 10632     2004  3430               	retlw	48	;'0'
 10633     2005  3400               	retlw	0
 10634                           
 10635                           	psect	stringtext13
 10636     0000                     __pstringtext13:
 10637     2000                     
 10638                           	psect	cinit
 10639     0057                     start_initialization:	
 10640                           ; #config settings
 10641                           
 10642     0057                     __initialization:
 10643                           
 10644                           ; Initialize objects allocated to BANK1
 10645     0057  0141               	movlb	1	; select bank1
 10646     0058  3180  2002  3180   	fcall	__pidataBANK1	;fetch initializer
 10647     005B  00EE               	movwf	__pdataBANK1& (0+127)
 10648     005C  3180  2003  3180   	fcall	__pidataBANK1+1	;fetch initializer
 10649     005F  00EF               	movwf	(__pdataBANK1+1)& (0+127)
 10650                           
 10651                           ; Initialize objects allocated to BANK3
 10652     0060  30D3               	movlw	low __pidataBANK3
 10653     0061  0084               	movwf	4
 10654     0062  3090               	movlw	(high __pidataBANK3)| (0+128)
 10655     0063  0085               	movwf	5
 10656     0064  30A0               	movlw	low __pdataBANK3
 10657     0065  0086               	movwf	6
 10658     0066  3001               	movlw	high __pdataBANK3
 10659     0067  0087               	movwf	7
 10660     0068  3011               	movlw	17
 10661     0069  319F  2751  3180   	fcall	init_ram
 10662                           
 10663                           ; Clear objects allocated to COMMON
 10664     006C  01FC               	clrf	__pbssCOMMON& (0+127)
 10665                           
 10666                           ; Clear objects allocated to BANK0
 10667     006D  304D               	movlw	low __pbssBANK0
 10668     006E  0084               	movwf	4
 10669     006F  3000               	movlw	high __pbssBANK0
 10670     0070  0085               	movwf	5
 10671     0071  3023               	movlw	35
 10672     0072  319F  274B  3180   	fcall	clear_ram0
 10673                           
 10674                           ; Clear objects allocated to BANK1
 10675     0075  30A0               	movlw	low __pbssBANK1
 10676     0076  0084               	movwf	4
 10677     0077  3000               	movlw	high __pbssBANK1
 10678     0078  0085               	movwf	5
 10679     0079  304A               	movlw	74
 10680     007A  319F  274B  3180   	fcall	clear_ram0
 10681                           
 10682                           ; Clear objects allocated to BANK2
 10683     007D  3020               	movlw	low __pbssBANK2
 10684     007E  0084               	movwf	4
 10685     007F  3001               	movlw	high __pbssBANK2
 10686     0080  0085               	movwf	5
 10687     0081  3034               	movlw	52
 10688     0082  319F  274B  3180   	fcall	clear_ram0
 10689                           
 10690                           ; Clear objects allocated to BANK4
 10691     0085  3020               	movlw	low __pbssBANK4
 10692     0086  0084               	movwf	4
 10693     0087  3002               	movlw	high __pbssBANK4
 10694     0088  0085               	movwf	5
 10695     0089  3040               	movlw	64
 10696     008A  319F  274B  3180   	fcall	clear_ram0
 10697                           
 10698                           ; Clear objects allocated to BANK5
 10699     008D  30A0               	movlw	low __pbssBANK5
 10700     008E  0084               	movwf	4
 10701     008F  3002               	movlw	high __pbssBANK5
 10702     0090  0085               	movwf	5
 10703     0091  3050               	movlw	80
 10704     0092  319F  274B  3180   	fcall	clear_ram0
 10705                           
 10706                           ; Clear objects allocated to BANK6
 10707     0095  3020               	movlw	low __pbssBANK6
 10708     0096  0084               	movwf	4
 10709     0097  3003               	movlw	high __pbssBANK6
 10710     0098  0085               	movwf	5
 10711     0099  3050               	movlw	80
 10712     009A  319F  274B  3180   	fcall	clear_ram0
 10713                           
 10714                           ; Clear objects allocated to BANK7
 10715     009D  30A0               	movlw	low __pbssBANK7
 10716     009E  0084               	movwf	4
 10717     009F  3003               	movlw	high __pbssBANK7
 10718     00A0  0085               	movwf	5
 10719     00A1  3050               	movlw	80
 10720     00A2  319F  274B  3180   	fcall	clear_ram0
 10721     00A5                     end_of_initialization:	
 10722                           ;End of C runtime variable initialization code
 10723                           
 10724     00A5                     __end_of__initialization:
 10725     00A5  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 10726     00A6  0140               	movlb	0
 10727     00A7  3185  2D95         	ljmp	_main	;jump to C main() function
 10728                           
 10729                           	psect	bssCOMMON
 10730     007C                     __pbssCOMMON:
 10731     007C                     _eusart2RxHead:
 10732     007C                     	ds	1
 10733                           
 10734                           	psect	bssBANK0
 10735     004D                     __pbssBANK0:
 10736     004D                     _timer0ReloadVal16bit:
 10737     004D                     	ds	2
 10738     004F                     _bitMap:
 10739     004F                     	ds	2
 10740     0051                     _serialIndex:
 10741     0051                     	ds	1
 10742     0052                     _eusart1RxCount:
 10743     0052                     	ds	1
 10744     0053                     _eusart1RxTail:
 10745     0053                     	ds	1
 10746     0054                     _eusart1RxHead:
 10747     0054                     	ds	1
 10748     0055                     _eusart1TxBufferRemaining:
 10749     0055                     	ds	1
 10750     0056                     _eusart1TxTail:
 10751     0056                     	ds	1
 10752     0057                     _eusart1TxHead:
 10753     0057                     	ds	1
 10754     0058                     _eusart2RxCount:
 10755     0058                     	ds	1
 10756     0059                     _eusart2RxTail:
 10757     0059                     	ds	1
 10758     005A                     _eusart2TxBufferRemaining:
 10759     005A                     	ds	1
 10760     005B                     _eusart2TxTail:
 10761     005B                     	ds	1
 10762     005C                     _eusart2TxHead:
 10763     005C                     	ds	1
 10764     005D                     RN487X_FilterData@asyncBuffering:
 10765     005D                     	ds	1
 10766     005E                     _dataReady:
 10767     005E                     	ds	1
 10768     005F                     _peek:
 10769     005F                     	ds	1
 10770     0060                     _pHead:
 10771     0060                     	ds	1
 10772     0061                     _asyncBufferSize:
 10773     0061                     	ds	1
 10774     0062                     _asyncBuffer:
 10775     0062                     	ds	1
 10776     0063                     _connected:
 10777     0063                     	ds	1
 10778     0064                     _cinco:
 10779     0064                     	ds	1
 10780     0065                     _cuatro:
 10781     0065                     	ds	1
 10782     0066                     _tres:
 10783     0066                     	ds	1
 10784     0067                     _dos:
 10785     0067                     	ds	1
 10786     0068                     _uno:
 10787     0068                     	ds	1
 10788     0069                     _zero:
 10789     0069                     	ds	1
 10790     006A                     _number:
 10791     006A                     	ds	1
 10792     006B                     LIGHTBLUE_ParseIncomingPacket@packetID:
 10793     006B                     	ds	1
 10794     006C                     LIGHTBLUE_ParseIncomingPacket@length:
 10795     006C                     	ds	1
 10796     006D                     LIGHTBLUE_ParseIncomingPacket@parserState:
 10797     006D                     	ds	1
 10798     006E                     _sequenceNumber:
 10799     006E                     	ds	1
 10800     006F                     __deviceAddress:
 10801     006F                     	ds	1
 10802                           
 10803                           	psect	bssBANK1
 10804     00A0                     __pbssBANK1:
 10805     00A0                     _I2C1_Status:
 10806     00A0                     	ds	30
 10807     00BE                     _eusart1RxStatusBuffer:
 10808     00BE                     	ds	8
 10809     00C6                     _eusart2RxStatusBuffer:
 10810     00C6                     	ds	8
 10811     00CE                     _eusart2RxBuffer:
 10812     00CE                     	ds	8
 10813     00D6                     _eusart2TxBuffer:
 10814     00D6                     	ds	8
 10815     00DE                     _manufactureId:
 10816     00DE                     	ds	2
 10817     00E0                     _i2c1_driver_i2cISR:
 10818     00E0                     	ds	2
 10819     00E2                     _i2c1_driver_busCollisionISR:
 10820     00E2                     	ds	2
 10821     00E4                     LIGHTBLUE_ParseIncomingPacket@data:
 10822     00E4                     	ds	2
 10823     00E6                     _eusart1RxLastError:
 10824     00E6                     	ds	1
 10825     00E7                     _eusart2RxLastError:
 10826     00E7                     	ds	1
 10827     00E8                     _siete:
 10828     00E8                     	ds	1
 10829     00E9                     _seis:
 10830     00E9                     	ds	1
 10831                           
 10832                           	psect	dataBANK1
 10833     00EE                     __pdataBANK1:
 10834     00EE                     RN487X_GetInputsValues@F12901:
 10835     00EE                     	ds	2
 10836                           
 10837                           	psect	bssBANK2
 10838     0120                     __pbssBANK2:
 10839     0120                     _i2c_status:
 10840     0120                     	ds	36
 10841     0144                     _eusart1RxBuffer:
 10842     0144                     	ds	8
 10843     014C                     _eusart1TxBuffer:
 10844     014C                     	ds	8
 10845                           
 10846                           	psect	dataBANK3
 10847     01A0                     __pdataBANK3:
 10848     01A0                     __hex:
 10849     01A0                     	ds	17
 10850                           
 10851                           	psect	bssBANK4
 10852     0220                     __pbssBANK4:
 10853     0220                     _cmdBuf:
 10854     0220                     	ds	64
 10855                           
 10856                           	psect	bssBANK5
 10857     02A0                     __pbssBANK5:
 10858     02A0                     _lightBlueSerial:
 10859     02A0                     	ds	80
 10860                           
 10861                           	psect	bssBANK6
 10862     0320                     __pbssBANK6:
 10863     0320                     _statusBuffer:
 10864     0320                     	ds	80
 10865                           
 10866                           	psect	bssBANK7
 10867     03A0                     __pbssBANK7:
 10868     03A0                     _statusBuffer@main$F4234:
 10869     03A0                     	ds	80
 10870                           
 10871                           	psect	inittext
 10872     1F51                     init_ram:
 10873     1F51  00FE               	movwf	btemp
 10874     1F52                     initloop:
 10875     1F52  0012               	moviw fsr0++
 10876     1F53  001E               	movwi fsr1++
 10877     1F54  0BFE               	decfsz	btemp,f
 10878     1F55  2F52               	goto	initloop
 10879     1F56  3400               	retlw	0
 10880                           
 10881                           	psect	clrtext
 10882     1F4B                     clear_ram0:	
 10883                           ;	Called with FSR0 containing the base address, and
 10884                           ;	WREG with the size to clear
 10885                           
 10886     1F4B  0064               	clrwdt	;clear the watchdog before getting into this loop
 10887     1F4C                     clrloop0:
 10888     1F4C  0180               	clrf	0	;clear RAM location pointed to by FSR
 10889     1F4D  3101               	addfsr 0,1
 10890     1F4E  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
 10891     1F4F  2F4C               	goto	clrloop0	;have we reached the end yet?
 10892     1F50  3400               	retlw	0	;all done for this memory range, return
 10893                           
 10894                           	psect	cstackBANK2
 10895     0166                     __pcstackBANK2:
 10896     0166                     _main$5433:
 10897                           
 10898                           ; 1 bytes @ 0x0
 10899     0166                     	ds	1
 10900                           
 10901                           	psect	cstackCOMMON
 10902     0070                     __pcstackCOMMON:
 10903     0070                     ?_BMA253_NewAccelDataRdyY:
 10904     0070                     ?_BMA253_NewAccelDataRdyZ:	
 10905                           ; 1 bytes @ 0x0
 10906                           
 10907     0070                     ?_TMAG5273_GetXValue:	
 10908                           ; 1 bytes @ 0x0
 10909                           
 10910     0070                     ?_TMAG5273_GetTemperatureValue:	
 10911                           ; 1 bytes @ 0x0
 10912                           
 10913     0070                     ?_LIGHTBLUE_GetButtonValue:	
 10914                           ; 1 bytes @ 0x0
 10915                           
 10916     0070                     ?_LIGHTBLUE_GetDataLedValue:	
 10917                           ; 1 bytes @ 0x0
 10918                           
 10919     0070                     ?_LIGHTBLUE_GetErrorLedValue:	
 10920                           ; 1 bytes @ 0x0
 10921                           
 10922     0070                     ?_LIGHTBLUE_UpdateErrorLed:	
 10923                           ; 1 bytes @ 0x0
 10924                           
 10925     0070                     ?_RN487X_EnterCmdMode:	
 10926                           ; 1 bytes @ 0x0
 10927                           
 10928     0070                     ?_RN487X_EnterDataMode:	
 10929                           ; 1 bytes @ 0x0
 10930                           
 10931     0070                     ?_EUSART1_Read:	
 10932                           ; 1 bytes @ 0x0
 10933                           
 10934     0070                     ?_EUSART1_is_rx_ready:	
 10935                           ; 1 bytes @ 0x0
 10936                           
 10937     0070                     ?_EUSART1_Receive_ISR:	
 10938                           ; 1 bytes @ 0x0
 10939                           
 10940     0070                     ?_EUSART1_is_tx_done:	
 10941                           ; 1 bytes @ 0x0
 10942                           
 10943     0070                     ?_EUSART1_Transmit_ISR:	
 10944                           ; 1 bytes @ 0x0
 10945                           
 10946     0070                     ??_EUSART1_Transmit_ISR:	
 10947                           ; 1 bytes @ 0x0
 10948                           
 10949     0070                     ?_EUSART1_Initialize:	
 10950                           ; 1 bytes @ 0x0
 10951                           
 10952     0070                     ?_EUSART2_Read:	
 10953                           ; 1 bytes @ 0x0
 10954                           
 10955     0070                     ?_EUSART2_is_rx_ready:	
 10956                           ; 1 bytes @ 0x0
 10957                           
 10958     0070                     ?_EUSART2_Receive_ISR:	
 10959                           ; 1 bytes @ 0x0
 10960                           
 10961     0070                     ?_EUSART2_is_tx_done:	
 10962                           ; 1 bytes @ 0x0
 10963                           
 10964     0070                     ?_EUSART2_Transmit_ISR:	
 10965                           ; 1 bytes @ 0x0
 10966                           
 10967     0070                     ??_EUSART2_Transmit_ISR:	
 10968                           ; 1 bytes @ 0x0
 10969                           
 10970     0070                     ?_EUSART2_Initialize:	
 10971                           ; 1 bytes @ 0x0
 10972                           
 10973     0070                     ?_I2C1_Open:	
 10974                           ; 1 bytes @ 0x0
 10975                           
 10976     0070                     ?_I2C1_MasterWrite:	
 10977                           ; 1 bytes @ 0x0
 10978                           
 10979     0070                     ?_I2C1_Close:	
 10980                           ; 1 bytes @ 0x0
 10981                           
 10982     0070                     ?_isConnected:	
 10983                           ; 1 bytes @ 0x0
 10984                           
 10985     0070                     ?_setMagneticChannel:	
 10986                           ; 1 bytes @ 0x0
 10987                           
 10988     0070                     ?_setTemperatureEn:	
 10989                           ; 1 bytes @ 0x0
 10990                           
 10991     0070                     ?_setOperatingMode:	
 10992                           ; 1 bytes @ 0x0
 10993                           
 10994     0070                     ?_setXYAxisRange:	
 10995                           ; 1 bytes @ 0x0
 10996                           
 10997     0070                     ?_setZAxisRange:	
 10998                           ; 1 bytes @ 0x0
 10999                           
 11000     0070                     ?_getError:	
 11001                           ; 1 bytes @ 0x0
 11002                           
 11003     0070                     ?_getLowPower:	
 11004                           ; 1 bytes @ 0x0
 11005                           
 11006     0070                     ?_getOperatingMode:	
 11007                           ; 1 bytes @ 0x0
 11008                           
 11009     0070                     ?_getMagneticChannel:	
 11010                           ; 1 bytes @ 0x0
 11011                           
 11012     0070                     ?_getTemperatureEN:	
 11013                           ; 1 bytes @ 0x0
 11014                           
 11015     0070                     ?_getAngleEn:	
 11016                           ; 1 bytes @ 0x0
 11017                           
 11018     0070                     ?_RN487X_IsConnected:	
 11019                           ; 1 bytes @ 0x0
 11020                           
 11021     0070                     ?_RN487X_Read:	
 11022                           ; 1 bytes @ 0x0
 11023                           
 11024     0070                     ?_RN487X_DataReady:	
 11025                           ; 1 bytes @ 0x0
 11026                           
 11027     0070                     ?_RN487X_Read@rn487x_interface$F1836:	
 11028                           ; 1 bytes @ 0x0
 11029                           
 11030     0070                     ?_RN487X_is_tx_done:	
 11031                           ; 1 bytes @ 0x0
 11032                           
 11033     0070                     ?_RN487X_is_rx_ready:	
 11034                           ; 1 bytes @ 0x0
 11035                           
 11036     0070                     ?_RN487X_FilterData:	
 11037                           ; 1 bytes @ 0x0
 11038                           
 11039     0070                     ?_EUSART2_DefaultFramingErrorHandler:	
 11040                           ; 1 bytes @ 0x0
 11041                           
 11042     0070                     ??_EUSART2_DefaultFramingErrorHandler:	
 11043                           ; 1 bytes @ 0x0
 11044                           
 11045     0070                     ?_EUSART2_DefaultOverrunErrorHandler:	
 11046                           ; 1 bytes @ 0x0
 11047                           
 11048     0070                     ??_EUSART2_DefaultOverrunErrorHandler:	
 11049                           ; 1 bytes @ 0x0
 11050                           
 11051     0070                     ?_EUSART2_DefaultErrorHandler:	
 11052                           ; 1 bytes @ 0x0
 11053                           
 11054     0070                     ?_EUSART2_RxDataHandler:	
 11055                           ; 1 bytes @ 0x0
 11056                           
 11057     0070                     ??_EUSART2_RxDataHandler:	
 11058                           ; 1 bytes @ 0x0
 11059                           
 11060     0070                     ?_EUSART1_DefaultFramingErrorHandler:	
 11061                           ; 1 bytes @ 0x0
 11062                           
 11063     0070                     ??_EUSART1_DefaultFramingErrorHandler:	
 11064                           ; 1 bytes @ 0x0
 11065                           
 11066     0070                     ?_EUSART1_DefaultOverrunErrorHandler:	
 11067                           ; 1 bytes @ 0x0
 11068                           
 11069     0070                     ??_EUSART1_DefaultOverrunErrorHandler:	
 11070                           ; 1 bytes @ 0x0
 11071                           
 11072     0070                     ?_EUSART1_DefaultErrorHandler:	
 11073                           ; 1 bytes @ 0x0
 11074                           
 11075     0070                     ?_EUSART1_RxDataHandler:	
 11076                           ; 1 bytes @ 0x0
 11077                           
 11078     0070                     ??_EUSART1_RxDataHandler:	
 11079                           ; 1 bytes @ 0x0
 11080                           
 11081     0070                     ?_PIN_MANAGER_IOC:	
 11082                           ; 1 bytes @ 0x0
 11083                           
 11084     0070                     ??_PIN_MANAGER_IOC:	
 11085                           ; 1 bytes @ 0x0
 11086                           
 11087     0070                     ?_PMD_Initialize:	
 11088                           ; 1 bytes @ 0x0
 11089                           
 11090     0070                     ?_I2C1_Initialize:	
 11091                           ; 1 bytes @ 0x0
 11092                           
 11093     0070                     ?_PIN_MANAGER_Initialize:	
 11094                           ; 1 bytes @ 0x0
 11095                           
 11096     0070                     ?_OSCILLATOR_Initialize:	
 11097                           ; 1 bytes @ 0x0
 11098                           
 11099     0070                     ?_TMR0_Initialize:	
 11100                           ; 1 bytes @ 0x0
 11101                           
 11102     0070                     ?_IOCAF6_DefaultInterruptHandler:	
 11103                           ; 1 bytes @ 0x0
 11104                           
 11105     0070                     ??_IOCAF6_DefaultInterruptHandler:	
 11106                           ; 1 bytes @ 0x0
 11107                           
 11108     0070                     ?_IOCAF6_ISR:	
 11109                           ; 1 bytes @ 0x0
 11110                           
 11111     0070                     ??_IOCAF6_ISR:	
 11112                           ; 1 bytes @ 0x0
 11113                           
 11114     0070                     ?_I2C1_DO_IDLE:	
 11115                           ; 1 bytes @ 0x0
 11116                           
 11117     0070                     ?_I2C1_DO_SEND_ADR_READ:	
 11118                           ; 1 bytes @ 0x0
 11119                           
 11120     0070                     ?_I2C1_DO_SEND_ADR_WRITE:	
 11121                           ; 1 bytes @ 0x0
 11122                           
 11123     0070                     ?_I2C1_DO_TX:	
 11124                           ; 1 bytes @ 0x0
 11125                           
 11126     0070                     ?_I2C1_DO_RX:	
 11127                           ; 1 bytes @ 0x0
 11128                           
 11129     0070                     ?_I2C1_DO_RCEN:	
 11130                           ; 1 bytes @ 0x0
 11131                           
 11132     0070                     ?_I2C1_DO_TX_EMPTY:	
 11133                           ; 1 bytes @ 0x0
 11134                           
 11135     0070                     ?_I2C1_DO_SEND_RESTART_READ:	
 11136                           ; 1 bytes @ 0x0
 11137                           
 11138     0070                     ?_I2C1_DO_SEND_RESTART_WRITE:	
 11139                           ; 1 bytes @ 0x0
 11140                           
 11141     0070                     ?_I2C1_DO_SEND_RESTART:	
 11142                           ; 1 bytes @ 0x0
 11143                           
 11144     0070                     ?_I2C1_DO_SEND_STOP:	
 11145                           ; 1 bytes @ 0x0
 11146                           
 11147     0070                     ?_I2C1_DO_RX_ACK:	
 11148                           ; 1 bytes @ 0x0
 11149                           
 11150     0070                     ?_I2C1_DO_RX_NACK_STOP:	
 11151                           ; 1 bytes @ 0x0
 11152                           
 11153     0070                     ?_I2C1_DO_RX_NACK_RESTART:	
 11154                           ; 1 bytes @ 0x0
 11155                           
 11156     0070                     ?_I2C1_DO_RESET:	
 11157                           ; 1 bytes @ 0x0
 11158                           
 11159     0070                     ?_I2C1_DO_ADDRESS_NACK:	
 11160                           ; 1 bytes @ 0x0
 11161                           
 11162     0070                     ?_I2C1_MasterClearIrq:	
 11163                           ; 1 bytes @ 0x0
 11164                           
 11165     0070                     ?_I2C1_MasterOpen:	
 11166                           ; 1 bytes @ 0x0
 11167                           
 11168     0070                     ?_I2C1_MasterDisableIrq:	
 11169                           ; 1 bytes @ 0x0
 11170                           
 11171     0070                     ?_I2C1_MasterClose:	
 11172                           ; 1 bytes @ 0x0
 11173                           
 11174     0070                     ?_I2C1_MasterStart:	
 11175                           ; 1 bytes @ 0x0
 11176                           
 11177     0070                     ?_I2C1_Poller:	
 11178                           ; 1 bytes @ 0x0
 11179                           
 11180     0070                     ?_I2C1_MasterWaitForEvent:	
 11181                           ; 1 bytes @ 0x0
 11182                           
 11183     0070                     ?_I2C1_MasterFsm:	
 11184                           ; 1 bytes @ 0x0
 11185                           
 11186     0070                     ?_I2C1_MasterIsNack:	
 11187                           ; 1 bytes @ 0x0
 11188                           
 11189     0070                     ?_I2C1_MasterSendTxData:	
 11190                           ; 1 bytes @ 0x0
 11191                           
 11192     0070                     ?_I2C1_MasterGetRxData:	
 11193                           ; 1 bytes @ 0x0
 11194                           
 11195     0070                     ?_I2C1_MasterSendAck:	
 11196                           ; 1 bytes @ 0x0
 11197                           
 11198     0070                     ?_I2C1_MasterStartRx:	
 11199                           ; 1 bytes @ 0x0
 11200                           
 11201     0070                     ?_I2C1_MasterSetIrq:	
 11202                           ; 1 bytes @ 0x0
 11203                           
 11204     0070                     ?_I2C1_MasterEnableRestart:	
 11205                           ; 1 bytes @ 0x0
 11206                           
 11207     0070                     ?_I2C1_MasterStop:	
 11208                           ; 1 bytes @ 0x0
 11209                           
 11210     0070                     ?_I2C1_MasterSendNack:	
 11211                           ; 1 bytes @ 0x0
 11212                           
 11213     0070                     ?_BMA253_GetAccelDataY:	
 11214                           ; 1 bytes @ 0x0
 11215                           
 11216     0070                     ?_BMA253_GetAccelDataZ:	
 11217                           ; 1 bytes @ 0x0
 11218                           
 11219     0070                     ?_BMA253_GetAccelDataXYZ:	
 11220                           ; 1 bytes @ 0x0
 11221                           
 11222     0070                     ?_LIGHTBLUE_Initialize:	
 11223                           ; 1 bytes @ 0x0
 11224                           
 11225     0070                     ?_LIGHTBLUE_TemperatureSensor:	
 11226                           ; 1 bytes @ 0x0
 11227                           
 11228     0070                     ?_LIGHTBLUE_AccelSensor:	
 11229                           ; 1 bytes @ 0x0
 11230                           
 11231     0070                     ?_LIGHTBLUE_PushButton:	
 11232                           ; 1 bytes @ 0x0
 11233                           
 11234     0070                     ?_LIGHTBLUE_LedState:	
 11235                           ; 1 bytes @ 0x0
 11236                           
 11237     0070                     ?_LIGHTBLUE_SendProtocolVersion:	
 11238                           ; 1 bytes @ 0x0
 11239                           
 11240     0070                     ?_LIGHTBLUE_SendSerialData:	
 11241                           ; 1 bytes @ 0x0
 11242                           
 11243     0070                     ?_LIGHTBLUE_ParseIncomingPacket:	
 11244                           ; 1 bytes @ 0x0
 11245                           
 11246     0070                     ?_LIGHTBLUE_SetErrorLedValue:	
 11247                           ; 1 bytes @ 0x0
 11248                           
 11249     0070                     ?_begin:	
 11250                           ; 1 bytes @ 0x0
 11251                           
 11252     0070                     ?_readRegister:	
 11253                           ; 1 bytes @ 0x0
 11254                           
 11255     0070                     ?_getDeviceStatus:	
 11256                           ; 1 bytes @ 0x0
 11257                           
 11258     0070                     ?_rn487x_PrintMessageStart:	
 11259                           ; 1 bytes @ 0x0
 11260                           
 11261     0070                     ?_rn487x_PrintMessageEnd:	
 11262                           ; 1 bytes @ 0x0
 11263                           
 11264     0070                     ?_rn487x_PrintIndicatorCharacters:	
 11265                           ; 1 bytes @ 0x0
 11266                           
 11267     0070                     ?_rn487x_PrintMessage:	
 11268                           ; 1 bytes @ 0x0
 11269                           
 11270     0070                     ?_RN487X_Init:	
 11271                           ; 1 bytes @ 0x0
 11272                           
 11273     0070                     ?_RN487X_ReadDefaultResponse:	
 11274                           ; 1 bytes @ 0x0
 11275                           
 11276     0070                     ?_INTERRUPT_InterruptManager:	
 11277                           ; 1 bytes @ 0x0
 11278                           
 11279     0070                     ?_SYSTEM_Initialize:	
 11280                           ; 1 bytes @ 0x0
 11281                           
 11282     0070                     ?_TMR0_HasOverflowOccured:	
 11283                           ; 1 bytes @ 0x0
 11284                           
 11285     0070                     ?_I2C1_MasterOperation:	
 11286                           ; 1 bytes @ 0x0
 11287                           
 11288     0070                     ?_main:	
 11289                           ; 1 bytes @ 0x0
 11290                           
 11291                           
 11292                           ; 2 bytes @ 0x0
 11293     0070                     	ds	1
 11294     0071                     ??_LIGHTBLUE_GetButtonValue:
 11295     0071                     ??_LIGHTBLUE_GetDataLedValue:	
 11296                           ; 1 bytes @ 0x1
 11297                           
 11298     0071                     ??_LIGHTBLUE_GetErrorLedValue:	
 11299                           ; 1 bytes @ 0x1
 11300                           
 11301     0071                     ??_EUSART1_Read:	
 11302                           ; 1 bytes @ 0x1
 11303                           
 11304     0071                     ?_EUSART1_Write:	
 11305                           ; 1 bytes @ 0x1
 11306                           
 11307     0071                     ??_EUSART1_is_rx_ready:	
 11308                           ; 1 bytes @ 0x1
 11309                           
 11310     0071                     ?_EUSART1_SetTxInterruptHandler:	
 11311                           ; 1 bytes @ 0x1
 11312                           
 11313     0071                     ??_EUSART1_Receive_ISR:	
 11314                           ; 1 bytes @ 0x1
 11315                           
 11316     0071                     ?_EUSART1_SetRxInterruptHandler:	
 11317                           ; 1 bytes @ 0x1
 11318                           
 11319     0071                     ??_EUSART1_is_tx_done:	
 11320                           ; 1 bytes @ 0x1
 11321                           
 11322     0071                     ??_EUSART2_Read:	
 11323                           ; 1 bytes @ 0x1
 11324                           
 11325     0071                     ?_EUSART2_Write:	
 11326                           ; 1 bytes @ 0x1
 11327                           
 11328     0071                     ??_EUSART2_is_rx_ready:	
 11329                           ; 1 bytes @ 0x1
 11330                           
 11331     0071                     ?_EUSART2_SetTxInterruptHandler:	
 11332                           ; 1 bytes @ 0x1
 11333                           
 11334     0071                     ??_EUSART2_Receive_ISR:	
 11335                           ; 1 bytes @ 0x1
 11336                           
 11337     0071                     ?_EUSART2_SetRxInterruptHandler:	
 11338                           ; 1 bytes @ 0x1
 11339                           
 11340     0071                     ??_EUSART2_is_tx_done:	
 11341                           ; 1 bytes @ 0x1
 11342                           
 11343     0071                     ?_I2C1_SetBuffer:	
 11344                           ; 1 bytes @ 0x1
 11345                           
 11346     0071                     ??_I2C1_Open:	
 11347                           ; 1 bytes @ 0x1
 11348                           
 11349     0071                     ??_I2C1_Close:	
 11350                           ; 1 bytes @ 0x1
 11351                           
 11352     0071                     ?_bitRead8:	
 11353                           ; 1 bytes @ 0x1
 11354                           
 11355     0071                     ?_bitWrite8:	
 11356                           ; 1 bytes @ 0x1
 11357                           
 11358     0071                     ?_RN487X_SetAsyncMessageHandler:	
 11359                           ; 1 bytes @ 0x1
 11360                           
 11361     0071                     ??_RN487X_IsConnected:	
 11362                           ; 1 bytes @ 0x1
 11363                           
 11364     0071                     ??_RN487X_is_tx_done:	
 11365                           ; 1 bytes @ 0x1
 11366                           
 11367     0071                     ??_RN487X_is_rx_ready:	
 11368                           ; 1 bytes @ 0x1
 11369                           
 11370     0071                     ?_RN487X_IndicateRx:	
 11371                           ; 1 bytes @ 0x1
 11372                           
 11373     0071                     ?_RN487X_Reset:	
 11374                           ; 1 bytes @ 0x1
 11375                           
 11376     0071                     ?_RN487X_SetSystemMode:	
 11377                           ; 1 bytes @ 0x1
 11378                           
 11379     0071                     ?_DELAY_milliseconds:	
 11380                           ; 1 bytes @ 0x1
 11381                           
 11382     0071                     ?_strcpy:	
 11383                           ; 1 bytes @ 0x1
 11384                           
 11385     0071                     ?_EUSART2_SetFramingErrorHandler:	
 11386                           ; 1 bytes @ 0x1
 11387                           
 11388     0071                     ?_EUSART2_SetOverrunErrorHandler:	
 11389                           ; 1 bytes @ 0x1
 11390                           
 11391     0071                     ?_EUSART2_SetErrorHandler:	
 11392                           ; 1 bytes @ 0x1
 11393                           
 11394     0071                     ??_EUSART2_DefaultErrorHandler:	
 11395                           ; 1 bytes @ 0x1
 11396                           
 11397     0071                     ?_EUSART1_SetFramingErrorHandler:	
 11398                           ; 1 bytes @ 0x1
 11399                           
 11400     0071                     ?_EUSART1_SetOverrunErrorHandler:	
 11401                           ; 1 bytes @ 0x1
 11402                           
 11403     0071                     ?_EUSART1_SetErrorHandler:	
 11404                           ; 1 bytes @ 0x1
 11405                           
 11406     0071                     ??_EUSART1_DefaultErrorHandler:	
 11407                           ; 1 bytes @ 0x1
 11408                           
 11409     0071                     ??_PMD_Initialize:	
 11410                           ; 1 bytes @ 0x1
 11411                           
 11412     0071                     ??_I2C1_Initialize:	
 11413                           ; 1 bytes @ 0x1
 11414                           
 11415     0071                     ??_OSCILLATOR_Initialize:	
 11416                           ; 1 bytes @ 0x1
 11417                           
 11418     0071                     ??_TMR0_Initialize:	
 11419                           ; 1 bytes @ 0x1
 11420                           
 11421     0071                     ?_IOCAF6_SetInterruptHandler:	
 11422                           ; 1 bytes @ 0x1
 11423                           
 11424     0071                     ??_I2C1_DO_IDLE:	
 11425                           ; 1 bytes @ 0x1
 11426                           
 11427     0071                     ??_I2C1_DO_SEND_ADR_READ:	
 11428                           ; 1 bytes @ 0x1
 11429                           
 11430     0071                     ??_I2C1_DO_RCEN:	
 11431                           ; 1 bytes @ 0x1
 11432                           
 11433     0071                     ??_I2C1_DO_SEND_RESTART_READ:	
 11434                           ; 1 bytes @ 0x1
 11435                           
 11436     0071                     ??_I2C1_DO_SEND_RESTART_WRITE:	
 11437                           ; 1 bytes @ 0x1
 11438                           
 11439     0071                     ??_I2C1_DO_SEND_RESTART:	
 11440                           ; 1 bytes @ 0x1
 11441                           
 11442     0071                     ??_I2C1_DO_SEND_STOP:	
 11443                           ; 1 bytes @ 0x1
 11444                           
 11445     0071                     ??_I2C1_DO_RX_ACK:	
 11446                           ; 1 bytes @ 0x1
 11447                           
 11448     0071                     ??_I2C1_DO_RX_NACK_STOP:	
 11449                           ; 1 bytes @ 0x1
 11450                           
 11451     0071                     ??_I2C1_DO_RX_NACK_RESTART:	
 11452                           ; 1 bytes @ 0x1
 11453                           
 11454     0071                     ??_I2C1_DO_RESET:	
 11455                           ; 1 bytes @ 0x1
 11456                           
 11457     0071                     ??_I2C1_MasterClearIrq:	
 11458                           ; 1 bytes @ 0x1
 11459                           
 11460     0071                     ??_I2C1_MasterOpen:	
 11461                           ; 1 bytes @ 0x1
 11462                           
 11463     0071                     ??_I2C1_MasterDisableIrq:	
 11464                           ; 1 bytes @ 0x1
 11465                           
 11466     0071                     ??_I2C1_MasterClose:	
 11467                           ; 1 bytes @ 0x1
 11468                           
 11469     0071                     ??_I2C1_MasterStart:	
 11470                           ; 1 bytes @ 0x1
 11471                           
 11472     0071                     ?_I2C1_SetCallback:	
 11473                           ; 1 bytes @ 0x1
 11474                           
 11475     0071                     ??_I2C1_MasterWaitForEvent:	
 11476                           ; 1 bytes @ 0x1
 11477                           
 11478     0071                     ??_I2C1_MasterIsNack:	
 11479                           ; 1 bytes @ 0x1
 11480                           
 11481     0071                     ??_I2C1_MasterSendTxData:	
 11482                           ; 1 bytes @ 0x1
 11483                           
 11484     0071                     ??_I2C1_MasterGetRxData:	
 11485                           ; 1 bytes @ 0x1
 11486                           
 11487     0071                     ??_I2C1_MasterSendAck:	
 11488                           ; 1 bytes @ 0x1
 11489                           
 11490     0071                     ??_I2C1_MasterStartRx:	
 11491                           ; 1 bytes @ 0x1
 11492                           
 11493     0071                     ??_I2C1_MasterSetIrq:	
 11494                           ; 1 bytes @ 0x1
 11495                           
 11496     0071                     ??_I2C1_MasterEnableRestart:	
 11497                           ; 1 bytes @ 0x1
 11498                           
 11499     0071                     ??_I2C1_MasterStop:	
 11500                           ; 1 bytes @ 0x1
 11501                           
 11502     0071                     ??_I2C1_MasterSendNack:	
 11503                           ; 1 bytes @ 0x1
 11504                           
 11505     0071                     ?_strchr:	
 11506                           ; 1 bytes @ 0x1
 11507                           
 11508     0071                     ??_LIGHTBLUE_Initialize:	
 11509                           ; 1 bytes @ 0x1
 11510                           
 11511     0071                     ??_INTERRUPT_InterruptManager:	
 11512                           ; 1 bytes @ 0x1
 11513                           
 11514     0071                     ??_TMR0_HasOverflowOccured:	
 11515                           ; 1 bytes @ 0x1
 11516                           
 11517     0071                     ?_strlen:	
 11518                           ; 1 bytes @ 0x1
 11519                           
 11520     0071                     ?_swap:	
 11521                           ; 2 bytes @ 0x1
 11522                           
 11523     0071                     ?_strncmp:	
 11524                           ; 2 bytes @ 0x1
 11525                           
 11526     0071                     RN487X_Reset@value:	
 11527                           ; 2 bytes @ 0x1
 11528                           
 11529     0071                     RN487X_IndicateRx@value:	
 11530                           ; 1 bytes @ 0x1
 11531                           
 11532     0071                     RN487X_SetSystemMode@mode:	
 11533                           ; 1 bytes @ 0x1
 11534                           
 11535     0071                     RN487X_SetAsyncMessageHandler@len:	
 11536                           ; 1 bytes @ 0x1
 11537                           
 11538     0071                     EUSART2_Write@txData:	
 11539                           ; 1 bytes @ 0x1
 11540                           
 11541     0071                     EUSART1_Write@txData:	
 11542                           ; 1 bytes @ 0x1
 11543                           
 11544     0071                     I2C1_Open@address:	
 11545                           ; 1 bytes @ 0x1
 11546                           
 11547     0071                     I2C1_Close@returnValue:	
 11548                           ; 1 bytes @ 0x1
 11549                           
 11550     0071                     I2C1_MasterSendTxData@data:	
 11551                           ; 1 bytes @ 0x1
 11552                           
 11553     0071                     strcpy@src:	
 11554                           ; 1 bytes @ 0x1
 11555                           
 11556     0071                     bitRead8@reg:	
 11557                           ; 1 bytes @ 0x1
 11558                           
 11559     0071                     bitWrite8@reg:	
 11560                           ; 2 bytes @ 0x1
 11561                           
 11562     0071                     swap@reg:	
 11563                           ; 2 bytes @ 0x1
 11564                           
 11565     0071                     EUSART2_SetFramingErrorHandler@interruptHandler:	
 11566                           ; 2 bytes @ 0x1
 11567                           
 11568     0071                     EUSART2_SetOverrunErrorHandler@interruptHandler:	
 11569                           ; 2 bytes @ 0x1
 11570                           
 11571     0071                     EUSART2_SetErrorHandler@interruptHandler:	
 11572                           ; 2 bytes @ 0x1
 11573                           
 11574     0071                     EUSART2_SetTxInterruptHandler@interruptHandler:	
 11575                           ; 2 bytes @ 0x1
 11576                           
 11577     0071                     EUSART2_SetRxInterruptHandler@interruptHandler:	
 11578                           ; 2 bytes @ 0x1
 11579                           
 11580     0071                     EUSART1_SetFramingErrorHandler@interruptHandler:	
 11581                           ; 2 bytes @ 0x1
 11582                           
 11583     0071                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
 11584                           ; 2 bytes @ 0x1
 11585                           
 11586     0071                     EUSART1_SetErrorHandler@interruptHandler:	
 11587                           ; 2 bytes @ 0x1
 11588                           
 11589     0071                     EUSART1_SetTxInterruptHandler@interruptHandler:	
 11590                           ; 2 bytes @ 0x1
 11591                           
 11592     0071                     EUSART1_SetRxInterruptHandler@interruptHandler:	
 11593                           ; 2 bytes @ 0x1
 11594                           
 11595     0071                     IOCAF6_SetInterruptHandler@InterruptHandler:	
 11596                           ; 2 bytes @ 0x1
 11597                           
 11598     0071                     I2C1_SetBuffer@buffer:	
 11599                           ; 2 bytes @ 0x1
 11600                           
 11601     0071                     I2C1_SetCallback@cb:	
 11602                           ; 2 bytes @ 0x1
 11603                           
 11604     0071                     DELAY_milliseconds@milliseconds:	
 11605                           ; 2 bytes @ 0x1
 11606                           
 11607     0071                     strlen@s:	
 11608                           ; 2 bytes @ 0x1
 11609                           
 11610     0071                     strchr@c:	
 11611                           ; 2 bytes @ 0x1
 11612                           
 11613     0071                     strncmp@r:	
 11614                           ; 2 bytes @ 0x1
 11615                           
 11616                           
 11617                           ; 2 bytes @ 0x1
 11618     0071                     	ds	1
 11619     0072                     ??_EUSART1_Write:
 11620     0072                     ??_EUSART2_Write:	
 11621                           ; 1 bytes @ 0x2
 11622                           
 11623     0072                     ??_RN487X_SetAsyncMessageHandler:	
 11624                           ; 1 bytes @ 0x2
 11625                           
 11626     0072                     ??_RN487X_IndicateRx:	
 11627                           ; 1 bytes @ 0x2
 11628                           
 11629     0072                     ??_RN487X_Reset:	
 11630                           ; 1 bytes @ 0x2
 11631                           
 11632     0072                     ??_RN487X_SetSystemMode:	
 11633                           ; 1 bytes @ 0x2
 11634                           
 11635     0072                     ??_strcpy:	
 11636                           ; 1 bytes @ 0x2
 11637                           
 11638     0072                     ??_I2C1_DO_SEND_ADR_WRITE:	
 11639                           ; 1 bytes @ 0x2
 11640                           
 11641     0072                     RN487X_SetAsyncMessageHandler@pBuffer:	
 11642                           ; 1 bytes @ 0x2
 11643                           
 11644     0072                     EUSART2_Read@readValue:	
 11645                           ; 1 bytes @ 0x2
 11646                           
 11647     0072                     EUSART1_Read@readValue:	
 11648                           ; 1 bytes @ 0x2
 11649                           
 11650     0072                     I2C1_Open@returnValue:	
 11651                           ; 1 bytes @ 0x2
 11652                           
 11653     0072                     strcpy@d:	
 11654                           ; 1 bytes @ 0x2
 11655                           
 11656                           
 11657                           ; 1 bytes @ 0x2
 11658     0072                     	ds	1
 11659     0073                     ??_strlen:
 11660     0073                     ??_EUSART1_SetTxInterruptHandler:	
 11661                           ; 1 bytes @ 0x3
 11662                           
 11663     0073                     ??_EUSART1_SetRxInterruptHandler:	
 11664                           ; 1 bytes @ 0x3
 11665                           
 11666     0073                     ??_EUSART1_Initialize:	
 11667                           ; 1 bytes @ 0x3
 11668                           
 11669     0073                     ??_EUSART2_SetTxInterruptHandler:	
 11670                           ; 1 bytes @ 0x3
 11671                           
 11672     0073                     ??_EUSART2_SetRxInterruptHandler:	
 11673                           ; 1 bytes @ 0x3
 11674                           
 11675     0073                     ??_EUSART2_Initialize:	
 11676                           ; 1 bytes @ 0x3
 11677                           
 11678     0073                     ??_swap:	
 11679                           ; 1 bytes @ 0x3
 11680                           
 11681     0073                     ??_RN487X_Read@rn487x_interface$F1838:	
 11682                           ; 1 bytes @ 0x3
 11683                           
 11684     0073                     ??_DELAY_milliseconds:	
 11685                           ; 1 bytes @ 0x3
 11686                           
 11687     0073                     ??_EUSART2_SetFramingErrorHandler:	
 11688                           ; 1 bytes @ 0x3
 11689                           
 11690     0073                     ??_EUSART2_SetOverrunErrorHandler:	
 11691                           ; 1 bytes @ 0x3
 11692                           
 11693     0073                     ??_EUSART2_SetErrorHandler:	
 11694                           ; 1 bytes @ 0x3
 11695                           
 11696     0073                     ??_EUSART1_SetFramingErrorHandler:	
 11697                           ; 1 bytes @ 0x3
 11698                           
 11699     0073                     ??_EUSART1_SetOverrunErrorHandler:	
 11700                           ; 1 bytes @ 0x3
 11701                           
 11702     0073                     ??_EUSART1_SetErrorHandler:	
 11703                           ; 1 bytes @ 0x3
 11704                           
 11705     0073                     ??_PIN_MANAGER_Initialize:	
 11706                           ; 1 bytes @ 0x3
 11707                           
 11708     0073                     ??_IOCAF6_SetInterruptHandler:	
 11709                           ; 1 bytes @ 0x3
 11710                           
 11711     0073                     ??_strchr:	
 11712                           ; 1 bytes @ 0x3
 11713                           
 11714     0073                     ??_rn487x_PrintMessageStart:	
 11715                           ; 1 bytes @ 0x3
 11716                           
 11717     0073                     ??_rn487x_PrintMessageEnd:	
 11718                           ; 1 bytes @ 0x3
 11719                           
 11720     0073                     ??_rn487x_PrintIndicatorCharacters:	
 11721                           ; 1 bytes @ 0x3
 11722                           
 11723     0073                     ?_RN487X_ReadMsg:	
 11724                           ; 1 bytes @ 0x3
 11725                           
 11726     0073                     ??_RN487X_ReadDefaultResponse:	
 11727                           ; 1 bytes @ 0x3
 11728                           
 11729     0073                     ??_SYSTEM_Initialize:	
 11730                           ; 1 bytes @ 0x3
 11731                           
 11732     0073                     bitRead8@position:	
 11733                           ; 1 bytes @ 0x3
 11734                           
 11735     0073                     bitWrite8@position:	
 11736                           ; 1 bytes @ 0x3
 11737                           
 11738     0073                     rn487x_PrintIndicatorCharacters@messageType:	
 11739                           ; 1 bytes @ 0x3
 11740                           
 11741     0073                     I2C1_SetCallback@ptr:	
 11742                           ; 1 bytes @ 0x3
 11743                           
 11744     0073                     strcpy@dest:	
 11745                           ; 1 bytes @ 0x3
 11746                           
 11747     0073                     strchr@s:	
 11748                           ; 1 bytes @ 0x3
 11749                           
 11750     0073                     RN487X_ReadMsg@expectedMsg:	
 11751                           ; 1 bytes @ 0x3
 11752                           
 11753     0073                     I2C1_SetBuffer@bufferSize:	
 11754                           ; 2 bytes @ 0x3
 11755                           
 11756     0073                     strncmp@n:	
 11757                           ; 2 bytes @ 0x3
 11758                           
 11759     0073                     RN487X_ReadDefaultResponse@resp:	
 11760                           ; 2 bytes @ 0x3
 11761                           
 11762                           
 11763                           ; 3 bytes @ 0x3
 11764     0073                     	ds	1
 11765     0074                     ??_bitRead8:
 11766     0074                     ?_RN487X_Delay:	
 11767                           ; 1 bytes @ 0x4
 11768                           
 11769     0074                     ??_I2C1_SetCallback:	
 11770                           ; 1 bytes @ 0x4
 11771                           
 11772     0074                     bitWrite8@value:	
 11773                           ; 1 bytes @ 0x4
 11774                           
 11775     0074                     I2C1_SetCallback@idx:	
 11776                           ; 1 bytes @ 0x4
 11777                           
 11778     0074                     RN487X_Delay@delayCount:	
 11779                           ; 1 bytes @ 0x4
 11780                           
 11781     0074                     strlen@a:	
 11782                           ; 2 bytes @ 0x4
 11783                           
 11784                           
 11785                           ; 2 bytes @ 0x4
 11786     0074                     	ds	1
 11787     0075                     ??_I2C1_SetBuffer:
 11788     0075                     ?_I2C1_SetDataCompleteCallback:	
 11789                           ; 1 bytes @ 0x5
 11790                           
 11791     0075                     ?_I2C1_SetAddressNackCallback:	
 11792                           ; 1 bytes @ 0x5
 11793                           
 11794     0075                     ??_bitWrite8:	
 11795                           ; 1 bytes @ 0x5
 11796                           
 11797     0075                     ??_strncmp:	
 11798                           ; 1 bytes @ 0x5
 11799                           
 11800     0075                     bitRead8@mask:	
 11801                           ; 1 bytes @ 0x5
 11802                           
 11803     0075                     RN487X_ReadMsg@msgLen:	
 11804                           ; 1 bytes @ 0x5
 11805                           
 11806     0075                     I2C1_SetDataCompleteCallback@cb:	
 11807                           ; 1 bytes @ 0x5
 11808                           
 11809     0075                     I2C1_SetAddressNackCallback@cb:	
 11810                           ; 2 bytes @ 0x5
 11811                           
 11812                           
 11813                           ; 2 bytes @ 0x5
 11814     0075                     	ds	1
 11815     0076                     ?_LIGHTBLUE_SplitByte:
 11816     0076                     ?_RN487X_Write:	
 11817                           ; 1 bytes @ 0x6
 11818                           
 11819     0076                     ??_RN487X_Delay:	
 11820                           ; 1 bytes @ 0x6
 11821                           
 11822     0076                     ??_rn487x_PrintMessage:	
 11823                           ; 1 bytes @ 0x6
 11824                           
 11825     0076                     ??_RN487X_Init:	
 11826                           ; 1 bytes @ 0x6
 11827                           
 11828     0076                     ??_RN487X_ReadMsg:	
 11829                           ; 1 bytes @ 0x6
 11830                           
 11831     0076                     LIGHTBLUE_SplitByte@value:	
 11832                           ; 1 bytes @ 0x6
 11833                           
 11834     0076                     bitWrite8@mask:	
 11835                           ; 1 bytes @ 0x6
 11836                           
 11837     0076                     RN487X_Write@txData:	
 11838                           ; 1 bytes @ 0x6
 11839                           
 11840     0076                     RN487X_ReadDefaultResponse@status:	
 11841                           ; 1 bytes @ 0x6
 11842                           
 11843     0076                     strncmp@l:	
 11844                           ; 1 bytes @ 0x6
 11845                           
 11846                           
 11847                           ; 1 bytes @ 0x6
 11848     0076                     	ds	1
 11849     0077                     ?_LIGHTBLUE_SendPacket:
 11850     0077                     ??_LIGHTBLUE_SplitByte:	
 11851                           ; 1 bytes @ 0x7
 11852                           
 11853     0077                     ??_RN487X_Write:	
 11854                           ; 1 bytes @ 0x7
 11855                           
 11856     0077                     ?_strstr:	
 11857                           ; 1 bytes @ 0x7
 11858                           
 11859     0077                     ??_LIGHTBLUE_SendSerialData:	
 11860                           ; 1 bytes @ 0x7
 11861                           
 11862     0077                     ?_RN487X_SendCmd:	
 11863                           ; 1 bytes @ 0x7
 11864                           
 11865     0077                     LIGHTBLUE_SendPacket@payload:	
 11866                           ; 1 bytes @ 0x7
 11867                           
 11868     0077                     RN487X_SendCmd@cmdLen:	
 11869                           ; 1 bytes @ 0x7
 11870                           
 11871     0077                     I2C1_SetDataCompleteCallback@ptr:	
 11872                           ; 1 bytes @ 0x7
 11873                           
 11874     0077                     I2C1_SetAddressNackCallback@ptr:	
 11875                           ; 1 bytes @ 0x7
 11876                           
 11877     0077                     strstr@n:	
 11878                           ; 2 bytes @ 0x7
 11879                           
 11880                           
 11881                           ; 2 bytes @ 0x7
 11882     0077                     	ds	1
 11883     0078                     ??_LIGHTBLUE_SendPacket:
 11884     0078                     ??_I2C1_SetDataCompleteCallback:	
 11885                           ; 1 bytes @ 0x8
 11886                           
 11887     0078                     ?_rd1RegCompleteHandler:	
 11888                           ; 1 bytes @ 0x8
 11889                           
 11890     0078                     ?_rd2RegCompleteHandler:	
 11891                           ; 1 bytes @ 0x8
 11892                           
 11893     0078                     ?_wr1RegCompleteHandler:	
 11894                           ; 1 bytes @ 0x8
 11895                           
 11896     0078                     ?_wr2RegCompleteHandler:	
 11897                           ; 1 bytes @ 0x8
 11898                           
 11899     0078                     ?_rdBlkRegCompleteHandler:	
 11900                           ; 1 bytes @ 0x8
 11901                           
 11902     0078                     ?_I2C1_CallbackReturnStop:	
 11903                           ; 1 bytes @ 0x8
 11904                           
 11905     0078                     ?_I2C1_CallbackReturnReset:	
 11906                           ; 1 bytes @ 0x8
 11907                           
 11908     0078                     ?_wr1RegCompleteHandler@strncmp$F4842:	
 11909                           ; 1 bytes @ 0x8
 11910                           
 11911     0078                     ?_rd1RegCompleteHandler@strncmp$F4848:	
 11912                           ; 1 bytes @ 0x8
 11913                           
 11914     0078                     ?_rd2RegCompleteHandler@strncmp$F4851:	
 11915                           ; 1 bytes @ 0x8
 11916                           
 11917     0078                     ?_wr2RegCompleteHandler@strncmp$F4854:	
 11918                           ; 1 bytes @ 0x8
 11919                           
 11920     0078                     ?_rdBlkRegCompleteHandler@strncmp$F4860:	
 11921                           ; 1 bytes @ 0x8
 11922                           
 11923     0078                     ??_RN487X_SendCmd:	
 11924                           ; 1 bytes @ 0x8
 11925                           
 11926     0078                     LIGHTBLUE_SendSerialData@length:	
 11927                           ; 1 bytes @ 0x8
 11928                           
 11929     0078                     LIGHTBLUE_SplitByte@payload:	
 11930                           ; 1 bytes @ 0x8
 11931                           
 11932     0078                     wr1RegCompleteHandler@p:	
 11933                           ; 1 bytes @ 0x8
 11934                           
 11935     0078                     rd1RegCompleteHandler@p:	
 11936                           ; 1 bytes @ 0x8
 11937                           
 11938     0078                     rd2RegCompleteHandler@p:	
 11939                           ; 1 bytes @ 0x8
 11940                           
 11941     0078                     wr2RegCompleteHandler@p:	
 11942                           ; 1 bytes @ 0x8
 11943                           
 11944     0078                     rdBlkRegCompleteHandler@p:	
 11945                           ; 1 bytes @ 0x8
 11946                           
 11947     0078                     swap@upperByte:	
 11948                           ; 1 bytes @ 0x8
 11949                           
 11950     0078                     rd1RegCompleteHandler@i2c1_master_example$F1693@ptr:	
 11951                           ; 1 bytes @ 0x8
 11952                           
 11953     0078                     rd2RegCompleteHandler@i2c1_master_example$F1704@ptr:	
 11954                           ; 1 bytes @ 0x8
 11955                           
 11956     0078                     wr1RegCompleteHandler@i2c1_master_example$F1710@ptr:	
 11957                           ; 1 bytes @ 0x8
 11958                           
 11959     0078                     wr2RegCompleteHandler@i2c1_master_example$F1716@ptr:	
 11960                           ; 1 bytes @ 0x8
 11961                           
 11962     0078                     rdBlkRegCompleteHandler@i2c1_master_example$F1727@ptr:	
 11963                           ; 1 bytes @ 0x8
 11964                           
 11965     0078                     RN487X_ReadMsg@resp:	
 11966                           ; 1 bytes @ 0x8
 11967                           
 11968     0078                     I2C1_CallbackReturnStop@funPtr:	
 11969                           ; 1 bytes @ 0x8
 11970                           
 11971     0078                     I2C1_CallbackReturnReset@funPtr:	
 11972                           ; 1 bytes @ 0x8
 11973                           
 11974                           
 11975                           ; 1 bytes @ 0x8
 11976     0078                     	ds	1
 11977     0079                     ?_LIGHTBLUE_SplitWord:
 11978     0079                     ??_I2C1_SetAddressNackCallback:	
 11979                           ; 1 bytes @ 0x9
 11980                           
 11981     0079                     ??_rd1RegCompleteHandler:	
 11982                           ; 1 bytes @ 0x9
 11983                           
 11984     0079                     ??_rd2RegCompleteHandler:	
 11985                           ; 1 bytes @ 0x9
 11986                           
 11987     0079                     ??_wr1RegCompleteHandler:	
 11988                           ; 1 bytes @ 0x9
 11989                           
 11990     0079                     ??_wr2RegCompleteHandler:	
 11991                           ; 1 bytes @ 0x9
 11992                           
 11993     0079                     ??_rdBlkRegCompleteHandler:	
 11994                           ; 1 bytes @ 0x9
 11995                           
 11996     0079                     ??_strstr:	
 11997                           ; 1 bytes @ 0x9
 11998                           
 11999     0079                     ??_I2C1_DO_TX:	
 12000                           ; 1 bytes @ 0x9
 12001                           
 12002     0079                     ??_I2C1_DO_RX:	
 12003                           ; 1 bytes @ 0x9
 12004                           
 12005     0079                     ??_I2C1_DO_TX_EMPTY:	
 12006                           ; 1 bytes @ 0x9
 12007                           
 12008     0079                     ??_I2C1_DO_ADDRESS_NACK:	
 12009                           ; 1 bytes @ 0x9
 12010                           
 12011     0079                     ??_I2C1_CallbackReturnStop:	
 12012                           ; 1 bytes @ 0x9
 12013                           
 12014     0079                     ??_I2C1_CallbackReturnReset:	
 12015                           ; 1 bytes @ 0x9
 12016                           
 12017     0079                     ??_wr1RegCompleteHandler@strncmp$F4844:	
 12018                           ; 1 bytes @ 0x9
 12019                           
 12020     0079                     ??_rd1RegCompleteHandler@strncmp$F4850:	
 12021                           ; 1 bytes @ 0x9
 12022                           
 12023     0079                     ??_rd2RegCompleteHandler@strncmp$F4853:	
 12024                           ; 1 bytes @ 0x9
 12025                           
 12026     0079                     ??_wr2RegCompleteHandler@strncmp$F4856:	
 12027                           ; 1 bytes @ 0x9
 12028                           
 12029     0079                     ??_rdBlkRegCompleteHandler@strncmp$F4862:	
 12030                           ; 1 bytes @ 0x9
 12031                           
 12032     0079                     LIGHTBLUE_SendSerialData@serialData:	
 12033                           ; 1 bytes @ 0x9
 12034                           
 12035     0079                     swap@lowerByte:	
 12036                           ; 1 bytes @ 0x9
 12037                           
 12038     0079                     RN487X_SendCmd@index:	
 12039                           ; 1 bytes @ 0x9
 12040                           
 12041     0079                     RN487X_ReadMsg@index:	
 12042                           ; 1 bytes @ 0x9
 12043                           
 12044     0079                     LIGHTBLUE_SplitWord@value:	
 12045                           ; 1 bytes @ 0x9
 12046                           
 12047                           
 12048                           ; 2 bytes @ 0x9
 12049     0079                     	ds	1
 12050     007A                     LIGHTBLUE_SendPacket@packetID:
 12051     007A                     RN487X_SendCmd@cmd:	
 12052                           ; 1 bytes @ 0xA
 12053                           
 12054                           
 12055                           ; 1 bytes @ 0xA
 12056     007A                     	ds	1
 12057     007B                     ??_i2c_write1ByteRegister:
 12058     007B                     ??_i2c_read1ByteRegister:	
 12059                           ; 1 bytes @ 0xB
 12060                           
 12061     007B                     ??_BMA253_NewAccelDataRdyY:	
 12062                           ; 1 bytes @ 0xB
 12063                           
 12064     007B                     ??_BMA253_NewAccelDataRdyZ:	
 12065                           ; 1 bytes @ 0xB
 12066                           
 12067     007B                     ??_TMAG5273_GetXValue:	
 12068                           ; 1 bytes @ 0xB
 12069                           
 12070     007B                     ??_TMAG5273_GetTemperatureValue:	
 12071                           ; 1 bytes @ 0xB
 12072                           
 12073     007B                     ??_LIGHTBLUE_SplitWord:	
 12074                           ; 1 bytes @ 0xB
 12075                           
 12076     007B                     ??_LIGHTBLUE_UpdateErrorLed:	
 12077                           ; 1 bytes @ 0xB
 12078                           
 12079     007B                     ??_RN487X_EnterCmdMode:	
 12080                           ; 1 bytes @ 0xB
 12081                           
 12082     007B                     ??_RN487X_SetOutputs:	
 12083                           ; 1 bytes @ 0xB
 12084                           
 12085     007B                     ??_RN487X_EnterDataMode:	
 12086                           ; 1 bytes @ 0xB
 12087                           
 12088     007B                     ??_I2C1_MasterWrite:	
 12089                           ; 1 bytes @ 0xB
 12090                           
 12091     007B                     ??_isConnected:	
 12092                           ; 1 bytes @ 0xB
 12093                           
 12094     007B                     ??_TMAG5273_GetManufacture:	
 12095                           ; 1 bytes @ 0xB
 12096                           
 12097     007B                     ?_RN487X_MessageHandler:	
 12098                           ; 1 bytes @ 0xB
 12099                           
 12100     007B                     ??_I2C1_Poller:	
 12101                           ; 1 bytes @ 0xB
 12102                           
 12103     007B                     ??_LIGHTBLUE_PushButton:	
 12104                           ; 1 bytes @ 0xB
 12105                           
 12106     007B                     ??_LIGHTBLUE_LedState:	
 12107                           ; 1 bytes @ 0xB
 12108                           
 12109     007B                     ??_LIGHTBLUE_SetErrorLedValue:	
 12110                           ; 1 bytes @ 0xB
 12111                           
 12112     007B                     ??_readRegister:	
 12113                           ; 1 bytes @ 0xB
 12114                           
 12115     007B                     ??_getDeviceStatus:	
 12116                           ; 1 bytes @ 0xB
 12117                           
 12118     007B                     ??_I2C1_MasterOperation:	
 12119                           ; 1 bytes @ 0xB
 12120                           
 12121     007B                     BMA253_NewAccelDataRdyY@yNewData:	
 12122                           ; 1 bytes @ 0xB
 12123                           
 12124     007B                     BMA253_NewAccelDataRdyZ@zNewData:	
 12125                           ; 1 bytes @ 0xB
 12126                           
 12127     007B                     LIGHTBLUE_SplitWord@payload:	
 12128                           ; 1 bytes @ 0xB
 12129                           
 12130     007B                     i2c_write1ByteRegister@address:	
 12131                           ; 1 bytes @ 0xB
 12132                           
 12133     007B                     getDeviceStatus@deviceStatusReg:	
 12134                           ; 1 bytes @ 0xB
 12135                           
 12136     007B                     TMAG5273_GetTemperatureValue@temperature:	
 12137                           ; 1 bytes @ 0xB
 12138                           
 12139     007B                     TMAG5273_GetXValue@x:	
 12140                           ; 1 bytes @ 0xB
 12141                           
 12142     007B                     RN487X_MessageHandler@message:	
 12143                           ; 1 bytes @ 0xB
 12144                           
 12145                           
 12146                           ; 1 bytes @ 0xB
 12147     007B                     	ds	1
 12148     007C                     ??_RN487X_Read:
 12149     007C                     ??_RN487X_DataReady:	
 12150                           ; 1 bytes @ 0xC
 12151                           
 12152     007C                     ??_RN487X_MessageHandler:	
 12153                           ; 1 bytes @ 0xC
 12154                           
 12155     007C                     ??_BMA253_GetAccelDataXYZ:	
 12156                           ; 1 bytes @ 0xC
 12157                           
 12158     007C                     ??_LIGHTBLUE_TemperatureSensor:	
 12159                           ; 1 bytes @ 0xC
 12160                           
 12161     007C                     ??_LIGHTBLUE_AccelSensor:	
 12162                           ; 1 bytes @ 0xC
 12163                           
 12164     007C                     ??_begin:	
 12165                           ; 1 bytes @ 0xC
 12166                           
 12167     007C                     ??_writeRegister:	
 12168                           ; 1 bytes @ 0xC
 12169                           
 12170                           
 12171                           	psect	cstackBANK0
 12172     0020                     __pcstackBANK0:	
 12173                           ; 1 bytes @ 0xC
 12174                           
 12175     0020                     ?_RN487X_SetOutputs:
 12176     0020                     ??_I2C1_MasterFsm:	
 12177                           ; 1 bytes @ 0x0
 12178                           
 12179     0020                     ??_LIGHTBLUE_SendProtocolVersion:	
 12180                           ; 1 bytes @ 0x0
 12181                           
 12182     0020                     LIGHTBLUE_PushButton@button:	
 12183                           ; 1 bytes @ 0x0
 12184                           
 12185     0020                     RN487X_SetOutputs@bitMap:	
 12186                           ; 1 bytes @ 0x0
 12187                           
 12188     0020                     strstr@nl:	
 12189                           ; 2 bytes @ 0x0
 12190                           
 12191     0020                     LIGHTBLUE_LedState@payload:	
 12192                           ; 2 bytes @ 0x0
 12193                           
 12194     0020                     rn487x_PrintMessage@printCharacter:	
 12195                           ; 3 bytes @ 0x0
 12196                           
 12197                           
 12198                           ; 32 bytes @ 0x0
 12199     0020                     	ds	1
 12200     0021                     LIGHTBLUE_PushButton@payload:
 12201                           
 12202                           ; 3 bytes @ 0x1
 12203     0021                     	ds	1
 12204     0022                     RN487X_SetOutputs@ioLowNibble:
 12205     0022                     I2C1_MasterOperation@read:	
 12206                           ; 1 bytes @ 0x2
 12207                           
 12208     0022                     strstr@h:	
 12209                           ; 1 bytes @ 0x2
 12210                           
 12211     0022                     LIGHTBLUE_SendProtocolVersion@payload:	
 12212                           ; 1 bytes @ 0x2
 12213                           
 12214                           
 12215                           ; 19 bytes @ 0x2
 12216     0022                     	ds	1
 12217     0023                     LIGHTBLUE_LedState@led:
 12218     0023                     RN487X_SetOutputs@stateLowNibble:	
 12219                           ; 1 bytes @ 0x3
 12220                           
 12221     0023                     I2C1_MasterOperation@returnValue:	
 12222                           ; 1 bytes @ 0x3
 12223                           
 12224                           
 12225                           ; 1 bytes @ 0x3
 12226     0023                     	ds	1
 12227     0024                     ?_i2c_write1ByteRegister:
 12228     0024                     ?_i2c_read1ByteRegister:	
 12229                           ; 1 bytes @ 0x4
 12230                           
 12231     0024                     ?_i2c_read2ByteRegister:	
 12232                           ; 1 bytes @ 0x4
 12233                           
 12234     0024                     i2c_write1ByteRegister@reg:	
 12235                           ; 2 bytes @ 0x4
 12236                           
 12237     0024                     i2c_read1ByteRegister@reg:	
 12238                           ; 1 bytes @ 0x4
 12239                           
 12240     0024                     i2c_read2ByteRegister@reg:	
 12241                           ; 1 bytes @ 0x4
 12242                           
 12243     0024                     RN487X_SetOutputs@ioHighNibble:	
 12244                           ; 1 bytes @ 0x4
 12245                           
 12246                           
 12247                           ; 1 bytes @ 0x4
 12248     0024                     	ds	1
 12249     0025                     i2c_write1ByteRegister@data:
 12250     0025                     i2c_read1ByteRegister@address:	
 12251                           ; 1 bytes @ 0x5
 12252                           
 12253     0025                     RN487X_SetOutputs@stateHighNibble:	
 12254                           ; 1 bytes @ 0x5
 12255                           
 12256                           
 12257                           ; 1 bytes @ 0x5
 12258     0025                     	ds	1
 12259     0026                     ??_i2c_read2ByteRegister:
 12260     0026                     ?_writeRegister:	
 12261                           ; 1 bytes @ 0x6
 12262                           
 12263     0026                     LIGHTBLUE_SetErrorLedValue@value:	
 12264                           ; 1 bytes @ 0x6
 12265                           
 12266     0026                     i2c_read1ByteRegister@e:	
 12267                           ; 1 bytes @ 0x6
 12268                           
 12269     0026                     writeRegister@data:	
 12270                           ; 1 bytes @ 0x6
 12271                           
 12272                           
 12273                           ; 1 bytes @ 0x6
 12274     0026                     	ds	1
 12275     0027                     ?_LIGHTBLUE_PerformAction:
 12276     0027                     LIGHTBLUE_PerformAction@data:	
 12277                           ; 1 bytes @ 0x7
 12278                           
 12279     0027                     writeRegister@regAddress:	
 12280                           ; 1 bytes @ 0x7
 12281                           
 12282     0027                     i2c_read1ByteRegister@x:	
 12283                           ; 1 bytes @ 0x7
 12284                           
 12285                           
 12286                           ; 2 bytes @ 0x7
 12287     0027                     	ds	1
 12288     0028                     ??_LIGHTBLUE_PerformAction:
 12289                           
 12290                           ; 1 bytes @ 0x8
 12291     0028                     	ds	1
 12292     0029                     LIGHTBLUE_PerformAction@id:
 12293     0029                     i2c_read1ByteRegister@d2:	
 12294                           ; 1 bytes @ 0x9
 12295                           
 12296                           
 12297                           ; 1 bytes @ 0x9
 12298     0029                     	ds	1
 12299     002A                     ??_BMA253_GetAccelDataY:
 12300     002A                     ??_BMA253_GetAccelDataZ:	
 12301                           ; 1 bytes @ 0xA
 12302                           
 12303     002A                     LIGHTBLUE_PerformAction@led:	
 12304                           ; 1 bytes @ 0xA
 12305                           
 12306     002A                     i2c_read2ByteRegister@address:	
 12307                           ; 1 bytes @ 0xA
 12308                           
 12309     002A                     readRegister@regAddress:	
 12310                           ; 1 bytes @ 0xA
 12311                           
 12312                           
 12313                           ; 1 bytes @ 0xA
 12314     002A                     	ds	1
 12315     002B                     ??_LIGHTBLUE_ParseIncomingPacket:
 12316     002B                     readRegister@regVal:	
 12317                           ; 1 bytes @ 0xB
 12318                           
 12319     002B                     i2c_read2ByteRegister@result:	
 12320                           ; 1 bytes @ 0xB
 12321                           
 12322                           
 12323                           ; 2 bytes @ 0xB
 12324     002B                     	ds	1
 12325     002C                     ??_getError:
 12326     002C                     ??_getLowPower:	
 12327                           ; 1 bytes @ 0xC
 12328                           
 12329     002C                     ??_getOperatingMode:	
 12330                           ; 1 bytes @ 0xC
 12331                           
 12332     002C                     ??_getMagneticChannel:	
 12333                           ; 1 bytes @ 0xC
 12334                           
 12335     002C                     ??_getTemperatureEN:	
 12336                           ; 1 bytes @ 0xC
 12337                           
 12338     002C                     ??_getAngleEn:	
 12339                           ; 1 bytes @ 0xC
 12340                           
 12341                           
 12342                           ; 1 bytes @ 0xC
 12343     002C                     	ds	1
 12344     002D                     ?_TMAG5273_GetManufacture:
 12345     002D                     ?_TMAG5273_CalcMeasurement:	
 12346                           ; 2 bytes @ 0xD
 12347                           
 12348     002D                     BMA253_GetAccelDataY@yAccelData:	
 12349                           ; 2 bytes @ 0xD
 12350                           
 12351     002D                     BMA253_GetAccelDataZ@zAccelData:	
 12352                           ; 1 bytes @ 0xD
 12353                           
 12354     002D                     _LIGHTBLUE_ParseIncomingPacket$431:	
 12355                           ; 1 bytes @ 0xD
 12356                           
 12357                           
 12358                           ; 2 bytes @ 0xD
 12359     002D                     	ds	1
 12360     002E                     BMA253_GetAccelDataY@lsbData:
 12361     002E                     BMA253_GetAccelDataZ@lsbData:	
 12362                           ; 1 bytes @ 0xE
 12363                           
 12364     002E                     getLowPower@lowPowerModeBit:	
 12365                           ; 1 bytes @ 0xE
 12366                           
 12367     002E                     getOperatingMode@opMode:	
 12368                           ; 1 bytes @ 0xE
 12369                           
 12370     002E                     getMagneticChannel@magChannel:	
 12371                           ; 1 bytes @ 0xE
 12372                           
 12373     002E                     getAngleEn@angleReg:	
 12374                           ; 1 bytes @ 0xE
 12375                           
 12376     002E                     getTemperatureEN@tempEN:	
 12377                           ; 1 bytes @ 0xE
 12378                           
 12379     002E                     getError@undervoltageError:	
 12380                           ; 1 bytes @ 0xE
 12381                           
 12382                           
 12383                           ; 1 bytes @ 0xE
 12384     002E                     	ds	1
 12385     002F                     ??_TMAG5273_CalcMeasurement:
 12386     002F                     BMA253_GetAccelDataY@msbData:	
 12387                           ; 1 bytes @ 0xF
 12388                           
 12389     002F                     BMA253_GetAccelDataZ@msbData:	
 12390                           ; 1 bytes @ 0xF
 12391                           
 12392     002F                     getLowPower@lowPowerMode:	
 12393                           ; 1 bytes @ 0xF
 12394                           
 12395     002F                     getOperatingMode@opMode0:	
 12396                           ; 1 bytes @ 0xF
 12397                           
 12398     002F                     getMagneticChannel@magMode4:	
 12399                           ; 1 bytes @ 0xF
 12400                           
 12401     002F                     getAngleEn@angleDir2:	
 12402                           ; 1 bytes @ 0xF
 12403                           
 12404     002F                     getTemperatureEN@tempENreg:	
 12405                           ; 1 bytes @ 0xF
 12406                           
 12407     002F                     getError@otpCrcError:	
 12408                           ; 1 bytes @ 0xF
 12409                           
 12410     002F                     _LIGHTBLUE_ParseIncomingPacket$432:	
 12411                           ; 1 bytes @ 0xF
 12412                           
 12413     002F                     TMAG5273_GetManufacture@read:	
 12414                           ; 2 bytes @ 0xF
 12415                           
 12416                           
 12417                           ; 2 bytes @ 0xF
 12418     002F                     	ds	1
 12419     0030                     getOperatingMode@opMode1:
 12420     0030                     getMagneticChannel@magMode5:	
 12421                           ; 1 bytes @ 0x10
 12422                           
 12423     0030                     getAngleEn@angleDir3:	
 12424                           ; 1 bytes @ 0x10
 12425                           
 12426     0030                     getError@intPinError:	
 12427                           ; 1 bytes @ 0x10
 12428                           
 12429                           
 12430                           ; 1 bytes @ 0x10
 12431     0030                     	ds	1
 12432     0031                     getMagneticChannel@magMode6:
 12433     0031                     getError@oscillatorError:	
 12434                           ; 1 bytes @ 0x11
 12435                           
 12436     0031                     _LIGHTBLUE_ParseIncomingPacket$433:	
 12437                           ; 1 bytes @ 0x11
 12438                           
 12439                           
 12440                           ; 2 bytes @ 0x11
 12441     0031                     	ds	1
 12442     0032                     getMagneticChannel@magMode7:
 12443     0032                     getError@statusReg:	
 12444                           ; 1 bytes @ 0x12
 12445                           
 12446     0032                     TMAG5273_CalcMeasurement@regAddress:	
 12447                           ; 1 bytes @ 0x12
 12448                           
 12449                           
 12450                           ; 1 bytes @ 0x12
 12451     0032                     	ds	1
 12452     0033                     ??_setMagneticChannel:
 12453     0033                     ??_setTemperatureEn:	
 12454                           ; 1 bytes @ 0x13
 12455                           
 12456     0033                     ??_setOperatingMode:	
 12457                           ; 1 bytes @ 0x13
 12458                           
 12459     0033                     ??_setXYAxisRange:	
 12460                           ; 1 bytes @ 0x13
 12461                           
 12462     0033                     ??_setZAxisRange:	
 12463                           ; 1 bytes @ 0x13
 12464                           
 12465     0033                     LIGHTBLUE_ParseIncomingPacket@receivedByte:	
 12466                           ; 1 bytes @ 0x13
 12467                           
 12468     0033                     TMAG5273_CalcMeasurement@lowerByte:	
 12469                           ; 1 bytes @ 0x13
 12470                           
 12471                           
 12472                           ; 1 bytes @ 0x13
 12473     0033                     	ds	1
 12474     0034                     TMAG5273_CalcMeasurement@data:
 12475                           
 12476                           ; 2 bytes @ 0x14
 12477     0034                     	ds	1
 12478     0035                     LIGHTBLUE_SendProtocolVersion@value:
 12479     0035                     setOperatingMode@opMode:	
 12480                           ; 1 bytes @ 0x15
 12481                           
 12482     0035                     setMagneticChannel@channelMode:	
 12483                           ; 1 bytes @ 0x15
 12484                           
 12485     0035                     setXYAxisRange@xyAxisRange:	
 12486                           ; 1 bytes @ 0x15
 12487                           
 12488     0035                     setZAxisRange@zAxisRange:	
 12489                           ; 1 bytes @ 0x15
 12490                           
 12491     0035                     setTemperatureEn@temperatureEnable:	
 12492                           ; 1 bytes @ 0x15
 12493                           
 12494                           
 12495                           ; 1 bytes @ 0x15
 12496     0035                     	ds	1
 12497     0036                     BMA253_GetAccelDataXYZ@accelData:
 12498     0036                     LIGHTBLUE_SendProtocolVersion@dataIndex:	
 12499                           ; 1 bytes @ 0x16
 12500                           
 12501     0036                     setOperatingMode@mode:	
 12502                           ; 1 bytes @ 0x16
 12503                           
 12504     0036                     setMagneticChannel@mode:	
 12505                           ; 2 bytes @ 0x16
 12506                           
 12507     0036                     setXYAxisRange@mode:	
 12508                           ; 2 bytes @ 0x16
 12509                           
 12510     0036                     setZAxisRange@mode:	
 12511                           ; 2 bytes @ 0x16
 12512                           
 12513     0036                     setTemperatureEn@mode:	
 12514                           ; 2 bytes @ 0x16
 12515                           
 12516     0036                     LIGHTBLUE_TemperatureSensor@payload:	
 12517                           ; 2 bytes @ 0x16
 12518                           
 12519                           
 12520                           ; 5 bytes @ 0x16
 12521     0036                     	ds	1
 12522     0037                     BMA253_GetAccelDataXYZ@sensorValue:
 12523                           
 12524                           ; 2 bytes @ 0x17
 12525     0037                     	ds	2
 12526     0039                     LIGHTBLUE_AccelSensor@payload:
 12527                           
 12528                           ; 13 bytes @ 0x19
 12529     0039                     	ds	2
 12530     003B                     LIGHTBLUE_TemperatureSensor@temperature:
 12531                           
 12532                           ; 2 bytes @ 0x1B
 12533     003B                     	ds	5
 12534     0040                     rn487x_PrintMessage@passedMessage:
 12535                           
 12536                           ; 1 bytes @ 0x20
 12537     0040                     	ds	1
 12538     0041                     rn487x_PrintMessage@messageIndex:
 12539                           
 12540                           ; 1 bytes @ 0x21
 12541     0041                     	ds	1
 12542     0042                     RN487X_MessageHandler@messageType:
 12543                           
 12544                           ; 1 bytes @ 0x22
 12545     0042                     	ds	1
 12546     0043                     ??_RN487X_FilterData:
 12547                           
 12548                           ; 1 bytes @ 0x23
 12549     0043                     	ds	1
 12550     0044                     RN487X_FilterData@readChar:
 12551                           
 12552                           ; 1 bytes @ 0x24
 12553     0044                     	ds	2
 12554     0046                     LIGHTBLUE_AccelSensor@accelData:
 12555                           
 12556                           ; 6 bytes @ 0x26
 12557     0046                     	ds	6
 12558     004C                     ??_main:
 12559                           
 12560                           ; 1 bytes @ 0x2C
 12561     004C                     	ds	1
 12562                           
 12563                           	psect	maintext
 12564     0595                     __pmaintext:	
 12565 ;;
 12566 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
 12567 ;;
 12568 ;; *************** function _main *****************
 12569 ;; Defined at:
 12570 ;;		line 72 in file "main.c"
 12571 ;; Parameters:    Size  Location     Type
 12572 ;;		None
 12573 ;; Auto vars:     Size  Location     Type
 12574 ;;		None
 12575 ;; Return value:  Size  Location     Type
 12576 ;;                  2  2695[None  ] int 
 12577 ;; Registers used:
 12578 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12579 ;; Tracked objects:
 12580 ;;		On entry : B3F/0
 12581 ;;		On exit  : 0/0
 12582 ;;		Unchanged: 0/0
 12583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12585 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12586 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12587 ;;      Totals:         0       1       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12588 ;;Total ram usage:        2 bytes
 12589 ;; Hardware stack levels required when called: 18
 12590 ;; This function calls:
 12591 ;;		_EUSART1_Read
 12592 ;;		_EUSART1_Write
 12593 ;;		_EUSART1_is_rx_ready
 12594 ;;		_EUSART2_Read
 12595 ;;		_EUSART2_Write
 12596 ;;		_EUSART2_is_rx_ready
 12597 ;;		_LIGHTBLUE_AccelSensor
 12598 ;;		_LIGHTBLUE_Initialize
 12599 ;;		_LIGHTBLUE_LedState
 12600 ;;		_LIGHTBLUE_ParseIncomingPacket
 12601 ;;		_LIGHTBLUE_PushButton
 12602 ;;		_LIGHTBLUE_SendProtocolVersion
 12603 ;;		_LIGHTBLUE_SendSerialData
 12604 ;;		_LIGHTBLUE_TemperatureSensor
 12605 ;;		_RN487X_DataReady
 12606 ;;		_RN487X_Init
 12607 ;;		_RN487X_IsConnected
 12608 ;;		_RN487X_Read
 12609 ;;		_RN487X_SetAsyncMessageHandler
 12610 ;;		_RN487X_Write
 12611 ;;		_SYSTEM_Initialize
 12612 ;;		_TMR0_HasOverflowOccured
 12613 ;;		_begin
 12614 ;; This function is called by:
 12615 ;;		Startup code after reset
 12616 ;; This function uses a non-reentrant model
 12617 ;;
 12618                           
 12619     0595                     _main:	
 12620                           ;psect for function _main
 12621                           
 12622     0595                     l16424:	
 12623                           ;incstack = 0
 12624 ;; hardware stack exceeded
 12625                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12626                           
 12627                           
 12628                           ;main.c: 75:     SYSTEM_Initialize();
 12629     0595  3192  2222  3185   	fcall	_SYSTEM_Initialize
 12630                           
 12631                           ;main.c: 76:     RN487X_SetAsyncMessageHandler(statusBuffer, sizeof(statusBuffer));
 12632     0598  3050               	movlw	80
 12633     0599  00F1               	movwf	RN487X_SetAsyncMessageHandler@len
 12634     059A  30A0               	movlw	(low (_statusBuffer@main$F4234| (0+768)))& (0+255)
 12635     059B  3192  220C  3185   	fcall	_RN487X_SetAsyncMessageHandler
 12636     059E                     l16426:
 12637                           
 12638                           ;main.c: 79:     (INTCONbits.GIE = 1);
 12639     059E  178B               	bsf	11,7	;volatile
 12640     059F                     l16428:
 12641                           
 12642                           ;main.c: 82:     (INTCONbits.PEIE = 1);
 12643     059F  170B               	bsf	11,6	;volatile
 12644     05A0                     l16430:
 12645                           
 12646                           ;main.c: 84:     RN487X_Init();
 12647     05A0  318D  25F3  3185   	fcall	_RN487X_Init
 12648     05A3                     l16432:
 12649                           
 12650                           ;main.c: 85:     LIGHTBLUE_Initialize();
 12651     05A3  319E  26F7  3185   	fcall	_LIGHTBLUE_Initialize
 12652                           
 12653                           ;main.c: 86:     begin();
 12654     05A6  3187  270F  3185   	fcall	_begin
 12655     05A9                     l16434:
 12656                           
 12657                           ;main.c: 89:     {;main.c: 90:         if (RN487X_IsConnected() == 1)
 12658     05A9  319E  268C  3185   	fcall	_RN487X_IsConnected
 12659     05AC  3A01               	xorlw	1
 12660     05AD  1D03               	skipz
 12661     05AE  2DB0               	goto	u13771
 12662     05AF  2DB1               	goto	u13770
 12663     05B0                     u13771:
 12664     05B0  2E38               	goto	l2711
 12665     05B1                     u13770:
 12666     05B1                     l16436:
 12667                           
 12668                           ;main.c: 91:         {;main.c: 92:             if ((TMR0_HasOverflowOccured()) == 1)
 12669     05B1  3190  2000  3185   	fcall	_TMR0_HasOverflowOccured
 12670     05B4  3A01               	xorlw	1
 12671     05B5  1D03               	skipz
 12672     05B6  2DB8               	goto	u13781
 12673     05B7  2DB9               	goto	u13780
 12674     05B8                     u13781:
 12675     05B8  2DD1               	goto	l2700
 12676     05B9                     u13780:
 12677     05B9                     l16438:
 12678                           
 12679                           ;main.c: 93:             {;main.c: 94:                 (PIR0bits.TMR0IF = 0);
 12680     05B9  014E               	movlb	14	; select bank14
 12681     05BA  128C               	bcf	12,5	;volatile
 12682     05BB                     l16440:
 12683                           
 12684                           ;main.c: 96:                 LIGHTBLUE_TemperatureSensor();
 12685     05BB  3191  21F6  3185   	fcall	_LIGHTBLUE_TemperatureSensor
 12686                           
 12687                           ;main.c: 97:                 LIGHTBLUE_AccelSensor();
 12688     05BE  3196  2668  3185   	fcall	_LIGHTBLUE_AccelSensor
 12689                           
 12690                           ;main.c: 98:                 LIGHTBLUE_PushButton();
 12691     05C1  3191  217C  3185   	fcall	_LIGHTBLUE_PushButton
 12692                           
 12693                           ;main.c: 99:                 LIGHTBLUE_LedState();
 12694     05C4  3194  2470  3185   	fcall	_LIGHTBLUE_LedState
 12695                           
 12696                           ;main.c: 100:                 LIGHTBLUE_SendProtocolVersion();
 12697     05C7  3197  2728  3185   	fcall	_LIGHTBLUE_SendProtocolVersion
 12698                           
 12699                           ;main.c: 101:             }
 12700     05CA  2DA9               	goto	l16434
 12701     05CB                     l16442:
 12702                           
 12703                           ;main.c: 105:                 {;main.c: 106:                     LIGHTBLUE_ParseIncoming
      +                          Packet(RN487X_Read());
 12704     05CB  3190  2028  3185   	fcall	_RN487X_Read
 12705     05CE  3184  24BE  3185   	fcall	_LIGHTBLUE_ParseIncomingPacket
 12706     05D1                     l2700:	
 12707                           ;main.c: 107:                 }
 12708                           
 12709                           
 12710                           ;main.c: 104:                 while (RN487X_DataReady())
 12711     05D1  3193  23AD  3185   	fcall	_RN487X_DataReady
 12712     05D4  3A00               	xorlw	0
 12713     05D5  1D03               	skipz
 12714     05D6  2DD8               	goto	u13791
 12715     05D7  2DD9               	goto	u13790
 12716     05D8                     u13791:
 12717     05D8  2DCB               	goto	l16442
 12718     05D9                     u13790:
 12719     05D9  2E19               	goto	l16460
 12720     05DA                     l16444:
 12721                           
 12722                           ;main.c: 109:                 {;main.c: 110:                     lightBlueSerial[serialI
      +                          ndex] = uart[UART_CDC].Read();
 12723     05DA  3000               	movlw	low (_uart| (0+32768))
 12724     05DB  0084               	movwf	4
 12725     05DC  3098               	movlw	high (_uart| (0+32768))
 12726     05DD  0085               	movwf	5
 12727     05DE  3F01               	moviw [1]fsr0
 12728     05DF  008A               	movwf	10
 12729     05E0  3F00               	moviw [0]fsr0
 12730     05E1  000A               	callw
 12731     05E2  3185               	pagesel	$
 12732     05E3  0140               	movlb	0	; select bank0
 12733     05E4  00CC               	movwf	??_main
 12734     05E5  0851               	movf	_serialIndex,w
 12735     05E6  3EA0               	addlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12736     05E7  0086               	movwf	6
 12737     05E8  3002               	movlw	2	; select bank5/6
 12738     05E9  0087               	movwf	7
 12739     05EA  084C               	movf	??_main,w
 12740     05EB  0081               	movwf	1
 12741     05EC                     l16446:
 12742                           
 12743                           ;main.c: 111:                     if ((lightBlueSerial[serialIndex] == '\r')
 12744     05EC  0851               	movf	_serialIndex,w
 12745     05ED  3EA0               	addlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12746     05EE  0086               	movwf	6
 12747     05EF  3002               	movlw	2	; select bank5/6
 12748     05F0  0087               	movwf	7
 12749     05F1  300D               	movlw	13
 12750     05F2  0601               	xorwf	1,w
 12751     05F3  1903               	btfsc	3,2
 12752     05F4  2DF6               	goto	u13801
 12753     05F5  2DF7               	goto	u13800
 12754     05F6                     u13801:
 12755     05F6  2E08               	goto	l16452
 12756     05F7                     u13800:
 12757     05F7                     l16448:
 12758     05F7  0851               	movf	_serialIndex,w
 12759     05F8  3EA0               	addlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12760     05F9  0086               	movwf	6
 12761     05FA  3002               	movlw	2	; select bank5/6
 12762     05FB  0087               	movwf	7
 12763     05FC  300A               	movlw	10
 12764     05FD  0601               	xorwf	1,w
 12765     05FE  1903               	btfsc	3,2
 12766     05FF  2E01               	goto	u13811
 12767     0600  2E02               	goto	u13810
 12768     0601                     u13811:
 12769     0601  2E08               	goto	l16452
 12770     0602                     u13810:
 12771     0602                     l16450:
 12772     0602  304F               	movlw	79
 12773     0603  0651               	xorwf	_serialIndex,w
 12774     0604  1D03               	btfss	3,2
 12775     0605  2E07               	goto	u13821
 12776     0606  2E08               	goto	u13820
 12777     0607                     u13821:
 12778     0607  2E15               	goto	l16458
 12779     0608                     u13820:
 12780     0608                     l16452:
 12781                           
 12782                           ;main.c: 114:                     {;main.c: 115:                         lightBlueSerial
      +                          [serialIndex] = '\0';
 12783     0608  0851               	movf	_serialIndex,w
 12784     0609  3EA0               	addlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12785     060A  0086               	movwf	6
 12786     060B  3002               	movlw	2	; select bank5/6
 12787     060C  0087               	movwf	7
 12788     060D  0181               	clrf	1
 12789     060E                     l16454:
 12790                           
 12791                           ;main.c: 116:                         LIGHTBLUE_SendSerialData(lightBlueSerial);
 12792     060E  30A0               	movlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12793     060F  3186  2665  3185   	fcall	_LIGHTBLUE_SendSerialData
 12794     0612                     l16456:
 12795                           
 12796                           ;main.c: 117:                         serialIndex = 0;
 12797     0612  0140               	movlb	0	; select bank0
 12798     0613  01D1               	clrf	_serialIndex
 12799                           
 12800                           ;main.c: 118:                     }
 12801     0614  2E19               	goto	l16460
 12802     0615                     l16458:
 12803                           
 12804                           ;main.c: 120:                     {;main.c: 121:                         serialIndex++;
 12805     0615  3001               	movlw	1
 12806     0616  00CC               	movwf	??_main
 12807     0617  084C               	movf	??_main,w
 12808     0618  07D1               	addwf	_serialIndex,f
 12809     0619                     l16460:
 12810                           
 12811                           ;main.c: 108:                 while (uart[UART_CDC].DataReady())
 12812     0619  3006               	movlw	low ((_uart+6)| (0+32768))
 12813     061A  0084               	movwf	4
 12814     061B  3098               	movlw	high ((_uart+6)| (0+32768))
 12815     061C  0085               	movwf	5
 12816     061D  3F01               	moviw [1]fsr0
 12817     061E  008A               	movwf	10
 12818     061F  3F00               	moviw [0]fsr0
 12819     0620  000A               	callw
 12820     0621  3185               	pagesel	$
 12821     0622  3A00               	xorlw	0
 12822     0623  1D03               	skipz
 12823     0624  2E26               	goto	u13831
 12824     0625  2E27               	goto	u13830
 12825     0626                     u13831:
 12826     0626  2DDA               	goto	l16444
 12827     0627                     u13830:
 12828     0627  2DA9               	goto	l16434
 12829     0628                     l16462:
 12830                           
 12831                           ;main.c: 130:             {;main.c: 131:                 uart[UART_CDC].Write(RN487X_Rea
      +                          d());
 12832     0628  3190  2028  3185   	fcall	_RN487X_Read
 12833     062B  0142               	movlb	2	; select bank2
 12834     062C  00E6               	movwf	_main$5433^(0+256)
 12835                           
 12836                           ;main.c: 130:             {;main.c: 131:                 uart[UART_CDC].Write(RN487X_Rea
      +                          d());
 12837     062D  0866               	movf	_main$5433^(0+256),w
 12838     062E  00F1               	movwf	EUSART2_Write@txData
 12839     062F  3002               	movlw	low ((_uart+2)| (0+32768))
 12840     0630  0084               	movwf	4
 12841     0631  3098               	movlw	high ((_uart+2)| (0+32768))
 12842     0632  0085               	movwf	5
 12843     0633  3F01               	moviw [1]fsr0
 12844     0634  008A               	movwf	10
 12845     0635  3F00               	moviw [0]fsr0
 12846     0636  000A               	callw
 12847     0637  3185               	pagesel	$
 12848     0638                     l2711:	
 12849                           ;main.c: 132:             }
 12850                           
 12851                           
 12852                           ;main.c: 129:             while(RN487X_DataReady())
 12853     0638  3193  23AD  3185   	fcall	_RN487X_DataReady
 12854     063B  3A00               	xorlw	0
 12855     063C  1D03               	skipz
 12856     063D  2E3F               	goto	u13841
 12857     063E  2E40               	goto	u13840
 12858     063F                     u13841:
 12859     063F  2E28               	goto	l16462
 12860     0640                     u13840:
 12861     0640  2E54               	goto	l16466
 12862     0641                     l16464:
 12863                           
 12864                           ;main.c: 134:             {;main.c: 135:                 RN487X.Write(uart[UART_CDC].Rea
      +                          d());
 12865     0641  3000               	movlw	low (_uart| (0+32768))
 12866     0642  0084               	movwf	4
 12867     0643  3098               	movlw	high (_uart| (0+32768))
 12868     0644  0085               	movwf	5
 12869     0645  3F01               	moviw [1]fsr0
 12870     0646  008A               	movwf	10
 12871     0647  3F00               	moviw [0]fsr0
 12872     0648  000A               	callw
 12873     0649  3185               	pagesel	$
 12874     064A  00F6               	movwf	RN487X_Write@txData
 12875     064B  3068               	movlw	low (_RN487X| (0+32768))
 12876     064C  0084               	movwf	4
 12877     064D  3098               	movlw	high (_RN487X| (0+32768))
 12878     064E  0085               	movwf	5
 12879     064F  3F01               	moviw [1]fsr0
 12880     0650  008A               	movwf	10
 12881     0651  3F00               	moviw [0]fsr0
 12882     0652  000A               	callw
 12883     0653  3185               	pagesel	$
 12884     0654                     l16466:
 12885                           
 12886                           ;main.c: 133:             while (uart[UART_CDC].DataReady())
 12887     0654  3006               	movlw	low ((_uart+6)| (0+32768))
 12888     0655  0084               	movwf	4
 12889     0656  3098               	movlw	high ((_uart+6)| (0+32768))
 12890     0657  0085               	movwf	5
 12891     0658  3F01               	moviw [1]fsr0
 12892     0659  008A               	movwf	10
 12893     065A  3F00               	moviw [0]fsr0
 12894     065B  000A               	callw
 12895     065C  3185               	pagesel	$
 12896     065D  3A00               	xorlw	0
 12897     065E  1D03               	skipz
 12898     065F  2E61               	goto	u13851
 12899     0660  2E62               	goto	u13850
 12900     0661                     u13851:
 12901     0661  2E41               	goto	l16464
 12902     0662                     u13850:
 12903     0662  2DA9               	goto	l16434
 12904     0663  3180  2855         	ljmp	start
 12905     0665                     __end_of_main:
 12906                           
 12907                           	psect	text1
 12908     070F                     __ptext1:	
 12909 ;; *************** function _begin *****************
 12910 ;; Defined at:
 12911 ;;		line 41 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 12912 ;; Parameters:    Size  Location     Type
 12913 ;;		None
 12914 ;; Auto vars:     Size  Location     Type
 12915 ;;  stop            1    0        unsigned char 
 12916 ;; Return value:  Size  Location     Type
 12917 ;;                  1    wreg      char 
 12918 ;; Registers used:
 12919 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12920 ;; Tracked objects:
 12921 ;;		On entry : 0/0
 12922 ;;		On exit  : 0/0
 12923 ;;		Unchanged: 0/0
 12924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12929 ;;Total ram usage:        0 bytes
 12930 ;; Hardware stack levels used: 1
 12931 ;; Hardware stack levels required when called: 17
 12932 ;; This function calls:
 12933 ;;		_bitRead8
 12934 ;;		_getAngleEn
 12935 ;;		_getError
 12936 ;;		_getLowPower
 12937 ;;		_getMagneticChannel
 12938 ;;		_getOperatingMode
 12939 ;;		_getTemperatureEN
 12940 ;;		_isConnected
 12941 ;;		_setMagneticChannel
 12942 ;;		_setOperatingMode
 12943 ;;		_setTemperatureEn
 12944 ;;		_setXYAxisRange
 12945 ;;		_setZAxisRange
 12946 ;; This function is called by:
 12947 ;;		_main
 12948 ;; This function uses a non-reentrant model
 12949 ;;
 12950                           
 12951     070F                     _begin:	
 12952                           ;psect for function _begin
 12953                           
 12954     070F                     l14506:	
 12955                           ;incstack = 0
 12956 ;; hardware stack exceeded
 12957                           ; Regs used in _begin: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12958                           
 12959                           
 12960                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 44:     number = 0b000
      +                          10000;
 12961     070F  3010               	movlw	16
 12962     0710  0140               	movlb	0	; select bank0
 12963     0711  00EA               	movwf	_number
 12964     0712                     l14508:
 12965                           
 12966                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 45:     zero = bitRead
      +                          8(number, 0);
 12967     0712  3010               	movlw	16
 12968     0713  00F1               	movwf	bitRead8@reg
 12969     0714  3000               	movlw	0
 12970     0715  00F2               	movwf	bitRead8@reg+1
 12971     0716  01F3               	clrf	bitRead8@position
 12972     0717  3192  2265  3187   	fcall	_bitRead8
 12973     071A  0140               	movlb	0	; select bank0
 12974     071B  00E9               	movwf	_zero
 12975     071C                     l14510:
 12976                           
 12977                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 46:     uno = bitRead8
      +                          (number, 1);
 12978     071C  3010               	movlw	16
 12979     071D  00F1               	movwf	bitRead8@reg
 12980     071E  3000               	movlw	0
 12981     071F  00F2               	movwf	bitRead8@reg+1
 12982     0720  01F3               	clrf	bitRead8@position
 12983     0721  0AF3               	incf	bitRead8@position,f
 12984     0722  3192  2265  3187   	fcall	_bitRead8
 12985     0725  0140               	movlb	0	; select bank0
 12986     0726  00E8               	movwf	_uno
 12987     0727                     l14512:
 12988                           
 12989                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 47:     dos = bitRead8
      +                          (number, 2);
 12990     0727  3010               	movlw	16
 12991     0728  00F1               	movwf	bitRead8@reg
 12992     0729  3000               	movlw	0
 12993     072A  00F2               	movwf	bitRead8@reg+1
 12994     072B  3002               	movlw	2
 12995     072C  00F3               	movwf	bitRead8@position
 12996     072D  3192  2265  3187   	fcall	_bitRead8
 12997     0730  0140               	movlb	0	; select bank0
 12998     0731  00E7               	movwf	_dos
 12999     0732                     l14514:
 13000                           
 13001                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 48:     tres = bitRead
      +                          8(number, 3);
 13002     0732  3010               	movlw	16
 13003     0733  00F1               	movwf	bitRead8@reg
 13004     0734  3000               	movlw	0
 13005     0735  00F2               	movwf	bitRead8@reg+1
 13006     0736  3003               	movlw	3
 13007     0737  00F3               	movwf	bitRead8@position
 13008     0738  3192  2265  3187   	fcall	_bitRead8
 13009     073B  0140               	movlb	0	; select bank0
 13010     073C  00E6               	movwf	_tres
 13011     073D                     l14516:
 13012                           
 13013                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 49:     cuatro = bitRe
      +                          ad8(number, 4);
 13014     073D  3010               	movlw	16
 13015     073E  00F1               	movwf	bitRead8@reg
 13016     073F  3000               	movlw	0
 13017     0740  00F2               	movwf	bitRead8@reg+1
 13018     0741  3004               	movlw	4
 13019     0742  00F3               	movwf	bitRead8@position
 13020     0743  3192  2265  3187   	fcall	_bitRead8
 13021     0746  0140               	movlb	0	; select bank0
 13022     0747  00E5               	movwf	_cuatro
 13023     0748                     l14518:
 13024                           
 13025                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 50:     cinco = bitRea
      +                          d8(number, 5);
 13026     0748  3010               	movlw	16
 13027     0749  00F1               	movwf	bitRead8@reg
 13028     074A  3000               	movlw	0
 13029     074B  00F2               	movwf	bitRead8@reg+1
 13030     074C  3005               	movlw	5
 13031     074D  00F3               	movwf	bitRead8@position
 13032     074E  3192  2265  3187   	fcall	_bitRead8
 13033     0751  0140               	movlb	0	; select bank0
 13034     0752  00E4               	movwf	_cinco
 13035     0753                     l14520:
 13036                           
 13037                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 51:     seis = bitRead
      +                          8(number, 6);
 13038     0753  3010               	movlw	16
 13039     0754  00F1               	movwf	bitRead8@reg
 13040     0755  3000               	movlw	0
 13041     0756  00F2               	movwf	bitRead8@reg+1
 13042     0757  3006               	movlw	6
 13043     0758  00F3               	movwf	bitRead8@position
 13044     0759  3192  2265  3187   	fcall	_bitRead8
 13045     075C  0141               	movlb	1	; select bank1
 13046     075D  00E9               	movwf	_seis^(0+128)
 13047     075E                     l14522:
 13048                           
 13049                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 52:     siete = bitRea
      +                          d8(number, 7);
 13050     075E  3010               	movlw	16
 13051     075F  00F1               	movwf	bitRead8@reg
 13052     0760  3000               	movlw	0
 13053     0761  00F2               	movwf	bitRead8@reg+1
 13054     0762  3007               	movlw	7
 13055     0763  00F3               	movwf	bitRead8@position
 13056     0764  3192  2265  3187   	fcall	_bitRead8
 13057     0767  0141               	movlb	1	; select bank1
 13058     0768  00E8               	movwf	_siete^(0+128)
 13059     0769                     l14524:
 13060                           
 13061                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 66:     if (isConnecte
      +                          d() != 0) {
 13062     0769  3192  22C3  3187   	fcall	_isConnected
 13063     076C  3A00               	xorlw	0
 13064     076D  1903               	skipnz
 13065     076E  2F70               	goto	u11521
 13066     076F  2F71               	goto	u11520
 13067     0770                     u11521:
 13068     0770  2F72               	goto	l14528
 13069     0771                     u11520:
 13070     0771  2FB6               	goto	l663
 13071     0772                     l14528:
 13072                           
 13073                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 71:     setMagneticCha
      +                          nnel(0X7);
 13074     0772  3007               	movlw	7
 13075     0773  3180  20A9  3187   	fcall	_setMagneticChannel
 13076                           
 13077                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 72:     setTemperature
      +                          En(1);
 13078     0776  3001               	movlw	1
 13079     0777  3189  210C  3187   	fcall	_setTemperatureEn
 13080                           
 13081                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 73:     setOperatingMo
      +                          de(0X2);
 13082     077A  3002               	movlw	2
 13083     077B  318F  2765  3187   	fcall	_setOperatingMode
 13084                           
 13085                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 76:     setXYAxisRange
      +                          (0X1);
 13086     077E  3001               	movlw	1
 13087     077F  318A  2204  3187   	fcall	_setXYAxisRange
 13088                           
 13089                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 77:     setZAxisRange(
      +                          0X1);
 13090     0782  3001               	movlw	1
 13091     0783  3189  2149  3187   	fcall	_setZAxisRange
 13092                           
 13093                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 80:     if (getError()
      +                           != 0) {
 13094     0786  318D  2549  3187   	fcall	_getError
 13095     0789  3A00               	xorlw	0
 13096     078A  1903               	skipnz
 13097     078B  2F8D               	goto	u11531
 13098     078C  2F8E               	goto	u11530
 13099     078D                     u11531:
 13100     078D  2F8F               	goto	l14532
 13101     078E                     u11530:
 13102     078E  2FB6               	goto	l663
 13103     078F                     l14532:
 13104                           
 13105                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 85:     if (getLowPowe
      +                          r() != 0X0) {
 13106     078F  3192  2238  3187   	fcall	_getLowPower
 13107     0792  3A00               	xorlw	0
 13108     0793  1903               	skipnz
 13109     0794  2F96               	goto	u11541
 13110     0795  2F97               	goto	u11540
 13111     0796                     u11541:
 13112     0796  2F98               	goto	l14536
 13113     0797                     u11540:
 13114     0797  2FB6               	goto	l663
 13115     0798                     l14536:
 13116                           
 13117                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 90:     if (getOperati
      +                          ngMode() != 0X2) {
 13118     0798  318C  24A2  3187   	fcall	_getOperatingMode
 13119     079B  3A02               	xorlw	2
 13120     079C  1903               	skipnz
 13121     079D  2F9F               	goto	u11551
 13122     079E  2FA0               	goto	u11550
 13123     079F                     u11551:
 13124     079F  2FA1               	goto	l14540
 13125     07A0                     u11550:
 13126     07A0  2FB6               	goto	l663
 13127     07A1                     l14540:
 13128                           
 13129                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 95:     if (getMagneti
      +                          cChannel() != 0X7) {
 13130     07A1  3183  2378  3187   	fcall	_getMagneticChannel
 13131     07A4  3A07               	xorlw	7
 13132     07A5  1903               	skipnz
 13133     07A6  2FA8               	goto	u11561
 13134     07A7  2FA9               	goto	u11560
 13135     07A8                     u11561:
 13136     07A8  2FAA               	goto	l14544
 13137     07A9                     u11560:
 13138     07A9  2FB6               	goto	l663
 13139     07AA                     l14544:
 13140                           
 13141                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 100:     if (getTemper
      +                          atureEN() != 0X1) {
 13142     07AA  3191  21CB  3187   	fcall	_getTemperatureEN
 13143     07AD  3A01               	xorlw	1
 13144     07AE  1903               	skipnz
 13145     07AF  2FB1               	goto	u11571
 13146     07B0  2FB2               	goto	u11570
 13147     07B1                     u11571:
 13148     07B1  2FB3               	goto	l14548
 13149     07B2                     u11570:
 13150     07B2  2FB6               	goto	l663
 13151     07B3                     l14548:
 13152                           
 13153                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 105:     if (getAngleE
      +                          n() != 0X0) {
 13154     07B3  318C  24F5  3187   	fcall	_getAngleEn
 13155     07B6                     l663:
 13156     07B6  0008               	return
 13157     07B7                     __end_of_begin:
 13158                           
 13159                           	psect	text2
 13160     0949                     __ptext2:	
 13161 ;; *************** function _setZAxisRange *****************
 13162 ;; Defined at:
 13163 ;;		line 1034 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13164 ;; Parameters:    Size  Location     Type
 13165 ;;  zAxisRange      1    wreg     unsigned char 
 13166 ;; Auto vars:     Size  Location     Type
 13167 ;;  zAxisRange      1   21[BANK0 ] unsigned char 
 13168 ;;  mode            2   22[BANK0 ] unsigned short 
 13169 ;; Return value:  Size  Location     Type
 13170 ;;                  1    wreg      char 
 13171 ;; Registers used:
 13172 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13173 ;; Tracked objects:
 13174 ;;		On entry : 0/0
 13175 ;;		On exit  : 0/0
 13176 ;;		Unchanged: 0/0
 13177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13179 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13180 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13181 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13182 ;;Total ram usage:        5 bytes
 13183 ;; Hardware stack levels used: 1
 13184 ;; Hardware stack levels required when called: 16
 13185 ;; This function calls:
 13186 ;;		_bitWrite8
 13187 ;;		_getError
 13188 ;;		_readRegister
 13189 ;;		_writeRegister
 13190 ;; This function is called by:
 13191 ;;		_begin
 13192 ;; This function uses a non-reentrant model
 13193 ;;
 13194                           
 13195     0949                     _setZAxisRange:	
 13196                           ;psect for function _setZAxisRange
 13197                           
 13198                           
 13199                           ;incstack = 0
 13200 ;; hardware stack exceeded
 13201                           ; Regs used in _setZAxisRange: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13202                           ;setZAxisRange@zAxisRange stored from wreg
 13203     0949  0140               	movlb	0	; select bank0
 13204     094A  00B5               	movwf	setZAxisRange@zAxisRange
 13205     094B                     l13860:
 13206     094B                     l13862:
 13207                           
 13208                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1036:     mode = readR
      +                          egister(TMAG5273_REG_SENSOR_CONFIG_2);
 13209     094B  3003               	movlw	3
 13210     094C  3190  2034  3189   	fcall	_readRegister
 13211     094F  0140               	movlb	0	; select bank0
 13212     0950  00B3               	movwf	??_setZAxisRange
 13213     0951  01B4               	clrf	??_setZAxisRange+1
 13214     0952  0833               	movf	??_setZAxisRange,w
 13215     0953  00B6               	movwf	setZAxisRange@mode
 13216     0954  0834               	movf	??_setZAxisRange+1,w
 13217     0955  00B7               	movwf	setZAxisRange@mode+1
 13218     0956                     l13864:
 13219                           
 13220                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1039:     if (zAxisRan
      +                          ge == 0X0)
 13221     0956  0835               	movf	setZAxisRange@zAxisRange,w
 13222     0957  1D03               	btfss	3,2
 13223     0958  295A               	goto	u10691
 13224     0959  295B               	goto	u10690
 13225     095A                     u10691:
 13226     095A  296C               	goto	l13870
 13227     095B                     u10690:
 13228     095B                     l13866:
 13229                           
 13230                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1040:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1042:         bitWrite8(mode, 0, 
      +                          0);
 13231     095B  0837               	movf	setZAxisRange@mode+1,w
 13232     095C  00F2               	movwf	bitWrite8@reg+1
 13233     095D  0836               	movf	setZAxisRange@mode,w
 13234     095E  00F1               	movwf	bitWrite8@reg
 13235     095F  01F3               	clrf	bitWrite8@position
 13236     0960  01F4               	clrf	bitWrite8@value
 13237     0961  3192  227C  3189   	fcall	_bitWrite8
 13238     0964                     l13868:
 13239                           
 13240                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1044:         writeReg
      +                          ister(TMAG5273_REG_SENSOR_CONFIG_2, mode);
 13241     0964  0140               	movlb	0	; select bank0
 13242     0965  0836               	movf	setZAxisRange@mode,w
 13243     0966  00A6               	movwf	writeRegister@data
 13244     0967  3003               	movlw	3
 13245     0968  3190  2005  3189   	fcall	_writeRegister
 13246                           
 13247                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1045:     } else if (z
      +                          AxisRange == 0X1)
 13248     096B  2982               	goto	l13876
 13249     096C                     l13870:
 13250     096C  0335               	decf	setZAxisRange@zAxisRange,w
 13251     096D  1D03               	btfss	3,2
 13252     096E  2970               	goto	u10701
 13253     096F  2971               	goto	u10700
 13254     0970                     u10701:
 13255     0970  2982               	goto	l13876
 13256     0971                     u10700:
 13257     0971                     l13872:
 13258                           
 13259                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1046:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1047:         bitWrite8(mode, 0, 
      +                          1);
 13260     0971  0837               	movf	setZAxisRange@mode+1,w
 13261     0972  00F2               	movwf	bitWrite8@reg+1
 13262     0973  0836               	movf	setZAxisRange@mode,w
 13263     0974  00F1               	movwf	bitWrite8@reg
 13264     0975  01F3               	clrf	bitWrite8@position
 13265     0976  01F4               	clrf	bitWrite8@value
 13266     0977  0AF4               	incf	bitWrite8@value,f
 13267     0978  3192  227C  3189   	fcall	_bitWrite8
 13268     097B                     l13874:
 13269                           
 13270                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1048:         writeReg
      +                          ister(TMAG5273_REG_SENSOR_CONFIG_2, mode);
 13271     097B  0140               	movlb	0	; select bank0
 13272     097C  0836               	movf	setZAxisRange@mode,w
 13273     097D  00A6               	movwf	writeRegister@data
 13274     097E  3003               	movlw	3
 13275     097F  3190  2005  3189   	fcall	_writeRegister
 13276     0982                     l13876:
 13277                           
 13278                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1051:     return getEr
      +                          ror();;	Return value of _setZAxisRange is never used
 13279     0982  318D  2549  3189   	fcall	_getError
 13280     0985                     l875:
 13281     0985  0008               	return
 13282     0986                     __end_of_setZAxisRange:
 13283                           
 13284                           	psect	text3
 13285     0A04                     __ptext3:	
 13286 ;; *************** function _setXYAxisRange *****************
 13287 ;; Defined at:
 13288 ;;		line 1007 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13289 ;; Parameters:    Size  Location     Type
 13290 ;;  xyAxisRange     1    wreg     unsigned char 
 13291 ;; Auto vars:     Size  Location     Type
 13292 ;;  xyAxisRange     1   21[BANK0 ] unsigned char 
 13293 ;;  mode            2   22[BANK0 ] unsigned short 
 13294 ;; Return value:  Size  Location     Type
 13295 ;;                  1    wreg      char 
 13296 ;; Registers used:
 13297 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13298 ;; Tracked objects:
 13299 ;;		On entry : 0/0
 13300 ;;		On exit  : 0/0
 13301 ;;		Unchanged: 0/0
 13302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13304 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13305 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13306 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13307 ;;Total ram usage:        5 bytes
 13308 ;; Hardware stack levels used: 1
 13309 ;; Hardware stack levels required when called: 16
 13310 ;; This function calls:
 13311 ;;		_bitWrite8
 13312 ;;		_getError
 13313 ;;		_readRegister
 13314 ;;		_writeRegister
 13315 ;; This function is called by:
 13316 ;;		_begin
 13317 ;; This function uses a non-reentrant model
 13318 ;;
 13319                           
 13320     0A04                     _setXYAxisRange:	
 13321                           ;psect for function _setXYAxisRange
 13322                           
 13323                           
 13324                           ;incstack = 0
 13325 ;; hardware stack exceeded
 13326                           ; Regs used in _setXYAxisRange: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13327                           ;setXYAxisRange@xyAxisRange stored from wreg
 13328     0A04  0140               	movlb	0	; select bank0
 13329     0A05  00B5               	movwf	setXYAxisRange@xyAxisRange
 13330     0A06                     l13840:
 13331     0A06                     l13842:
 13332                           
 13333                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1009:     mode = readR
      +                          egister(TMAG5273_REG_SENSOR_CONFIG_2);
 13334     0A06  3003               	movlw	3
 13335     0A07  3190  2034  318A   	fcall	_readRegister
 13336     0A0A  0140               	movlb	0	; select bank0
 13337     0A0B  00B3               	movwf	??_setXYAxisRange
 13338     0A0C  01B4               	clrf	??_setXYAxisRange+1
 13339     0A0D  0833               	movf	??_setXYAxisRange,w
 13340     0A0E  00B6               	movwf	setXYAxisRange@mode
 13341     0A0F  0834               	movf	??_setXYAxisRange+1,w
 13342     0A10  00B7               	movwf	setXYAxisRange@mode+1
 13343     0A11                     l13844:
 13344                           
 13345                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1012:     if (xyAxisRa
      +                          nge == 0X0)
 13346     0A11  0835               	movf	setXYAxisRange@xyAxisRange,w
 13347     0A12  1D03               	btfss	3,2
 13348     0A13  2A15               	goto	u10671
 13349     0A14  2A16               	goto	u10670
 13350     0A15                     u10671:
 13351     0A15  2A28               	goto	l13850
 13352     0A16                     u10670:
 13353     0A16                     l13846:
 13354                           
 13355                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1013:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1015:         bitWrite8(mode, 1, 
      +                          0);
 13356     0A16  0837               	movf	setXYAxisRange@mode+1,w
 13357     0A17  00F2               	movwf	bitWrite8@reg+1
 13358     0A18  0836               	movf	setXYAxisRange@mode,w
 13359     0A19  00F1               	movwf	bitWrite8@reg
 13360     0A1A  01F3               	clrf	bitWrite8@position
 13361     0A1B  0AF3               	incf	bitWrite8@position,f
 13362     0A1C  01F4               	clrf	bitWrite8@value
 13363     0A1D  3192  227C  318A   	fcall	_bitWrite8
 13364     0A20                     l13848:
 13365                           
 13366                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1017:         writeReg
      +                          ister(TMAG5273_REG_SENSOR_CONFIG_2, mode);
 13367     0A20  0140               	movlb	0	; select bank0
 13368     0A21  0836               	movf	setXYAxisRange@mode,w
 13369     0A22  00A6               	movwf	writeRegister@data
 13370     0A23  3003               	movlw	3
 13371     0A24  3190  2005  318A   	fcall	_writeRegister
 13372                           
 13373                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1018:     } else if (x
      +                          yAxisRange == 0X1)
 13374     0A27  2A3F               	goto	l13856
 13375     0A28                     l13850:
 13376     0A28  0335               	decf	setXYAxisRange@xyAxisRange,w
 13377     0A29  1D03               	btfss	3,2
 13378     0A2A  2A2C               	goto	u10681
 13379     0A2B  2A2D               	goto	u10680
 13380     0A2C                     u10681:
 13381     0A2C  2A3F               	goto	l13856
 13382     0A2D                     u10680:
 13383     0A2D                     l13852:
 13384                           
 13385                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1019:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1020:         bitWrite8(mode, 1, 
      +                          1);
 13386     0A2D  0837               	movf	setXYAxisRange@mode+1,w
 13387     0A2E  00F2               	movwf	bitWrite8@reg+1
 13388     0A2F  0836               	movf	setXYAxisRange@mode,w
 13389     0A30  00F1               	movwf	bitWrite8@reg
 13390     0A31  01F3               	clrf	bitWrite8@position
 13391     0A32  0AF3               	incf	bitWrite8@position,f
 13392     0A33  01F4               	clrf	bitWrite8@value
 13393     0A34  0AF4               	incf	bitWrite8@value,f
 13394     0A35  3192  227C  318A   	fcall	_bitWrite8
 13395     0A38                     l13854:
 13396                           
 13397                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1021:         writeReg
      +                          ister(TMAG5273_REG_SENSOR_CONFIG_2, mode);
 13398     0A38  0140               	movlb	0	; select bank0
 13399     0A39  0836               	movf	setXYAxisRange@mode,w
 13400     0A3A  00A6               	movwf	writeRegister@data
 13401     0A3B  3003               	movlw	3
 13402     0A3C  3190  2005  318A   	fcall	_writeRegister
 13403     0A3F                     l13856:
 13404                           
 13405                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1024:     return getEr
      +                          ror();;	Return value of _setXYAxisRange is never used
 13406     0A3F  318D  2549  318A   	fcall	_getError
 13407     0A42                     l869:
 13408     0A42  0008               	return
 13409     0A43                     __end_of_setXYAxisRange:
 13410                           
 13411                           	psect	text4
 13412     090C                     __ptext4:	
 13413 ;; *************** function _setTemperatureEn *****************
 13414 ;; Defined at:
 13415 ;;		line 1133 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13416 ;; Parameters:    Size  Location     Type
 13417 ;;  temperatureE    1    wreg     _Bool 
 13418 ;; Auto vars:     Size  Location     Type
 13419 ;;  temperatureE    1   21[BANK0 ] _Bool 
 13420 ;;  mode            2   22[BANK0 ] unsigned short 
 13421 ;; Return value:  Size  Location     Type
 13422 ;;                  1    wreg      char 
 13423 ;; Registers used:
 13424 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13425 ;; Tracked objects:
 13426 ;;		On entry : 0/0
 13427 ;;		On exit  : 0/0
 13428 ;;		Unchanged: 0/0
 13429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13431 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13432 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13433 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13434 ;;Total ram usage:        5 bytes
 13435 ;; Hardware stack levels used: 1
 13436 ;; Hardware stack levels required when called: 16
 13437 ;; This function calls:
 13438 ;;		_bitWrite8
 13439 ;;		_getError
 13440 ;;		_readRegister
 13441 ;;		_writeRegister
 13442 ;; This function is called by:
 13443 ;;		_begin
 13444 ;; This function uses a non-reentrant model
 13445 ;;
 13446                           
 13447     090C                     _setTemperatureEn:	
 13448                           ;psect for function _setTemperatureEn
 13449                           
 13450                           
 13451                           ;incstack = 0
 13452 ;; hardware stack exceeded
 13453                           ; Regs used in _setTemperatureEn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13454                           ;setTemperatureEn@temperatureEnable stored from wreg
 13455     090C  0140               	movlb	0	; select bank0
 13456     090D  00B5               	movwf	setTemperatureEn@temperatureEnable
 13457     090E                     l13788:
 13458     090E                     l13790:
 13459                           
 13460                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1135:     mode = readR
      +                          egister(TMAG5273_REG_T_CONFIG);
 13461     090E  3007               	movlw	7
 13462     090F  3190  2034  3189   	fcall	_readRegister
 13463     0912  0140               	movlb	0	; select bank0
 13464     0913  00B3               	movwf	??_setTemperatureEn
 13465     0914  01B4               	clrf	??_setTemperatureEn+1
 13466     0915  0833               	movf	??_setTemperatureEn,w
 13467     0916  00B6               	movwf	setTemperatureEn@mode
 13468     0917  0834               	movf	??_setTemperatureEn+1,w
 13469     0918  00B7               	movwf	setTemperatureEn@mode+1
 13470     0919                     l13792:
 13471                           
 13472                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1138:     if (temperat
      +                          ureEnable == 0)
 13473     0919  0835               	movf	setTemperatureEn@temperatureEnable,w
 13474     091A  1D03               	btfss	3,2
 13475     091B  291D               	goto	u10611
 13476     091C  291E               	goto	u10610
 13477     091D                     u10611:
 13478     091D  292F               	goto	l13798
 13479     091E                     u10610:
 13480     091E                     l13794:
 13481                           
 13482                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1139:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1141:         bitWrite8(mode, 0, 
      +                          0);
 13483     091E  0837               	movf	setTemperatureEn@mode+1,w
 13484     091F  00F2               	movwf	bitWrite8@reg+1
 13485     0920  0836               	movf	setTemperatureEn@mode,w
 13486     0921  00F1               	movwf	bitWrite8@reg
 13487     0922  01F3               	clrf	bitWrite8@position
 13488     0923  01F4               	clrf	bitWrite8@value
 13489     0924  3192  227C  3189   	fcall	_bitWrite8
 13490     0927                     l13796:
 13491                           
 13492                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1143:         writeReg
      +                          ister(TMAG5273_REG_T_CONFIG, mode);
 13493     0927  0140               	movlb	0	; select bank0
 13494     0928  0836               	movf	setTemperatureEn@mode,w
 13495     0929  00A6               	movwf	writeRegister@data
 13496     092A  3007               	movlw	7
 13497     092B  3190  2005  3189   	fcall	_writeRegister
 13498                           
 13499                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1144:     } else if (t
      +                          emperatureEnable == 1)
 13500     092E  2945               	goto	l13804
 13501     092F                     l13798:
 13502     092F  0335               	decf	setTemperatureEn@temperatureEnable,w
 13503     0930  1D03               	btfss	3,2
 13504     0931  2933               	goto	u10621
 13505     0932  2934               	goto	u10620
 13506     0933                     u10621:
 13507     0933  2945               	goto	l13804
 13508     0934                     u10620:
 13509     0934                     l13800:
 13510                           
 13511                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1145:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1146:         bitWrite8(mode, 0, 
      +                          1);
 13512     0934  0837               	movf	setTemperatureEn@mode+1,w
 13513     0935  00F2               	movwf	bitWrite8@reg+1
 13514     0936  0836               	movf	setTemperatureEn@mode,w
 13515     0937  00F1               	movwf	bitWrite8@reg
 13516     0938  01F3               	clrf	bitWrite8@position
 13517     0939  01F4               	clrf	bitWrite8@value
 13518     093A  0AF4               	incf	bitWrite8@value,f
 13519     093B  3192  227C  3189   	fcall	_bitWrite8
 13520     093E                     l13802:
 13521                           
 13522                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1147:         writeReg
      +                          ister(TMAG5273_REG_T_CONFIG, mode);
 13523     093E  0140               	movlb	0	; select bank0
 13524     093F  0836               	movf	setTemperatureEn@mode,w
 13525     0940  00A6               	movwf	writeRegister@data
 13526     0941  3007               	movlw	7
 13527     0942  3190  2005  3189   	fcall	_writeRegister
 13528     0945                     l13804:
 13529                           
 13530                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1150:     return getEr
      +                          ror();;	Return value of _setTemperatureEn is never used
 13531     0945  318D  2549  3189   	fcall	_getError
 13532     0948                     l893:
 13533     0948  0008               	return
 13534     0949                     __end_of_setTemperatureEn:
 13535                           
 13536                           	psect	text5
 13537     0F65                     __ptext5:	
 13538 ;; *************** function _setOperatingMode *****************
 13539 ;; Defined at:
 13540 ;;		line 526 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13541 ;; Parameters:    Size  Location     Type
 13542 ;;  opMode          1    wreg     unsigned char 
 13543 ;; Auto vars:     Size  Location     Type
 13544 ;;  opMode          1   21[BANK0 ] unsigned char 
 13545 ;;  mode            2   22[BANK0 ] unsigned short 
 13546 ;; Return value:  Size  Location     Type
 13547 ;;                  1    wreg      char 
 13548 ;; Registers used:
 13549 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13550 ;; Tracked objects:
 13551 ;;		On entry : 0/0
 13552 ;;		On exit  : 0/0
 13553 ;;		Unchanged: 0/0
 13554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13556 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13557 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13558 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13559 ;;Total ram usage:        5 bytes
 13560 ;; Hardware stack levels used: 1
 13561 ;; Hardware stack levels required when called: 16
 13562 ;; This function calls:
 13563 ;;		_bitWrite8
 13564 ;;		_getError
 13565 ;;		_readRegister
 13566 ;;		_writeRegister
 13567 ;; This function is called by:
 13568 ;;		_begin
 13569 ;; This function uses a non-reentrant model
 13570 ;;
 13571                           
 13572     0F65                     _setOperatingMode:	
 13573                           ;psect for function _setOperatingMode
 13574                           
 13575                           
 13576                           ;incstack = 0
 13577 ;; hardware stack exceeded
 13578                           ; Regs used in _setOperatingMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13579                           ;setOperatingMode@opMode stored from wreg
 13580     0F65  0140               	movlb	0	; select bank0
 13581     0F66  00B5               	movwf	setOperatingMode@opMode
 13582     0F67                     l13808:
 13583     0F67                     l13810:
 13584                           
 13585                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 528:     mode = readRe
      +                          gister(TMAG5273_REG_DEVICE_CONFIG_2);
 13586     0F67  3001               	movlw	1
 13587     0F68  3190  2034  318F   	fcall	_readRegister
 13588     0F6B  0140               	movlb	0	; select bank0
 13589     0F6C  00B3               	movwf	??_setOperatingMode
 13590     0F6D  01B4               	clrf	??_setOperatingMode+1
 13591     0F6E  0833               	movf	??_setOperatingMode,w
 13592     0F6F  00B6               	movwf	setOperatingMode@mode
 13593     0F70  0834               	movf	??_setOperatingMode+1,w
 13594     0F71  00B7               	movwf	setOperatingMode@mode+1
 13595     0F72                     l13812:
 13596                           
 13597                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 531:     if (opMode ==
      +                           0)
 13598     0F72  0835               	movf	setOperatingMode@opMode,w
 13599     0F73  1D03               	btfss	3,2
 13600     0F74  2F76               	goto	u10631
 13601     0F75  2F77               	goto	u10630
 13602     0F76                     u10631:
 13603     0F76  2F93               	goto	l13818
 13604     0F77                     u10630:
 13605     0F77                     l13814:
 13606                           
 13607                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 532:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 534:         bitWrite8(mode, 0, 0)
      +                          ;
 13608     0F77  0837               	movf	setOperatingMode@mode+1,w
 13609     0F78  00F2               	movwf	bitWrite8@reg+1
 13610     0F79  0836               	movf	setOperatingMode@mode,w
 13611     0F7A  00F1               	movwf	bitWrite8@reg
 13612     0F7B  01F3               	clrf	bitWrite8@position
 13613     0F7C  01F4               	clrf	bitWrite8@value
 13614     0F7D  3192  227C  318F   	fcall	_bitWrite8
 13615                           
 13616                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 536:         bitWrite8
      +                          (mode, 1, 0);
 13617     0F80  0140               	movlb	0	; select bank0
 13618     0F81  0837               	movf	setOperatingMode@mode+1,w
 13619     0F82  00F2               	movwf	bitWrite8@reg+1
 13620     0F83  0836               	movf	setOperatingMode@mode,w
 13621     0F84  00F1               	movwf	bitWrite8@reg
 13622     0F85  01F3               	clrf	bitWrite8@position
 13623     0F86  0AF3               	incf	bitWrite8@position,f
 13624     0F87  01F4               	clrf	bitWrite8@value
 13625     0F88  3192  227C  318F   	fcall	_bitWrite8
 13626     0F8B                     l13816:
 13627                           
 13628                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 537:         writeRegi
      +                          ster(TMAG5273_REG_DEVICE_CONFIG_2, mode);
 13629     0F8B  0140               	movlb	0	; select bank0
 13630     0F8C  0836               	movf	setOperatingMode@mode,w
 13631     0F8D  00A6               	movwf	writeRegister@data
 13632     0F8E  3001               	movlw	1
 13633     0F8F  3190  2005  318F   	fcall	_writeRegister
 13634                           
 13635                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 538:     } else if (op
      +                          Mode == 0X1)
 13636     0F92  2FFC               	goto	l13836
 13637     0F93                     l13818:
 13638     0F93  0335               	decf	setOperatingMode@opMode,w
 13639     0F94  1D03               	btfss	3,2
 13640     0F95  2F97               	goto	u10641
 13641     0F96  2F98               	goto	u10640
 13642     0F97                     u10641:
 13643     0F97  2FB5               	goto	l13824
 13644     0F98                     u10640:
 13645     0F98                     l13820:
 13646                           
 13647                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 539:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 541:         bitWrite8(mode, 0, 1)
      +                          ;
 13648     0F98  0837               	movf	setOperatingMode@mode+1,w
 13649     0F99  00F2               	movwf	bitWrite8@reg+1
 13650     0F9A  0836               	movf	setOperatingMode@mode,w
 13651     0F9B  00F1               	movwf	bitWrite8@reg
 13652     0F9C  01F3               	clrf	bitWrite8@position
 13653     0F9D  01F4               	clrf	bitWrite8@value
 13654     0F9E  0AF4               	incf	bitWrite8@value,f
 13655     0F9F  3192  227C  318F   	fcall	_bitWrite8
 13656                           
 13657                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 543:         bitWrite8
      +                          (mode, 1, 0);
 13658     0FA2  0140               	movlb	0	; select bank0
 13659     0FA3  0837               	movf	setOperatingMode@mode+1,w
 13660     0FA4  00F2               	movwf	bitWrite8@reg+1
 13661     0FA5  0836               	movf	setOperatingMode@mode,w
 13662     0FA6  00F1               	movwf	bitWrite8@reg
 13663     0FA7  01F3               	clrf	bitWrite8@position
 13664     0FA8  0AF3               	incf	bitWrite8@position,f
 13665     0FA9  01F4               	clrf	bitWrite8@value
 13666     0FAA  3192  227C  318F   	fcall	_bitWrite8
 13667     0FAD                     l13822:
 13668                           
 13669                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 544:         writeRegi
      +                          ster(TMAG5273_REG_DEVICE_CONFIG_2, mode);
 13670     0FAD  0140               	movlb	0	; select bank0
 13671     0FAE  0836               	movf	setOperatingMode@mode,w
 13672     0FAF  00A6               	movwf	writeRegister@data
 13673     0FB0  3001               	movlw	1
 13674     0FB1  3190  2005  318F   	fcall	_writeRegister
 13675                           
 13676                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 545:     } else if (op
      +                          Mode == 0X2)
 13677     0FB4  2FFC               	goto	l13836
 13678     0FB5                     l13824:
 13679     0FB5  3002               	movlw	2
 13680     0FB6  0635               	xorwf	setOperatingMode@opMode,w
 13681     0FB7  1D03               	btfss	3,2
 13682     0FB8  2FBA               	goto	u10651
 13683     0FB9  2FBB               	goto	u10650
 13684     0FBA                     u10651:
 13685     0FBA  2FD8               	goto	l13830
 13686     0FBB                     u10650:
 13687     0FBB                     l13826:
 13688                           
 13689                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 546:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 547:         bitWrite8(mode, 0, 0)
      +                          ;
 13690     0FBB  0837               	movf	setOperatingMode@mode+1,w
 13691     0FBC  00F2               	movwf	bitWrite8@reg+1
 13692     0FBD  0836               	movf	setOperatingMode@mode,w
 13693     0FBE  00F1               	movwf	bitWrite8@reg
 13694     0FBF  01F3               	clrf	bitWrite8@position
 13695     0FC0  01F4               	clrf	bitWrite8@value
 13696     0FC1  3192  227C  318F   	fcall	_bitWrite8
 13697                           
 13698                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 548:         bitWrite8
      +                          (mode, 1, 1);
 13699     0FC4  0140               	movlb	0	; select bank0
 13700     0FC5  0837               	movf	setOperatingMode@mode+1,w
 13701     0FC6  00F2               	movwf	bitWrite8@reg+1
 13702     0FC7  0836               	movf	setOperatingMode@mode,w
 13703     0FC8  00F1               	movwf	bitWrite8@reg
 13704     0FC9  01F3               	clrf	bitWrite8@position
 13705     0FCA  0AF3               	incf	bitWrite8@position,f
 13706     0FCB  01F4               	clrf	bitWrite8@value
 13707     0FCC  0AF4               	incf	bitWrite8@value,f
 13708     0FCD  3192  227C  318F   	fcall	_bitWrite8
 13709     0FD0                     l13828:
 13710                           
 13711                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 549:         writeRegi
      +                          ster(TMAG5273_REG_DEVICE_CONFIG_2, mode);
 13712     0FD0  0140               	movlb	0	; select bank0
 13713     0FD1  0836               	movf	setOperatingMode@mode,w
 13714     0FD2  00A6               	movwf	writeRegister@data
 13715     0FD3  3001               	movlw	1
 13716     0FD4  3190  2005  318F   	fcall	_writeRegister
 13717                           
 13718                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 550:     } else if (op
      +                          Mode == 0X3)
 13719     0FD7  2FFC               	goto	l13836
 13720     0FD8                     l13830:
 13721     0FD8  3003               	movlw	3
 13722     0FD9  0635               	xorwf	setOperatingMode@opMode,w
 13723     0FDA  1D03               	btfss	3,2
 13724     0FDB  2FDD               	goto	u10661
 13725     0FDC  2FDE               	goto	u10660
 13726     0FDD                     u10661:
 13727     0FDD  2FFC               	goto	l759
 13728     0FDE                     u10660:
 13729     0FDE                     l13832:
 13730                           
 13731                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 551:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 552:         bitWrite8(mode, 0, 1)
      +                          ;
 13732     0FDE  0837               	movf	setOperatingMode@mode+1,w
 13733     0FDF  00F2               	movwf	bitWrite8@reg+1
 13734     0FE0  0836               	movf	setOperatingMode@mode,w
 13735     0FE1  00F1               	movwf	bitWrite8@reg
 13736     0FE2  01F3               	clrf	bitWrite8@position
 13737     0FE3  01F4               	clrf	bitWrite8@value
 13738     0FE4  0AF4               	incf	bitWrite8@value,f
 13739     0FE5  3192  227C  318F   	fcall	_bitWrite8
 13740                           
 13741                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 553:         bitWrite8
      +                          (mode, 1, 1);
 13742     0FE8  0140               	movlb	0	; select bank0
 13743     0FE9  0837               	movf	setOperatingMode@mode+1,w
 13744     0FEA  00F2               	movwf	bitWrite8@reg+1
 13745     0FEB  0836               	movf	setOperatingMode@mode,w
 13746     0FEC  00F1               	movwf	bitWrite8@reg
 13747     0FED  01F3               	clrf	bitWrite8@position
 13748     0FEE  0AF3               	incf	bitWrite8@position,f
 13749     0FEF  01F4               	clrf	bitWrite8@value
 13750     0FF0  0AF4               	incf	bitWrite8@value,f
 13751     0FF1  3192  227C  318F   	fcall	_bitWrite8
 13752     0FF4                     l13834:
 13753                           
 13754                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 554:         writeRegi
      +                          ster(TMAG5273_REG_DEVICE_CONFIG_2, mode);
 13755     0FF4  0140               	movlb	0	; select bank0
 13756     0FF5  0836               	movf	setOperatingMode@mode,w
 13757     0FF6  00A6               	movwf	writeRegister@data
 13758     0FF7  3001               	movlw	1
 13759     0FF8  3190  2005  318F   	fcall	_writeRegister
 13760     0FFB  2FFC               	goto	l13836
 13761     0FFC                     l759:
 13762     0FFC                     l13836:
 13763                           
 13764                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 557:     return getErr
      +                          or();;	Return value of _setOperatingMode is never used
 13765     0FFC  318D  2549  318F   	fcall	_getError
 13766     0FFF                     l763:
 13767     0FFF  0008               	return
 13768     1000                     __end_of_setOperatingMode:
 13769                           
 13770                           	psect	text6
 13771     00A9                     __ptext6:	
 13772 ;; *************** function _setMagneticChannel *****************
 13773 ;; Defined at:
 13774 ;;		line 578 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13775 ;; Parameters:    Size  Location     Type
 13776 ;;  channelMode     1    wreg     unsigned char 
 13777 ;; Auto vars:     Size  Location     Type
 13778 ;;  channelMode     1   21[BANK0 ] unsigned char 
 13779 ;;  mode            2   22[BANK0 ] unsigned short 
 13780 ;; Return value:  Size  Location     Type
 13781 ;;                  1    wreg      char 
 13782 ;; Registers used:
 13783 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13784 ;; Tracked objects:
 13785 ;;		On entry : 0/0
 13786 ;;		On exit  : 0/0
 13787 ;;		Unchanged: 0/0
 13788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13790 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13791 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13792 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13793 ;;Total ram usage:        5 bytes
 13794 ;; Hardware stack levels used: 1
 13795 ;; Hardware stack levels required when called: 16
 13796 ;; This function calls:
 13797 ;;		_bitWrite8
 13798 ;;		_getError
 13799 ;;		_readRegister
 13800 ;;		_writeRegister
 13801 ;; This function is called by:
 13802 ;;		_begin
 13803 ;; This function uses a non-reentrant model
 13804 ;;
 13805                           
 13806     00A9                     _setMagneticChannel:	
 13807                           ;psect for function _setMagneticChannel
 13808                           
 13809                           
 13810                           ;incstack = 0
 13811 ;; hardware stack exceeded
 13812                           ; Regs used in _setMagneticChannel: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13813                           ;setMagneticChannel@channelMode stored from wreg
 13814     00A9  0140               	movlb	0	; select bank0
 13815     00AA  00B5               	movwf	setMagneticChannel@channelMode
 13816     00AB                     l13708:
 13817     00AB                     l13710:
 13818                           
 13819                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 580:     mode = readRe
      +                          gister(TMAG5273_REG_SENSOR_CONFIG_1);
 13820     00AB  3002               	movlw	2
 13821     00AC  3190  2034  3180   	fcall	_readRegister
 13822     00AF  0140               	movlb	0	; select bank0
 13823     00B0  00B3               	movwf	??_setMagneticChannel
 13824     00B1  01B4               	clrf	??_setMagneticChannel+1
 13825     00B2  0833               	movf	??_setMagneticChannel,w
 13826     00B3  00B6               	movwf	setMagneticChannel@mode
 13827     00B4  0834               	movf	??_setMagneticChannel+1,w
 13828     00B5  00B7               	movwf	setMagneticChannel@mode+1
 13829     00B6                     l13712:
 13830                           
 13831                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 583:     if (channelMo
      +                          de == 0X0)
 13832     00B6  0835               	movf	setMagneticChannel@channelMode,w
 13833     00B7  1D03               	btfss	3,2
 13834     00B8  28BA               	goto	u10491
 13835     00B9  28BB               	goto	u10490
 13836     00BA                     u10491:
 13837     00BA  28EE               	goto	l13718
 13838     00BB                     u10490:
 13839     00BB                     l13714:
 13840                           
 13841                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 584:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 586:         bitWrite8(mode, 4, 0)
      +                          ;
 13842     00BB  0837               	movf	setMagneticChannel@mode+1,w
 13843     00BC  00F2               	movwf	bitWrite8@reg+1
 13844     00BD  0836               	movf	setMagneticChannel@mode,w
 13845     00BE  00F1               	movwf	bitWrite8@reg
 13846     00BF  3004               	movlw	4
 13847     00C0  00F3               	movwf	bitWrite8@position
 13848     00C1  01F4               	clrf	bitWrite8@value
 13849     00C2  3192  227C  3180   	fcall	_bitWrite8
 13850                           
 13851                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 588:         bitWrite8
      +                          (mode, 5, 0);
 13852     00C5  0140               	movlb	0	; select bank0
 13853     00C6  0837               	movf	setMagneticChannel@mode+1,w
 13854     00C7  00F2               	movwf	bitWrite8@reg+1
 13855     00C8  0836               	movf	setMagneticChannel@mode,w
 13856     00C9  00F1               	movwf	bitWrite8@reg
 13857     00CA  3005               	movlw	5
 13858     00CB  00F3               	movwf	bitWrite8@position
 13859     00CC  01F4               	clrf	bitWrite8@value
 13860     00CD  3192  227C  3180   	fcall	_bitWrite8
 13861                           
 13862                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 590:         bitWrite8
      +                          (mode, 6, 0);
 13863     00D0  0140               	movlb	0	; select bank0
 13864     00D1  0837               	movf	setMagneticChannel@mode+1,w
 13865     00D2  00F2               	movwf	bitWrite8@reg+1
 13866     00D3  0836               	movf	setMagneticChannel@mode,w
 13867     00D4  00F1               	movwf	bitWrite8@reg
 13868     00D5  3006               	movlw	6
 13869     00D6  00F3               	movwf	bitWrite8@position
 13870     00D7  01F4               	clrf	bitWrite8@value
 13871     00D8  3192  227C  3180   	fcall	_bitWrite8
 13872                           
 13873                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 592:         bitWrite8
      +                          (mode, 7, 0);
 13874     00DB  0140               	movlb	0	; select bank0
 13875     00DC  0837               	movf	setMagneticChannel@mode+1,w
 13876     00DD  00F2               	movwf	bitWrite8@reg+1
 13877     00DE  0836               	movf	setMagneticChannel@mode,w
 13878     00DF  00F1               	movwf	bitWrite8@reg
 13879     00E0  3007               	movlw	7
 13880     00E1  00F3               	movwf	bitWrite8@position
 13881     00E2  01F4               	clrf	bitWrite8@value
 13882     00E3  3192  227C  3180   	fcall	_bitWrite8
 13883     00E6                     l13716:
 13884                           
 13885                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 594:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 13886     00E6  0140               	movlb	0	; select bank0
 13887     00E7  0836               	movf	setMagneticChannel@mode,w
 13888     00E8  00A6               	movwf	writeRegister@data
 13889     00E9  3002               	movlw	2
 13890     00EA  3190  2005  3180   	fcall	_writeRegister
 13891                           
 13892                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 596:     } else if (ch
      +                          annelMode == 0X1)
 13893     00ED  2B74               	goto	l13784
 13894     00EE                     l13718:
 13895     00EE  0335               	decf	setMagneticChannel@channelMode,w
 13896     00EF  1D03               	btfss	3,2
 13897     00F0  28F2               	goto	u10501
 13898     00F1  28F3               	goto	u10500
 13899     00F2                     u10501:
 13900     00F2  2927               	goto	l13724
 13901     00F3                     u10500:
 13902     00F3                     l13720:
 13903                           
 13904                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 597:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 598:         bitWrite8(mode, 4, 1)
      +                          ;
 13905     00F3  0837               	movf	setMagneticChannel@mode+1,w
 13906     00F4  00F2               	movwf	bitWrite8@reg+1
 13907     00F5  0836               	movf	setMagneticChannel@mode,w
 13908     00F6  00F1               	movwf	bitWrite8@reg
 13909     00F7  3004               	movlw	4
 13910     00F8  00F3               	movwf	bitWrite8@position
 13911     00F9  01F4               	clrf	bitWrite8@value
 13912     00FA  0AF4               	incf	bitWrite8@value,f
 13913     00FB  3192  227C  3180   	fcall	_bitWrite8
 13914                           
 13915                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 599:         bitWrite8
      +                          (mode, 5, 0);
 13916     00FE  0140               	movlb	0	; select bank0
 13917     00FF  0837               	movf	setMagneticChannel@mode+1,w
 13918     0100  00F2               	movwf	bitWrite8@reg+1
 13919     0101  0836               	movf	setMagneticChannel@mode,w
 13920     0102  00F1               	movwf	bitWrite8@reg
 13921     0103  3005               	movlw	5
 13922     0104  00F3               	movwf	bitWrite8@position
 13923     0105  01F4               	clrf	bitWrite8@value
 13924     0106  3192  227C  3180   	fcall	_bitWrite8
 13925                           
 13926                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 600:         bitWrite8
      +                          (mode, 6, 0);
 13927     0109  0140               	movlb	0	; select bank0
 13928     010A  0837               	movf	setMagneticChannel@mode+1,w
 13929     010B  00F2               	movwf	bitWrite8@reg+1
 13930     010C  0836               	movf	setMagneticChannel@mode,w
 13931     010D  00F1               	movwf	bitWrite8@reg
 13932     010E  3006               	movlw	6
 13933     010F  00F3               	movwf	bitWrite8@position
 13934     0110  01F4               	clrf	bitWrite8@value
 13935     0111  3192  227C  3180   	fcall	_bitWrite8
 13936                           
 13937                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 601:         bitWrite8
      +                          (mode, 7, 0);
 13938     0114  0140               	movlb	0	; select bank0
 13939     0115  0837               	movf	setMagneticChannel@mode+1,w
 13940     0116  00F2               	movwf	bitWrite8@reg+1
 13941     0117  0836               	movf	setMagneticChannel@mode,w
 13942     0118  00F1               	movwf	bitWrite8@reg
 13943     0119  3007               	movlw	7
 13944     011A  00F3               	movwf	bitWrite8@position
 13945     011B  01F4               	clrf	bitWrite8@value
 13946     011C  3192  227C  3180   	fcall	_bitWrite8
 13947     011F                     l13722:
 13948                           
 13949                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 602:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 13950     011F  0140               	movlb	0	; select bank0
 13951     0120  0836               	movf	setMagneticChannel@mode,w
 13952     0121  00A6               	movwf	writeRegister@data
 13953     0122  3002               	movlw	2
 13954     0123  3190  2005  3180   	fcall	_writeRegister
 13955                           
 13956                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 603:     } else if (ch
      +                          annelMode == 0X2)
 13957     0126  2B74               	goto	l13784
 13958     0127                     l13724:
 13959     0127  3002               	movlw	2
 13960     0128  0635               	xorwf	setMagneticChannel@channelMode,w
 13961     0129  1D03               	btfss	3,2
 13962     012A  292C               	goto	u10511
 13963     012B  292D               	goto	u10510
 13964     012C                     u10511:
 13965     012C  2961               	goto	l13730
 13966     012D                     u10510:
 13967     012D                     l13726:
 13968                           
 13969                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 604:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 605:         bitWrite8(mode, 4, 0)
      +                          ;
 13970     012D  0837               	movf	setMagneticChannel@mode+1,w
 13971     012E  00F2               	movwf	bitWrite8@reg+1
 13972     012F  0836               	movf	setMagneticChannel@mode,w
 13973     0130  00F1               	movwf	bitWrite8@reg
 13974     0131  3004               	movlw	4
 13975     0132  00F3               	movwf	bitWrite8@position
 13976     0133  01F4               	clrf	bitWrite8@value
 13977     0134  3192  227C  3180   	fcall	_bitWrite8
 13978                           
 13979                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 606:         bitWrite8
      +                          (mode, 5, 1);
 13980     0137  0140               	movlb	0	; select bank0
 13981     0138  0837               	movf	setMagneticChannel@mode+1,w
 13982     0139  00F2               	movwf	bitWrite8@reg+1
 13983     013A  0836               	movf	setMagneticChannel@mode,w
 13984     013B  00F1               	movwf	bitWrite8@reg
 13985     013C  3005               	movlw	5
 13986     013D  00F3               	movwf	bitWrite8@position
 13987     013E  01F4               	clrf	bitWrite8@value
 13988     013F  0AF4               	incf	bitWrite8@value,f
 13989     0140  3192  227C  3180   	fcall	_bitWrite8
 13990                           
 13991                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 607:         bitWrite8
      +                          (mode, 6, 0);
 13992     0143  0140               	movlb	0	; select bank0
 13993     0144  0837               	movf	setMagneticChannel@mode+1,w
 13994     0145  00F2               	movwf	bitWrite8@reg+1
 13995     0146  0836               	movf	setMagneticChannel@mode,w
 13996     0147  00F1               	movwf	bitWrite8@reg
 13997     0148  3006               	movlw	6
 13998     0149  00F3               	movwf	bitWrite8@position
 13999     014A  01F4               	clrf	bitWrite8@value
 14000     014B  3192  227C  3180   	fcall	_bitWrite8
 14001                           
 14002                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 608:         bitWrite8
      +                          (mode, 7, 0);
 14003     014E  0140               	movlb	0	; select bank0
 14004     014F  0837               	movf	setMagneticChannel@mode+1,w
 14005     0150  00F2               	movwf	bitWrite8@reg+1
 14006     0151  0836               	movf	setMagneticChannel@mode,w
 14007     0152  00F1               	movwf	bitWrite8@reg
 14008     0153  3007               	movlw	7
 14009     0154  00F3               	movwf	bitWrite8@position
 14010     0155  01F4               	clrf	bitWrite8@value
 14011     0156  3192  227C  3180   	fcall	_bitWrite8
 14012     0159                     l13728:
 14013                           
 14014                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 609:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14015     0159  0140               	movlb	0	; select bank0
 14016     015A  0836               	movf	setMagneticChannel@mode,w
 14017     015B  00A6               	movwf	writeRegister@data
 14018     015C  3002               	movlw	2
 14019     015D  3190  2005  3180   	fcall	_writeRegister
 14020                           
 14021                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 610:     } else if (ch
      +                          annelMode == 0X3)
 14022     0160  2B74               	goto	l13784
 14023     0161                     l13730:
 14024     0161  3003               	movlw	3
 14025     0162  0635               	xorwf	setMagneticChannel@channelMode,w
 14026     0163  1D03               	btfss	3,2
 14027     0164  2966               	goto	u10521
 14028     0165  2967               	goto	u10520
 14029     0166                     u10521:
 14030     0166  299C               	goto	l13736
 14031     0167                     u10520:
 14032     0167                     l13732:
 14033                           
 14034                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 611:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 612:         bitWrite8(mode, 4, 1)
      +                          ;
 14035     0167  0837               	movf	setMagneticChannel@mode+1,w
 14036     0168  00F2               	movwf	bitWrite8@reg+1
 14037     0169  0836               	movf	setMagneticChannel@mode,w
 14038     016A  00F1               	movwf	bitWrite8@reg
 14039     016B  3004               	movlw	4
 14040     016C  00F3               	movwf	bitWrite8@position
 14041     016D  01F4               	clrf	bitWrite8@value
 14042     016E  0AF4               	incf	bitWrite8@value,f
 14043     016F  3192  227C  3180   	fcall	_bitWrite8
 14044                           
 14045                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 613:         bitWrite8
      +                          (mode, 5, 1);
 14046     0172  0140               	movlb	0	; select bank0
 14047     0173  0837               	movf	setMagneticChannel@mode+1,w
 14048     0174  00F2               	movwf	bitWrite8@reg+1
 14049     0175  0836               	movf	setMagneticChannel@mode,w
 14050     0176  00F1               	movwf	bitWrite8@reg
 14051     0177  3005               	movlw	5
 14052     0178  00F3               	movwf	bitWrite8@position
 14053     0179  01F4               	clrf	bitWrite8@value
 14054     017A  0AF4               	incf	bitWrite8@value,f
 14055     017B  3192  227C  3180   	fcall	_bitWrite8
 14056                           
 14057                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 614:         bitWrite8
      +                          (mode, 6, 0);
 14058     017E  0140               	movlb	0	; select bank0
 14059     017F  0837               	movf	setMagneticChannel@mode+1,w
 14060     0180  00F2               	movwf	bitWrite8@reg+1
 14061     0181  0836               	movf	setMagneticChannel@mode,w
 14062     0182  00F1               	movwf	bitWrite8@reg
 14063     0183  3006               	movlw	6
 14064     0184  00F3               	movwf	bitWrite8@position
 14065     0185  01F4               	clrf	bitWrite8@value
 14066     0186  3192  227C  3180   	fcall	_bitWrite8
 14067                           
 14068                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 615:         bitWrite8
      +                          (mode, 7, 0);
 14069     0189  0140               	movlb	0	; select bank0
 14070     018A  0837               	movf	setMagneticChannel@mode+1,w
 14071     018B  00F2               	movwf	bitWrite8@reg+1
 14072     018C  0836               	movf	setMagneticChannel@mode,w
 14073     018D  00F1               	movwf	bitWrite8@reg
 14074     018E  3007               	movlw	7
 14075     018F  00F3               	movwf	bitWrite8@position
 14076     0190  01F4               	clrf	bitWrite8@value
 14077     0191  3192  227C  3180   	fcall	_bitWrite8
 14078     0194                     l13734:
 14079                           
 14080                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 616:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14081     0194  0140               	movlb	0	; select bank0
 14082     0195  0836               	movf	setMagneticChannel@mode,w
 14083     0196  00A6               	movwf	writeRegister@data
 14084     0197  3002               	movlw	2
 14085     0198  3190  2005  3180   	fcall	_writeRegister
 14086                           
 14087                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 617:     } else if (ch
      +                          annelMode == 0X4)
 14088     019B  2B74               	goto	l13784
 14089     019C                     l13736:
 14090     019C  3004               	movlw	4
 14091     019D  0635               	xorwf	setMagneticChannel@channelMode,w
 14092     019E  1D03               	btfss	3,2
 14093     019F  29A1               	goto	u10531
 14094     01A0  29A2               	goto	u10530
 14095     01A1                     u10531:
 14096     01A1  29D6               	goto	l13742
 14097     01A2                     u10530:
 14098     01A2                     l13738:
 14099                           
 14100                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 618:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 619:         bitWrite8(mode, 4, 0)
      +                          ;
 14101     01A2  0837               	movf	setMagneticChannel@mode+1,w
 14102     01A3  00F2               	movwf	bitWrite8@reg+1
 14103     01A4  0836               	movf	setMagneticChannel@mode,w
 14104     01A5  00F1               	movwf	bitWrite8@reg
 14105     01A6  3004               	movlw	4
 14106     01A7  00F3               	movwf	bitWrite8@position
 14107     01A8  01F4               	clrf	bitWrite8@value
 14108     01A9  3192  227C  3180   	fcall	_bitWrite8
 14109                           
 14110                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 620:         bitWrite8
      +                          (mode, 5, 0);
 14111     01AC  0140               	movlb	0	; select bank0
 14112     01AD  0837               	movf	setMagneticChannel@mode+1,w
 14113     01AE  00F2               	movwf	bitWrite8@reg+1
 14114     01AF  0836               	movf	setMagneticChannel@mode,w
 14115     01B0  00F1               	movwf	bitWrite8@reg
 14116     01B1  3005               	movlw	5
 14117     01B2  00F3               	movwf	bitWrite8@position
 14118     01B3  01F4               	clrf	bitWrite8@value
 14119     01B4  3192  227C  3180   	fcall	_bitWrite8
 14120                           
 14121                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 621:         bitWrite8
      +                          (mode, 6, 1);
 14122     01B7  0140               	movlb	0	; select bank0
 14123     01B8  0837               	movf	setMagneticChannel@mode+1,w
 14124     01B9  00F2               	movwf	bitWrite8@reg+1
 14125     01BA  0836               	movf	setMagneticChannel@mode,w
 14126     01BB  00F1               	movwf	bitWrite8@reg
 14127     01BC  3006               	movlw	6
 14128     01BD  00F3               	movwf	bitWrite8@position
 14129     01BE  01F4               	clrf	bitWrite8@value
 14130     01BF  0AF4               	incf	bitWrite8@value,f
 14131     01C0  3192  227C  3180   	fcall	_bitWrite8
 14132                           
 14133                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 622:         bitWrite8
      +                          (mode, 7, 0);
 14134     01C3  0140               	movlb	0	; select bank0
 14135     01C4  0837               	movf	setMagneticChannel@mode+1,w
 14136     01C5  00F2               	movwf	bitWrite8@reg+1
 14137     01C6  0836               	movf	setMagneticChannel@mode,w
 14138     01C7  00F1               	movwf	bitWrite8@reg
 14139     01C8  3007               	movlw	7
 14140     01C9  00F3               	movwf	bitWrite8@position
 14141     01CA  01F4               	clrf	bitWrite8@value
 14142     01CB  3192  227C  3180   	fcall	_bitWrite8
 14143     01CE                     l13740:
 14144                           
 14145                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 623:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14146     01CE  0140               	movlb	0	; select bank0
 14147     01CF  0836               	movf	setMagneticChannel@mode,w
 14148     01D0  00A6               	movwf	writeRegister@data
 14149     01D1  3002               	movlw	2
 14150     01D2  3190  2005  3180   	fcall	_writeRegister
 14151                           
 14152                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 624:     } else if (ch
      +                          annelMode == 0X5)
 14153     01D5  2B74               	goto	l13784
 14154     01D6                     l13742:
 14155     01D6  3005               	movlw	5
 14156     01D7  0635               	xorwf	setMagneticChannel@channelMode,w
 14157     01D8  1D03               	btfss	3,2
 14158     01D9  29DB               	goto	u10541
 14159     01DA  29DC               	goto	u10540
 14160     01DB                     u10541:
 14161     01DB  2A11               	goto	l13748
 14162     01DC                     u10540:
 14163     01DC                     l13744:
 14164                           
 14165                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 625:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 626:         bitWrite8(mode, 4, 1)
      +                          ;
 14166     01DC  0837               	movf	setMagneticChannel@mode+1,w
 14167     01DD  00F2               	movwf	bitWrite8@reg+1
 14168     01DE  0836               	movf	setMagneticChannel@mode,w
 14169     01DF  00F1               	movwf	bitWrite8@reg
 14170     01E0  3004               	movlw	4
 14171     01E1  00F3               	movwf	bitWrite8@position
 14172     01E2  01F4               	clrf	bitWrite8@value
 14173     01E3  0AF4               	incf	bitWrite8@value,f
 14174     01E4  3192  227C  3180   	fcall	_bitWrite8
 14175                           
 14176                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 627:         bitWrite8
      +                          (mode, 5, 0);
 14177     01E7  0140               	movlb	0	; select bank0
 14178     01E8  0837               	movf	setMagneticChannel@mode+1,w
 14179     01E9  00F2               	movwf	bitWrite8@reg+1
 14180     01EA  0836               	movf	setMagneticChannel@mode,w
 14181     01EB  00F1               	movwf	bitWrite8@reg
 14182     01EC  3005               	movlw	5
 14183     01ED  00F3               	movwf	bitWrite8@position
 14184     01EE  01F4               	clrf	bitWrite8@value
 14185     01EF  3192  227C  3180   	fcall	_bitWrite8
 14186                           
 14187                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 628:         bitWrite8
      +                          (mode, 6, 1);
 14188     01F2  0140               	movlb	0	; select bank0
 14189     01F3  0837               	movf	setMagneticChannel@mode+1,w
 14190     01F4  00F2               	movwf	bitWrite8@reg+1
 14191     01F5  0836               	movf	setMagneticChannel@mode,w
 14192     01F6  00F1               	movwf	bitWrite8@reg
 14193     01F7  3006               	movlw	6
 14194     01F8  00F3               	movwf	bitWrite8@position
 14195     01F9  01F4               	clrf	bitWrite8@value
 14196     01FA  0AF4               	incf	bitWrite8@value,f
 14197     01FB  3192  227C  3180   	fcall	_bitWrite8
 14198                           
 14199                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 629:         bitWrite8
      +                          (mode, 7, 0);
 14200     01FE  0140               	movlb	0	; select bank0
 14201     01FF  0837               	movf	setMagneticChannel@mode+1,w
 14202     0200  00F2               	movwf	bitWrite8@reg+1
 14203     0201  0836               	movf	setMagneticChannel@mode,w
 14204     0202  00F1               	movwf	bitWrite8@reg
 14205     0203  3007               	movlw	7
 14206     0204  00F3               	movwf	bitWrite8@position
 14207     0205  01F4               	clrf	bitWrite8@value
 14208     0206  3192  227C  3180   	fcall	_bitWrite8
 14209     0209                     l13746:
 14210                           
 14211                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 630:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14212     0209  0140               	movlb	0	; select bank0
 14213     020A  0836               	movf	setMagneticChannel@mode,w
 14214     020B  00A6               	movwf	writeRegister@data
 14215     020C  3002               	movlw	2
 14216     020D  3190  2005  3180   	fcall	_writeRegister
 14217                           
 14218                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 631:     } else if (ch
      +                          annelMode == 0X6)
 14219     0210  2B74               	goto	l13784
 14220     0211                     l13748:
 14221     0211  3006               	movlw	6
 14222     0212  0635               	xorwf	setMagneticChannel@channelMode,w
 14223     0213  1D03               	btfss	3,2
 14224     0214  2A16               	goto	u10551
 14225     0215  2A17               	goto	u10550
 14226     0216                     u10551:
 14227     0216  2A4C               	goto	l13754
 14228     0217                     u10550:
 14229     0217                     l13750:
 14230                           
 14231                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 632:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 633:         bitWrite8(mode, 4, 0)
      +                          ;
 14232     0217  0837               	movf	setMagneticChannel@mode+1,w
 14233     0218  00F2               	movwf	bitWrite8@reg+1
 14234     0219  0836               	movf	setMagneticChannel@mode,w
 14235     021A  00F1               	movwf	bitWrite8@reg
 14236     021B  3004               	movlw	4
 14237     021C  00F3               	movwf	bitWrite8@position
 14238     021D  01F4               	clrf	bitWrite8@value
 14239     021E  3192  227C  3180   	fcall	_bitWrite8
 14240                           
 14241                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 634:         bitWrite8
      +                          (mode, 5, 1);
 14242     0221  0140               	movlb	0	; select bank0
 14243     0222  0837               	movf	setMagneticChannel@mode+1,w
 14244     0223  00F2               	movwf	bitWrite8@reg+1
 14245     0224  0836               	movf	setMagneticChannel@mode,w
 14246     0225  00F1               	movwf	bitWrite8@reg
 14247     0226  3005               	movlw	5
 14248     0227  00F3               	movwf	bitWrite8@position
 14249     0228  01F4               	clrf	bitWrite8@value
 14250     0229  0AF4               	incf	bitWrite8@value,f
 14251     022A  3192  227C  3180   	fcall	_bitWrite8
 14252                           
 14253                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 635:         bitWrite8
      +                          (mode, 6, 1);
 14254     022D  0140               	movlb	0	; select bank0
 14255     022E  0837               	movf	setMagneticChannel@mode+1,w
 14256     022F  00F2               	movwf	bitWrite8@reg+1
 14257     0230  0836               	movf	setMagneticChannel@mode,w
 14258     0231  00F1               	movwf	bitWrite8@reg
 14259     0232  3006               	movlw	6
 14260     0233  00F3               	movwf	bitWrite8@position
 14261     0234  01F4               	clrf	bitWrite8@value
 14262     0235  0AF4               	incf	bitWrite8@value,f
 14263     0236  3192  227C  3180   	fcall	_bitWrite8
 14264                           
 14265                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 636:         bitWrite8
      +                          (mode, 7, 0);
 14266     0239  0140               	movlb	0	; select bank0
 14267     023A  0837               	movf	setMagneticChannel@mode+1,w
 14268     023B  00F2               	movwf	bitWrite8@reg+1
 14269     023C  0836               	movf	setMagneticChannel@mode,w
 14270     023D  00F1               	movwf	bitWrite8@reg
 14271     023E  3007               	movlw	7
 14272     023F  00F3               	movwf	bitWrite8@position
 14273     0240  01F4               	clrf	bitWrite8@value
 14274     0241  3192  227C  3180   	fcall	_bitWrite8
 14275     0244                     l13752:
 14276                           
 14277                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 637:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14278     0244  0140               	movlb	0	; select bank0
 14279     0245  0836               	movf	setMagneticChannel@mode,w
 14280     0246  00A6               	movwf	writeRegister@data
 14281     0247  3002               	movlw	2
 14282     0248  3190  2005  3180   	fcall	_writeRegister
 14283                           
 14284                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 638:     } else if (ch
      +                          annelMode == 0X7)
 14285     024B  2B74               	goto	l13784
 14286     024C                     l13754:
 14287     024C  3007               	movlw	7
 14288     024D  0635               	xorwf	setMagneticChannel@channelMode,w
 14289     024E  1D03               	btfss	3,2
 14290     024F  2A51               	goto	u10561
 14291     0250  2A52               	goto	u10560
 14292     0251                     u10561:
 14293     0251  2A88               	goto	l13760
 14294     0252                     u10560:
 14295     0252                     l13756:
 14296                           
 14297                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 639:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 640:         bitWrite8(mode, 4, 1)
      +                          ;
 14298     0252  0837               	movf	setMagneticChannel@mode+1,w
 14299     0253  00F2               	movwf	bitWrite8@reg+1
 14300     0254  0836               	movf	setMagneticChannel@mode,w
 14301     0255  00F1               	movwf	bitWrite8@reg
 14302     0256  3004               	movlw	4
 14303     0257  00F3               	movwf	bitWrite8@position
 14304     0258  01F4               	clrf	bitWrite8@value
 14305     0259  0AF4               	incf	bitWrite8@value,f
 14306     025A  3192  227C  3180   	fcall	_bitWrite8
 14307                           
 14308                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 641:         bitWrite8
      +                          (mode, 5, 1);
 14309     025D  0140               	movlb	0	; select bank0
 14310     025E  0837               	movf	setMagneticChannel@mode+1,w
 14311     025F  00F2               	movwf	bitWrite8@reg+1
 14312     0260  0836               	movf	setMagneticChannel@mode,w
 14313     0261  00F1               	movwf	bitWrite8@reg
 14314     0262  3005               	movlw	5
 14315     0263  00F3               	movwf	bitWrite8@position
 14316     0264  01F4               	clrf	bitWrite8@value
 14317     0265  0AF4               	incf	bitWrite8@value,f
 14318     0266  3192  227C  3180   	fcall	_bitWrite8
 14319                           
 14320                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 642:         bitWrite8
      +                          (mode, 6, 1);
 14321     0269  0140               	movlb	0	; select bank0
 14322     026A  0837               	movf	setMagneticChannel@mode+1,w
 14323     026B  00F2               	movwf	bitWrite8@reg+1
 14324     026C  0836               	movf	setMagneticChannel@mode,w
 14325     026D  00F1               	movwf	bitWrite8@reg
 14326     026E  3006               	movlw	6
 14327     026F  00F3               	movwf	bitWrite8@position
 14328     0270  01F4               	clrf	bitWrite8@value
 14329     0271  0AF4               	incf	bitWrite8@value,f
 14330     0272  3192  227C  3180   	fcall	_bitWrite8
 14331                           
 14332                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 643:         bitWrite8
      +                          (mode, 7, 0);
 14333     0275  0140               	movlb	0	; select bank0
 14334     0276  0837               	movf	setMagneticChannel@mode+1,w
 14335     0277  00F2               	movwf	bitWrite8@reg+1
 14336     0278  0836               	movf	setMagneticChannel@mode,w
 14337     0279  00F1               	movwf	bitWrite8@reg
 14338     027A  3007               	movlw	7
 14339     027B  00F3               	movwf	bitWrite8@position
 14340     027C  01F4               	clrf	bitWrite8@value
 14341     027D  3192  227C  3180   	fcall	_bitWrite8
 14342     0280                     l13758:
 14343                           
 14344                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 644:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14345     0280  0140               	movlb	0	; select bank0
 14346     0281  0836               	movf	setMagneticChannel@mode,w
 14347     0282  00A6               	movwf	writeRegister@data
 14348     0283  3002               	movlw	2
 14349     0284  3190  2005  3180   	fcall	_writeRegister
 14350                           
 14351                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 645:     } else if (ch
      +                          annelMode == 0X8)
 14352     0287  2B74               	goto	l13784
 14353     0288                     l13760:
 14354     0288  3008               	movlw	8
 14355     0289  0635               	xorwf	setMagneticChannel@channelMode,w
 14356     028A  1D03               	btfss	3,2
 14357     028B  2A8D               	goto	u10571
 14358     028C  2A8E               	goto	u10570
 14359     028D                     u10571:
 14360     028D  2AC2               	goto	l13766
 14361     028E                     u10570:
 14362     028E                     l13762:
 14363                           
 14364                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 646:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 647:         bitWrite8(mode, 4, 0)
      +                          ;
 14365     028E  0837               	movf	setMagneticChannel@mode+1,w
 14366     028F  00F2               	movwf	bitWrite8@reg+1
 14367     0290  0836               	movf	setMagneticChannel@mode,w
 14368     0291  00F1               	movwf	bitWrite8@reg
 14369     0292  3004               	movlw	4
 14370     0293  00F3               	movwf	bitWrite8@position
 14371     0294  01F4               	clrf	bitWrite8@value
 14372     0295  3192  227C  3180   	fcall	_bitWrite8
 14373                           
 14374                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 648:         bitWrite8
      +                          (mode, 5, 0);
 14375     0298  0140               	movlb	0	; select bank0
 14376     0299  0837               	movf	setMagneticChannel@mode+1,w
 14377     029A  00F2               	movwf	bitWrite8@reg+1
 14378     029B  0836               	movf	setMagneticChannel@mode,w
 14379     029C  00F1               	movwf	bitWrite8@reg
 14380     029D  3005               	movlw	5
 14381     029E  00F3               	movwf	bitWrite8@position
 14382     029F  01F4               	clrf	bitWrite8@value
 14383     02A0  3192  227C  3180   	fcall	_bitWrite8
 14384                           
 14385                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 649:         bitWrite8
      +                          (mode, 6, 0);
 14386     02A3  0140               	movlb	0	; select bank0
 14387     02A4  0837               	movf	setMagneticChannel@mode+1,w
 14388     02A5  00F2               	movwf	bitWrite8@reg+1
 14389     02A6  0836               	movf	setMagneticChannel@mode,w
 14390     02A7  00F1               	movwf	bitWrite8@reg
 14391     02A8  3006               	movlw	6
 14392     02A9  00F3               	movwf	bitWrite8@position
 14393     02AA  01F4               	clrf	bitWrite8@value
 14394     02AB  3192  227C  3180   	fcall	_bitWrite8
 14395                           
 14396                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 650:         bitWrite8
      +                          (mode, 7, 1);
 14397     02AE  0140               	movlb	0	; select bank0
 14398     02AF  0837               	movf	setMagneticChannel@mode+1,w
 14399     02B0  00F2               	movwf	bitWrite8@reg+1
 14400     02B1  0836               	movf	setMagneticChannel@mode,w
 14401     02B2  00F1               	movwf	bitWrite8@reg
 14402     02B3  3007               	movlw	7
 14403     02B4  00F3               	movwf	bitWrite8@position
 14404     02B5  01F4               	clrf	bitWrite8@value
 14405     02B6  0AF4               	incf	bitWrite8@value,f
 14406     02B7  3192  227C  3180   	fcall	_bitWrite8
 14407     02BA                     l13764:
 14408                           
 14409                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 651:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14410     02BA  0140               	movlb	0	; select bank0
 14411     02BB  0836               	movf	setMagneticChannel@mode,w
 14412     02BC  00A6               	movwf	writeRegister@data
 14413     02BD  3002               	movlw	2
 14414     02BE  3190  2005  3180   	fcall	_writeRegister
 14415                           
 14416                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 652:     } else if (ch
      +                          annelMode == 0X9)
 14417     02C1  2B74               	goto	l13784
 14418     02C2                     l13766:
 14419     02C2  3009               	movlw	9
 14420     02C3  0635               	xorwf	setMagneticChannel@channelMode,w
 14421     02C4  1D03               	btfss	3,2
 14422     02C5  2AC7               	goto	u10581
 14423     02C6  2AC8               	goto	u10580
 14424     02C7                     u10581:
 14425     02C7  2AFD               	goto	l13772
 14426     02C8                     u10580:
 14427     02C8                     l13768:
 14428                           
 14429                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 653:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 654:         bitWrite8(mode, 4, 1)
      +                          ;
 14430     02C8  0837               	movf	setMagneticChannel@mode+1,w
 14431     02C9  00F2               	movwf	bitWrite8@reg+1
 14432     02CA  0836               	movf	setMagneticChannel@mode,w
 14433     02CB  00F1               	movwf	bitWrite8@reg
 14434     02CC  3004               	movlw	4
 14435     02CD  00F3               	movwf	bitWrite8@position
 14436     02CE  01F4               	clrf	bitWrite8@value
 14437     02CF  0AF4               	incf	bitWrite8@value,f
 14438     02D0  3192  227C  3180   	fcall	_bitWrite8
 14439                           
 14440                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 655:         bitWrite8
      +                          (mode, 5, 0);
 14441     02D3  0140               	movlb	0	; select bank0
 14442     02D4  0837               	movf	setMagneticChannel@mode+1,w
 14443     02D5  00F2               	movwf	bitWrite8@reg+1
 14444     02D6  0836               	movf	setMagneticChannel@mode,w
 14445     02D7  00F1               	movwf	bitWrite8@reg
 14446     02D8  3005               	movlw	5
 14447     02D9  00F3               	movwf	bitWrite8@position
 14448     02DA  01F4               	clrf	bitWrite8@value
 14449     02DB  3192  227C  3180   	fcall	_bitWrite8
 14450                           
 14451                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 656:         bitWrite8
      +                          (mode, 6, 0);
 14452     02DE  0140               	movlb	0	; select bank0
 14453     02DF  0837               	movf	setMagneticChannel@mode+1,w
 14454     02E0  00F2               	movwf	bitWrite8@reg+1
 14455     02E1  0836               	movf	setMagneticChannel@mode,w
 14456     02E2  00F1               	movwf	bitWrite8@reg
 14457     02E3  3006               	movlw	6
 14458     02E4  00F3               	movwf	bitWrite8@position
 14459     02E5  01F4               	clrf	bitWrite8@value
 14460     02E6  3192  227C  3180   	fcall	_bitWrite8
 14461                           
 14462                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 657:         bitWrite8
      +                          (mode, 7, 1);
 14463     02E9  0140               	movlb	0	; select bank0
 14464     02EA  0837               	movf	setMagneticChannel@mode+1,w
 14465     02EB  00F2               	movwf	bitWrite8@reg+1
 14466     02EC  0836               	movf	setMagneticChannel@mode,w
 14467     02ED  00F1               	movwf	bitWrite8@reg
 14468     02EE  3007               	movlw	7
 14469     02EF  00F3               	movwf	bitWrite8@position
 14470     02F0  01F4               	clrf	bitWrite8@value
 14471     02F1  0AF4               	incf	bitWrite8@value,f
 14472     02F2  3192  227C  3180   	fcall	_bitWrite8
 14473     02F5                     l13770:
 14474                           
 14475                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 658:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14476     02F5  0140               	movlb	0	; select bank0
 14477     02F6  0836               	movf	setMagneticChannel@mode,w
 14478     02F7  00A6               	movwf	writeRegister@data
 14479     02F8  3002               	movlw	2
 14480     02F9  3190  2005  3180   	fcall	_writeRegister
 14481                           
 14482                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 659:     } else if (ch
      +                          annelMode == 0XA)
 14483     02FC  2B74               	goto	l13784
 14484     02FD                     l13772:
 14485     02FD  300A               	movlw	10
 14486     02FE  0635               	xorwf	setMagneticChannel@channelMode,w
 14487     02FF  1D03               	btfss	3,2
 14488     0300  2B02               	goto	u10591
 14489     0301  2B03               	goto	u10590
 14490     0302                     u10591:
 14491     0302  2B38               	goto	l13778
 14492     0303                     u10590:
 14493     0303                     l13774:
 14494                           
 14495                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 660:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 661:         bitWrite8(mode, 4, 0)
      +                          ;
 14496     0303  0837               	movf	setMagneticChannel@mode+1,w
 14497     0304  00F2               	movwf	bitWrite8@reg+1
 14498     0305  0836               	movf	setMagneticChannel@mode,w
 14499     0306  00F1               	movwf	bitWrite8@reg
 14500     0307  3004               	movlw	4
 14501     0308  00F3               	movwf	bitWrite8@position
 14502     0309  01F4               	clrf	bitWrite8@value
 14503     030A  3192  227C  3180   	fcall	_bitWrite8
 14504                           
 14505                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 662:         bitWrite8
      +                          (mode, 5, 1);
 14506     030D  0140               	movlb	0	; select bank0
 14507     030E  0837               	movf	setMagneticChannel@mode+1,w
 14508     030F  00F2               	movwf	bitWrite8@reg+1
 14509     0310  0836               	movf	setMagneticChannel@mode,w
 14510     0311  00F1               	movwf	bitWrite8@reg
 14511     0312  3005               	movlw	5
 14512     0313  00F3               	movwf	bitWrite8@position
 14513     0314  01F4               	clrf	bitWrite8@value
 14514     0315  0AF4               	incf	bitWrite8@value,f
 14515     0316  3192  227C  3180   	fcall	_bitWrite8
 14516                           
 14517                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 663:         bitWrite8
      +                          (mode, 6, 0);
 14518     0319  0140               	movlb	0	; select bank0
 14519     031A  0837               	movf	setMagneticChannel@mode+1,w
 14520     031B  00F2               	movwf	bitWrite8@reg+1
 14521     031C  0836               	movf	setMagneticChannel@mode,w
 14522     031D  00F1               	movwf	bitWrite8@reg
 14523     031E  3006               	movlw	6
 14524     031F  00F3               	movwf	bitWrite8@position
 14525     0320  01F4               	clrf	bitWrite8@value
 14526     0321  3192  227C  3180   	fcall	_bitWrite8
 14527                           
 14528                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 664:         bitWrite8
      +                          (mode, 7, 1);
 14529     0324  0140               	movlb	0	; select bank0
 14530     0325  0837               	movf	setMagneticChannel@mode+1,w
 14531     0326  00F2               	movwf	bitWrite8@reg+1
 14532     0327  0836               	movf	setMagneticChannel@mode,w
 14533     0328  00F1               	movwf	bitWrite8@reg
 14534     0329  3007               	movlw	7
 14535     032A  00F3               	movwf	bitWrite8@position
 14536     032B  01F4               	clrf	bitWrite8@value
 14537     032C  0AF4               	incf	bitWrite8@value,f
 14538     032D  3192  227C  3180   	fcall	_bitWrite8
 14539     0330                     l13776:
 14540                           
 14541                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 665:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14542     0330  0140               	movlb	0	; select bank0
 14543     0331  0836               	movf	setMagneticChannel@mode,w
 14544     0332  00A6               	movwf	writeRegister@data
 14545     0333  3002               	movlw	2
 14546     0334  3190  2005  3180   	fcall	_writeRegister
 14547                           
 14548                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 666:     } else if (ch
      +                          annelMode == 0XB)
 14549     0337  2B74               	goto	l13784
 14550     0338                     l13778:
 14551     0338  300B               	movlw	11
 14552     0339  0635               	xorwf	setMagneticChannel@channelMode,w
 14553     033A  1D03               	btfss	3,2
 14554     033B  2B3D               	goto	u10601
 14555     033C  2B3E               	goto	u10600
 14556     033D                     u10601:
 14557     033D  2B74               	goto	l783
 14558     033E                     u10600:
 14559     033E                     l13780:
 14560                           
 14561                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 667:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 668:         bitWrite8(mode, 4, 1)
      +                          ;
 14562     033E  0837               	movf	setMagneticChannel@mode+1,w
 14563     033F  00F2               	movwf	bitWrite8@reg+1
 14564     0340  0836               	movf	setMagneticChannel@mode,w
 14565     0341  00F1               	movwf	bitWrite8@reg
 14566     0342  3004               	movlw	4
 14567     0343  00F3               	movwf	bitWrite8@position
 14568     0344  01F4               	clrf	bitWrite8@value
 14569     0345  0AF4               	incf	bitWrite8@value,f
 14570     0346  3192  227C  3180   	fcall	_bitWrite8
 14571                           
 14572                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 669:         bitWrite8
      +                          (mode, 5, 1);
 14573     0349  0140               	movlb	0	; select bank0
 14574     034A  0837               	movf	setMagneticChannel@mode+1,w
 14575     034B  00F2               	movwf	bitWrite8@reg+1
 14576     034C  0836               	movf	setMagneticChannel@mode,w
 14577     034D  00F1               	movwf	bitWrite8@reg
 14578     034E  3005               	movlw	5
 14579     034F  00F3               	movwf	bitWrite8@position
 14580     0350  01F4               	clrf	bitWrite8@value
 14581     0351  0AF4               	incf	bitWrite8@value,f
 14582     0352  3192  227C  3180   	fcall	_bitWrite8
 14583                           
 14584                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 670:         bitWrite8
      +                          (mode, 6, 0);
 14585     0355  0140               	movlb	0	; select bank0
 14586     0356  0837               	movf	setMagneticChannel@mode+1,w
 14587     0357  00F2               	movwf	bitWrite8@reg+1
 14588     0358  0836               	movf	setMagneticChannel@mode,w
 14589     0359  00F1               	movwf	bitWrite8@reg
 14590     035A  3006               	movlw	6
 14591     035B  00F3               	movwf	bitWrite8@position
 14592     035C  01F4               	clrf	bitWrite8@value
 14593     035D  3192  227C  3180   	fcall	_bitWrite8
 14594                           
 14595                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 671:         bitWrite8
      +                          (mode, 7, 1);
 14596     0360  0140               	movlb	0	; select bank0
 14597     0361  0837               	movf	setMagneticChannel@mode+1,w
 14598     0362  00F2               	movwf	bitWrite8@reg+1
 14599     0363  0836               	movf	setMagneticChannel@mode,w
 14600     0364  00F1               	movwf	bitWrite8@reg
 14601     0365  3007               	movlw	7
 14602     0366  00F3               	movwf	bitWrite8@position
 14603     0367  01F4               	clrf	bitWrite8@value
 14604     0368  0AF4               	incf	bitWrite8@value,f
 14605     0369  3192  227C  3180   	fcall	_bitWrite8
 14606     036C                     l13782:
 14607                           
 14608                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 672:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14609     036C  0140               	movlb	0	; select bank0
 14610     036D  0836               	movf	setMagneticChannel@mode,w
 14611     036E  00A6               	movwf	writeRegister@data
 14612     036F  3002               	movlw	2
 14613     0370  3190  2005  3180   	fcall	_writeRegister
 14614     0373  2B74               	goto	l13784
 14615     0374                     l783:
 14616     0374                     l13784:
 14617                           
 14618                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 675:     return getErr
      +                          or();;	Return value of _setMagneticChannel is never used
 14619     0374  318D  2549  3180   	fcall	_getError
 14620     0377                     l789:
 14621     0377  0008               	return
 14622     0378                     __end_of_setMagneticChannel:
 14623                           
 14624                           	psect	text7
 14625     1005                     __ptext7:	
 14626 ;; *************** function _writeRegister *****************
 14627 ;; Defined at:
 14628 ;;		line 180 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 14629 ;; Parameters:    Size  Location     Type
 14630 ;;  regAddress      1    wreg     unsigned char 
 14631 ;;  data            1    6[BANK0 ] unsigned char 
 14632 ;; Auto vars:     Size  Location     Type
 14633 ;;  regAddress      1    7[BANK0 ] unsigned char 
 14634 ;; Return value:  Size  Location     Type
 14635 ;;                  1    wreg      unsigned char 
 14636 ;; Registers used:
 14637 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14638 ;; Tracked objects:
 14639 ;;		On entry : 0/0
 14640 ;;		On exit  : 0/0
 14641 ;;		Unchanged: 0/0
 14642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14643 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14644 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14646 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14647 ;;Total ram usage:        2 bytes
 14648 ;; Hardware stack levels used: 1
 14649 ;; Hardware stack levels required when called: 13
 14650 ;; This function calls:
 14651 ;;		_i2c_write1ByteRegister
 14652 ;; This function is called by:
 14653 ;;		_setOperatingMode
 14654 ;;		_setMagneticChannel
 14655 ;;		_setXYAxisRange
 14656 ;;		_setZAxisRange
 14657 ;;		_setTemperatureEn
 14658 ;;		_setupWakeUpAndSleep
 14659 ;;		_setCRCMode
 14660 ;;		_setMagTemp
 14661 ;;		_setConvAvg
 14662 ;;		_setIntThreshold
 14663 ;;		_setLowPower
 14664 ;;		_setGlitchFilter
 14665 ;;		_setTriggerMode
 14666 ;;		_setSleeptime
 14667 ;;		_setMagDir
 14668 ;;		_setMagnitudeGain
 14669 ;;		_setMagneticGain
 14670 ;;		_setMagneticOffset1
 14671 ;;		_setMagneticOffset2
 14672 ;;		_setAngleEn
 14673 ;;		_setXThreshold
 14674 ;;		_setYThreshold
 14675 ;;		_setZThreshold
 14676 ;;		_setTemperatureThreshold
 14677 ;;		_setInterruptResult
 14678 ;;		_setThresholdEn
 14679 ;;		_setIntPinState
 14680 ;;		_setInterruptMode
 14681 ;;		_setMaskInterrupt
 14682 ;;		_setI2CAddress
 14683 ;;		_setI2CAddressEN
 14684 ;; This function uses a non-reentrant model
 14685 ;;
 14686                           
 14687     1005                     _writeRegister:	
 14688                           ;psect for function _writeRegister
 14689                           
 14690                           
 14691                           ;incstack = 0
 14692                           ; Regs used in _writeRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14693                           ;writeRegister@regAddress stored from wreg
 14694     1005  0140               	movlb	0	; select bank0
 14695     1006  00A7               	movwf	writeRegister@regAddress
 14696     1007                     l13554:
 14697                           
 14698                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 181:     i2c_write1Byt
      +                          eRegister(0X22, regAddress, data);
 14699     1007  0827               	movf	writeRegister@regAddress,w
 14700     1008  00A4               	movwf	i2c_write1ByteRegister@reg
 14701     1009  0826               	movf	writeRegister@data,w
 14702     100A  00A5               	movwf	i2c_write1ByteRegister@data
 14703     100B  3022               	movlw	34
 14704     100C  3196  26F5  3190   	fcall	_i2c_write1ByteRegister
 14705     100F                     l682:
 14706     100F  0008               	return
 14707     1010                     __end_of_writeRegister:
 14708                           
 14709                           	psect	text8
 14710     16F5                     __ptext8:	
 14711 ;; *************** function _i2c_write1ByteRegister *****************
 14712 ;; Defined at:
 14713 ;;		line 51 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 14714 ;; Parameters:    Size  Location     Type
 14715 ;;  address         1    wreg     unsigned char 
 14716 ;;  reg             1    4[BANK0 ] unsigned char 
 14717 ;;  data            1    5[BANK0 ] unsigned char 
 14718 ;; Auto vars:     Size  Location     Type
 14719 ;;  address         1   11[COMMON] unsigned char 
 14720 ;; Return value:  Size  Location     Type
 14721 ;;                  1    wreg      void 
 14722 ;; Registers used:
 14723 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14724 ;; Tracked objects:
 14725 ;;		On entry : 0/0
 14726 ;;		On exit  : 0/0
 14727 ;;		Unchanged: 0/0
 14728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14729 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14730 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14732 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14733 ;;Total ram usage:        3 bytes
 14734 ;; Hardware stack levels used: 1
 14735 ;; Hardware stack levels required when called: 12
 14736 ;; This function calls:
 14737 ;;		_I2C1_Close
 14738 ;;		_I2C1_MasterWrite
 14739 ;;		_I2C1_Open
 14740 ;;		_I2C1_SetAddressNackCallback
 14741 ;;		_I2C1_SetBuffer
 14742 ;;		_I2C1_SetDataCompleteCallback
 14743 ;; This function is called by:
 14744 ;;		_writeRegister
 14745 ;;		_BMA253_Initialize
 14746 ;; This function uses a non-reentrant model
 14747 ;;
 14748                           
 14749     16F5                     _i2c_write1ByteRegister:	
 14750                           ;psect for function _i2c_write1ByteRegister
 14751                           
 14752                           
 14753                           ;incstack = 0
 14754                           ; Regs used in _i2c_write1ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14755                           ;i2c_write1ByteRegister@address stored from wreg
 14756     16F5  00FB               	movwf	i2c_write1ByteRegister@address
 14757     16F6                     l13386:
 14758     16F6                     l13388:	
 14759                           ;mcc_generated_files/drivers/i2c_simple_master.c: 51: void i2c_write1ByteRegister(i2c1_a
      +                          ddress_t address, uint8_t reg, uint8_t data);mcc_generated_files/drivers/i2c_simple_mast
      +                          er.c: 52: {;mcc_generated_files/drivers/i2c_simple_master.c: 53:     while(!I2C1_Open(ad
      +                          dress));
 14760                           
 14761     16F6  087B               	movf	i2c_write1ByteRegister@address,w
 14762     16F7  3197  275C  3196   	fcall	_I2C1_Open
 14763     16FA  3A00               	xorlw	0
 14764     16FB  1903               	skipnz
 14765     16FC  2EFE               	goto	u10101
 14766     16FD  2EFF               	goto	u10100
 14767     16FE                     u10101:
 14768     16FE  2EF6               	goto	l13388
 14769     16FF                     u10100:
 14770     16FF                     l13390:
 14771                           
 14772                           ;mcc_generated_files/drivers/i2c_simple_master.c: 54:     I2C1_SetDataCompleteCallback(w
      +                          r1RegCompleteHandler,&data);
 14773     16FF  30F7               	movlw	low _wr1RegCompleteHandler
 14774     1700  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 14775     1701  3010               	movlw	high _wr1RegCompleteHandler
 14776     1702  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 14777     1703  3025               	movlw	(low (i2c_write1ByteRegister@data| 0))& (0+255)
 14778     1704  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 14779     1705  319F  27D4  3196   	fcall	_I2C1_SetDataCompleteCallback
 14780     1708                     l13392:
 14781                           
 14782                           ;mcc_generated_files/drivers/i2c_simple_master.c: 55:     I2C1_SetBuffer(&reg,1);
 14783     1708  3024               	movlw	low i2c_write1ByteRegister@reg
 14784     1709  00F1               	movwf	I2C1_SetBuffer@buffer
 14785     170A  3000               	movlw	high i2c_write1ByteRegister@reg
 14786     170B  00F2               	movwf	I2C1_SetBuffer@buffer+1
 14787     170C  3001               	movlw	1
 14788     170D  00F3               	movwf	I2C1_SetBuffer@bufferSize
 14789     170E  3000               	movlw	0
 14790     170F  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 14791     1710  3190  2093  3196   	fcall	_I2C1_SetBuffer
 14792     1713                     l13394:
 14793                           
 14794                           ;mcc_generated_files/drivers/i2c_simple_master.c: 56:     I2C1_SetAddressNackCallback(((
      +                          void*)0),((void*)0));
 14795     1713  3000               	movlw	0
 14796     1714  00F5               	movwf	I2C1_SetAddressNackCallback@cb
 14797     1715  00F6               	movwf	I2C1_SetAddressNackCallback@cb+1
 14798     1716  3000               	movlw	0
 14799     1717  00F7               	movwf	I2C1_SetAddressNackCallback@ptr
 14800     1718  00F8               	movwf	I2C1_SetAddressNackCallback@ptr+1
 14801     1719  319F  27DF  3196   	fcall	_I2C1_SetAddressNackCallback
 14802     171C                     l13396:
 14803                           
 14804                           ;mcc_generated_files/drivers/i2c_simple_master.c: 57:     I2C1_MasterWrite();
 14805     171C  319E  26E1  3196   	fcall	_I2C1_MasterWrite
 14806     171F                     l13398:	
 14807                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58:     while(I2C1_BUSY == I2C1_Close(
      +                          ));
 14808                           
 14809     171F  3192  22AB  3196   	fcall	_I2C1_Close
 14810     1722  3A01               	xorlw	1
 14811     1723  1903               	skipnz
 14812     1724  2F26               	goto	u10111
 14813     1725  2F27               	goto	u10110
 14814     1726                     u10111:
 14815     1726  2F1F               	goto	l13398
 14816     1727                     u10110:
 14817     1727                     l510:
 14818     1727  0008               	return
 14819     1728                     __end_of_i2c_write1ByteRegister:
 14820                           
 14821                           	psect	text9
 14822     0D49                     __ptext9:	
 14823 ;; *************** function _getError *****************
 14824 ;; Defined at:
 14825 ;;		line 2310 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 14826 ;; Parameters:    Size  Location     Type
 14827 ;;		None
 14828 ;; Auto vars:     Size  Location     Type
 14829 ;;  statusReg       1   18[BANK0 ] unsigned char 
 14830 ;;  oscillatorEr    1   17[BANK0 ] unsigned char 
 14831 ;;  intPinError     1   16[BANK0 ] unsigned char 
 14832 ;;  otpCrcError     1   15[BANK0 ] unsigned char 
 14833 ;;  undervoltage    1   14[BANK0 ] unsigned char 
 14834 ;; Return value:  Size  Location     Type
 14835 ;;                  1    wreg      char 
 14836 ;; Registers used:
 14837 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14838 ;; Tracked objects:
 14839 ;;		On entry : 0/0
 14840 ;;		On exit  : 0/0
 14841 ;;		Unchanged: 0/0
 14842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14844 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14845 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14846 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14847 ;;Total ram usage:        7 bytes
 14848 ;; Hardware stack levels used: 1
 14849 ;; Hardware stack levels required when called: 15
 14850 ;; This function calls:
 14851 ;;		_bitRead8
 14852 ;;		_getDeviceStatus
 14853 ;; This function is called by:
 14854 ;;		_begin
 14855 ;;		_setOperatingMode
 14856 ;;		_setMagneticChannel
 14857 ;;		_setXYAxisRange
 14858 ;;		_setZAxisRange
 14859 ;;		_setTemperatureEn
 14860 ;;		_setupWakeUpAndSleep
 14861 ;;		_readWakeUpAndSleepData
 14862 ;;		_setCRCMode
 14863 ;;		_setMagTemp
 14864 ;;		_setConvAvg
 14865 ;;		_setReadMode
 14866 ;;		_setIntThreshold
 14867 ;;		_setLowPower
 14868 ;;		_setGlitchFilter
 14869 ;;		_setTriggerMode
 14870 ;;		_setSleeptime
 14871 ;;		_setMagDir
 14872 ;;		_setMagnitudeGain
 14873 ;;		_setMagneticGain
 14874 ;;		_setMagneticOffset1
 14875 ;;		_setMagneticOffset2
 14876 ;;		_setAngleEn
 14877 ;;		_setXThreshold
 14878 ;;		_setYThreshold
 14879 ;;		_setZThreshold
 14880 ;;		_setTemperatureThreshold
 14881 ;;		_setInterruptResult
 14882 ;;		_setThresholdEn
 14883 ;;		_setIntPinState
 14884 ;;		_setInterruptMode
 14885 ;;		_setMaskInterrupt
 14886 ;;		_setI2CAddress
 14887 ;;		_setI2CAddressEN
 14888 ;;		_setOscillatorError
 14889 ;; This function uses a non-reentrant model
 14890 ;;
 14891                           
 14892     0D49                     _getError:	
 14893                           ;psect for function _getError
 14894                           
 14895     0D49                     l13520:	
 14896                           ;incstack = 0
 14897 ;; hardware stack exceeded
 14898                           ; Regs used in _getError: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14899                           
 14900                           
 14901                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2312:     uint8_t stat
      +                          usReg = getDeviceStatus();
 14902     0D49  319F  275E  318D   	fcall	_getDeviceStatus
 14903     0D4C  0140               	movlb	0	; select bank0
 14904     0D4D  00B2               	movwf	getError@statusReg
 14905     0D4E                     l13522:
 14906                           
 14907                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2313:     uint8_t unde
      +                          rvoltageError = bitRead8(statusReg, 0);
 14908     0D4E  0832               	movf	getError@statusReg,w
 14909     0D4F  00AC               	movwf	??_getError
 14910     0D50  01AD               	clrf	??_getError+1
 14911     0D51  082C               	movf	??_getError,w
 14912     0D52  00F1               	movwf	bitRead8@reg
 14913     0D53  082D               	movf	??_getError+1,w
 14914     0D54  00F2               	movwf	bitRead8@reg+1
 14915     0D55  01F3               	clrf	bitRead8@position
 14916     0D56  3192  2265  318D   	fcall	_bitRead8
 14917     0D59  0140               	movlb	0	; select bank0
 14918     0D5A  00AE               	movwf	getError@undervoltageError
 14919     0D5B                     l13524:
 14920                           
 14921                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2314:     uint8_t otpC
      +                          rcError = bitRead8(statusReg, 1);
 14922     0D5B  0832               	movf	getError@statusReg,w
 14923     0D5C  00AC               	movwf	??_getError
 14924     0D5D  01AD               	clrf	??_getError+1
 14925     0D5E  082C               	movf	??_getError,w
 14926     0D5F  00F1               	movwf	bitRead8@reg
 14927     0D60  082D               	movf	??_getError+1,w
 14928     0D61  00F2               	movwf	bitRead8@reg+1
 14929     0D62  01F3               	clrf	bitRead8@position
 14930     0D63  0AF3               	incf	bitRead8@position,f
 14931     0D64  3192  2265  318D   	fcall	_bitRead8
 14932     0D67  0140               	movlb	0	; select bank0
 14933     0D68  00AF               	movwf	getError@otpCrcError
 14934     0D69                     l13526:
 14935                           
 14936                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2315:     uint8_t intP
      +                          inError = bitRead8(statusReg, 2);
 14937     0D69  0832               	movf	getError@statusReg,w
 14938     0D6A  00AC               	movwf	??_getError
 14939     0D6B  01AD               	clrf	??_getError+1
 14940     0D6C  082C               	movf	??_getError,w
 14941     0D6D  00F1               	movwf	bitRead8@reg
 14942     0D6E  082D               	movf	??_getError+1,w
 14943     0D6F  00F2               	movwf	bitRead8@reg+1
 14944     0D70  3002               	movlw	2
 14945     0D71  00F3               	movwf	bitRead8@position
 14946     0D72  3192  2265  318D   	fcall	_bitRead8
 14947     0D75  0140               	movlb	0	; select bank0
 14948     0D76  00B0               	movwf	getError@intPinError
 14949     0D77                     l13528:
 14950                           
 14951                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2316:     uint8_t osci
      +                          llatorError = bitRead8(statusReg, 3);
 14952     0D77  0832               	movf	getError@statusReg,w
 14953     0D78  00AC               	movwf	??_getError
 14954     0D79  01AD               	clrf	??_getError+1
 14955     0D7A  082C               	movf	??_getError,w
 14956     0D7B  00F1               	movwf	bitRead8@reg
 14957     0D7C  082D               	movf	??_getError+1,w
 14958     0D7D  00F2               	movwf	bitRead8@reg+1
 14959     0D7E  3003               	movlw	3
 14960     0D7F  00F3               	movwf	bitRead8@position
 14961     0D80  3192  2265  318D   	fcall	_bitRead8
 14962     0D83  0140               	movlb	0	; select bank0
 14963     0D84  00B1               	movwf	getError@oscillatorError
 14964     0D85                     l13530:
 14965                           
 14966                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2319:     if ((undervo
      +                          ltageError != 0) && (otpCrcError != 0) && (intPinError != 0) && (oscillatorError != 0)) 
      +                          {
 14967     0D85  082E               	movf	getError@undervoltageError,w
 14968     0D86  1903               	btfsc	3,2
 14969     0D87  2D89               	goto	u10281
 14970     0D88  2D8A               	goto	u10280
 14971     0D89                     u10281:
 14972     0D89  2D9B               	goto	l13544
 14973     0D8A                     u10280:
 14974     0D8A                     l13532:
 14975     0D8A  082F               	movf	getError@otpCrcError,w
 14976     0D8B  1903               	btfsc	3,2
 14977     0D8C  2D8E               	goto	u10291
 14978     0D8D  2D8F               	goto	u10290
 14979     0D8E                     u10291:
 14980     0D8E  2D9B               	goto	l13544
 14981     0D8F                     u10290:
 14982     0D8F                     l13534:
 14983     0D8F  0830               	movf	getError@intPinError,w
 14984     0D90  1903               	btfsc	3,2
 14985     0D91  2D93               	goto	u10301
 14986     0D92  2D94               	goto	u10300
 14987     0D93                     u10301:
 14988     0D93  2D9B               	goto	l13544
 14989     0D94                     u10300:
 14990     0D94                     l13536:
 14991     0D94  0831               	movf	getError@oscillatorError,w
 14992     0D95  1903               	btfsc	3,2
 14993     0D96  2D98               	goto	u10311
 14994     0D97  2D99               	goto	u10310
 14995     0D98                     u10311:
 14996     0D98  2D9B               	goto	l13544
 14997     0D99                     u10310:
 14998     0D99                     l13538:
 14999                           
 15000                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2320:         return -
      +                          1;
 15001     0D99  30FF               	movlw	255
 15002     0D9A  2D9C               	goto	l1183
 15003     0D9B                     l13544:
 15004                           
 15005                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2322:         return 0
      +                          ;
 15006     0D9B  3000               	movlw	0
 15007     0D9C                     l1183:
 15008     0D9C  0008               	return
 15009     0D9D                     __end_of_getError:
 15010                           
 15011                           	psect	text10
 15012     1F5E                     __ptext10:	
 15013 ;; *************** function _getDeviceStatus *****************
 15014 ;; Defined at:
 15015 ;;		line 2296 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15016 ;; Parameters:    Size  Location     Type
 15017 ;;		None
 15018 ;; Auto vars:     Size  Location     Type
 15019 ;;  deviceStatus    1   11[COMMON] unsigned char 
 15020 ;; Return value:  Size  Location     Type
 15021 ;;                  1    wreg      unsigned char 
 15022 ;; Registers used:
 15023 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15024 ;; Tracked objects:
 15025 ;;		On entry : 0/0
 15026 ;;		On exit  : 0/0
 15027 ;;		Unchanged: 0/0
 15028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15030 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15032 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15033 ;;Total ram usage:        1 bytes
 15034 ;; Hardware stack levels used: 1
 15035 ;; Hardware stack levels required when called: 14
 15036 ;; This function calls:
 15037 ;;		_readRegister
 15038 ;; This function is called by:
 15039 ;;		_getError
 15040 ;; This function uses a non-reentrant model
 15041 ;;
 15042                           
 15043     1F5E                     _getDeviceStatus:	
 15044                           ;psect for function _getDeviceStatus
 15045                           
 15046     1F5E                     l13434:	
 15047                           ;incstack = 0
 15048 ;; hardware stack exceeded
 15049                           ; Regs used in _getDeviceStatus: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15050                           
 15051                           
 15052                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2298:     uint8_t devi
      +                          ceStatusReg = readRegister(TMAG5273_REG_DEVICE_STATUS);
 15053     1F5E  301C               	movlw	28
 15054     1F5F  3190  2034  319F   	fcall	_readRegister
 15055     1F62  00FB               	movwf	getDeviceStatus@deviceStatusReg
 15056     1F63                     l13436:
 15057                           
 15058                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2300:     return devic
      +                          eStatusReg;
 15059     1F63  087B               	movf	getDeviceStatus@deviceStatusReg,w
 15060     1F64                     l1179:
 15061     1F64  0008               	return
 15062     1F65                     __end_of_getDeviceStatus:
 15063                           
 15064                           	psect	text11
 15065     127C                     __ptext11:	
 15066 ;; *************** function _bitWrite8 *****************
 15067 ;; Defined at:
 15068 ;;		line 2526 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15069 ;; Parameters:    Size  Location     Type
 15070 ;;  reg             2    1[COMMON] PTR unsigned char 
 15071 ;;		 -> RAM(8192), 
 15072 ;;  position        1    3[COMMON] unsigned char 
 15073 ;;  value           1    4[COMMON] unsigned char 
 15074 ;; Auto vars:     Size  Location     Type
 15075 ;;  mask            1    6[COMMON] unsigned char 
 15076 ;; Return value:  Size  Location     Type
 15077 ;;                  1    wreg      void 
 15078 ;; Registers used:
 15079 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15080 ;; Tracked objects:
 15081 ;;		On entry : 0/0
 15082 ;;		On exit  : 0/0
 15083 ;;		Unchanged: 0/0
 15084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15085 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15086 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15087 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15088 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15089 ;;Total ram usage:        6 bytes
 15090 ;; Hardware stack levels used: 1
 15091 ;; Hardware stack levels required when called: 4
 15092 ;; This function calls:
 15093 ;;		Nothing
 15094 ;; This function is called by:
 15095 ;;		_setOperatingMode
 15096 ;;		_setMagneticChannel
 15097 ;;		_setXYAxisRange
 15098 ;;		_setZAxisRange
 15099 ;;		_setTemperatureEn
 15100 ;;		_setCRCMode
 15101 ;;		_setMagTemp
 15102 ;;		_setConvAvg
 15103 ;;		_setReadMode
 15104 ;;		_setIntThreshold
 15105 ;;		_setLowPower
 15106 ;;		_setGlitchFilter
 15107 ;;		_setTriggerMode
 15108 ;;		_setSleeptime
 15109 ;;		_setMagDir
 15110 ;;		_setMagnitudeGain
 15111 ;;		_setAngleEn
 15112 ;;		_setInterruptResult
 15113 ;;		_setThresholdEn
 15114 ;;		_setIntPinState
 15115 ;;		_setMaskInterrupt
 15116 ;;		_setI2CAddressEN
 15117 ;;		_setOscillatorError
 15118 ;; This function uses a non-reentrant model
 15119 ;;
 15120                           
 15121     127C                     _bitWrite8:	
 15122                           ;psect for function _bitWrite8
 15123                           
 15124     127C                     l13558:	
 15125                           ;incstack = 0
 15126                           ; Regs used in _bitWrite8: [wreg+fsr1l+fsr1h+status,2+status,0]
 15127                           
 15128     127C                     l13560:
 15129                           
 15130                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2528:     mask = value
      +                           << position;
 15131     127C  0874               	movf	bitWrite8@value,w
 15132     127D  00F5               	movwf	??_bitWrite8
 15133     127E  0A73               	incf	bitWrite8@position,w
 15134     127F  2A81               	goto	u10324
 15135     1280                     u10325:
 15136     1280  35F5               	lslf	??_bitWrite8,f
 15137     1281                     u10324:
 15138     1281  0B89               	decfsz	9,f
 15139     1282  2A80               	goto	u10325
 15140     1283  0875               	movf	??_bitWrite8,w
 15141     1284  00F6               	movwf	bitWrite8@mask
 15142     1285                     l13562:
 15143                           
 15144                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2529:     *reg = *reg 
      +                          | mask;
 15145     1285  0871               	movf	bitWrite8@reg,w
 15146     1286  0086               	movwf	6
 15147     1287  0872               	movf	bitWrite8@reg+1,w
 15148     1288  0087               	movwf	7
 15149     1289  0801               	movf	1,w
 15150     128A  0476               	iorwf	bitWrite8@mask,w
 15151     128B  00F5               	movwf	??_bitWrite8
 15152     128C  0871               	movf	bitWrite8@reg,w
 15153     128D  0086               	movwf	6
 15154     128E  0872               	movf	bitWrite8@reg+1,w
 15155     128F  0087               	movwf	7
 15156     1290  0875               	movf	??_bitWrite8,w
 15157     1291  0081               	movwf	1
 15158     1292                     l1227:
 15159     1292  0008               	return
 15160     1293                     __end_of_bitWrite8:
 15161                           
 15162                           	psect	text12
 15163     12C3                     __ptext12:	
 15164 ;; *************** function _isConnected *****************
 15165 ;; Defined at:
 15166 ;;		line 118 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15167 ;; Parameters:    Size  Location     Type
 15168 ;;		None
 15169 ;; Auto vars:     Size  Location     Type
 15170 ;;		None
 15171 ;; Return value:  Size  Location     Type
 15172 ;;                  1    wreg      char 
 15173 ;; Registers used:
 15174 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15175 ;; Tracked objects:
 15176 ;;		On entry : 0/0
 15177 ;;		On exit  : 0/0
 15178 ;;		Unchanged: 0/0
 15179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15184 ;;Total ram usage:        0 bytes
 15185 ;; Hardware stack levels used: 1
 15186 ;; Hardware stack levels required when called: 14
 15187 ;; This function calls:
 15188 ;;		_TMAG5273_GetManufacture
 15189 ;; This function is called by:
 15190 ;;		_begin
 15191 ;; This function uses a non-reentrant model
 15192 ;;
 15193                           
 15194     12C3                     _isConnected:	
 15195                           ;psect for function _isConnected
 15196                           
 15197     12C3                     l13696:	
 15198                           ;incstack = 0
 15199                           ; Regs used in _isConnected: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15200                           
 15201                           
 15202                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 126:     manufactureId
      +                           = TMAG5273_GetManufacture();
 15203     12C3  3193  230D  3192   	fcall	_TMAG5273_GetManufacture
 15204     12C6  0140               	movlb	0	; select bank0
 15205     12C7  082E               	movf	?_TMAG5273_GetManufacture+1,w
 15206     12C8  0141               	movlb	1	; select bank1
 15207     12C9  00DF               	movwf	(_manufactureId+1)^(0+128)
 15208     12CA  0140               	movlb	0	; select bank0
 15209     12CB  082D               	movf	?_TMAG5273_GetManufacture,w
 15210     12CC  0141               	movlb	1	; select bank1
 15211     12CD  00DE               	movwf	_manufactureId^(0+128)
 15212     12CE                     l13698:
 15213                           
 15214                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 128:     if (manufactu
      +                          reId != 0x5449) {
 15215     12CE  3049               	movlw	73
 15216     12CF  065E               	xorwf	_manufactureId^(0+128),w
 15217     12D0  3054               	movlw	84
 15218     12D1  1903               	skipnz
 15219     12D2  065F               	xorwf	(_manufactureId+1)^(0+128),w
 15220     12D3  1903               	btfsc	3,2
 15221     12D4  2AD6               	goto	u10481
 15222     12D5  2AD7               	goto	u10480
 15223     12D6                     u10481:
 15224     12D6  2AD9               	goto	l13704
 15225     12D7                     u10480:
 15226     12D7                     l13700:
 15227                           
 15228                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 129:         return -1
      +                          ;
 15229     12D7  30FF               	movlw	255
 15230     12D8  2ADA               	goto	l673
 15231     12D9                     l13704:
 15232                           
 15233                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 132:     return 0;
 15234     12D9  3000               	movlw	0
 15235     12DA                     l673:
 15236     12DA  0008               	return
 15237     12DB                     __end_of_isConnected:
 15238                           
 15239                           	psect	text13
 15240     130D                     __ptext13:	
 15241 ;; *************** function _TMAG5273_GetManufacture *****************
 15242 ;; Defined at:
 15243 ;;		line 2532 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15244 ;; Parameters:    Size  Location     Type
 15245 ;;		None
 15246 ;; Auto vars:     Size  Location     Type
 15247 ;;  read            2   15[BANK0 ] unsigned short 
 15248 ;; Return value:  Size  Location     Type
 15249 ;;                  2   13[BANK0 ] unsigned short 
 15250 ;; Registers used:
 15251 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15252 ;; Tracked objects:
 15253 ;;		On entry : 0/0
 15254 ;;		On exit  : 0/0
 15255 ;;		Unchanged: 0/0
 15256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15257 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15258 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15260 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15261 ;;Total ram usage:        4 bytes
 15262 ;; Hardware stack levels used: 1
 15263 ;; Hardware stack levels required when called: 13
 15264 ;; This function calls:
 15265 ;;		_i2c_read2ByteRegister
 15266 ;;		_swap
 15267 ;; This function is called by:
 15268 ;;		_isConnected
 15269 ;; This function uses a non-reentrant model
 15270 ;;
 15271                           
 15272     130D                     _TMAG5273_GetManufacture:	
 15273                           ;psect for function _TMAG5273_GetManufacture
 15274                           
 15275     130D                     l13548:	
 15276                           ;incstack = 0
 15277                           ; Regs used in _TMAG5273_GetManufacture: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15278                           
 15279                           
 15280                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2534:     uint16_t rea
      +                          d = i2c_read2ByteRegister(0X22, TMAG5273_REG_MANUFACTURER_ID_LSB);
 15281     130D  300E               	movlw	14
 15282     130E  0140               	movlb	0	; select bank0
 15283     130F  00A4               	movwf	i2c_read2ByteRegister@reg
 15284     1310  3022               	movlw	34
 15285     1311  318A  2243  3193   	fcall	_i2c_read2ByteRegister
 15286     1314  0140               	movlb	0	; select bank0
 15287     1315  0825               	movf	?_i2c_read2ByteRegister+1,w
 15288     1316  00B0               	movwf	TMAG5273_GetManufacture@read+1
 15289     1317  0824               	movf	?_i2c_read2ByteRegister,w
 15290     1318  00AF               	movwf	TMAG5273_GetManufacture@read
 15291     1319                     l13550:
 15292                           
 15293                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2535:     return swap(
      +                          read);
 15294     1319  0830               	movf	TMAG5273_GetManufacture@read+1,w
 15295     131A  00F2               	movwf	swap@reg+1
 15296     131B  082F               	movf	TMAG5273_GetManufacture@read,w
 15297     131C  00F1               	movwf	swap@reg
 15298     131D  3191  21B7  3193   	fcall	_swap
 15299     1320  0872               	movf	?_swap+1,w
 15300     1321  0140               	movlb	0	; select bank0
 15301     1322  00AE               	movwf	?_TMAG5273_GetManufacture+1
 15302     1323  0871               	movf	?_swap,w
 15303     1324  00AD               	movwf	?_TMAG5273_GetManufacture
 15304     1325                     l1230:
 15305     1325  0008               	return
 15306     1326                     __end_of_TMAG5273_GetManufacture:
 15307                           
 15308                           	psect	text14
 15309     11B7                     __ptext14:	
 15310 ;; *************** function _swap *****************
 15311 ;; Defined at:
 15312 ;;		line 2538 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15313 ;; Parameters:    Size  Location     Type
 15314 ;;  reg             2    1[COMMON] unsigned short 
 15315 ;; Auto vars:     Size  Location     Type
 15316 ;;  lowerByte       1    9[COMMON] unsigned char 
 15317 ;;  upperByte       1    8[COMMON] unsigned char 
 15318 ;; Return value:  Size  Location     Type
 15319 ;;                  2    1[COMMON] unsigned short 
 15320 ;; Registers used:
 15321 ;;		wreg, status,2
 15322 ;; Tracked objects:
 15323 ;;		On entry : 0/0
 15324 ;;		On exit  : 0/0
 15325 ;;		Unchanged: 0/0
 15326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15327 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15328 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15329 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15330 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15331 ;;Total ram usage:        9 bytes
 15332 ;; Hardware stack levels used: 1
 15333 ;; Hardware stack levels required when called: 4
 15334 ;; This function calls:
 15335 ;;		Nothing
 15336 ;; This function is called by:
 15337 ;;		_TMAG5273_GetManufacture
 15338 ;; This function uses a non-reentrant model
 15339 ;;
 15340                           
 15341     11B7                     _swap:	
 15342                           ;psect for function _swap
 15343                           
 15344     11B7                     l13440:	
 15345                           ;incstack = 0
 15346                           ; Regs used in _swap: [wreg+status,2]
 15347                           
 15348                           
 15349                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2539:     uint8_t uppe
      +                          rByte;;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2540:     uint8_
      +                          t lowerByte;;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2542:     
      +                          upperByte = ((reg & (0xFF00)) >> 8);
 15350     11B7  0872               	movf	swap@reg+1,w
 15351     11B8  00F8               	movwf	swap@upperByte
 15352     11B9                     l13442:
 15353                           
 15354                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2543:     lowerByte = 
      +                          (uint8_t) reg;
 15355     11B9  0871               	movf	swap@reg,w
 15356     11BA  00F9               	movwf	swap@lowerByte
 15357     11BB                     l13444:
 15358                           
 15359                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2545:     reg = ((int1
      +                          6_t) (lowerByte << 8) | upperByte);
 15360     11BB  0878               	movf	swap@upperByte,w
 15361     11BC  00F3               	movwf	??_swap
 15362     11BD  01F4               	clrf	??_swap+1
 15363     11BE  0879               	movf	swap@lowerByte,w
 15364     11BF  00F5               	movwf	??_swap+2
 15365     11C0  01F6               	clrf	??_swap+3
 15366     11C1  0875               	movf	??_swap+2,w
 15367     11C2  00F6               	movwf	??_swap+3
 15368     11C3  01F5               	clrf	??_swap+2
 15369     11C4  0873               	movf	??_swap,w
 15370     11C5  0475               	iorwf	??_swap+2,w
 15371     11C6  00F1               	movwf	swap@reg
 15372     11C7  0874               	movf	??_swap+1,w
 15373     11C8  0476               	iorwf	??_swap+3,w
 15374     11C9  00F2               	movwf	swap@reg+1
 15375     11CA                     l13446:
 15376     11CA                     l1233:	
 15377                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2547:     return reg;
 15378                           
 15379     11CA  0008               	return
 15380     11CB                     __end_of_swap:
 15381                           
 15382                           	psect	text15
 15383     11CB                     __ptext15:	
 15384 ;; *************** function _getTemperatureEN *****************
 15385 ;; Defined at:
 15386 ;;		line 2029 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15387 ;; Parameters:    Size  Location     Type
 15388 ;;		None
 15389 ;; Auto vars:     Size  Location     Type
 15390 ;;  tempENreg       1   15[BANK0 ] unsigned char 
 15391 ;;  tempEN          1   14[BANK0 ] unsigned char 
 15392 ;; Return value:  Size  Location     Type
 15393 ;;                  1    wreg      unsigned char 
 15394 ;; Registers used:
 15395 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15396 ;; Tracked objects:
 15397 ;;		On entry : 0/0
 15398 ;;		On exit  : 0/0
 15399 ;;		Unchanged: 0/0
 15400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15402 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15403 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15404 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15405 ;;Total ram usage:        4 bytes
 15406 ;; Hardware stack levels used: 1
 15407 ;; Hardware stack levels required when called: 14
 15408 ;; This function calls:
 15409 ;;		_bitRead8
 15410 ;;		_readRegister
 15411 ;; This function is called by:
 15412 ;;		_begin
 15413 ;; This function uses a non-reentrant model
 15414 ;;
 15415                           
 15416     11CB                     _getTemperatureEN:	
 15417                           ;psect for function _getTemperatureEN
 15418                           
 15419     11CB                     l14124:	
 15420                           ;incstack = 0
 15421                           ; Regs used in _getTemperatureEN: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15422                           
 15423     11CB                     l14126:
 15424                           
 15425                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2031:     tempENreg = 
      +                          readRegister(TMAG5273_REG_T_CONFIG);
 15426     11CB  3007               	movlw	7
 15427     11CC  3190  2034  3191   	fcall	_readRegister
 15428     11CF  0140               	movlb	0	; select bank0
 15429     11D0  00AF               	movwf	getTemperatureEN@tempENreg
 15430     11D1                     l14128:
 15431                           
 15432                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2033:     uint8_t temp
      +                          EN = bitRead8(tempENreg, 0);
 15433     11D1  082F               	movf	getTemperatureEN@tempENreg,w
 15434     11D2  00AC               	movwf	??_getTemperatureEN
 15435     11D3  01AD               	clrf	??_getTemperatureEN+1
 15436     11D4  082C               	movf	??_getTemperatureEN,w
 15437     11D5  00F1               	movwf	bitRead8@reg
 15438     11D6  082D               	movf	??_getTemperatureEN+1,w
 15439     11D7  00F2               	movwf	bitRead8@reg+1
 15440     11D8  01F3               	clrf	bitRead8@position
 15441     11D9  3192  2265  3191   	fcall	_bitRead8
 15442     11DC  0140               	movlb	0	; select bank0
 15443     11DD  00AE               	movwf	getTemperatureEN@tempEN
 15444     11DE                     l14130:
 15445                           
 15446                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2035:     return tempE
      +                          N;
 15447     11DE  082E               	movf	getTemperatureEN@tempEN,w
 15448     11DF                     l1123:
 15449     11DF  0008               	return
 15450     11E0                     __end_of_getTemperatureEN:
 15451                           
 15452                           	psect	text16
 15453     0CA2                     __ptext16:	
 15454 ;; *************** function _getOperatingMode *****************
 15455 ;; Defined at:
 15456 ;;		line 1575 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15457 ;; Parameters:    Size  Location     Type
 15458 ;;		None
 15459 ;; Auto vars:     Size  Location     Type
 15460 ;;  opMode1         1   16[BANK0 ] unsigned char 
 15461 ;;  opMode0         1   15[BANK0 ] unsigned char 
 15462 ;;  opMode          1   14[BANK0 ] unsigned char 
 15463 ;; Return value:  Size  Location     Type
 15464 ;;                  1    wreg      unsigned char 
 15465 ;; Registers used:
 15466 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15467 ;; Tracked objects:
 15468 ;;		On entry : 0/0
 15469 ;;		On exit  : 0/0
 15470 ;;		Unchanged: 0/0
 15471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15473 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15474 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15475 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15476 ;;Total ram usage:        5 bytes
 15477 ;; Hardware stack levels used: 1
 15478 ;; Hardware stack levels required when called: 14
 15479 ;; This function calls:
 15480 ;;		_bitRead8
 15481 ;;		_readRegister
 15482 ;; This function is called by:
 15483 ;;		_begin
 15484 ;; This function uses a non-reentrant model
 15485 ;;
 15486                           
 15487     0CA2                     _getOperatingMode:	
 15488                           ;psect for function _getOperatingMode
 15489                           
 15490     0CA2                     l13890:	
 15491                           ;incstack = 0
 15492                           ; Regs used in _getOperatingMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15493                           
 15494     0CA2                     l13892:
 15495                           
 15496                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1577:     opMode = rea
      +                          dRegister(TMAG5273_REG_DEVICE_CONFIG_2);
 15497     0CA2  3001               	movlw	1
 15498     0CA3  3190  2034  318C   	fcall	_readRegister
 15499     0CA6  0140               	movlb	0	; select bank0
 15500     0CA7  00AE               	movwf	getOperatingMode@opMode
 15501     0CA8                     l13894:
 15502                           
 15503                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1579:     uint8_t opMo
      +                          de0 = bitRead8(opMode, 0);
 15504     0CA8  082E               	movf	getOperatingMode@opMode,w
 15505     0CA9  00AC               	movwf	??_getOperatingMode
 15506     0CAA  01AD               	clrf	??_getOperatingMode+1
 15507     0CAB  082C               	movf	??_getOperatingMode,w
 15508     0CAC  00F1               	movwf	bitRead8@reg
 15509     0CAD  082D               	movf	??_getOperatingMode+1,w
 15510     0CAE  00F2               	movwf	bitRead8@reg+1
 15511     0CAF  01F3               	clrf	bitRead8@position
 15512     0CB0  3192  2265  318C   	fcall	_bitRead8
 15513     0CB3  0140               	movlb	0	; select bank0
 15514     0CB4  00AF               	movwf	getOperatingMode@opMode0
 15515     0CB5                     l13896:
 15516                           
 15517                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1580:     uint8_t opMo
      +                          de1 = bitRead8(opMode, 1);
 15518     0CB5  082E               	movf	getOperatingMode@opMode,w
 15519     0CB6  00AC               	movwf	??_getOperatingMode
 15520     0CB7  01AD               	clrf	??_getOperatingMode+1
 15521     0CB8  082C               	movf	??_getOperatingMode,w
 15522     0CB9  00F1               	movwf	bitRead8@reg
 15523     0CBA  082D               	movf	??_getOperatingMode+1,w
 15524     0CBB  00F2               	movwf	bitRead8@reg+1
 15525     0CBC  01F3               	clrf	bitRead8@position
 15526     0CBD  0AF3               	incf	bitRead8@position,f
 15527     0CBE  3192  2265  318C   	fcall	_bitRead8
 15528     0CC1  0140               	movlb	0	; select bank0
 15529     0CC2  00B0               	movwf	getOperatingMode@opMode1
 15530     0CC3                     l13898:
 15531                           
 15532                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1582:     if ((opMode0
      +                           == 0) && (opMode1 == 0))
 15533     0CC3  082F               	movf	getOperatingMode@opMode0,w
 15534     0CC4  1D03               	btfss	3,2
 15535     0CC5  2CC7               	goto	u10711
 15536     0CC6  2CC8               	goto	u10710
 15537     0CC7                     u10711:
 15538     0CC7  2CCF               	goto	l13908
 15539     0CC8                     u10710:
 15540     0CC8                     l13900:
 15541     0CC8  0830               	movf	getOperatingMode@opMode1,w
 15542     0CC9  1D03               	btfss	3,2
 15543     0CCA  2CCC               	goto	u10721
 15544     0CCB  2CCD               	goto	u10720
 15545     0CCC                     u10721:
 15546     0CCC  2CCF               	goto	l13908
 15547     0CCD                     u10720:
 15548     0CCD                     l13902:
 15549                           
 15550                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1583:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1585:         return 0;
 15551     0CCD  3000               	movlw	0
 15552     0CCE  2CF4               	goto	l995
 15553     0CCF                     l13908:
 15554     0CCF  032F               	decf	getOperatingMode@opMode0,w
 15555     0CD0  1D03               	btfss	3,2
 15556     0CD1  2CD3               	goto	u10731
 15557     0CD2  2CD4               	goto	u10730
 15558     0CD3                     u10731:
 15559     0CD3  2CDB               	goto	l13918
 15560     0CD4                     u10730:
 15561     0CD4                     l13910:
 15562     0CD4  0830               	movf	getOperatingMode@opMode1,w
 15563     0CD5  1D03               	btfss	3,2
 15564     0CD6  2CD8               	goto	u10741
 15565     0CD7  2CD9               	goto	u10740
 15566     0CD8                     u10741:
 15567     0CD8  2CDB               	goto	l13918
 15568     0CD9                     u10740:
 15569     0CD9                     l13912:
 15570                           
 15571                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1587:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1589:         return 1;
 15572     0CD9  3001               	movlw	1
 15573     0CDA  2CF4               	goto	l995
 15574     0CDB                     l13918:
 15575     0CDB  082F               	movf	getOperatingMode@opMode0,w
 15576     0CDC  1D03               	btfss	3,2
 15577     0CDD  2CDF               	goto	u10751
 15578     0CDE  2CE0               	goto	u10750
 15579     0CDF                     u10751:
 15580     0CDF  2CE7               	goto	l13928
 15581     0CE0                     u10750:
 15582     0CE0                     l13920:
 15583     0CE0  0330               	decf	getOperatingMode@opMode1,w
 15584     0CE1  1D03               	btfss	3,2
 15585     0CE2  2CE4               	goto	u10761
 15586     0CE3  2CE5               	goto	u10760
 15587     0CE4                     u10761:
 15588     0CE4  2CE7               	goto	l13928
 15589     0CE5                     u10760:
 15590     0CE5                     l13922:
 15591                           
 15592                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1591:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1593:         return 2;
 15593     0CE5  3002               	movlw	2
 15594     0CE6  2CF4               	goto	l995
 15595     0CE7                     l13928:
 15596     0CE7  032F               	decf	getOperatingMode@opMode0,w
 15597     0CE8  1D03               	btfss	3,2
 15598     0CE9  2CEB               	goto	u10771
 15599     0CEA  2CEC               	goto	u10770
 15600     0CEB                     u10771:
 15601     0CEB  2CF3               	goto	l998
 15602     0CEC                     u10770:
 15603     0CEC                     l13930:
 15604     0CEC  0330               	decf	getOperatingMode@opMode1,w
 15605     0CED  1D03               	btfss	3,2
 15606     0CEE  2CF0               	goto	u10781
 15607     0CEF  2CF1               	goto	u10780
 15608     0CF0                     u10781:
 15609     0CF0  2CF3               	goto	l998
 15610     0CF1                     u10780:
 15611     0CF1                     l13932:
 15612                           
 15613                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1595:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1597:         return 3;
 15614     0CF1  3003               	movlw	3
 15615     0CF2  2CF4               	goto	l995
 15616     0CF3                     l998:
 15617     0CF3  2CCD               	goto	l13902
 15618     0CF4                     l995:
 15619     0CF4  0008               	return
 15620     0CF5                     __end_of_getOperatingMode:
 15621                           
 15622                           	psect	text17
 15623     0378                     __ptext17:	
 15624 ;; *************** function _getMagneticChannel *****************
 15625 ;; Defined at:
 15626 ;;		line 1619 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15627 ;; Parameters:    Size  Location     Type
 15628 ;;		None
 15629 ;; Auto vars:     Size  Location     Type
 15630 ;;  magMode7        1   18[BANK0 ] unsigned char 
 15631 ;;  magMode6        1   17[BANK0 ] unsigned char 
 15632 ;;  magMode5        1   16[BANK0 ] unsigned char 
 15633 ;;  magMode4        1   15[BANK0 ] unsigned char 
 15634 ;;  magChannel      1   14[BANK0 ] unsigned char 
 15635 ;; Return value:  Size  Location     Type
 15636 ;;                  1    wreg      unsigned char 
 15637 ;; Registers used:
 15638 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15639 ;; Tracked objects:
 15640 ;;		On entry : 0/0
 15641 ;;		On exit  : 0/0
 15642 ;;		Unchanged: 0/0
 15643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15645 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15646 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15647 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15648 ;;Total ram usage:        7 bytes
 15649 ;; Hardware stack levels used: 1
 15650 ;; Hardware stack levels required when called: 14
 15651 ;; This function calls:
 15652 ;;		_bitRead8
 15653 ;;		_readRegister
 15654 ;; This function is called by:
 15655 ;;		_begin
 15656 ;; This function uses a non-reentrant model
 15657 ;;
 15658                           
 15659     0378                     _getMagneticChannel:	
 15660                           ;psect for function _getMagneticChannel
 15661                           
 15662     0378                     l13940:	
 15663                           ;incstack = 0
 15664                           ; Regs used in _getMagneticChannel: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15665                           
 15666     0378                     l13942:
 15667                           
 15668                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1621:     magChannel =
      +                           readRegister(TMAG5273_REG_SENSOR_CONFIG_1);
 15669     0378  3002               	movlw	2
 15670     0379  3190  2034  3183   	fcall	_readRegister
 15671     037C  0140               	movlb	0	; select bank0
 15672     037D  00AE               	movwf	getMagneticChannel@magChannel
 15673     037E                     l13944:
 15674                           
 15675                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1623:     uint8_t magM
      +                          ode4 = bitRead8(magChannel, 4);
 15676     037E  082E               	movf	getMagneticChannel@magChannel,w
 15677     037F  00AC               	movwf	??_getMagneticChannel
 15678     0380  01AD               	clrf	??_getMagneticChannel+1
 15679     0381  082C               	movf	??_getMagneticChannel,w
 15680     0382  00F1               	movwf	bitRead8@reg
 15681     0383  082D               	movf	??_getMagneticChannel+1,w
 15682     0384  00F2               	movwf	bitRead8@reg+1
 15683     0385  3004               	movlw	4
 15684     0386  00F3               	movwf	bitRead8@position
 15685     0387  3192  2265  3183   	fcall	_bitRead8
 15686     038A  0140               	movlb	0	; select bank0
 15687     038B  00AF               	movwf	getMagneticChannel@magMode4
 15688     038C                     l13946:
 15689                           
 15690                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1624:     uint8_t magM
      +                          ode5 = bitRead8(magChannel, 5);
 15691     038C  082E               	movf	getMagneticChannel@magChannel,w
 15692     038D  00AC               	movwf	??_getMagneticChannel
 15693     038E  01AD               	clrf	??_getMagneticChannel+1
 15694     038F  082C               	movf	??_getMagneticChannel,w
 15695     0390  00F1               	movwf	bitRead8@reg
 15696     0391  082D               	movf	??_getMagneticChannel+1,w
 15697     0392  00F2               	movwf	bitRead8@reg+1
 15698     0393  3005               	movlw	5
 15699     0394  00F3               	movwf	bitRead8@position
 15700     0395  3192  2265  3183   	fcall	_bitRead8
 15701     0398  0140               	movlb	0	; select bank0
 15702     0399  00B0               	movwf	getMagneticChannel@magMode5
 15703     039A                     l13948:
 15704                           
 15705                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1625:     uint8_t magM
      +                          ode6 = bitRead8(magChannel, 6);
 15706     039A  082E               	movf	getMagneticChannel@magChannel,w
 15707     039B  00AC               	movwf	??_getMagneticChannel
 15708     039C  01AD               	clrf	??_getMagneticChannel+1
 15709     039D  082C               	movf	??_getMagneticChannel,w
 15710     039E  00F1               	movwf	bitRead8@reg
 15711     039F  082D               	movf	??_getMagneticChannel+1,w
 15712     03A0  00F2               	movwf	bitRead8@reg+1
 15713     03A1  3006               	movlw	6
 15714     03A2  00F3               	movwf	bitRead8@position
 15715     03A3  3192  2265  3183   	fcall	_bitRead8
 15716     03A6  0140               	movlb	0	; select bank0
 15717     03A7  00B1               	movwf	getMagneticChannel@magMode6
 15718     03A8                     l13950:
 15719                           
 15720                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1626:     uint8_t magM
      +                          ode7 = bitRead8(magChannel, 7);
 15721     03A8  082E               	movf	getMagneticChannel@magChannel,w
 15722     03A9  00AC               	movwf	??_getMagneticChannel
 15723     03AA  01AD               	clrf	??_getMagneticChannel+1
 15724     03AB  082C               	movf	??_getMagneticChannel,w
 15725     03AC  00F1               	movwf	bitRead8@reg
 15726     03AD  082D               	movf	??_getMagneticChannel+1,w
 15727     03AE  00F2               	movwf	bitRead8@reg+1
 15728     03AF  3007               	movlw	7
 15729     03B0  00F3               	movwf	bitRead8@position
 15730     03B1  3192  2265  3183   	fcall	_bitRead8
 15731     03B4  0140               	movlb	0	; select bank0
 15732     03B5  00B2               	movwf	getMagneticChannel@magMode7
 15733     03B6                     l13952:
 15734                           
 15735                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1628:     if ((magMode
      +                          4 == 0) && (magMode5 == 0) && (magMode6 == 0) && (magMode7 == 0))
 15736     03B6  082F               	movf	getMagneticChannel@magMode4,w
 15737     03B7  1D03               	btfss	3,2
 15738     03B8  2BBA               	goto	u10791
 15739     03B9  2BBB               	goto	u10790
 15740     03BA                     u10791:
 15741     03BA  2BCC               	goto	l13966
 15742     03BB                     u10790:
 15743     03BB                     l13954:
 15744     03BB  0830               	movf	getMagneticChannel@magMode5,w
 15745     03BC  1D03               	btfss	3,2
 15746     03BD  2BBF               	goto	u10801
 15747     03BE  2BC0               	goto	u10800
 15748     03BF                     u10801:
 15749     03BF  2BCC               	goto	l13966
 15750     03C0                     u10800:
 15751     03C0                     l13956:
 15752     03C0  0831               	movf	getMagneticChannel@magMode6,w
 15753     03C1  1D03               	btfss	3,2
 15754     03C2  2BC4               	goto	u10811
 15755     03C3  2BC5               	goto	u10810
 15756     03C4                     u10811:
 15757     03C4  2BCC               	goto	l13966
 15758     03C5                     u10810:
 15759     03C5                     l13958:
 15760     03C5  0832               	movf	getMagneticChannel@magMode7,w
 15761     03C6  1D03               	btfss	3,2
 15762     03C7  2BC9               	goto	u10821
 15763     03C8  2BCA               	goto	u10820
 15764     03C9                     u10821:
 15765     03C9  2BCC               	goto	l13966
 15766     03CA                     u10820:
 15767     03CA                     l13960:
 15768                           
 15769                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1629:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1630:         return 0;
 15770     03CA  3000               	movlw	0
 15771     03CB  2CBD               	goto	l1005
 15772     03CC                     l13966:
 15773     03CC  032F               	decf	getMagneticChannel@magMode4,w
 15774     03CD  1D03               	btfss	3,2
 15775     03CE  2BD0               	goto	u10831
 15776     03CF  2BD1               	goto	u10830
 15777     03D0                     u10831:
 15778     03D0  2BE2               	goto	l13980
 15779     03D1                     u10830:
 15780     03D1                     l13968:
 15781     03D1  0830               	movf	getMagneticChannel@magMode5,w
 15782     03D2  1D03               	btfss	3,2
 15783     03D3  2BD5               	goto	u10841
 15784     03D4  2BD6               	goto	u10840
 15785     03D5                     u10841:
 15786     03D5  2BE2               	goto	l13980
 15787     03D6                     u10840:
 15788     03D6                     l13970:
 15789     03D6  0831               	movf	getMagneticChannel@magMode6,w
 15790     03D7  1D03               	btfss	3,2
 15791     03D8  2BDA               	goto	u10851
 15792     03D9  2BDB               	goto	u10850
 15793     03DA                     u10851:
 15794     03DA  2BE2               	goto	l13980
 15795     03DB                     u10850:
 15796     03DB                     l13972:
 15797     03DB  0832               	movf	getMagneticChannel@magMode7,w
 15798     03DC  1D03               	btfss	3,2
 15799     03DD  2BDF               	goto	u10861
 15800     03DE  2BE0               	goto	u10860
 15801     03DF                     u10861:
 15802     03DF  2BE2               	goto	l13980
 15803     03E0                     u10860:
 15804     03E0                     l13974:
 15805                           
 15806                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1632:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1633:         return 1;
 15807     03E0  3001               	movlw	1
 15808     03E1  2CBD               	goto	l1005
 15809     03E2                     l13980:
 15810     03E2  082F               	movf	getMagneticChannel@magMode4,w
 15811     03E3  1D03               	btfss	3,2
 15812     03E4  2BE6               	goto	u10871
 15813     03E5  2BE7               	goto	u10870
 15814     03E6                     u10871:
 15815     03E6  2BF8               	goto	l13994
 15816     03E7                     u10870:
 15817     03E7                     l13982:
 15818     03E7  0330               	decf	getMagneticChannel@magMode5,w
 15819     03E8  1D03               	btfss	3,2
 15820     03E9  2BEB               	goto	u10881
 15821     03EA  2BEC               	goto	u10880
 15822     03EB                     u10881:
 15823     03EB  2BF8               	goto	l13994
 15824     03EC                     u10880:
 15825     03EC                     l13984:
 15826     03EC  0831               	movf	getMagneticChannel@magMode6,w
 15827     03ED  1D03               	btfss	3,2
 15828     03EE  2BF0               	goto	u10891
 15829     03EF  2BF1               	goto	u10890
 15830     03F0                     u10891:
 15831     03F0  2BF8               	goto	l13994
 15832     03F1                     u10890:
 15833     03F1                     l13986:
 15834     03F1  0832               	movf	getMagneticChannel@magMode7,w
 15835     03F2  1D03               	btfss	3,2
 15836     03F3  2BF5               	goto	u10901
 15837     03F4  2BF6               	goto	u10900
 15838     03F5                     u10901:
 15839     03F5  2BF8               	goto	l13994
 15840     03F6                     u10900:
 15841     03F6                     l13988:
 15842                           
 15843                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1635:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1636:         return 2;
 15844     03F6  3002               	movlw	2
 15845     03F7  2CBD               	goto	l1005
 15846     03F8                     l13994:
 15847     03F8  032F               	decf	getMagneticChannel@magMode4,w
 15848     03F9  1D03               	btfss	3,2
 15849     03FA  2BFC               	goto	u10911
 15850     03FB  2BFD               	goto	u10910
 15851     03FC                     u10911:
 15852     03FC  2C0E               	goto	l14008
 15853     03FD                     u10910:
 15854     03FD                     l13996:
 15855     03FD  0330               	decf	getMagneticChannel@magMode5,w
 15856     03FE  1D03               	btfss	3,2
 15857     03FF  2C01               	goto	u10921
 15858     0400  2C02               	goto	u10920
 15859     0401                     u10921:
 15860     0401  2C0E               	goto	l14008
 15861     0402                     u10920:
 15862     0402                     l13998:
 15863     0402  0831               	movf	getMagneticChannel@magMode6,w
 15864     0403  1D03               	btfss	3,2
 15865     0404  2C06               	goto	u10931
 15866     0405  2C07               	goto	u10930
 15867     0406                     u10931:
 15868     0406  2C0E               	goto	l14008
 15869     0407                     u10930:
 15870     0407                     l14000:
 15871     0407  0832               	movf	getMagneticChannel@magMode7,w
 15872     0408  1D03               	btfss	3,2
 15873     0409  2C0B               	goto	u10941
 15874     040A  2C0C               	goto	u10940
 15875     040B                     u10941:
 15876     040B  2C0E               	goto	l14008
 15877     040C                     u10940:
 15878     040C                     l14002:
 15879                           
 15880                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1638:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1639:         return 3;
 15881     040C  3003               	movlw	3
 15882     040D  2CBD               	goto	l1005
 15883     040E                     l14008:
 15884     040E  082F               	movf	getMagneticChannel@magMode4,w
 15885     040F  1D03               	btfss	3,2
 15886     0410  2C12               	goto	u10951
 15887     0411  2C13               	goto	u10950
 15888     0412                     u10951:
 15889     0412  2C24               	goto	l14022
 15890     0413                     u10950:
 15891     0413                     l14010:
 15892     0413  0830               	movf	getMagneticChannel@magMode5,w
 15893     0414  1D03               	btfss	3,2
 15894     0415  2C17               	goto	u10961
 15895     0416  2C18               	goto	u10960
 15896     0417                     u10961:
 15897     0417  2C24               	goto	l14022
 15898     0418                     u10960:
 15899     0418                     l14012:
 15900     0418  0331               	decf	getMagneticChannel@magMode6,w
 15901     0419  1D03               	btfss	3,2
 15902     041A  2C1C               	goto	u10971
 15903     041B  2C1D               	goto	u10970
 15904     041C                     u10971:
 15905     041C  2C24               	goto	l14022
 15906     041D                     u10970:
 15907     041D                     l14014:
 15908     041D  0832               	movf	getMagneticChannel@magMode7,w
 15909     041E  1D03               	btfss	3,2
 15910     041F  2C21               	goto	u10981
 15911     0420  2C22               	goto	u10980
 15912     0421                     u10981:
 15913     0421  2C24               	goto	l14022
 15914     0422                     u10980:
 15915     0422                     l14016:
 15916                           
 15917                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1641:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1642:         return 4;
 15918     0422  3004               	movlw	4
 15919     0423  2CBD               	goto	l1005
 15920     0424                     l14022:
 15921     0424  032F               	decf	getMagneticChannel@magMode4,w
 15922     0425  1D03               	btfss	3,2
 15923     0426  2C28               	goto	u10991
 15924     0427  2C29               	goto	u10990
 15925     0428                     u10991:
 15926     0428  2C3A               	goto	l14036
 15927     0429                     u10990:
 15928     0429                     l14024:
 15929     0429  0830               	movf	getMagneticChannel@magMode5,w
 15930     042A  1D03               	btfss	3,2
 15931     042B  2C2D               	goto	u11001
 15932     042C  2C2E               	goto	u11000
 15933     042D                     u11001:
 15934     042D  2C3A               	goto	l14036
 15935     042E                     u11000:
 15936     042E                     l14026:
 15937     042E  0331               	decf	getMagneticChannel@magMode6,w
 15938     042F  1D03               	btfss	3,2
 15939     0430  2C32               	goto	u11011
 15940     0431  2C33               	goto	u11010
 15941     0432                     u11011:
 15942     0432  2C3A               	goto	l14036
 15943     0433                     u11010:
 15944     0433                     l14028:
 15945     0433  0832               	movf	getMagneticChannel@magMode7,w
 15946     0434  1D03               	btfss	3,2
 15947     0435  2C37               	goto	u11021
 15948     0436  2C38               	goto	u11020
 15949     0437                     u11021:
 15950     0437  2C3A               	goto	l14036
 15951     0438                     u11020:
 15952     0438                     l14030:
 15953                           
 15954                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1644:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1645:         return 5;
 15955     0438  3005               	movlw	5
 15956     0439  2CBD               	goto	l1005
 15957     043A                     l14036:
 15958     043A  082F               	movf	getMagneticChannel@magMode4,w
 15959     043B  1D03               	btfss	3,2
 15960     043C  2C3E               	goto	u11031
 15961     043D  2C3F               	goto	u11030
 15962     043E                     u11031:
 15963     043E  2C50               	goto	l14050
 15964     043F                     u11030:
 15965     043F                     l14038:
 15966     043F  0330               	decf	getMagneticChannel@magMode5,w
 15967     0440  1D03               	btfss	3,2
 15968     0441  2C43               	goto	u11041
 15969     0442  2C44               	goto	u11040
 15970     0443                     u11041:
 15971     0443  2C50               	goto	l14050
 15972     0444                     u11040:
 15973     0444                     l14040:
 15974     0444  0331               	decf	getMagneticChannel@magMode6,w
 15975     0445  1D03               	btfss	3,2
 15976     0446  2C48               	goto	u11051
 15977     0447  2C49               	goto	u11050
 15978     0448                     u11051:
 15979     0448  2C50               	goto	l14050
 15980     0449                     u11050:
 15981     0449                     l14042:
 15982     0449  0832               	movf	getMagneticChannel@magMode7,w
 15983     044A  1D03               	btfss	3,2
 15984     044B  2C4D               	goto	u11061
 15985     044C  2C4E               	goto	u11060
 15986     044D                     u11061:
 15987     044D  2C50               	goto	l14050
 15988     044E                     u11060:
 15989     044E                     l14044:
 15990                           
 15991                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1647:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1648:         return 6;
 15992     044E  3006               	movlw	6
 15993     044F  2CBD               	goto	l1005
 15994     0450                     l14050:
 15995     0450  032F               	decf	getMagneticChannel@magMode4,w
 15996     0451  1D03               	btfss	3,2
 15997     0452  2C54               	goto	u11071
 15998     0453  2C55               	goto	u11070
 15999     0454                     u11071:
 16000     0454  2C66               	goto	l14064
 16001     0455                     u11070:
 16002     0455                     l14052:
 16003     0455  0330               	decf	getMagneticChannel@magMode5,w
 16004     0456  1D03               	btfss	3,2
 16005     0457  2C59               	goto	u11081
 16006     0458  2C5A               	goto	u11080
 16007     0459                     u11081:
 16008     0459  2C66               	goto	l14064
 16009     045A                     u11080:
 16010     045A                     l14054:
 16011     045A  0331               	decf	getMagneticChannel@magMode6,w
 16012     045B  1D03               	btfss	3,2
 16013     045C  2C5E               	goto	u11091
 16014     045D  2C5F               	goto	u11090
 16015     045E                     u11091:
 16016     045E  2C66               	goto	l14064
 16017     045F                     u11090:
 16018     045F                     l14056:
 16019     045F  0832               	movf	getMagneticChannel@magMode7,w
 16020     0460  1D03               	btfss	3,2
 16021     0461  2C63               	goto	u11101
 16022     0462  2C64               	goto	u11100
 16023     0463                     u11101:
 16024     0463  2C66               	goto	l14064
 16025     0464                     u11100:
 16026     0464                     l14058:
 16027                           
 16028                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1650:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1651:         return 7;
 16029     0464  3007               	movlw	7
 16030     0465  2CBD               	goto	l1005
 16031     0466                     l14064:
 16032     0466  082F               	movf	getMagneticChannel@magMode4,w
 16033     0467  1D03               	btfss	3,2
 16034     0468  2C6A               	goto	u11111
 16035     0469  2C6B               	goto	u11110
 16036     046A                     u11111:
 16037     046A  2C7C               	goto	l14078
 16038     046B                     u11110:
 16039     046B                     l14066:
 16040     046B  0830               	movf	getMagneticChannel@magMode5,w
 16041     046C  1D03               	btfss	3,2
 16042     046D  2C6F               	goto	u11121
 16043     046E  2C70               	goto	u11120
 16044     046F                     u11121:
 16045     046F  2C7C               	goto	l14078
 16046     0470                     u11120:
 16047     0470                     l14068:
 16048     0470  0831               	movf	getMagneticChannel@magMode6,w
 16049     0471  1D03               	btfss	3,2
 16050     0472  2C74               	goto	u11131
 16051     0473  2C75               	goto	u11130
 16052     0474                     u11131:
 16053     0474  2C7C               	goto	l14078
 16054     0475                     u11130:
 16055     0475                     l14070:
 16056     0475  0332               	decf	getMagneticChannel@magMode7,w
 16057     0476  1D03               	btfss	3,2
 16058     0477  2C79               	goto	u11141
 16059     0478  2C7A               	goto	u11140
 16060     0479                     u11141:
 16061     0479  2C7C               	goto	l14078
 16062     047A                     u11140:
 16063     047A                     l14072:
 16064                           
 16065                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1653:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1654:         return 8;
 16066     047A  3008               	movlw	8
 16067     047B  2CBD               	goto	l1005
 16068     047C                     l14078:
 16069     047C  032F               	decf	getMagneticChannel@magMode4,w
 16070     047D  1D03               	btfss	3,2
 16071     047E  2C80               	goto	u11151
 16072     047F  2C81               	goto	u11150
 16073     0480                     u11151:
 16074     0480  2C92               	goto	l14092
 16075     0481                     u11150:
 16076     0481                     l14080:
 16077     0481  0830               	movf	getMagneticChannel@magMode5,w
 16078     0482  1D03               	btfss	3,2
 16079     0483  2C85               	goto	u11161
 16080     0484  2C86               	goto	u11160
 16081     0485                     u11161:
 16082     0485  2C92               	goto	l14092
 16083     0486                     u11160:
 16084     0486                     l14082:
 16085     0486  0831               	movf	getMagneticChannel@magMode6,w
 16086     0487  1D03               	btfss	3,2
 16087     0488  2C8A               	goto	u11171
 16088     0489  2C8B               	goto	u11170
 16089     048A                     u11171:
 16090     048A  2C92               	goto	l14092
 16091     048B                     u11170:
 16092     048B                     l14084:
 16093     048B  0332               	decf	getMagneticChannel@magMode7,w
 16094     048C  1D03               	btfss	3,2
 16095     048D  2C8F               	goto	u11181
 16096     048E  2C90               	goto	u11180
 16097     048F                     u11181:
 16098     048F  2C92               	goto	l14092
 16099     0490                     u11180:
 16100     0490                     l14086:
 16101                           
 16102                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1656:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1657:         return 9;
 16103     0490  3009               	movlw	9
 16104     0491  2CBD               	goto	l1005
 16105     0492                     l14092:
 16106     0492  082F               	movf	getMagneticChannel@magMode4,w
 16107     0493  1D03               	btfss	3,2
 16108     0494  2C96               	goto	u11191
 16109     0495  2C97               	goto	u11190
 16110     0496                     u11191:
 16111     0496  2CA8               	goto	l14106
 16112     0497                     u11190:
 16113     0497                     l14094:
 16114     0497  0330               	decf	getMagneticChannel@magMode5,w
 16115     0498  1D03               	btfss	3,2
 16116     0499  2C9B               	goto	u11201
 16117     049A  2C9C               	goto	u11200
 16118     049B                     u11201:
 16119     049B  2CA8               	goto	l14106
 16120     049C                     u11200:
 16121     049C                     l14096:
 16122     049C  0831               	movf	getMagneticChannel@magMode6,w
 16123     049D  1D03               	btfss	3,2
 16124     049E  2CA0               	goto	u11211
 16125     049F  2CA1               	goto	u11210
 16126     04A0                     u11211:
 16127     04A0  2CA8               	goto	l14106
 16128     04A1                     u11210:
 16129     04A1                     l14098:
 16130     04A1  0332               	decf	getMagneticChannel@magMode7,w
 16131     04A2  1D03               	btfss	3,2
 16132     04A3  2CA5               	goto	u11221
 16133     04A4  2CA6               	goto	u11220
 16134     04A5                     u11221:
 16135     04A5  2CA8               	goto	l14106
 16136     04A6                     u11220:
 16137     04A6                     l14100:
 16138                           
 16139                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1659:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1660:         return 10;
 16140     04A6  300A               	movlw	10
 16141     04A7  2CBD               	goto	l1005
 16142     04A8                     l14106:
 16143     04A8  032F               	decf	getMagneticChannel@magMode4,w
 16144     04A9  1D03               	btfss	3,2
 16145     04AA  2CAC               	goto	u11231
 16146     04AB  2CAD               	goto	u11230
 16147     04AC                     u11231:
 16148     04AC  2BCA               	goto	l13960
 16149     04AD                     u11230:
 16150     04AD                     l14108:
 16151     04AD  0330               	decf	getMagneticChannel@magMode5,w
 16152     04AE  1D03               	btfss	3,2
 16153     04AF  2CB1               	goto	u11241
 16154     04B0  2CB2               	goto	u11240
 16155     04B1                     u11241:
 16156     04B1  2BCA               	goto	l13960
 16157     04B2                     u11240:
 16158     04B2                     l14110:
 16159     04B2  0831               	movf	getMagneticChannel@magMode6,w
 16160     04B3  1D03               	btfss	3,2
 16161     04B4  2CB6               	goto	u11251
 16162     04B5  2CB7               	goto	u11250
 16163     04B6                     u11251:
 16164     04B6  2BCA               	goto	l13960
 16165     04B7                     u11250:
 16166     04B7                     l14112:
 16167     04B7  0332               	decf	getMagneticChannel@magMode7,w
 16168     04B8  1D03               	btfss	3,2
 16169     04B9  2CBB               	goto	u11261
 16170     04BA  2CBC               	goto	u11260
 16171     04BB                     u11261:
 16172     04BB  2BCA               	goto	l13960
 16173     04BC                     u11260:
 16174     04BC                     l14114:
 16175                           
 16176                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1662:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1663:         return 11;
 16177     04BC  300B               	movlw	11
 16178     04BD                     l1005:
 16179     04BD  0008               	return
 16180     04BE                     __end_of_getMagneticChannel:
 16181                           
 16182                           	psect	text18
 16183     1238                     __ptext18:	
 16184 ;; *************** function _getLowPower *****************
 16185 ;; Defined at:
 16186 ;;		line 1524 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 16187 ;; Parameters:    Size  Location     Type
 16188 ;;		None
 16189 ;; Auto vars:     Size  Location     Type
 16190 ;;  lowPowerMode    1   15[BANK0 ] unsigned char 
 16191 ;;  lowPowerMode    1   14[BANK0 ] unsigned char 
 16192 ;; Return value:  Size  Location     Type
 16193 ;;                  1    wreg      unsigned char 
 16194 ;; Registers used:
 16195 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16196 ;; Tracked objects:
 16197 ;;		On entry : 0/0
 16198 ;;		On exit  : 0/0
 16199 ;;		Unchanged: 0/0
 16200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16202 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16203 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16204 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16205 ;;Total ram usage:        4 bytes
 16206 ;; Hardware stack levels used: 1
 16207 ;; Hardware stack levels required when called: 14
 16208 ;; This function calls:
 16209 ;;		_bitRead8
 16210 ;;		_readRegister
 16211 ;; This function is called by:
 16212 ;;		_begin
 16213 ;; This function uses a non-reentrant model
 16214 ;;
 16215                           
 16216     1238                     _getLowPower:	
 16217                           ;psect for function _getLowPower
 16218                           
 16219     1238                     l13880:	
 16220                           ;incstack = 0
 16221                           ; Regs used in _getLowPower: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16222                           
 16223     1238                     l13882:
 16224                           
 16225                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1526:     lowPowerMode
      +                           = readRegister(TMAG5273_REG_DEVICE_CONFIG_2);
 16226     1238  3001               	movlw	1
 16227     1239  3190  2034  3192   	fcall	_readRegister
 16228     123C  0140               	movlb	0	; select bank0
 16229     123D  00AF               	movwf	getLowPower@lowPowerMode
 16230     123E                     l13884:
 16231                           
 16232                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1528:     uint8_t lowP
      +                          owerModeBit = bitRead8(lowPowerMode, 4);
 16233     123E  082F               	movf	getLowPower@lowPowerMode,w
 16234     123F  00AC               	movwf	??_getLowPower
 16235     1240  01AD               	clrf	??_getLowPower+1
 16236     1241  082C               	movf	??_getLowPower,w
 16237     1242  00F1               	movwf	bitRead8@reg
 16238     1243  082D               	movf	??_getLowPower+1,w
 16239     1244  00F2               	movwf	bitRead8@reg+1
 16240     1245  3004               	movlw	4
 16241     1246  00F3               	movwf	bitRead8@position
 16242     1247  3192  2265  3192   	fcall	_bitRead8
 16243     124A  0140               	movlb	0	; select bank0
 16244     124B  00AE               	movwf	getLowPower@lowPowerModeBit
 16245     124C                     l13886:
 16246                           
 16247                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1530:     return lowPo
      +                          werModeBit;
 16248     124C  082E               	movf	getLowPower@lowPowerModeBit,w
 16249     124D                     l985:
 16250     124D  0008               	return
 16251     124E                     __end_of_getLowPower:
 16252                           
 16253                           	psect	text19
 16254     0CF5                     __ptext19:	
 16255 ;; *************** function _getAngleEn *****************
 16256 ;; Defined at:
 16257 ;;		line 1880 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 16258 ;; Parameters:    Size  Location     Type
 16259 ;;		None
 16260 ;; Auto vars:     Size  Location     Type
 16261 ;;  angleDir3       1   16[BANK0 ] unsigned char 
 16262 ;;  angleDir2       1   15[BANK0 ] unsigned char 
 16263 ;;  angleReg        1   14[BANK0 ] unsigned char 
 16264 ;; Return value:  Size  Location     Type
 16265 ;;                  1    wreg      unsigned char 
 16266 ;; Registers used:
 16267 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16268 ;; Tracked objects:
 16269 ;;		On entry : 0/0
 16270 ;;		On exit  : 0/0
 16271 ;;		Unchanged: 0/0
 16272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16274 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16275 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16276 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16277 ;;Total ram usage:        5 bytes
 16278 ;; Hardware stack levels used: 1
 16279 ;; Hardware stack levels required when called: 14
 16280 ;; This function calls:
 16281 ;;		_bitRead8
 16282 ;;		_readRegister
 16283 ;; This function is called by:
 16284 ;;		_begin
 16285 ;;		_setMagneticOffset2
 16286 ;;		_getMagneticOffset2
 16287 ;; This function uses a non-reentrant model
 16288 ;;
 16289                           
 16290     0CF5                     _getAngleEn:	
 16291                           ;psect for function _getAngleEn
 16292                           
 16293     0CF5                     l14134:	
 16294                           ;incstack = 0
 16295                           ; Regs used in _getAngleEn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16296                           
 16297     0CF5                     l14136:
 16298                           
 16299                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1882:     angleReg = r
      +                          eadRegister(TMAG5273_REG_SENSOR_CONFIG_2);
 16300     0CF5  3003               	movlw	3
 16301     0CF6  3190  2034  318C   	fcall	_readRegister
 16302     0CF9  0140               	movlb	0	; select bank0
 16303     0CFA  00AE               	movwf	getAngleEn@angleReg
 16304     0CFB                     l14138:
 16305                           
 16306                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1884:     uint8_t angl
      +                          eDir2 = bitRead8(angleReg, 2);
 16307     0CFB  082E               	movf	getAngleEn@angleReg,w
 16308     0CFC  00AC               	movwf	??_getAngleEn
 16309     0CFD  01AD               	clrf	??_getAngleEn+1
 16310     0CFE  082C               	movf	??_getAngleEn,w
 16311     0CFF  00F1               	movwf	bitRead8@reg
 16312     0D00  082D               	movf	??_getAngleEn+1,w
 16313     0D01  00F2               	movwf	bitRead8@reg+1
 16314     0D02  3002               	movlw	2
 16315     0D03  00F3               	movwf	bitRead8@position
 16316     0D04  3192  2265  318C   	fcall	_bitRead8
 16317     0D07  0140               	movlb	0	; select bank0
 16318     0D08  00AF               	movwf	getAngleEn@angleDir2
 16319     0D09                     l14140:
 16320                           
 16321                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1885:     uint8_t angl
      +                          eDir3 = bitRead8(angleReg, 3);
 16322     0D09  082E               	movf	getAngleEn@angleReg,w
 16323     0D0A  00AC               	movwf	??_getAngleEn
 16324     0D0B  01AD               	clrf	??_getAngleEn+1
 16325     0D0C  082C               	movf	??_getAngleEn,w
 16326     0D0D  00F1               	movwf	bitRead8@reg
 16327     0D0E  082D               	movf	??_getAngleEn+1,w
 16328     0D0F  00F2               	movwf	bitRead8@reg+1
 16329     0D10  3003               	movlw	3
 16330     0D11  00F3               	movwf	bitRead8@position
 16331     0D12  3192  2265  318C   	fcall	_bitRead8
 16332     0D15  0140               	movlb	0	; select bank0
 16333     0D16  00B0               	movwf	getAngleEn@angleDir3
 16334     0D17                     l14142:
 16335                           
 16336                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1887:     if ((angleDi
      +                          r2 == 0) && (angleDir3 == 0))
 16337     0D17  082F               	movf	getAngleEn@angleDir2,w
 16338     0D18  1D03               	btfss	3,2
 16339     0D19  2D1B               	goto	u11271
 16340     0D1A  2D1C               	goto	u11270
 16341     0D1B                     u11271:
 16342     0D1B  2D23               	goto	l14152
 16343     0D1C                     u11270:
 16344     0D1C                     l14144:
 16345     0D1C  0830               	movf	getAngleEn@angleDir3,w
 16346     0D1D  1D03               	btfss	3,2
 16347     0D1E  2D20               	goto	u11281
 16348     0D1F  2D21               	goto	u11280
 16349     0D20                     u11281:
 16350     0D20  2D23               	goto	l14152
 16351     0D21                     u11280:
 16352     0D21                     l14146:
 16353                           
 16354                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1888:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1890:         return 0;
 16355     0D21  3000               	movlw	0
 16356     0D22  2D48               	goto	l1090
 16357     0D23                     l14152:
 16358     0D23  032F               	decf	getAngleEn@angleDir2,w
 16359     0D24  1D03               	btfss	3,2
 16360     0D25  2D27               	goto	u11291
 16361     0D26  2D28               	goto	u11290
 16362     0D27                     u11291:
 16363     0D27  2D2F               	goto	l14162
 16364     0D28                     u11290:
 16365     0D28                     l14154:
 16366     0D28  0830               	movf	getAngleEn@angleDir3,w
 16367     0D29  1D03               	btfss	3,2
 16368     0D2A  2D2C               	goto	u11301
 16369     0D2B  2D2D               	goto	u11300
 16370     0D2C                     u11301:
 16371     0D2C  2D2F               	goto	l14162
 16372     0D2D                     u11300:
 16373     0D2D                     l14156:
 16374                           
 16375                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1892:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1894:         return 1;
 16376     0D2D  3001               	movlw	1
 16377     0D2E  2D48               	goto	l1090
 16378     0D2F                     l14162:
 16379     0D2F  082F               	movf	getAngleEn@angleDir2,w
 16380     0D30  1D03               	btfss	3,2
 16381     0D31  2D33               	goto	u11311
 16382     0D32  2D34               	goto	u11310
 16383     0D33                     u11311:
 16384     0D33  2D3B               	goto	l14172
 16385     0D34                     u11310:
 16386     0D34                     l14164:
 16387     0D34  0330               	decf	getAngleEn@angleDir3,w
 16388     0D35  1D03               	btfss	3,2
 16389     0D36  2D38               	goto	u11321
 16390     0D37  2D39               	goto	u11320
 16391     0D38                     u11321:
 16392     0D38  2D3B               	goto	l14172
 16393     0D39                     u11320:
 16394     0D39                     l14166:
 16395                           
 16396                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1896:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1898:         return 2;
 16397     0D39  3002               	movlw	2
 16398     0D3A  2D48               	goto	l1090
 16399     0D3B                     l14172:
 16400     0D3B  032F               	decf	getAngleEn@angleDir2,w
 16401     0D3C  1D03               	btfss	3,2
 16402     0D3D  2D3F               	goto	u11331
 16403     0D3E  2D40               	goto	u11330
 16404     0D3F                     u11331:
 16405     0D3F  2D47               	goto	l1093
 16406     0D40                     u11330:
 16407     0D40                     l14174:
 16408     0D40  0330               	decf	getAngleEn@angleDir3,w
 16409     0D41  1D03               	btfss	3,2
 16410     0D42  2D44               	goto	u11341
 16411     0D43  2D45               	goto	u11340
 16412     0D44                     u11341:
 16413     0D44  2D47               	goto	l1093
 16414     0D45                     u11340:
 16415     0D45                     l14176:
 16416                           
 16417                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1900:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1902:         return 3;
 16418     0D45  3003               	movlw	3
 16419     0D46  2D48               	goto	l1090
 16420     0D47                     l1093:
 16421     0D47  2D21               	goto	l14146
 16422     0D48                     l1090:
 16423     0D48  0008               	return
 16424     0D49                     __end_of_getAngleEn:
 16425                           
 16426                           	psect	text20
 16427     1034                     __ptext20:	
 16428 ;; *************** function _readRegister *****************
 16429 ;; Defined at:
 16430 ;;		line 169 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 16431 ;; Parameters:    Size  Location     Type
 16432 ;;  regAddress      1    wreg     unsigned char 
 16433 ;; Auto vars:     Size  Location     Type
 16434 ;;  regAddress      1   10[BANK0 ] unsigned char 
 16435 ;;  regVal          1   11[BANK0 ] unsigned char 
 16436 ;; Return value:  Size  Location     Type
 16437 ;;                  1    wreg      unsigned char 
 16438 ;; Registers used:
 16439 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16440 ;; Tracked objects:
 16441 ;;		On entry : 0/0
 16442 ;;		On exit  : 0/0
 16443 ;;		Unchanged: 0/0
 16444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16446 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16448 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16449 ;;Total ram usage:        2 bytes
 16450 ;; Hardware stack levels used: 1
 16451 ;; Hardware stack levels required when called: 13
 16452 ;; This function calls:
 16453 ;;		_i2c_read1ByteRegister
 16454 ;; This function is called by:
 16455 ;;		_setOperatingMode
 16456 ;;		_setMagneticChannel
 16457 ;;		_setXYAxisRange
 16458 ;;		_setZAxisRange
 16459 ;;		_setTemperatureEn
 16460 ;;		_getLowPower
 16461 ;;		_getOperatingMode
 16462 ;;		_getMagneticChannel
 16463 ;;		_getAngleEn
 16464 ;;		_getTemperatureEN
 16465 ;;		_getDeviceStatus
 16466 ;;		_setCRCMode
 16467 ;;		_setMagTemp
 16468 ;;		_setConvAvg
 16469 ;;		_setReadMode
 16470 ;;		_setIntThreshold
 16471 ;;		_setLowPower
 16472 ;;		_setGlitchFilter
 16473 ;;		_setTriggerMode
 16474 ;;		_setSleeptime
 16475 ;;		_setMagDir
 16476 ;;		_setMagnitudeGain
 16477 ;;		_setAngleEn
 16478 ;;		_setInterruptResult
 16479 ;;		_setThresholdEn
 16480 ;;		_setIntPinState
 16481 ;;		_setInterruptMode
 16482 ;;		_setMaskInterrupt
 16483 ;;		_setI2CAddressEN
 16484 ;;		_setOscillatorError
 16485 ;;		_getCRCMode
 16486 ;;		_getMagTemp
 16487 ;;		_getConvAvg
 16488 ;;		_getReadMode
 16489 ;;		_getIntThreshold
 16490 ;;		_getGlitchFiler
 16491 ;;		_getTriggerMode
 16492 ;;		_getSleeptime
 16493 ;;		_getMagDir
 16494 ;;		_getMagnitudeChannelSelect
 16495 ;;		_getMagneticGain
 16496 ;;		_getMagneticOffset1
 16497 ;;		_getMagneticOffset2
 16498 ;;		_getXYAxisRange
 16499 ;;		_getZAxisRange
 16500 ;;		_getXThreshold
 16501 ;;		_getYThreshold
 16502 ;;		_getZThreshold
 16503 ;;		_getTemperatureThreshold
 16504 ;;		_getInterruptResult
 16505 ;;		_getThresholdEn
 16506 ;;		_getIntPinState
 16507 ;;		_getInterruptMode
 16508 ;;		_getMaskInt
 16509 ;;		_getSetCount
 16510 ;;		_getPOR
 16511 ;;		_getDiagStatus
 16512 ;;		_getResultStatus
 16513 ;;		_getI2CAddress
 16514 ;;		_getDeviceID
 16515 ;;		_getInterruptPinStatus
 16516 ;;		_getXData
 16517 ;;		_getYData
 16518 ;;		_getZData
 16519 ;;		_getAngleResult
 16520 ;;		_getMagnitudeResult
 16521 ;; This function uses a non-reentrant model
 16522 ;;
 16523                           
 16524     1034                     _readRegister:	
 16525                           ;psect for function _readRegister
 16526                           
 16527                           
 16528                           ;incstack = 0
 16529                           ; Regs used in _readRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16530                           ;readRegister@regAddress stored from wreg
 16531     1034  0140               	movlb	0	; select bank0
 16532     1035  00AA               	movwf	readRegister@regAddress
 16533     1036                     l13334:
 16534                           
 16535                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 170:     uint8_t regVa
      +                          l;;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 171:     regVal = i2
      +                          c_read1ByteRegister(0X22, regAddress);
 16536     1036  082A               	movf	readRegister@regAddress,w
 16537     1037  00A4               	movwf	i2c_read1ByteRegister@reg
 16538     1038  3022               	movlw	34
 16539     1039  318B  23B3  3190   	fcall	_i2c_read1ByteRegister
 16540     103C  0140               	movlb	0	; select bank0
 16541     103D  00AB               	movwf	readRegister@regVal
 16542     103E                     l13336:
 16543                           
 16544                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 172:     return regVal
      +                          ;
 16545     103E  082B               	movf	readRegister@regVal,w
 16546     103F                     l679:
 16547     103F  0008               	return
 16548     1040                     __end_of_readRegister:
 16549                           
 16550                           	psect	text21
 16551     1265                     __ptext21:	
 16552 ;; *************** function _bitRead8 *****************
 16553 ;; Defined at:
 16554 ;;		line 2516 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 16555 ;; Parameters:    Size  Location     Type
 16556 ;;  reg             2    1[COMMON] PTR unsigned char 
 16557 ;;		 -> RAM(8192), 
 16558 ;;  position        1    3[COMMON] unsigned char 
 16559 ;; Auto vars:     Size  Location     Type
 16560 ;;  mask            1    5[COMMON] unsigned char 
 16561 ;; Return value:  Size  Location     Type
 16562 ;;                  1    wreg      unsigned char 
 16563 ;; Registers used:
 16564 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16565 ;; Tracked objects:
 16566 ;;		On entry : 0/0
 16567 ;;		On exit  : 0/0
 16568 ;;		Unchanged: 0/0
 16569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16570 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16571 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16572 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16573 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16574 ;;Total ram usage:        5 bytes
 16575 ;; Hardware stack levels used: 1
 16576 ;; Hardware stack levels required when called: 4
 16577 ;; This function calls:
 16578 ;;		Nothing
 16579 ;; This function is called by:
 16580 ;;		_begin
 16581 ;;		_getLowPower
 16582 ;;		_getOperatingMode
 16583 ;;		_getMagneticChannel
 16584 ;;		_getAngleEn
 16585 ;;		_getTemperatureEN
 16586 ;;		_getError
 16587 ;;		_getCRCMode
 16588 ;;		_getMagTemp
 16589 ;;		_getConvAvg
 16590 ;;		_getReadMode
 16591 ;;		_getIntThreshold
 16592 ;;		_getGlitchFiler
 16593 ;;		_getTriggerMode
 16594 ;;		_getSleeptime
 16595 ;;		_getMagDir
 16596 ;;		_getMagnitudeChannelSelect
 16597 ;;		_getXYAxisRange
 16598 ;;		_getZAxisRange
 16599 ;;		_getInterruptResult
 16600 ;;		_getThresholdEn
 16601 ;;		_getIntPinState
 16602 ;;		_getInterruptMode
 16603 ;;		_getMaskInt
 16604 ;;		_getPOR
 16605 ;;		_getDiagStatus
 16606 ;;		_getResultStatus
 16607 ;;		_getDeviceID
 16608 ;;		_getInterruptPinStatus
 16609 ;; This function uses a non-reentrant model
 16610 ;;
 16611                           
 16612     1265                     _bitRead8:	
 16613                           ;psect for function _bitRead8
 16614                           
 16615     1265                     l13420:	
 16616                           ;incstack = 0
 16617                           ; Regs used in _bitRead8: [wreg+fsr1l+fsr1h+status,2+status,0]
 16618                           
 16619                           
 16620                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2517:     uint8_t mask
      +                           = (1 << position) & *reg;
 16621     1265  0871               	movf	bitRead8@reg,w
 16622     1266  0086               	movwf	6
 16623     1267  0872               	movf	bitRead8@reg+1,w
 16624     1268  0087               	movwf	7
 16625     1269  3001               	movlw	1
 16626     126A  00F4               	movwf	??_bitRead8
 16627     126B  0A73               	incf	bitRead8@position,w
 16628     126C  2A6E               	goto	u10164
 16629     126D                     u10165:
 16630     126D  35F4               	lslf	??_bitRead8,f
 16631     126E                     u10164:
 16632     126E  0B89               	decfsz	9,f
 16633     126F  2A6D               	goto	u10165
 16634     1270  0874               	movf	??_bitRead8,w
 16635     1271  0501               	andwf	1,w
 16636     1272  00F5               	movwf	bitRead8@mask
 16637     1273                     l13422:
 16638                           
 16639                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2519:     if (mask == 
      +                          0) {
 16640     1273  0875               	movf	bitRead8@mask,w
 16641     1274  1D03               	btfss	3,2
 16642     1275  2A77               	goto	u10171
 16643     1276  2A78               	goto	u10170
 16644     1277                     u10171:
 16645     1277  2A7A               	goto	l13430
 16646     1278                     u10170:
 16647     1278                     l13424:
 16648                           
 16649                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2520:         return 0
      +                          ;
 16650     1278  3000               	movlw	0
 16651     1279  2A7B               	goto	l1223
 16652     127A                     l13430:
 16653                           
 16654                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2522:         return 1
      +                          ;
 16655     127A  3001               	movlw	1
 16656     127B                     l1223:
 16657     127B  0008               	return
 16658     127C                     __end_of_bitRead8:
 16659                           
 16660                           	psect	text22
 16661     1000                     __ptext22:	
 16662 ;; *************** function _TMR0_HasOverflowOccured *****************
 16663 ;; Defined at:
 16664 ;;		line 127 in file "mcc_generated_files/tmr0.c"
 16665 ;; Parameters:    Size  Location     Type
 16666 ;;		None
 16667 ;; Auto vars:     Size  Location     Type
 16668 ;;		None
 16669 ;; Return value:  Size  Location     Type
 16670 ;;                  1    wreg      _Bool 
 16671 ;; Registers used:
 16672 ;;		wreg, status,2, status,0
 16673 ;; Tracked objects:
 16674 ;;		On entry : 0/0
 16675 ;;		On exit  : 0/0
 16676 ;;		Unchanged: 0/0
 16677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16682 ;;Total ram usage:        0 bytes
 16683 ;; Hardware stack levels used: 1
 16684 ;; Hardware stack levels required when called: 4
 16685 ;; This function calls:
 16686 ;;		Nothing
 16687 ;; This function is called by:
 16688 ;;		_main
 16689 ;; This function uses a non-reentrant model
 16690 ;;
 16691                           
 16692     1000                     _TMR0_HasOverflowOccured:	
 16693                           ;psect for function _TMR0_HasOverflowOccured
 16694                           
 16695     1000                     l14656:	
 16696                           ;incstack = 0
 16697                           ; Regs used in _TMR0_HasOverflowOccured: [wreg+status,2+status,0]
 16698                           
 16699                           
 16700                           ;mcc_generated_files/tmr0.c: 130:     return(PIR0bits.TMR0IF);
 16701     1000  014E               	movlb	14	; select bank14
 16702     1001  0E0C               	swapf	12,w	;volatile
 16703     1002  0C89               	rrf	9,f
 16704     1003  3901               	andlw	1
 16705     1004                     l2146:
 16706     1004  0008               	return
 16707     1005                     __end_of_TMR0_HasOverflowOccured:
 16708                           
 16709                           	psect	text23
 16710     1222                     __ptext23:	
 16711 ;; *************** function _SYSTEM_Initialize *****************
 16712 ;; Defined at:
 16713 ;;		line 50 in file "mcc_generated_files/mcc.c"
 16714 ;; Parameters:    Size  Location     Type
 16715 ;;		None
 16716 ;; Auto vars:     Size  Location     Type
 16717 ;;		None
 16718 ;; Return value:  Size  Location     Type
 16719 ;;                  1    wreg      void 
 16720 ;; Registers used:
 16721 ;;		wreg, status,2, status,0, pclath, cstack
 16722 ;; Tracked objects:
 16723 ;;		On entry : 0/0
 16724 ;;		On exit  : 0/0
 16725 ;;		Unchanged: 0/0
 16726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16731 ;;Total ram usage:        0 bytes
 16732 ;; Hardware stack levels used: 1
 16733 ;; Hardware stack levels required when called: 6
 16734 ;; This function calls:
 16735 ;;		_EUSART1_Initialize
 16736 ;;		_EUSART2_Initialize
 16737 ;;		_I2C1_Initialize
 16738 ;;		_OSCILLATOR_Initialize
 16739 ;;		_PIN_MANAGER_Initialize
 16740 ;;		_PMD_Initialize
 16741 ;;		_TMR0_Initialize
 16742 ;; This function is called by:
 16743 ;;		_main
 16744 ;; This function uses a non-reentrant model
 16745 ;;
 16746                           
 16747     1222                     _SYSTEM_Initialize:	
 16748                           ;psect for function _SYSTEM_Initialize
 16749                           
 16750     1222                     l14642:	
 16751                           ;incstack = 0
 16752                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16753                           
 16754                           
 16755                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 16756     1222  319F  27CA  3192   	fcall	_PMD_Initialize
 16757     1225                     l14644:
 16758                           
 16759                           ;mcc_generated_files/mcc.c: 53:     I2C1_Initialize();
 16760     1225  319F  2799  3192   	fcall	_I2C1_Initialize
 16761     1228                     l14646:
 16762                           
 16763                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 16764     1228  3187  27B7  3192   	fcall	_PIN_MANAGER_Initialize
 16765     122B                     l14648:
 16766                           
 16767                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 16768     122B  319F  27C0  3192   	fcall	_OSCILLATOR_Initialize
 16769     122E                     l14650:
 16770                           
 16771                           ;mcc_generated_files/mcc.c: 56:     TMR0_Initialize();
 16772     122E  3191  21A3  3192   	fcall	_TMR0_Initialize
 16773     1231                     l14652:
 16774                           
 16775                           ;mcc_generated_files/mcc.c: 57:     EUSART1_Initialize();
 16776     1231  3189  2186  3192   	fcall	_EUSART1_Initialize
 16777     1234                     l14654:
 16778                           
 16779                           ;mcc_generated_files/mcc.c: 58:     EUSART2_Initialize();
 16780     1234  3189  21C5  3192   	fcall	_EUSART2_Initialize
 16781     1237                     l2006:
 16782     1237  0008               	return
 16783     1238                     __end_of_SYSTEM_Initialize:
 16784                           
 16785                           	psect	text24
 16786     11A3                     __ptext24:	
 16787 ;; *************** function _TMR0_Initialize *****************
 16788 ;; Defined at:
 16789 ;;		line 65 in file "mcc_generated_files/tmr0.c"
 16790 ;; Parameters:    Size  Location     Type
 16791 ;;		None
 16792 ;; Auto vars:     Size  Location     Type
 16793 ;;		None
 16794 ;; Return value:  Size  Location     Type
 16795 ;;                  1    wreg      void 
 16796 ;; Registers used:
 16797 ;;		wreg
 16798 ;; Tracked objects:
 16799 ;;		On entry : 0/0
 16800 ;;		On exit  : 0/0
 16801 ;;		Unchanged: 0/0
 16802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16807 ;;Total ram usage:        0 bytes
 16808 ;; Hardware stack levels used: 1
 16809 ;; Hardware stack levels required when called: 4
 16810 ;; This function calls:
 16811 ;;		Nothing
 16812 ;; This function is called by:
 16813 ;;		_SYSTEM_Initialize
 16814 ;; This function uses a non-reentrant model
 16815 ;;
 16816                           
 16817     11A3                     _TMR0_Initialize:	
 16818                           ;psect for function _TMR0_Initialize
 16819                           
 16820     11A3                     l14356:	
 16821                           ;incstack = 0
 16822                           ; Regs used in _TMR0_Initialize: [wreg]
 16823                           
 16824                           
 16825                           ;mcc_generated_files/tmr0.c: 70:     T0CON1 = 0x47;
 16826     11A3  3047               	movlw	71
 16827     11A4  014B               	movlb	11	; select bank11
 16828     11A5  009F               	movwf	31	;volatile
 16829                           
 16830                           ;mcc_generated_files/tmr0.c: 73:     TMR0H = 0x0B;
 16831     11A6  300B               	movlw	11
 16832     11A7  009D               	movwf	29	;volatile
 16833                           
 16834                           ;mcc_generated_files/tmr0.c: 76:     TMR0L = 0xDC;
 16835     11A8  30DC               	movlw	220
 16836     11A9  009C               	movwf	28	;volatile
 16837                           
 16838                           ;mcc_generated_files/tmr0.c: 79:     timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
 16839     11AA  081D               	movf	29,w	;volatile
 16840     11AB  0140               	movlb	0	; select bank0
 16841     11AC  00CE               	movwf	_timer0ReloadVal16bit+1	;volatile
 16842     11AD  014B               	movlb	11	; select bank11
 16843     11AE  081C               	movf	28,w	;volatile
 16844     11AF  0140               	movlb	0	; select bank0
 16845     11B0  00CD               	movwf	_timer0ReloadVal16bit	;volatile
 16846     11B1                     l14358:
 16847                           
 16848                           ;mcc_generated_files/tmr0.c: 82:     PIR0bits.TMR0IF = 0;
 16849     11B1  014E               	movlb	14	; select bank14
 16850     11B2  128C               	bcf	12,5	;volatile
 16851                           
 16852                           ;mcc_generated_files/tmr0.c: 85:     T0CON0 = 0x90;
 16853     11B3  3090               	movlw	144
 16854     11B4  014B               	movlb	11	; select bank11
 16855     11B5  009E               	movwf	30	;volatile
 16856     11B6                     l2128:
 16857     11B6  0008               	return
 16858     11B7                     __end_of_TMR0_Initialize:
 16859                           
 16860                           	psect	text25
 16861     1FCA                     __ptext25:	
 16862 ;; *************** function _PMD_Initialize *****************
 16863 ;; Defined at:
 16864 ;;		line 77 in file "mcc_generated_files/mcc.c"
 16865 ;; Parameters:    Size  Location     Type
 16866 ;;		None
 16867 ;; Auto vars:     Size  Location     Type
 16868 ;;		None
 16869 ;; Return value:  Size  Location     Type
 16870 ;;                  1    wreg      void 
 16871 ;; Registers used:
 16872 ;;		status,2
 16873 ;; Tracked objects:
 16874 ;;		On entry : 0/0
 16875 ;;		On exit  : 0/0
 16876 ;;		Unchanged: 0/0
 16877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16882 ;;Total ram usage:        0 bytes
 16883 ;; Hardware stack levels used: 1
 16884 ;; Hardware stack levels required when called: 4
 16885 ;; This function calls:
 16886 ;;		Nothing
 16887 ;; This function is called by:
 16888 ;;		_SYSTEM_Initialize
 16889 ;; This function uses a non-reentrant model
 16890 ;;
 16891                           
 16892     1FCA                     _PMD_Initialize:	
 16893                           ;psect for function _PMD_Initialize
 16894                           
 16895     1FCA                     l14270:	
 16896                           ;incstack = 0
 16897                           ; Regs used in _PMD_Initialize: [status,2]
 16898                           
 16899                           
 16900                           ;mcc_generated_files/mcc.c: 80:     PMD0 = 0x00;
 16901     1FCA  014F               	movlb	15	; select bank15
 16902     1FCB  0196               	clrf	22	;volatile
 16903                           
 16904                           ;mcc_generated_files/mcc.c: 82:     PMD1 = 0x00;
 16905     1FCC  0197               	clrf	23	;volatile
 16906                           
 16907                           ;mcc_generated_files/mcc.c: 84:     PMD2 = 0x00;
 16908     1FCD  0198               	clrf	24	;volatile
 16909                           
 16910                           ;mcc_generated_files/mcc.c: 86:     PMD3 = 0x00;
 16911     1FCE  0199               	clrf	25	;volatile
 16912                           
 16913                           ;mcc_generated_files/mcc.c: 88:     PMD4 = 0x00;
 16914     1FCF  019A               	clrf	26	;volatile
 16915                           
 16916                           ;mcc_generated_files/mcc.c: 90:     PMD5 = 0x00;
 16917     1FD0  019B               	clrf	27	;volatile
 16918                           
 16919                           ;mcc_generated_files/mcc.c: 92:     PMD6 = 0x00;
 16920     1FD1  019C               	clrf	28	;volatile
 16921                           
 16922                           ;mcc_generated_files/mcc.c: 94:     PMD7 = 0x00;
 16923     1FD2  019D               	clrf	29	;volatile
 16924     1FD3                     l2012:
 16925     1FD3  0008               	return
 16926     1FD4                     __end_of_PMD_Initialize:
 16927                           
 16928                           	psect	text26
 16929     07B7                     __ptext26:	
 16930 ;; *************** function _PIN_MANAGER_Initialize *****************
 16931 ;; Defined at:
 16932 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 16933 ;; Parameters:    Size  Location     Type
 16934 ;;		None
 16935 ;; Auto vars:     Size  Location     Type
 16936 ;;		None
 16937 ;; Return value:  Size  Location     Type
 16938 ;;                  1    wreg      void 
 16939 ;; Registers used:
 16940 ;;		wreg, status,2, status,0, pclath, cstack
 16941 ;; Tracked objects:
 16942 ;;		On entry : 0/0
 16943 ;;		On exit  : 0/0
 16944 ;;		Unchanged: 0/0
 16945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16950 ;;Total ram usage:        0 bytes
 16951 ;; Hardware stack levels used: 1
 16952 ;; Hardware stack levels required when called: 5
 16953 ;; This function calls:
 16954 ;;		_IOCAF6_SetInterruptHandler
 16955 ;; This function is called by:
 16956 ;;		_SYSTEM_Initialize
 16957 ;; This function uses a non-reentrant model
 16958 ;;
 16959                           
 16960     07B7                     _PIN_MANAGER_Initialize:	
 16961                           ;psect for function _PIN_MANAGER_Initialize
 16962                           
 16963     07B7                     l14280:	
 16964                           ;incstack = 0
 16965                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16966                           
 16967                           
 16968                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x00;
 16969     07B7  0140               	movlb	0	; select bank0
 16970     07B8  019C               	clrf	28	;volatile
 16971     07B9                     l14282:
 16972                           
 16973                           ;mcc_generated_files/pin_manager.c: 63:     LATA = 0x31;
 16974     07B9  3031               	movlw	49
 16975     07BA  0098               	movwf	24	;volatile
 16976     07BB                     l14284:
 16977                           
 16978                           ;mcc_generated_files/pin_manager.c: 64:     LATB = 0x00;
 16979     07BB  0199               	clrf	25	;volatile
 16980                           
 16981                           ;mcc_generated_files/pin_manager.c: 65:     LATC = 0xC1;
 16982     07BC  30C1               	movlw	193
 16983     07BD  009A               	movwf	26	;volatile
 16984                           
 16985                           ;mcc_generated_files/pin_manager.c: 70:     TRISE = 0x08;
 16986     07BE  3008               	movlw	8
 16987     07BF  0096               	movwf	22	;volatile
 16988                           
 16989                           ;mcc_generated_files/pin_manager.c: 71:     TRISA = 0xDE;
 16990     07C0  30DE               	movlw	222
 16991     07C1  0092               	movwf	18	;volatile
 16992                           
 16993                           ;mcc_generated_files/pin_manager.c: 72:     TRISB = 0xEF;
 16994     07C2  30EF               	movlw	239
 16995     07C3  0093               	movwf	19	;volatile
 16996                           
 16997                           ;mcc_generated_files/pin_manager.c: 73:     TRISC = 0x25;
 16998     07C4  3025               	movlw	37
 16999     07C5  0094               	movwf	20	;volatile
 17000     07C6                     l14286:
 17001                           
 17002                           ;mcc_generated_files/pin_manager.c: 78:     ANSELC = 0x00;
 17003     07C6  017E               	movlb	62	; select bank62
 17004     07C7  01CE               	clrf	78	;volatile
 17005     07C8                     l14288:
 17006                           
 17007                           ;mcc_generated_files/pin_manager.c: 79:     ANSELB = 0xC9;
 17008     07C8  30C9               	movlw	201
 17009     07C9  00C3               	movwf	67	;volatile
 17010     07CA                     l14290:
 17011                           
 17012                           ;mcc_generated_files/pin_manager.c: 80:     ANSELA = 0x0E;
 17013     07CA  300E               	movlw	14
 17014     07CB  00B8               	movwf	56	;volatile
 17015     07CC                     l14292:
 17016                           
 17017                           ;mcc_generated_files/pin_manager.c: 85:     WPUE = 0x00;
 17018     07CC  01E5               	clrf	101	;volatile
 17019     07CD                     l14294:
 17020                           
 17021                           ;mcc_generated_files/pin_manager.c: 86:     WPUB = 0x00;
 17022     07CD  01C4               	clrf	68	;volatile
 17023     07CE                     l14296:
 17024                           
 17025                           ;mcc_generated_files/pin_manager.c: 87:     WPUA = 0x00;
 17026     07CE  01B9               	clrf	57	;volatile
 17027     07CF                     l14298:
 17028                           
 17029                           ;mcc_generated_files/pin_manager.c: 88:     WPUC = 0x00;
 17030     07CF  01CF               	clrf	79	;volatile
 17031     07D0                     l14300:
 17032                           
 17033                           ;mcc_generated_files/pin_manager.c: 93:     ODCONE = 0x00;
 17034     07D0  01E6               	clrf	102	;volatile
 17035     07D1                     l14302:
 17036                           
 17037                           ;mcc_generated_files/pin_manager.c: 94:     ODCONA = 0x00;
 17038     07D1  01BA               	clrf	58	;volatile
 17039     07D2                     l14304:
 17040                           
 17041                           ;mcc_generated_files/pin_manager.c: 95:     ODCONB = 0x00;
 17042     07D2  01C5               	clrf	69	;volatile
 17043     07D3                     l14306:
 17044                           
 17045                           ;mcc_generated_files/pin_manager.c: 96:     ODCONC = 0x00;
 17046     07D3  01D0               	clrf	80	;volatile
 17047     07D4                     l14308:
 17048                           
 17049                           ;mcc_generated_files/pin_manager.c: 101:     SLRCONA = 0xFF;
 17050     07D4  30FF               	movlw	255
 17051     07D5  00BB               	movwf	59	;volatile
 17052     07D6                     l14310:
 17053                           
 17054                           ;mcc_generated_files/pin_manager.c: 102:     SLRCONB = 0xFF;
 17055     07D6  30FF               	movlw	255
 17056     07D7  00C6               	movwf	70	;volatile
 17057     07D8                     l14312:
 17058                           
 17059                           ;mcc_generated_files/pin_manager.c: 103:     SLRCONC = 0xFF;
 17060     07D8  30FF               	movlw	255
 17061     07D9  00D1               	movwf	81	;volatile
 17062     07DA                     l14314:
 17063                           
 17064                           ;mcc_generated_files/pin_manager.c: 108:     INLVLA = 0x3F;
 17065     07DA  303F               	movlw	63
 17066     07DB  00BC               	movwf	60	;volatile
 17067     07DC                     l14316:
 17068                           
 17069                           ;mcc_generated_files/pin_manager.c: 109:     INLVLB = 0x3F;
 17070     07DC  303F               	movlw	63
 17071     07DD  00C7               	movwf	71	;volatile
 17072     07DE                     l14318:
 17073                           
 17074                           ;mcc_generated_files/pin_manager.c: 110:     INLVLC = 0x3F;
 17075     07DE  303F               	movlw	63
 17076     07DF  00D2               	movwf	82	;volatile
 17077     07E0                     l14320:
 17078                           
 17079                           ;mcc_generated_files/pin_manager.c: 117:     IOCAFbits.IOCAF6 = 0;
 17080     07E0  133F               	bcf	63,6	;volatile
 17081     07E1                     l14322:
 17082                           
 17083                           ;mcc_generated_files/pin_manager.c: 119:     IOCANbits.IOCAN6 = 0;
 17084     07E1  133E               	bcf	62,6	;volatile
 17085     07E2                     l14324:
 17086                           
 17087                           ;mcc_generated_files/pin_manager.c: 121:     IOCAPbits.IOCAP6 = 1;
 17088     07E2  173D               	bsf	61,6	;volatile
 17089     07E3                     l14326:
 17090                           
 17091                           ;mcc_generated_files/pin_manager.c: 126:     IOCAF6_SetInterruptHandler(IOCAF6_DefaultIn
      +                          terruptHandler);
 17092     07E3  3000               	movlw	low _IOCAF6_DefaultInterruptHandler
 17093     07E4  00F1               	movwf	IOCAF6_SetInterruptHandler@InterruptHandler
 17094     07E5  3008               	movlw	high _IOCAF6_DefaultInterruptHandler
 17095     07E6  00F2               	movwf	IOCAF6_SetInterruptHandler@InterruptHandler+1
 17096     07E7  319F  2745  3187   	fcall	_IOCAF6_SetInterruptHandler
 17097     07EA                     l14328:
 17098                           
 17099                           ;mcc_generated_files/pin_manager.c: 129:     PIE0bits.IOCIE = 1;
 17100     07EA  014E               	movlb	14	; select bank14
 17101     07EB  1616               	bsf	22,4	;volatile
 17102     07EC                     l14330:
 17103                           
 17104                           ;mcc_generated_files/pin_manager.c: 132:     SSP1CLKPPS = 0x09;
 17105     07EC  3009               	movlw	9
 17106     07ED  017D               	movlb	61	; select bank61
 17107     07EE  00C5               	movwf	69	;volatile
 17108     07EF                     l14332:
 17109                           
 17110                           ;mcc_generated_files/pin_manager.c: 133:     RB1PPS = 0x13;
 17111     07EF  3013               	movlw	19
 17112     07F0  017E               	movlb	62	; select bank62
 17113     07F1  0099               	movwf	25	;volatile
 17114     07F2                     l14334:
 17115                           
 17116                           ;mcc_generated_files/pin_manager.c: 134:     RB2PPS = 0x14;
 17117     07F2  3014               	movlw	20
 17118     07F3  009A               	movwf	26	;volatile
 17119     07F4                     l14336:
 17120                           
 17121                           ;mcc_generated_files/pin_manager.c: 135:     RC4PPS = 0x25;
 17122     07F4  3025               	movlw	37
 17123     07F5  00A4               	movwf	36	;volatile
 17124     07F6                     l14338:
 17125                           
 17126                           ;mcc_generated_files/pin_manager.c: 136:     RB4PPS = 0x0F;
 17127     07F6  300F               	movlw	15
 17128     07F7  009C               	movwf	28	;volatile
 17129     07F8                     l14340:
 17130                           
 17131                           ;mcc_generated_files/pin_manager.c: 137:     RX2DTPPS = 0x15;
 17132     07F8  3015               	movlw	21
 17133     07F9  017D               	movlb	61	; select bank61
 17134     07FA  00CD               	movwf	77	;volatile
 17135     07FB                     l14342:
 17136                           
 17137                           ;mcc_generated_files/pin_manager.c: 138:     SSP1DATPPS = 0x0A;
 17138     07FB  300A               	movlw	10
 17139     07FC  00C6               	movwf	70	;volatile
 17140     07FD                     l14344:
 17141                           
 17142                           ;mcc_generated_files/pin_manager.c: 139:     RX1DTPPS = 0x0D;
 17143     07FD  300D               	movlw	13
 17144     07FE  00CB               	movwf	75	;volatile
 17145     07FF                     l2097:
 17146     07FF  0008               	return
 17147     0800                     __end_of_PIN_MANAGER_Initialize:
 17148                           
 17149                           	psect	text27
 17150     1F45                     __ptext27:	
 17151 ;; *************** function _IOCAF6_SetInterruptHandler *****************
 17152 ;; Defined at:
 17153 ;;		line 169 in file "mcc_generated_files/pin_manager.c"
 17154 ;; Parameters:    Size  Location     Type
 17155 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
 17156 ;;		 -> IOCAF6_DefaultInterruptHandler(1), 
 17157 ;; Auto vars:     Size  Location     Type
 17158 ;;		None
 17159 ;; Return value:  Size  Location     Type
 17160 ;;                  1    wreg      void 
 17161 ;; Registers used:
 17162 ;;		wreg
 17163 ;; Tracked objects:
 17164 ;;		On entry : 0/0
 17165 ;;		On exit  : 0/0
 17166 ;;		Unchanged: 0/0
 17167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17168 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17171 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17172 ;;Total ram usage:        2 bytes
 17173 ;; Hardware stack levels used: 1
 17174 ;; Hardware stack levels required when called: 4
 17175 ;; This function calls:
 17176 ;;		Nothing
 17177 ;; This function is called by:
 17178 ;;		_PIN_MANAGER_Initialize
 17179 ;; This function uses a non-reentrant model
 17180 ;;
 17181                           
 17182     1F45                     _IOCAF6_SetInterruptHandler:	
 17183                           ;psect for function _IOCAF6_SetInterruptHandler
 17184                           
 17185     1F45                     l13616:	
 17186                           ;incstack = 0
 17187                           ; Regs used in _IOCAF6_SetInterruptHandler: [wreg]
 17188                           
 17189                           
 17190                           ;mcc_generated_files/pin_manager.c: 170:     IOCAF6_InterruptHandler = InterruptHandler;
 17191     1F45  0872               	movf	IOCAF6_SetInterruptHandler@InterruptHandler+1,w
 17192     1F46  0141               	movlb	1	; select bank1
 17193     1F47  00EB               	movwf	(_IOCAF6_InterruptHandler+1)^(0+128)
 17194     1F48  0871               	movf	IOCAF6_SetInterruptHandler@InterruptHandler,w
 17195     1F49  00EA               	movwf	_IOCAF6_InterruptHandler^(0+128)
 17196     1F4A                     l2108:
 17197     1F4A  0008               	return
 17198     1F4B                     __end_of_IOCAF6_SetInterruptHandler:
 17199                           
 17200                           	psect	text28
 17201     1FC0                     __ptext28:	
 17202 ;; *************** function _OSCILLATOR_Initialize *****************
 17203 ;; Defined at:
 17204 ;;		line 61 in file "mcc_generated_files/mcc.c"
 17205 ;; Parameters:    Size  Location     Type
 17206 ;;		None
 17207 ;; Auto vars:     Size  Location     Type
 17208 ;;		None
 17209 ;; Return value:  Size  Location     Type
 17210 ;;                  1    wreg      void 
 17211 ;; Registers used:
 17212 ;;		wreg, status,2
 17213 ;; Tracked objects:
 17214 ;;		On entry : 0/0
 17215 ;;		On exit  : 0/0
 17216 ;;		Unchanged: 0/0
 17217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17222 ;;Total ram usage:        0 bytes
 17223 ;; Hardware stack levels used: 1
 17224 ;; Hardware stack levels required when called: 4
 17225 ;; This function calls:
 17226 ;;		Nothing
 17227 ;; This function is called by:
 17228 ;;		_SYSTEM_Initialize
 17229 ;; This function uses a non-reentrant model
 17230 ;;
 17231                           
 17232     1FC0                     _OSCILLATOR_Initialize:	
 17233                           ;psect for function _OSCILLATOR_Initialize
 17234                           
 17235     1FC0                     l14346:	
 17236                           ;incstack = 0
 17237                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 17238                           
 17239                           
 17240                           ;mcc_generated_files/mcc.c: 64:     OSCCON1 = 0x60;
 17241     1FC0  3060               	movlw	96
 17242     1FC1  0151               	movlb	17	; select bank17
 17243     1FC2  008D               	movwf	13	;volatile
 17244     1FC3                     l14348:
 17245                           
 17246                           ;mcc_generated_files/mcc.c: 66:     OSCCON3 = 0x00;
 17247     1FC3  018F               	clrf	15	;volatile
 17248     1FC4                     l14350:
 17249                           
 17250                           ;mcc_generated_files/mcc.c: 68:     OSCEN = 0x00;
 17251     1FC4  0191               	clrf	17	;volatile
 17252                           
 17253                           ;mcc_generated_files/mcc.c: 70:     OSCFRQ = 0x06;
 17254     1FC5  3006               	movlw	6
 17255     1FC6  0093               	movwf	19	;volatile
 17256     1FC7                     l14352:
 17257                           
 17258                           ;mcc_generated_files/mcc.c: 72:     OSCSTAT = 0x00;
 17259     1FC7  0190               	clrf	16	;volatile
 17260     1FC8                     l14354:
 17261                           
 17262                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
 17263     1FC8  0192               	clrf	18	;volatile
 17264     1FC9                     l2009:
 17265     1FC9  0008               	return
 17266     1FCA                     __end_of_OSCILLATOR_Initialize:
 17267                           
 17268                           	psect	text29
 17269     1F99                     __ptext29:	
 17270 ;; *************** function _I2C1_Initialize *****************
 17271 ;; Defined at:
 17272 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 17273 ;; Parameters:    Size  Location     Type
 17274 ;;		None
 17275 ;; Auto vars:     Size  Location     Type
 17276 ;;		None
 17277 ;; Return value:  Size  Location     Type
 17278 ;;                  1    wreg      void 
 17279 ;; Registers used:
 17280 ;;		wreg, status,2
 17281 ;; Tracked objects:
 17282 ;;		On entry : 0/0
 17283 ;;		On exit  : 0/0
 17284 ;;		Unchanged: 0/0
 17285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17290 ;;Total ram usage:        0 bytes
 17291 ;; Hardware stack levels used: 1
 17292 ;; Hardware stack levels required when called: 4
 17293 ;; This function calls:
 17294 ;;		Nothing
 17295 ;; This function is called by:
 17296 ;;		_SYSTEM_Initialize
 17297 ;; This function uses a non-reentrant model
 17298 ;;
 17299                           
 17300     1F99                     _I2C1_Initialize:	
 17301                           ;psect for function _I2C1_Initialize
 17302                           
 17303     1F99                     l14272:	
 17304                           ;incstack = 0
 17305                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 17306                           
 17307                           
 17308                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x00;
 17309     1F99  0143               	movlb	3	; select bank3
 17310     1F9A  018F               	clrf	15	;volatile
 17311     1F9B                     l14274:
 17312                           
 17313                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 17314     1F9B  3008               	movlw	8
 17315     1F9C  0090               	movwf	16	;volatile
 17316     1F9D                     l14276:
 17317                           
 17318                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 17319     1F9D  0191               	clrf	17	;volatile
 17320                           
 17321                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x4F;
 17322     1F9E  304F               	movlw	79
 17323     1F9F  008D               	movwf	13	;volatile
 17324     1FA0                     l14278:
 17325                           
 17326                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 17327     1FA0  1290               	bcf	16,5	;volatile
 17328     1FA1                     l2396:
 17329     1FA1  0008               	return
 17330     1FA2                     __end_of_I2C1_Initialize:
 17331                           
 17332                           	psect	text30
 17333     09C5                     __ptext30:	
 17334 ;; *************** function _EUSART2_Initialize *****************
 17335 ;; Defined at:
 17336 ;;		line 88 in file "mcc_generated_files/eusart2.c"
 17337 ;; Parameters:    Size  Location     Type
 17338 ;;		None
 17339 ;; Auto vars:     Size  Location     Type
 17340 ;;		None
 17341 ;; Return value:  Size  Location     Type
 17342 ;;                  1    wreg      void 
 17343 ;; Registers used:
 17344 ;;		wreg, status,2, status,0, pclath, cstack
 17345 ;; Tracked objects:
 17346 ;;		On entry : 0/0
 17347 ;;		On exit  : 0/0
 17348 ;;		Unchanged: 0/0
 17349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17354 ;;Total ram usage:        0 bytes
 17355 ;; Hardware stack levels used: 1
 17356 ;; Hardware stack levels required when called: 5
 17357 ;; This function calls:
 17358 ;;		_EUSART2_SetErrorHandler
 17359 ;;		_EUSART2_SetFramingErrorHandler
 17360 ;;		_EUSART2_SetOverrunErrorHandler
 17361 ;;		_EUSART2_SetRxInterruptHandler
 17362 ;;		_EUSART2_SetTxInterruptHandler
 17363 ;; This function is called by:
 17364 ;;		_SYSTEM_Initialize
 17365 ;; This function uses a non-reentrant model
 17366 ;;
 17367                           
 17368     09C5                     _EUSART2_Initialize:	
 17369                           ;psect for function _EUSART2_Initialize
 17370                           
 17371     09C5                     l14206:	
 17372                           ;incstack = 0
 17373                           ; Regs used in _EUSART2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17374                           
 17375                           
 17376                           ;mcc_generated_files/eusart2.c: 91:     PIE3bits.RC2IE = 0;
 17377     09C5  014E               	movlb	14	; select bank14
 17378     09C6  1399               	bcf	25,7	;volatile
 17379     09C7                     l14208:
 17380                           
 17381                           ;mcc_generated_files/eusart2.c: 92:     EUSART2_SetRxInterruptHandler(EUSART2_Receive_IS
      +                          R);
 17382     09C7  305D               	movlw	low _EUSART2_Receive_ISR
 17383     09C8  00F1               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler
 17384     09C9  3008               	movlw	high _EUSART2_Receive_ISR
 17385     09CA  00F2               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler+1
 17386     09CB  319F  2739  3189   	fcall	_EUSART2_SetRxInterruptHandler
 17387     09CE                     l14210:
 17388                           
 17389                           ;mcc_generated_files/eusart2.c: 93:     PIE3bits.TX2IE = 0;
 17390     09CE  014E               	movlb	14	; select bank14
 17391     09CF  1319               	bcf	25,6	;volatile
 17392                           
 17393                           ;mcc_generated_files/eusart2.c: 94:     EUSART2_SetTxInterruptHandler(EUSART2_Transmit_I
      +                          SR);
 17394     09D0  3008               	movlw	low _EUSART2_Transmit_ISR
 17395     09D1  00F1               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler
 17396     09D2  3014               	movlw	high _EUSART2_Transmit_ISR
 17397     09D3  00F2               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler+1
 17398     09D4  319F  273F  3189   	fcall	_EUSART2_SetTxInterruptHandler
 17399     09D7                     l14212:
 17400                           
 17401                           ;mcc_generated_files/eusart2.c: 98:     BAUD2CON = 0x08;
 17402     09D7  3008               	movlw	8
 17403     09D8  0154               	movlb	20	; select bank20
 17404     09D9  009F               	movwf	31	;volatile
 17405     09DA                     l14214:
 17406                           
 17407                           ;mcc_generated_files/eusart2.c: 101:     RC2STA = 0x90;
 17408     09DA  3090               	movlw	144
 17409     09DB  009D               	movwf	29	;volatile
 17410     09DC                     l14216:
 17411                           
 17412                           ;mcc_generated_files/eusart2.c: 104:     TX2STA = 0x24;
 17413     09DC  3024               	movlw	36
 17414     09DD  009E               	movwf	30	;volatile
 17415     09DE                     l14218:
 17416                           
 17417                           ;mcc_generated_files/eusart2.c: 107:     SP2BRGL = 0x40;
 17418     09DE  3040               	movlw	64
 17419     09DF  009B               	movwf	27	;volatile
 17420     09E0                     l14220:
 17421                           
 17422                           ;mcc_generated_files/eusart2.c: 110:     SP2BRGH = 0x03;
 17423     09E0  3003               	movlw	3
 17424     09E1  009C               	movwf	28	;volatile
 17425     09E2                     l14222:
 17426                           
 17427                           ;mcc_generated_files/eusart2.c: 113:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultF
      +                          ramingErrorHandler);
 17428     09E2  306C               	movlw	low _EUSART2_DefaultFramingErrorHandler
 17429     09E3  00F1               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler
 17430     09E4  301E               	movlw	high _EUSART2_DefaultFramingErrorHandler
 17431     09E5  00F2               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler+1
 17432     09E6  319F  272D  3189   	fcall	_EUSART2_SetFramingErrorHandler
 17433     09E9                     l14224:
 17434                           
 17435                           ;mcc_generated_files/eusart2.c: 114:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultO
      +                          verrunErrorHandler);
 17436     09E9  309B               	movlw	low _EUSART2_DefaultOverrunErrorHandler
 17437     09EA  00F1               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler
 17438     09EB  301E               	movlw	high _EUSART2_DefaultOverrunErrorHandler
 17439     09EC  00F2               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler+1
 17440     09ED  319F  2733  3189   	fcall	_EUSART2_SetOverrunErrorHandler
 17441     09F0                     l14226:
 17442                           
 17443                           ;mcc_generated_files/eusart2.c: 115:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHan
      +                          dler);
 17444     09F0  3097               	movlw	low _EUSART2_DefaultErrorHandler
 17445     09F1  00F1               	movwf	EUSART2_SetErrorHandler@interruptHandler
 17446     09F2  301E               	movlw	high _EUSART2_DefaultErrorHandler
 17447     09F3  00F2               	movwf	EUSART2_SetErrorHandler@interruptHandler+1
 17448     09F4  319F  2727  3189   	fcall	_EUSART2_SetErrorHandler
 17449     09F7                     l14228:
 17450                           
 17451                           ;mcc_generated_files/eusart2.c: 117:     eusart2RxLastError.status = 0;
 17452     09F7  0141               	movlb	1	; select bank1
 17453     09F8  01E7               	clrf	_eusart2RxLastError^(0+128)	;volatile
 17454     09F9                     l14230:
 17455                           
 17456                           ;mcc_generated_files/eusart2.c: 120:     eusart2TxHead = 0;
 17457     09F9  0140               	movlb	0	; select bank0
 17458     09FA  01DC               	clrf	_eusart2TxHead	;volatile
 17459     09FB                     l14232:
 17460                           
 17461                           ;mcc_generated_files/eusart2.c: 121:     eusart2TxTail = 0;
 17462     09FB  01DB               	clrf	_eusart2TxTail	;volatile
 17463     09FC                     l14234:
 17464                           
 17465                           ;mcc_generated_files/eusart2.c: 122:     eusart2TxBufferRemaining = sizeof(eusart2TxBuff
      +                          er);
 17466     09FC  3008               	movlw	8
 17467     09FD  00DA               	movwf	_eusart2TxBufferRemaining	;volatile
 17468                           
 17469                           ;mcc_generated_files/eusart2.c: 124:     eusart2RxHead = 0;
 17470     09FE  01FC               	clrf	_eusart2RxHead	;volatile
 17471                           
 17472                           ;mcc_generated_files/eusart2.c: 125:     eusart2RxTail = 0;
 17473     09FF  01D9               	clrf	_eusart2RxTail	;volatile
 17474                           
 17475                           ;mcc_generated_files/eusart2.c: 126:     eusart2RxCount = 0;
 17476     0A00  01D8               	clrf	_eusart2RxCount	;volatile
 17477     0A01                     l14236:
 17478                           
 17479                           ;mcc_generated_files/eusart2.c: 129:     PIE3bits.RC2IE = 1;
 17480     0A01  014E               	movlb	14	; select bank14
 17481     0A02  1799               	bsf	25,7	;volatile
 17482     0A03                     l1705:
 17483     0A03  0008               	return
 17484     0A04                     __end_of_EUSART2_Initialize:
 17485                           
 17486                           	psect	text31
 17487     1F3F                     __ptext31:	
 17488 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
 17489 ;; Defined at:
 17490 ;;		line 276 in file "mcc_generated_files/eusart2.c"
 17491 ;; Parameters:    Size  Location     Type
 17492 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17493 ;;		 -> EUSART2_Transmit_ISR(1), EUSART1_Transmit_ISR(1), 
 17494 ;; Auto vars:     Size  Location     Type
 17495 ;;		None
 17496 ;; Return value:  Size  Location     Type
 17497 ;;                  1    wreg      void 
 17498 ;; Registers used:
 17499 ;;		wreg
 17500 ;; Tracked objects:
 17501 ;;		On entry : 0/0
 17502 ;;		On exit  : 0/0
 17503 ;;		Unchanged: 0/0
 17504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17505 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17508 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17509 ;;Total ram usage:        2 bytes
 17510 ;; Hardware stack levels used: 1
 17511 ;; Hardware stack levels required when called: 4
 17512 ;; This function calls:
 17513 ;;		Nothing
 17514 ;; This function is called by:
 17515 ;;		_EUSART2_Initialize
 17516 ;; This function uses a non-reentrant model
 17517 ;;
 17518                           
 17519     1F3F                     _EUSART2_SetTxInterruptHandler:	
 17520                           ;psect for function _EUSART2_SetTxInterruptHandler
 17521                           
 17522     1F3F                     l13598:	
 17523                           ;incstack = 0
 17524                           ; Regs used in _EUSART2_SetTxInterruptHandler: [wreg]
 17525                           
 17526                           
 17527                           ;mcc_generated_files/eusart2.c: 277:     EUSART2_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 17528     1F3F  0872               	movf	EUSART2_SetTxInterruptHandler@interruptHandler+1,w
 17529     1F40  0141               	movlb	1	; select bank1
 17530     1F41  00ED               	movwf	(_EUSART2_TxDefaultInterruptHandler+1)^(0+128)
 17531     1F42  0871               	movf	EUSART2_SetTxInterruptHandler@interruptHandler,w
 17532     1F43  00EC               	movwf	_EUSART2_TxDefaultInterruptHandler^(0+128)
 17533     1F44                     l1771:
 17534     1F44  0008               	return
 17535     1F45                     __end_of_EUSART2_SetTxInterruptHandler:
 17536                           
 17537                           	psect	text32
 17538     1F39                     __ptext32:	
 17539 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
 17540 ;; Defined at:
 17541 ;;		line 280 in file "mcc_generated_files/eusart2.c"
 17542 ;; Parameters:    Size  Location     Type
 17543 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17544 ;;		 -> EUSART2_Receive_ISR(1), EUSART1_Receive_ISR(1), 
 17545 ;; Auto vars:     Size  Location     Type
 17546 ;;		None
 17547 ;; Return value:  Size  Location     Type
 17548 ;;                  1    wreg      void 
 17549 ;; Registers used:
 17550 ;;		wreg
 17551 ;; Tracked objects:
 17552 ;;		On entry : 0/0
 17553 ;;		On exit  : 0/0
 17554 ;;		Unchanged: 0/0
 17555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17556 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17559 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17560 ;;Total ram usage:        2 bytes
 17561 ;; Hardware stack levels used: 1
 17562 ;; Hardware stack levels required when called: 4
 17563 ;; This function calls:
 17564 ;;		Nothing
 17565 ;; This function is called by:
 17566 ;;		_EUSART2_Initialize
 17567 ;; This function uses a non-reentrant model
 17568 ;;
 17569                           
 17570     1F39                     _EUSART2_SetRxInterruptHandler:	
 17571                           ;psect for function _EUSART2_SetRxInterruptHandler
 17572                           
 17573     1F39                     l13596:	
 17574                           ;incstack = 0
 17575                           ; Regs used in _EUSART2_SetRxInterruptHandler: [wreg]
 17576                           
 17577                           
 17578                           ;mcc_generated_files/eusart2.c: 281:     EUSART2_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 17579     1F39  0872               	movf	EUSART2_SetRxInterruptHandler@interruptHandler+1,w
 17580     1F3A  0142               	movlb	2	; select bank2
 17581     1F3B  00E5               	movwf	(_EUSART2_RxDefaultInterruptHandler+1)^(0+256)
 17582     1F3C  0871               	movf	EUSART2_SetRxInterruptHandler@interruptHandler,w
 17583     1F3D  00E4               	movwf	_EUSART2_RxDefaultInterruptHandler^(0+256)
 17584     1F3E                     l1774:
 17585     1F3E  0008               	return
 17586     1F3F                     __end_of_EUSART2_SetRxInterruptHandler:
 17587                           
 17588                           	psect	text33
 17589     1F33                     __ptext33:	
 17590 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
 17591 ;; Defined at:
 17592 ;;		line 268 in file "mcc_generated_files/eusart2.c"
 17593 ;; Parameters:    Size  Location     Type
 17594 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17595 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
 17596 ;; Auto vars:     Size  Location     Type
 17597 ;;		None
 17598 ;; Return value:  Size  Location     Type
 17599 ;;                  1    wreg      void 
 17600 ;; Registers used:
 17601 ;;		wreg
 17602 ;; Tracked objects:
 17603 ;;		On entry : 0/0
 17604 ;;		On exit  : 0/0
 17605 ;;		Unchanged: 0/0
 17606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17607 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17610 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17611 ;;Total ram usage:        2 bytes
 17612 ;; Hardware stack levels used: 1
 17613 ;; Hardware stack levels required when called: 4
 17614 ;; This function calls:
 17615 ;;		Nothing
 17616 ;; This function is called by:
 17617 ;;		_EUSART2_Initialize
 17618 ;; This function uses a non-reentrant model
 17619 ;;
 17620                           
 17621     1F33                     _EUSART2_SetOverrunErrorHandler:	
 17622                           ;psect for function _EUSART2_SetOverrunErrorHandler
 17623                           
 17624     1F33                     l13602:	
 17625                           ;incstack = 0
 17626                           ; Regs used in _EUSART2_SetOverrunErrorHandler: [wreg]
 17627                           
 17628                           
 17629                           ;mcc_generated_files/eusart2.c: 269:     EUSART2_OverrunErrorHandler = interruptHandler;
 17630     1F33  0872               	movf	EUSART2_SetOverrunErrorHandler@interruptHandler+1,w
 17631     1F34  0142               	movlb	2	; select bank2
 17632     1F35  00E1               	movwf	(_EUSART2_OverrunErrorHandler+1)^(0+256)
 17633     1F36  0871               	movf	EUSART2_SetOverrunErrorHandler@interruptHandler,w
 17634     1F37  00E0               	movwf	_EUSART2_OverrunErrorHandler^(0+256)
 17635     1F38                     l1765:
 17636     1F38  0008               	return
 17637     1F39                     __end_of_EUSART2_SetOverrunErrorHandler:
 17638                           
 17639                           	psect	text34
 17640     1F2D                     __ptext34:	
 17641 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
 17642 ;; Defined at:
 17643 ;;		line 264 in file "mcc_generated_files/eusart2.c"
 17644 ;; Parameters:    Size  Location     Type
 17645 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17646 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
 17647 ;; Auto vars:     Size  Location     Type
 17648 ;;		None
 17649 ;; Return value:  Size  Location     Type
 17650 ;;                  1    wreg      void 
 17651 ;; Registers used:
 17652 ;;		wreg
 17653 ;; Tracked objects:
 17654 ;;		On entry : 0/0
 17655 ;;		On exit  : 0/0
 17656 ;;		Unchanged: 0/0
 17657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17658 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17661 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17662 ;;Total ram usage:        2 bytes
 17663 ;; Hardware stack levels used: 1
 17664 ;; Hardware stack levels required when called: 4
 17665 ;; This function calls:
 17666 ;;		Nothing
 17667 ;; This function is called by:
 17668 ;;		_EUSART2_Initialize
 17669 ;; This function uses a non-reentrant model
 17670 ;;
 17671                           
 17672     1F2D                     _EUSART2_SetFramingErrorHandler:	
 17673                           ;psect for function _EUSART2_SetFramingErrorHandler
 17674                           
 17675     1F2D                     l13600:	
 17676                           ;incstack = 0
 17677                           ; Regs used in _EUSART2_SetFramingErrorHandler: [wreg]
 17678                           
 17679                           
 17680                           ;mcc_generated_files/eusart2.c: 265:     EUSART2_FramingErrorHandler = interruptHandler;
 17681     1F2D  0872               	movf	EUSART2_SetFramingErrorHandler@interruptHandler+1,w
 17682     1F2E  0142               	movlb	2	; select bank2
 17683     1F2F  00E3               	movwf	(_EUSART2_FramingErrorHandler+1)^(0+256)
 17684     1F30  0871               	movf	EUSART2_SetFramingErrorHandler@interruptHandler,w
 17685     1F31  00E2               	movwf	_EUSART2_FramingErrorHandler^(0+256)
 17686     1F32                     l1762:
 17687     1F32  0008               	return
 17688     1F33                     __end_of_EUSART2_SetFramingErrorHandler:
 17689                           
 17690                           	psect	text35
 17691     1F27                     __ptext35:	
 17692 ;; *************** function _EUSART2_SetErrorHandler *****************
 17693 ;; Defined at:
 17694 ;;		line 272 in file "mcc_generated_files/eusart2.c"
 17695 ;; Parameters:    Size  Location     Type
 17696 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17697 ;;		 -> EUSART2_DefaultErrorHandler(1), 
 17698 ;; Auto vars:     Size  Location     Type
 17699 ;;		None
 17700 ;; Return value:  Size  Location     Type
 17701 ;;                  1    wreg      void 
 17702 ;; Registers used:
 17703 ;;		wreg
 17704 ;; Tracked objects:
 17705 ;;		On entry : 0/0
 17706 ;;		On exit  : 0/0
 17707 ;;		Unchanged: 0/0
 17708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17709 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17712 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17713 ;;Total ram usage:        2 bytes
 17714 ;; Hardware stack levels used: 1
 17715 ;; Hardware stack levels required when called: 4
 17716 ;; This function calls:
 17717 ;;		Nothing
 17718 ;; This function is called by:
 17719 ;;		_EUSART2_Initialize
 17720 ;; This function uses a non-reentrant model
 17721 ;;
 17722                           
 17723     1F27                     _EUSART2_SetErrorHandler:	
 17724                           ;psect for function _EUSART2_SetErrorHandler
 17725                           
 17726     1F27                     l13604:	
 17727                           ;incstack = 0
 17728                           ; Regs used in _EUSART2_SetErrorHandler: [wreg]
 17729                           
 17730                           
 17731                           ;mcc_generated_files/eusart2.c: 273:     EUSART2_ErrorHandler = interruptHandler;
 17732     1F27  0872               	movf	EUSART2_SetErrorHandler@interruptHandler+1,w
 17733     1F28  0142               	movlb	2	; select bank2
 17734     1F29  00DF               	movwf	(_EUSART2_ErrorHandler+1)^(0+256)
 17735     1F2A  0871               	movf	EUSART2_SetErrorHandler@interruptHandler,w
 17736     1F2B  00DE               	movwf	_EUSART2_ErrorHandler^(0+256)
 17737     1F2C                     l1768:
 17738     1F2C  0008               	return
 17739     1F2D                     __end_of_EUSART2_SetErrorHandler:
 17740                           
 17741                           	psect	text36
 17742     0986                     __ptext36:	
 17743 ;; *************** function _EUSART1_Initialize *****************
 17744 ;; Defined at:
 17745 ;;		line 88 in file "mcc_generated_files/eusart1.c"
 17746 ;; Parameters:    Size  Location     Type
 17747 ;;		None
 17748 ;; Auto vars:     Size  Location     Type
 17749 ;;		None
 17750 ;; Return value:  Size  Location     Type
 17751 ;;                  1    wreg      void 
 17752 ;; Registers used:
 17753 ;;		wreg, status,2, status,0, pclath, cstack
 17754 ;; Tracked objects:
 17755 ;;		On entry : 0/0
 17756 ;;		On exit  : 0/0
 17757 ;;		Unchanged: 0/0
 17758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17763 ;;Total ram usage:        0 bytes
 17764 ;; Hardware stack levels used: 1
 17765 ;; Hardware stack levels required when called: 5
 17766 ;; This function calls:
 17767 ;;		_EUSART1_SetErrorHandler
 17768 ;;		_EUSART1_SetFramingErrorHandler
 17769 ;;		_EUSART1_SetOverrunErrorHandler
 17770 ;;		_EUSART1_SetRxInterruptHandler
 17771 ;;		_EUSART1_SetTxInterruptHandler
 17772 ;; This function is called by:
 17773 ;;		_SYSTEM_Initialize
 17774 ;; This function uses a non-reentrant model
 17775 ;;
 17776                           
 17777     0986                     _EUSART1_Initialize:	
 17778                           ;psect for function _EUSART1_Initialize
 17779                           
 17780     0986                     l14238:	
 17781                           ;incstack = 0
 17782                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17783                           
 17784                           
 17785                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
 17786     0986  014E               	movlb	14	; select bank14
 17787     0987  1299               	bcf	25,5	;volatile
 17788     0988                     l14240:
 17789                           
 17790                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 17791     0988  30CF               	movlw	low _EUSART1_Receive_ISR
 17792     0989  00F1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 17793     098A  3008               	movlw	high _EUSART1_Receive_ISR
 17794     098B  00F2               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 17795     098C  319F  271B  3189   	fcall	_EUSART1_SetRxInterruptHandler
 17796     098F                     l14242:
 17797                           
 17798                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
 17799     098F  014E               	movlb	14	; select bank14
 17800     0990  1219               	bcf	25,4	;volatile
 17801                           
 17802                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
 17803     0991  302A               	movlw	low _EUSART1_Transmit_ISR
 17804     0992  00F1               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler
 17805     0993  3014               	movlw	high _EUSART1_Transmit_ISR
 17806     0994  00F2               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1
 17807     0995  319F  2721  3189   	fcall	_EUSART1_SetTxInterruptHandler
 17808     0998                     l14244:
 17809                           
 17810                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
 17811     0998  3008               	movlw	8
 17812     0999  0142               	movlb	2	; select bank2
 17813     099A  009F               	movwf	31	;volatile
 17814     099B                     l14246:
 17815                           
 17816                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
 17817     099B  3090               	movlw	144
 17818     099C  009D               	movwf	29	;volatile
 17819     099D                     l14248:
 17820                           
 17821                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
 17822     099D  3024               	movlw	36
 17823     099E  009E               	movwf	30	;volatile
 17824     099F                     l14250:
 17825                           
 17826                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x40;
 17827     099F  3040               	movlw	64
 17828     09A0  009B               	movwf	27	;volatile
 17829     09A1                     l14252:
 17830                           
 17831                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x03;
 17832     09A1  3003               	movlw	3
 17833     09A2  009C               	movwf	28	;volatile
 17834     09A3                     l14254:
 17835                           
 17836                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 17837     09A3  306B               	movlw	low _EUSART1_DefaultFramingErrorHandler
 17838     09A4  00F1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
 17839     09A5  301E               	movlw	high _EUSART1_DefaultFramingErrorHandler
 17840     09A6  00F2               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
 17841     09A7  319F  270F  3189   	fcall	_EUSART1_SetFramingErrorHandler
 17842     09AA                     l14256:
 17843                           
 17844                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 17845     09AA  3093               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 17846     09AB  00F1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
 17847     09AC  301E               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 17848     09AD  00F2               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
 17849     09AE  319F  2715  3189   	fcall	_EUSART1_SetOverrunErrorHandler
 17850     09B1                     l14258:
 17851                           
 17852                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 17853     09B1  308F               	movlw	low _EUSART1_DefaultErrorHandler
 17854     09B2  00F1               	movwf	EUSART1_SetErrorHandler@interruptHandler
 17855     09B3  301E               	movlw	high _EUSART1_DefaultErrorHandler
 17856     09B4  00F2               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
 17857     09B5  319F  2709  3189   	fcall	_EUSART1_SetErrorHandler
 17858     09B8                     l14260:
 17859                           
 17860                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
 17861     09B8  0141               	movlb	1	; select bank1
 17862     09B9  01E6               	clrf	_eusart1RxLastError^(0+128)	;volatile
 17863     09BA                     l14262:
 17864                           
 17865                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
 17866     09BA  0140               	movlb	0	; select bank0
 17867     09BB  01D7               	clrf	_eusart1TxHead	;volatile
 17868     09BC                     l14264:
 17869                           
 17870                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
 17871     09BC  01D6               	clrf	_eusart1TxTail	;volatile
 17872     09BD                     l14266:
 17873                           
 17874                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
 17875     09BD  3008               	movlw	8
 17876     09BE  00D5               	movwf	_eusart1TxBufferRemaining	;volatile
 17877                           
 17878                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
 17879     09BF  01D4               	clrf	_eusart1RxHead	;volatile
 17880                           
 17881                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
 17882     09C0  01D3               	clrf	_eusart1RxTail	;volatile
 17883                           
 17884                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
 17885     09C1  01D2               	clrf	_eusart1RxCount	;volatile
 17886     09C2                     l14268:
 17887                           
 17888                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
 17889     09C2  014E               	movlb	14	; select bank14
 17890     09C3  1699               	bsf	25,5	;volatile
 17891     09C4                     l1849:
 17892     09C4  0008               	return
 17893     09C5                     __end_of_EUSART1_Initialize:
 17894                           
 17895                           	psect	text37
 17896     1F21                     __ptext37:	
 17897 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
 17898 ;; Defined at:
 17899 ;;		line 285 in file "mcc_generated_files/eusart1.c"
 17900 ;; Parameters:    Size  Location     Type
 17901 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17902 ;;		 -> EUSART2_Transmit_ISR(1), EUSART1_Transmit_ISR(1), 
 17903 ;; Auto vars:     Size  Location     Type
 17904 ;;		None
 17905 ;; Return value:  Size  Location     Type
 17906 ;;                  1    wreg      void 
 17907 ;; Registers used:
 17908 ;;		wreg
 17909 ;; Tracked objects:
 17910 ;;		On entry : 0/0
 17911 ;;		On exit  : 0/0
 17912 ;;		Unchanged: 0/0
 17913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17914 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17917 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17918 ;;Total ram usage:        2 bytes
 17919 ;; Hardware stack levels used: 1
 17920 ;; Hardware stack levels required when called: 4
 17921 ;; This function calls:
 17922 ;;		Nothing
 17923 ;; This function is called by:
 17924 ;;		_EUSART1_Initialize
 17925 ;; This function uses a non-reentrant model
 17926 ;;
 17927                           
 17928     1F21                     _EUSART1_SetTxInterruptHandler:	
 17929                           ;psect for function _EUSART1_SetTxInterruptHandler
 17930                           
 17931     1F21                     l13608:	
 17932                           ;incstack = 0
 17933                           ; Regs used in _EUSART1_SetTxInterruptHandler: [wreg]
 17934                           
 17935                           
 17936                           ;mcc_generated_files/eusart1.c: 286:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 17937     1F21  0872               	movf	EUSART1_SetTxInterruptHandler@interruptHandler+1,w
 17938     1F22  0142               	movlb	2	; select bank2
 17939     1F23  00DD               	movwf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+256)
 17940     1F24  0871               	movf	EUSART1_SetTxInterruptHandler@interruptHandler,w
 17941     1F25  00DC               	movwf	_EUSART1_TxDefaultInterruptHandler^(0+256)
 17942     1F26                     l1921:
 17943     1F26  0008               	return
 17944     1F27                     __end_of_EUSART1_SetTxInterruptHandler:
 17945                           
 17946                           	psect	text38
 17947     1F1B                     __ptext38:	
 17948 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 17949 ;; Defined at:
 17950 ;;		line 289 in file "mcc_generated_files/eusart1.c"
 17951 ;; Parameters:    Size  Location     Type
 17952 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17953 ;;		 -> EUSART2_Receive_ISR(1), EUSART1_Receive_ISR(1), 
 17954 ;; Auto vars:     Size  Location     Type
 17955 ;;		None
 17956 ;; Return value:  Size  Location     Type
 17957 ;;                  1    wreg      void 
 17958 ;; Registers used:
 17959 ;;		wreg
 17960 ;; Tracked objects:
 17961 ;;		On entry : 0/0
 17962 ;;		On exit  : 0/0
 17963 ;;		Unchanged: 0/0
 17964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17965 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17968 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17969 ;;Total ram usage:        2 bytes
 17970 ;; Hardware stack levels used: 1
 17971 ;; Hardware stack levels required when called: 4
 17972 ;; This function calls:
 17973 ;;		Nothing
 17974 ;; This function is called by:
 17975 ;;		_EUSART1_Initialize
 17976 ;; This function uses a non-reentrant model
 17977 ;;
 17978                           
 17979     1F1B                     _EUSART1_SetRxInterruptHandler:	
 17980                           ;psect for function _EUSART1_SetRxInterruptHandler
 17981                           
 17982     1F1B                     l13606:	
 17983                           ;incstack = 0
 17984                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
 17985                           
 17986                           
 17987                           ;mcc_generated_files/eusart1.c: 290:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 17988     1F1B  0872               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
 17989     1F1C  0142               	movlb	2	; select bank2
 17990     1F1D  00DB               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256)
 17991     1F1E  0871               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
 17992     1F1F  00DA               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+256)
 17993     1F20                     l1924:
 17994     1F20  0008               	return
 17995     1F21                     __end_of_EUSART1_SetRxInterruptHandler:
 17996                           
 17997                           	psect	text39
 17998     1F15                     __ptext39:	
 17999 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 18000 ;; Defined at:
 18001 ;;		line 277 in file "mcc_generated_files/eusart1.c"
 18002 ;; Parameters:    Size  Location     Type
 18003 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 18004 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 18005 ;; Auto vars:     Size  Location     Type
 18006 ;;		None
 18007 ;; Return value:  Size  Location     Type
 18008 ;;                  1    wreg      void 
 18009 ;; Registers used:
 18010 ;;		wreg
 18011 ;; Tracked objects:
 18012 ;;		On entry : 0/0
 18013 ;;		On exit  : 0/0
 18014 ;;		Unchanged: 0/0
 18015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18016 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18019 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18020 ;;Total ram usage:        2 bytes
 18021 ;; Hardware stack levels used: 1
 18022 ;; Hardware stack levels required when called: 4
 18023 ;; This function calls:
 18024 ;;		Nothing
 18025 ;; This function is called by:
 18026 ;;		_EUSART1_Initialize
 18027 ;; This function uses a non-reentrant model
 18028 ;;
 18029                           
 18030     1F15                     _EUSART1_SetOverrunErrorHandler:	
 18031                           ;psect for function _EUSART1_SetOverrunErrorHandler
 18032                           
 18033     1F15                     l13612:	
 18034                           ;incstack = 0
 18035                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
 18036                           
 18037                           
 18038                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_OverrunErrorHandler = interruptHandler;
 18039     1F15  0872               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
 18040     1F16  0142               	movlb	2	; select bank2
 18041     1F17  00D7               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+256)
 18042     1F18  0871               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
 18043     1F19  00D6               	movwf	_EUSART1_OverrunErrorHandler^(0+256)
 18044     1F1A                     l1915:
 18045     1F1A  0008               	return
 18046     1F1B                     __end_of_EUSART1_SetOverrunErrorHandler:
 18047                           
 18048                           	psect	text40
 18049     1F0F                     __ptext40:	
 18050 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 18051 ;; Defined at:
 18052 ;;		line 273 in file "mcc_generated_files/eusart1.c"
 18053 ;; Parameters:    Size  Location     Type
 18054 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 18055 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 18056 ;; Auto vars:     Size  Location     Type
 18057 ;;		None
 18058 ;; Return value:  Size  Location     Type
 18059 ;;                  1    wreg      void 
 18060 ;; Registers used:
 18061 ;;		wreg
 18062 ;; Tracked objects:
 18063 ;;		On entry : 0/0
 18064 ;;		On exit  : 0/0
 18065 ;;		Unchanged: 0/0
 18066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18067 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18070 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18071 ;;Total ram usage:        2 bytes
 18072 ;; Hardware stack levels used: 1
 18073 ;; Hardware stack levels required when called: 4
 18074 ;; This function calls:
 18075 ;;		Nothing
 18076 ;; This function is called by:
 18077 ;;		_EUSART1_Initialize
 18078 ;; This function uses a non-reentrant model
 18079 ;;
 18080                           
 18081     1F0F                     _EUSART1_SetFramingErrorHandler:	
 18082                           ;psect for function _EUSART1_SetFramingErrorHandler
 18083                           
 18084     1F0F                     l13610:	
 18085                           ;incstack = 0
 18086                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
 18087                           
 18088                           
 18089                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_FramingErrorHandler = interruptHandler;
 18090     1F0F  0872               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
 18091     1F10  0142               	movlb	2	; select bank2
 18092     1F11  00D9               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+256)
 18093     1F12  0871               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
 18094     1F13  00D8               	movwf	_EUSART1_FramingErrorHandler^(0+256)
 18095     1F14                     l1912:
 18096     1F14  0008               	return
 18097     1F15                     __end_of_EUSART1_SetFramingErrorHandler:
 18098                           
 18099                           	psect	text41
 18100     1F09                     __ptext41:	
 18101 ;; *************** function _EUSART1_SetErrorHandler *****************
 18102 ;; Defined at:
 18103 ;;		line 281 in file "mcc_generated_files/eusart1.c"
 18104 ;; Parameters:    Size  Location     Type
 18105 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 18106 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 18107 ;; Auto vars:     Size  Location     Type
 18108 ;;		None
 18109 ;; Return value:  Size  Location     Type
 18110 ;;                  1    wreg      void 
 18111 ;; Registers used:
 18112 ;;		wreg
 18113 ;; Tracked objects:
 18114 ;;		On entry : 0/0
 18115 ;;		On exit  : 0/0
 18116 ;;		Unchanged: 0/0
 18117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18118 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18121 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18122 ;;Total ram usage:        2 bytes
 18123 ;; Hardware stack levels used: 1
 18124 ;; Hardware stack levels required when called: 4
 18125 ;; This function calls:
 18126 ;;		Nothing
 18127 ;; This function is called by:
 18128 ;;		_EUSART1_Initialize
 18129 ;; This function uses a non-reentrant model
 18130 ;;
 18131                           
 18132     1F09                     _EUSART1_SetErrorHandler:	
 18133                           ;psect for function _EUSART1_SetErrorHandler
 18134                           
 18135     1F09                     l13614:	
 18136                           ;incstack = 0
 18137                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
 18138                           
 18139                           
 18140                           ;mcc_generated_files/eusart1.c: 282:     EUSART1_ErrorHandler = interruptHandler;
 18141     1F09  0872               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
 18142     1F0A  0142               	movlb	2	; select bank2
 18143     1F0B  00D5               	movwf	(_EUSART1_ErrorHandler+1)^(0+256)
 18144     1F0C  0871               	movf	EUSART1_SetErrorHandler@interruptHandler,w
 18145     1F0D  00D4               	movwf	_EUSART1_ErrorHandler^(0+256)
 18146     1F0E                     l1918:
 18147     1F0E  0008               	return
 18148     1F0F                     __end_of_EUSART1_SetErrorHandler:
 18149                           
 18150                           	psect	text42
 18151     120C                     __ptext42:	
 18152 ;; *************** function _RN487X_SetAsyncMessageHandler *****************
 18153 ;; Defined at:
 18154 ;;		line 328 in file "mcc_generated_files/rn487x/rn487x.c"
 18155 ;; Parameters:    Size  Location     Type
 18156 ;;  pBuffer         1    wreg     PTR unsigned char 
 18157 ;;		 -> statusBuffer@main$F4234(80), statusBuffer(80), 
 18158 ;;  len             1    1[COMMON] unsigned char 
 18159 ;; Auto vars:     Size  Location     Type
 18160 ;;  pBuffer         1    2[COMMON] PTR unsigned char 
 18161 ;;		 -> statusBuffer@main$F4234(80), statusBuffer(80), 
 18162 ;; Return value:  Size  Location     Type
 18163 ;;                  1    wreg      _Bool 
 18164 ;; Registers used:
 18165 ;;		wreg, status,2, status,0
 18166 ;; Tracked objects:
 18167 ;;		On entry : 0/0
 18168 ;;		On exit  : 0/0
 18169 ;;		Unchanged: 0/0
 18170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18171 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18172 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18174 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18175 ;;Total ram usage:        2 bytes
 18176 ;; Hardware stack levels used: 1
 18177 ;; Hardware stack levels required when called: 4
 18178 ;; This function calls:
 18179 ;;		Nothing
 18180 ;; This function is called by:
 18181 ;;		_main
 18182 ;;		_RN487X_Example_Initialized
 18183 ;; This function uses a non-reentrant model
 18184 ;;
 18185                           
 18186     120C                     _RN487X_SetAsyncMessageHandler:	
 18187                           ;psect for function _RN487X_SetAsyncMessageHandler
 18188                           
 18189                           
 18190                           ;incstack = 0
 18191                           ; Regs used in _RN487X_SetAsyncMessageHandler: [wreg+status,2+status,0]
 18192                           ;RN487X_SetAsyncMessageHandler@pBuffer stored from wreg
 18193     120C  00F2               	movwf	RN487X_SetAsyncMessageHandler@pBuffer
 18194     120D                     l14604:
 18195                           
 18196                           ;mcc_generated_files/rn487x/rn487x.c: 328: _Bool RN487X_SetAsyncMessageHandler(char* pBu
      +                          ffer, uint8_t len);mcc_generated_files/rn487x/rn487x.c: 329: {;mcc_generated_files/rn487
      +                          x/rn487x.c: 330:     if ((pBuffer != ((void*)0)) && (len > 1))
 18197     120D  0872               	movf	RN487X_SetAsyncMessageHandler@pBuffer,w
 18198     120E  1903               	btfsc	3,2
 18199     120F  2A11               	goto	u11621
 18200     1210  2A12               	goto	u11620
 18201     1211                     u11621:
 18202     1211  2A20               	goto	l14618
 18203     1212                     u11620:
 18204     1212                     l14606:
 18205     1212  3002               	movlw	2
 18206     1213  0271               	subwf	RN487X_SetAsyncMessageHandler@len,w
 18207     1214  1C03               	skipc
 18208     1215  2A17               	goto	u11631
 18209     1216  2A18               	goto	u11630
 18210     1217                     u11631:
 18211     1217  2A20               	goto	l14618
 18212     1218                     u11630:
 18213     1218                     l14608:
 18214                           
 18215                           ;mcc_generated_files/rn487x/rn487x.c: 331:     {;mcc_generated_files/rn487x/rn487x.c: 33
      +                          2:       asyncBuffer = pBuffer;
 18216     1218  0872               	movf	RN487X_SetAsyncMessageHandler@pBuffer,w
 18217     1219  0140               	movlb	0	; select bank0
 18218     121A  00E2               	movwf	_asyncBuffer
 18219     121B                     l14610:
 18220                           
 18221                           ;mcc_generated_files/rn487x/rn487x.c: 333:       asyncBufferSize = len - 1;
 18222     121B  0871               	movf	RN487X_SetAsyncMessageHandler@len,w
 18223     121C  3EFF               	addlw	255
 18224     121D  00E1               	movwf	_asyncBufferSize
 18225     121E                     l14612:
 18226                           
 18227                           ;mcc_generated_files/rn487x/rn487x.c: 334:       return 1;
 18228     121E  3001               	movlw	1
 18229     121F  2A21               	goto	l1606
 18230     1220                     l14618:
 18231                           
 18232                           ;mcc_generated_files/rn487x/rn487x.c: 337:     {;mcc_generated_files/rn487x/rn487x.c: 33
      +                          8:         return 0;
 18233     1220  3000               	movlw	0
 18234     1221                     l1606:
 18235     1221  0008               	return
 18236     1222                     __end_of_RN487X_SetAsyncMessageHandler:
 18237                           
 18238                           	psect	text43
 18239     1028                     __ptext43:	
 18240 ;; *************** function _RN487X_Read *****************
 18241 ;; Defined at:
 18242 ;;		line 356 in file "mcc_generated_files/rn487x/rn487x.c"
 18243 ;; Parameters:    Size  Location     Type
 18244 ;;		None
 18245 ;; Auto vars:     Size  Location     Type
 18246 ;;		None
 18247 ;; Return value:  Size  Location     Type
 18248 ;;                  1    wreg      unsigned char 
 18249 ;; Registers used:
 18250 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18251 ;; Tracked objects:
 18252 ;;		On entry : 0/0
 18253 ;;		On exit  : 0/0
 18254 ;;		Unchanged: 0/0
 18255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18260 ;;Total ram usage:        0 bytes
 18261 ;; Hardware stack levels used: 1
 18262 ;; Hardware stack levels required when called: 9
 18263 ;; This function calls:
 18264 ;;		_RN487X_DataReady
 18265 ;; This function is called by:
 18266 ;;		_main
 18267 ;;		_RN487X_Example_TransparentUart
 18268 ;; This function uses a non-reentrant model
 18269 ;;
 18270                           
 18271     1028                     _RN487X_Read:	
 18272                           ;psect for function _RN487X_Read
 18273                           
 18274     1028                     l14626:	
 18275                           ;incstack = 0
 18276                           ; Regs used in _RN487X_Read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18277                           
 18278     1028                     l14628:	
 18279                           ;mcc_generated_files/rn487x/rn487x.c: 358:     while(RN487X_DataReady() == 0);
 18280                           
 18281     1028  3193  23AD  3190   	fcall	_RN487X_DataReady
 18282     102B  3A00               	xorlw	0
 18283     102C  1903               	skipnz
 18284     102D  282F               	goto	u11641
 18285     102E  2830               	goto	u11640
 18286     102F                     u11641:
 18287     102F  2828               	goto	l14628
 18288     1030                     u11640:
 18289     1030                     l14630:
 18290                           
 18291                           ;mcc_generated_files/rn487x/rn487x.c: 359:     dataReady = 0;
 18292     1030  0140               	movlb	0	; select bank0
 18293     1031  01DE               	clrf	_dataReady
 18294     1032                     l14632:
 18295                           
 18296                           ;mcc_generated_files/rn487x/rn487x.c: 360:     return peek;
 18297     1032  085F               	movf	_peek,w
 18298     1033                     l1618:
 18299     1033  0008               	return
 18300     1034                     __end_of_RN487X_Read:
 18301                           
 18302                           	psect	text44
 18303     13AD                     __ptext44:	
 18304 ;; *************** function _RN487X_DataReady *****************
 18305 ;; Defined at:
 18306 ;;		line 342 in file "mcc_generated_files/rn487x/rn487x.c"
 18307 ;; Parameters:    Size  Location     Type
 18308 ;;		None
 18309 ;; Auto vars:     Size  Location     Type
 18310 ;;		None
 18311 ;; Return value:  Size  Location     Type
 18312 ;;                  1    wreg      _Bool 
 18313 ;; Registers used:
 18314 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18315 ;; Tracked objects:
 18316 ;;		On entry : 0/0
 18317 ;;		On exit  : 0/0
 18318 ;;		Unchanged: 0/0
 18319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18324 ;;Total ram usage:        0 bytes
 18325 ;; Hardware stack levels used: 1
 18326 ;; Hardware stack levels required when called: 8
 18327 ;; This function calls:
 18328 ;;		_RN487X_FilterData
 18329 ;;		_RN487X_is_rx_ready
 18330 ;; This function is called by:
 18331 ;;		_RN487X_Read
 18332 ;;		_main
 18333 ;;		_RN487X_Example_TransparentUart
 18334 ;; This function uses a non-reentrant model
 18335 ;;
 18336                           
 18337     13AD                     _RN487X_DataReady:	
 18338                           ;psect for function _RN487X_DataReady
 18339                           
 18340     13AD                     l14184:	
 18341                           ;incstack = 0
 18342                           ; Regs used in _RN487X_DataReady: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18343                           
 18344                           
 18345                           ;mcc_generated_files/rn487x/rn487x.c: 344:     if (dataReady)
 18346     13AD  0140               	movlb	0	; select bank0
 18347     13AE  085E               	movf	_dataReady,w
 18348     13AF  1903               	btfsc	3,2
 18349     13B0  2BB2               	goto	u11351
 18350     13B1  2BB3               	goto	u11350
 18351     13B2                     u11351:
 18352     13B2  2BB5               	goto	l14190
 18353     13B3                     u11350:
 18354     13B3                     l14186:
 18355                           
 18356                           ;mcc_generated_files/rn487x/rn487x.c: 345:     {;mcc_generated_files/rn487x/rn487x.c: 34
      +                          6:         return 1;
 18357     13B3  3001               	movlw	1
 18358     13B4  2BC8               	goto	l1611
 18359     13B5                     l14190:
 18360                           
 18361                           ;mcc_generated_files/rn487x/rn487x.c: 349:     if (RN487X.DataReady())
 18362     13B5  306E               	movlw	low ((_RN487X+6)| (0+32768))
 18363     13B6  0084               	movwf	4
 18364     13B7  3098               	movlw	high ((_RN487X+6)| (0+32768))
 18365     13B8  0085               	movwf	5
 18366     13B9  3F01               	moviw [1]fsr0
 18367     13BA  008A               	movwf	10
 18368     13BB  3F00               	moviw [0]fsr0
 18369     13BC  000A               	callw
 18370     13BD  3193               	pagesel	$
 18371     13BE  3A00               	xorlw	0
 18372     13BF  1903               	skipnz
 18373     13C0  2BC2               	goto	u11361
 18374     13C1  2BC3               	goto	u11360
 18375     13C2                     u11361:
 18376     13C2  2BC7               	goto	l14196
 18377     13C3                     u11360:
 18378     13C3                     l14192:
 18379                           
 18380                           ;mcc_generated_files/rn487x/rn487x.c: 350:     {;mcc_generated_files/rn487x/rn487x.c: 35
      +                          1:         return RN487X_FilterData();
 18381     13C3  318B  231A  3193   	fcall	_RN487X_FilterData
 18382     13C6  2BC8               	goto	l1611
 18383     13C7                     l14196:
 18384                           
 18385                           ;mcc_generated_files/rn487x/rn487x.c: 353:     return 0;
 18386     13C7  3000               	movlw	0
 18387     13C8                     l1611:
 18388     13C8  0008               	return
 18389     13C9                     __end_of_RN487X_DataReady:
 18390                           
 18391                           	psect	text45
 18392     0B1A                     __ptext45:	
 18393 ;; *************** function _RN487X_FilterData *****************
 18394 ;; Defined at:
 18395 ;;		line 363 in file "mcc_generated_files/rn487x/rn487x.c"
 18396 ;; Parameters:    Size  Location     Type
 18397 ;;		None
 18398 ;; Auto vars:     Size  Location     Type
 18399 ;;  readChar        1   36[BANK0 ] unsigned char 
 18400 ;; Return value:  Size  Location     Type
 18401 ;;                  1    wreg      _Bool 
 18402 ;; Registers used:
 18403 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18404 ;; Tracked objects:
 18405 ;;		On entry : 0/0
 18406 ;;		On exit  : 0/0
 18407 ;;		Unchanged: 0/0
 18408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18410 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18411 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18412 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18413 ;;Total ram usage:        2 bytes
 18414 ;; Hardware stack levels used: 1
 18415 ;; Hardware stack levels required when called: 7
 18416 ;; This function calls:
 18417 ;;		_RN487X_MessageHandler
 18418 ;;		_RN487X_Read@rn487x_interface$F1835
 18419 ;; This function is called by:
 18420 ;;		_RN487X_DataReady
 18421 ;; This function uses a non-reentrant model
 18422 ;;
 18423                           
 18424     0B1A                     _RN487X_FilterData:	
 18425                           ;psect for function _RN487X_FilterData
 18426                           
 18427     0B1A                     l13568:	
 18428                           ;incstack = 0
 18429                           ; Regs used in _RN487X_FilterData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18430                           
 18431                           
 18432                           ;mcc_generated_files/rn487x/rn487x.c: 365:     static _Bool asyncBuffering = 0;;mcc_gene
      +                          rated_files/rn487x/rn487x.c: 367:     uint8_t readChar = RN487X.Read();
 18433     0B1A  306A               	movlw	low ((_RN487X+2)| (0+32768))
 18434     0B1B  0084               	movwf	4
 18435     0B1C  3098               	movlw	high ((_RN487X+2)| (0+32768))
 18436     0B1D  0085               	movwf	5
 18437     0B1E  3F01               	moviw [1]fsr0
 18438     0B1F  008A               	movwf	10
 18439     0B20  3F00               	moviw [0]fsr0
 18440     0B21  000A               	callw
 18441     0B22  318B               	pagesel	$
 18442     0B23  0140               	movlb	0	; select bank0
 18443     0B24  00C4               	movwf	RN487X_FilterData@readChar
 18444     0B25                     l13570:
 18445                           
 18446                           ;mcc_generated_files/rn487x/rn487x.c: 369:     if(asyncBuffering == 1)
 18447     0B25  035D               	decf	RN487X_FilterData@asyncBuffering,w
 18448     0B26  1D03               	btfss	3,2
 18449     0B27  2B29               	goto	u10331
 18450     0B28  2B2A               	goto	u10330
 18451     0B29                     u10331:
 18452     0B29  2B54               	goto	l13586
 18453     0B2A                     u10330:
 18454     0B2A                     l13572:
 18455                           
 18456                           ;mcc_generated_files/rn487x/rn487x.c: 370:     {;mcc_generated_files/rn487x/rn487x.c: 37
      +                          1:         if(readChar == ('%'))
 18457     0B2A  3025               	movlw	37
 18458     0B2B  0644               	xorwf	RN487X_FilterData@readChar,w
 18459     0B2C  1D03               	btfss	3,2
 18460     0B2D  2B2F               	goto	u10341
 18461     0B2E  2B30               	goto	u10340
 18462     0B2F                     u10341:
 18463     0B2F  2B42               	goto	l13580
 18464     0B30                     u10340:
 18465     0B30                     l13574:
 18466                           
 18467                           ;mcc_generated_files/rn487x/rn487x.c: 372:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 373:             asyncBuffering = 0;
 18468     0B30  01DD               	clrf	RN487X_FilterData@asyncBuffering
 18469     0B31                     l13576:
 18470                           
 18471                           ;mcc_generated_files/rn487x/rn487x.c: 374:             *pHead = '\0';
 18472     0B31  0860               	movf	_pHead,w
 18473     0B32  0086               	movwf	6
 18474     0B33  3003               	movlw	3	; select bank6/7
 18475     0B34  0087               	movwf	7
 18476     0B35  0181               	clrf	1
 18477     0B36                     l13578:
 18478                           
 18479                           ;mcc_generated_files/rn487x/rn487x.c: 375:             RN487X.AsyncHandler(asyncBuffer);
 18480     0B36  0862               	movf	_asyncBuffer,w
 18481     0B37  00FB               	movwf	RN487X_MessageHandler@message
 18482     0B38  3078               	movlw	low ((_RN487X+16)| (0+32768))
 18483     0B39  0084               	movwf	4
 18484     0B3A  3098               	movlw	high ((_RN487X+16)| (0+32768))
 18485     0B3B  0085               	movwf	5
 18486     0B3C  3F01               	moviw [1]fsr0
 18487     0B3D  008A               	movwf	10
 18488     0B3E  3F00               	moviw [0]fsr0
 18489     0B3F  000A               	callw
 18490     0B40  318B               	pagesel	$
 18491                           
 18492                           ;mcc_generated_files/rn487x/rn487x.c: 376:         }
 18493     0B41  2B63               	goto	l1627
 18494     0B42                     l13580:
 18495     0B42  0862               	movf	_asyncBuffer,w
 18496     0B43  0761               	addwf	_asyncBufferSize,w
 18497     0B44  0260               	subwf	_pHead,w
 18498     0B45  1803               	skipnc
 18499     0B46  2B48               	goto	u10351
 18500     0B47  2B49               	goto	u10350
 18501     0B48                     u10351:
 18502     0B48  2B63               	goto	l1627
 18503     0B49                     u10350:
 18504     0B49                     l13582:
 18505                           
 18506                           ;mcc_generated_files/rn487x/rn487x.c: 378:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 379:             *pHead++ = readChar;
 18507     0B49  0860               	movf	_pHead,w
 18508     0B4A  0086               	movwf	6
 18509     0B4B  3003               	movlw	3	; select bank6/7
 18510     0B4C  0087               	movwf	7
 18511     0B4D  0844               	movf	RN487X_FilterData@readChar,w
 18512     0B4E  0081               	movwf	1
 18513     0B4F                     l13584:
 18514     0B4F  3001               	movlw	1
 18515     0B50  00C3               	movwf	??_RN487X_FilterData
 18516     0B51  0843               	movf	??_RN487X_FilterData,w
 18517     0B52  07E0               	addwf	_pHead,f
 18518     0B53  2B63               	goto	l1627
 18519     0B54                     l13586:
 18520                           
 18521                           ;mcc_generated_files/rn487x/rn487x.c: 383:     {;mcc_generated_files/rn487x/rn487x.c: 38
      +                          4:         if (readChar == ('%'))
 18522     0B54  3025               	movlw	37
 18523     0B55  0644               	xorwf	RN487X_FilterData@readChar,w
 18524     0B56  1D03               	btfss	3,2
 18525     0B57  2B59               	goto	u10361
 18526     0B58  2B5A               	goto	u10360
 18527     0B59                     u10361:
 18528     0B59  2B5F               	goto	l1628
 18529     0B5A                     u10360:
 18530     0B5A                     l13588:
 18531                           
 18532                           ;mcc_generated_files/rn487x/rn487x.c: 385:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 386:             asyncBuffering = 1;
 18533     0B5A  01DD               	clrf	RN487X_FilterData@asyncBuffering
 18534     0B5B  0ADD               	incf	RN487X_FilterData@asyncBuffering,f
 18535     0B5C                     l13590:
 18536                           
 18537                           ;mcc_generated_files/rn487x/rn487x.c: 387:             pHead = asyncBuffer;
 18538     0B5C  0862               	movf	_asyncBuffer,w
 18539     0B5D  00E0               	movwf	_pHead
 18540                           
 18541                           ;mcc_generated_files/rn487x/rn487x.c: 388:         }
 18542     0B5E  2B63               	goto	l1627
 18543     0B5F                     l1628:	
 18544                           ;mcc_generated_files/rn487x/rn487x.c: 389:         else
 18545                           
 18546                           
 18547                           ;mcc_generated_files/rn487x/rn487x.c: 390:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 391:             dataReady = 1;
 18548     0B5F  01DE               	clrf	_dataReady
 18549     0B60  0ADE               	incf	_dataReady,f
 18550     0B61                     l13592:
 18551                           
 18552                           ;mcc_generated_files/rn487x/rn487x.c: 392:             peek = readChar;
 18553     0B61  0844               	movf	RN487X_FilterData@readChar,w
 18554     0B62  00DF               	movwf	_peek
 18555     0B63                     l1627:	
 18556                           ;mcc_generated_files/rn487x/rn487x.c: 394:     }
 18557                           
 18558                           
 18559                           ;mcc_generated_files/rn487x/rn487x.c: 395:     return dataReady;
 18560     0B63  0140               	movlb	0	; select bank0
 18561     0B64  085E               	movf	_dataReady,w
 18562     0B65                     l1630:
 18563     0B65  0008               	return
 18564     0B66                     __end_of_RN487X_FilterData:
 18565                           
 18566                           	psect	text46
 18567     17C9                     __ptext46:	
 18568 ;; *************** function _RN487X_MessageHandler *****************
 18569 ;; Defined at:
 18570 ;;		line 368 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 18571 ;; Parameters:    Size  Location     Type
 18572 ;;  message         1   11[COMMON] PTR unsigned char 
 18573 ;;		 -> statusBuffer@main$F4234(80), statusBuffer(80), NULL(0), 
 18574 ;; Auto vars:     Size  Location     Type
 18575 ;;  messageType     1   34[BANK0 ] enum E12962
 18576 ;; Return value:  Size  Location     Type
 18577 ;;                  1    wreg      void 
 18578 ;; Registers used:
 18579 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18580 ;; Tracked objects:
 18581 ;;		On entry : 0/0
 18582 ;;		On exit  : 0/0
 18583 ;;		Unchanged: 0/0
 18584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18585 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18586 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18588 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18589 ;;Total ram usage:        2 bytes
 18590 ;; Hardware stack levels used: 1
 18591 ;; Hardware stack levels required when called: 6
 18592 ;; This function calls:
 18593 ;;		_rn487x_PrintIndicatorCharacters
 18594 ;;		_rn487x_PrintMessage
 18595 ;;		_rn487x_PrintMessageEnd
 18596 ;;		_rn487x_PrintMessageStart
 18597 ;;		_strstr
 18598 ;; This function is called by:
 18599 ;;		_RN487X_FilterData
 18600 ;; This function uses a non-reentrant model
 18601 ;;
 18602                           
 18603     17C9                     _RN487X_MessageHandler:	
 18604                           ;psect for function _RN487X_MessageHandler
 18605                           
 18606     17C9                     l13462:	
 18607                           ;incstack = 0
 18608                           ; Regs used in _RN487X_MessageHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18609                           
 18610                           
 18611                           ;mcc_generated_files/rn487x/rn487x_interface.c: 368: static void RN487X_MessageHandler(c
      +                          har* message);mcc_generated_files/rn487x/rn487x_interface.c: 369: {;mcc_generated_files/
      +                          rn487x/rn487x_interface.c: 370:     RN487X_MESSAGE_TYPE messageType;;mcc_generated_files
      +                          /rn487x/rn487x_interface.c: 371:     rn487x_PrintMessageStart();
 18612     17C9  3195  25DF  3197   	fcall	_rn487x_PrintMessageStart
 18613                           
 18614                           ;mcc_generated_files/rn487x/rn487x_interface.c: 372:     if (strstr(message, "DISCONNECT
      +                          "))
 18615     17CC  3091               	movlw	low (STR_2| (0+32768))
 18616     17CD  00F7               	movwf	strstr@n
 18617     17CE  3098               	movlw	high (STR_2| (0+32768))
 18618     17CF  00F8               	movwf	strstr@n+1
 18619     17D0  087B               	movf	RN487X_MessageHandler@message,w
 18620     17D1  318B  2366  3197   	fcall	_strstr
 18621     17D4  3A00               	xorlw	0
 18622     17D5  1903               	skipnz
 18623     17D6  2FD8               	goto	u10181
 18624     17D7  2FD9               	goto	u10180
 18625     17D8                     u10181:
 18626     17D8  2FDD               	goto	l13466
 18627     17D9                     u10180:
 18628     17D9                     l13464:
 18629                           
 18630                           ;mcc_generated_files/rn487x/rn487x_interface.c: 373:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 374:         messageType = DISCONNECT_MSG;
 18631     17D9  0140               	movlb	0	; select bank0
 18632     17DA  01C2               	clrf	RN487X_MessageHandler@messageType
 18633                           
 18634                           ;mcc_generated_files/rn487x/rn487x_interface.c: 375:         connected = 0;
 18635     17DB  01E3               	clrf	_connected
 18636                           
 18637                           ;mcc_generated_files/rn487x/rn487x_interface.c: 376:     }
 18638     17DC  2FF3               	goto	l13472
 18639     17DD                     l13466:
 18640     17DD  307A               	movlw	low (STR_4| (0+32768))
 18641     17DE  00F7               	movwf	strstr@n
 18642     17DF  3098               	movlw	high (STR_4| (0+32768))
 18643     17E0  00F8               	movwf	strstr@n+1
 18644     17E1  087B               	movf	RN487X_MessageHandler@message,w
 18645     17E2  318B  2366  3197   	fcall	_strstr
 18646     17E5  3A00               	xorlw	0
 18647     17E6  1903               	skipnz
 18648     17E7  2FE9               	goto	u10191
 18649     17E8  2FEA               	goto	u10190
 18650     17E9                     u10191:
 18651     17E9  2FF0               	goto	l13470
 18652     17EA                     u10190:
 18653     17EA                     l13468:
 18654                           
 18655                           ;mcc_generated_files/rn487x/rn487x_interface.c: 378:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 379:         messageType = STREAM_OPEN_MSG;
 18656     17EA  0140               	movlb	0	; select bank0
 18657     17EB  01C2               	clrf	RN487X_MessageHandler@messageType
 18658     17EC  0AC2               	incf	RN487X_MessageHandler@messageType,f
 18659                           
 18660                           ;mcc_generated_files/rn487x/rn487x_interface.c: 380:         connected = 1;
 18661     17ED  01E3               	clrf	_connected
 18662     17EE  0AE3               	incf	_connected,f
 18663                           
 18664                           ;mcc_generated_files/rn487x/rn487x_interface.c: 381:     }
 18665     17EF  2FF3               	goto	l13472
 18666     17F0                     l13470:
 18667                           
 18668                           ;mcc_generated_files/rn487x/rn487x_interface.c: 383:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 384:         messageType = GENERAL_MSG;
 18669     17F0  3002               	movlw	2
 18670     17F1  0140               	movlb	0	; select bank0
 18671     17F2  00C2               	movwf	RN487X_MessageHandler@messageType
 18672     17F3                     l13472:
 18673                           
 18674                           ;mcc_generated_files/rn487x/rn487x_interface.c: 386:     rn487x_PrintMessage(message);
 18675     17F3  087B               	movf	RN487X_MessageHandler@message,w
 18676     17F4  3197  2792  3197   	fcall	_rn487x_PrintMessage
 18677     17F7                     l13474:
 18678                           
 18679                           ;mcc_generated_files/rn487x/rn487x_interface.c: 387:     rn487x_PrintMessageEnd();
 18680     17F7  318C  2401  3197   	fcall	_rn487x_PrintMessageEnd
 18681     17FA                     l13476:
 18682                           
 18683                           ;mcc_generated_files/rn487x/rn487x_interface.c: 388:     rn487x_PrintIndicatorCharacters
      +                          (messageType);
 18684     17FA  0140               	movlb	0	; select bank0
 18685     17FB  0842               	movf	RN487X_MessageHandler@messageType,w
 18686     17FC  3194  244D  3197   	fcall	_rn487x_PrintIndicatorCharacters
 18687     17FF                     l1509:
 18688     17FF  0008               	return
 18689     1800                     __end_of_RN487X_MessageHandler:
 18690                           
 18691                           	psect	text47
 18692     0B66                     __ptext47:	
 18693 ;; *************** function _strstr *****************
 18694 ;; Defined at:
 18695 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strstr.c"
 18696 ;; Parameters:    Size  Location     Type
 18697 ;;  h               1    wreg     PTR const unsigned char 
 18698 ;;		 -> statusBuffer@main$F4234(80), statusBuffer(80), NULL(0), 
 18699 ;;  n               2    7[COMMON] PTR const unsigned char 
 18700 ;;		 -> STR_5(12), STR_3(11), 
 18701 ;; Auto vars:     Size  Location     Type
 18702 ;;  h               1    2[BANK0 ] PTR const unsigned char 
 18703 ;;		 -> statusBuffer@main$F4234(80), statusBuffer(80), NULL(0), 
 18704 ;;  nl              2    0[BANK0 ] unsigned int 
 18705 ;; Return value:  Size  Location     Type
 18706 ;;                  1    wreg      PTR unsigned char 
 18707 ;; Registers used:
 18708 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18709 ;; Tracked objects:
 18710 ;;		On entry : 0/0
 18711 ;;		On exit  : 0/0
 18712 ;;		Unchanged: 0/0
 18713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18714 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18715 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18716 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18717 ;;      Totals:         4       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18718 ;;Total ram usage:        7 bytes
 18719 ;; Hardware stack levels used: 1
 18720 ;; Hardware stack levels required when called: 5
 18721 ;; This function calls:
 18722 ;;		_strchr
 18723 ;;		_strlen
 18724 ;;		_strncmp
 18725 ;; This function is called by:
 18726 ;;		_RN487X_MessageHandler
 18727 ;; This function uses a non-reentrant model
 18728 ;;
 18729                           
 18730     0B66                     _strstr:	
 18731                           ;psect for function _strstr
 18732                           
 18733                           
 18734                           ;incstack = 0
 18735                           ; Regs used in _strstr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18736                           ;strstr@h stored from wreg
 18737     0B66  0140               	movlb	0	; select bank0
 18738     0B67  00A2               	movwf	strstr@h
 18739     0B68                     l13366:
 18740     0B68  0877               	movf	strstr@n,w
 18741     0B69  0478               	iorwf	strstr@n+1,w
 18742     0B6A  1903               	btfsc	3,2
 18743     0B6B  2B6D               	goto	u10061
 18744     0B6C  2B6E               	goto	u10060
 18745     0B6D                     u10061:
 18746     0B6D  2BB1               	goto	l13382
 18747     0B6E                     u10060:
 18748     0B6E                     l13368:
 18749     0B6E  0878               	movf	strstr@n+1,w
 18750     0B6F  00F2               	movwf	strlen@s+1
 18751     0B70  0877               	movf	strstr@n,w
 18752     0B71  00F1               	movwf	strlen@s
 18753     0B72  3192  22DB  318B   	fcall	_strlen
 18754     0B75  0872               	movf	?_strlen+1,w
 18755     0B76  0140               	movlb	0	; select bank0
 18756     0B77  00A1               	movwf	strstr@nl+1
 18757     0B78  0871               	movf	?_strlen,w
 18758     0B79  00A0               	movwf	strstr@nl
 18759     0B7A  2BA3               	goto	l13378
 18760     0B7B                     l13370:
 18761     0B7B  0878               	movf	strstr@n+1,w
 18762     0B7C  00F2               	movwf	strncmp@r+1
 18763     0B7D  0877               	movf	strstr@n,w
 18764     0B7E  00F1               	movwf	strncmp@r
 18765     0B7F  0821               	movf	strstr@nl+1,w
 18766     0B80  00F4               	movwf	strncmp@n+1
 18767     0B81  0820               	movf	strstr@nl,w
 18768     0B82  00F3               	movwf	strncmp@n
 18769     0B83  0822               	movf	strstr@h,w
 18770     0B84  318C  244F  318B   	fcall	_strncmp
 18771     0B87  0871               	movf	?_strncmp,w
 18772     0B88  0472               	iorwf	?_strncmp+1,w
 18773     0B89  1D03               	btfss	3,2
 18774     0B8A  2B8C               	goto	u10071
 18775     0B8B  2B8D               	goto	u10070
 18776     0B8C                     u10071:
 18777     0B8C  2B90               	goto	l13376
 18778     0B8D                     u10070:
 18779     0B8D                     l13372:
 18780     0B8D  0140               	movlb	0	; select bank0
 18781     0B8E  0822               	movf	strstr@h,w
 18782     0B8F  2BB2               	goto	l3352
 18783     0B90                     l13376:
 18784     0B90  0877               	movf	strstr@n,w
 18785     0B91  0084               	movwf	4
 18786     0B92  0878               	movf	strstr@n+1,w
 18787     0B93  0085               	movwf	5
 18788     0B94  0800               	movf	0,w	;code access
 18789     0B95  00F9               	movwf	??_strstr
 18790     0B96  01FA               	clrf	??_strstr+1
 18791     0B97  0879               	movf	??_strstr,w
 18792     0B98  00F1               	movwf	strchr@c
 18793     0B99  087A               	movf	??_strstr+1,w
 18794     0B9A  00F2               	movwf	strchr@c+1
 18795     0B9B  0140               	movlb	0	; select bank0
 18796     0B9C  0822               	movf	strstr@h,w
 18797     0B9D  3E01               	addlw	1
 18798     0B9E  3192  22F4  318B   	fcall	_strchr
 18799     0BA1  0140               	movlb	0	; select bank0
 18800     0BA2  00A2               	movwf	strstr@h
 18801     0BA3                     l13378:
 18802     0BA3  0822               	movf	strstr@h,w
 18803     0BA4  1903               	btfsc	3,2
 18804     0BA5  2BA7               	goto	u10081
 18805     0BA6  2BA8               	goto	u10080
 18806     0BA7                     u10081:
 18807     0BA7  2BB1               	goto	l13382
 18808     0BA8                     u10080:
 18809     0BA8                     l13380:
 18810     0BA8  0822               	movf	strstr@h,w
 18811     0BA9  0086               	movwf	6
 18812     0BAA  3003               	movlw	3	; select bank6/7
 18813     0BAB  0087               	movwf	7
 18814     0BAC  0801               	movf	1,w
 18815     0BAD  1D03               	btfss	3,2
 18816     0BAE  2BB0               	goto	u10091
 18817     0BAF  2BB1               	goto	u10090
 18818     0BB0                     u10091:
 18819     0BB0  2B7B               	goto	l13370
 18820     0BB1                     u10090:
 18821     0BB1                     l13382:
 18822     0BB1  3000               	movlw	0
 18823     0BB2                     l3352:
 18824     0BB2  0008               	return
 18825     0BB3                     __end_of_strstr:
 18826                           
 18827                           	psect	text48
 18828     0C4F                     __ptext48:	
 18829 ;; *************** function _strncmp *****************
 18830 ;; Defined at:
 18831 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strncmp.c"
 18832 ;; Parameters:    Size  Location     Type
 18833 ;;  l               1    wreg     PTR const unsigned char 
 18834 ;;		 -> statusBuffer@main$F4234(80), statusBuffer(80), NULL(0), 
 18835 ;;  r               2    1[COMMON] PTR const unsigned char 
 18836 ;;		 -> STR_5(12), STR_3(11), 
 18837 ;;  n               2    3[COMMON] unsigned int 
 18838 ;; Auto vars:     Size  Location     Type
 18839 ;;  l               1    6[COMMON] PTR const unsigned char 
 18840 ;;		 -> statusBuffer@main$F4234(80), statusBuffer(80), NULL(0), 
 18841 ;; Return value:  Size  Location     Type
 18842 ;;                  2    1[COMMON] int 
 18843 ;; Registers used:
 18844 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 18845 ;; Tracked objects:
 18846 ;;		On entry : 0/0
 18847 ;;		On exit  : 0/0
 18848 ;;		Unchanged: 0/0
 18849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18850 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18851 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18852 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18853 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18854 ;;Total ram usage:        6 bytes
 18855 ;; Hardware stack levels used: 1
 18856 ;; Hardware stack levels required when called: 4
 18857 ;; This function calls:
 18858 ;;		Nothing
 18859 ;; This function is called by:
 18860 ;;		_strstr
 18861 ;; This function uses a non-reentrant model
 18862 ;;
 18863                           
 18864     0C4F                     _strncmp:	
 18865                           ;psect for function _strncmp
 18866                           
 18867                           
 18868                           ;incstack = 0
 18869                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
 18870                           ;strncmp@l stored from wreg
 18871     0C4F  00F6               	movwf	strncmp@l
 18872     0C50                     l13220:
 18873     0C50  3001               	movlw	1
 18874     0C51  02F3               	subwf	strncmp@n,f
 18875     0C52  3000               	movlw	0
 18876     0C53  3BF4               	subwfb	strncmp@n+1,f
 18877     0C54  0A73               	incf	strncmp@n,w
 18878     0C55  1D03               	skipz
 18879     0C56  2C5B               	goto	u9921
 18880     0C57  0A74               	incf	strncmp@n+1,w
 18881     0C58  1D03               	btfss	3,2
 18882     0C59  2C5B               	goto	u9921
 18883     0C5A  2C5C               	goto	u9920
 18884     0C5B                     u9921:
 18885     0C5B  2C6B               	goto	l13232
 18886     0C5C                     u9920:
 18887     0C5C                     l13222:
 18888     0C5C  01F1               	clrf	?_strncmp
 18889     0C5D  01F2               	clrf	?_strncmp+1
 18890     0C5E  2CA1               	goto	l3365
 18891     0C5F                     l13226:
 18892     0C5F  3001               	movlw	1
 18893     0C60  00F5               	movwf	??_strncmp
 18894     0C61  0875               	movf	??_strncmp,w
 18895     0C62  07F6               	addwf	strncmp@l,f
 18896     0C63                     l13228:
 18897     0C63  3001               	movlw	1
 18898     0C64  07F1               	addwf	strncmp@r,f
 18899     0C65  3000               	movlw	0
 18900     0C66  3DF2               	addwfc	strncmp@r+1,f
 18901     0C67                     l13230:
 18902     0C67  3001               	movlw	1
 18903     0C68  02F3               	subwf	strncmp@n,f
 18904     0C69  3000               	movlw	0
 18905     0C6A  3BF4               	subwfb	strncmp@n+1,f
 18906     0C6B                     l13232:
 18907     0C6B  0876               	movf	strncmp@l,w
 18908     0C6C  0086               	movwf	6
 18909     0C6D  3003               	movlw	3	; select bank6/7
 18910     0C6E  0087               	movwf	7
 18911     0C6F  0801               	movf	1,w
 18912     0C70  1903               	btfsc	3,2
 18913     0C71  2C73               	goto	u9931
 18914     0C72  2C74               	goto	u9930
 18915     0C73                     u9931:
 18916     0C73  2C93               	goto	l13240
 18917     0C74                     u9930:
 18918     0C74                     l13234:
 18919     0C74  0871               	movf	strncmp@r,w
 18920     0C75  0084               	movwf	4
 18921     0C76  0872               	movf	strncmp@r+1,w
 18922     0C77  0085               	movwf	5
 18923     0C78  0012               	moviw fsr0++
 18924     0C79  1903               	btfsc	3,2
 18925     0C7A  2C7C               	goto	u9941
 18926     0C7B  2C7D               	goto	u9940
 18927     0C7C                     u9941:
 18928     0C7C  2C93               	goto	l13240
 18929     0C7D                     u9940:
 18930     0C7D                     l13236:
 18931     0C7D  0873               	movf	strncmp@n,w
 18932     0C7E  0474               	iorwf	strncmp@n+1,w
 18933     0C7F  1903               	btfsc	3,2
 18934     0C80  2C82               	goto	u9951
 18935     0C81  2C83               	goto	u9950
 18936     0C82                     u9951:
 18937     0C82  2C93               	goto	l13240
 18938     0C83                     u9950:
 18939     0C83                     l13238:
 18940     0C83  0871               	movf	strncmp@r,w
 18941     0C84  0084               	movwf	4
 18942     0C85  0872               	movf	strncmp@r+1,w
 18943     0C86  0085               	movwf	5
 18944     0C87  0800               	movf	0,w	;code access
 18945     0C88  00F5               	movwf	??_strncmp
 18946     0C89  0876               	movf	strncmp@l,w
 18947     0C8A  0086               	movwf	6
 18948     0C8B  3003               	movlw	3	; select bank6/7
 18949     0C8C  0087               	movwf	7
 18950     0C8D  0801               	movf	1,w
 18951     0C8E  0675               	xorwf	??_strncmp,w
 18952     0C8F  1903               	skipnz
 18953     0C90  2C92               	goto	u9961
 18954     0C91  2C93               	goto	u9960
 18955     0C92                     u9961:
 18956     0C92  2C5F               	goto	l13226
 18957     0C93                     u9960:
 18958     0C93                     l13240:
 18959     0C93  0876               	movf	strncmp@l,w
 18960     0C94  0086               	movwf	6
 18961     0C95  3003               	movlw	3	; select bank6/7
 18962     0C96  0087               	movwf	7
 18963     0C97  0871               	movf	strncmp@r,w
 18964     0C98  0084               	movwf	4
 18965     0C99  0872               	movf	strncmp@r+1,w
 18966     0C9A  0085               	movwf	5
 18967     0C9B  0800               	movf	0,w	;code access
 18968     0C9C  0201               	subwf	1,w
 18969     0C9D  00F1               	movwf	?_strncmp
 18970     0C9E  01F2               	clrf	?_strncmp+1
 18971     0C9F  1C03               	skipc
 18972     0CA0  03F2               	decf	?_strncmp+1,f
 18973     0CA1                     l3365:
 18974     0CA1  0008               	return
 18975     0CA2                     __end_of_strncmp:
 18976                           
 18977                           	psect	text49
 18978     12F4                     __ptext49:	
 18979 ;; *************** function _strchr *****************
 18980 ;; Defined at:
 18981 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strchr.c"
 18982 ;; Parameters:    Size  Location     Type
 18983 ;;  s               1    wreg     PTR const unsigned char 
 18984 ;;		 -> statusBuffer@main$F4234(80), statusBuffer(80), NULL(0), 
 18985 ;;  c               2    1[COMMON] int 
 18986 ;; Auto vars:     Size  Location     Type
 18987 ;;  s               1    3[COMMON] PTR const unsigned char 
 18988 ;;		 -> statusBuffer@main$F4234(80), statusBuffer(80), NULL(0), 
 18989 ;; Return value:  Size  Location     Type
 18990 ;;                  1    wreg      PTR unsigned char 
 18991 ;; Registers used:
 18992 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18993 ;; Tracked objects:
 18994 ;;		On entry : 0/0
 18995 ;;		On exit  : 0/0
 18996 ;;		Unchanged: 0/0
 18997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18998 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18999 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19001 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19002 ;;Total ram usage:        3 bytes
 19003 ;; Hardware stack levels used: 1
 19004 ;; Hardware stack levels required when called: 4
 19005 ;; This function calls:
 19006 ;;		Nothing
 19007 ;; This function is called by:
 19008 ;;		_strstr
 19009 ;; This function uses a non-reentrant model
 19010 ;;
 19011                           
 19012     12F4                     _strchr:	
 19013                           ;psect for function _strchr
 19014                           
 19015                           
 19016                           ;incstack = 0
 19017                           ; Regs used in _strchr: [wreg+fsr1l+fsr1h+status,2+status,0]
 19018                           ;strchr@s stored from wreg
 19019     12F4  00F3               	movwf	strchr@s
 19020     12F5                     l3358:
 19021     12F5                     l13244:
 19022     12F5  0873               	movf	strchr@s,w
 19023     12F6  0086               	movwf	6
 19024     12F7  3003               	movlw	3	; select bank6/7
 19025     12F8  0087               	movwf	7
 19026     12F9  0801               	movf	1,w
 19027     12FA  0671               	xorwf	strchr@c,w
 19028     12FB  1D03               	skipz
 19029     12FC  2AFE               	goto	u9971
 19030     12FD  2AFF               	goto	u9970
 19031     12FE                     u9971:
 19032     12FE  2B01               	goto	l13250
 19033     12FF                     u9970:
 19034     12FF                     l13246:
 19035     12FF  0873               	movf	strchr@s,w
 19036     1300  2B0C               	goto	l3360
 19037     1301                     l13250:
 19038     1301  0873               	movf	strchr@s,w
 19039     1302  0086               	movwf	6
 19040     1303  3003               	movlw	3	; select bank6/7
 19041     1304  0087               	movwf	7
 19042     1305  0AF3               	incf	strchr@s,f
 19043     1306  0801               	movf	1,w
 19044     1307  1D03               	btfss	3,2
 19045     1308  2B0A               	goto	u9981
 19046     1309  2B0B               	goto	u9980
 19047     130A                     u9981:
 19048     130A  2AF5               	goto	l3358
 19049     130B                     u9980:
 19050     130B                     l13252:
 19051     130B  3000               	movlw	0
 19052     130C                     l3360:
 19053     130C  0008               	return
 19054     130D                     __end_of_strchr:
 19055                           
 19056                           	psect	text50
 19057     15DF                     __ptext50:	
 19058 ;; *************** function _rn487x_PrintMessageStart *****************
 19059 ;; Defined at:
 19060 ;;		line 323 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19061 ;; Parameters:    Size  Location     Type
 19062 ;;		None
 19063 ;; Auto vars:     Size  Location     Type
 19064 ;;		None
 19065 ;; Return value:  Size  Location     Type
 19066 ;;                  1    wreg      void 
 19067 ;; Registers used:
 19068 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19069 ;; Tracked objects:
 19070 ;;		On entry : 0/0
 19071 ;;		On exit  : 0/0
 19072 ;;		Unchanged: 0/0
 19073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19078 ;;Total ram usage:        0 bytes
 19079 ;; Hardware stack levels used: 1
 19080 ;; Hardware stack levels required when called: 5
 19081 ;; This function calls:
 19082 ;;		_EUSART1_Write
 19083 ;;		_EUSART2_Write
 19084 ;; This function is called by:
 19085 ;;		_RN487X_MessageHandler
 19086 ;; This function uses a non-reentrant model
 19087 ;;
 19088                           
 19089     15DF                     _rn487x_PrintMessageStart:	
 19090                           ;psect for function _rn487x_PrintMessageStart
 19091                           
 19092     15DF                     l13344:	
 19093                           ;incstack = 0
 19094                           ; Regs used in _rn487x_PrintMessageStart: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19095                           
 19096                           
 19097                           ;mcc_generated_files/rn487x/rn487x_interface.c: 325:     uart[UART_CDC].Write('<');
 19098     15DF  303C               	movlw	60
 19099     15E0  00F1               	movwf	EUSART2_Write@txData
 19100     15E1  3002               	movlw	low ((_uart+2)| (0+32768))
 19101     15E2  0084               	movwf	4
 19102     15E3  3098               	movlw	high ((_uart+2)| (0+32768))
 19103     15E4  0085               	movwf	5
 19104     15E5  3F01               	moviw [1]fsr0
 19105     15E6  008A               	movwf	10
 19106     15E7  3F00               	moviw [0]fsr0
 19107     15E8  000A               	callw
 19108     15E9  3195               	pagesel	$
 19109                           
 19110                           ;mcc_generated_files/rn487x/rn487x_interface.c: 326:     uart[UART_CDC].Write('<');
 19111     15EA  303C               	movlw	60
 19112     15EB  00F1               	movwf	EUSART2_Write@txData
 19113     15EC  3002               	movlw	low ((_uart+2)| (0+32768))
 19114     15ED  0084               	movwf	4
 19115     15EE  3098               	movlw	high ((_uart+2)| (0+32768))
 19116     15EF  0085               	movwf	5
 19117     15F0  3F01               	moviw [1]fsr0
 19118     15F1  008A               	movwf	10
 19119     15F2  3F00               	moviw [0]fsr0
 19120     15F3  000A               	callw
 19121     15F4  3195               	pagesel	$
 19122                           
 19123                           ;mcc_generated_files/rn487x/rn487x_interface.c: 327:     uart[UART_CDC].Write('<');
 19124     15F5  303C               	movlw	60
 19125     15F6  00F1               	movwf	EUSART2_Write@txData
 19126     15F7  3002               	movlw	low ((_uart+2)| (0+32768))
 19127     15F8  0084               	movwf	4
 19128     15F9  3098               	movlw	high ((_uart+2)| (0+32768))
 19129     15FA  0085               	movwf	5
 19130     15FB  3F01               	moviw [1]fsr0
 19131     15FC  008A               	movwf	10
 19132     15FD  3F00               	moviw [0]fsr0
 19133     15FE  000A               	callw
 19134     15FF  3195               	pagesel	$
 19135                           
 19136                           ;mcc_generated_files/rn487x/rn487x_interface.c: 328:     uart[UART_CDC].Write(' ');
 19137     1600  3020               	movlw	32
 19138     1601  00F1               	movwf	EUSART2_Write@txData
 19139     1602  3002               	movlw	low ((_uart+2)| (0+32768))
 19140     1603  0084               	movwf	4
 19141     1604  3098               	movlw	high ((_uart+2)| (0+32768))
 19142     1605  0085               	movwf	5
 19143     1606  3F01               	moviw [1]fsr0
 19144     1607  008A               	movwf	10
 19145     1608  3F00               	moviw [0]fsr0
 19146     1609  000A               	callw
 19147     160A  3195               	pagesel	$
 19148     160B                     l1486:
 19149     160B  0008               	return
 19150     160C                     __end_of_rn487x_PrintMessageStart:
 19151                           
 19152                           	psect	text51
 19153     0C01                     __ptext51:	
 19154 ;; *************** function _rn487x_PrintMessageEnd *****************
 19155 ;; Defined at:
 19156 ;;		line 331 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19157 ;; Parameters:    Size  Location     Type
 19158 ;;		None
 19159 ;; Auto vars:     Size  Location     Type
 19160 ;;		None
 19161 ;; Return value:  Size  Location     Type
 19162 ;;                  1    wreg      void 
 19163 ;; Registers used:
 19164 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19165 ;; Tracked objects:
 19166 ;;		On entry : 0/0
 19167 ;;		On exit  : 0/0
 19168 ;;		Unchanged: 0/0
 19169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19174 ;;Total ram usage:        0 bytes
 19175 ;; Hardware stack levels used: 1
 19176 ;; Hardware stack levels required when called: 5
 19177 ;; This function calls:
 19178 ;;		_EUSART1_Write
 19179 ;;		_EUSART2_Write
 19180 ;; This function is called by:
 19181 ;;		_RN487X_MessageHandler
 19182 ;; This function uses a non-reentrant model
 19183 ;;
 19184                           
 19185     0C01                     _rn487x_PrintMessageEnd:	
 19186                           ;psect for function _rn487x_PrintMessageEnd
 19187                           
 19188     0C01                     l13346:	
 19189                           ;incstack = 0
 19190                           ; Regs used in _rn487x_PrintMessageEnd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19191                           
 19192                           
 19193                           ;mcc_generated_files/rn487x/rn487x_interface.c: 333:     uart[UART_CDC].Write(' ');
 19194     0C01  3020               	movlw	32
 19195     0C02  00F1               	movwf	EUSART2_Write@txData
 19196     0C03  3002               	movlw	low ((_uart+2)| (0+32768))
 19197     0C04  0084               	movwf	4
 19198     0C05  3098               	movlw	high ((_uart+2)| (0+32768))
 19199     0C06  0085               	movwf	5
 19200     0C07  3F01               	moviw [1]fsr0
 19201     0C08  008A               	movwf	10
 19202     0C09  3F00               	moviw [0]fsr0
 19203     0C0A  000A               	callw
 19204     0C0B  318C               	pagesel	$
 19205                           
 19206                           ;mcc_generated_files/rn487x/rn487x_interface.c: 334:     uart[UART_CDC].Write('>');
 19207     0C0C  303E               	movlw	62
 19208     0C0D  00F1               	movwf	EUSART2_Write@txData
 19209     0C0E  3002               	movlw	low ((_uart+2)| (0+32768))
 19210     0C0F  0084               	movwf	4
 19211     0C10  3098               	movlw	high ((_uart+2)| (0+32768))
 19212     0C11  0085               	movwf	5
 19213     0C12  3F01               	moviw [1]fsr0
 19214     0C13  008A               	movwf	10
 19215     0C14  3F00               	moviw [0]fsr0
 19216     0C15  000A               	callw
 19217     0C16  318C               	pagesel	$
 19218                           
 19219                           ;mcc_generated_files/rn487x/rn487x_interface.c: 335:     uart[UART_CDC].Write('>');
 19220     0C17  303E               	movlw	62
 19221     0C18  00F1               	movwf	EUSART2_Write@txData
 19222     0C19  3002               	movlw	low ((_uart+2)| (0+32768))
 19223     0C1A  0084               	movwf	4
 19224     0C1B  3098               	movlw	high ((_uart+2)| (0+32768))
 19225     0C1C  0085               	movwf	5
 19226     0C1D  3F01               	moviw [1]fsr0
 19227     0C1E  008A               	movwf	10
 19228     0C1F  3F00               	moviw [0]fsr0
 19229     0C20  000A               	callw
 19230     0C21  318C               	pagesel	$
 19231                           
 19232                           ;mcc_generated_files/rn487x/rn487x_interface.c: 336:     uart[UART_CDC].Write('>');
 19233     0C22  303E               	movlw	62
 19234     0C23  00F1               	movwf	EUSART2_Write@txData
 19235     0C24  3002               	movlw	low ((_uart+2)| (0+32768))
 19236     0C25  0084               	movwf	4
 19237     0C26  3098               	movlw	high ((_uart+2)| (0+32768))
 19238     0C27  0085               	movwf	5
 19239     0C28  3F01               	moviw [1]fsr0
 19240     0C29  008A               	movwf	10
 19241     0C2A  3F00               	moviw [0]fsr0
 19242     0C2B  000A               	callw
 19243     0C2C  318C               	pagesel	$
 19244                           
 19245                           ;mcc_generated_files/rn487x/rn487x_interface.c: 337:     uart[UART_CDC].Write(' ');
 19246     0C2D  3020               	movlw	32
 19247     0C2E  00F1               	movwf	EUSART2_Write@txData
 19248     0C2F  3002               	movlw	low ((_uart+2)| (0+32768))
 19249     0C30  0084               	movwf	4
 19250     0C31  3098               	movlw	high ((_uart+2)| (0+32768))
 19251     0C32  0085               	movwf	5
 19252     0C33  3F01               	moviw [1]fsr0
 19253     0C34  008A               	movwf	10
 19254     0C35  3F00               	moviw [0]fsr0
 19255     0C36  000A               	callw
 19256     0C37  318C               	pagesel	$
 19257                           
 19258                           ;mcc_generated_files/rn487x/rn487x_interface.c: 338:     uart[UART_CDC].Write('\r');
 19259     0C38  300D               	movlw	13
 19260     0C39  00F1               	movwf	EUSART2_Write@txData
 19261     0C3A  3002               	movlw	low ((_uart+2)| (0+32768))
 19262     0C3B  0084               	movwf	4
 19263     0C3C  3098               	movlw	high ((_uart+2)| (0+32768))
 19264     0C3D  0085               	movwf	5
 19265     0C3E  3F01               	moviw [1]fsr0
 19266     0C3F  008A               	movwf	10
 19267     0C40  3F00               	moviw [0]fsr0
 19268     0C41  000A               	callw
 19269     0C42  318C               	pagesel	$
 19270                           
 19271                           ;mcc_generated_files/rn487x/rn487x_interface.c: 339:     uart[UART_CDC].Write('\n');
 19272     0C43  300A               	movlw	10
 19273     0C44  00F1               	movwf	EUSART2_Write@txData
 19274     0C45  3002               	movlw	low ((_uart+2)| (0+32768))
 19275     0C46  0084               	movwf	4
 19276     0C47  3098               	movlw	high ((_uart+2)| (0+32768))
 19277     0C48  0085               	movwf	5
 19278     0C49  3F01               	moviw [1]fsr0
 19279     0C4A  008A               	movwf	10
 19280     0C4B  3F00               	moviw [0]fsr0
 19281     0C4C  000A               	callw
 19282     0C4D  318C               	pagesel	$
 19283     0C4E                     l1489:
 19284     0C4E  0008               	return
 19285     0C4F                     __end_of_rn487x_PrintMessageEnd:
 19286                           
 19287                           	psect	text52
 19288     1792                     __ptext52:	
 19289 ;; *************** function _rn487x_PrintMessage *****************
 19290 ;; Defined at:
 19291 ;;		line 358 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19292 ;; Parameters:    Size  Location     Type
 19293 ;;  passedMessag    1    wreg     PTR unsigned char 
 19294 ;;		 -> statusBuffer@main$F4234(80), statusBuffer(80), NULL(0), 
 19295 ;; Auto vars:     Size  Location     Type
 19296 ;;  passedMessag    1   32[BANK0 ] PTR unsigned char 
 19297 ;;		 -> statusBuffer@main$F4234(80), statusBuffer(80), NULL(0), 
 19298 ;;  messageIndex    1   33[BANK0 ] unsigned char 
 19299 ;;  printCharact   32    0[BANK0 ] unsigned char [32]
 19300 ;; Return value:  Size  Location     Type
 19301 ;;                  1    wreg      void 
 19302 ;; Registers used:
 19303 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19304 ;; Tracked objects:
 19305 ;;		On entry : 0/0
 19306 ;;		On exit  : 0/0
 19307 ;;		Unchanged: 0/0
 19308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19310 ;;      Locals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19311 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19312 ;;      Totals:         2      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19313 ;;Total ram usage:       36 bytes
 19314 ;; Hardware stack levels used: 1
 19315 ;; Hardware stack levels required when called: 5
 19316 ;; This function calls:
 19317 ;;		_EUSART1_Write
 19318 ;;		_EUSART2_Write
 19319 ;;		_strcpy
 19320 ;;		_strlen
 19321 ;; This function is called by:
 19322 ;;		_RN487X_MessageHandler
 19323 ;; This function uses a non-reentrant model
 19324 ;;
 19325                           
 19326     1792                     _rn487x_PrintMessage:	
 19327                           ;psect for function _rn487x_PrintMessage
 19328                           
 19329                           
 19330                           ;incstack = 0
 19331                           ; Regs used in _rn487x_PrintMessage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19332                           ;rn487x_PrintMessage@passedMessage stored from wreg
 19333     1792  0140               	movlb	0	; select bank0
 19334     1793  00C0               	movwf	rn487x_PrintMessage@passedMessage
 19335     1794                     l13356:
 19336                           
 19337                           ;mcc_generated_files/rn487x/rn487x_interface.c: 358: static __attribute__((inline)) void
      +                           rn487x_PrintMessage(char* passedMessage);mcc_generated_files/rn487x/rn487x_interface.c:
      +                           359: {;mcc_generated_files/rn487x/rn487x_interface.c: 360:     char printCharacter [(32
      +                          )];;mcc_generated_files/rn487x/rn487x_interface.c: 361:     strcpy(printCharacter, passe
      +                          dMessage);
 19338     1794  0840               	movf	rn487x_PrintMessage@passedMessage,w
 19339     1795  00F1               	movwf	strcpy@src
 19340     1796  3020               	movlw	(low (rn487x_PrintMessage@printCharacter| 0))& (0+255)
 19341     1797  3191  218F  3197   	fcall	_strcpy
 19342     179A                     l13358:
 19343                           
 19344                           ;mcc_generated_files/rn487x/rn487x_interface.c: 362:     for (uint8_t messageIndex = 0; 
      +                          messageIndex < strlen(passedMessage); messageIndex++)
 19345     179A  0140               	movlb	0	; select bank0
 19346     179B  01C1               	clrf	rn487x_PrintMessage@messageIndex
 19347     179C  2FB1               	goto	l13364
 19348     179D                     l13360:
 19349                           
 19350                           ;mcc_generated_files/rn487x/rn487x_interface.c: 363:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 364:         uart[UART_CDC].Write(printCharacter[messageIndex]);
 19351     179D  0841               	movf	rn487x_PrintMessage@messageIndex,w
 19352     179E  3E20               	addlw	(low (rn487x_PrintMessage@printCharacter| 0))& (0+255)
 19353     179F  0086               	movwf	6
 19354     17A0  0187               	clrf	7
 19355     17A1  0801               	movf	1,w
 19356     17A2  00F1               	movwf	EUSART2_Write@txData
 19357     17A3  3002               	movlw	low ((_uart+2)| (0+32768))
 19358     17A4  0084               	movwf	4
 19359     17A5  3098               	movlw	high ((_uart+2)| (0+32768))
 19360     17A6  0085               	movwf	5
 19361     17A7  3F01               	moviw [1]fsr0
 19362     17A8  008A               	movwf	10
 19363     17A9  3F00               	moviw [0]fsr0
 19364     17AA  000A               	callw
 19365     17AB  3197               	pagesel	$
 19366     17AC                     l13362:
 19367                           
 19368                           ;mcc_generated_files/rn487x/rn487x_interface.c: 365:     }
 19369     17AC  3001               	movlw	1
 19370     17AD  00F6               	movwf	??_rn487x_PrintMessage
 19371     17AE  0876               	movf	??_rn487x_PrintMessage,w
 19372     17AF  0140               	movlb	0	; select bank0
 19373     17B0  07C1               	addwf	rn487x_PrintMessage@messageIndex,f
 19374     17B1                     l13364:
 19375     17B1  0840               	movf	rn487x_PrintMessage@passedMessage,w
 19376     17B2  00F1               	movwf	strlen@s
 19377     17B3  39FF               	andlw	255
 19378     17B4  1D03               	skipz
 19379     17B5  3003               	movlw	3
 19380     17B6  00F2               	movwf	strlen@s+1
 19381     17B7  3192  22DB  3197   	fcall	_strlen
 19382     17BA  0140               	movlb	0	; select bank0
 19383     17BB  0841               	movf	rn487x_PrintMessage@messageIndex,w
 19384     17BC  00F6               	movwf	??_rn487x_PrintMessage
 19385     17BD  01F7               	clrf	??_rn487x_PrintMessage+1
 19386     17BE  0872               	movf	?_strlen+1,w
 19387     17BF  0277               	subwf	??_rn487x_PrintMessage+1,w
 19388     17C0  1D03               	skipz
 19389     17C1  2FC4               	goto	u10055
 19390     17C2  0871               	movf	?_strlen,w
 19391     17C3  0276               	subwf	??_rn487x_PrintMessage,w
 19392     17C4                     u10055:
 19393     17C4  1C03               	skipc
 19394     17C5  2FC7               	goto	u10051
 19395     17C6  2FC8               	goto	u10050
 19396     17C7                     u10051:
 19397     17C7  2F9D               	goto	l13360
 19398     17C8                     u10050:
 19399     17C8                     l1502:
 19400     17C8  0008               	return
 19401     17C9                     __end_of_rn487x_PrintMessage:
 19402                           
 19403                           	psect	text53
 19404     118F                     __ptext53:	
 19405 ;; *************** function _strcpy *****************
 19406 ;; Defined at:
 19407 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strcpy.c"
 19408 ;; Parameters:    Size  Location     Type
 19409 ;;  dest            1    wreg     PTR unsigned char 
 19410 ;;		 -> rn487x_PrintMessage@printCharacter(32), 
 19411 ;;  src             1    1[COMMON] PTR const unsigned char 
 19412 ;;		 -> statusBuffer@main$F4234(80), statusBuffer(80), NULL(0), 
 19413 ;; Auto vars:     Size  Location     Type
 19414 ;;  dest            1    3[COMMON] PTR unsigned char 
 19415 ;;		 -> rn487x_PrintMessage@printCharacter(32), 
 19416 ;;  d               1    2[COMMON] PTR unsigned char 
 19417 ;;		 -> rn487x_PrintMessage@printCharacter(32), 
 19418 ;; Return value:  Size  Location     Type
 19419 ;;                  1    wreg      PTR unsigned char 
 19420 ;; Registers used:
 19421 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 19422 ;; Tracked objects:
 19423 ;;		On entry : 0/0
 19424 ;;		On exit  : 0/0
 19425 ;;		Unchanged: 0/0
 19426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19427 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19428 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19430 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19431 ;;Total ram usage:        3 bytes
 19432 ;; Hardware stack levels used: 1
 19433 ;; Hardware stack levels required when called: 4
 19434 ;; This function calls:
 19435 ;;		Nothing
 19436 ;; This function is called by:
 19437 ;;		_rn487x_PrintMessage
 19438 ;; This function uses a non-reentrant model
 19439 ;;
 19440                           
 19441     118F                     _strcpy:	
 19442                           ;psect for function _strcpy
 19443                           
 19444                           
 19445                           ;incstack = 0
 19446                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0]
 19447                           ;strcpy@dest stored from wreg
 19448     118F  00F3               	movwf	strcpy@dest
 19449     1190                     l13154:
 19450     1190  0873               	movf	strcpy@dest,w
 19451     1191  00F2               	movwf	strcpy@d
 19452     1192                     l13156:
 19453     1192  0872               	movf	strcpy@d,w
 19454     1193  0086               	movwf	6
 19455     1194  0187               	clrf	7
 19456     1195  0AF2               	incf	strcpy@d,f
 19457     1196  0871               	movf	strcpy@src,w
 19458     1197  0084               	movwf	4
 19459     1198  3003               	movlw	3	; select bank6/7
 19460     1199  0085               	movwf	5
 19461     119A  0AF1               	incf	strcpy@src,f
 19462     119B  0800               	movf	0,w
 19463     119C  3FC0               	movwi [0]fsr1
 19464     119D  0889               	movf	9,f
 19465     119E  1D03               	btfss	3,2
 19466     119F  29A1               	goto	u9831
 19467     11A0  29A2               	goto	u9830
 19468     11A1                     u9831:
 19469     11A1  2992               	goto	l13156
 19470     11A2                     u9830:
 19471     11A2                     l3333:
 19472     11A2  0008               	return
 19473     11A3                     __end_of_strcpy:
 19474                           
 19475                           	psect	text54
 19476     144D                     __ptext54:	
 19477 ;; *************** function _rn487x_PrintIndicatorCharacters *****************
 19478 ;; Defined at:
 19479 ;;		line 342 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19480 ;; Parameters:    Size  Location     Type
 19481 ;;  messageType     1    wreg     enum E12962
 19482 ;; Auto vars:     Size  Location     Type
 19483 ;;  messageType     1    3[COMMON] enum E12962
 19484 ;; Return value:  Size  Location     Type
 19485 ;;                  1    wreg      void 
 19486 ;; Registers used:
 19487 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19488 ;; Tracked objects:
 19489 ;;		On entry : 0/0
 19490 ;;		On exit  : 0/0
 19491 ;;		Unchanged: 0/0
 19492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19494 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19496 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19497 ;;Total ram usage:        1 bytes
 19498 ;; Hardware stack levels used: 1
 19499 ;; Hardware stack levels required when called: 5
 19500 ;; This function calls:
 19501 ;;		_EUSART1_Write
 19502 ;;		_EUSART2_Write
 19503 ;; This function is called by:
 19504 ;;		_RN487X_MessageHandler
 19505 ;; This function uses a non-reentrant model
 19506 ;;
 19507                           
 19508     144D                     _rn487x_PrintIndicatorCharacters:	
 19509                           ;psect for function _rn487x_PrintIndicatorCharacters
 19510                           
 19511                           
 19512                           ;incstack = 0
 19513                           ; Regs used in _rn487x_PrintIndicatorCharacters: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 19514                           ;rn487x_PrintIndicatorCharacters@messageType stored from wreg
 19515     144D  00F3               	movwf	rn487x_PrintIndicatorCharacters@messageType
 19516     144E                     l13348:
 19517                           
 19518                           ;mcc_generated_files/rn487x/rn487x_interface.c: 342: static __attribute__((inline)) void
      +                           rn487x_PrintIndicatorCharacters(RN487X_MESSAGE_TYPE messageType);mcc_generated_files/rn
      +                          487x/rn487x_interface.c: 343: {;mcc_generated_files/rn487x/rn487x_interface.c: 344:     
      +                          if (DISCONNECT_MSG == messageType)
 19519     144E  0873               	movf	rn487x_PrintIndicatorCharacters@messageType,w
 19520     144F  1D03               	btfss	3,2
 19521     1450  2C52               	goto	u10031
 19522     1451  2C53               	goto	u10030
 19523     1452                     u10031:
 19524     1452  2C5F               	goto	l13352
 19525     1453                     u10030:
 19526     1453                     l13350:
 19527                           
 19528                           ;mcc_generated_files/rn487x/rn487x_interface.c: 345:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 346:         uart[UART_CDC].Write('[');
 19529     1453  305B               	movlw	91
 19530     1454  00F1               	movwf	EUSART2_Write@txData
 19531     1455  3002               	movlw	low ((_uart+2)| (0+32768))
 19532     1456  0084               	movwf	4
 19533     1457  3098               	movlw	high ((_uart+2)| (0+32768))
 19534     1458  0085               	movwf	5
 19535     1459  3F01               	moviw [1]fsr0
 19536     145A  008A               	movwf	10
 19537     145B  3F00               	moviw [0]fsr0
 19538     145C  000A               	callw
 19539     145D  3194               	pagesel	$
 19540                           
 19541                           ;mcc_generated_files/rn487x/rn487x_interface.c: 347:     }
 19542     145E  2C6F               	goto	l1496
 19543     145F                     l13352:
 19544     145F  0373               	decf	rn487x_PrintIndicatorCharacters@messageType,w
 19545     1460  1D03               	btfss	3,2
 19546     1461  2C63               	goto	u10041
 19547     1462  2C64               	goto	u10040
 19548     1463                     u10041:
 19549     1463  2C6F               	goto	l1496
 19550     1464                     u10040:
 19551     1464                     l13354:
 19552                           
 19553                           ;mcc_generated_files/rn487x/rn487x_interface.c: 349:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 350:         uart[UART_CDC].Write(']');
 19554     1464  305D               	movlw	93
 19555     1465  00F1               	movwf	EUSART2_Write@txData
 19556     1466  3002               	movlw	low ((_uart+2)| (0+32768))
 19557     1467  0084               	movwf	4
 19558     1468  3098               	movlw	high ((_uart+2)| (0+32768))
 19559     1469  0085               	movwf	5
 19560     146A  3F01               	moviw [1]fsr0
 19561     146B  008A               	movwf	10
 19562     146C  3F00               	moviw [0]fsr0
 19563     146D  000A               	callw
 19564     146E  3194               	pagesel	$
 19565     146F                     l1496:	
 19566                           ;mcc_generated_files/rn487x/rn487x_interface.c: 351:     }
 19567                           
 19568     146F  0008               	return
 19569     1470                     __end_of_rn487x_PrintIndicatorCharacters:
 19570                           
 19571                           	psect	text55
 19572     1E8C                     __ptext55:	
 19573 ;; *************** function _RN487X_IsConnected *****************
 19574 ;; Defined at:
 19575 ;;		line 243 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19576 ;; Parameters:    Size  Location     Type
 19577 ;;		None
 19578 ;; Auto vars:     Size  Location     Type
 19579 ;;		None
 19580 ;; Return value:  Size  Location     Type
 19581 ;;                  1    wreg      _Bool 
 19582 ;; Registers used:
 19583 ;;		wreg
 19584 ;; Tracked objects:
 19585 ;;		On entry : 0/0
 19586 ;;		On exit  : 0/0
 19587 ;;		Unchanged: 0/0
 19588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19593 ;;Total ram usage:        0 bytes
 19594 ;; Hardware stack levels used: 1
 19595 ;; Hardware stack levels required when called: 4
 19596 ;; This function calls:
 19597 ;;		Nothing
 19598 ;; This function is called by:
 19599 ;;		_main
 19600 ;;		_RN487X_Example_TransparentUart
 19601 ;; This function uses a non-reentrant model
 19602 ;;
 19603                           
 19604     1E8C                     _RN487X_IsConnected:	
 19605                           ;psect for function _RN487X_IsConnected
 19606                           
 19607     1E8C                     l14622:	
 19608                           ;incstack = 0
 19609                           ; Regs used in _RN487X_IsConnected: [wreg]
 19610                           
 19611                           
 19612                           ;mcc_generated_files/rn487x/rn487x_interface.c: 245:     return connected;
 19613     1E8C  0140               	movlb	0	; select bank0
 19614     1E8D  0863               	movf	_connected,w
 19615     1E8E                     l1437:
 19616     1E8E  0008               	return
 19617     1E8F                     __end_of_RN487X_IsConnected:
 19618                           
 19619                           	psect	text56
 19620     0DF3                     __ptext56:	
 19621 ;; *************** function _RN487X_Init *****************
 19622 ;; Defined at:
 19623 ;;		line 54 in file "mcc_generated_files/rn487x/rn487x.c"
 19624 ;; Parameters:    Size  Location     Type
 19625 ;;		None
 19626 ;; Auto vars:     Size  Location     Type
 19627 ;;		None
 19628 ;; Return value:  Size  Location     Type
 19629 ;;                  1    wreg      _Bool 
 19630 ;; Registers used:
 19631 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19632 ;; Tracked objects:
 19633 ;;		On entry : 0/0
 19634 ;;		On exit  : 0/0
 19635 ;;		Unchanged: 0/0
 19636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19641 ;;Total ram usage:        0 bytes
 19642 ;; Hardware stack levels used: 1
 19643 ;; Hardware stack levels required when called: 6
 19644 ;; This function calls:
 19645 ;;		_RN487X_Delay
 19646 ;;		_RN487X_IndicateRx
 19647 ;;		_RN487X_Read@rn487x_interface$F1835
 19648 ;;		_RN487X_Reset
 19649 ;;		_RN487X_SetSystemMode
 19650 ;;		_RN487X_is_rx_ready
 19651 ;; This function is called by:
 19652 ;;		_main
 19653 ;; This function uses a non-reentrant model
 19654 ;;
 19655                           
 19656     0DF3                     _RN487X_Init:	
 19657                           ;psect for function _RN487X_Init
 19658                           
 19659     0DF3                     l14636:	
 19660                           ;incstack = 0
 19661                           ; Regs used in _RN487X_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19662                           
 19663                           
 19664                           ;mcc_generated_files/rn487x/rn487x.c: 57:     RN487X.SetSystemMode(APPLICATION_MODE);
 19665     0DF3  01F1               	clrf	RN487X_SetSystemMode@mode
 19666     0DF4  0AF1               	incf	RN487X_SetSystemMode@mode,f
 19667     0DF5  3074               	movlw	low ((_RN487X+12)| (0+32768))
 19668     0DF6  0084               	movwf	4
 19669     0DF7  3098               	movlw	high ((_RN487X+12)| (0+32768))
 19670     0DF8  0085               	movwf	5
 19671     0DF9  3F01               	moviw [1]fsr0
 19672     0DFA  008A               	movwf	10
 19673     0DFB  3F00               	moviw [0]fsr0
 19674     0DFC  000A               	callw
 19675     0DFD  318D               	pagesel	$
 19676                           
 19677                           ;mcc_generated_files/rn487x/rn487x.c: 59:     RN487X.ResetModule(1);
 19678     0DFE  01F1               	clrf	RN487X_Reset@value
 19679     0DFF  0AF1               	incf	RN487X_Reset@value,f
 19680     0E00  3072               	movlw	low ((_RN487X+10)| (0+32768))
 19681     0E01  0084               	movwf	4
 19682     0E02  3098               	movlw	high ((_RN487X+10)| (0+32768))
 19683     0E03  0085               	movwf	5
 19684     0E04  3F01               	moviw [1]fsr0
 19685     0E05  008A               	movwf	10
 19686     0E06  3F00               	moviw [0]fsr0
 19687     0E07  000A               	callw
 19688     0E08  318D               	pagesel	$
 19689                           
 19690                           ;mcc_generated_files/rn487x/rn487x.c: 61:     RN487X.DelayMs((1));
 19691     0E09  3001               	movlw	1
 19692     0E0A  00F4               	movwf	RN487X_Delay@delayCount
 19693     0E0B  3000               	movlw	0
 19694     0E0C  00F5               	movwf	RN487X_Delay@delayCount+1
 19695     0E0D  3076               	movlw	low ((_RN487X+14)| (0+32768))
 19696     0E0E  0084               	movwf	4
 19697     0E0F  3098               	movlw	high ((_RN487X+14)| (0+32768))
 19698     0E10  0085               	movwf	5
 19699     0E11  3F01               	moviw [1]fsr0
 19700     0E12  008A               	movwf	10
 19701     0E13  3F00               	moviw [0]fsr0
 19702     0E14  000A               	callw
 19703     0E15  318D               	pagesel	$
 19704                           
 19705                           ;mcc_generated_files/rn487x/rn487x.c: 63:     RN487X.ResetModule(0);
 19706     0E16  01F1               	clrf	RN487X_Reset@value
 19707     0E17  3072               	movlw	low ((_RN487X+10)| (0+32768))
 19708     0E18  0084               	movwf	4
 19709     0E19  3098               	movlw	high ((_RN487X+10)| (0+32768))
 19710     0E1A  0085               	movwf	5
 19711     0E1B  3F01               	moviw [1]fsr0
 19712     0E1C  008A               	movwf	10
 19713     0E1D  3F00               	moviw [0]fsr0
 19714     0E1E  000A               	callw
 19715     0E1F  318D               	pagesel	$
 19716                           
 19717                           ;mcc_generated_files/rn487x/rn487x.c: 66:     RN487X.IndicateRx(1);
 19718     0E20  01F1               	clrf	RN487X_IndicateRx@value
 19719     0E21  0AF1               	incf	RN487X_IndicateRx@value,f
 19720     0E22  3070               	movlw	low ((_RN487X+8)| (0+32768))
 19721     0E23  0084               	movwf	4
 19722     0E24  3098               	movlw	high ((_RN487X+8)| (0+32768))
 19723     0E25  0085               	movwf	5
 19724     0E26  3F01               	moviw [1]fsr0
 19725     0E27  008A               	movwf	10
 19726     0E28  3F00               	moviw [0]fsr0
 19727     0E29  000A               	callw
 19728     0E2A  318D               	pagesel	$
 19729                           
 19730                           ;mcc_generated_files/rn487x/rn487x.c: 68:     RN487X.DelayMs((200));
 19731     0E2B  30C8               	movlw	200
 19732     0E2C  00F4               	movwf	RN487X_Delay@delayCount
 19733     0E2D  3000               	movlw	0
 19734     0E2E  00F5               	movwf	RN487X_Delay@delayCount+1
 19735     0E2F  3076               	movlw	low ((_RN487X+14)| (0+32768))
 19736     0E30  0084               	movwf	4
 19737     0E31  3098               	movlw	high ((_RN487X+14)| (0+32768))
 19738     0E32  0085               	movwf	5
 19739     0E33  3F01               	moviw [1]fsr0
 19740     0E34  008A               	movwf	10
 19741     0E35  3F00               	moviw [0]fsr0
 19742     0E36  000A               	callw
 19743     0E37  318D               	pagesel	$
 19744                           
 19745                           ;mcc_generated_files/rn487x/rn487x.c: 71:     while (RN487X.DataReady())
 19746     0E38  2E42               	goto	l14640
 19747     0E39                     l14638:
 19748                           
 19749                           ;mcc_generated_files/rn487x/rn487x.c: 72:     {;mcc_generated_files/rn487x/rn487x.c: 73:
      +                                   RN487X.Read();
 19750     0E39  306A               	movlw	low ((_RN487X+2)| (0+32768))
 19751     0E3A  0084               	movwf	4
 19752     0E3B  3098               	movlw	high ((_RN487X+2)| (0+32768))
 19753     0E3C  0085               	movwf	5
 19754     0E3D  3F01               	moviw [1]fsr0
 19755     0E3E  008A               	movwf	10
 19756     0E3F  3F00               	moviw [0]fsr0
 19757     0E40  000A               	callw
 19758     0E41  318D               	pagesel	$
 19759     0E42                     l14640:
 19760                           
 19761                           ;mcc_generated_files/rn487x/rn487x.c: 71:     while (RN487X.DataReady())
 19762     0E42  306E               	movlw	low ((_RN487X+6)| (0+32768))
 19763     0E43  0084               	movwf	4
 19764     0E44  3098               	movlw	high ((_RN487X+6)| (0+32768))
 19765     0E45  0085               	movwf	5
 19766     0E46  3F01               	moviw [1]fsr0
 19767     0E47  008A               	movwf	10
 19768     0E48  3F00               	moviw [0]fsr0
 19769     0E49  000A               	callw
 19770     0E4A  318D               	pagesel	$
 19771     0E4B  3A00               	xorlw	0
 19772     0E4C  1D03               	skipz
 19773     0E4D  2E4F               	goto	u11651
 19774     0E4E  2E50               	goto	u11650
 19775     0E4F                     u11651:
 19776     0E4F  2E39               	goto	l14638
 19777     0E50                     u11650:
 19778     0E50                     l1533:
 19779     0E50  0008               	return
 19780     0E51                     __end_of_RN487X_Init:
 19781                           
 19782                           	psect	text57
 19783     1FB6                     __ptext57:	
 19784 ;; *************** function _RN487X_is_rx_ready *****************
 19785 ;; Defined at:
 19786 ;;		line 267 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19787 ;; Parameters:    Size  Location     Type
 19788 ;;		None
 19789 ;; Auto vars:     Size  Location     Type
 19790 ;;		None
 19791 ;; Return value:  Size  Location     Type
 19792 ;;                  1    wreg      _Bool 
 19793 ;; Registers used:
 19794 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 19795 ;; Tracked objects:
 19796 ;;		On entry : 0/0
 19797 ;;		On exit  : 0/0
 19798 ;;		Unchanged: 0/0
 19799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19804 ;;Total ram usage:        0 bytes
 19805 ;; Hardware stack levels used: 1
 19806 ;; Hardware stack levels required when called: 5
 19807 ;; This function calls:
 19808 ;;		_EUSART1_is_rx_ready
 19809 ;;		_EUSART2_is_rx_ready
 19810 ;; This function is called by:
 19811 ;;		_RN487X_DataReady
 19812 ;;		_RN487X_Init
 19813 ;; This function uses a non-reentrant model
 19814 ;;
 19815                           
 19816     1FB6                     _RN487X_is_rx_ready:	
 19817                           ;psect for function _RN487X_is_rx_ready
 19818                           
 19819     1FB6                     l13564:	
 19820                           ;incstack = 0
 19821                           ; Regs used in _RN487X_is_rx_ready: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 19822                           
 19823                           
 19824                           ;mcc_generated_files/rn487x/rn487x_interface.c: 269:     return uart[UART_BLE].DataReady
      +                          ();
 19825     1FB6  301A               	movlw	low ((_uart+26)| (0+32768))
 19826     1FB7  0084               	movwf	4
 19827     1FB8  3098               	movlw	high ((_uart+26)| (0+32768))
 19828     1FB9  0085               	movwf	5
 19829     1FBA  3F01               	moviw [1]fsr0
 19830     1FBB  008A               	movwf	10
 19831     1FBC  3F00               	moviw [0]fsr0
 19832     1FBD  000A               	callw
 19833     1FBE  319F               	pagesel	$
 19834     1FBF                     l1449:
 19835     1FBF  0008               	return
 19836     1FC0                     __end_of_RN487X_is_rx_ready:
 19837                           
 19838                           	psect	text58
 19839     1F90                     __ptext58:	
 19840 ;; *************** function _EUSART1_is_rx_ready *****************
 19841 ;; Defined at:
 19842 ;;		line 137 in file "mcc_generated_files/eusart1.c"
 19843 ;; Parameters:    Size  Location     Type
 19844 ;;		None
 19845 ;; Auto vars:     Size  Location     Type
 19846 ;;		None
 19847 ;; Return value:  Size  Location     Type
 19848 ;;                  1    wreg      _Bool 
 19849 ;; Registers used:
 19850 ;;		wreg, status,2, status,0
 19851 ;; Tracked objects:
 19852 ;;		On entry : 0/0
 19853 ;;		On exit  : 0/0
 19854 ;;		Unchanged: 0/0
 19855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19860 ;;Total ram usage:        0 bytes
 19861 ;; Hardware stack levels used: 1
 19862 ;; Hardware stack levels required when called: 4
 19863 ;; This function calls:
 19864 ;;		Nothing
 19865 ;; This function is called by:
 19866 ;;		_RN487X_is_rx_ready
 19867 ;;		_RN487X_Example_TransparentUart
 19868 ;;		_main
 19869 ;; This function uses a non-reentrant model
 19870 ;;
 19871                           
 19872     1F90                     _EUSART1_is_rx_ready:	
 19873                           ;psect for function _EUSART1_is_rx_ready
 19874                           
 19875     1F90                     l13482:	
 19876                           ;incstack = 0
 19877                           ; Regs used in _EUSART1_is_rx_ready: [wreg+status,2+status,0]
 19878                           
 19879                           
 19880                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
 19881     1F90  0140               	movlb	0	; select bank0
 19882     1F91  0852               	movf	_eusart1RxCount,w	;volatile
 19883     1F92  1D03               	btfss	3,2
 19884     1F93  2F95               	goto	u10221
 19885     1F94  2F97               	goto	u10220
 19886     1F95                     u10221:
 19887     1F95  3001               	movlw	1
 19888     1F96  2F98               	goto	u10230
 19889     1F97                     u10220:
 19890     1F97  3000               	movlw	0
 19891     1F98                     u10230:
 19892     1F98                     l1855:
 19893     1F98  0008               	return
 19894     1F99                     __end_of_EUSART1_is_rx_ready:
 19895                           
 19896                           	psect	text59
 19897     1F87                     __ptext59:	
 19898 ;; *************** function _EUSART2_is_rx_ready *****************
 19899 ;; Defined at:
 19900 ;;		line 137 in file "mcc_generated_files/eusart2.c"
 19901 ;; Parameters:    Size  Location     Type
 19902 ;;		None
 19903 ;; Auto vars:     Size  Location     Type
 19904 ;;		None
 19905 ;; Return value:  Size  Location     Type
 19906 ;;                  1    wreg      _Bool 
 19907 ;; Registers used:
 19908 ;;		wreg, status,2, status,0
 19909 ;; Tracked objects:
 19910 ;;		On entry : 0/0
 19911 ;;		On exit  : 0/0
 19912 ;;		Unchanged: 0/0
 19913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19918 ;;Total ram usage:        0 bytes
 19919 ;; Hardware stack levels used: 1
 19920 ;; Hardware stack levels required when called: 4
 19921 ;; This function calls:
 19922 ;;		Nothing
 19923 ;; This function is called by:
 19924 ;;		_RN487X_is_rx_ready
 19925 ;;		_RN487X_Example_TransparentUart
 19926 ;;		_main
 19927 ;; This function uses a non-reentrant model
 19928 ;;
 19929                           
 19930     1F87                     _EUSART2_is_rx_ready:	
 19931                           ;psect for function _EUSART2_is_rx_ready
 19932                           
 19933     1F87                     l13478:	
 19934                           ;incstack = 0
 19935                           ; Regs used in _EUSART2_is_rx_ready: [wreg+status,2+status,0]
 19936                           
 19937                           
 19938                           ;mcc_generated_files/eusart2.c: 139:     return (eusart2RxCount ? 1 : 0);
 19939     1F87  0140               	movlb	0	; select bank0
 19940     1F88  0858               	movf	_eusart2RxCount,w	;volatile
 19941     1F89  1D03               	btfss	3,2
 19942     1F8A  2F8C               	goto	u10201
 19943     1F8B  2F8E               	goto	u10200
 19944     1F8C                     u10201:
 19945     1F8C  3001               	movlw	1
 19946     1F8D  2F8F               	goto	u10210
 19947     1F8E                     u10200:
 19948     1F8E  3000               	movlw	0
 19949     1F8F                     u10210:
 19950     1F8F                     l1711:
 19951     1F8F  0008               	return
 19952     1F90                     __end_of_EUSART2_is_rx_ready:
 19953                           
 19954                           	psect	text60
 19955     101C                     __ptext60:	
 19956 ;; *************** function _RN487X_SetSystemMode *****************
 19957 ;; Defined at:
 19958 ;;		line 301 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19959 ;; Parameters:    Size  Location     Type
 19960 ;;  mode            1    1[COMMON] enum E204
 19961 ;; Auto vars:     Size  Location     Type
 19962 ;;		None
 19963 ;; Return value:  Size  Location     Type
 19964 ;;                  1    wreg      void 
 19965 ;; Registers used:
 19966 ;;		wreg, status,2, status,0
 19967 ;; Tracked objects:
 19968 ;;		On entry : 0/0
 19969 ;;		On exit  : 0/0
 19970 ;;		Unchanged: 0/0
 19971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19972 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19975 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19976 ;;Total ram usage:        1 bytes
 19977 ;; Hardware stack levels used: 1
 19978 ;; Hardware stack levels required when called: 4
 19979 ;; This function calls:
 19980 ;;		Nothing
 19981 ;; This function is called by:
 19982 ;;		_RN487X_Init
 19983 ;; This function uses a non-reentrant model
 19984 ;;
 19985                           
 19986     101C                     _RN487X_SetSystemMode:	
 19987                           ;psect for function _RN487X_SetSystemMode
 19988                           
 19989     101C                     l1473:	
 19990                           ;incstack = 0
 19991                           ; Regs used in _RN487X_SetSystemMode: [wreg+status,2+status,0]
 19992                           ;mcc_generated_files/rn487x/rn487x_interface.c: 301: static void RN487X_SetSystemMode(RN
      +                          487X_SYSTEM_MODES_t mode);mcc_generated_files/rn487x/rn487x_interface.c: 302: {;mcc_gene
      +                          rated_files/rn487x/rn487x_interface.c: 304:     do { TRISAbits.TRISA7 = 0; } while(0);
 19993                           
 19994     101C  0140               	movlb	0	; select bank0
 19995     101D  1392               	bcf	18,7	;volatile
 19996     101E                     l14204:
 19997                           
 19998                           ;mcc_generated_files/rn487x/rn487x_interface.c: 306:     if (APPLICATION_MODE == mode)
 19999     101E  0371               	decf	RN487X_SetSystemMode@mode,w
 20000     101F  1D03               	btfss	3,2
 20001     1020  2822               	goto	u11391
 20002     1021  2823               	goto	u11390
 20003     1022                     u11391:
 20004     1022  2825               	goto	l1479
 20005     1023                     u11390:
 20006     1023                     l1476:	
 20007                           ;mcc_generated_files/rn487x/rn487x_interface.c: 307:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 308:         do { LATAbits.LATA7 = 1; } while(0);
 20008                           
 20009     1023  1798               	bsf	24,7	;volatile
 20010     1024  2826               	goto	l1481
 20011     1025                     l1479:	
 20012                           ;mcc_generated_files/rn487x/rn487x_interface.c: 311:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 312:         do { LATAbits.LATA7 = 0; } while(0);
 20013                           
 20014     1025  1398               	bcf	24,7	;volatile
 20015     1026                     l1481:	
 20016                           ;mcc_generated_files/rn487x/rn487x_interface.c: 316:     do { TRISAbits.TRISA7 = 1; } wh
      +                          ile(0);
 20017                           
 20018     1026  1792               	bsf	18,7	;volatile
 20019     1027                     l1483:
 20020     1027  0008               	return
 20021     1028                     __end_of_RN487X_SetSystemMode:
 20022                           
 20023                           	psect	text61
 20024     1FF5                     __ptext61:	
 20025 ;; *************** function _RN487X_Reset *****************
 20026 ;; Defined at:
 20027 ;;		line 277 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 20028 ;; Parameters:    Size  Location     Type
 20029 ;;  value           1    1[COMMON] _Bool 
 20030 ;; Auto vars:     Size  Location     Type
 20031 ;;		None
 20032 ;; Return value:  Size  Location     Type
 20033 ;;                  1    wreg      void 
 20034 ;; Registers used:
 20035 ;;		wreg, status,2, status,0
 20036 ;; Tracked objects:
 20037 ;;		On entry : 0/0
 20038 ;;		On exit  : 0/0
 20039 ;;		Unchanged: 0/0
 20040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20041 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20044 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20045 ;;Total ram usage:        1 bytes
 20046 ;; Hardware stack levels used: 1
 20047 ;; Hardware stack levels required when called: 4
 20048 ;; This function calls:
 20049 ;;		Nothing
 20050 ;; This function is called by:
 20051 ;;		_RN487X_Init
 20052 ;; This function uses a non-reentrant model
 20053 ;;
 20054                           
 20055     1FF5                     _RN487X_Reset:	
 20056                           ;psect for function _RN487X_Reset
 20057                           
 20058     1FF5                     l14200:	
 20059                           ;incstack = 0
 20060                           ; Regs used in _RN487X_Reset: [wreg+status,2+status,0]
 20061                           
 20062                           
 20063                           ;mcc_generated_files/rn487x/rn487x_interface.c: 277: static void RN487X_Reset(_Bool valu
      +                          e);mcc_generated_files/rn487x/rn487x_interface.c: 278: {;mcc_generated_files/rn487x/rn48
      +                          7x_interface.c: 279:     if (1 == value)
 20064     1FF5  0371               	decf	RN487X_Reset@value,w
 20065     1FF6  1D03               	btfss	3,2
 20066     1FF7  2FF9               	goto	u11371
 20067     1FF8  2FFA               	goto	u11370
 20068     1FF9                     u11371:
 20069     1FF9  2FFD               	goto	l1459
 20070     1FFA                     u11370:
 20071     1FFA                     l1456:	
 20072                           ;mcc_generated_files/rn487x/rn487x_interface.c: 280:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 281:         do { LATAbits.LATA0 = 0; } while(0);
 20073                           
 20074     1FFA  0140               	movlb	0	; select bank0
 20075     1FFB  1018               	bcf	24,0	;volatile
 20076     1FFC  2FFF               	goto	l1461
 20077     1FFD                     l1459:	
 20078                           ;mcc_generated_files/rn487x/rn487x_interface.c: 284:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 285:         do { LATAbits.LATA0 = 1; } while(0);
 20079                           
 20080     1FFD  0140               	movlb	0	; select bank0
 20081     1FFE  1418               	bsf	24,0	;volatile
 20082     1FFF                     l1461:
 20083     1FFF  0008               	return
 20084     2000                     __end_of_RN487X_Reset:
 20085                           
 20086                           	psect	text62
 20087     1FEA                     __ptext62:	
 20088 ;; *************** function _RN487X_IndicateRx *****************
 20089 ;; Defined at:
 20090 ;;		line 289 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 20091 ;; Parameters:    Size  Location     Type
 20092 ;;  value           1    1[COMMON] _Bool 
 20093 ;; Auto vars:     Size  Location     Type
 20094 ;;		None
 20095 ;; Return value:  Size  Location     Type
 20096 ;;                  1    wreg      void 
 20097 ;; Registers used:
 20098 ;;		wreg, status,2, status,0
 20099 ;; Tracked objects:
 20100 ;;		On entry : 0/0
 20101 ;;		On exit  : 0/0
 20102 ;;		Unchanged: 0/0
 20103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20104 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20107 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20108 ;;Total ram usage:        1 bytes
 20109 ;; Hardware stack levels used: 1
 20110 ;; Hardware stack levels required when called: 4
 20111 ;; This function calls:
 20112 ;;		Nothing
 20113 ;; This function is called by:
 20114 ;;		_RN487X_Init
 20115 ;; This function uses a non-reentrant model
 20116 ;;
 20117                           
 20118     1FEA                     _RN487X_IndicateRx:	
 20119                           ;psect for function _RN487X_IndicateRx
 20120                           
 20121     1FEA                     l14202:	
 20122                           ;incstack = 0
 20123                           ; Regs used in _RN487X_IndicateRx: [wreg+status,2+status,0]
 20124                           
 20125                           
 20126                           ;mcc_generated_files/rn487x/rn487x_interface.c: 289: static void RN487X_IndicateRx(_Bool
      +                           value);mcc_generated_files/rn487x/rn487x_interface.c: 290: {;mcc_generated_files/rn487x
      +                          /rn487x_interface.c: 291:     if (1 == value)
 20127     1FEA  0371               	decf	RN487X_IndicateRx@value,w
 20128     1FEB  1D03               	btfss	3,2
 20129     1FEC  2FEE               	goto	u11381
 20130     1FED  2FEF               	goto	u11380
 20131     1FEE                     u11381:
 20132     1FEE  2FF2               	goto	l1468
 20133     1FEF                     u11380:
 20134     1FEF                     l1465:	
 20135                           ;mcc_generated_files/rn487x/rn487x_interface.c: 292:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 293:         do { LATCbits.LATC6 = 0; } while(0);
 20136                           
 20137     1FEF  0140               	movlb	0	; select bank0
 20138     1FF0  131A               	bcf	26,6	;volatile
 20139     1FF1  2FF4               	goto	l1470
 20140     1FF2                     l1468:	
 20141                           ;mcc_generated_files/rn487x/rn487x_interface.c: 296:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 297:         do { LATCbits.LATC6 = 1; } while(0);
 20142                           
 20143     1FF2  0140               	movlb	0	; select bank0
 20144     1FF3  171A               	bsf	26,6	;volatile
 20145     1FF4                     l1470:
 20146     1FF4  0008               	return
 20147     1FF5                     __end_of_RN487X_IndicateRx:
 20148                           
 20149                           	psect	text63
 20150     11F6                     __ptext63:	
 20151 ;; *************** function _LIGHTBLUE_TemperatureSensor *****************
 20152 ;; Defined at:
 20153 ;;		line 311 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20154 ;; Parameters:    Size  Location     Type
 20155 ;;		None
 20156 ;; Auto vars:     Size  Location     Type
 20157 ;;  payload         5   22[BANK0 ] unsigned char [5]
 20158 ;;  temperature     2   27[BANK0 ] short 
 20159 ;;  read            1    0        unsigned char 
 20160 ;; Return value:  Size  Location     Type
 20161 ;;                  1    wreg      void 
 20162 ;; Registers used:
 20163 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20164 ;; Tracked objects:
 20165 ;;		On entry : 0/0
 20166 ;;		On exit  : 0/0
 20167 ;;		Unchanged: 0/0
 20168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20170 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20172 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20173 ;;Total ram usage:        7 bytes
 20174 ;; Hardware stack levels used: 1
 20175 ;; Hardware stack levels required when called: 15
 20176 ;; This function calls:
 20177 ;;		_LIGHTBLUE_SendPacket
 20178 ;;		_LIGHTBLUE_SplitWord
 20179 ;;		_TMAG5273_GetTemperatureValue
 20180 ;; This function is called by:
 20181 ;;		_main
 20182 ;; This function uses a non-reentrant model
 20183 ;;
 20184                           
 20185     11F6                     _LIGHTBLUE_TemperatureSensor:	
 20186                           ;psect for function _LIGHTBLUE_TemperatureSensor
 20187                           
 20188     11F6                     l14362:	
 20189                           ;incstack = 0
 20190                           ; Regs used in _LIGHTBLUE_TemperatureSensor: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 20191                           
 20192                           
 20193                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 312:     char payload[5];;mcc_gene
      +                          rated_files/application/LIGHTBLUE_service.c: 313:     int16_t temperature;;mcc_generated
      +                          _files/application/LIGHTBLUE_service.c: 314:     uint8_t read;;mcc_generated_files/appli
      +                          cation/LIGHTBLUE_service.c: 316:     *payload = '\0';
 20194     11F6  0140               	movlb	0	; select bank0
 20195     11F7  01B6               	clrf	LIGHTBLUE_TemperatureSensor@payload
 20196     11F8                     l14364:
 20197                           
 20198                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 318:     TMAG5273_GetTemperatureVa
      +                          lue(&temperature);
 20199     11F8  303B               	movlw	(low (LIGHTBLUE_TemperatureSensor@temperature| 0))& (0+255)
 20200     11F9  3190  2076  3191   	fcall	_TMAG5273_GetTemperatureValue
 20201     11FC                     l14366:
 20202                           
 20203                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 321:     LIGHTBLUE_SplitWord(paylo
      +                          ad, temperature);
 20204     11FC  0140               	movlb	0	; select bank0
 20205     11FD  083C               	movf	LIGHTBLUE_TemperatureSensor@temperature+1,w
 20206     11FE  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 20207     11FF  083B               	movf	LIGHTBLUE_TemperatureSensor@temperature,w
 20208     1200  00F9               	movwf	LIGHTBLUE_SplitWord@value
 20209     1201  3036               	movlw	(low (LIGHTBLUE_TemperatureSensor@payload| 0))& (0+255)
 20210     1202  3190  2068  3191   	fcall	_LIGHTBLUE_SplitWord
 20211     1205                     l14368:
 20212                           
 20213                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 323:     LIGHTBLUE_SendPacket(TEMP
      +                          ERATURE_DATA_ID, payload);
 20214     1205  3036               	movlw	(low (LIGHTBLUE_TemperatureSensor@payload| 0))& (0+255)
 20215     1206  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 20216     1207  3054               	movlw	84
 20217     1208  318E  26D9  3191   	fcall	_LIGHTBLUE_SendPacket
 20218     120B                     l124:
 20219     120B  0008               	return
 20220     120C                     __end_of_LIGHTBLUE_TemperatureSensor:
 20221                           
 20222                           	psect	text64
 20223     1076                     __ptext64:	
 20224 ;; *************** function _TMAG5273_GetTemperatureValue *****************
 20225 ;; Defined at:
 20226 ;;		line 2555 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 20227 ;; Parameters:    Size  Location     Type
 20228 ;;  temperature     1    wreg     PTR short 
 20229 ;;		 -> LIGHTBLUE_TemperatureSensor@temperature(2), 
 20230 ;; Auto vars:     Size  Location     Type
 20231 ;;  temperature     1   11[COMMON] PTR short 
 20232 ;;		 -> LIGHTBLUE_TemperatureSensor@temperature(2), 
 20233 ;; Return value:  Size  Location     Type
 20234 ;;                  1    wreg      void 
 20235 ;; Registers used:
 20236 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20237 ;; Tracked objects:
 20238 ;;		On entry : 0/0
 20239 ;;		On exit  : 0/0
 20240 ;;		Unchanged: 0/0
 20241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20243 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20245 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20246 ;;Total ram usage:        1 bytes
 20247 ;; Hardware stack levels used: 1
 20248 ;; Hardware stack levels required when called: 14
 20249 ;; This function calls:
 20250 ;;		_TMAG5273_CalcMeasurement
 20251 ;; This function is called by:
 20252 ;;		_LIGHTBLUE_TemperatureSensor
 20253 ;; This function uses a non-reentrant model
 20254 ;;
 20255                           
 20256     1076                     _TMAG5273_GetTemperatureValue:	
 20257                           ;psect for function _TMAG5273_GetTemperatureValue
 20258                           
 20259                           
 20260                           ;incstack = 0
 20261                           ; Regs used in _TMAG5273_GetTemperatureValue: [wreg-fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 20262                           ;TMAG5273_GetTemperatureValue@temperature stored from wreg
 20263     1076  00FB               	movwf	TMAG5273_GetTemperatureValue@temperature
 20264     1077                     l13634:
 20265                           
 20266                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2556:     *temperature
      +                           = TMAG5273_CalcMeasurement(TMAG5273_REG_T_MSB_RESULT);
 20267     1077  3010               	movlw	16
 20268     1078  3193  23C9  3190   	fcall	_TMAG5273_CalcMeasurement
 20269     107B  087B               	movf	TMAG5273_GetTemperatureValue@temperature,w
 20270     107C  0086               	movwf	6
 20271     107D  0187               	clrf	7
 20272     107E  0140               	movlb	0	; select bank0
 20273     107F  082D               	movf	?_TMAG5273_CalcMeasurement,w
 20274     1080  3FC0               	movwi [0]fsr1
 20275     1081  082E               	movf	?_TMAG5273_CalcMeasurement+1,w
 20276     1082  3FC1               	movwi [1]fsr1
 20277     1083                     l1239:
 20278     1083  0008               	return
 20279     1084                     __end_of_TMAG5273_GetTemperatureValue:
 20280                           
 20281                           	psect	text65
 20282     0665                     __ptext65:	
 20283 ;; *************** function _LIGHTBLUE_SendSerialData *****************
 20284 ;; Defined at:
 20285 ;;		line 385 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20286 ;; Parameters:    Size  Location     Type
 20287 ;;  serialData      1    wreg     PTR unsigned char 
 20288 ;;		 -> lightBlueSerial(80), 
 20289 ;; Auto vars:     Size  Location     Type
 20290 ;;  serialData      1    9[COMMON] PTR unsigned char 
 20291 ;;		 -> lightBlueSerial(80), 
 20292 ;;  length          1    8[COMMON] unsigned char 
 20293 ;; Return value:  Size  Location     Type
 20294 ;;                  1    wreg      void 
 20295 ;; Registers used:
 20296 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20297 ;; Tracked objects:
 20298 ;;		On entry : 0/0
 20299 ;;		On exit  : 0/0
 20300 ;;		Unchanged: 0/0
 20301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20303 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20304 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20305 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20306 ;;Total ram usage:        3 bytes
 20307 ;; Hardware stack levels used: 1
 20308 ;; Hardware stack levels required when called: 6
 20309 ;; This function calls:
 20310 ;;		_RN487X_Write
 20311 ;;		_strlen
 20312 ;; This function is called by:
 20313 ;;		_main
 20314 ;; This function uses a non-reentrant model
 20315 ;;
 20316                           
 20317     0665                     _LIGHTBLUE_SendSerialData:	
 20318                           ;psect for function _LIGHTBLUE_SendSerialData
 20319                           
 20320                           
 20321                           ;incstack = 0
 20322                           ; Regs used in _LIGHTBLUE_SendSerialData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20323                           ;LIGHTBLUE_SendSerialData@serialData stored from wreg
 20324     0665  00F9               	movwf	LIGHTBLUE_SendSerialData@serialData
 20325     0666                     l14416:
 20326                           
 20327                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 386:     uint8_t length = strlen(s
      +                          erialData) * 2;
 20328     0666  0879               	movf	LIGHTBLUE_SendSerialData@serialData,w
 20329     0667  00F1               	movwf	strlen@s
 20330     0668  3002               	movlw	2
 20331     0669  00F2               	movwf	strlen@s+1
 20332     066A  3192  22DB  3186   	fcall	_strlen
 20333     066D  0871               	movf	?_strlen,w
 20334     066E  0709               	addwf	9,w
 20335     066F  00F8               	movwf	LIGHTBLUE_SendSerialData@length
 20336     0670                     l14418:
 20337                           
 20338                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 388:     RN487X.Write(('['));
 20339     0670  305B               	movlw	91
 20340     0671  00F6               	movwf	RN487X_Write@txData
 20341     0672  3068               	movlw	low (_RN487X| (0+32768))
 20342     0673  0084               	movwf	4
 20343     0674  3098               	movlw	high (_RN487X| (0+32768))
 20344     0675  0085               	movwf	5
 20345     0676  3F01               	moviw [1]fsr0
 20346     0677  008A               	movwf	10
 20347     0678  3F00               	moviw [0]fsr0
 20348     0679  000A               	callw
 20349     067A  3186               	pagesel	$
 20350     067B                     l14420:
 20351                           
 20352                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 389:     RN487X.Write((_hex[(seque
      +                          nceNumber++) & 0xF]));
 20353     067B  0140               	movlb	0	; select bank0
 20354     067C  086E               	movf	_sequenceNumber,w
 20355     067D  390F               	andlw	15
 20356     067E  3EA0               	addlw	(low (__hex| (0+256)))& (0+255)
 20357     067F  0086               	movwf	6
 20358     0680  3001               	movlw	1	; select bank3/4
 20359     0681  0087               	movwf	7
 20360     0682  0801               	movf	1,w
 20361     0683  00F6               	movwf	RN487X_Write@txData
 20362     0684  3068               	movlw	low (_RN487X| (0+32768))
 20363     0685  0084               	movwf	4
 20364     0686  3098               	movlw	high (_RN487X| (0+32768))
 20365     0687  0085               	movwf	5
 20366     0688  3F01               	moviw [1]fsr0
 20367     0689  008A               	movwf	10
 20368     068A  3F00               	moviw [0]fsr0
 20369     068B  000A               	callw
 20370     068C  3186               	pagesel	$
 20371     068D                     l14422:
 20372     068D  3001               	movlw	1
 20373     068E  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 20374     068F  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 20375     0690  0140               	movlb	0	; select bank0
 20376     0691  07EE               	addwf	_sequenceNumber,f
 20377     0692                     l14424:
 20378                           
 20379                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 390:     RN487X.Write(SERIAL_DATA_
      +                          ID);
 20380     0692  3053               	movlw	83
 20381     0693  00F6               	movwf	RN487X_Write@txData
 20382     0694  3068               	movlw	low (_RN487X| (0+32768))
 20383     0695  0084               	movwf	4
 20384     0696  3098               	movlw	high (_RN487X| (0+32768))
 20385     0697  0085               	movwf	5
 20386     0698  3F01               	moviw [1]fsr0
 20387     0699  008A               	movwf	10
 20388     069A  3F00               	moviw [0]fsr0
 20389     069B  000A               	callw
 20390     069C  3186               	pagesel	$
 20391     069D                     l14426:
 20392                           
 20393                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 391:     RN487X.Write((_hex[(lengt
      +                          h >> 4) & 0xF]));
 20394     069D  0878               	movf	LIGHTBLUE_SendSerialData@length,w
 20395     069E  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 20396     069F  3004               	movlw	4
 20397     06A0                     u11415:
 20398     06A0  36F7               	lsrf	??_LIGHTBLUE_SendSerialData,f
 20399     06A1  0B89               	decfsz	9,f
 20400     06A2  2EA0               	goto	u11415
 20401     06A3  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 20402     06A4  390F               	andlw	15
 20403     06A5  3EA0               	addlw	(low (__hex| (0+256)))& (0+255)
 20404     06A6  0086               	movwf	6
 20405     06A7  3001               	movlw	1	; select bank3/4
 20406     06A8  0087               	movwf	7
 20407     06A9  0801               	movf	1,w
 20408     06AA  00F6               	movwf	RN487X_Write@txData
 20409     06AB  3068               	movlw	low (_RN487X| (0+32768))
 20410     06AC  0084               	movwf	4
 20411     06AD  3098               	movlw	high (_RN487X| (0+32768))
 20412     06AE  0085               	movwf	5
 20413     06AF  3F01               	moviw [1]fsr0
 20414     06B0  008A               	movwf	10
 20415     06B1  3F00               	moviw [0]fsr0
 20416     06B2  000A               	callw
 20417     06B3  3186               	pagesel	$
 20418     06B4                     l14428:
 20419                           
 20420                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 392:     RN487X.Write((_hex[(lengt
      +                          h) & 0xF]));
 20421     06B4  0878               	movf	LIGHTBLUE_SendSerialData@length,w
 20422     06B5  390F               	andlw	15
 20423     06B6  3EA0               	addlw	(low (__hex| (0+256)))& (0+255)
 20424     06B7  0086               	movwf	6
 20425     06B8  3001               	movlw	1	; select bank3/4
 20426     06B9  0087               	movwf	7
 20427     06BA  0801               	movf	1,w
 20428     06BB  00F6               	movwf	RN487X_Write@txData
 20429     06BC  3068               	movlw	low (_RN487X| (0+32768))
 20430     06BD  0084               	movwf	4
 20431     06BE  3098               	movlw	high (_RN487X| (0+32768))
 20432     06BF  0085               	movwf	5
 20433     06C0  3F01               	moviw [1]fsr0
 20434     06C1  008A               	movwf	10
 20435     06C2  3F00               	moviw [0]fsr0
 20436     06C3  000A               	callw
 20437     06C4  3186               	pagesel	$
 20438                           
 20439                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 393:     while (*serialData) {
 20440     06C5  2EFA               	goto	l14434
 20441     06C6                     l14430:
 20442                           
 20443                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 394:         RN487X.Write((_hex[(*
      +                          serialData >> 4) & 0xF]));
 20444     06C6  0879               	movf	LIGHTBLUE_SendSerialData@serialData,w
 20445     06C7  0086               	movwf	6
 20446     06C8  3002               	movlw	2	; select bank4/5
 20447     06C9  0087               	movwf	7
 20448     06CA  0801               	movf	1,w
 20449     06CB  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 20450     06CC  3004               	movlw	4
 20451     06CD                     u11425:
 20452     06CD  36F7               	lsrf	??_LIGHTBLUE_SendSerialData,f
 20453     06CE  0B89               	decfsz	9,f
 20454     06CF  2ECD               	goto	u11425
 20455     06D0  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 20456     06D1  390F               	andlw	15
 20457     06D2  3EA0               	addlw	(low (__hex| (0+256)))& (0+255)
 20458     06D3  0086               	movwf	6
 20459     06D4  3001               	movlw	1	; select bank3/4
 20460     06D5  0087               	movwf	7
 20461     06D6  0801               	movf	1,w
 20462     06D7  00F6               	movwf	RN487X_Write@txData
 20463     06D8  3068               	movlw	low (_RN487X| (0+32768))
 20464     06D9  0084               	movwf	4
 20465     06DA  3098               	movlw	high (_RN487X| (0+32768))
 20466     06DB  0085               	movwf	5
 20467     06DC  3F01               	moviw [1]fsr0
 20468     06DD  008A               	movwf	10
 20469     06DE  3F00               	moviw [0]fsr0
 20470     06DF  000A               	callw
 20471     06E0  3186               	pagesel	$
 20472                           
 20473                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 395:         RN487X.Write((_hex[(*
      +                          serialData++) & 0xF]));
 20474     06E1  0879               	movf	LIGHTBLUE_SendSerialData@serialData,w
 20475     06E2  0086               	movwf	6
 20476     06E3  3002               	movlw	2	; select bank4/5
 20477     06E4  0087               	movwf	7
 20478     06E5  0801               	movf	1,w
 20479     06E6  390F               	andlw	15
 20480     06E7  3EA0               	addlw	(low (__hex| (0+256)))& (0+255)
 20481     06E8  0086               	movwf	6
 20482     06E9  3001               	movlw	1	; select bank3/4
 20483     06EA  0087               	movwf	7
 20484     06EB  0801               	movf	1,w
 20485     06EC  00F6               	movwf	RN487X_Write@txData
 20486     06ED  3068               	movlw	low (_RN487X| (0+32768))
 20487     06EE  0084               	movwf	4
 20488     06EF  3098               	movlw	high (_RN487X| (0+32768))
 20489     06F0  0085               	movwf	5
 20490     06F1  3F01               	moviw [1]fsr0
 20491     06F2  008A               	movwf	10
 20492     06F3  3F00               	moviw [0]fsr0
 20493     06F4  000A               	callw
 20494     06F5  3186               	pagesel	$
 20495     06F6                     l14432:
 20496     06F6  3001               	movlw	1
 20497     06F7  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 20498     06F8  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 20499     06F9  07F9               	addwf	LIGHTBLUE_SendSerialData@serialData,f
 20500     06FA                     l14434:
 20501                           
 20502                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 393:     while (*serialData) {
 20503     06FA  0879               	movf	LIGHTBLUE_SendSerialData@serialData,w
 20504     06FB  0086               	movwf	6
 20505     06FC  3002               	movlw	2	; select bank4/5
 20506     06FD  0087               	movwf	7
 20507     06FE  0801               	movf	1,w
 20508     06FF  1D03               	btfss	3,2
 20509     0700  2F02               	goto	u11431
 20510     0701  2F03               	goto	u11430
 20511     0702                     u11431:
 20512     0702  2EC6               	goto	l14430
 20513     0703                     u11430:
 20514     0703                     l14436:
 20515                           
 20516                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 397:     RN487X.Write((']'));
 20517     0703  305D               	movlw	93
 20518     0704  00F6               	movwf	RN487X_Write@txData
 20519     0705  3068               	movlw	low (_RN487X| (0+32768))
 20520     0706  0084               	movwf	4
 20521     0707  3098               	movlw	high (_RN487X| (0+32768))
 20522     0708  0085               	movwf	5
 20523     0709  3F01               	moviw [1]fsr0
 20524     070A  008A               	movwf	10
 20525     070B  3F00               	moviw [0]fsr0
 20526     070C  000A               	callw
 20527     070D  3186               	pagesel	$
 20528     070E                     l145:
 20529     070E  0008               	return
 20530     070F                     __end_of_LIGHTBLUE_SendSerialData:
 20531                           
 20532                           	psect	text66
 20533     1728                     __ptext66:	
 20534 ;; *************** function _LIGHTBLUE_SendProtocolVersion *****************
 20535 ;; Defined at:
 20536 ;;		line 370 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20537 ;; Parameters:    Size  Location     Type
 20538 ;;		None
 20539 ;; Auto vars:     Size  Location     Type
 20540 ;;  payload        19    2[BANK0 ] unsigned char [19]
 20541 ;;  dataIndex       1   22[BANK0 ] unsigned char 
 20542 ;;  value           1   21[BANK0 ] unsigned char 
 20543 ;; Return value:  Size  Location     Type
 20544 ;;                  1    wreg      void 
 20545 ;; Registers used:
 20546 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20547 ;; Tracked objects:
 20548 ;;		On entry : 0/0
 20549 ;;		On exit  : 0/0
 20550 ;;		Unchanged: 0/0
 20551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20553 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20554 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20555 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20556 ;;Total ram usage:       23 bytes
 20557 ;; Hardware stack levels used: 1
 20558 ;; Hardware stack levels required when called: 7
 20559 ;; This function calls:
 20560 ;;		_LIGHTBLUE_SendPacket
 20561 ;;		_LIGHTBLUE_SplitByte
 20562 ;;		_strlen
 20563 ;; This function is called by:
 20564 ;;		_main
 20565 ;; This function uses a non-reentrant model
 20566 ;;
 20567                           
 20568     1728                     _LIGHTBLUE_SendProtocolVersion:	
 20569                           ;psect for function _LIGHTBLUE_SendProtocolVersion
 20570                           
 20571     1728                     l14404:	
 20572                           ;incstack = 0
 20573                           ; Regs used in _LIGHTBLUE_SendProtocolVersion: [wreg-fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 20574                           
 20575                           
 20576                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 371:     char payload[19];;mcc_gen
      +                          erated_files/application/LIGHTBLUE_service.c: 372:     uint8_t value;;mcc_generated_file
      +                          s/application/LIGHTBLUE_service.c: 373:     uint8_t dataIndex;;mcc_generated_files/appli
      +                          cation/LIGHTBLUE_service.c: 375:     *payload = '\0';
 20577     1728  0140               	movlb	0	; select bank0
 20578     1729  01A2               	clrf	LIGHTBLUE_SendProtocolVersion@payload
 20579                           
 20580                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 377:     for (dataIndex = 0; dataI
      +                          ndex < strlen(protocol_version_number); dataIndex++) {
 20581     172A  01B6               	clrf	LIGHTBLUE_SendProtocolVersion@dataIndex
 20582     172B  2F40               	goto	l14412
 20583     172C                     l14406:
 20584                           
 20585                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 378:         value = protocol_vers
      +                          ion_number[dataIndex];
 20586     172C  0836               	movf	LIGHTBLUE_SendProtocolVersion@dataIndex,w
 20587     172D  3E00               	addlw	low (STR_1| (0+32768))
 20588     172E  0084               	movwf	4
 20589     172F  30A0               	movlw	high (STR_1| (0+32768))
 20590     1730  1803               	skipnc
 20591     1731  3E01               	addlw	1
 20592     1732  0085               	movwf	5
 20593     1733  0800               	movf	0,w	;code access
 20594     1734  00B5               	movwf	LIGHTBLUE_SendProtocolVersion@value
 20595     1735                     l14408:
 20596                           
 20597                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 379:         LIGHTBLUE_SplitByte(p
      +                          ayload, value);
 20598     1735  0835               	movf	LIGHTBLUE_SendProtocolVersion@value,w
 20599     1736  00F6               	movwf	LIGHTBLUE_SplitByte@value
 20600     1737  3022               	movlw	(low (LIGHTBLUE_SendProtocolVersion@payload| 0))& (0+255)
 20601     1738  3196  26C4  3197   	fcall	_LIGHTBLUE_SplitByte
 20602     173B                     l14410:
 20603                           
 20604                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 380:     }
 20605     173B  3001               	movlw	1
 20606     173C  0140               	movlb	0	; select bank0
 20607     173D  00A0               	movwf	??_LIGHTBLUE_SendProtocolVersion
 20608     173E  0820               	movf	??_LIGHTBLUE_SendProtocolVersion,w
 20609     173F  07B6               	addwf	LIGHTBLUE_SendProtocolVersion@dataIndex,f
 20610     1740                     l14412:
 20611     1740  3000               	movlw	low (STR_1| (0+32768))
 20612     1741  00F1               	movwf	strlen@s
 20613     1742  30A0               	movlw	high (STR_1| (0+32768))
 20614     1743  00F2               	movwf	strlen@s+1
 20615     1744  3192  22DB  3197   	fcall	_strlen
 20616     1747  0140               	movlb	0	; select bank0
 20617     1748  0836               	movf	LIGHTBLUE_SendProtocolVersion@dataIndex,w
 20618     1749  00A0               	movwf	??_LIGHTBLUE_SendProtocolVersion
 20619     174A  01A1               	clrf	??_LIGHTBLUE_SendProtocolVersion+1
 20620     174B  0872               	movf	?_strlen+1,w
 20621     174C  0221               	subwf	??_LIGHTBLUE_SendProtocolVersion+1,w
 20622     174D  1D03               	skipz
 20623     174E  2F51               	goto	u11405
 20624     174F  0871               	movf	?_strlen,w
 20625     1750  0220               	subwf	??_LIGHTBLUE_SendProtocolVersion,w
 20626     1751                     u11405:
 20627     1751  1C03               	skipc
 20628     1752  2F54               	goto	u11401
 20629     1753  2F55               	goto	u11400
 20630     1754                     u11401:
 20631     1754  2F2C               	goto	l14406
 20632     1755                     u11400:
 20633     1755                     l14414:
 20634                           
 20635                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 382:     LIGHTBLUE_SendPacket(PROT
      +                          OCOL_VERSION_ID, payload);
 20636     1755  3022               	movlw	(low (LIGHTBLUE_SendProtocolVersion@payload| 0))& (0+255)
 20637     1756  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 20638     1757  3056               	movlw	86
 20639     1758  318E  26D9  3197   	fcall	_LIGHTBLUE_SendPacket
 20640     175B                     l139:
 20641     175B  0008               	return
 20642     175C                     __end_of_LIGHTBLUE_SendProtocolVersion:
 20643                           
 20644                           	psect	text67
 20645     117C                     __ptext67:	
 20646 ;; *************** function _LIGHTBLUE_PushButton *****************
 20647 ;; Defined at:
 20648 ;;		line 342 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20649 ;; Parameters:    Size  Location     Type
 20650 ;;		None
 20651 ;; Auto vars:     Size  Location     Type
 20652 ;;  payload         3    1[BANK0 ] unsigned char [3]
 20653 ;;  button          1    0[BANK0 ] unsigned char 
 20654 ;; Return value:  Size  Location     Type
 20655 ;;                  1    wreg      void 
 20656 ;; Registers used:
 20657 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20658 ;; Tracked objects:
 20659 ;;		On entry : 0/0
 20660 ;;		On exit  : 0/0
 20661 ;;		Unchanged: 0/0
 20662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20664 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20666 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20667 ;;Total ram usage:        4 bytes
 20668 ;; Hardware stack levels used: 1
 20669 ;; Hardware stack levels required when called: 7
 20670 ;; This function calls:
 20671 ;;		_LIGHTBLUE_GetButtonValue
 20672 ;;		_LIGHTBLUE_SendPacket
 20673 ;;		_LIGHTBLUE_SplitByte
 20674 ;; This function is called by:
 20675 ;;		_main
 20676 ;; This function uses a non-reentrant model
 20677 ;;
 20678                           
 20679     117C                     _LIGHTBLUE_PushButton:	
 20680                           ;psect for function _LIGHTBLUE_PushButton
 20681                           
 20682     117C                     l14382:	
 20683                           ;incstack = 0
 20684                           ; Regs used in _LIGHTBLUE_PushButton: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20685                           
 20686                           
 20687                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 343:     char payload[3];;mcc_gene
      +                          rated_files/application/LIGHTBLUE_service.c: 344:     uint8_t button = LIGHTBLUE_GetButt
      +                          onValue();
 20688     117C  319F  2703  3191   	fcall	_LIGHTBLUE_GetButtonValue
 20689     117F  0140               	movlb	0	; select bank0
 20690     1180  00A0               	movwf	LIGHTBLUE_PushButton@button
 20691     1181                     l14384:
 20692                           
 20693                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 346:     *payload = '\0';
 20694     1181  01A1               	clrf	LIGHTBLUE_PushButton@payload
 20695     1182                     l14386:
 20696                           
 20697                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 347:     LIGHTBLUE_SplitByte(paylo
      +                          ad, button);
 20698     1182  0820               	movf	LIGHTBLUE_PushButton@button,w
 20699     1183  00F6               	movwf	LIGHTBLUE_SplitByte@value
 20700     1184  3021               	movlw	(low (LIGHTBLUE_PushButton@payload| 0))& (0+255)
 20701     1185  3196  26C4  3191   	fcall	_LIGHTBLUE_SplitByte
 20702     1188                     l14388:
 20703                           
 20704                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 349:     LIGHTBLUE_SendPacket(BUTT
      +                          ON_STATE_ID, payload);
 20705     1188  3021               	movlw	(low (LIGHTBLUE_PushButton@payload| 0))& (0+255)
 20706     1189  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 20707     118A  3050               	movlw	80
 20708     118B  318E  26D9  3191   	fcall	_LIGHTBLUE_SendPacket
 20709     118E                     l130:
 20710     118E  0008               	return
 20711     118F                     __end_of_LIGHTBLUE_PushButton:
 20712                           
 20713                           	psect	text68
 20714     1F03                     __ptext68:	
 20715 ;; *************** function _LIGHTBLUE_GetButtonValue *****************
 20716 ;; Defined at:
 20717 ;;		line 475 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20718 ;; Parameters:    Size  Location     Type
 20719 ;;		None
 20720 ;; Auto vars:     Size  Location     Type
 20721 ;;		None
 20722 ;; Return value:  Size  Location     Type
 20723 ;;                  1    wreg      unsigned char 
 20724 ;; Registers used:
 20725 ;;		wreg, status,2, status,0
 20726 ;; Tracked objects:
 20727 ;;		On entry : 0/0
 20728 ;;		On exit  : 0/0
 20729 ;;		Unchanged: 0/0
 20730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20735 ;;Total ram usage:        0 bytes
 20736 ;; Hardware stack levels used: 1
 20737 ;; Hardware stack levels required when called: 4
 20738 ;; This function calls:
 20739 ;;		Nothing
 20740 ;; This function is called by:
 20741 ;;		_LIGHTBLUE_PushButton
 20742 ;; This function uses a non-reentrant model
 20743 ;;
 20744                           
 20745     1F03                     _LIGHTBLUE_GetButtonValue:	
 20746                           ;psect for function _LIGHTBLUE_GetButtonValue
 20747                           
 20748     1F03                     l13656:	
 20749                           ;incstack = 0
 20750                           ; Regs used in _LIGHTBLUE_GetButtonValue: [wreg+status,2+status,0]
 20751                           
 20752                           
 20753                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 476:     return (0x01) - PORTAbits
      +                          .RA7;
 20754     1F03  0140               	movlb	0	; select bank0
 20755     1F04  0D0C               	rlf	12,w	;volatile
 20756     1F05  0D0C               	rlf	12,w	;volatile
 20757     1F06  3901               	andlw	1
 20758     1F07  3C01               	sublw	1
 20759     1F08                     l202:
 20760     1F08  0008               	return
 20761     1F09                     __end_of_LIGHTBLUE_GetButtonValue:
 20762                           
 20763                           	psect	text69
 20764     04BE                     __ptext69:	
 20765 ;; *************** function _LIGHTBLUE_ParseIncomingPacket *****************
 20766 ;; Defined at:
 20767 ;;		line 400 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20768 ;; Parameters:    Size  Location     Type
 20769 ;;  receivedByte    1    wreg     unsigned char 
 20770 ;; Auto vars:     Size  Location     Type
 20771 ;;  receivedByte    1   19[BANK0 ] unsigned char 
 20772 ;; Return value:  Size  Location     Type
 20773 ;;                  1    wreg      void 
 20774 ;; Registers used:
 20775 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20776 ;; Tracked objects:
 20777 ;;		On entry : 0/0
 20778 ;;		On exit  : 0/0
 20779 ;;		Unchanged: 0/0
 20780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20782 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20783 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20784 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20785 ;;Total ram usage:        9 bytes
 20786 ;; Hardware stack levels used: 1
 20787 ;; Hardware stack levels required when called: 11
 20788 ;; This function calls:
 20789 ;;		_LIGHTBLUE_PerformAction
 20790 ;; This function is called by:
 20791 ;;		_main
 20792 ;; This function uses a non-reentrant model
 20793 ;;
 20794                           
 20795     04BE                     _LIGHTBLUE_ParseIncomingPacket:	
 20796                           ;psect for function _LIGHTBLUE_ParseIncomingPacket
 20797                           
 20798                           
 20799                           ;incstack = 0
 20800                           ; Regs used in _LIGHTBLUE_ParseIncomingPacket: [wreg-fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 20801                           ;LIGHTBLUE_ParseIncomingPacket@receivedByte stored from wreg
 20802     04BE  0140               	movlb	0	; select bank0
 20803     04BF  00B3               	movwf	LIGHTBLUE_ParseIncomingPacket@receivedByte
 20804     04C0                     l14438:
 20805                           
 20806                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 401:     static PACKET_PARSER_STAT
      +                          E_t parserState = IDLE;;mcc_generated_files/application/LIGHTBLUE_service.c: 402:     st
      +                          atic uint8_t length = 0;;mcc_generated_files/application/LIGHTBLUE_service.c: 403:     s
      +                          tatic uint16_t data = 0;;mcc_generated_files/application/LIGHTBLUE_service.c: 404:     s
      +                          tatic char packetID = '\0';;mcc_generated_files/application/LIGHTBLUE_service.c: 406:   
      +                            switch (parserState) {
 20807     04C0  2D75               	goto	l14498
 20808     04C1                     l14440:
 20809                           
 20810                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 409:             parserState = PAC
      +                          KET_ID;
 20811     04C1  3002               	movlw	2
 20812     04C2  00ED               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 20813                           
 20814                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 410:             break;
 20815     04C3  2D94               	goto	l187
 20816     04C4                     l14442:
 20817                           
 20818                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 412:             packetID = receiv
      +                          edByte;
 20819     04C4  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20820     04C5  00EB               	movwf	LIGHTBLUE_ParseIncomingPacket@packetID
 20821                           
 20822                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 413:             parserState = PAY
      +                          LOAD_SIZE_0;
 20823     04C6  3003               	movlw	3
 20824     04C7  00ED               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 20825                           
 20826                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 414:             break;
 20827     04C8  2D94               	goto	l187
 20828     04C9                     l14444:
 20829                           
 20830                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 416:             length = (((recei
      +                          vedByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 10);
 20831     04C9  303A               	movlw	58
 20832     04CA  0233               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20833     04CB  1C03               	skipc
 20834     04CC  2CCE               	goto	u11441
 20835     04CD  2CCF               	goto	u11440
 20836     04CE                     u11441:
 20837     04CE  2CD8               	goto	l14448
 20838     04CF                     u11440:
 20839     04CF                     l14446:
 20840     04CF  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20841     04D0  395F               	andlw	95
 20842     04D1  3EC9               	addlw	201
 20843     04D2  00AD               	movwf	_LIGHTBLUE_ParseIncomingPacket$431
 20844     04D3  30FF               	movlw	255
 20845     04D4  1803               	skipnc
 20846     04D5  3000               	movlw	0
 20847     04D6  00AE               	movwf	_LIGHTBLUE_ParseIncomingPacket$431+1
 20848     04D7  2CDF               	goto	l164
 20849     04D8                     l14448:
 20850     04D8  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20851     04D9  3ED0               	addlw	208
 20852     04DA  00AD               	movwf	_LIGHTBLUE_ParseIncomingPacket$431
 20853     04DB  30FF               	movlw	255
 20854     04DC  1803               	skipnc
 20855     04DD  3000               	movlw	0
 20856     04DE  00AE               	movwf	_LIGHTBLUE_ParseIncomingPacket$431+1
 20857     04DF                     l164:
 20858     04DF  082D               	movf	_LIGHTBLUE_ParseIncomingPacket$431,w
 20859     04E0  00EC               	movwf	LIGHTBLUE_ParseIncomingPacket@length
 20860                           
 20861                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 417:             parserState = PAY
      +                          LOAD_SIZE_1;
 20862     04E1  3004               	movlw	4
 20863     04E2  00ED               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 20864                           
 20865                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 418:             break;
 20866     04E3  2D94               	goto	l187
 20867     04E4                     l14450:
 20868                           
 20869                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 420:             length = (length 
      +                          << 4) + (((receivedByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 
      +                          10);
 20870     04E4  303A               	movlw	58
 20871     04E5  0233               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20872     04E6  1C03               	skipc
 20873     04E7  2CE9               	goto	u11451
 20874     04E8  2CEA               	goto	u11450
 20875     04E9                     u11451:
 20876     04E9  2CF3               	goto	l14454
 20877     04EA                     u11450:
 20878     04EA                     l14452:
 20879     04EA  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20880     04EB  395F               	andlw	95
 20881     04EC  3EC9               	addlw	201
 20882     04ED  00AF               	movwf	_LIGHTBLUE_ParseIncomingPacket$432
 20883     04EE  30FF               	movlw	255
 20884     04EF  1803               	skipnc
 20885     04F0  3000               	movlw	0
 20886     04F1  00B0               	movwf	_LIGHTBLUE_ParseIncomingPacket$432+1
 20887     04F2  2CFA               	goto	l14456
 20888     04F3                     l14454:
 20889     04F3  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20890     04F4  3ED0               	addlw	208
 20891     04F5  00AF               	movwf	_LIGHTBLUE_ParseIncomingPacket$432
 20892     04F6  30FF               	movlw	255
 20893     04F7  1803               	skipnc
 20894     04F8  3000               	movlw	0
 20895     04F9  00B0               	movwf	_LIGHTBLUE_ParseIncomingPacket$432+1
 20896     04FA                     l14456:
 20897     04FA  086C               	movf	LIGHTBLUE_ParseIncomingPacket@length,w
 20898     04FB  00AB               	movwf	??_LIGHTBLUE_ParseIncomingPacket
 20899     04FC  3003               	movlw	3
 20900     04FD                     u11465:
 20901     04FD  35AB               	lslf	??_LIGHTBLUE_ParseIncomingPacket,f
 20902     04FE  3EFF               	addlw	-1
 20903     04FF  1D03               	skipz
 20904     0500  2CFD               	goto	u11465
 20905     0501  352B               	lslf	??_LIGHTBLUE_ParseIncomingPacket,w
 20906     0502  072F               	addwf	_LIGHTBLUE_ParseIncomingPacket$432,w
 20907     0503  00EC               	movwf	LIGHTBLUE_ParseIncomingPacket@length
 20908     0504                     l14458:
 20909                           
 20910                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 421:             parserState = PAY
      +                          LOAD_0;
 20911     0504  3005               	movlw	5
 20912     0505  00ED               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 20913                           
 20914                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 422:             break;
 20915     0506  2D94               	goto	l187
 20916     0507                     l14460:
 20917                           
 20918                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 424:             data = (((receive
      +                          dByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 10);
 20919     0507  303A               	movlw	58
 20920     0508  0233               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20921     0509  1C03               	skipc
 20922     050A  2D0C               	goto	u11471
 20923     050B  2D0D               	goto	u11470
 20924     050C                     u11471:
 20925     050C  2D17               	goto	l14464
 20926     050D                     u11470:
 20927     050D                     l14462:
 20928     050D  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20929     050E  395F               	andlw	95
 20930     050F  3EC9               	addlw	201
 20931     0510  0141               	movlb	1	; select bank1
 20932     0511  00E4               	movwf	LIGHTBLUE_ParseIncomingPacket@data^(0+128)
 20933     0512  30FF               	movlw	255
 20934     0513  1803               	skipnc
 20935     0514  3000               	movlw	0
 20936     0515  00E5               	movwf	(LIGHTBLUE_ParseIncomingPacket@data^(0+128)+1)
 20937     0516  2D1F               	goto	l14466
 20938     0517                     l14464:
 20939     0517  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20940     0518  3ED0               	addlw	208
 20941     0519  0141               	movlb	1	; select bank1
 20942     051A  00E4               	movwf	LIGHTBLUE_ParseIncomingPacket@data^(0+128)
 20943     051B  30FF               	movlw	255
 20944     051C  1803               	skipnc
 20945     051D  3000               	movlw	0
 20946     051E  00E5               	movwf	(LIGHTBLUE_ParseIncomingPacket@data^(0+128)+1)
 20947     051F                     l14466:
 20948                           
 20949                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 425:             length--;
 20950     051F  3001               	movlw	1
 20951     0520  0140               	movlb	0	; select bank0
 20952     0521  02EC               	subwf	LIGHTBLUE_ParseIncomingPacket@length,f
 20953     0522                     l14468:
 20954                           
 20955                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 426:             if (length == 0) 
      +                          {
 20956     0522  086C               	movf	LIGHTBLUE_ParseIncomingPacket@length,w
 20957     0523  1D03               	btfss	3,2
 20958     0524  2D26               	goto	u11481
 20959     0525  2D27               	goto	u11480
 20960     0526                     u11481:
 20961     0526  2D29               	goto	l14472
 20962     0527                     u11480:
 20963     0527                     l14470:
 20964                           
 20965                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 427:                 parserState =
      +                           IDLE;
 20966     0527  01ED               	clrf	LIGHTBLUE_ParseIncomingPacket@parserState
 20967                           
 20968                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 428:             } else {
 20969     0528  2D94               	goto	l187
 20970     0529                     l14472:
 20971                           
 20972                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 429:                 parserState =
      +                           PAYLOAD_1;
 20973     0529  3006               	movlw	6
 20974     052A  00ED               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 20975     052B  2D94               	goto	l187
 20976     052C                     l14474:
 20977                           
 20978                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 433:             data = (data << 4
      +                          ) + (((receivedByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 10);
 20979     052C  303A               	movlw	58
 20980     052D  0233               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20981     052E  1C03               	skipc
 20982     052F  2D31               	goto	u11491
 20983     0530  2D32               	goto	u11490
 20984     0531                     u11491:
 20985     0531  2D3B               	goto	l14478
 20986     0532                     u11490:
 20987     0532                     l14476:
 20988     0532  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20989     0533  395F               	andlw	95
 20990     0534  3EC9               	addlw	201
 20991     0535  00B1               	movwf	_LIGHTBLUE_ParseIncomingPacket$433
 20992     0536  30FF               	movlw	255
 20993     0537  1803               	skipnc
 20994     0538  3000               	movlw	0
 20995     0539  00B2               	movwf	_LIGHTBLUE_ParseIncomingPacket$433+1
 20996     053A  2D42               	goto	l14480
 20997     053B                     l14478:
 20998     053B  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20999     053C  3ED0               	addlw	208
 21000     053D  00B1               	movwf	_LIGHTBLUE_ParseIncomingPacket$433
 21001     053E  30FF               	movlw	255
 21002     053F  1803               	skipnc
 21003     0540  3000               	movlw	0
 21004     0541  00B2               	movwf	_LIGHTBLUE_ParseIncomingPacket$433+1
 21005     0542                     l14480:
 21006     0542  0141               	movlb	1	; select bank1
 21007     0543  0865               	movf	(LIGHTBLUE_ParseIncomingPacket@data+1)^(0+128),w
 21008     0544  0140               	movlb	0	; select bank0
 21009     0545  00AC               	movwf	??_LIGHTBLUE_ParseIncomingPacket+1
 21010     0546  0141               	movlb	1	; select bank1
 21011     0547  0864               	movf	LIGHTBLUE_ParseIncomingPacket@data^(0+128),w
 21012     0548  0140               	movlb	0	; select bank0
 21013     0549  00AB               	movwf	??_LIGHTBLUE_ParseIncomingPacket
 21014     054A  0EAB               	swapf	??_LIGHTBLUE_ParseIncomingPacket,f
 21015     054B  0EAC               	swapf	??_LIGHTBLUE_ParseIncomingPacket+1,f
 21016     054C  30F0               	movlw	240
 21017     054D  05AC               	andwf	??_LIGHTBLUE_ParseIncomingPacket+1,f
 21018     054E  082B               	movf	??_LIGHTBLUE_ParseIncomingPacket,w
 21019     054F  390F               	andlw	15
 21020     0550  04AC               	iorwf	??_LIGHTBLUE_ParseIncomingPacket+1,f
 21021     0551  30F0               	movlw	240
 21022     0552  05AB               	andwf	??_LIGHTBLUE_ParseIncomingPacket,f
 21023     0553  0831               	movf	_LIGHTBLUE_ParseIncomingPacket$433,w
 21024     0554  072B               	addwf	??_LIGHTBLUE_ParseIncomingPacket,w
 21025     0555  0141               	movlb	1	; select bank1
 21026     0556  00E4               	movwf	LIGHTBLUE_ParseIncomingPacket@data^(0+128)
 21027     0557  0140               	movlb	0	; select bank0
 21028     0558  0832               	movf	_LIGHTBLUE_ParseIncomingPacket$433+1,w
 21029     0559  3D2C               	addwfc	??_LIGHTBLUE_ParseIncomingPacket+1,w
 21030     055A  0141               	movlb	1	; select bank1
 21031     055B  00E5               	movwf	(LIGHTBLUE_ParseIncomingPacket@data+1)^(0+128)
 21032     055C                     l14482:
 21033                           
 21034                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 434:             LIGHTBLUE_Perform
      +                          Action(packetID, data);
 21035     055C  0864               	movf	LIGHTBLUE_ParseIncomingPacket@data^(0+128),w
 21036     055D  0140               	movlb	0	; select bank0
 21037     055E  00A7               	movwf	LIGHTBLUE_PerformAction@data
 21038     055F  086B               	movf	LIGHTBLUE_ParseIncomingPacket@packetID,w
 21039     0560  3188  2025  3184   	fcall	_LIGHTBLUE_PerformAction
 21040     0563                     l14484:
 21041                           
 21042                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 435:             length--;
 21043     0563  3001               	movlw	1
 21044     0564  0140               	movlb	0	; select bank0
 21045     0565  02EC               	subwf	LIGHTBLUE_ParseIncomingPacket@length,f
 21046     0566                     l14486:
 21047                           
 21048                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 436:             if (length == 0) 
      +                          {
 21049     0566  086C               	movf	LIGHTBLUE_ParseIncomingPacket@length,w
 21050     0567  1D03               	btfss	3,2
 21051     0568  2D6A               	goto	u11501
 21052     0569  2D6B               	goto	u11500
 21053     056A                     u11501:
 21054     056A  2D04               	goto	l14458
 21055     056B                     u11500:
 21056     056B  2D27               	goto	l14470
 21057     056C                     l14492:
 21058                           
 21059                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 444:             if (receivedByte 
      +                          == ('[')) {
 21060     056C  305B               	movlw	91
 21061     056D  0633               	xorwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 21062     056E  1D03               	btfss	3,2
 21063     056F  2D71               	goto	u11511
 21064     0570  2D72               	goto	u11510
 21065     0571                     u11511:
 21066     0571  2D94               	goto	l187
 21067     0572                     u11510:
 21068     0572                     l14494:
 21069                           
 21070                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 445:                 parserState =
      +                           SEQUENCE_NUMBER;
 21071     0572  01ED               	clrf	LIGHTBLUE_ParseIncomingPacket@parserState
 21072     0573  0AED               	incf	LIGHTBLUE_ParseIncomingPacket@parserState,f
 21073     0574  2D94               	goto	l187
 21074     0575                     l14498:
 21075     0575  086D               	movf	LIGHTBLUE_ParseIncomingPacket@parserState,w
 21076     0576  00AB               	movwf	??_LIGHTBLUE_ParseIncomingPacket
 21077     0577  01AC               	clrf	??_LIGHTBLUE_ParseIncomingPacket+1
 21078                           
 21079                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21080                           ; Switch size 1, requested type "simple"
 21081                           ; Number of cases is 1, Range of values is 0 to 0
 21082                           ; switch strategies available:
 21083                           ; Name         Instructions Cycles
 21084                           ; simple_byte            4     3 (average)
 21085                           ; direct_byte            8     6 (fixed)
 21086                           ; jumptable            260     6 (fixed)
 21087                           ;	Chosen strategy is simple_byte
 21088     0578  082C               	movf	??_LIGHTBLUE_ParseIncomingPacket+1,w
 21089     0579  3A00               	xorlw	0	; case 0
 21090     057A  1903               	skipnz
 21091     057B  2D7D               	goto	l16608
 21092     057C  2D6C               	goto	l14492
 21093     057D                     l16608:
 21094                           
 21095                           ; Switch size 1, requested type "simple"
 21096                           ; Number of cases is 7, Range of values is 0 to 6
 21097                           ; switch strategies available:
 21098                           ; Name         Instructions Cycles
 21099                           ; direct_byte           20     6 (fixed)
 21100                           ; simple_byte           22    12 (average)
 21101                           ; jumptable            260     6 (fixed)
 21102                           ;	Chosen strategy is simple_byte
 21103     057D  082B               	movf	??_LIGHTBLUE_ParseIncomingPacket,w
 21104     057E  3A00               	xorlw	0	; case 0
 21105     057F  1903               	skipnz
 21106     0580  2D6C               	goto	l14492
 21107     0581  3A01               	xorlw	1	; case 1
 21108     0582  1903               	skipnz
 21109     0583  2CC1               	goto	l14440
 21110     0584  3A03               	xorlw	3	; case 2
 21111     0585  1903               	skipnz
 21112     0586  2CC4               	goto	l14442
 21113     0587  3A01               	xorlw	1	; case 3
 21114     0588  1903               	skipnz
 21115     0589  2CC9               	goto	l14444
 21116     058A  3A07               	xorlw	7	; case 4
 21117     058B  1903               	skipnz
 21118     058C  2CE4               	goto	l14450
 21119     058D  3A01               	xorlw	1	; case 5
 21120     058E  1903               	skipnz
 21121     058F  2D07               	goto	l14460
 21122     0590  3A03               	xorlw	3	; case 6
 21123     0591  1903               	skipnz
 21124     0592  2D2C               	goto	l14474
 21125     0593  2D6C               	goto	l14492
 21126     0594                     l187:
 21127     0594  0008               	return
 21128     0595                     __end_of_LIGHTBLUE_ParseIncomingPacket:
 21129                           
 21130                           	psect	text70
 21131     0825                     __ptext70:	
 21132 ;; *************** function _LIGHTBLUE_PerformAction *****************
 21133 ;; Defined at:
 21134 ;;		line 499 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 21135 ;; Parameters:    Size  Location     Type
 21136 ;;  id              1    wreg     unsigned char 
 21137 ;;  data            1    7[BANK0 ] unsigned char 
 21138 ;; Auto vars:     Size  Location     Type
 21139 ;;  id              1    9[BANK0 ] unsigned char 
 21140 ;;  led             1   10[BANK0 ] unsigned char 
 21141 ;; Return value:  Size  Location     Type
 21142 ;;                  1    wreg      void 
 21143 ;; Registers used:
 21144 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21145 ;; Tracked objects:
 21146 ;;		On entry : 0/0
 21147 ;;		On exit  : 0/0
 21148 ;;		Unchanged: 0/0
 21149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21150 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21151 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21152 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21153 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21154 ;;Total ram usage:        4 bytes
 21155 ;; Hardware stack levels used: 1
 21156 ;; Hardware stack levels required when called: 10
 21157 ;; This function calls:
 21158 ;;		_EUSART1_Write
 21159 ;;		_EUSART2_Write
 21160 ;;		_LIGHTBLUE_SetErrorLedValue
 21161 ;; This function is called by:
 21162 ;;		_LIGHTBLUE_ParseIncomingPacket
 21163 ;; This function uses a non-reentrant model
 21164 ;;
 21165                           
 21166     0825                     _LIGHTBLUE_PerformAction:	
 21167                           ;psect for function _LIGHTBLUE_PerformAction
 21168                           
 21169                           
 21170                           ;incstack = 0
 21171                           ; Regs used in _LIGHTBLUE_PerformAction: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21172                           ;LIGHTBLUE_PerformAction@id stored from wreg
 21173     0825  0140               	movlb	0	; select bank0
 21174     0826  00A9               	movwf	LIGHTBLUE_PerformAction@id
 21175     0827                     l13668:
 21176                           
 21177                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 500:     uint8_t led;;mcc_generate
      +                          d_files/application/LIGHTBLUE_service.c: 502:     switch (id) {
 21178     0827  2854               	goto	l13680
 21179     0828                     l13670:
 21180                           
 21181                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 504:             led = (data >> 4)
      +                           & (0x01);
 21182     0828  0827               	movf	LIGHTBLUE_PerformAction@data,w
 21183     0829  00A8               	movwf	??_LIGHTBLUE_PerformAction
 21184     082A  3004               	movlw	4
 21185     082B                     u10415:
 21186     082B  36A8               	lsrf	??_LIGHTBLUE_PerformAction,f
 21187     082C  0B89               	decfsz	9,f
 21188     082D  282B               	goto	u10415
 21189     082E  0828               	movf	??_LIGHTBLUE_PerformAction,w
 21190     082F  3901               	andlw	1
 21191     0830  00AA               	movwf	LIGHTBLUE_PerformAction@led
 21192                           
 21193                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 505:             if (led == (0x00)
      +                          ) {
 21194     0831  082A               	movf	LIGHTBLUE_PerformAction@led,w
 21195     0832  1D03               	btfss	3,2
 21196     0833  2835               	goto	u10421
 21197     0834  2836               	goto	u10420
 21198     0835                     u10421:
 21199     0835  283E               	goto	l13674
 21200     0836                     u10420:
 21201     0836                     l13672:
 21202                           
 21203                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 506:                 if ((data & (
      +                          0x01)) == (0x00)) {
 21204     0836  1827               	btfsc	LIGHTBLUE_PerformAction@data,0
 21205     0837  2839               	goto	u10431
 21206     0838  283A               	goto	u10430
 21207     0839                     u10431:
 21208     0839  283C               	goto	l224
 21209     083A                     u10430:
 21210     083A                     l221:	
 21211                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 507:                     do { LATA
      +                          bits.LATA5 = 1; } while(0);
 21212                           
 21213     083A  1698               	bsf	24,5	;volatile
 21214     083B  285C               	goto	l230
 21215     083C                     l224:	
 21216                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 509:                     do { LATA
      +                          bits.LATA5 = 0; } while(0);
 21217                           
 21218     083C  1298               	bcf	24,5	;volatile
 21219     083D  285C               	goto	l230
 21220     083E                     l13674:
 21221                           
 21222                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 512:                 LIGHTBLUE_Set
      +                          ErrorLedValue(data & (0x01));
 21223     083E  1827               	btfsc	LIGHTBLUE_PerformAction@data,0
 21224     083F  2841               	goto	u10441
 21225     0840  2843               	goto	u10440
 21226     0841                     u10441:
 21227     0841  3001               	movlw	1
 21228     0842  2844               	goto	u10450
 21229     0843                     u10440:
 21230     0843  3000               	movlw	0
 21231     0844                     u10450:
 21232     0844  3190  20A2  3188   	fcall	_LIGHTBLUE_SetErrorLedValue
 21233     0847  285C               	goto	l230
 21234     0848                     l13676:
 21235                           
 21236                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 516:             uart[UART_CDC].Wr
      +                          ite(data);
 21237     0848  0827               	movf	LIGHTBLUE_PerformAction@data,w
 21238     0849  00F1               	movwf	EUSART2_Write@txData
 21239     084A  3002               	movlw	low ((_uart+2)| (0+32768))
 21240     084B  0084               	movwf	4
 21241     084C  3098               	movlw	high ((_uart+2)| (0+32768))
 21242     084D  0085               	movwf	5
 21243     084E  3F01               	moviw [1]fsr0
 21244     084F  008A               	movwf	10
 21245     0850  3F00               	moviw [0]fsr0
 21246     0851  000A               	callw
 21247     0852  3188               	pagesel	$
 21248                           
 21249                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 517:             break;
 21250     0853  285C               	goto	l230
 21251     0854                     l13680:
 21252     0854  0829               	movf	LIGHTBLUE_PerformAction@id,w
 21253                           
 21254                           ; Switch size 1, requested type "simple"
 21255                           ; Number of cases is 2, Range of values is 76 to 83
 21256                           ; switch strategies available:
 21257                           ; Name         Instructions Cycles
 21258                           ; simple_byte            7     4 (average)
 21259                           ; direct_byte           25     9 (fixed)
 21260                           ; jumptable            263     9 (fixed)
 21261                           ;	Chosen strategy is simple_byte
 21262     0855  3A4C               	xorlw	76	; case 76
 21263     0856  1903               	skipnz
 21264     0857  2828               	goto	l13670
 21265     0858  3A1F               	xorlw	31	; case 83
 21266     0859  1903               	skipnz
 21267     085A  2848               	goto	l13676
 21268     085B  285C               	goto	l230
 21269     085C                     l230:
 21270     085C  0008               	return
 21271     085D                     __end_of_LIGHTBLUE_PerformAction:
 21272                           
 21273                           	psect	text71
 21274     10A2                     __ptext71:	
 21275 ;; *************** function _LIGHTBLUE_SetErrorLedValue *****************
 21276 ;; Defined at:
 21277 ;;		line 487 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 21278 ;; Parameters:    Size  Location     Type
 21279 ;;  value           1    wreg     _Bool 
 21280 ;; Auto vars:     Size  Location     Type
 21281 ;;  value           1    6[BANK0 ] _Bool 
 21282 ;; Return value:  Size  Location     Type
 21283 ;;                  1    wreg      void 
 21284 ;; Registers used:
 21285 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21286 ;; Tracked objects:
 21287 ;;		On entry : 0/0
 21288 ;;		On exit  : 0/0
 21289 ;;		Unchanged: 0/0
 21290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21292 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21293 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21294 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21295 ;;Total ram usage:        2 bytes
 21296 ;; Hardware stack levels used: 1
 21297 ;; Hardware stack levels required when called: 9
 21298 ;; This function calls:
 21299 ;;		_LIGHTBLUE_UpdateErrorLed
 21300 ;; This function is called by:
 21301 ;;		_LIGHTBLUE_PerformAction
 21302 ;; This function uses a non-reentrant model
 21303 ;;
 21304                           
 21305     10A2                     _LIGHTBLUE_SetErrorLedValue:	
 21306                           ;psect for function _LIGHTBLUE_SetErrorLedValue
 21307                           
 21308                           
 21309                           ;incstack = 0
 21310                           ; Regs used in _LIGHTBLUE_SetErrorLedValue: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21311                           ;LIGHTBLUE_SetErrorLedValue@value stored from wreg
 21312     10A2  0140               	movlb	0	; select bank0
 21313     10A3  00A6               	movwf	LIGHTBLUE_SetErrorLedValue@value
 21314     10A4                     l13516:
 21315                           
 21316                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 488:     (bitMap.ioStateBitMap.p2_
      +                          2_state) = (0x01) - value;
 21317     10A4  3001               	movlw	1
 21318     10A5  00FB               	movwf	??_LIGHTBLUE_SetErrorLedValue
 21319     10A6  0826               	movf	LIGHTBLUE_SetErrorLedValue@value,w
 21320     10A7  02FB               	subwf	??_LIGHTBLUE_SetErrorLedValue,f
 21321     10A8  0850               	movf	_bitMap+1,w	;volatile
 21322     10A9  067B               	xorwf	??_LIGHTBLUE_SetErrorLedValue,w
 21323     10AA  39FE               	andlw	-2
 21324     10AB  067B               	xorwf	??_LIGHTBLUE_SetErrorLedValue,w
 21325     10AC  00D0               	movwf	_bitMap+1	;volatile
 21326     10AD                     l13518:
 21327                           
 21328                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 489:     LIGHTBLUE_UpdateErrorLed(
      +                          );
 21329     10AD  3193  2391  3190   	fcall	_LIGHTBLUE_UpdateErrorLed
 21330     10B0                     l211:
 21331     10B0  0008               	return
 21332     10B1                     __end_of_LIGHTBLUE_SetErrorLedValue:
 21333                           
 21334                           	psect	text72
 21335     1391                     __ptext72:	
 21336 ;; *************** function _LIGHTBLUE_UpdateErrorLed *****************
 21337 ;; Defined at:
 21338 ;;		line 492 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 21339 ;; Parameters:    Size  Location     Type
 21340 ;;		None
 21341 ;; Auto vars:     Size  Location     Type
 21342 ;;		None
 21343 ;; Return value:  Size  Location     Type
 21344 ;;                  1    wreg      void 
 21345 ;; Registers used:
 21346 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21347 ;; Tracked objects:
 21348 ;;		On entry : 0/0
 21349 ;;		On exit  : 0/0
 21350 ;;		Unchanged: 0/0
 21351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21356 ;;Total ram usage:        0 bytes
 21357 ;; Hardware stack levels used: 1
 21358 ;; Hardware stack levels required when called: 8
 21359 ;; This function calls:
 21360 ;;		_RN487X_Delay
 21361 ;;		_RN487X_EnterCmdMode
 21362 ;;		_RN487X_EnterDataMode
 21363 ;;		_RN487X_SetOutputs
 21364 ;; This function is called by:
 21365 ;;		_LIGHTBLUE_SetErrorLedValue
 21366 ;; This function uses a non-reentrant model
 21367 ;;
 21368                           
 21369     1391                     _LIGHTBLUE_UpdateErrorLed:	
 21370                           ;psect for function _LIGHTBLUE_UpdateErrorLed
 21371                           
 21372     1391                     l13412:	
 21373                           ;incstack = 0
 21374                           ; Regs used in _LIGHTBLUE_UpdateErrorLed: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21375                           
 21376                           
 21377                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 493:     RN487X_EnterCmdMode();
 21378     1391  3192  224E  3193   	fcall	_RN487X_EnterCmdMode
 21379     1394                     l13414:
 21380                           
 21381                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 494:     RN487X.DelayMs((20));
 21382     1394  3014               	movlw	20
 21383     1395  00F4               	movwf	RN487X_Delay@delayCount
 21384     1396  3000               	movlw	0
 21385     1397  00F5               	movwf	RN487X_Delay@delayCount+1
 21386     1398  3076               	movlw	low ((_RN487X+14)| (0+32768))
 21387     1399  0084               	movwf	4
 21388     139A  3098               	movlw	high ((_RN487X+14)| (0+32768))
 21389     139B  0085               	movwf	5
 21390     139C  3F01               	moviw [1]fsr0
 21391     139D  008A               	movwf	10
 21392     139E  3F00               	moviw [0]fsr0
 21393     139F  000A               	callw
 21394     13A0  3193               	pagesel	$
 21395     13A1                     l13416:
 21396                           
 21397                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 495:     RN487X_SetOutputs(bitMap)
      +                          ;
 21398     13A1  0140               	movlb	0	; select bank0
 21399     13A2  0850               	movf	_bitMap+1,w	;volatile
 21400     13A3  00A1               	movwf	RN487X_SetOutputs@bitMap+1
 21401     13A4  084F               	movf	_bitMap,w	;volatile
 21402     13A5  00A0               	movwf	RN487X_SetOutputs@bitMap
 21403     13A6  318A  2289  3193   	fcall	_RN487X_SetOutputs
 21404     13A9                     l13418:
 21405                           
 21406                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 496:     RN487X_EnterDataMode();
 21407     13A9  3193  2376  3193   	fcall	_RN487X_EnterDataMode
 21408     13AC                     l214:
 21409     13AC  0008               	return
 21410     13AD                     __end_of_LIGHTBLUE_UpdateErrorLed:
 21411                           
 21412                           	psect	text73
 21413     0A89                     __ptext73:	
 21414 ;; *************** function _RN487X_SetOutputs *****************
 21415 ;; Defined at:
 21416 ;;		line 223 in file "mcc_generated_files/rn487x/rn487x.c"
 21417 ;; Parameters:    Size  Location     Type
 21418 ;;  bitMap          2    0[BANK0 ] struct .
 21419 ;; Auto vars:     Size  Location     Type
 21420 ;;  stateHighNib    1    5[BANK0 ] unsigned char 
 21421 ;;  ioHighNibble    1    4[BANK0 ] unsigned char 
 21422 ;;  stateLowNibb    1    3[BANK0 ] unsigned char 
 21423 ;;  ioLowNibble     1    2[BANK0 ] unsigned char 
 21424 ;; Return value:  Size  Location     Type
 21425 ;;                  1    wreg      _Bool 
 21426 ;; Registers used:
 21427 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21428 ;; Tracked objects:
 21429 ;;		On entry : 0/0
 21430 ;;		On exit  : 0/0
 21431 ;;		Unchanged: 0/0
 21432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21433 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21434 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21436 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21437 ;;Total ram usage:        6 bytes
 21438 ;; Hardware stack levels used: 1
 21439 ;; Hardware stack levels required when called: 7
 21440 ;; This function calls:
 21441 ;;		_RN487X_ReadDefaultResponse
 21442 ;;		_RN487X_SendCmd
 21443 ;; This function is called by:
 21444 ;;		_LIGHTBLUE_UpdateErrorLed
 21445 ;; This function uses a non-reentrant model
 21446 ;;
 21447                           
 21448     0A89                     _RN487X_SetOutputs:	
 21449                           ;psect for function _RN487X_SetOutputs
 21450                           
 21451     0A89                     l13282:	
 21452                           ;incstack = 0
 21453                           ; Regs used in _RN487X_SetOutputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21454                           
 21455                           
 21456                           ;mcc_generated_files/rn487x/rn487x.c: 226:     char ioLowNibble = '0';
 21457     0A89  3030               	movlw	48
 21458     0A8A  0140               	movlb	0	; select bank0
 21459     0A8B  00A2               	movwf	RN487X_SetOutputs@ioLowNibble
 21460                           
 21461                           ;mcc_generated_files/rn487x/rn487x.c: 227:     char stateHighNibble = '0';
 21462     0A8C  3030               	movlw	48
 21463     0A8D  00A5               	movwf	RN487X_SetOutputs@stateHighNibble
 21464                           
 21465                           ;mcc_generated_files/rn487x/rn487x.c: 228:     char stateLowNibble = '0';
 21466     0A8E  3030               	movlw	48
 21467     0A8F  00A3               	movwf	RN487X_SetOutputs@stateLowNibble
 21468     0A90                     l13284:
 21469                           
 21470                           ;mcc_generated_files/rn487x/rn487x.c: 231:     if (bitMap.ioBitMap.p1_3)
 21471     0A90  1E20               	btfss	RN487X_SetOutputs@bitMap,4
 21472     0A91  2A93               	goto	u10011
 21473     0A92  2A94               	goto	u10010
 21474     0A93                     u10011:
 21475     0A93  2A97               	goto	l13288
 21476     0A94                     u10010:
 21477     0A94                     l13286:
 21478                           
 21479                           ;mcc_generated_files/rn487x/rn487x.c: 232:     {;mcc_generated_files/rn487x/rn487x.c: 23
      +                          3:         ioHighNibble = '1';
 21480     0A94  3031               	movlw	49
 21481     0A95  00A4               	movwf	RN487X_SetOutputs@ioHighNibble
 21482                           
 21483                           ;mcc_generated_files/rn487x/rn487x.c: 234:     }
 21484     0A96  2A99               	goto	l13290
 21485     0A97                     l13288:
 21486                           
 21487                           ;mcc_generated_files/rn487x/rn487x.c: 236:     {;mcc_generated_files/rn487x/rn487x.c: 23
      +                          7:         ioHighNibble = '0';
 21488     0A97  3030               	movlw	48
 21489     0A98  00A4               	movwf	RN487X_SetOutputs@ioHighNibble
 21490     0A99                     l13290:
 21491                           
 21492                           ;mcc_generated_files/rn487x/rn487x.c: 239:     ioLowNibble = ( (0x0F & bitMap.ioBitMap.g
      +                          pioBitMap) + '0');
 21493     0A99  0820               	movf	RN487X_SetOutputs@bitMap,w
 21494     0A9A  390F               	andlw	15
 21495     0A9B  3E30               	addlw	48
 21496     0A9C  00A2               	movwf	RN487X_SetOutputs@ioLowNibble
 21497     0A9D                     l13292:
 21498                           
 21499                           ;mcc_generated_files/rn487x/rn487x.c: 242:     if (bitMap.ioStateBitMap.p1_3_state)
 21500     0A9D  1E21               	btfss	RN487X_SetOutputs@bitMap+1,4
 21501     0A9E  2AA0               	goto	u10021
 21502     0A9F  2AA1               	goto	u10020
 21503     0AA0                     u10021:
 21504     0AA0  2AA4               	goto	l13296
 21505     0AA1                     u10020:
 21506     0AA1                     l13294:
 21507                           
 21508                           ;mcc_generated_files/rn487x/rn487x.c: 243:     {;mcc_generated_files/rn487x/rn487x.c: 24
      +                          4:         stateHighNibble = '1';
 21509     0AA1  3031               	movlw	49
 21510     0AA2  00A5               	movwf	RN487X_SetOutputs@stateHighNibble
 21511                           
 21512                           ;mcc_generated_files/rn487x/rn487x.c: 245:     }
 21513     0AA3  2AA6               	goto	l13298
 21514     0AA4                     l13296:
 21515                           
 21516                           ;mcc_generated_files/rn487x/rn487x.c: 247:     {;mcc_generated_files/rn487x/rn487x.c: 24
      +                          8:         stateHighNibble = '0';
 21517     0AA4  3030               	movlw	48
 21518     0AA5  00A5               	movwf	RN487X_SetOutputs@stateHighNibble
 21519     0AA6                     l13298:
 21520                           
 21521                           ;mcc_generated_files/rn487x/rn487x.c: 250:     stateLowNibble = ( (0x0F & bitMap.ioState
      +                          BitMap.gpioStateBitMap) + '0');
 21522     0AA6  0821               	movf	RN487X_SetOutputs@bitMap+1,w
 21523     0AA7  390F               	andlw	15
 21524     0AA8  3E30               	addlw	48
 21525     0AA9  00A3               	movwf	RN487X_SetOutputs@stateLowNibble
 21526     0AAA                     l13300:
 21527                           
 21528                           ;mcc_generated_files/rn487x/rn487x.c: 252:     cmdBuf[0] = '|';
 21529     0AAA  307C               	movlw	124
 21530     0AAB  0144               	movlb	4	; select bank4
 21531     0AAC  00A0               	movwf	_cmdBuf^(0+512)
 21532     0AAD                     l13302:
 21533                           
 21534                           ;mcc_generated_files/rn487x/rn487x.c: 253:     cmdBuf[1] = 'O';
 21535     0AAD  304F               	movlw	79
 21536     0AAE  00A1               	movwf	(_cmdBuf^(0+512)+1)
 21537     0AAF                     l13304:
 21538                           
 21539                           ;mcc_generated_files/rn487x/rn487x.c: 254:     cmdBuf[2] = ',';
 21540     0AAF  302C               	movlw	44
 21541     0AB0  00A2               	movwf	(_cmdBuf^(0+512)+2)
 21542     0AB1                     l13306:
 21543                           
 21544                           ;mcc_generated_files/rn487x/rn487x.c: 255:     cmdBuf[3] = ioHighNibble;
 21545     0AB1  0140               	movlb	0	; select bank0
 21546     0AB2  0824               	movf	RN487X_SetOutputs@ioHighNibble,w
 21547     0AB3  0144               	movlb	4	; select bank4
 21548     0AB4  00A3               	movwf	(_cmdBuf^(0+512)+3)
 21549     0AB5                     l13308:
 21550                           
 21551                           ;mcc_generated_files/rn487x/rn487x.c: 256:     cmdBuf[4] = ioLowNibble;
 21552     0AB5  0140               	movlb	0	; select bank0
 21553     0AB6  0822               	movf	RN487X_SetOutputs@ioLowNibble,w
 21554     0AB7  0144               	movlb	4	; select bank4
 21555     0AB8  00A4               	movwf	(_cmdBuf^(0+512)+4)
 21556     0AB9                     l13310:
 21557                           
 21558                           ;mcc_generated_files/rn487x/rn487x.c: 257:     cmdBuf[5] = ',';
 21559     0AB9  302C               	movlw	44
 21560     0ABA  00A5               	movwf	(_cmdBuf^(0+512)+5)
 21561     0ABB                     l13312:
 21562                           
 21563                           ;mcc_generated_files/rn487x/rn487x.c: 258:     cmdBuf[6] = stateHighNibble;
 21564     0ABB  0140               	movlb	0	; select bank0
 21565     0ABC  0825               	movf	RN487X_SetOutputs@stateHighNibble,w
 21566     0ABD  0144               	movlb	4	; select bank4
 21567     0ABE  00A6               	movwf	(_cmdBuf^(0+512)+6)
 21568     0ABF                     l13314:
 21569                           
 21570                           ;mcc_generated_files/rn487x/rn487x.c: 259:     cmdBuf[7] = stateLowNibble;
 21571     0ABF  0140               	movlb	0	; select bank0
 21572     0AC0  0823               	movf	RN487X_SetOutputs@stateLowNibble,w
 21573     0AC1  0144               	movlb	4	; select bank4
 21574     0AC2  00A7               	movwf	(_cmdBuf^(0+512)+7)
 21575     0AC3                     l13316:
 21576                           
 21577                           ;mcc_generated_files/rn487x/rn487x.c: 260:     cmdBuf[8] = '\r';
 21578     0AC3  300D               	movlw	13
 21579     0AC4  00A8               	movwf	(_cmdBuf^(0+512)+8)
 21580     0AC5                     l13318:
 21581                           
 21582                           ;mcc_generated_files/rn487x/rn487x.c: 261:     cmdBuf[9] = '\n';
 21583     0AC5  300A               	movlw	10
 21584     0AC6  00A9               	movwf	(_cmdBuf^(0+512)+9)
 21585     0AC7                     l13320:
 21586                           
 21587                           ;mcc_generated_files/rn487x/rn487x.c: 263:     RN487X_SendCmd(cmdBuf, 10);
 21588     0AC7  300A               	movlw	10
 21589     0AC8  00F7               	movwf	RN487X_SendCmd@cmdLen
 21590     0AC9  3020               	movlw	(low (_cmdBuf| (0+512)))& (0+255)
 21591     0ACA  3196  2696  318A   	fcall	_RN487X_SendCmd
 21592     0ACD                     l13322:
 21593                           
 21594                           ;mcc_generated_files/rn487x/rn487x.c: 264:     return RN487X_ReadDefaultResponse();;	Ret
      +                          urn value of _RN487X_SetOutputs is never used
 21595     0ACD  318E  2651  318A   	fcall	_RN487X_ReadDefaultResponse
 21596     0AD0                     l1587:
 21597     0AD0  0008               	return
 21598     0AD1                     __end_of_RN487X_SetOutputs:
 21599                           
 21600                           	psect	text74
 21601     0E51                     __ptext74:	
 21602 ;; *************** function _RN487X_ReadDefaultResponse *****************
 21603 ;; Defined at:
 21604 ;;		line 125 in file "mcc_generated_files/rn487x/rn487x.c"
 21605 ;; Parameters:    Size  Location     Type
 21606 ;;		None
 21607 ;; Auto vars:     Size  Location     Type
 21608 ;;  resp            3    3[COMMON] unsigned char [3]
 21609 ;;  status          1    6[COMMON] _Bool 
 21610 ;; Return value:  Size  Location     Type
 21611 ;;                  1    wreg      _Bool 
 21612 ;; Registers used:
 21613 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21614 ;; Tracked objects:
 21615 ;;		On entry : 0/0
 21616 ;;		On exit  : 0/0
 21617 ;;		Unchanged: 0/0
 21618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21620 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21622 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21623 ;;Total ram usage:        4 bytes
 21624 ;; Hardware stack levels used: 1
 21625 ;; Hardware stack levels required when called: 6
 21626 ;; This function calls:
 21627 ;;		_RN487X_Read@rn487x_interface$F1835
 21628 ;; This function is called by:
 21629 ;;		_RN487X_SetOutputs
 21630 ;;		_RN487X_Disconnect
 21631 ;; This function uses a non-reentrant model
 21632 ;;
 21633                           
 21634     0E51                     _RN487X_ReadDefaultResponse:	
 21635                           ;psect for function _RN487X_ReadDefaultResponse
 21636                           
 21637     0E51                     l13186:	
 21638                           ;incstack = 0
 21639                           ; Regs used in _RN487X_ReadDefaultResponse: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21640                           
 21641                           
 21642                           ;mcc_generated_files/rn487x/rn487x.c: 127:     uint8_t resp[3];;mcc_generated_files/rn48
      +                          7x/rn487x.c: 128:     _Bool status = 0;
 21643     0E51  01F6               	clrf	RN487X_ReadDefaultResponse@status
 21644     0E52                     l13188:
 21645                           
 21646                           ;mcc_generated_files/rn487x/rn487x.c: 130:     resp[0] = RN487X.Read();
 21647     0E52  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21648     0E53  0084               	movwf	4
 21649     0E54  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21650     0E55  0085               	movwf	5
 21651     0E56  3F01               	moviw [1]fsr0
 21652     0E57  008A               	movwf	10
 21653     0E58  3F00               	moviw [0]fsr0
 21654     0E59  000A               	callw
 21655     0E5A  318E               	pagesel	$
 21656     0E5B  00F3               	movwf	RN487X_ReadDefaultResponse@resp
 21657     0E5C                     l13190:
 21658                           
 21659                           ;mcc_generated_files/rn487x/rn487x.c: 131:     resp[1] = RN487X.Read();
 21660     0E5C  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21661     0E5D  0084               	movwf	4
 21662     0E5E  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21663     0E5F  0085               	movwf	5
 21664     0E60  3F01               	moviw [1]fsr0
 21665     0E61  008A               	movwf	10
 21666     0E62  3F00               	moviw [0]fsr0
 21667     0E63  000A               	callw
 21668     0E64  318E               	pagesel	$
 21669     0E65  00F4               	movwf	RN487X_ReadDefaultResponse@resp+1
 21670     0E66                     l13192:
 21671                           
 21672                           ;mcc_generated_files/rn487x/rn487x.c: 132:     resp[2] = RN487X.Read();
 21673     0E66  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21674     0E67  0084               	movwf	4
 21675     0E68  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21676     0E69  0085               	movwf	5
 21677     0E6A  3F01               	moviw [1]fsr0
 21678     0E6B  008A               	movwf	10
 21679     0E6C  3F00               	moviw [0]fsr0
 21680     0E6D  000A               	callw
 21681     0E6E  318E               	pagesel	$
 21682     0E6F  00F5               	movwf	RN487X_ReadDefaultResponse@resp+2
 21683                           
 21684                           ;mcc_generated_files/rn487x/rn487x.c: 134:     switch (resp[0])
 21685     0E70  2E90               	goto	l13212
 21686     0E71                     l13194:
 21687                           
 21688                           ;mcc_generated_files/rn487x/rn487x.c: 137:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 138:             if ((resp[1] == 'O') && (resp[2] == 'K'))
 21689     0E71  304F               	movlw	79
 21690     0E72  0674               	xorwf	RN487X_ReadDefaultResponse@resp+1,w
 21691     0E73  1D03               	btfss	3,2
 21692     0E74  2E76               	goto	u9881
 21693     0E75  2E77               	goto	u9880
 21694     0E76                     u9881:
 21695     0E76  2E98               	goto	l13214
 21696     0E77                     u9880:
 21697     0E77                     l13196:
 21698     0E77  304B               	movlw	75
 21699     0E78  0675               	xorwf	RN487X_ReadDefaultResponse@resp+2,w
 21700     0E79  1D03               	btfss	3,2
 21701     0E7A  2E7C               	goto	u9891
 21702     0E7B  2E7D               	goto	u9890
 21703     0E7C                     u9891:
 21704     0E7C  2E98               	goto	l13214
 21705     0E7D                     u9890:
 21706     0E7D                     l13198:
 21707                           
 21708                           ;mcc_generated_files/rn487x/rn487x.c: 139:                 status = 1;
 21709     0E7D  01F6               	clrf	RN487X_ReadDefaultResponse@status
 21710     0E7E  0AF6               	incf	RN487X_ReadDefaultResponse@status,f
 21711     0E7F  2E98               	goto	l13214
 21712     0E80                     l13200:
 21713                           
 21714                           ;mcc_generated_files/rn487x/rn487x.c: 144:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 145:             if ((resp[1] == 'r') && (resp[2] == 'r'))
 21715     0E80  3072               	movlw	114
 21716     0E81  0674               	xorwf	RN487X_ReadDefaultResponse@resp+1,w
 21717     0E82  1D03               	btfss	3,2
 21718     0E83  2E85               	goto	u9901
 21719     0E84  2E86               	goto	u9900
 21720     0E85                     u9901:
 21721     0E85  2E98               	goto	l13214
 21722     0E86                     u9900:
 21723     0E86                     l13202:
 21724     0E86  3072               	movlw	114
 21725     0E87  0675               	xorwf	RN487X_ReadDefaultResponse@resp+2,w
 21726     0E88  1D03               	btfss	3,2
 21727     0E89  2E8B               	goto	u9911
 21728     0E8A  2E8C               	goto	u9910
 21729     0E8B                     u9911:
 21730     0E8B  2E98               	goto	l13214
 21731     0E8C                     u9910:
 21732     0E8C                     l13204:
 21733                           
 21734                           ;mcc_generated_files/rn487x/rn487x.c: 146:                 status = 0;
 21735     0E8C  01F6               	clrf	RN487X_ReadDefaultResponse@status
 21736     0E8D  2E98               	goto	l13214
 21737     0E8E                     l13206:
 21738                           
 21739                           ;mcc_generated_files/rn487x/rn487x.c: 151:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 152:             return status;
 21740     0E8E  3000               	movlw	0
 21741     0E8F  2ED8               	goto	l1562
 21742     0E90                     l13212:
 21743     0E90  0873               	movf	RN487X_ReadDefaultResponse@resp,w
 21744                           
 21745                           ; Switch size 1, requested type "simple"
 21746                           ; Number of cases is 2, Range of values is 65 to 69
 21747                           ; switch strategies available:
 21748                           ; Name         Instructions Cycles
 21749                           ; simple_byte            7     4 (average)
 21750                           ; direct_byte           19     9 (fixed)
 21751                           ; jumptable            263     9 (fixed)
 21752                           ;	Chosen strategy is simple_byte
 21753     0E91  3A41               	xorlw	65	; case 65
 21754     0E92  1903               	skipnz
 21755     0E93  2E71               	goto	l13194
 21756     0E94  3A04               	xorlw	4	; case 69
 21757     0E95  1903               	skipnz
 21758     0E96  2E80               	goto	l13200
 21759     0E97  2E8E               	goto	l13206
 21760     0E98                     l13214:
 21761                           
 21762                           ;mcc_generated_files/rn487x/rn487x.c: 157:     RN487X.Read();
 21763     0E98  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21764     0E99  0084               	movwf	4
 21765     0E9A  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21766     0E9B  0085               	movwf	5
 21767     0E9C  3F01               	moviw [1]fsr0
 21768     0E9D  008A               	movwf	10
 21769     0E9E  3F00               	moviw [0]fsr0
 21770     0E9F  000A               	callw
 21771     0EA0  318E               	pagesel	$
 21772                           
 21773                           ;mcc_generated_files/rn487x/rn487x.c: 158:     RN487X.Read();
 21774     0EA1  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21775     0EA2  0084               	movwf	4
 21776     0EA3  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21777     0EA4  0085               	movwf	5
 21778     0EA5  3F01               	moviw [1]fsr0
 21779     0EA6  008A               	movwf	10
 21780     0EA7  3F00               	moviw [0]fsr0
 21781     0EA8  000A               	callw
 21782     0EA9  318E               	pagesel	$
 21783                           
 21784                           ;mcc_generated_files/rn487x/rn487x.c: 161:     RN487X.Read();
 21785     0EAA  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21786     0EAB  0084               	movwf	4
 21787     0EAC  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21788     0EAD  0085               	movwf	5
 21789     0EAE  3F01               	moviw [1]fsr0
 21790     0EAF  008A               	movwf	10
 21791     0EB0  3F00               	moviw [0]fsr0
 21792     0EB1  000A               	callw
 21793     0EB2  318E               	pagesel	$
 21794                           
 21795                           ;mcc_generated_files/rn487x/rn487x.c: 162:     RN487X.Read();
 21796     0EB3  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21797     0EB4  0084               	movwf	4
 21798     0EB5  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21799     0EB6  0085               	movwf	5
 21800     0EB7  3F01               	moviw [1]fsr0
 21801     0EB8  008A               	movwf	10
 21802     0EB9  3F00               	moviw [0]fsr0
 21803     0EBA  000A               	callw
 21804     0EBB  318E               	pagesel	$
 21805                           
 21806                           ;mcc_generated_files/rn487x/rn487x.c: 163:     RN487X.Read();
 21807     0EBC  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21808     0EBD  0084               	movwf	4
 21809     0EBE  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21810     0EBF  0085               	movwf	5
 21811     0EC0  3F01               	moviw [1]fsr0
 21812     0EC1  008A               	movwf	10
 21813     0EC2  3F00               	moviw [0]fsr0
 21814     0EC3  000A               	callw
 21815     0EC4  318E               	pagesel	$
 21816                           
 21817                           ;mcc_generated_files/rn487x/rn487x.c: 164:     RN487X.Read();
 21818     0EC5  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21819     0EC6  0084               	movwf	4
 21820     0EC7  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21821     0EC8  0085               	movwf	5
 21822     0EC9  3F01               	moviw [1]fsr0
 21823     0ECA  008A               	movwf	10
 21824     0ECB  3F00               	moviw [0]fsr0
 21825     0ECC  000A               	callw
 21826     0ECD  318E               	pagesel	$
 21827                           
 21828                           ;mcc_generated_files/rn487x/rn487x.c: 165:     RN487X.Read();
 21829     0ECE  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21830     0ECF  0084               	movwf	4
 21831     0ED0  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21832     0ED1  0085               	movwf	5
 21833     0ED2  3F01               	moviw [1]fsr0
 21834     0ED3  008A               	movwf	10
 21835     0ED4  3F00               	moviw [0]fsr0
 21836     0ED5  000A               	callw
 21837     0ED6  318E               	pagesel	$
 21838     0ED7                     l13216:
 21839                           
 21840                           ;mcc_generated_files/rn487x/rn487x.c: 167:     return status;
 21841     0ED7  0876               	movf	RN487X_ReadDefaultResponse@status,w
 21842     0ED8                     l1562:
 21843     0ED8  0008               	return
 21844     0ED9                     __end_of_RN487X_ReadDefaultResponse:
 21845                           
 21846                           	psect	text75
 21847     1376                     __ptext75:	
 21848 ;; *************** function _RN487X_EnterDataMode *****************
 21849 ;; Defined at:
 21850 ;;		line 208 in file "mcc_generated_files/rn487x/rn487x.c"
 21851 ;; Parameters:    Size  Location     Type
 21852 ;;		None
 21853 ;; Auto vars:     Size  Location     Type
 21854 ;;		None
 21855 ;; Return value:  Size  Location     Type
 21856 ;;                  1    wreg      _Bool 
 21857 ;; Registers used:
 21858 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21859 ;; Tracked objects:
 21860 ;;		On entry : 0/0
 21861 ;;		On exit  : 0/0
 21862 ;;		Unchanged: 0/0
 21863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21868 ;;Total ram usage:        0 bytes
 21869 ;; Hardware stack levels used: 1
 21870 ;; Hardware stack levels required when called: 7
 21871 ;; This function calls:
 21872 ;;		_RN487X_ReadMsg
 21873 ;;		_RN487X_SendCmd
 21874 ;; This function is called by:
 21875 ;;		_LIGHTBLUE_UpdateErrorLed
 21876 ;; This function uses a non-reentrant model
 21877 ;;
 21878                           
 21879     1376                     _RN487X_EnterDataMode:	
 21880                           ;psect for function _RN487X_EnterDataMode
 21881                           
 21882     1376                     l13326:	
 21883                           ;incstack = 0
 21884                           ; Regs used in _RN487X_EnterDataMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21885                           
 21886                           
 21887                           ;mcc_generated_files/rn487x/rn487x.c: 210:     const uint8_t cmdPrompt[] = {'E', 'N', 'D
      +                          ', '\r', '\n'};;mcc_generated_files/rn487x/rn487x.c: 212:     cmdBuf[0] = '-';
 21888     1376  302D               	movlw	45
 21889     1377  0144               	movlb	4	; select bank4
 21890     1378  00A0               	movwf	_cmdBuf^(0+512)
 21891                           
 21892                           ;mcc_generated_files/rn487x/rn487x.c: 213:     cmdBuf[1] = '-';
 21893     1379  302D               	movlw	45
 21894     137A  00A1               	movwf	(_cmdBuf^(0+512)+1)
 21895                           
 21896                           ;mcc_generated_files/rn487x/rn487x.c: 214:     cmdBuf[2] = '-';
 21897     137B  302D               	movlw	45
 21898     137C  00A2               	movwf	(_cmdBuf^(0+512)+2)
 21899                           
 21900                           ;mcc_generated_files/rn487x/rn487x.c: 215:     cmdBuf[3] = '\r';
 21901     137D  300D               	movlw	13
 21902     137E  00A3               	movwf	(_cmdBuf^(0+512)+3)
 21903                           
 21904                           ;mcc_generated_files/rn487x/rn487x.c: 216:     cmdBuf[4] = '\n';
 21905     137F  300A               	movlw	10
 21906     1380  00A4               	movwf	(_cmdBuf^(0+512)+4)
 21907     1381                     l13328:
 21908                           
 21909                           ;mcc_generated_files/rn487x/rn487x.c: 218:     RN487X_SendCmd(cmdBuf, 5);
 21910     1381  3005               	movlw	5
 21911     1382  00F7               	movwf	RN487X_SendCmd@cmdLen
 21912     1383  3020               	movlw	(low (_cmdBuf| (0+512)))& (0+255)
 21913     1384  3196  2696  3193   	fcall	_RN487X_SendCmd
 21914     1387                     l13330:
 21915                           
 21916                           ;mcc_generated_files/rn487x/rn487x.c: 220:     return RN487X_ReadMsg(cmdPrompt, sizeof (
      +                          cmdPrompt));;	Return value of _RN487X_EnterDataMode is never used
 21917     1387  3006               	movlw	low (RN487X_EnterDataMode@cmdPrompt| (0+32768))
 21918     1388  00F3               	movwf	RN487X_ReadMsg@expectedMsg
 21919     1389  30A0               	movlw	high (RN487X_EnterDataMode@cmdPrompt| (0+32768))
 21920     138A  00F4               	movwf	RN487X_ReadMsg@expectedMsg+1
 21921     138B  3005               	movlw	5
 21922     138C  00F5               	movwf	RN487X_ReadMsg@msgLen
 21923     138D  3195  2587  3193   	fcall	_RN487X_ReadMsg
 21924     1390                     l1580:
 21925     1390  0008               	return
 21926     1391                     __end_of_RN487X_EnterDataMode:
 21927                           
 21928                           	psect	text76
 21929     124E                     __ptext76:	
 21930 ;; *************** function _RN487X_EnterCmdMode *****************
 21931 ;; Defined at:
 21932 ;;		line 195 in file "mcc_generated_files/rn487x/rn487x.c"
 21933 ;; Parameters:    Size  Location     Type
 21934 ;;		None
 21935 ;; Auto vars:     Size  Location     Type
 21936 ;;		None
 21937 ;; Return value:  Size  Location     Type
 21938 ;;                  1    wreg      _Bool 
 21939 ;; Registers used:
 21940 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21941 ;; Tracked objects:
 21942 ;;		On entry : 0/0
 21943 ;;		On exit  : 0/0
 21944 ;;		Unchanged: 0/0
 21945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21950 ;;Total ram usage:        0 bytes
 21951 ;; Hardware stack levels used: 1
 21952 ;; Hardware stack levels required when called: 7
 21953 ;; This function calls:
 21954 ;;		_RN487X_ReadMsg
 21955 ;;		_RN487X_SendCmd
 21956 ;; This function is called by:
 21957 ;;		_LIGHTBLUE_UpdateErrorLed
 21958 ;; This function uses a non-reentrant model
 21959 ;;
 21960                           
 21961     124E                     _RN487X_EnterCmdMode:	
 21962                           ;psect for function _RN487X_EnterCmdMode
 21963                           
 21964     124E                     l13274:	
 21965                           ;incstack = 0
 21966                           ; Regs used in _RN487X_EnterCmdMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21967                           
 21968                           
 21969                           ;mcc_generated_files/rn487x/rn487x.c: 197:     const uint8_t cmdPrompt[] = {'C', 'M', 'D
      +                          ', '>', ' '};;mcc_generated_files/rn487x/rn487x.c: 199:     cmdBuf[0] = '$';
 21970     124E  3024               	movlw	36
 21971     124F  0144               	movlb	4	; select bank4
 21972     1250  00A0               	movwf	_cmdBuf^(0+512)
 21973                           
 21974                           ;mcc_generated_files/rn487x/rn487x.c: 200:     cmdBuf[1] = '$';
 21975     1251  3024               	movlw	36
 21976     1252  00A1               	movwf	(_cmdBuf^(0+512)+1)
 21977                           
 21978                           ;mcc_generated_files/rn487x/rn487x.c: 201:     cmdBuf[2] = '$';
 21979     1253  3024               	movlw	36
 21980     1254  00A2               	movwf	(_cmdBuf^(0+512)+2)
 21981     1255                     l13276:
 21982                           
 21983                           ;mcc_generated_files/rn487x/rn487x.c: 203:     RN487X_SendCmd(cmdBuf, 3);
 21984     1255  3003               	movlw	3
 21985     1256  00F7               	movwf	RN487X_SendCmd@cmdLen
 21986     1257  3020               	movlw	(low (_cmdBuf| (0+512)))& (0+255)
 21987     1258  3196  2696  3192   	fcall	_RN487X_SendCmd
 21988     125B                     l13278:
 21989                           
 21990                           ;mcc_generated_files/rn487x/rn487x.c: 205:     return RN487X_ReadMsg(cmdPrompt, sizeof (
      +                          cmdPrompt));;	Return value of _RN487X_EnterCmdMode is never used
 21991     125B  300B               	movlw	low (RN487X_EnterCmdMode@cmdPrompt| (0+32768))
 21992     125C  00F3               	movwf	RN487X_ReadMsg@expectedMsg
 21993     125D  30A0               	movlw	high (RN487X_EnterCmdMode@cmdPrompt| (0+32768))
 21994     125E  00F4               	movwf	RN487X_ReadMsg@expectedMsg+1
 21995     125F  3005               	movlw	5
 21996     1260  00F5               	movwf	RN487X_ReadMsg@msgLen
 21997     1261  3195  2587  3192   	fcall	_RN487X_ReadMsg
 21998     1264                     l1575:
 21999     1264  0008               	return
 22000     1265                     __end_of_RN487X_EnterCmdMode:
 22001                           
 22002                           	psect	text77
 22003     1696                     __ptext77:	
 22004 ;; *************** function _RN487X_SendCmd *****************
 22005 ;; Defined at:
 22006 ;;		line 79 in file "mcc_generated_files/rn487x/rn487x.c"
 22007 ;; Parameters:    Size  Location     Type
 22008 ;;  cmd             1    wreg     PTR const unsigned char 
 22009 ;;		 -> cmdBuf(64), 
 22010 ;;  cmdLen          1    7[COMMON] unsigned char 
 22011 ;; Auto vars:     Size  Location     Type
 22012 ;;  cmd             1   10[COMMON] PTR const unsigned char 
 22013 ;;		 -> cmdBuf(64), 
 22014 ;;  index           1    9[COMMON] unsigned char 
 22015 ;; Return value:  Size  Location     Type
 22016 ;;                  1    wreg      void 
 22017 ;; Registers used:
 22018 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22019 ;; Tracked objects:
 22020 ;;		On entry : 0/0
 22021 ;;		On exit  : 0/0
 22022 ;;		Unchanged: 0/0
 22023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22024 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22025 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22026 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22027 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22028 ;;Total ram usage:        4 bytes
 22029 ;; Hardware stack levels used: 1
 22030 ;; Hardware stack levels required when called: 6
 22031 ;; This function calls:
 22032 ;;		_RN487X_Write
 22033 ;;		_RN487X_is_tx_done
 22034 ;; This function is called by:
 22035 ;;		_RN487X_EnterCmdMode
 22036 ;;		_RN487X_EnterDataMode
 22037 ;;		_RN487X_SetOutputs
 22038 ;;		_RN487X_GetCmd
 22039 ;;		_RN487X_GetInputsValues
 22040 ;;		_RN487X_RebootCmd
 22041 ;;		_RN487X_Disconnect
 22042 ;; This function uses a non-reentrant model
 22043 ;;
 22044                           
 22045     1696                     _RN487X_SendCmd:	
 22046                           ;psect for function _RN487X_SendCmd
 22047                           
 22048                           
 22049                           ;incstack = 0
 22050                           ; Regs used in _RN487X_SendCmd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22051                           ;RN487X_SendCmd@cmd stored from wreg
 22052     1696  00FA               	movwf	RN487X_SendCmd@cmd
 22053     1697                     l13158:
 22054                           
 22055                           ;mcc_generated_files/rn487x/rn487x.c: 79: void RN487X_SendCmd(const uint8_t *cmd, uint8_
      +                          t cmdLen);mcc_generated_files/rn487x/rn487x.c: 80: {;mcc_generated_files/rn487x/rn487x.c
      +                          : 81:     uint8_t index = 0;
 22056     1697  01F9               	clrf	RN487X_SendCmd@index
 22057                           
 22058                           ;mcc_generated_files/rn487x/rn487x.c: 83:     while (index < cmdLen)
 22059     1698  2EBD               	goto	l13166
 22060     1699                     l13160:
 22061                           
 22062                           ;mcc_generated_files/rn487x/rn487x.c: 84:     {;mcc_generated_files/rn487x/rn487x.c: 85:
      +                                   if (RN487X.TransmitDone())
 22063     1699  306C               	movlw	low ((_RN487X+4)| (0+32768))
 22064     169A  0084               	movwf	4
 22065     169B  3098               	movlw	high ((_RN487X+4)| (0+32768))
 22066     169C  0085               	movwf	5
 22067     169D  3F01               	moviw [1]fsr0
 22068     169E  008A               	movwf	10
 22069     169F  3F00               	moviw [0]fsr0
 22070     16A0  000A               	callw
 22071     16A1  3196               	pagesel	$
 22072     16A2  3A00               	xorlw	0
 22073     16A3  1903               	skipnz
 22074     16A4  2EA6               	goto	u9841
 22075     16A5  2EA7               	goto	u9840
 22076     16A6                     u9841:
 22077     16A6  2EBD               	goto	l13166
 22078     16A7                     u9840:
 22079     16A7                     l13162:
 22080                           
 22081                           ;mcc_generated_files/rn487x/rn487x.c: 86:         {;mcc_generated_files/rn487x/rn487x.c:
      +                           87:             RN487X.Write(cmd[index]);
 22082     16A7  0879               	movf	RN487X_SendCmd@index,w
 22083     16A8  077A               	addwf	RN487X_SendCmd@cmd,w
 22084     16A9  00F8               	movwf	??_RN487X_SendCmd
 22085     16AA  0878               	movf	??_RN487X_SendCmd,w
 22086     16AB  0086               	movwf	6
 22087     16AC  3002               	movlw	2	; select bank4/5
 22088     16AD  0087               	movwf	7
 22089     16AE  0801               	movf	1,w
 22090     16AF  00F6               	movwf	RN487X_Write@txData
 22091     16B0  3068               	movlw	low (_RN487X| (0+32768))
 22092     16B1  0084               	movwf	4
 22093     16B2  3098               	movlw	high (_RN487X| (0+32768))
 22094     16B3  0085               	movwf	5
 22095     16B4  3F01               	moviw [1]fsr0
 22096     16B5  008A               	movwf	10
 22097     16B6  3F00               	moviw [0]fsr0
 22098     16B7  000A               	callw
 22099     16B8  3196               	pagesel	$
 22100     16B9                     l13164:
 22101                           
 22102                           ;mcc_generated_files/rn487x/rn487x.c: 88:             index++;
 22103     16B9  3001               	movlw	1
 22104     16BA  00F8               	movwf	??_RN487X_SendCmd
 22105     16BB  0878               	movf	??_RN487X_SendCmd,w
 22106     16BC  07F9               	addwf	RN487X_SendCmd@index,f
 22107     16BD                     l13166:
 22108                           
 22109                           ;mcc_generated_files/rn487x/rn487x.c: 83:     while (index < cmdLen)
 22110     16BD  0877               	movf	RN487X_SendCmd@cmdLen,w
 22111     16BE  0279               	subwf	RN487X_SendCmd@index,w
 22112     16BF  1C03               	skipc
 22113     16C0  2EC2               	goto	u9851
 22114     16C1  2EC3               	goto	u9850
 22115     16C2                     u9851:
 22116     16C2  2E99               	goto	l13160
 22117     16C3                     u9850:
 22118     16C3                     l1540:
 22119     16C3  0008               	return
 22120     16C4                     __end_of_RN487X_SendCmd:
 22121                           
 22122                           	psect	text78
 22123     1FAC                     __ptext78:	
 22124 ;; *************** function _RN487X_is_tx_done *****************
 22125 ;; Defined at:
 22126 ;;		line 262 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 22127 ;; Parameters:    Size  Location     Type
 22128 ;;		None
 22129 ;; Auto vars:     Size  Location     Type
 22130 ;;		None
 22131 ;; Return value:  Size  Location     Type
 22132 ;;                  1    wreg      _Bool 
 22133 ;; Registers used:
 22134 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 22135 ;; Tracked objects:
 22136 ;;		On entry : 0/0
 22137 ;;		On exit  : 0/0
 22138 ;;		Unchanged: 0/0
 22139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22144 ;;Total ram usage:        0 bytes
 22145 ;; Hardware stack levels used: 1
 22146 ;; Hardware stack levels required when called: 5
 22147 ;; This function calls:
 22148 ;;		_EUSART1_is_tx_done
 22149 ;;		_EUSART2_is_tx_done
 22150 ;; This function is called by:
 22151 ;;		_RN487X_SendCmd
 22152 ;; This function uses a non-reentrant model
 22153 ;;
 22154                           
 22155     1FAC                     _RN487X_is_tx_done:	
 22156                           ;psect for function _RN487X_is_tx_done
 22157                           
 22158     1FAC                     l13104:	
 22159                           ;incstack = 0
 22160                           ; Regs used in _RN487X_is_tx_done: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 22161                           
 22162                           
 22163                           ;mcc_generated_files/rn487x/rn487x_interface.c: 264:     return uart[UART_BLE].TransmitD
      +                          one();
 22164     1FAC  3022               	movlw	low ((_uart+34)| (0+32768))
 22165     1FAD  0084               	movwf	4
 22166     1FAE  3098               	movlw	high ((_uart+34)| (0+32768))
 22167     1FAF  0085               	movwf	5
 22168     1FB0  3F01               	moviw [1]fsr0
 22169     1FB1  008A               	movwf	10
 22170     1FB2  3F00               	moviw [0]fsr0
 22171     1FB3  000A               	callw
 22172     1FB4  319F               	pagesel	$
 22173     1FB5                     l1446:
 22174     1FB5  0008               	return
 22175     1FB6                     __end_of_RN487X_is_tx_done:
 22176                           
 22177                           	psect	text79
 22178     1EAB                     __ptext79:	
 22179 ;; *************** function _EUSART1_is_tx_done *****************
 22180 ;; Defined at:
 22181 ;;		line 142 in file "mcc_generated_files/eusart1.c"
 22182 ;; Parameters:    Size  Location     Type
 22183 ;;		None
 22184 ;; Auto vars:     Size  Location     Type
 22185 ;;		None
 22186 ;; Return value:  Size  Location     Type
 22187 ;;                  1    wreg      _Bool 
 22188 ;; Registers used:
 22189 ;;		wreg, status,2, status,0
 22190 ;; Tracked objects:
 22191 ;;		On entry : 0/0
 22192 ;;		On exit  : 0/0
 22193 ;;		Unchanged: 0/0
 22194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22199 ;;Total ram usage:        0 bytes
 22200 ;; Hardware stack levels used: 1
 22201 ;; Hardware stack levels required when called: 4
 22202 ;; This function calls:
 22203 ;;		Nothing
 22204 ;; This function is called by:
 22205 ;;		_RN487X_is_tx_done
 22206 ;; This function uses a non-reentrant model
 22207 ;;
 22208                           
 22209     1EAB                     _EUSART1_is_tx_done:	
 22210                           ;psect for function _EUSART1_is_tx_done
 22211                           
 22212     1EAB                     l12962:	
 22213                           ;incstack = 0
 22214                           ; Regs used in _EUSART1_is_tx_done: [wreg+status,2+status,0]
 22215                           
 22216                           
 22217                           ;mcc_generated_files/eusart1.c: 144:     return TX1STAbits.TRMT;
 22218     1EAB  0142               	movlb	2	; select bank2
 22219     1EAC  0C1E               	rrf	30,w	;volatile
 22220     1EAD  3901               	andlw	1
 22221     1EAE                     l1858:
 22222     1EAE  0008               	return
 22223     1EAF                     __end_of_EUSART1_is_tx_done:
 22224                           
 22225                           	psect	text80
 22226     1EA7                     __ptext80:	
 22227 ;; *************** function _EUSART2_is_tx_done *****************
 22228 ;; Defined at:
 22229 ;;		line 142 in file "mcc_generated_files/eusart2.c"
 22230 ;; Parameters:    Size  Location     Type
 22231 ;;		None
 22232 ;; Auto vars:     Size  Location     Type
 22233 ;;		None
 22234 ;; Return value:  Size  Location     Type
 22235 ;;                  1    wreg      _Bool 
 22236 ;; Registers used:
 22237 ;;		wreg, status,2, status,0
 22238 ;; Tracked objects:
 22239 ;;		On entry : 0/0
 22240 ;;		On exit  : 0/0
 22241 ;;		Unchanged: 0/0
 22242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22247 ;;Total ram usage:        0 bytes
 22248 ;; Hardware stack levels used: 1
 22249 ;; Hardware stack levels required when called: 4
 22250 ;; This function calls:
 22251 ;;		Nothing
 22252 ;; This function is called by:
 22253 ;;		_RN487X_is_tx_done
 22254 ;; This function uses a non-reentrant model
 22255 ;;
 22256                           
 22257     1EA7                     _EUSART2_is_tx_done:	
 22258                           ;psect for function _EUSART2_is_tx_done
 22259                           
 22260     1EA7                     l12918:	
 22261                           ;incstack = 0
 22262                           ; Regs used in _EUSART2_is_tx_done: [wreg+status,2+status,0]
 22263                           
 22264                           
 22265                           ;mcc_generated_files/eusart2.c: 144:     return TX2STAbits.TRMT;
 22266     1EA7  0154               	movlb	20	; select bank20
 22267     1EA8  0C1E               	rrf	30,w	;volatile
 22268     1EA9  3901               	andlw	1
 22269     1EAA                     l1714:
 22270     1EAA  0008               	return
 22271     1EAB                     __end_of_EUSART2_is_tx_done:
 22272                           
 22273                           	psect	text81
 22274     1587                     __ptext81:	
 22275 ;; *************** function _RN487X_ReadMsg *****************
 22276 ;; Defined at:
 22277 ;;		line 108 in file "mcc_generated_files/rn487x/rn487x.c"
 22278 ;; Parameters:    Size  Location     Type
 22279 ;;  expectedMsg     2    3[COMMON] PTR const unsigned char 
 22280 ;;		 -> RN487X_RebootCmd@reboot(11), RN487X_GetInputsValues@ioValue(2), RN487X_EnterDataMode@cmdPrompt(5), RN487X_EnterC
      +mdMode@cmdPrompt(5), 
 22281 ;;  msgLen          1    5[COMMON] unsigned char 
 22282 ;; Auto vars:     Size  Location     Type
 22283 ;;  index           1    9[COMMON] unsigned char 
 22284 ;;  resp            1    8[COMMON] unsigned char 
 22285 ;; Return value:  Size  Location     Type
 22286 ;;                  1    wreg      _Bool 
 22287 ;; Registers used:
 22288 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22289 ;; Tracked objects:
 22290 ;;		On entry : 0/0
 22291 ;;		On exit  : 0/0
 22292 ;;		Unchanged: 0/0
 22293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22294 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22295 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22296 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22297 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22298 ;;Total ram usage:        7 bytes
 22299 ;; Hardware stack levels used: 1
 22300 ;; Hardware stack levels required when called: 6
 22301 ;; This function calls:
 22302 ;;		_RN487X_Read@rn487x_interface$F1835
 22303 ;; This function is called by:
 22304 ;;		_RN487X_EnterCmdMode
 22305 ;;		_RN487X_EnterDataMode
 22306 ;;		_RN487X_GetInputsValues
 22307 ;;		_RN487X_RebootCmd
 22308 ;; This function uses a non-reentrant model
 22309 ;;
 22310                           
 22311     1587                     _RN487X_ReadMsg:	
 22312                           ;psect for function _RN487X_ReadMsg
 22313                           
 22314     1587                     l13168:	
 22315                           ;incstack = 0
 22316                           ; Regs used in _RN487X_ReadMsg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22317                           
 22318                           
 22319                           ;mcc_generated_files/rn487x/rn487x.c: 108: _Bool RN487X_ReadMsg(const uint8_t *expectedM
      +                          sg, uint8_t msgLen);mcc_generated_files/rn487x/rn487x.c: 109: {;mcc_generated_files/rn48
      +                          7x/rn487x.c: 110:     uint8_t index;;mcc_generated_files/rn487x/rn487x.c: 111:     uint8
      +                          _t resp;;mcc_generated_files/rn487x/rn487x.c: 113:     for (index = 0; index < msgLen; i
      +                          ndex++)
 22320     1587  01F9               	clrf	RN487X_ReadMsg@index
 22321     1588  2DAA               	goto	l13180
 22322     1589                     l13170:
 22323                           
 22324                           ;mcc_generated_files/rn487x/rn487x.c: 114:     {;mcc_generated_files/rn487x/rn487x.c: 11
      +                          5:         resp = RN487X.Read();
 22325     1589  306A               	movlw	low ((_RN487X+2)| (0+32768))
 22326     158A  0084               	movwf	4
 22327     158B  3098               	movlw	high ((_RN487X+2)| (0+32768))
 22328     158C  0085               	movwf	5
 22329     158D  3F01               	moviw [1]fsr0
 22330     158E  008A               	movwf	10
 22331     158F  3F00               	moviw [0]fsr0
 22332     1590  000A               	callw
 22333     1591  3195               	pagesel	$
 22334     1592  00F8               	movwf	RN487X_ReadMsg@resp
 22335     1593                     l13172:
 22336                           
 22337                           ;mcc_generated_files/rn487x/rn487x.c: 116:         if (resp != expectedMsg[index])
 22338     1593  0874               	movf	RN487X_ReadMsg@expectedMsg+1,w
 22339     1594  00F7               	movwf	??_RN487X_ReadMsg+1
 22340     1595  0873               	movf	RN487X_ReadMsg@expectedMsg,w
 22341     1596  00F6               	movwf	??_RN487X_ReadMsg
 22342     1597  0879               	movf	RN487X_ReadMsg@index,w
 22343     1598  0776               	addwf	??_RN487X_ReadMsg,w
 22344     1599  0084               	movwf	4
 22345     159A  0877               	movf	??_RN487X_ReadMsg+1,w
 22346     159B  1803               	skipnc
 22347     159C  0A77               	incf	??_RN487X_ReadMsg+1,w
 22348     159D  0085               	movwf	5
 22349     159E  0800               	movf	0,w	;code access
 22350     159F  0678               	xorwf	RN487X_ReadMsg@resp,w
 22351     15A0  1903               	skipnz
 22352     15A1  2DA3               	goto	u9861
 22353     15A2  2DA4               	goto	u9860
 22354     15A3                     u9861:
 22355     15A3  2DA6               	goto	l13178
 22356     15A4                     u9860:
 22357     15A4                     l13174:
 22358                           
 22359                           ;mcc_generated_files/rn487x/rn487x.c: 117:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 118:             return 0;
 22360     15A4  3000               	movlw	0
 22361     15A5  2DB1               	goto	l1551
 22362     15A6                     l13178:
 22363                           
 22364                           ;mcc_generated_files/rn487x/rn487x.c: 120:     }
 22365     15A6  3001               	movlw	1
 22366     15A7  00F6               	movwf	??_RN487X_ReadMsg
 22367     15A8  0876               	movf	??_RN487X_ReadMsg,w
 22368     15A9  07F9               	addwf	RN487X_ReadMsg@index,f
 22369     15AA                     l13180:
 22370     15AA  0875               	movf	RN487X_ReadMsg@msgLen,w
 22371     15AB  0279               	subwf	RN487X_ReadMsg@index,w
 22372     15AC  1C03               	skipc
 22373     15AD  2DAF               	goto	u9871
 22374     15AE  2DB0               	goto	u9870
 22375     15AF                     u9871:
 22376     15AF  2D89               	goto	l13170
 22377     15B0                     u9870:
 22378     15B0                     l13182:
 22379                           
 22380                           ;mcc_generated_files/rn487x/rn487x.c: 122:     return 1;
 22381     15B0  3001               	movlw	1
 22382     15B1                     l1551:
 22383     15B1  0008               	return
 22384     15B2                     __end_of_RN487X_ReadMsg:
 22385                           
 22386                           	psect	text82
 22387     1FA2                     __ptext82:	
 22388 ;; *************** function _RN487X_Read@rn487x_interface$F1835 *****************
 22389 ;; Defined at:
 22390 ;;		line 257 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 22391 ;; Parameters:    Size  Location     Type
 22392 ;;		None
 22393 ;; Auto vars:     Size  Location     Type
 22394 ;;		None
 22395 ;; Return value:  Size  Location     Type
 22396 ;;                  1    wreg      unsigned char 
 22397 ;; Registers used:
 22398 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22399 ;; Tracked objects:
 22400 ;;		On entry : 0/0
 22401 ;;		On exit  : 0/0
 22402 ;;		Unchanged: 0/0
 22403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22408 ;;Total ram usage:        0 bytes
 22409 ;; Hardware stack levels used: 1
 22410 ;; Hardware stack levels required when called: 5
 22411 ;; This function calls:
 22412 ;;		_EUSART1_Read
 22413 ;;		_EUSART2_Read
 22414 ;; This function is called by:
 22415 ;;		_RN487X_ReadMsg
 22416 ;;		_RN487X_ReadDefaultResponse
 22417 ;;		_RN487X_FilterData
 22418 ;;		_RN487X_Init
 22419 ;;		_RN487X_GetCmd
 22420 ;;		_RN487X_WaitForMsg
 22421 ;; This function uses a non-reentrant model
 22422 ;;
 22423                           
 22424     1FA2                     _RN487X_Read@rn487x_interface$F1835:	
 22425                           ;psect for function _RN487X_Read@rn487x_interface$F1835
 22426                           
 22427     1FA2                     l13100:	
 22428                           ;incstack = 0
 22429                           ; Regs used in _RN487X_Read@rn487x_interface$F1835: [wreg-fsr1h+status,2+status,0+pclath
      +                          +cstack]
 22430                           
 22431                           
 22432                           ;mcc_generated_files/rn487x/rn487x_interface.c: 259:     return uart[UART_BLE].Read();
 22433     1FA2  3014               	movlw	low ((_uart+20)| (0+32768))
 22434     1FA3  0084               	movwf	4
 22435     1FA4  3098               	movlw	high ((_uart+20)| (0+32768))
 22436     1FA5  0085               	movwf	5
 22437     1FA6  3F01               	moviw [1]fsr0
 22438     1FA7  008A               	movwf	10
 22439     1FA8  3F00               	moviw [0]fsr0
 22440     1FA9  000A               	callw
 22441     1FAA  319F               	pagesel	$
 22442     1FAB                     l1443:
 22443     1FAB  0008               	return
 22444     1FAC                     __end_of_RN487X_Read@rn487x_interface$F1835:
 22445                           
 22446                           	psect	text83
 22447     155E                     __ptext83:	
 22448 ;; *************** function _EUSART1_Read *****************
 22449 ;; Defined at:
 22450 ;;		line 151 in file "mcc_generated_files/eusart1.c"
 22451 ;; Parameters:    Size  Location     Type
 22452 ;;		None
 22453 ;; Auto vars:     Size  Location     Type
 22454 ;;  readValue       1    2[COMMON] unsigned char 
 22455 ;; Return value:  Size  Location     Type
 22456 ;;                  1    wreg      unsigned char 
 22457 ;; Registers used:
 22458 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 22459 ;; Tracked objects:
 22460 ;;		On entry : 0/0
 22461 ;;		On exit  : 0/0
 22462 ;;		Unchanged: 0/0
 22463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22465 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22466 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22467 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22468 ;;Total ram usage:        2 bytes
 22469 ;; Hardware stack levels used: 1
 22470 ;; Hardware stack levels required when called: 4
 22471 ;; This function calls:
 22472 ;;		Nothing
 22473 ;; This function is called by:
 22474 ;;		_getch
 22475 ;;		_RN487X_Read@rn487x_interface$F1835
 22476 ;;		_RN487X_Example_TransparentUart
 22477 ;;		_main
 22478 ;; This function uses a non-reentrant model
 22479 ;;
 22480                           
 22481     155E                     _EUSART1_Read:	
 22482                           ;psect for function _EUSART1_Read
 22483                           
 22484     155E                     l12966:	
 22485                           ;incstack = 0
 22486                           ; Regs used in _EUSART1_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 22487                           
 22488     155E                     l12968:	
 22489                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 22490                           
 22491                           
 22492                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 22493     155E  0140               	movlb	0	; select bank0
 22494     155F  0852               	movf	_eusart1RxCount,w	;volatile
 22495     1560  1903               	btfsc	3,2
 22496     1561  2D63               	goto	u9671
 22497     1562  2D64               	goto	u9670
 22498     1563                     u9671:
 22499     1563  2D5E               	goto	l12968
 22500     1564                     u9670:
 22501     1564                     l12970:
 22502                           
 22503                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 22504     1564  0853               	movf	_eusart1RxTail,w	;volatile
 22505     1565  3EBE               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 22506     1566  0086               	movwf	6
 22507     1567  0187               	clrf	7
 22508     1568  0801               	movf	1,w
 22509     1569  0141               	movlb	1	; select bank1
 22510     156A  00E6               	movwf	_eusart1RxLastError^(0+128)	;volatile
 22511                           
 22512                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
 22513     156B  0140               	movlb	0	; select bank0
 22514     156C  0853               	movf	_eusart1RxTail,w
 22515     156D  3E44               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 22516     156E  0086               	movwf	6
 22517     156F  3001               	movlw	1	; select bank2/3
 22518     1570  0087               	movwf	7
 22519     1571  0801               	movf	1,w
 22520     1572  00F2               	movwf	EUSART1_Read@readValue
 22521     1573                     l12972:
 22522     1573  3001               	movlw	1
 22523     1574  00F1               	movwf	??_EUSART1_Read
 22524     1575  0871               	movf	??_EUSART1_Read,w
 22525     1576  07D3               	addwf	_eusart1RxTail,f	;volatile
 22526     1577                     l12974:
 22527                           
 22528                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 22529     1577  3008               	movlw	8
 22530     1578  0253               	subwf	_eusart1RxTail,w	;volatile
 22531     1579  1C03               	skipc
 22532     157A  2D7C               	goto	u9681
 22533     157B  2D7D               	goto	u9680
 22534     157C                     u9681:
 22535     157C  2D7E               	goto	l12978
 22536     157D                     u9680:
 22537     157D                     l12976:
 22538                           
 22539                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
 22540     157D  01D3               	clrf	_eusart1RxTail	;volatile
 22541     157E                     l12978:
 22542                           
 22543                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
 22544     157E  014E               	movlb	14	; select bank14
 22545     157F  1299               	bcf	25,5	;volatile
 22546     1580                     l12980:
 22547                           
 22548                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
 22549     1580  3001               	movlw	1
 22550     1581  0140               	movlb	0	; select bank0
 22551     1582  02D2               	subwf	_eusart1RxCount,f	;volatile
 22552     1583                     l12982:
 22553                           
 22554                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
 22555     1583  014E               	movlb	14	; select bank14
 22556     1584  1699               	bsf	25,5	;volatile
 22557     1585                     l12984:
 22558                           
 22559                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
 22560     1585  0872               	movf	EUSART1_Read@readValue,w
 22561     1586                     l1868:
 22562     1586  0008               	return
 22563     1587                     __end_of_EUSART1_Read:
 22564                           
 22565                           	psect	text84
 22566     150D                     __ptext84:	
 22567 ;; *************** function _EUSART2_Read *****************
 22568 ;; Defined at:
 22569 ;;		line 151 in file "mcc_generated_files/eusart2.c"
 22570 ;; Parameters:    Size  Location     Type
 22571 ;;		None
 22572 ;; Auto vars:     Size  Location     Type
 22573 ;;  readValue       1    2[COMMON] unsigned char 
 22574 ;; Return value:  Size  Location     Type
 22575 ;;                  1    wreg      unsigned char 
 22576 ;; Registers used:
 22577 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 22578 ;; Tracked objects:
 22579 ;;		On entry : 0/0
 22580 ;;		On exit  : 0/0
 22581 ;;		Unchanged: 0/0
 22582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22584 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22585 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22586 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22587 ;;Total ram usage:        2 bytes
 22588 ;; Hardware stack levels used: 1
 22589 ;; Hardware stack levels required when called: 4
 22590 ;; This function calls:
 22591 ;;		Nothing
 22592 ;; This function is called by:
 22593 ;;		_RN487X_Read@rn487x_interface$F1835
 22594 ;;		_RN487X_Example_TransparentUart
 22595 ;;		_main
 22596 ;; This function uses a non-reentrant model
 22597 ;;
 22598                           
 22599     150D                     _EUSART2_Read:	
 22600                           ;psect for function _EUSART2_Read
 22601                           
 22602     150D                     l12922:	
 22603                           ;incstack = 0
 22604                           ; Regs used in _EUSART2_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 22605                           
 22606     150D                     l12924:	
 22607                           ;mcc_generated_files/eusart2.c: 155:     while(0 == eusart2RxCount)
 22608                           
 22609                           
 22610                           ;mcc_generated_files/eusart2.c: 155:     while(0 == eusart2RxCount)
 22611     150D  0140               	movlb	0	; select bank0
 22612     150E  0858               	movf	_eusart2RxCount,w	;volatile
 22613     150F  1903               	btfsc	3,2
 22614     1510  2D12               	goto	u9621
 22615     1511  2D13               	goto	u9620
 22616     1512                     u9621:
 22617     1512  2D0D               	goto	l12924
 22618     1513                     u9620:
 22619     1513                     l12926:
 22620                           
 22621                           ;mcc_generated_files/eusart2.c: 159:     eusart2RxLastError = eusart2RxStatusBuffer[eusa
      +                          rt2RxTail];
 22622     1513  0859               	movf	_eusart2RxTail,w	;volatile
 22623     1514  3EC6               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 22624     1515  0086               	movwf	6
 22625     1516  0187               	clrf	7
 22626     1517  0801               	movf	1,w
 22627     1518  0141               	movlb	1	; select bank1
 22628     1519  00E7               	movwf	_eusart2RxLastError^(0+128)	;volatile
 22629                           
 22630                           ;mcc_generated_files/eusart2.c: 161:     readValue = eusart2RxBuffer[eusart2RxTail++];
 22631     151A  0140               	movlb	0	; select bank0
 22632     151B  0859               	movf	_eusart2RxTail,w
 22633     151C  3ECE               	addlw	(low (_eusart2RxBuffer| 0))& (0+255)
 22634     151D  0086               	movwf	6
 22635     151E  0187               	clrf	7
 22636     151F  0801               	movf	1,w
 22637     1520  00F2               	movwf	EUSART2_Read@readValue
 22638     1521                     l12928:
 22639     1521  3001               	movlw	1
 22640     1522  00F1               	movwf	??_EUSART2_Read
 22641     1523  0871               	movf	??_EUSART2_Read,w
 22642     1524  07D9               	addwf	_eusart2RxTail,f	;volatile
 22643     1525                     l12930:
 22644                           
 22645                           ;mcc_generated_files/eusart2.c: 162:     if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
 22646     1525  3008               	movlw	8
 22647     1526  0259               	subwf	_eusart2RxTail,w	;volatile
 22648     1527  1C03               	skipc
 22649     1528  2D2A               	goto	u9631
 22650     1529  2D2B               	goto	u9630
 22651     152A                     u9631:
 22652     152A  2D2C               	goto	l12934
 22653     152B                     u9630:
 22654     152B                     l12932:
 22655                           
 22656                           ;mcc_generated_files/eusart2.c: 163:     {;mcc_generated_files/eusart2.c: 164:         e
      +                          usart2RxTail = 0;
 22657     152B  01D9               	clrf	_eusart2RxTail	;volatile
 22658     152C                     l12934:
 22659                           
 22660                           ;mcc_generated_files/eusart2.c: 166:     PIE3bits.RC2IE = 0;
 22661     152C  014E               	movlb	14	; select bank14
 22662     152D  1399               	bcf	25,7	;volatile
 22663     152E                     l12936:
 22664                           
 22665                           ;mcc_generated_files/eusart2.c: 167:     eusart2RxCount--;
 22666     152E  3001               	movlw	1
 22667     152F  0140               	movlb	0	; select bank0
 22668     1530  02D8               	subwf	_eusart2RxCount,f	;volatile
 22669     1531                     l12938:
 22670                           
 22671                           ;mcc_generated_files/eusart2.c: 168:     PIE3bits.RC2IE = 1;
 22672     1531  014E               	movlb	14	; select bank14
 22673     1532  1799               	bsf	25,7	;volatile
 22674     1533                     l12940:
 22675                           
 22676                           ;mcc_generated_files/eusart2.c: 170:     return readValue;
 22677     1533  0872               	movf	EUSART2_Read@readValue,w
 22678     1534                     l1724:
 22679     1534  0008               	return
 22680     1535                     __end_of_EUSART2_Read:
 22681                           
 22682                           	psect	text85
 22683     1F6D                     __ptext85:	
 22684 ;; *************** function _RN487X_Delay *****************
 22685 ;; Defined at:
 22686 ;;		line 272 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 22687 ;; Parameters:    Size  Location     Type
 22688 ;;  delayCount      2    4[COMMON] unsigned short 
 22689 ;; Auto vars:     Size  Location     Type
 22690 ;;		None
 22691 ;; Return value:  Size  Location     Type
 22692 ;;                  1    wreg      void 
 22693 ;; Registers used:
 22694 ;;		wreg, status,2, status,0, pclath, cstack
 22695 ;; Tracked objects:
 22696 ;;		On entry : 0/0
 22697 ;;		On exit  : 0/0
 22698 ;;		Unchanged: 0/0
 22699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22700 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22703 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22704 ;;Total ram usage:        2 bytes
 22705 ;; Hardware stack levels used: 1
 22706 ;; Hardware stack levels required when called: 5
 22707 ;; This function calls:
 22708 ;;		_DELAY_milliseconds
 22709 ;; This function is called by:
 22710 ;;		_LIGHTBLUE_UpdateErrorLed
 22711 ;;		_RN487X_Init
 22712 ;; This function uses a non-reentrant model
 22713 ;;
 22714                           
 22715     1F6D                     _RN487X_Delay:	
 22716                           ;psect for function _RN487X_Delay
 22717                           
 22718     1F6D                     l13340:	
 22719                           ;incstack = 0
 22720                           ; Regs used in _RN487X_Delay: [wreg+status,2+status,0+pclath+cstack]
 22721                           
 22722                           
 22723                           ;mcc_generated_files/rn487x/rn487x_interface.c: 272: static __attribute__((inline)) void
      +                           RN487X_Delay(uint16_t delayCount);mcc_generated_files/rn487x/rn487x_interface.c: 273: {
      +                          ;mcc_generated_files/rn487x/rn487x_interface.c: 274:     return DELAY_milliseconds(delay
      +                          Count);;	Return value of _RN487X_Delay is never used
 22724     1F6D  0875               	movf	RN487X_Delay@delayCount+1,w
 22725     1F6E  00F2               	movwf	DELAY_milliseconds@milliseconds+1
 22726     1F6F  0874               	movf	RN487X_Delay@delayCount,w
 22727     1F70  00F1               	movwf	DELAY_milliseconds@milliseconds
 22728     1F71  3191  21E0  319F   	fcall	_DELAY_milliseconds
 22729     1F74                     l1452:
 22730     1F74  0008               	return
 22731     1F75                     __end_of_RN487X_Delay:
 22732                           
 22733                           	psect	text86
 22734     11E0                     __ptext86:	
 22735 ;; *************** function _DELAY_milliseconds *****************
 22736 ;; Defined at:
 22737 ;;		line 38 in file "mcc_generated_files/delay.c"
 22738 ;; Parameters:    Size  Location     Type
 22739 ;;  milliseconds    2    1[COMMON] unsigned short 
 22740 ;; Auto vars:     Size  Location     Type
 22741 ;;		None
 22742 ;; Return value:  Size  Location     Type
 22743 ;;                  1    wreg      void 
 22744 ;; Registers used:
 22745 ;;		wreg, status,2, status,0
 22746 ;; Tracked objects:
 22747 ;;		On entry : 0/0
 22748 ;;		On exit  : 0/0
 22749 ;;		Unchanged: 0/0
 22750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22751 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22753 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22754 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22755 ;;Total ram usage:        3 bytes
 22756 ;; Hardware stack levels used: 1
 22757 ;; Hardware stack levels required when called: 4
 22758 ;; This function calls:
 22759 ;;		Nothing
 22760 ;; This function is called by:
 22761 ;;		_RN487X_Delay
 22762 ;; This function uses a non-reentrant model
 22763 ;;
 22764                           
 22765     11E0                     _DELAY_milliseconds:	
 22766                           ;psect for function _DELAY_milliseconds
 22767                           
 22768     11E0                     l13148:	
 22769                           ;incstack = 0
 22770                           ; Regs used in _DELAY_milliseconds: [wreg+status,2+status,0]
 22771                           
 22772                           
 22773                           ;mcc_generated_files/delay.c: 39:     while(milliseconds--){
 22774     11E0  29E9               	goto	l13152
 22775     11E1                     l13150:
 22776                           
 22777                           ;mcc_generated_files/delay.c: 40:         _delay((unsigned long)((1)*(32000000/4000.0)))
      +                          ;
 22778     11E1  300B               	movlw	11
 22779     11E2  00F3               	movwf	??_DELAY_milliseconds
 22780     11E3  3062               	movlw	98
 22781     11E4                     u13867:
 22782     11E4  0B89               	decfsz	9,f
 22783     11E5  29E4               	goto	u13867
 22784     11E6  0BF3               	decfsz	??_DELAY_milliseconds,f
 22785     11E7  29E4               	goto	u13867
 22786     11E8  3200               	nop2
 22787     11E9                     l13152:
 22788                           
 22789                           ;mcc_generated_files/delay.c: 39:     while(milliseconds--){
 22790     11E9  3001               	movlw	1
 22791     11EA  02F1               	subwf	DELAY_milliseconds@milliseconds,f
 22792     11EB  3000               	movlw	0
 22793     11EC  3BF2               	subwfb	DELAY_milliseconds@milliseconds+1,f
 22794     11ED  0A71               	incf	DELAY_milliseconds@milliseconds,w
 22795     11EE  1D03               	skipz
 22796     11EF  29F4               	goto	u9821
 22797     11F0  0A72               	incf	DELAY_milliseconds@milliseconds+1,w
 22798     11F1  1D03               	btfss	3,2
 22799     11F2  29F4               	goto	u9821
 22800     11F3  29F5               	goto	u9820
 22801     11F4                     u9821:
 22802     11F4  29E1               	goto	l13150
 22803     11F5                     u9820:
 22804     11F5                     l2634:
 22805     11F5  0008               	return
 22806     11F6                     __end_of_DELAY_milliseconds:
 22807                           
 22808                           	psect	text87
 22809     1470                     __ptext87:	
 22810 ;; *************** function _LIGHTBLUE_LedState *****************
 22811 ;; Defined at:
 22812 ;;		line 352 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 22813 ;; Parameters:    Size  Location     Type
 22814 ;;		None
 22815 ;; Auto vars:     Size  Location     Type
 22816 ;;  payload         3    0[BANK0 ] unsigned char [3]
 22817 ;;  led             1    3[BANK0 ] unsigned char 
 22818 ;; Return value:  Size  Location     Type
 22819 ;;                  1    wreg      void 
 22820 ;; Registers used:
 22821 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22822 ;; Tracked objects:
 22823 ;;		On entry : 0/0
 22824 ;;		On exit  : 0/0
 22825 ;;		Unchanged: 0/0
 22826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22828 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22830 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22831 ;;Total ram usage:        4 bytes
 22832 ;; Hardware stack levels used: 1
 22833 ;; Hardware stack levels required when called: 7
 22834 ;; This function calls:
 22835 ;;		_LIGHTBLUE_GetDataLedValue
 22836 ;;		_LIGHTBLUE_GetErrorLedValue
 22837 ;;		_LIGHTBLUE_SendPacket
 22838 ;;		_LIGHTBLUE_SplitByte
 22839 ;; This function is called by:
 22840 ;;		_main
 22841 ;; This function uses a non-reentrant model
 22842 ;;
 22843                           
 22844     1470                     _LIGHTBLUE_LedState:	
 22845                           ;psect for function _LIGHTBLUE_LedState
 22846                           
 22847     1470                     l14390:	
 22848                           ;incstack = 0
 22849                           ; Regs used in _LIGHTBLUE_LedState: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22850                           
 22851                           
 22852                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 353:     char payload[3];;mcc_gene
      +                          rated_files/application/LIGHTBLUE_service.c: 354:     uint8_t led;;mcc_generated_files/a
      +                          pplication/LIGHTBLUE_service.c: 356:     led = (0x00) + LIGHTBLUE_GetDataLedValue();
 22853     1470  319E  26FD  3194   	fcall	_LIGHTBLUE_GetDataLedValue
 22854     1473  0140               	movlb	0	; select bank0
 22855     1474  00A3               	movwf	LIGHTBLUE_LedState@led
 22856     1475                     l14392:
 22857                           
 22858                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 358:     *payload = '\0';
 22859     1475  01A0               	clrf	LIGHTBLUE_LedState@payload
 22860     1476                     l14394:
 22861                           
 22862                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 359:     LIGHTBLUE_SplitByte(paylo
      +                          ad, led);
 22863     1476  0823               	movf	LIGHTBLUE_LedState@led,w
 22864     1477  00F6               	movwf	LIGHTBLUE_SplitByte@value
 22865     1478  3020               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 22866     1479  3196  26C4  3194   	fcall	_LIGHTBLUE_SplitByte
 22867     147C                     l14396:
 22868                           
 22869                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 361:     LIGHTBLUE_SendPacket(LED_
      +                          STATE_ID, payload);
 22870     147C  3020               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 22871     147D  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 22872     147E  304C               	movlw	76
 22873     147F  318E  26D9  3194   	fcall	_LIGHTBLUE_SendPacket
 22874     1482                     l14398:
 22875                           
 22876                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 363:     led = (0x10) + LIGHTBLUE_
      +                          GetErrorLedValue();
 22877     1482  319E  26E6  3194   	fcall	_LIGHTBLUE_GetErrorLedValue
 22878     1485  3E10               	addlw	16
 22879     1486  0140               	movlb	0	; select bank0
 22880     1487  00A3               	movwf	LIGHTBLUE_LedState@led
 22881                           
 22882                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 364:     *payload = '\0';
 22883     1488  01A0               	clrf	LIGHTBLUE_LedState@payload
 22884     1489                     l14400:
 22885                           
 22886                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 365:     LIGHTBLUE_SplitByte(paylo
      +                          ad, led);
 22887     1489  0823               	movf	LIGHTBLUE_LedState@led,w
 22888     148A  00F6               	movwf	LIGHTBLUE_SplitByte@value
 22889     148B  3020               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 22890     148C  3196  26C4  3194   	fcall	_LIGHTBLUE_SplitByte
 22891     148F                     l14402:
 22892                           
 22893                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 367:     LIGHTBLUE_SendPacket(LED_
      +                          STATE_ID, payload);
 22894     148F  3020               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 22895     1490  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 22896     1491  304C               	movlw	76
 22897     1492  318E  26D9  3194   	fcall	_LIGHTBLUE_SendPacket
 22898     1495                     l133:
 22899     1495  0008               	return
 22900     1496                     __end_of_LIGHTBLUE_LedState:
 22901                           
 22902                           	psect	text88
 22903     1EE6                     __ptext88:	
 22904 ;; *************** function _LIGHTBLUE_GetErrorLedValue *****************
 22905 ;; Defined at:
 22906 ;;		line 483 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 22907 ;; Parameters:    Size  Location     Type
 22908 ;;		None
 22909 ;; Auto vars:     Size  Location     Type
 22910 ;;		None
 22911 ;; Return value:  Size  Location     Type
 22912 ;;                  1    wreg      unsigned char 
 22913 ;; Registers used:
 22914 ;;		wreg, status,2, status,0
 22915 ;; Tracked objects:
 22916 ;;		On entry : 0/0
 22917 ;;		On exit  : 0/0
 22918 ;;		Unchanged: 0/0
 22919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22924 ;;Total ram usage:        0 bytes
 22925 ;; Hardware stack levels used: 1
 22926 ;; Hardware stack levels required when called: 4
 22927 ;; This function calls:
 22928 ;;		Nothing
 22929 ;; This function is called by:
 22930 ;;		_LIGHTBLUE_LedState
 22931 ;; This function uses a non-reentrant model
 22932 ;;
 22933                           
 22934     1EE6                     _LIGHTBLUE_GetErrorLedValue:	
 22935                           ;psect for function _LIGHTBLUE_GetErrorLedValue
 22936                           
 22937     1EE6                     l13664:	
 22938                           ;incstack = 0
 22939                           ; Regs used in _LIGHTBLUE_GetErrorLedValue: [wreg+status,2+status,0]
 22940                           
 22941                           
 22942                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 484:     return (0x01) - (bitMap.i
      +                          oStateBitMap.p2_2_state);
 22943     1EE6  0140               	movlb	0	; select bank0
 22944     1EE7  0850               	movf	_bitMap+1,w	;volatile
 22945     1EE8  3901               	andlw	1
 22946     1EE9  3C01               	sublw	1
 22947     1EEA                     l208:
 22948     1EEA  0008               	return
 22949     1EEB                     __end_of_LIGHTBLUE_GetErrorLedValue:
 22950                           
 22951                           	psect	text89
 22952     1EFD                     __ptext89:	
 22953 ;; *************** function _LIGHTBLUE_GetDataLedValue *****************
 22954 ;; Defined at:
 22955 ;;		line 479 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 22956 ;; Parameters:    Size  Location     Type
 22957 ;;		None
 22958 ;; Auto vars:     Size  Location     Type
 22959 ;;		None
 22960 ;; Return value:  Size  Location     Type
 22961 ;;                  1    wreg      unsigned char 
 22962 ;; Registers used:
 22963 ;;		wreg, status,2, status,0
 22964 ;; Tracked objects:
 22965 ;;		On entry : 0/0
 22966 ;;		On exit  : 0/0
 22967 ;;		Unchanged: 0/0
 22968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22973 ;;Total ram usage:        0 bytes
 22974 ;; Hardware stack levels used: 1
 22975 ;; Hardware stack levels required when called: 4
 22976 ;; This function calls:
 22977 ;;		Nothing
 22978 ;; This function is called by:
 22979 ;;		_LIGHTBLUE_LedState
 22980 ;; This function uses a non-reentrant model
 22981 ;;
 22982                           
 22983     1EFD                     _LIGHTBLUE_GetDataLedValue:	
 22984                           ;psect for function _LIGHTBLUE_GetDataLedValue
 22985                           
 22986     1EFD                     l13660:	
 22987                           ;incstack = 0
 22988                           ; Regs used in _LIGHTBLUE_GetDataLedValue: [wreg+status,2+status,0]
 22989                           
 22990                           
 22991                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 480:     return (0x01) - PORTAbits
      +                          .RA5;
 22992     1EFD  0140               	movlb	0	; select bank0
 22993     1EFE  0E0C               	swapf	12,w	;volatile
 22994     1EFF  0C89               	rrf	9,f
 22995     1F00  3901               	andlw	1
 22996     1F01  3C01               	sublw	1
 22997     1F02                     l205:
 22998     1F02  0008               	return
 22999     1F03                     __end_of_LIGHTBLUE_GetDataLedValue:
 23000                           
 23001                           	psect	text90
 23002     1EF7                     __ptext90:	
 23003 ;; *************** function _LIGHTBLUE_Initialize *****************
 23004 ;; Defined at:
 23005 ;;		line 306 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 23006 ;; Parameters:    Size  Location     Type
 23007 ;;		None
 23008 ;; Auto vars:     Size  Location     Type
 23009 ;;		None
 23010 ;; Return value:  Size  Location     Type
 23011 ;;                  1    wreg      void 
 23012 ;; Registers used:
 23013 ;;		wreg
 23014 ;; Tracked objects:
 23015 ;;		On entry : 0/0
 23016 ;;		On exit  : 0/0
 23017 ;;		Unchanged: 0/0
 23018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23023 ;;Total ram usage:        0 bytes
 23024 ;; Hardware stack levels used: 1
 23025 ;; Hardware stack levels required when called: 4
 23026 ;; This function calls:
 23027 ;;		Nothing
 23028 ;; This function is called by:
 23029 ;;		_main
 23030 ;; This function uses a non-reentrant model
 23031 ;;
 23032                           
 23033     1EF7                     _LIGHTBLUE_Initialize:	
 23034                           ;psect for function _LIGHTBLUE_Initialize
 23035                           
 23036     1EF7                     l14360:	
 23037                           ;incstack = 0
 23038                           ; Regs used in _LIGHTBLUE_Initialize: [wreg]
 23039                           
 23040                           
 23041                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 307:     bitMap.ioBitMap.gpioBitMa
      +                          p = 0x01;
 23042     1EF7  3001               	movlw	1
 23043     1EF8  0140               	movlb	0	; select bank0
 23044     1EF9  00CF               	movwf	_bitMap	;volatile
 23045                           
 23046                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 308:     bitMap.ioStateBitMap.gpio
      +                          StateBitMap = 0x01;
 23047     1EFA  3001               	movlw	1
 23048     1EFB  00D0               	movwf	_bitMap+1	;volatile
 23049     1EFC                     l121:
 23050     1EFC  0008               	return
 23051     1EFD                     __end_of_LIGHTBLUE_Initialize:
 23052                           
 23053                           	psect	text91
 23054     1668                     __ptext91:	
 23055 ;; *************** function _LIGHTBLUE_AccelSensor *****************
 23056 ;; Defined at:
 23057 ;;		line 326 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 23058 ;; Parameters:    Size  Location     Type
 23059 ;;		None
 23060 ;; Auto vars:     Size  Location     Type
 23061 ;;  payload        13   25[BANK0 ] unsigned char [13]
 23062 ;;  accelData       6   38[BANK0 ] struct .
 23063 ;; Return value:  Size  Location     Type
 23064 ;;                  1    wreg      void 
 23065 ;; Registers used:
 23066 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23067 ;; Tracked objects:
 23068 ;;		On entry : 0/0
 23069 ;;		On exit  : 0/0
 23070 ;;		Unchanged: 0/0
 23071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23073 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23075 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23076 ;;Total ram usage:       19 bytes
 23077 ;; Hardware stack levels used: 1
 23078 ;; Hardware stack levels required when called: 16
 23079 ;; This function calls:
 23080 ;;		_BMA253_GetAccelDataXYZ
 23081 ;;		_LIGHTBLUE_SendPacket
 23082 ;;		_LIGHTBLUE_SplitWord
 23083 ;; This function is called by:
 23084 ;;		_main
 23085 ;; This function uses a non-reentrant model
 23086 ;;
 23087                           
 23088     1668                     _LIGHTBLUE_AccelSensor:	
 23089                           ;psect for function _LIGHTBLUE_AccelSensor
 23090                           
 23091     1668                     l14370:	
 23092                           ;incstack = 0
 23093 ;; hardware stack exceeded
 23094                           ; Regs used in _LIGHTBLUE_AccelSensor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23095                           
 23096                           
 23097                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 327:     char payload[13];;mcc_gen
      +                          erated_files/application/LIGHTBLUE_service.c: 328:     BMA253_ACCEL_DATA_t accelData;;mc
      +                          c_generated_files/application/LIGHTBLUE_service.c: 331:     *payload = '\0';
 23098     1668  0140               	movlb	0	; select bank0
 23099     1669  01B9               	clrf	LIGHTBLUE_AccelSensor@payload
 23100     166A                     l14372:
 23101                           
 23102                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 332:     BMA253_GetAccelDataXYZ(&a
      +                          ccelData);
 23103     166A  3046               	movlw	(low (LIGHTBLUE_AccelSensor@accelData| 0))& (0+255)
 23104     166B  3188  2096  3196   	fcall	_BMA253_GetAccelDataXYZ
 23105     166E                     l14374:
 23106                           
 23107                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 335:     LIGHTBLUE_SplitWord(paylo
      +                          ad, (accelData.x & 0x0FFF));
 23108     166E  30FF               	movlw	255
 23109     166F  0140               	movlb	0	; select bank0
 23110     1670  0546               	andwf	LIGHTBLUE_AccelSensor@accelData,w
 23111     1671  00F9               	movwf	LIGHTBLUE_SplitWord@value
 23112     1672  300F               	movlw	15
 23113     1673  0547               	andwf	LIGHTBLUE_AccelSensor@accelData+1,w
 23114     1674  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 23115     1675  3039               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 23116     1676  3190  2068  3196   	fcall	_LIGHTBLUE_SplitWord
 23117     1679                     l14376:
 23118                           
 23119                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 336:     LIGHTBLUE_SplitWord(paylo
      +                          ad, (accelData.y & 0x0FFF));
 23120     1679  30FF               	movlw	255
 23121     167A  0140               	movlb	0	; select bank0
 23122     167B  0548               	andwf	LIGHTBLUE_AccelSensor@accelData+2,w
 23123     167C  00F9               	movwf	LIGHTBLUE_SplitWord@value
 23124     167D  300F               	movlw	15
 23125     167E  0549               	andwf	LIGHTBLUE_AccelSensor@accelData+3,w
 23126     167F  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 23127     1680  3039               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 23128     1681  3190  2068  3196   	fcall	_LIGHTBLUE_SplitWord
 23129     1684                     l14378:
 23130                           
 23131                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 337:     LIGHTBLUE_SplitWord(paylo
      +                          ad, (accelData.z & 0x0FFF));
 23132     1684  30FF               	movlw	255
 23133     1685  0140               	movlb	0	; select bank0
 23134     1686  054A               	andwf	LIGHTBLUE_AccelSensor@accelData+4,w
 23135     1687  00F9               	movwf	LIGHTBLUE_SplitWord@value
 23136     1688  300F               	movlw	15
 23137     1689  054B               	andwf	LIGHTBLUE_AccelSensor@accelData+5,w
 23138     168A  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 23139     168B  3039               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 23140     168C  3190  2068  3196   	fcall	_LIGHTBLUE_SplitWord
 23141     168F                     l14380:
 23142                           
 23143                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 339:     LIGHTBLUE_SendPacket(ACCE
      +                          L_DATA_ID, payload);
 23144     168F  3039               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 23145     1690  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 23146     1691  3058               	movlw	88
 23147     1692  318E  26D9  3196   	fcall	_LIGHTBLUE_SendPacket
 23148     1695                     l127:
 23149     1695  0008               	return
 23150     1696                     __end_of_LIGHTBLUE_AccelSensor:
 23151                           
 23152                           	psect	text92
 23153     1068                     __ptext92:	
 23154 ;; *************** function _LIGHTBLUE_SplitWord *****************
 23155 ;; Defined at:
 23156 ;;		line 463 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 23157 ;; Parameters:    Size  Location     Type
 23158 ;;  payload         1    wreg     PTR unsigned char 
 23159 ;;		 -> LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), 
 23160 ;;  value           2    9[COMMON] short 
 23161 ;; Auto vars:     Size  Location     Type
 23162 ;;  payload         1   11[COMMON] PTR unsigned char 
 23163 ;;		 -> LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), 
 23164 ;; Return value:  Size  Location     Type
 23165 ;;                  1    wreg      void 
 23166 ;; Registers used:
 23167 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23168 ;; Tracked objects:
 23169 ;;		On entry : 0/0
 23170 ;;		On exit  : 0/0
 23171 ;;		Unchanged: 0/0
 23172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23173 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23174 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23176 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23177 ;;Total ram usage:        3 bytes
 23178 ;; Hardware stack levels used: 1
 23179 ;; Hardware stack levels required when called: 6
 23180 ;; This function calls:
 23181 ;;		_LIGHTBLUE_SplitByte
 23182 ;; This function is called by:
 23183 ;;		_LIGHTBLUE_TemperatureSensor
 23184 ;;		_LIGHTBLUE_AccelSensor
 23185 ;; This function uses a non-reentrant model
 23186 ;;
 23187                           
 23188     1068                     _LIGHTBLUE_SplitWord:	
 23189                           ;psect for function _LIGHTBLUE_SplitWord
 23190                           
 23191                           
 23192                           ;incstack = 0
 23193                           ; Regs used in _LIGHTBLUE_SplitWord: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23194                           ;LIGHTBLUE_SplitWord@payload stored from wreg
 23195     1068  00FB               	movwf	LIGHTBLUE_SplitWord@payload
 23196     1069                     l13636:
 23197                           
 23198                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 464:     LIGHTBLUE_SplitByte(paylo
      +                          ad, value);
 23199     1069  0879               	movf	LIGHTBLUE_SplitWord@value,w
 23200     106A  00F6               	movwf	LIGHTBLUE_SplitByte@value
 23201     106B  087B               	movf	LIGHTBLUE_SplitWord@payload,w
 23202     106C  3196  26C4  3190   	fcall	_LIGHTBLUE_SplitByte
 23203                           
 23204                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 465:     LIGHTBLUE_SplitByte(paylo
      +                          ad, value >> 8);
 23205     106F  087A               	movf	LIGHTBLUE_SplitWord@value+1,w
 23206     1070  00F6               	movwf	LIGHTBLUE_SplitByte@value
 23207     1071  087B               	movf	LIGHTBLUE_SplitWord@payload,w
 23208     1072  3196  26C4  3190   	fcall	_LIGHTBLUE_SplitByte
 23209     1075                     l196:
 23210     1075  0008               	return
 23211     1076                     __end_of_LIGHTBLUE_SplitWord:
 23212                           
 23213                           	psect	text93
 23214     16C4                     __ptext93:	
 23215 ;; *************** function _LIGHTBLUE_SplitByte *****************
 23216 ;; Defined at:
 23217 ;;		line 468 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 23218 ;; Parameters:    Size  Location     Type
 23219 ;;  payload         1    wreg     PTR unsigned char 
 23220 ;;		 -> LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), LIGHTBLUE_PushButton@payload(3), LIGHT
      +BLUE_AccelSensor@payload(13), 
 23221 ;;		 -> LIGHTBLUE_TemperatureSensor@payload(5), 
 23222 ;;  value           1    6[COMMON] char 
 23223 ;; Auto vars:     Size  Location     Type
 23224 ;;  payload         1    8[COMMON] PTR unsigned char 
 23225 ;;		 -> LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), LIGHTBLUE_PushButton@payload(3), LIGHT
      +BLUE_AccelSensor@payload(13), 
 23226 ;;		 -> LIGHTBLUE_TemperatureSensor@payload(5), 
 23227 ;; Return value:  Size  Location     Type
 23228 ;;                  1    wreg      void 
 23229 ;; Registers used:
 23230 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23231 ;; Tracked objects:
 23232 ;;		On entry : 0/0
 23233 ;;		On exit  : 0/0
 23234 ;;		Unchanged: 0/0
 23235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23236 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23237 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23238 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23239 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23240 ;;Total ram usage:        3 bytes
 23241 ;; Hardware stack levels used: 1
 23242 ;; Hardware stack levels required when called: 5
 23243 ;; This function calls:
 23244 ;;		_strlen
 23245 ;; This function is called by:
 23246 ;;		_LIGHTBLUE_PushButton
 23247 ;;		_LIGHTBLUE_LedState
 23248 ;;		_LIGHTBLUE_SendProtocolVersion
 23249 ;;		_LIGHTBLUE_SplitWord
 23250 ;; This function uses a non-reentrant model
 23251 ;;
 23252                           
 23253     16C4                     _LIGHTBLUE_SplitByte:	
 23254                           ;psect for function _LIGHTBLUE_SplitByte
 23255                           
 23256                           
 23257                           ;incstack = 0
 23258                           ; Regs used in _LIGHTBLUE_SplitByte: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23259                           ;LIGHTBLUE_SplitByte@payload stored from wreg
 23260     16C4  00F8               	movwf	LIGHTBLUE_SplitByte@payload
 23261     16C5                     l13504:
 23262                           
 23263                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 469:     payload += strlen(payload
      +                          );
 23264     16C5  0878               	movf	LIGHTBLUE_SplitByte@payload,w
 23265     16C6  00F1               	movwf	strlen@s
 23266     16C7  01F2               	clrf	strlen@s+1
 23267     16C8  3192  22DB  3196   	fcall	_strlen
 23268     16CB  0871               	movf	?_strlen,w
 23269     16CC  00F7               	movwf	??_LIGHTBLUE_SplitByte
 23270     16CD  0877               	movf	??_LIGHTBLUE_SplitByte,w
 23271     16CE  07F8               	addwf	LIGHTBLUE_SplitByte@payload,f
 23272     16CF                     l13506:
 23273                           
 23274                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 470:     *payload++ = (_hex[(value
      +                           >> 4) & 0xF]);
 23275     16CF  0878               	movf	LIGHTBLUE_SplitByte@payload,w
 23276     16D0  0086               	movwf	6
 23277     16D1  0187               	clrf	7
 23278     16D2  0E76               	swapf	LIGHTBLUE_SplitByte@value,w
 23279     16D3  390F               	andlw	15
 23280     16D4  1989               	btfsc	9,3
 23281     16D5  38F0               	iorlw	240
 23282     16D6  390F               	andlw	15
 23283     16D7  3EA0               	addlw	(low (__hex| (0+256)))& (0+255)
 23284     16D8  0084               	movwf	4
 23285     16D9  3001               	movlw	1	; select bank3/4
 23286     16DA  0085               	movwf	5
 23287     16DB  0800               	movf	0,w
 23288     16DC  0081               	movwf	1
 23289     16DD                     l13508:
 23290     16DD  3001               	movlw	1
 23291     16DE  00F7               	movwf	??_LIGHTBLUE_SplitByte
 23292     16DF  0877               	movf	??_LIGHTBLUE_SplitByte,w
 23293     16E0  07F8               	addwf	LIGHTBLUE_SplitByte@payload,f
 23294     16E1                     l13510:
 23295                           
 23296                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 471:     *payload++ = (_hex[(value
      +                          ) & 0xF]);
 23297     16E1  0878               	movf	LIGHTBLUE_SplitByte@payload,w
 23298     16E2  0086               	movwf	6
 23299     16E3  0187               	clrf	7
 23300     16E4  0876               	movf	LIGHTBLUE_SplitByte@value,w
 23301     16E5  390F               	andlw	15
 23302     16E6  3EA0               	addlw	(low (__hex| (0+256)))& (0+255)
 23303     16E7  0084               	movwf	4
 23304     16E8  3001               	movlw	1	; select bank3/4
 23305     16E9  0085               	movwf	5
 23306     16EA  0800               	movf	0,w
 23307     16EB  0081               	movwf	1
 23308     16EC                     l13512:
 23309     16EC  3001               	movlw	1
 23310     16ED  00F7               	movwf	??_LIGHTBLUE_SplitByte
 23311     16EE  0877               	movf	??_LIGHTBLUE_SplitByte,w
 23312     16EF  07F8               	addwf	LIGHTBLUE_SplitByte@payload,f
 23313     16F0                     l13514:
 23314                           
 23315                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 472:     *payload = '\0';
 23316     16F0  0878               	movf	LIGHTBLUE_SplitByte@payload,w
 23317     16F1  0086               	movwf	6
 23318     16F2  0187               	clrf	7
 23319     16F3  0181               	clrf	1
 23320     16F4                     l199:
 23321     16F4  0008               	return
 23322     16F5                     __end_of_LIGHTBLUE_SplitByte:
 23323                           
 23324                           	psect	text94
 23325     0ED9                     __ptext94:	
 23326 ;; *************** function _LIGHTBLUE_SendPacket *****************
 23327 ;; Defined at:
 23328 ;;		line 451 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 23329 ;; Parameters:    Size  Location     Type
 23330 ;;  packetID        1    wreg     unsigned char 
 23331 ;;  payload         1    7[COMMON] PTR unsigned char 
 23332 ;;		 -> LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), LIGHTBLUE_PushButton@payload(3), LIGHT
      +BLUE_AccelSensor@payload(13), 
 23333 ;;		 -> LIGHTBLUE_TemperatureSensor@payload(5), 
 23334 ;; Auto vars:     Size  Location     Type
 23335 ;;  packetID        1   10[COMMON] unsigned char 
 23336 ;; Return value:  Size  Location     Type
 23337 ;;                  1    wreg      void 
 23338 ;; Registers used:
 23339 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23340 ;; Tracked objects:
 23341 ;;		On entry : 0/0
 23342 ;;		On exit  : 0/0
 23343 ;;		Unchanged: 0/0
 23344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23345 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23346 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23347 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23348 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23349 ;;Total ram usage:        4 bytes
 23350 ;; Hardware stack levels used: 1
 23351 ;; Hardware stack levels required when called: 6
 23352 ;; This function calls:
 23353 ;;		_RN487X_Write
 23354 ;;		_strlen
 23355 ;; This function is called by:
 23356 ;;		_LIGHTBLUE_TemperatureSensor
 23357 ;;		_LIGHTBLUE_AccelSensor
 23358 ;;		_LIGHTBLUE_PushButton
 23359 ;;		_LIGHTBLUE_LedState
 23360 ;;		_LIGHTBLUE_SendProtocolVersion
 23361 ;; This function uses a non-reentrant model
 23362 ;;
 23363                           
 23364     0ED9                     _LIGHTBLUE_SendPacket:	
 23365                           ;psect for function _LIGHTBLUE_SendPacket
 23366                           
 23367                           
 23368                           ;incstack = 0
 23369                           ; Regs used in _LIGHTBLUE_SendPacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23370                           ;LIGHTBLUE_SendPacket@packetID stored from wreg
 23371     0ED9  00FA               	movwf	LIGHTBLUE_SendPacket@packetID
 23372     0EDA                     l13638:
 23373                           
 23374                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 452:     RN487X.Write(('['));
 23375     0EDA  305B               	movlw	91
 23376     0EDB  00F6               	movwf	RN487X_Write@txData
 23377     0EDC  3068               	movlw	low (_RN487X| (0+32768))
 23378     0EDD  0084               	movwf	4
 23379     0EDE  3098               	movlw	high (_RN487X| (0+32768))
 23380     0EDF  0085               	movwf	5
 23381     0EE0  3F01               	moviw [1]fsr0
 23382     0EE1  008A               	movwf	10
 23383     0EE2  3F00               	moviw [0]fsr0
 23384     0EE3  000A               	callw
 23385     0EE4  318E               	pagesel	$
 23386                           
 23387                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 453:     RN487X.Write((_hex[(seque
      +                          nceNumber++) & 0xF]));
 23388     0EE5  0140               	movlb	0	; select bank0
 23389     0EE6  086E               	movf	_sequenceNumber,w
 23390     0EE7  390F               	andlw	15
 23391     0EE8  3EA0               	addlw	(low (__hex| (0+256)))& (0+255)
 23392     0EE9  0086               	movwf	6
 23393     0EEA  3001               	movlw	1	; select bank3/4
 23394     0EEB  0087               	movwf	7
 23395     0EEC  0801               	movf	1,w
 23396     0EED  00F6               	movwf	RN487X_Write@txData
 23397     0EEE  3068               	movlw	low (_RN487X| (0+32768))
 23398     0EEF  0084               	movwf	4
 23399     0EF0  3098               	movlw	high (_RN487X| (0+32768))
 23400     0EF1  0085               	movwf	5
 23401     0EF2  3F01               	moviw [1]fsr0
 23402     0EF3  008A               	movwf	10
 23403     0EF4  3F00               	moviw [0]fsr0
 23404     0EF5  000A               	callw
 23405     0EF6  318E               	pagesel	$
 23406     0EF7                     l13640:
 23407     0EF7  3001               	movlw	1
 23408     0EF8  00F8               	movwf	??_LIGHTBLUE_SendPacket
 23409     0EF9  0878               	movf	??_LIGHTBLUE_SendPacket,w
 23410     0EFA  0140               	movlb	0	; select bank0
 23411     0EFB  07EE               	addwf	_sequenceNumber,f
 23412     0EFC                     l13642:
 23413                           
 23414                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 454:     RN487X.Write(packetID);
 23415     0EFC  087A               	movf	LIGHTBLUE_SendPacket@packetID,w
 23416     0EFD  00F6               	movwf	RN487X_Write@txData
 23417     0EFE  3068               	movlw	low (_RN487X| (0+32768))
 23418     0EFF  0084               	movwf	4
 23419     0F00  3098               	movlw	high (_RN487X| (0+32768))
 23420     0F01  0085               	movwf	5
 23421     0F02  3F01               	moviw [1]fsr0
 23422     0F03  008A               	movwf	10
 23423     0F04  3F00               	moviw [0]fsr0
 23424     0F05  000A               	callw
 23425     0F06  318E               	pagesel	$
 23426     0F07                     l13644:
 23427                           
 23428                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 455:     RN487X.Write((_hex[(strle
      +                          n(payload) >> 4) & 0xF]));
 23429     0F07  0877               	movf	LIGHTBLUE_SendPacket@payload,w
 23430     0F08  00F1               	movwf	strlen@s
 23431     0F09  01F2               	clrf	strlen@s+1
 23432     0F0A  3192  22DB  318E   	fcall	_strlen
 23433     0F0D  0871               	movf	?_strlen,w
 23434     0F0E  00F8               	movwf	??_LIGHTBLUE_SendPacket
 23435     0F0F  0872               	movf	?_strlen+1,w
 23436     0F10  00F9               	movwf	??_LIGHTBLUE_SendPacket+1
 23437     0F11  3004               	movlw	4
 23438     0F12                     u10395:
 23439     0F12  36F9               	lsrf	??_LIGHTBLUE_SendPacket+1,f
 23440     0F13  0CF8               	rrf	??_LIGHTBLUE_SendPacket,f
 23441     0F14  0B89               	decfsz	9,f
 23442     0F15  2F12               	goto	u10395
 23443     0F16  0878               	movf	??_LIGHTBLUE_SendPacket,w
 23444     0F17  390F               	andlw	15
 23445     0F18  3EA0               	addlw	(low (__hex| (0+256)))& (0+255)
 23446     0F19  0086               	movwf	6
 23447     0F1A  3001               	movlw	1	; select bank3/4
 23448     0F1B  0087               	movwf	7
 23449     0F1C  0801               	movf	1,w
 23450     0F1D  00F6               	movwf	RN487X_Write@txData
 23451     0F1E  3068               	movlw	low (_RN487X| (0+32768))
 23452     0F1F  0084               	movwf	4
 23453     0F20  3098               	movlw	high (_RN487X| (0+32768))
 23454     0F21  0085               	movwf	5
 23455     0F22  3F01               	moviw [1]fsr0
 23456     0F23  008A               	movwf	10
 23457     0F24  3F00               	moviw [0]fsr0
 23458     0F25  000A               	callw
 23459     0F26  318E               	pagesel	$
 23460     0F27                     l13646:
 23461                           
 23462                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 456:     RN487X.Write((_hex[(strle
      +                          n(payload)) & 0xF]));
 23463     0F27  0877               	movf	LIGHTBLUE_SendPacket@payload,w
 23464     0F28  00F1               	movwf	strlen@s
 23465     0F29  01F2               	clrf	strlen@s+1
 23466     0F2A  3192  22DB  318E   	fcall	_strlen
 23467     0F2D  0871               	movf	?_strlen,w
 23468     0F2E  390F               	andlw	15
 23469     0F2F  3EA0               	addlw	(low (__hex| (0+256)))& (0+255)
 23470     0F30  0086               	movwf	6
 23471     0F31  3001               	movlw	1	; select bank3/4
 23472     0F32  0087               	movwf	7
 23473     0F33  0801               	movf	1,w
 23474     0F34  00F6               	movwf	RN487X_Write@txData
 23475     0F35  3068               	movlw	low (_RN487X| (0+32768))
 23476     0F36  0084               	movwf	4
 23477     0F37  3098               	movlw	high (_RN487X| (0+32768))
 23478     0F38  0085               	movwf	5
 23479     0F39  3F01               	moviw [1]fsr0
 23480     0F3A  008A               	movwf	10
 23481     0F3B  3F00               	moviw [0]fsr0
 23482     0F3C  000A               	callw
 23483     0F3D  318E               	pagesel	$
 23484                           
 23485                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 457:     while (*payload) {
 23486     0F3E  2F51               	goto	l13652
 23487     0F3F                     l13648:
 23488                           
 23489                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 458:         RN487X.Write((*(uint8
      +                          _t *) payload++));
 23490     0F3F  0877               	movf	LIGHTBLUE_SendPacket@payload,w
 23491     0F40  0086               	movwf	6
 23492     0F41  0187               	clrf	7
 23493     0F42  0801               	movf	1,w
 23494     0F43  00F6               	movwf	RN487X_Write@txData
 23495     0F44  3068               	movlw	low (_RN487X| (0+32768))
 23496     0F45  0084               	movwf	4
 23497     0F46  3098               	movlw	high (_RN487X| (0+32768))
 23498     0F47  0085               	movwf	5
 23499     0F48  3F01               	moviw [1]fsr0
 23500     0F49  008A               	movwf	10
 23501     0F4A  3F00               	moviw [0]fsr0
 23502     0F4B  000A               	callw
 23503     0F4C  318E               	pagesel	$
 23504     0F4D                     l13650:
 23505     0F4D  3001               	movlw	1
 23506     0F4E  00F8               	movwf	??_LIGHTBLUE_SendPacket
 23507     0F4F  0878               	movf	??_LIGHTBLUE_SendPacket,w
 23508     0F50  07F7               	addwf	LIGHTBLUE_SendPacket@payload,f
 23509     0F51                     l13652:
 23510                           
 23511                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 457:     while (*payload) {
 23512     0F51  0877               	movf	LIGHTBLUE_SendPacket@payload,w
 23513     0F52  0086               	movwf	6
 23514     0F53  0187               	clrf	7
 23515     0F54  0801               	movf	1,w
 23516     0F55  1D03               	btfss	3,2
 23517     0F56  2F58               	goto	u10401
 23518     0F57  2F59               	goto	u10400
 23519     0F58                     u10401:
 23520     0F58  2F3F               	goto	l13648
 23521     0F59                     u10400:
 23522     0F59                     l13654:
 23523                           
 23524                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 460:     RN487X.Write((']'));
 23525     0F59  305D               	movlw	93
 23526     0F5A  00F6               	movwf	RN487X_Write@txData
 23527     0F5B  3068               	movlw	low (_RN487X| (0+32768))
 23528     0F5C  0084               	movwf	4
 23529     0F5D  3098               	movlw	high (_RN487X| (0+32768))
 23530     0F5E  0085               	movwf	5
 23531     0F5F  3F01               	moviw [1]fsr0
 23532     0F60  008A               	movwf	10
 23533     0F61  3F00               	moviw [0]fsr0
 23534     0F62  000A               	callw
 23535     0F63  318E               	pagesel	$
 23536     0F64                     l193:
 23537     0F64  0008               	return
 23538     0F65                     __end_of_LIGHTBLUE_SendPacket:
 23539                           
 23540                           	psect	text95
 23541     12DB                     __ptext95:	
 23542 ;; *************** function _strlen *****************
 23543 ;; Defined at:
 23544 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strlen.c"
 23545 ;; Parameters:    Size  Location     Type
 23546 ;;  s               2    1[COMMON] PTR const unsigned char 
 23547 ;;		 -> lightBlueSerial(80), statusBuffer@main$F4234(80), STR_5(12), STR_3(11), 
 23548 ;;		 -> statusBuffer(80), NULL(0), LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), 
 23549 ;;		 -> LIGHTBLUE_PushButton@payload(3), LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), STR_
      +1(6), 
 23550 ;; Auto vars:     Size  Location     Type
 23551 ;;  a               2    4[COMMON] PTR const unsigned char 
 23552 ;;		 -> lightBlueSerial(80), statusBuffer@main$F4234(80), STR_5(12), STR_3(11), 
 23553 ;;		 -> statusBuffer(80), NULL(0), LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), 
 23554 ;;		 -> LIGHTBLUE_PushButton@payload(3), LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), STR_
      +1(6), 
 23555 ;; Return value:  Size  Location     Type
 23556 ;;                  2    1[COMMON] unsigned int 
 23557 ;; Registers used:
 23558 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 23559 ;; Tracked objects:
 23560 ;;		On entry : 0/0
 23561 ;;		On exit  : 0/0
 23562 ;;		Unchanged: 0/0
 23563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23564 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23565 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23566 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23567 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23568 ;;Total ram usage:        5 bytes
 23569 ;; Hardware stack levels used: 1
 23570 ;; Hardware stack levels required when called: 4
 23571 ;; This function calls:
 23572 ;;		Nothing
 23573 ;; This function is called by:
 23574 ;;		_LIGHTBLUE_SendProtocolVersion
 23575 ;;		_LIGHTBLUE_SendSerialData
 23576 ;;		_LIGHTBLUE_SendPacket
 23577 ;;		_LIGHTBLUE_SplitByte
 23578 ;;		_rn487x_PrintMessage
 23579 ;;		_strstr
 23580 ;; This function uses a non-reentrant model
 23581 ;;
 23582                           
 23583     12DB                     _strlen:	
 23584                           ;psect for function _strlen
 23585                           
 23586     12DB                     l13138:	
 23587                           ;incstack = 0
 23588                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 23589                           
 23590     12DB  0872               	movf	strlen@s+1,w
 23591     12DC  00F5               	movwf	strlen@a+1
 23592     12DD  0871               	movf	strlen@s,w
 23593     12DE  00F4               	movwf	strlen@a
 23594     12DF  2AE4               	goto	l13142
 23595     12E0                     l13140:
 23596     12E0  3001               	movlw	1
 23597     12E1  07F1               	addwf	strlen@s,f
 23598     12E2  3000               	movlw	0
 23599     12E3  3DF2               	addwfc	strlen@s+1,f
 23600     12E4                     l13142:
 23601     12E4  0871               	movf	strlen@s,w
 23602     12E5  0084               	movwf	4
 23603     12E6  0872               	movf	strlen@s+1,w
 23604     12E7  0085               	movwf	5
 23605     12E8  0012               	moviw fsr0++
 23606     12E9  1D03               	btfss	3,2
 23607     12EA  2AEC               	goto	u9811
 23608     12EB  2AED               	goto	u9810
 23609     12EC                     u9811:
 23610     12EC  2AE0               	goto	l13140
 23611     12ED                     u9810:
 23612     12ED                     l13144:
 23613     12ED  0874               	movf	strlen@a,w
 23614     12EE  0271               	subwf	strlen@s,w
 23615     12EF  00F1               	movwf	?_strlen
 23616     12F0  0875               	movf	strlen@a+1,w
 23617     12F1  3B72               	subwfb	strlen@s+1,w
 23618     12F2  00F2               	movwf	?_strlen+1
 23619     12F3                     l3339:
 23620     12F3  0008               	return
 23621     12F4                     __end_of_strlen:
 23622                           
 23623                           	psect	text96
 23624     1010                     __ptext96:	
 23625 ;; *************** function _RN487X_Write *****************
 23626 ;; Defined at:
 23627 ;;		line 252 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 23628 ;; Parameters:    Size  Location     Type
 23629 ;;  txData          1    6[COMMON] unsigned char 
 23630 ;; Auto vars:     Size  Location     Type
 23631 ;;		None
 23632 ;; Return value:  Size  Location     Type
 23633 ;;                  1    wreg      void 
 23634 ;; Registers used:
 23635 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23636 ;; Tracked objects:
 23637 ;;		On entry : 0/0
 23638 ;;		On exit  : 0/0
 23639 ;;		Unchanged: 0/0
 23640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23641 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23644 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23645 ;;Total ram usage:        1 bytes
 23646 ;; Hardware stack levels used: 1
 23647 ;; Hardware stack levels required when called: 5
 23648 ;; This function calls:
 23649 ;;		_EUSART1_Write
 23650 ;;		_EUSART2_Write
 23651 ;; This function is called by:
 23652 ;;		_RN487X_SendCmd
 23653 ;;		_LIGHTBLUE_SendPacket
 23654 ;;		_LIGHTBLUE_SendSerialData
 23655 ;;		_RN487X_Example_TransparentUart
 23656 ;;		_main
 23657 ;; This function uses a non-reentrant model
 23658 ;;
 23659                           
 23660     1010                     _RN487X_Write:	
 23661                           ;psect for function _RN487X_Write
 23662                           
 23663     1010                     l13098:	
 23664                           ;incstack = 0
 23665                           ; Regs used in _RN487X_Write: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23666                           
 23667                           
 23668                           ;mcc_generated_files/rn487x/rn487x_interface.c: 252: static __attribute__((inline)) void
      +                           RN487X_Write(uint8_t txData);mcc_generated_files/rn487x/rn487x_interface.c: 253: {;mcc_
      +                          generated_files/rn487x/rn487x_interface.c: 254:     uart[UART_BLE].Write(txData);
 23669     1010  0876               	movf	RN487X_Write@txData,w
 23670     1011  00F1               	movwf	EUSART2_Write@txData
 23671     1012  3016               	movlw	low ((_uart+22)| (0+32768))
 23672     1013  0084               	movwf	4
 23673     1014  3098               	movlw	high ((_uart+22)| (0+32768))
 23674     1015  0085               	movwf	5
 23675     1016  3F01               	moviw [1]fsr0
 23676     1017  008A               	movwf	10
 23677     1018  3F00               	moviw [0]fsr0
 23678     1019  000A               	callw
 23679     101A  3190               	pagesel	$
 23680     101B                     l1440:
 23681     101B  0008               	return
 23682     101C                     __end_of_RN487X_Write:
 23683                           
 23684                           	psect	text97
 23685     14E5                     __ptext97:	
 23686 ;; *************** function _EUSART1_Write *****************
 23687 ;; Defined at:
 23688 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 23689 ;; Parameters:    Size  Location     Type
 23690 ;;  txData          1    1[COMMON] unsigned char 
 23691 ;; Auto vars:     Size  Location     Type
 23692 ;;		None
 23693 ;; Return value:  Size  Location     Type
 23694 ;;                  1    wreg      void 
 23695 ;; Registers used:
 23696 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23697 ;; Tracked objects:
 23698 ;;		On entry : 0/0
 23699 ;;		On exit  : 0/0
 23700 ;;		Unchanged: 0/0
 23701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23702 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23704 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23705 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23706 ;;Total ram usage:        2 bytes
 23707 ;; Hardware stack levels used: 1
 23708 ;; Hardware stack levels required when called: 4
 23709 ;; This function calls:
 23710 ;;		Nothing
 23711 ;; This function is called by:
 23712 ;;		_putch
 23713 ;;		_RN487X_Write
 23714 ;;		_rn487x_PrintMessageStart
 23715 ;;		_rn487x_PrintMessageEnd
 23716 ;;		_rn487x_PrintIndicatorCharacters
 23717 ;;		_rn487x_PrintMessage
 23718 ;;		_LIGHTBLUE_PerformAction
 23719 ;;		_RN487X_Example_TransparentUart
 23720 ;;		_main
 23721 ;; This function uses a non-reentrant model
 23722 ;;
 23723                           
 23724     14E5                     _EUSART1_Write:	
 23725                           ;psect for function _EUSART1_Write
 23726                           
 23727     14E5                     l12988:	
 23728                           ;incstack = 0
 23729                           ; Regs used in _EUSART1_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 23730                           
 23731     14E5                     l12990:	
 23732                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 23733                           
 23734                           
 23735                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 23736     14E5  0140               	movlb	0	; select bank0
 23737     14E6  0855               	movf	_eusart1TxBufferRemaining,w	;volatile
 23738     14E7  1903               	btfsc	3,2
 23739     14E8  2CEA               	goto	u9691
 23740     14E9  2CEB               	goto	u9690
 23741     14EA                     u9691:
 23742     14EA  2CE5               	goto	l12990
 23743     14EB                     u9690:
 23744     14EB                     l1873:
 23745                           
 23746                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
 23747     14EB  014E               	movlb	14	; select bank14
 23748     14EC  1A19               	btfsc	25,4	;volatile
 23749     14ED  2CEF               	goto	u9701
 23750     14EE  2CF0               	goto	u9700
 23751     14EF                     u9701:
 23752     14EF  2CF4               	goto	l1874
 23753     14F0                     u9700:
 23754     14F0                     l12992:
 23755                           
 23756                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
 23757     14F0  0871               	movf	EUSART1_Write@txData,w
 23758     14F1  0142               	movlb	2	; select bank2
 23759     14F2  009A               	movwf	26	;volatile
 23760                           
 23761                           ;mcc_generated_files/eusart1.c: 182:     }
 23762     14F3  2D0A               	goto	l13004
 23763     14F4                     l1874:	
 23764                           ;mcc_generated_files/eusart1.c: 183:     else
 23765                           
 23766                           
 23767                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
 23768     14F4  1219               	bcf	25,4	;volatile
 23769     14F5                     l12994:
 23770                           
 23771                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 23772     14F5  0140               	movlb	0	; select bank0
 23773     14F6  0857               	movf	_eusart1TxHead,w
 23774     14F7  3E4C               	addlw	(low (_eusart1TxBuffer| (0+256)))& (0+255)
 23775     14F8  0086               	movwf	6
 23776     14F9  3001               	movlw	1	; select bank2/3
 23777     14FA  0087               	movwf	7
 23778     14FB  0871               	movf	EUSART1_Write@txData,w
 23779     14FC  0081               	movwf	1
 23780     14FD                     l12996:
 23781     14FD  3001               	movlw	1
 23782     14FE  00F2               	movwf	??_EUSART1_Write
 23783     14FF  0872               	movf	??_EUSART1_Write,w
 23784     1500  07D7               	addwf	_eusart1TxHead,f	;volatile
 23785     1501                     l12998:
 23786                           
 23787                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 23788     1501  3008               	movlw	8
 23789     1502  0257               	subwf	_eusart1TxHead,w	;volatile
 23790     1503  1C03               	skipc
 23791     1504  2D06               	goto	u9711
 23792     1505  2D07               	goto	u9710
 23793     1506                     u9711:
 23794     1506  2D08               	goto	l13002
 23795     1507                     u9710:
 23796     1507                     l13000:
 23797                           
 23798                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 23799     1507  01D7               	clrf	_eusart1TxHead	;volatile
 23800     1508                     l13002:
 23801                           
 23802                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 23803     1508  3001               	movlw	1
 23804     1509  02D5               	subwf	_eusart1TxBufferRemaining,f	;volatile
 23805     150A                     l13004:
 23806                           
 23807                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
 23808     150A  014E               	movlb	14	; select bank14
 23809     150B  1619               	bsf	25,4	;volatile
 23810     150C                     l1877:
 23811     150C  0008               	return
 23812     150D                     __end_of_EUSART1_Write:
 23813                           
 23814                           	psect	text98
 23815     1496                     __ptext98:	
 23816 ;; *************** function _EUSART2_Write *****************
 23817 ;; Defined at:
 23818 ;;		line 173 in file "mcc_generated_files/eusart2.c"
 23819 ;; Parameters:    Size  Location     Type
 23820 ;;  txData          1    1[COMMON] unsigned char 
 23821 ;; Auto vars:     Size  Location     Type
 23822 ;;		None
 23823 ;; Return value:  Size  Location     Type
 23824 ;;                  1    wreg      void 
 23825 ;; Registers used:
 23826 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23827 ;; Tracked objects:
 23828 ;;		On entry : 0/0
 23829 ;;		On exit  : 0/0
 23830 ;;		Unchanged: 0/0
 23831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23832 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23834 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23835 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23836 ;;Total ram usage:        2 bytes
 23837 ;; Hardware stack levels used: 1
 23838 ;; Hardware stack levels required when called: 4
 23839 ;; This function calls:
 23840 ;;		Nothing
 23841 ;; This function is called by:
 23842 ;;		_RN487X_Write
 23843 ;;		_rn487x_PrintMessageStart
 23844 ;;		_rn487x_PrintMessageEnd
 23845 ;;		_rn487x_PrintIndicatorCharacters
 23846 ;;		_rn487x_PrintMessage
 23847 ;;		_LIGHTBLUE_PerformAction
 23848 ;;		_RN487X_Example_TransparentUart
 23849 ;;		_main
 23850 ;; This function uses a non-reentrant model
 23851 ;;
 23852                           
 23853     1496                     _EUSART2_Write:	
 23854                           ;psect for function _EUSART2_Write
 23855                           
 23856     1496                     l12944:	
 23857                           ;incstack = 0
 23858                           ; Regs used in _EUSART2_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 23859                           
 23860     1496                     l12946:	
 23861                           ;mcc_generated_files/eusart2.c: 173: void EUSART2_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart2.c: 174: {;mcc_generated_files/eusart2.c: 175:     while(0 == eusart2TxBuffer
      +                          Remaining)
 23862                           
 23863                           
 23864                           ;mcc_generated_files/eusart2.c: 175:     while(0 == eusart2TxBufferRemaining)
 23865     1496  0140               	movlb	0	; select bank0
 23866     1497  085A               	movf	_eusart2TxBufferRemaining,w	;volatile
 23867     1498  1903               	btfsc	3,2
 23868     1499  2C9B               	goto	u9641
 23869     149A  2C9C               	goto	u9640
 23870     149B                     u9641:
 23871     149B  2C96               	goto	l12946
 23872     149C                     u9640:
 23873     149C                     l1729:
 23874                           
 23875                           ;mcc_generated_files/eusart2.c: 179:     if(0 == PIE3bits.TX2IE)
 23876     149C  014E               	movlb	14	; select bank14
 23877     149D  1B19               	btfsc	25,6	;volatile
 23878     149E  2CA0               	goto	u9651
 23879     149F  2CA1               	goto	u9650
 23880     14A0                     u9651:
 23881     14A0  2CA5               	goto	l1730
 23882     14A1                     u9650:
 23883     14A1                     l12948:
 23884                           
 23885                           ;mcc_generated_files/eusart2.c: 180:     {;mcc_generated_files/eusart2.c: 181:         T
      +                          X2REG = txData;
 23886     14A1  0871               	movf	EUSART2_Write@txData,w
 23887     14A2  0154               	movlb	20	; select bank20
 23888     14A3  009A               	movwf	26	;volatile
 23889                           
 23890                           ;mcc_generated_files/eusart2.c: 182:     }
 23891     14A4  2CBA               	goto	l12960
 23892     14A5                     l1730:	
 23893                           ;mcc_generated_files/eusart2.c: 183:     else
 23894                           
 23895                           
 23896                           ;mcc_generated_files/eusart2.c: 184:     {;mcc_generated_files/eusart2.c: 185:         P
      +                          IE3bits.TX2IE = 0;
 23897     14A5  1319               	bcf	25,6	;volatile
 23898     14A6                     l12950:
 23899                           
 23900                           ;mcc_generated_files/eusart2.c: 186:         eusart2TxBuffer[eusart2TxHead++] = txData;
 23901     14A6  0140               	movlb	0	; select bank0
 23902     14A7  085C               	movf	_eusart2TxHead,w
 23903     14A8  3ED6               	addlw	(low (_eusart2TxBuffer| 0))& (0+255)
 23904     14A9  0086               	movwf	6
 23905     14AA  0187               	clrf	7
 23906     14AB  0871               	movf	EUSART2_Write@txData,w
 23907     14AC  0081               	movwf	1
 23908     14AD                     l12952:
 23909     14AD  3001               	movlw	1
 23910     14AE  00F2               	movwf	??_EUSART2_Write
 23911     14AF  0872               	movf	??_EUSART2_Write,w
 23912     14B0  07DC               	addwf	_eusart2TxHead,f	;volatile
 23913     14B1                     l12954:
 23914                           
 23915                           ;mcc_generated_files/eusart2.c: 187:         if(sizeof(eusart2TxBuffer) <= eusart2TxHead
      +                          )
 23916     14B1  3008               	movlw	8
 23917     14B2  025C               	subwf	_eusart2TxHead,w	;volatile
 23918     14B3  1C03               	skipc
 23919     14B4  2CB6               	goto	u9661
 23920     14B5  2CB7               	goto	u9660
 23921     14B6                     u9661:
 23922     14B6  2CB8               	goto	l12958
 23923     14B7                     u9660:
 23924     14B7                     l12956:
 23925                           
 23926                           ;mcc_generated_files/eusart2.c: 188:         {;mcc_generated_files/eusart2.c: 189:      
      +                                 eusart2TxHead = 0;
 23927     14B7  01DC               	clrf	_eusart2TxHead	;volatile
 23928     14B8                     l12958:
 23929                           
 23930                           ;mcc_generated_files/eusart2.c: 191:         eusart2TxBufferRemaining--;
 23931     14B8  3001               	movlw	1
 23932     14B9  02DA               	subwf	_eusart2TxBufferRemaining,f	;volatile
 23933     14BA                     l12960:
 23934                           
 23935                           ;mcc_generated_files/eusart2.c: 193:     PIE3bits.TX2IE = 1;
 23936     14BA  014E               	movlb	14	; select bank14
 23937     14BB  1719               	bsf	25,6	;volatile
 23938     14BC                     l1733:
 23939     14BC  0008               	return
 23940     14BD                     __end_of_EUSART2_Write:
 23941                           
 23942                           	psect	text99
 23943     0896                     __ptext99:	
 23944 ;; *************** function _BMA253_GetAccelDataXYZ *****************
 23945 ;; Defined at:
 23946 ;;		line 111 in file "mcc_generated_files/application/BMA253_accel.c"
 23947 ;; Parameters:    Size  Location     Type
 23948 ;;  accelData       1    wreg     PTR struct .
 23949 ;;		 -> LIGHTBLUE_AccelSensor@accelData(6), 
 23950 ;; Auto vars:     Size  Location     Type
 23951 ;;  accelData       1   22[BANK0 ] PTR struct .
 23952 ;;		 -> LIGHTBLUE_AccelSensor@accelData(6), 
 23953 ;;  sensorValue     2   23[BANK0 ] short 
 23954 ;; Return value:  Size  Location     Type
 23955 ;;                  1    wreg      void 
 23956 ;; Registers used:
 23957 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23958 ;; Tracked objects:
 23959 ;;		On entry : 0/0
 23960 ;;		On exit  : 0/0
 23961 ;;		Unchanged: 0/0
 23962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23964 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23966 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23967 ;;Total ram usage:        3 bytes
 23968 ;; Hardware stack levels used: 1
 23969 ;; Hardware stack levels required when called: 15
 23970 ;; This function calls:
 23971 ;;		_BMA253_GetAccelDataY
 23972 ;;		_BMA253_GetAccelDataZ
 23973 ;;		_BMA253_NewAccelDataRdyY
 23974 ;;		_BMA253_NewAccelDataRdyZ
 23975 ;;		_TMAG5273_GetXValue
 23976 ;; This function is called by:
 23977 ;;		_LIGHTBLUE_AccelSensor
 23978 ;; This function uses a non-reentrant model
 23979 ;;
 23980                           
 23981     0896                     _BMA253_GetAccelDataXYZ:	
 23982                           ;psect for function _BMA253_GetAccelDataXYZ
 23983                           
 23984                           
 23985                           ;incstack = 0
 23986 ;; hardware stack exceeded
 23987                           ; Regs used in _BMA253_GetAccelDataXYZ: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23988                           ;BMA253_GetAccelDataXYZ@accelData stored from wreg
 23989     0896  0140               	movlb	0	; select bank0
 23990     0897  00B6               	movwf	BMA253_GetAccelDataXYZ@accelData
 23991     0898                     l13618:
 23992                           
 23993                           ;mcc_generated_files/application/BMA253_accel.c: 112:     int16_t sensorValue;;mcc_gener
      +                          ated_files/application/BMA253_accel.c: 113:     TMAG5273_GetXValue(&sensorValue);
 23994     0898  3037               	movlw	(low (BMA253_GetAccelDataXYZ@sensorValue| 0))& (0+255)
 23995     0899  3190  205A  3188   	fcall	_TMAG5273_GetXValue
 23996     089C                     l13620:
 23997                           
 23998                           ;mcc_generated_files/application/BMA253_accel.c: 115:     accelData->x = sensorValue;
 23999     089C  0140               	movlb	0	; select bank0
 24000     089D  0836               	movf	BMA253_GetAccelDataXYZ@accelData,w
 24001     089E  0086               	movwf	6
 24002     089F  0187               	clrf	7
 24003     08A0  0837               	movf	BMA253_GetAccelDataXYZ@sensorValue,w
 24004     08A1  3FC0               	movwi [0]fsr1
 24005     08A2  0838               	movf	BMA253_GetAccelDataXYZ@sensorValue+1,w
 24006     08A3  3FC1               	movwi [1]fsr1
 24007     08A4                     l13622:	
 24008                           ;mcc_generated_files/application/BMA253_accel.c: 117:     while (!BMA253_NewAccelDataRdy
      +                          Y()) {
 24009                           
 24010                           
 24011                           ;mcc_generated_files/application/BMA253_accel.c: 117:     while (!BMA253_NewAccelDataRdy
      +                          Y()) {
 24012     08A4  3190  20B1  3188   	fcall	_BMA253_NewAccelDataRdyY
 24013     08A7  3A00               	xorlw	0
 24014     08A8  1903               	skipnz
 24015     08A9  28AB               	goto	u10371
 24016     08AA  28AC               	goto	u10370
 24017     08AB                     u10371:
 24018     08AB  28A4               	goto	l13622
 24019     08AC                     u10370:
 24020     08AC                     l13624:
 24021                           
 24022                           ;mcc_generated_files/application/BMA253_accel.c: 121:     BMA253_GetAccelDataY(&sensorVa
      +                          lue);
 24023     08AC  3037               	movlw	(low (BMA253_GetAccelDataXYZ@sensorValue| 0))& (0+255)
 24024     08AD  3196  260C  3188   	fcall	_BMA253_GetAccelDataY
 24025     08B0                     l13626:
 24026                           
 24027                           ;mcc_generated_files/application/BMA253_accel.c: 122:     accelData->y = sensorValue;
 24028     08B0  0140               	movlb	0	; select bank0
 24029     08B1  0836               	movf	BMA253_GetAccelDataXYZ@accelData,w
 24030     08B2  3E02               	addlw	2
 24031     08B3  0086               	movwf	6
 24032     08B4  0187               	clrf	7
 24033     08B5  0837               	movf	BMA253_GetAccelDataXYZ@sensorValue,w
 24034     08B6  3FC0               	movwi [0]fsr1
 24035     08B7  0838               	movf	BMA253_GetAccelDataXYZ@sensorValue+1,w
 24036     08B8  3FC1               	movwi [1]fsr1
 24037     08B9                     l13628:	
 24038                           ;mcc_generated_files/application/BMA253_accel.c: 124:     while (!BMA253_NewAccelDataRdy
      +                          Z()) {
 24039                           
 24040                           
 24041                           ;mcc_generated_files/application/BMA253_accel.c: 124:     while (!BMA253_NewAccelDataRdy
      +                          Z()) {
 24042     08B9  3190  20C2  3188   	fcall	_BMA253_NewAccelDataRdyZ
 24043     08BC  3A00               	xorlw	0
 24044     08BD  1903               	skipnz
 24045     08BE  28C0               	goto	u10381
 24046     08BF  28C1               	goto	u10380
 24047     08C0                     u10381:
 24048     08C0  28B9               	goto	l13628
 24049     08C1                     u10380:
 24050     08C1                     l13630:
 24051                           
 24052                           ;mcc_generated_files/application/BMA253_accel.c: 128:     BMA253_GetAccelDataZ(&sensorVa
      +                          lue);
 24053     08C1  3037               	movlw	(low (BMA253_GetAccelDataXYZ@sensorValue| 0))& (0+255)
 24054     08C2  3196  263A  3188   	fcall	_BMA253_GetAccelDataZ
 24055     08C5                     l13632:
 24056                           
 24057                           ;mcc_generated_files/application/BMA253_accel.c: 129:     accelData->z = sensorValue;
 24058     08C5  0140               	movlb	0	; select bank0
 24059     08C6  0836               	movf	BMA253_GetAccelDataXYZ@accelData,w
 24060     08C7  3E04               	addlw	4
 24061     08C8  0086               	movwf	6
 24062     08C9  0187               	clrf	7
 24063     08CA  0837               	movf	BMA253_GetAccelDataXYZ@sensorValue,w
 24064     08CB  3FC0               	movwi [0]fsr1
 24065     08CC  0838               	movf	BMA253_GetAccelDataXYZ@sensorValue+1,w
 24066     08CD  3FC1               	movwi [1]fsr1
 24067     08CE                     l44:
 24068     08CE  0008               	return
 24069     08CF                     __end_of_BMA253_GetAccelDataXYZ:
 24070                           
 24071                           	psect	text100
 24072     105A                     __ptext100:	
 24073 ;; *************** function _TMAG5273_GetXValue *****************
 24074 ;; Defined at:
 24075 ;;		line 2559 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 24076 ;; Parameters:    Size  Location     Type
 24077 ;;  x               1    wreg     PTR short 
 24078 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 24079 ;; Auto vars:     Size  Location     Type
 24080 ;;  x               1   11[COMMON] PTR short 
 24081 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 24082 ;; Return value:  Size  Location     Type
 24083 ;;                  1    wreg      void 
 24084 ;; Registers used:
 24085 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24086 ;; Tracked objects:
 24087 ;;		On entry : 0/0
 24088 ;;		On exit  : 0/0
 24089 ;;		Unchanged: 0/0
 24090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24092 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24094 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24095 ;;Total ram usage:        1 bytes
 24096 ;; Hardware stack levels used: 1
 24097 ;; Hardware stack levels required when called: 14
 24098 ;; This function calls:
 24099 ;;		_TMAG5273_CalcMeasurement
 24100 ;; This function is called by:
 24101 ;;		_BMA253_GetAccelDataXYZ
 24102 ;; This function uses a non-reentrant model
 24103 ;;
 24104                           
 24105     105A                     _TMAG5273_GetXValue:	
 24106                           ;psect for function _TMAG5273_GetXValue
 24107                           
 24108                           
 24109                           ;incstack = 0
 24110 ;; hardware stack exceeded
 24111                           ; Regs used in _TMAG5273_GetXValue: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24112                           ;TMAG5273_GetXValue@x stored from wreg
 24113     105A  00FB               	movwf	TMAG5273_GetXValue@x
 24114     105B                     l13502:
 24115                           
 24116                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2560:     *x = TMAG527
      +                          3_CalcMeasurement(TMAG5273_REG_X_MSB_RESULT);
 24117     105B  3012               	movlw	18
 24118     105C  3193  23C9  3190   	fcall	_TMAG5273_CalcMeasurement
 24119     105F  087B               	movf	TMAG5273_GetXValue@x,w
 24120     1060  0086               	movwf	6
 24121     1061  0187               	clrf	7
 24122     1062  0140               	movlb	0	; select bank0
 24123     1063  082D               	movf	?_TMAG5273_CalcMeasurement,w
 24124     1064  3FC0               	movwi [0]fsr1
 24125     1065  082E               	movf	?_TMAG5273_CalcMeasurement+1,w
 24126     1066  3FC1               	movwi [1]fsr1
 24127     1067                     l1242:
 24128     1067  0008               	return
 24129     1068                     __end_of_TMAG5273_GetXValue:
 24130                           
 24131                           	psect	text101
 24132     13C9                     __ptext101:	
 24133 ;; *************** function _TMAG5273_CalcMeasurement *****************
 24134 ;; Defined at:
 24135 ;;		line 2563 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 24136 ;; Parameters:    Size  Location     Type
 24137 ;;  regAddress      1    wreg     unsigned char 
 24138 ;; Auto vars:     Size  Location     Type
 24139 ;;  regAddress      1   18[BANK0 ] unsigned char 
 24140 ;;  data            2   20[BANK0 ] short 
 24141 ;;  lowerByte       1   19[BANK0 ] unsigned char 
 24142 ;;  upperByte       1    0        unsigned char 
 24143 ;; Return value:  Size  Location     Type
 24144 ;;                  2   13[BANK0 ] short 
 24145 ;; Registers used:
 24146 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24147 ;; Tracked objects:
 24148 ;;		On entry : 0/0
 24149 ;;		On exit  : 0/0
 24150 ;;		Unchanged: 0/0
 24151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24152 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24153 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24154 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24155 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24156 ;;Total ram usage:        9 bytes
 24157 ;; Hardware stack levels used: 1
 24158 ;; Hardware stack levels required when called: 13
 24159 ;; This function calls:
 24160 ;;		_i2c_read2ByteRegister
 24161 ;; This function is called by:
 24162 ;;		_TMAG5273_GetTemperatureValue
 24163 ;;		_TMAG5273_GetXValue
 24164 ;; This function uses a non-reentrant model
 24165 ;;
 24166                           
 24167     13C9                     _TMAG5273_CalcMeasurement:	
 24168                           ;psect for function _TMAG5273_CalcMeasurement
 24169                           
 24170                           
 24171                           ;incstack = 0
 24172                           ; Regs used in _TMAG5273_CalcMeasurement: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24173                           ;TMAG5273_CalcMeasurement@regAddress stored from wreg
 24174     13C9  0140               	movlb	0	; select bank0
 24175     13CA  00B2               	movwf	TMAG5273_CalcMeasurement@regAddress
 24176     13CB                     l13450:
 24177                           
 24178                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2564:     int16_t data
      +                          ;;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2565:     uint8_t upp
      +                          erByte;;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2566:     uint8
      +                          _t lowerByte;;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2568:    
      +                           data = i2c_read2ByteRegister(0X22, regAddress);
 24179     13CB  0832               	movf	TMAG5273_CalcMeasurement@regAddress,w
 24180     13CC  00A4               	movwf	i2c_read2ByteRegister@reg
 24181     13CD  3022               	movlw	34
 24182     13CE  318A  2243  3193   	fcall	_i2c_read2ByteRegister
 24183     13D1  0140               	movlb	0	; select bank0
 24184     13D2  0825               	movf	?_i2c_read2ByteRegister+1,w
 24185     13D3  00B5               	movwf	TMAG5273_CalcMeasurement@data+1
 24186     13D4  0824               	movf	?_i2c_read2ByteRegister,w
 24187     13D5  00B4               	movwf	TMAG5273_CalcMeasurement@data
 24188     13D6                     l13452:
 24189     13D6                     l13454:
 24190                           
 24191                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2570:     lowerByte = 
      +                          (uint8_t) data;
 24192     13D6  0834               	movf	TMAG5273_CalcMeasurement@data,w
 24193     13D7  00B3               	movwf	TMAG5273_CalcMeasurement@lowerByte
 24194     13D8                     l13456:
 24195                           
 24196                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2572:     data = ((int
      +                          16_t) (lowerByte << 8) | upperByte);
 24197     13D8  0833               	movf	TMAG5273_CalcMeasurement@lowerByte,w
 24198     13D9  00AF               	movwf	??_TMAG5273_CalcMeasurement
 24199     13DA  01B0               	clrf	??_TMAG5273_CalcMeasurement+1
 24200     13DB  082F               	movf	??_TMAG5273_CalcMeasurement,w
 24201     13DC  00B0               	movwf	??_TMAG5273_CalcMeasurement+1
 24202     13DD  01AF               	clrf	??_TMAG5273_CalcMeasurement
 24203     13DE  082F               	movf	??_TMAG5273_CalcMeasurement,w
 24204     13DF  00B4               	movwf	TMAG5273_CalcMeasurement@data
 24205     13E0  0830               	movf	??_TMAG5273_CalcMeasurement+1,w
 24206     13E1  00B5               	movwf	TMAG5273_CalcMeasurement@data+1
 24207     13E2                     l13458:
 24208                           
 24209                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2574:     return data;
 24210     13E2  0835               	movf	TMAG5273_CalcMeasurement@data+1,w
 24211     13E3  00AE               	movwf	?_TMAG5273_CalcMeasurement+1
 24212     13E4  0834               	movf	TMAG5273_CalcMeasurement@data,w
 24213     13E5  00AD               	movwf	?_TMAG5273_CalcMeasurement
 24214     13E6                     l1245:
 24215     13E6  0008               	return
 24216     13E7                     __end_of_TMAG5273_CalcMeasurement:
 24217                           
 24218                           	psect	text102
 24219     0A43                     __ptext102:	
 24220 ;; *************** function _i2c_read2ByteRegister *****************
 24221 ;; Defined at:
 24222 ;;		line 135 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 24223 ;; Parameters:    Size  Location     Type
 24224 ;;  address         1    wreg     unsigned char 
 24225 ;;  reg             1    4[BANK0 ] unsigned char 
 24226 ;; Auto vars:     Size  Location     Type
 24227 ;;  address         1   10[BANK0 ] unsigned char 
 24228 ;;  result          2   11[BANK0 ] unsigned short 
 24229 ;; Return value:  Size  Location     Type
 24230 ;;                  2    4[BANK0 ] unsigned short 
 24231 ;; Registers used:
 24232 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24233 ;; Tracked objects:
 24234 ;;		On entry : 0/0
 24235 ;;		On exit  : 0/0
 24236 ;;		Unchanged: 0/0
 24237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24238 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24239 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24240 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24241 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24242 ;;Total ram usage:        9 bytes
 24243 ;; Hardware stack levels used: 1
 24244 ;; Hardware stack levels required when called: 12
 24245 ;; This function calls:
 24246 ;;		_I2C1_Close
 24247 ;;		_I2C1_MasterWrite
 24248 ;;		_I2C1_Open
 24249 ;;		_I2C1_SetAddressNackCallback
 24250 ;;		_I2C1_SetBuffer
 24251 ;;		_I2C1_SetDataCompleteCallback
 24252 ;; This function is called by:
 24253 ;;		_TMAG5273_GetManufacture
 24254 ;;		_TMAG5273_CalcMeasurement
 24255 ;;		_MCP9844_GetManufacture
 24256 ;;		_MCP9844_GetDevice
 24257 ;;		_MCP9844_CalcTemperature
 24258 ;;		_TMAG5273_GetDevice
 24259 ;; This function uses a non-reentrant model
 24260 ;;
 24261                           
 24262     0A43                     _i2c_read2ByteRegister:	
 24263                           ;psect for function _i2c_read2ByteRegister
 24264                           
 24265                           
 24266                           ;incstack = 0
 24267                           ; Regs used in _i2c_read2ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24268                           ;i2c_read2ByteRegister@address stored from wreg
 24269     0A43  0140               	movlb	0	; select bank0
 24270     0A44  00AA               	movwf	i2c_read2ByteRegister@address
 24271     0A45                     l13256:
 24272     0A45                     l13258:	
 24273                           ;mcc_generated_files/drivers/i2c_simple_master.c: 135: uint16_t i2c_read2ByteRegister(i2
      +                          c1_address_t address, uint8_t reg);mcc_generated_files/drivers/i2c_simple_master.c: 136:
      +                           {;mcc_generated_files/drivers/i2c_simple_master.c: 138:     uint16_t result;;mcc_genera
      +                          ted_files/drivers/i2c_simple_master.c: 140:     while(!I2C1_Open(address));
 24274                           
 24275     0A45  0140               	movlb	0	; select bank0
 24276     0A46  082A               	movf	i2c_read2ByteRegister@address,w
 24277     0A47  3197  275C  318A   	fcall	_I2C1_Open
 24278     0A4A  3A00               	xorlw	0
 24279     0A4B  1903               	skipnz
 24280     0A4C  2A4E               	goto	u9991
 24281     0A4D  2A4F               	goto	u9990
 24282     0A4E                     u9991:
 24283     0A4E  2A45               	goto	l13258
 24284     0A4F                     u9990:
 24285     0A4F                     l13260:
 24286                           
 24287                           ;mcc_generated_files/drivers/i2c_simple_master.c: 141:     I2C1_SetDataCompleteCallback(
      +                          rd2RegCompleteHandler,&result);
 24288     0A4F  301D               	movlw	low _rd2RegCompleteHandler
 24289     0A50  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 24290     0A51  3011               	movlw	high _rd2RegCompleteHandler
 24291     0A52  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 24292     0A53  302B               	movlw	(low (i2c_read2ByteRegister@result| 0))& (0+255)
 24293     0A54  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 24294     0A55  319F  27D4  318A   	fcall	_I2C1_SetDataCompleteCallback
 24295     0A58                     l13262:
 24296                           
 24297                           ;mcc_generated_files/drivers/i2c_simple_master.c: 142:     I2C1_SetBuffer(&reg,1);
 24298     0A58  3024               	movlw	low i2c_read2ByteRegister@reg
 24299     0A59  00F1               	movwf	I2C1_SetBuffer@buffer
 24300     0A5A  3000               	movlw	high i2c_read2ByteRegister@reg
 24301     0A5B  00F2               	movwf	I2C1_SetBuffer@buffer+1
 24302     0A5C  3001               	movlw	1
 24303     0A5D  00F3               	movwf	I2C1_SetBuffer@bufferSize
 24304     0A5E  3000               	movlw	0
 24305     0A5F  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 24306     0A60  3190  2093  318A   	fcall	_I2C1_SetBuffer
 24307     0A63                     l13264:
 24308                           
 24309                           ;mcc_generated_files/drivers/i2c_simple_master.c: 143:     I2C1_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
 24310     0A63  3000               	movlw	0
 24311     0A64  00F5               	movwf	I2C1_SetAddressNackCallback@cb
 24312     0A65  00F6               	movwf	I2C1_SetAddressNackCallback@cb+1
 24313     0A66  3000               	movlw	0
 24314     0A67  00F7               	movwf	I2C1_SetAddressNackCallback@ptr
 24315     0A68  00F8               	movwf	I2C1_SetAddressNackCallback@ptr+1
 24316     0A69  319F  27DF  318A   	fcall	_I2C1_SetAddressNackCallback
 24317     0A6C                     l13266:
 24318                           
 24319                           ;mcc_generated_files/drivers/i2c_simple_master.c: 144:     I2C1_MasterWrite();
 24320     0A6C  319E  26E1  318A   	fcall	_I2C1_MasterWrite
 24321     0A6F                     l13268:	
 24322                           ;mcc_generated_files/drivers/i2c_simple_master.c: 145:     while(I2C1_BUSY == I2C1_Close
      +                          ());
 24323                           
 24324     0A6F  3192  22AB  318A   	fcall	_I2C1_Close
 24325     0A72  3A01               	xorlw	1
 24326     0A73  1903               	skipnz
 24327     0A74  2A76               	goto	u10001
 24328     0A75  2A77               	goto	u10000
 24329     0A76                     u10001:
 24330     0A76  2A6F               	goto	l13268
 24331     0A77                     u10000:
 24332     0A77                     l13270:
 24333                           
 24334                           ;mcc_generated_files/drivers/i2c_simple_master.c: 147:     return (result << 8 | result 
      +                          >> 8);
 24335     0A77  0140               	movlb	0	; select bank0
 24336     0A78  082C               	movf	i2c_read2ByteRegister@result+1,w
 24337     0A79  00A7               	movwf	??_i2c_read2ByteRegister+1
 24338     0A7A  082B               	movf	i2c_read2ByteRegister@result,w
 24339     0A7B  00A6               	movwf	??_i2c_read2ByteRegister
 24340     0A7C  0827               	movf	??_i2c_read2ByteRegister+1,w
 24341     0A7D  00A6               	movwf	??_i2c_read2ByteRegister
 24342     0A7E  01A7               	clrf	??_i2c_read2ByteRegister+1
 24343     0A7F  082B               	movf	i2c_read2ByteRegister@result,w
 24344     0A80  00A9               	movwf	??_i2c_read2ByteRegister+3
 24345     0A81  01A8               	clrf	??_i2c_read2ByteRegister+2
 24346     0A82  0826               	movf	??_i2c_read2ByteRegister,w
 24347     0A83  0428               	iorwf	??_i2c_read2ByteRegister+2,w
 24348     0A84  00A4               	movwf	?_i2c_read2ByteRegister
 24349     0A85  0827               	movf	??_i2c_read2ByteRegister+1,w
 24350     0A86  0429               	iorwf	??_i2c_read2ByteRegister+3,w
 24351     0A87  00A5               	movwf	?_i2c_read2ByteRegister+1
 24352     0A88                     l546:
 24353     0A88  0008               	return
 24354     0A89                     __end_of_i2c_read2ByteRegister:
 24355                           
 24356                           	psect	text103
 24357     163A                     __ptext103:	
 24358 ;; *************** function _BMA253_GetAccelDataZ *****************
 24359 ;; Defined at:
 24360 ;;		line 99 in file "mcc_generated_files/application/BMA253_accel.c"
 24361 ;; Parameters:    Size  Location     Type
 24362 ;;  zAccelData      1    wreg     PTR short 
 24363 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 24364 ;; Auto vars:     Size  Location     Type
 24365 ;;  zAccelData      1   13[BANK0 ] PTR short 
 24366 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 24367 ;;  msbData         1   15[BANK0 ] unsigned char 
 24368 ;;  lsbData         1   14[BANK0 ] unsigned char 
 24369 ;; Return value:  Size  Location     Type
 24370 ;;                  1    wreg      void 
 24371 ;; Registers used:
 24372 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24373 ;; Tracked objects:
 24374 ;;		On entry : 0/0
 24375 ;;		On exit  : 0/0
 24376 ;;		Unchanged: 0/0
 24377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24379 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24380 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24381 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24382 ;;Total ram usage:        6 bytes
 24383 ;; Hardware stack levels used: 1
 24384 ;; Hardware stack levels required when called: 14
 24385 ;; This function calls:
 24386 ;;		_BMA253_NewAccelDataRdyZ
 24387 ;;		_i2c_read1ByteRegister
 24388 ;; This function is called by:
 24389 ;;		_BMA253_GetAccelDataXYZ
 24390 ;; This function uses a non-reentrant model
 24391 ;;
 24392                           
 24393     163A                     _BMA253_GetAccelDataZ:	
 24394                           ;psect for function _BMA253_GetAccelDataZ
 24395                           
 24396                           
 24397                           ;incstack = 0
 24398 ;; hardware stack exceeded
 24399                           ; Regs used in _BMA253_GetAccelDataZ: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24400                           ;BMA253_GetAccelDataZ@zAccelData stored from wreg
 24401     163A  0140               	movlb	0	; select bank0
 24402     163B  00AD               	movwf	BMA253_GetAccelDataZ@zAccelData
 24403     163C                     l13494:
 24404     163C                     l13496:	
 24405                           ;mcc_generated_files/application/BMA253_accel.c: 100:     uint8_t lsbData;;mcc_generated
      +                          _files/application/BMA253_accel.c: 101:     uint8_t msbData;;mcc_generated_files/applica
      +                          tion/BMA253_accel.c: 102:     while (!BMA253_NewAccelDataRdyZ()) {
 24406                           
 24407                           
 24408                           ;mcc_generated_files/application/BMA253_accel.c: 102:     while (!BMA253_NewAccelDataRdy
      +                          Z()) {
 24409     163C  3190  20C2  3196   	fcall	_BMA253_NewAccelDataRdyZ
 24410     163F  3A00               	xorlw	0
 24411     1640  1903               	skipnz
 24412     1641  2E43               	goto	u10261
 24413     1642  2E44               	goto	u10260
 24414     1643                     u10261:
 24415     1643  2E3C               	goto	l13496
 24416     1644                     u10260:
 24417     1644                     l13498:
 24418                           
 24419                           ;mcc_generated_files/application/BMA253_accel.c: 106:     lsbData = i2c_read1ByteRegiste
      +                          r((0x19), (0x06));
 24420     1644  3006               	movlw	6
 24421     1645  0140               	movlb	0	; select bank0
 24422     1646  00A4               	movwf	i2c_read1ByteRegister@reg
 24423     1647  3019               	movlw	25
 24424     1648  318B  23B3  3196   	fcall	_i2c_read1ByteRegister
 24425     164B  0140               	movlb	0	; select bank0
 24426     164C  00AE               	movwf	BMA253_GetAccelDataZ@lsbData
 24427                           
 24428                           ;mcc_generated_files/application/BMA253_accel.c: 107:     msbData = i2c_read1ByteRegiste
      +                          r((0x19), (0x07));
 24429     164D  3007               	movlw	7
 24430     164E  00A4               	movwf	i2c_read1ByteRegister@reg
 24431     164F  3019               	movlw	25
 24432     1650  318B  23B3  3196   	fcall	_i2c_read1ByteRegister
 24433     1653  0140               	movlb	0	; select bank0
 24434     1654  00AF               	movwf	BMA253_GetAccelDataZ@msbData
 24435     1655                     l13500:
 24436                           
 24437                           ;mcc_generated_files/application/BMA253_accel.c: 108:     *zAccelData = ((((int16_t) msb
      +                          Data) << 8) | (lsbData)) >> 4;
 24438     1655  082F               	movf	BMA253_GetAccelDataZ@msbData,w
 24439     1656  00AB               	movwf	??_BMA253_GetAccelDataZ+1
 24440     1657  082E               	movf	BMA253_GetAccelDataZ@lsbData,w
 24441     1658  00AA               	movwf	??_BMA253_GetAccelDataZ
 24442     1659  3004               	movlw	4
 24443     165A  00AC               	movwf	??_BMA253_GetAccelDataZ+2
 24444     165B                     u10275:
 24445     165B  0D2B               	rlf	??_BMA253_GetAccelDataZ+1,w
 24446     165C  0CAB               	rrf	??_BMA253_GetAccelDataZ+1,f
 24447     165D  0CAA               	rrf	??_BMA253_GetAccelDataZ,f
 24448     165E  0BAC               	decfsz	??_BMA253_GetAccelDataZ+2,f
 24449     165F  2E5B               	goto	u10275
 24450     1660  082D               	movf	BMA253_GetAccelDataZ@zAccelData,w
 24451     1661  0086               	movwf	6
 24452     1662  0187               	clrf	7
 24453     1663  082A               	movf	??_BMA253_GetAccelDataZ,w
 24454     1664  3FC0               	movwi [0]fsr1
 24455     1665  082B               	movf	??_BMA253_GetAccelDataZ+1,w
 24456     1666  3FC1               	movwi [1]fsr1
 24457     1667                     l35:
 24458     1667  0008               	return
 24459     1668                     __end_of_BMA253_GetAccelDataZ:
 24460                           
 24461                           	psect	text104
 24462     10C2                     __ptext104:	
 24463 ;; *************** function _BMA253_NewAccelDataRdyZ *****************
 24464 ;; Defined at:
 24465 ;;		line 152 in file "mcc_generated_files/application/BMA253_accel.c"
 24466 ;; Parameters:    Size  Location     Type
 24467 ;;		None
 24468 ;; Auto vars:     Size  Location     Type
 24469 ;;  zNewData        1   11[COMMON] _Bool 
 24470 ;; Return value:  Size  Location     Type
 24471 ;;                  1    wreg      _Bool 
 24472 ;; Registers used:
 24473 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24474 ;; Tracked objects:
 24475 ;;		On entry : 0/0
 24476 ;;		On exit  : 0/0
 24477 ;;		Unchanged: 0/0
 24478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24480 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24482 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24483 ;;Total ram usage:        1 bytes
 24484 ;; Hardware stack levels used: 1
 24485 ;; Hardware stack levels required when called: 13
 24486 ;; This function calls:
 24487 ;;		_i2c_read1ByteRegister
 24488 ;; This function is called by:
 24489 ;;		_BMA253_GetAccelDataZ
 24490 ;;		_BMA253_GetAccelDataXYZ
 24491 ;; This function uses a non-reentrant model
 24492 ;;
 24493                           
 24494     10C2                     _BMA253_NewAccelDataRdyZ:	
 24495                           ;psect for function _BMA253_NewAccelDataRdyZ
 24496                           
 24497     10C2                     l13406:	
 24498                           ;incstack = 0
 24499                           ; Regs used in _BMA253_NewAccelDataRdyZ: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24500                           
 24501                           
 24502                           ;mcc_generated_files/application/BMA253_accel.c: 153:     _Bool zNewData;;mcc_generated_
      +                          files/application/BMA253_accel.c: 155:     zNewData = (i2c_read1ByteRegister((0x19), (0x
      +                          06)) & (0x01));
 24503     10C2  3006               	movlw	6
 24504     10C3  0140               	movlb	0	; select bank0
 24505     10C4  00A4               	movwf	i2c_read1ByteRegister@reg
 24506     10C5  3019               	movlw	25
 24507     10C6  318B  23B3  3190   	fcall	_i2c_read1ByteRegister
 24508     10C9  3901               	andlw	1
 24509     10CA  1D03               	btfss	3,2
 24510     10CB  28CD               	goto	u10141
 24511     10CC  28CF               	goto	u10140
 24512     10CD                     u10141:
 24513     10CD  3001               	movlw	1
 24514     10CE  28D0               	goto	u10150
 24515     10CF                     u10140:
 24516     10CF  3000               	movlw	0
 24517     10D0                     u10150:
 24518     10D0  00FB               	movwf	BMA253_NewAccelDataRdyZ@zNewData
 24519     10D1                     l13408:
 24520                           
 24521                           ;mcc_generated_files/application/BMA253_accel.c: 157:     return zNewData;
 24522     10D1  087B               	movf	BMA253_NewAccelDataRdyZ@zNewData,w
 24523     10D2                     l56:
 24524     10D2  0008               	return
 24525     10D3                     __end_of_BMA253_NewAccelDataRdyZ:
 24526                           
 24527                           	psect	text105
 24528     160C                     __ptext105:	
 24529 ;; *************** function _BMA253_GetAccelDataY *****************
 24530 ;; Defined at:
 24531 ;;		line 87 in file "mcc_generated_files/application/BMA253_accel.c"
 24532 ;; Parameters:    Size  Location     Type
 24533 ;;  yAccelData      1    wreg     PTR short 
 24534 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 24535 ;; Auto vars:     Size  Location     Type
 24536 ;;  yAccelData      1   13[BANK0 ] PTR short 
 24537 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 24538 ;;  msbData         1   15[BANK0 ] unsigned char 
 24539 ;;  lsbData         1   14[BANK0 ] unsigned char 
 24540 ;; Return value:  Size  Location     Type
 24541 ;;                  1    wreg      void 
 24542 ;; Registers used:
 24543 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24544 ;; Tracked objects:
 24545 ;;		On entry : 0/0
 24546 ;;		On exit  : 0/0
 24547 ;;		Unchanged: 0/0
 24548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24550 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24551 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24552 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24553 ;;Total ram usage:        6 bytes
 24554 ;; Hardware stack levels used: 1
 24555 ;; Hardware stack levels required when called: 14
 24556 ;; This function calls:
 24557 ;;		_BMA253_NewAccelDataRdyY
 24558 ;;		_i2c_read1ByteRegister
 24559 ;; This function is called by:
 24560 ;;		_BMA253_GetAccelDataXYZ
 24561 ;; This function uses a non-reentrant model
 24562 ;;
 24563                           
 24564     160C                     _BMA253_GetAccelDataY:	
 24565                           ;psect for function _BMA253_GetAccelDataY
 24566                           
 24567                           
 24568                           ;incstack = 0
 24569 ;; hardware stack exceeded
 24570                           ; Regs used in _BMA253_GetAccelDataY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24571                           ;BMA253_GetAccelDataY@yAccelData stored from wreg
 24572     160C  0140               	movlb	0	; select bank0
 24573     160D  00AD               	movwf	BMA253_GetAccelDataY@yAccelData
 24574     160E                     l13486:
 24575     160E                     l13488:	
 24576                           ;mcc_generated_files/application/BMA253_accel.c: 88:     uint8_t lsbData;;mcc_generated_
      +                          files/application/BMA253_accel.c: 89:     uint8_t msbData;;mcc_generated_files/applicati
      +                          on/BMA253_accel.c: 90:     while (!BMA253_NewAccelDataRdyY()) {
 24577                           
 24578                           
 24579                           ;mcc_generated_files/application/BMA253_accel.c: 90:     while (!BMA253_NewAccelDataRdyY
      +                          ()) {
 24580     160E  3190  20B1  3196   	fcall	_BMA253_NewAccelDataRdyY
 24581     1611  3A00               	xorlw	0
 24582     1612  1903               	skipnz
 24583     1613  2E15               	goto	u10241
 24584     1614  2E16               	goto	u10240
 24585     1615                     u10241:
 24586     1615  2E0E               	goto	l13488
 24587     1616                     u10240:
 24588     1616                     l13490:
 24589                           
 24590                           ;mcc_generated_files/application/BMA253_accel.c: 94:     lsbData = i2c_read1ByteRegister
      +                          ((0x19), (0x04));
 24591     1616  3004               	movlw	4
 24592     1617  0140               	movlb	0	; select bank0
 24593     1618  00A4               	movwf	i2c_read1ByteRegister@reg
 24594     1619  3019               	movlw	25
 24595     161A  318B  23B3  3196   	fcall	_i2c_read1ByteRegister
 24596     161D  0140               	movlb	0	; select bank0
 24597     161E  00AE               	movwf	BMA253_GetAccelDataY@lsbData
 24598                           
 24599                           ;mcc_generated_files/application/BMA253_accel.c: 95:     msbData = i2c_read1ByteRegister
      +                          ((0x19), (0x05));
 24600     161F  3005               	movlw	5
 24601     1620  00A4               	movwf	i2c_read1ByteRegister@reg
 24602     1621  3019               	movlw	25
 24603     1622  318B  23B3  3196   	fcall	_i2c_read1ByteRegister
 24604     1625  0140               	movlb	0	; select bank0
 24605     1626  00AF               	movwf	BMA253_GetAccelDataY@msbData
 24606     1627                     l13492:
 24607                           
 24608                           ;mcc_generated_files/application/BMA253_accel.c: 96:     *yAccelData = ((((int16_t) msbD
      +                          ata) << 8) | (lsbData)) >> 4;
 24609     1627  082F               	movf	BMA253_GetAccelDataY@msbData,w
 24610     1628  00AB               	movwf	??_BMA253_GetAccelDataY+1
 24611     1629  082E               	movf	BMA253_GetAccelDataY@lsbData,w
 24612     162A  00AA               	movwf	??_BMA253_GetAccelDataY
 24613     162B  3004               	movlw	4
 24614     162C  00AC               	movwf	??_BMA253_GetAccelDataY+2
 24615     162D                     u10255:
 24616     162D  0D2B               	rlf	??_BMA253_GetAccelDataY+1,w
 24617     162E  0CAB               	rrf	??_BMA253_GetAccelDataY+1,f
 24618     162F  0CAA               	rrf	??_BMA253_GetAccelDataY,f
 24619     1630  0BAC               	decfsz	??_BMA253_GetAccelDataY+2,f
 24620     1631  2E2D               	goto	u10255
 24621     1632  082D               	movf	BMA253_GetAccelDataY@yAccelData,w
 24622     1633  0086               	movwf	6
 24623     1634  0187               	clrf	7
 24624     1635  082A               	movf	??_BMA253_GetAccelDataY,w
 24625     1636  3FC0               	movwi [0]fsr1
 24626     1637  082B               	movf	??_BMA253_GetAccelDataY+1,w
 24627     1638  3FC1               	movwi [1]fsr1
 24628     1639                     l29:
 24629     1639  0008               	return
 24630     163A                     __end_of_BMA253_GetAccelDataY:
 24631                           
 24632                           	psect	text106
 24633     10B1                     __ptext106:	
 24634 ;; *************** function _BMA253_NewAccelDataRdyY *****************
 24635 ;; Defined at:
 24636 ;;		line 144 in file "mcc_generated_files/application/BMA253_accel.c"
 24637 ;; Parameters:    Size  Location     Type
 24638 ;;		None
 24639 ;; Auto vars:     Size  Location     Type
 24640 ;;  yNewData        1   11[COMMON] _Bool 
 24641 ;; Return value:  Size  Location     Type
 24642 ;;                  1    wreg      _Bool 
 24643 ;; Registers used:
 24644 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24645 ;; Tracked objects:
 24646 ;;		On entry : 0/0
 24647 ;;		On exit  : 0/0
 24648 ;;		Unchanged: 0/0
 24649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24651 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24653 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24654 ;;Total ram usage:        1 bytes
 24655 ;; Hardware stack levels used: 1
 24656 ;; Hardware stack levels required when called: 13
 24657 ;; This function calls:
 24658 ;;		_i2c_read1ByteRegister
 24659 ;; This function is called by:
 24660 ;;		_BMA253_GetAccelDataY
 24661 ;;		_BMA253_GetAccelDataXYZ
 24662 ;; This function uses a non-reentrant model
 24663 ;;
 24664                           
 24665     10B1                     _BMA253_NewAccelDataRdyY:	
 24666                           ;psect for function _BMA253_NewAccelDataRdyY
 24667                           
 24668     10B1                     l13400:	
 24669                           ;incstack = 0
 24670                           ; Regs used in _BMA253_NewAccelDataRdyY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24671                           
 24672                           
 24673                           ;mcc_generated_files/application/BMA253_accel.c: 145:     _Bool yNewData;;mcc_generated_
      +                          files/application/BMA253_accel.c: 147:     yNewData = (i2c_read1ByteRegister((0x19), (0x
      +                          04)) & (0x01));
 24674     10B1  3004               	movlw	4
 24675     10B2  0140               	movlb	0	; select bank0
 24676     10B3  00A4               	movwf	i2c_read1ByteRegister@reg
 24677     10B4  3019               	movlw	25
 24678     10B5  318B  23B3  3190   	fcall	_i2c_read1ByteRegister
 24679     10B8  3901               	andlw	1
 24680     10B9  1D03               	btfss	3,2
 24681     10BA  28BC               	goto	u10121
 24682     10BB  28BE               	goto	u10120
 24683     10BC                     u10121:
 24684     10BC  3001               	movlw	1
 24685     10BD  28BF               	goto	u10130
 24686     10BE                     u10120:
 24687     10BE  3000               	movlw	0
 24688     10BF                     u10130:
 24689     10BF  00FB               	movwf	BMA253_NewAccelDataRdyY@yNewData
 24690     10C0                     l13402:
 24691                           
 24692                           ;mcc_generated_files/application/BMA253_accel.c: 149:     return yNewData;
 24693     10C0  087B               	movf	BMA253_NewAccelDataRdyY@yNewData,w
 24694     10C1                     l53:
 24695     10C1  0008               	return
 24696     10C2                     __end_of_BMA253_NewAccelDataRdyY:
 24697                           
 24698                           	psect	text107
 24699     0BB3                     __ptext107:	
 24700 ;; *************** function _i2c_read1ByteRegister *****************
 24701 ;; Defined at:
 24702 ;;		line 97 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 24703 ;; Parameters:    Size  Location     Type
 24704 ;;  address         1    wreg     unsigned char 
 24705 ;;  reg             1    4[BANK0 ] unsigned char 
 24706 ;; Auto vars:     Size  Location     Type
 24707 ;;  address         1    5[BANK0 ] unsigned char 
 24708 ;;  x               2    7[BANK0 ] int 
 24709 ;;  d2              1    9[BANK0 ] unsigned char 
 24710 ;;  e               1    6[BANK0 ] enum E358
 24711 ;; Return value:  Size  Location     Type
 24712 ;;                  1    wreg      unsigned char 
 24713 ;; Registers used:
 24714 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24715 ;; Tracked objects:
 24716 ;;		On entry : 0/0
 24717 ;;		On exit  : 0/0
 24718 ;;		Unchanged: 0/0
 24719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24720 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24721 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24723 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24724 ;;Total ram usage:        6 bytes
 24725 ;; Hardware stack levels used: 1
 24726 ;; Hardware stack levels required when called: 12
 24727 ;; This function calls:
 24728 ;;		_I2C1_Close
 24729 ;;		_I2C1_MasterWrite
 24730 ;;		_I2C1_Open
 24731 ;;		_I2C1_SetAddressNackCallback
 24732 ;;		_I2C1_SetBuffer
 24733 ;;		_I2C1_SetDataCompleteCallback
 24734 ;; This function is called by:
 24735 ;;		_BMA253_GetAccelDataY
 24736 ;;		_BMA253_GetAccelDataZ
 24737 ;;		_BMA253_NewAccelDataRdyY
 24738 ;;		_BMA253_NewAccelDataRdyZ
 24739 ;;		_readRegister
 24740 ;;		_BMA253_GetAccelDataX
 24741 ;;		_BMA253_GetAccelChipId
 24742 ;;		_BMA253_NewAccelDataRdyX
 24743 ;; This function uses a non-reentrant model
 24744 ;;
 24745                           
 24746     0BB3                     _i2c_read1ByteRegister:	
 24747                           ;psect for function _i2c_read1ByteRegister
 24748                           
 24749                           
 24750                           ;incstack = 0
 24751                           ; Regs used in _i2c_read1ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24752                           ;i2c_read1ByteRegister@address stored from wreg
 24753     0BB3  0140               	movlb	0	; select bank0
 24754     0BB4  00A5               	movwf	i2c_read1ByteRegister@address
 24755     0BB5                     l13108:
 24756                           
 24757                           ;mcc_generated_files/drivers/i2c_simple_master.c: 97: uint8_t i2c_read1ByteRegister(i2c1
      +                          _address_t address, uint8_t reg);mcc_generated_files/drivers/i2c_simple_master.c: 98: {;
      +                          mcc_generated_files/drivers/i2c_simple_master.c: 99:     uint8_t d2=42;
 24758     0BB5  302A               	movlw	42
 24759     0BB6  00A9               	movwf	i2c_read1ByteRegister@d2
 24760                           
 24761                           ;mcc_generated_files/drivers/i2c_simple_master.c: 100:     i2c1_error_t e;;mcc_generated
      +                          _files/drivers/i2c_simple_master.c: 101:     int x;;mcc_generated_files/drivers/i2c_simp
      +                          le_master.c: 103:     for(x = 2; x != 0; x--)
 24762     0BB7  3002               	movlw	2
 24763     0BB8  00A7               	movwf	i2c_read1ByteRegister@x
 24764     0BB9  3000               	movlw	0
 24765     0BBA  00A8               	movwf	i2c_read1ByteRegister@x+1
 24766     0BBB                     l13114:
 24767     0BBB  0140               	movlb	0	; select bank0
 24768     0BBC  0825               	movf	i2c_read1ByteRegister@address,w
 24769     0BBD  3197  275C  318B   	fcall	_I2C1_Open
 24770     0BC0  3A00               	xorlw	0
 24771     0BC1  1903               	skipnz
 24772     0BC2  2BC4               	goto	u9771
 24773     0BC3  2BC5               	goto	u9770
 24774     0BC4                     u9771:
 24775     0BC4  2BBB               	goto	l13114
 24776     0BC5                     u9770:
 24777     0BC5                     l13116:
 24778                           
 24779                           ;mcc_generated_files/drivers/i2c_simple_master.c: 106:         I2C1_SetDataCompleteCallb
      +                          ack(rd1RegCompleteHandler,&d2);
 24780     0BC5  300A               	movlw	low _rd1RegCompleteHandler
 24781     0BC6  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 24782     0BC7  3011               	movlw	high _rd1RegCompleteHandler
 24783     0BC8  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 24784     0BC9  3029               	movlw	(low (i2c_read1ByteRegister@d2| 0))& (0+255)
 24785     0BCA  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 24786     0BCB  319F  27D4  318B   	fcall	_I2C1_SetDataCompleteCallback
 24787     0BCE                     l13118:
 24788                           
 24789                           ;mcc_generated_files/drivers/i2c_simple_master.c: 107:         I2C1_SetBuffer(&reg,1);
 24790     0BCE  3024               	movlw	low i2c_read1ByteRegister@reg
 24791     0BCF  00F1               	movwf	I2C1_SetBuffer@buffer
 24792     0BD0  3000               	movlw	high i2c_read1ByteRegister@reg
 24793     0BD1  00F2               	movwf	I2C1_SetBuffer@buffer+1
 24794     0BD2  3001               	movlw	1
 24795     0BD3  00F3               	movwf	I2C1_SetBuffer@bufferSize
 24796     0BD4  3000               	movlw	0
 24797     0BD5  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 24798     0BD6  3190  2093  318B   	fcall	_I2C1_SetBuffer
 24799     0BD9                     l13120:
 24800                           
 24801                           ;mcc_generated_files/drivers/i2c_simple_master.c: 108:         I2C1_SetAddressNackCallba
      +                          ck(((void*)0),((void*)0));
 24802     0BD9  3000               	movlw	0
 24803     0BDA  00F5               	movwf	I2C1_SetAddressNackCallback@cb
 24804     0BDB  00F6               	movwf	I2C1_SetAddressNackCallback@cb+1
 24805     0BDC  3000               	movlw	0
 24806     0BDD  00F7               	movwf	I2C1_SetAddressNackCallback@ptr
 24807     0BDE  00F8               	movwf	I2C1_SetAddressNackCallback@ptr+1
 24808     0BDF  319F  27DF  318B   	fcall	_I2C1_SetAddressNackCallback
 24809     0BE2                     l13122:
 24810                           
 24811                           ;mcc_generated_files/drivers/i2c_simple_master.c: 109:         I2C1_MasterWrite();
 24812     0BE2  319E  26E1  318B   	fcall	_I2C1_MasterWrite
 24813     0BE5                     l13124:	
 24814                           ;mcc_generated_files/drivers/i2c_simple_master.c: 110:         while(I2C1_BUSY == (e = I
      +                          2C1_Close()));
 24815                           
 24816     0BE5  3192  22AB  318B   	fcall	_I2C1_Close
 24817     0BE8  0140               	movlb	0	; select bank0
 24818     0BE9  00A6               	movwf	i2c_read1ByteRegister@e
 24819     0BEA  0326               	decf	i2c_read1ByteRegister@e,w
 24820     0BEB  1903               	btfsc	3,2
 24821     0BEC  2BEE               	goto	u9781
 24822     0BED  2BEF               	goto	u9780
 24823     0BEE                     u9781:
 24824     0BEE  2BE5               	goto	l13124
 24825     0BEF                     u9780:
 24826     0BEF                     l13126:
 24827                           
 24828                           ;mcc_generated_files/drivers/i2c_simple_master.c: 111:         if(e==I2C1_NOERR) break;
 24829     0BEF  0826               	movf	i2c_read1ByteRegister@e,w
 24830     0BF0  1D03               	btfss	3,2
 24831     0BF1  2BF3               	goto	u9791
 24832     0BF2  2BF4               	goto	u9790
 24833     0BF3                     u9791:
 24834     0BF3  2BF5               	goto	l13130
 24835     0BF4                     u9790:
 24836     0BF4  2BFF               	goto	l13134
 24837     0BF5                     l13130:
 24838                           
 24839                           ;mcc_generated_files/drivers/i2c_simple_master.c: 112:     }
 24840     0BF5  30FF               	movlw	255
 24841     0BF6  07A7               	addwf	i2c_read1ByteRegister@x,f
 24842     0BF7  30FF               	movlw	255
 24843     0BF8  3DA8               	addwfc	i2c_read1ByteRegister@x+1,f
 24844     0BF9                     l13132:
 24845     0BF9  0827               	movf	i2c_read1ByteRegister@x,w
 24846     0BFA  0428               	iorwf	i2c_read1ByteRegister@x+1,w
 24847     0BFB  1D03               	btfss	3,2
 24848     0BFC  2BFE               	goto	u9801
 24849     0BFD  2BFF               	goto	u9800
 24850     0BFE                     u9801:
 24851     0BFE  2BBB               	goto	l13114
 24852     0BFF                     u9800:
 24853     0BFF                     l13134:
 24854                           
 24855                           ;mcc_generated_files/drivers/i2c_simple_master.c: 115:     return d2;
 24856     0BFF  0829               	movf	i2c_read1ByteRegister@d2,w
 24857     0C00                     l534:
 24858     0C00  0008               	return
 24859     0C01                     __end_of_i2c_read1ByteRegister:
 24860                           
 24861                           	psect	text108
 24862     1FDF                     __ptext108:	
 24863 ;; *************** function _I2C1_SetAddressNackCallback *****************
 24864 ;; Defined at:
 24865 ;;		line 283 in file "mcc_generated_files/i2c1_master.c"
 24866 ;; Parameters:    Size  Location     Type
 24867 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 24868 ;;		 -> NULL(1), 
 24869 ;;  ptr             2    7[COMMON] PTR void 
 24870 ;;		 -> NULL(0), 
 24871 ;; Auto vars:     Size  Location     Type
 24872 ;;		None
 24873 ;; Return value:  Size  Location     Type
 24874 ;;                  1    wreg      void 
 24875 ;; Registers used:
 24876 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24877 ;; Tracked objects:
 24878 ;;		On entry : 0/0
 24879 ;;		On exit  : 0/0
 24880 ;;		Unchanged: 0/0
 24881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24882 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24885 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24886 ;;Total ram usage:        4 bytes
 24887 ;; Hardware stack levels used: 1
 24888 ;; Hardware stack levels required when called: 5
 24889 ;; This function calls:
 24890 ;;		_I2C1_SetCallback
 24891 ;; This function is called by:
 24892 ;;		_i2c_write1ByteRegister
 24893 ;;		_i2c_read1ByteRegister
 24894 ;;		_i2c_read2ByteRegister
 24895 ;;		_i2c_writeNBytes
 24896 ;;		_i2c_write2ByteRegister
 24897 ;;		_i2c_readDataBlock
 24898 ;;		_I2C1_Read1ByteRegister
 24899 ;;		_I2C1_Read2ByteRegister
 24900 ;;		_I2C1_Write1ByteRegister
 24901 ;;		_I2C1_Write2ByteRegister
 24902 ;;		_I2C1_WriteNBytes
 24903 ;;		_I2C1_ReadDataBlock
 24904 ;; This function uses a non-reentrant model
 24905 ;;
 24906                           
 24907     1FDF                     _I2C1_SetAddressNackCallback:	
 24908                           ;psect for function _I2C1_SetAddressNackCallback
 24909                           
 24910     1FDF                     l13074:	
 24911                           ;incstack = 0
 24912                           ; Regs used in _I2C1_SetAddressNackCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 24913                           
 24914                           
 24915                           ;mcc_generated_files/i2c1_master.c: 283: void I2C1_SetAddressNackCallback(i2c1_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c1_master.c: 284: {;mcc_generated_files/i2c1_mast
      +                          er.c: 285:     I2C1_SetCallback(I2C1_ADDR_NACK, cb, ptr);
 24916     1FDF  0876               	movf	I2C1_SetAddressNackCallback@cb+1,w
 24917     1FE0  00F2               	movwf	I2C1_SetCallback@cb+1
 24918     1FE1  0875               	movf	I2C1_SetAddressNackCallback@cb,w
 24919     1FE2  00F1               	movwf	I2C1_SetCallback@cb
 24920     1FE3  0877               	movf	I2C1_SetAddressNackCallback@ptr,w
 24921     1FE4  00F3               	movwf	I2C1_SetCallback@ptr
 24922     1FE5  3002               	movlw	2
 24923     1FE6  3188  2001  319F   	fcall	_I2C1_SetCallback
 24924     1FE9                     l2432:
 24925     1FE9  0008               	return
 24926     1FEA                     __end_of_I2C1_SetAddressNackCallback:
 24927                           
 24928                           	psect	text109
 24929     175C                     __ptext109:	
 24930 ;; *************** function _I2C1_Open *****************
 24931 ;; Defined at:
 24932 ;;		line 176 in file "mcc_generated_files/i2c1_master.c"
 24933 ;; Parameters:    Size  Location     Type
 24934 ;;  address         1    wreg     unsigned char 
 24935 ;; Auto vars:     Size  Location     Type
 24936 ;;  address         1    1[COMMON] unsigned char 
 24937 ;;  returnValue     1    2[COMMON] enum E358
 24938 ;; Return value:  Size  Location     Type
 24939 ;;                  1    wreg      enum E358
 24940 ;; Registers used:
 24941 ;;		wreg, status,2, status,0, pclath, cstack
 24942 ;; Tracked objects:
 24943 ;;		On entry : 0/0
 24944 ;;		On exit  : 0/0
 24945 ;;		Unchanged: 0/0
 24946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24948 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24950 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24951 ;;Total ram usage:        2 bytes
 24952 ;; Hardware stack levels used: 1
 24953 ;; Hardware stack levels required when called: 5
 24954 ;; This function calls:
 24955 ;;		_I2C1_MasterClearIrq
 24956 ;;		_I2C1_MasterOpen
 24957 ;; This function is called by:
 24958 ;;		_i2c_write1ByteRegister
 24959 ;;		_i2c_read1ByteRegister
 24960 ;;		_i2c_read2ByteRegister
 24961 ;;		_i2c_writeNBytes
 24962 ;;		_i2c_write2ByteRegister
 24963 ;;		_i2c_readDataBlock
 24964 ;;		_i2c_readNBytes
 24965 ;;		_I2C1_Read1ByteRegister
 24966 ;;		_I2C1_Read2ByteRegister
 24967 ;;		_I2C1_Write1ByteRegister
 24968 ;;		_I2C1_Write2ByteRegister
 24969 ;;		_I2C1_WriteNBytes
 24970 ;;		_I2C1_ReadNBytes
 24971 ;;		_I2C1_ReadDataBlock
 24972 ;; This function uses a non-reentrant model
 24973 ;;
 24974                           
 24975     175C                     _I2C1_Open:	
 24976                           ;psect for function _I2C1_Open
 24977                           
 24978                           
 24979                           ;incstack = 0
 24980                           ; Regs used in _I2C1_Open: [wreg+status,2+status,0+pclath+cstack]
 24981                           ;I2C1_Open@address stored from wreg
 24982     175C  00F1               	movwf	I2C1_Open@address
 24983     175D                     l13042:
 24984                           
 24985                           ;mcc_generated_files/i2c1_master.c: 176: i2c1_error_t I2C1_Open(i2c1_address_t address);
      +                          mcc_generated_files/i2c1_master.c: 177: {;mcc_generated_files/i2c1_master.c: 178:     i2
      +                          c1_error_t returnValue = I2C1_BUSY;
 24986     175D  01F2               	clrf	I2C1_Open@returnValue
 24987     175E  0AF2               	incf	I2C1_Open@returnValue,f
 24988                           
 24989                           ;mcc_generated_files/i2c1_master.c: 180:     if(!I2C1_Status.inUse)
 24990     175F  0141               	movlb	1	; select bank1
 24991     1760  193D               	btfsc	(_I2C1_Status^(0+128)+29),2
 24992     1761  2F63               	goto	u9751
 24993     1762  2F64               	goto	u9750
 24994     1763                     u9751:
 24995     1763  2F90               	goto	l2399
 24996     1764                     u9750:
 24997     1764                     l13044:
 24998                           
 24999                           ;mcc_generated_files/i2c1_master.c: 181:     {;mcc_generated_files/i2c1_master.c: 182:  
      +                                 I2C1_Status.address = address;
 25000     1764  0871               	movf	I2C1_Open@address,w
 25001     1765  00B6               	movwf	(_I2C1_Status^(0+128)+22)
 25002     1766                     l13046:
 25003                           
 25004                           ;mcc_generated_files/i2c1_master.c: 183:         I2C1_Status.busy = 0;
 25005     1766  10BD               	bcf	(_I2C1_Status^(0+128)+29),1
 25006     1767                     l13048:
 25007                           
 25008                           ;mcc_generated_files/i2c1_master.c: 184:         I2C1_Status.inUse = 1;
 25009     1767  153D               	bsf	(_I2C1_Status^(0+128)+29),2
 25010     1768                     l13050:
 25011                           
 25012                           ;mcc_generated_files/i2c1_master.c: 185:         I2C1_Status.addressNackCheck = 0;
 25013     1768  103D               	bcf	(_I2C1_Status^(0+128)+29),0
 25014                           
 25015                           ;mcc_generated_files/i2c1_master.c: 186:         I2C1_Status.state = I2C1_RESET;
 25016     1769  300E               	movlw	14
 25017     176A  00BB               	movwf	(_I2C1_Status^(0+128)+27)
 25018                           
 25019                           ;mcc_generated_files/i2c1_master.c: 187:         I2C1_Status.time_out_value = 500;
 25020     176B  30F4               	movlw	244
 25021     176C  00B4               	movwf	(_I2C1_Status^(0+128)+20)
 25022     176D  3001               	movlw	1
 25023     176E  00B5               	movwf	(_I2C1_Status^(0+128)+21)
 25024     176F                     l13052:
 25025                           
 25026                           ;mcc_generated_files/i2c1_master.c: 188:         I2C1_Status.bufferFree = 1;
 25027     176F  15BD               	bsf	(_I2C1_Status^(0+128)+29),3
 25028                           
 25029                           ;mcc_generated_files/i2c1_master.c: 191:         I2C1_Status.callbackTable[I2C1_DATA_COM
      +                          PLETE]=I2C1_CallbackReturnStop;
 25030     1770  306D               	movlw	low _I2C1_CallbackReturnStop
 25031     1771  00A0               	movwf	_I2C1_Status^(0+128)
 25032     1772  301E               	movlw	high _I2C1_CallbackReturnStop
 25033     1773  00A1               	movwf	(_I2C1_Status^(0+128)+1)
 25034     1774                     l13054:
 25035                           
 25036                           ;mcc_generated_files/i2c1_master.c: 192:         I2C1_Status.callbackPayload[I2C1_DATA_C
      +                          OMPLETE] = ((void*)0);
 25037     1774  01AC               	clrf	(low ((_I2C1_Status| 0+12)))^(0+128)
 25038     1775                     l13056:
 25039                           
 25040                           ;mcc_generated_files/i2c1_master.c: 193:         I2C1_Status.callbackTable[I2C1_WRITE_CO
      +                          LLISION]=I2C1_CallbackReturnStop;
 25041     1775  306D               	movlw	low _I2C1_CallbackReturnStop
 25042     1776  00A2               	movwf	(low ((_I2C1_Status| 0+2)))^(0+128)
 25043     1777  301E               	movlw	high _I2C1_CallbackReturnStop
 25044     1778  00A3               	movwf	((low ((_I2C1_Status| 0+2)))^(0+128)+1)
 25045                           
 25046                           ;mcc_generated_files/i2c1_master.c: 194:         I2C1_Status.callbackPayload[I2C1_WRITE_
      +                          COLLISION] = ((void*)0);
 25047     1779  01AD               	clrf	(low ((_I2C1_Status| 0+13)))^(0+128)
 25048     177A                     l13058:
 25049                           
 25050                           ;mcc_generated_files/i2c1_master.c: 195:         I2C1_Status.callbackTable[I2C1_ADDR_NAC
      +                          K]=I2C1_CallbackReturnStop;
 25051     177A  306D               	movlw	low _I2C1_CallbackReturnStop
 25052     177B  00A4               	movwf	(low ((_I2C1_Status| 0+4)))^(0+128)
 25053     177C  301E               	movlw	high _I2C1_CallbackReturnStop
 25054     177D  00A5               	movwf	((low ((_I2C1_Status| 0+4)))^(0+128)+1)
 25055     177E                     l13060:
 25056                           
 25057                           ;mcc_generated_files/i2c1_master.c: 196:         I2C1_Status.callbackPayload[I2C1_ADDR_N
      +                          ACK] = ((void*)0);
 25058     177E  01AE               	clrf	(low ((_I2C1_Status| 0+14)))^(0+128)
 25059                           
 25060                           ;mcc_generated_files/i2c1_master.c: 197:         I2C1_Status.callbackTable[I2C1_DATA_NAC
      +                          K]=I2C1_CallbackReturnStop;
 25061     177F  306D               	movlw	low _I2C1_CallbackReturnStop
 25062     1780  00A6               	movwf	(low ((_I2C1_Status| 0+6)))^(0+128)
 25063     1781  301E               	movlw	high _I2C1_CallbackReturnStop
 25064     1782  00A7               	movwf	((low ((_I2C1_Status| 0+6)))^(0+128)+1)
 25065     1783                     l13062:
 25066                           
 25067                           ;mcc_generated_files/i2c1_master.c: 198:         I2C1_Status.callbackPayload[I2C1_DATA_N
      +                          ACK] = ((void*)0);
 25068     1783  01AF               	clrf	(low ((_I2C1_Status| 0+15)))^(0+128)
 25069     1784                     l13064:
 25070                           
 25071                           ;mcc_generated_files/i2c1_master.c: 199:         I2C1_Status.callbackTable[I2C1_TIMEOUT]
      +                          =I2C1_CallbackReturnReset;
 25072     1784  306F               	movlw	low _I2C1_CallbackReturnReset
 25073     1785  00A8               	movwf	(low ((_I2C1_Status| 0+8)))^(0+128)
 25074     1786  301E               	movlw	high _I2C1_CallbackReturnReset
 25075     1787  00A9               	movwf	((low ((_I2C1_Status| 0+8)))^(0+128)+1)
 25076                           
 25077                           ;mcc_generated_files/i2c1_master.c: 200:         I2C1_Status.callbackPayload[I2C1_TIMEOU
      +                          T] = ((void*)0);
 25078     1788  01B0               	clrf	(low ((_I2C1_Status| 0+16)))^(0+128)
 25079     1789                     l13066:
 25080                           
 25081                           ;mcc_generated_files/i2c1_master.c: 202:         I2C1_MasterClearIrq();
 25082     1789  319E  2671  3197   	fcall	_I2C1_MasterClearIrq
 25083     178C                     l13068:
 25084                           
 25085                           ;mcc_generated_files/i2c1_master.c: 203:         I2C1_MasterOpen();
 25086     178C  3190  204D  3197   	fcall	_I2C1_MasterOpen
 25087     178F                     l13070:
 25088                           
 25089                           ;mcc_generated_files/i2c1_master.c: 204:         returnValue = I2C1_NOERR;
 25090     178F  01F2               	clrf	I2C1_Open@returnValue
 25091     1790                     l2399:	
 25092                           ;mcc_generated_files/i2c1_master.c: 205:     }
 25093                           
 25094                           
 25095                           ;mcc_generated_files/i2c1_master.c: 206:     return returnValue;
 25096     1790  0872               	movf	I2C1_Open@returnValue,w
 25097     1791                     l2400:
 25098     1791  0008               	return
 25099     1792                     __end_of_I2C1_Open:
 25100                           
 25101                           	psect	text110
 25102     104D                     __ptext110:	
 25103 ;; *************** function _I2C1_MasterOpen *****************
 25104 ;; Defined at:
 25105 ;;		line 543 in file "mcc_generated_files/i2c1_master.c"
 25106 ;; Parameters:    Size  Location     Type
 25107 ;;		None
 25108 ;; Auto vars:     Size  Location     Type
 25109 ;;		None
 25110 ;; Return value:  Size  Location     Type
 25111 ;;                  1    wreg      _Bool 
 25112 ;; Registers used:
 25113 ;;		wreg, status,2
 25114 ;; Tracked objects:
 25115 ;;		On entry : 0/0
 25116 ;;		On exit  : 0/0
 25117 ;;		Unchanged: 0/0
 25118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25123 ;;Total ram usage:        0 bytes
 25124 ;; Hardware stack levels used: 1
 25125 ;; Hardware stack levels required when called: 4
 25126 ;; This function calls:
 25127 ;;		Nothing
 25128 ;; This function is called by:
 25129 ;;		_I2C1_Open
 25130 ;; This function uses a non-reentrant model
 25131 ;;
 25132                           
 25133     104D                     _I2C1_MasterOpen:	
 25134                           ;psect for function _I2C1_MasterOpen
 25135                           
 25136     104D                     l13006:	
 25137                           ;incstack = 0
 25138                           ; Regs used in _I2C1_MasterOpen: [wreg+status,2]
 25139                           
 25140                           
 25141                           ;mcc_generated_files/i2c1_master.c: 545:     if(!SSP1CON1bits.SSPEN)
 25142     104D  0143               	movlb	3	; select bank3
 25143     104E  1A90               	btfsc	16,5	;volatile
 25144     104F  2851               	goto	u9721
 25145     1050  2852               	goto	u9720
 25146     1051                     u9721:
 25147     1051  2859               	goto	l2565
 25148     1052                     u9720:
 25149     1052                     l13008:
 25150                           
 25151                           ;mcc_generated_files/i2c1_master.c: 546:     {;mcc_generated_files/i2c1_master.c: 547:  
      +                                 SSP1STAT = 0x00;
 25152     1052  018F               	clrf	15	;volatile
 25153     1053                     l13010:
 25154                           
 25155                           ;mcc_generated_files/i2c1_master.c: 548:         SSP1CON1 = 0x08;
 25156     1053  3008               	movlw	8
 25157     1054  0090               	movwf	16	;volatile
 25158     1055                     l13012:
 25159                           
 25160                           ;mcc_generated_files/i2c1_master.c: 549:         SSP1CON2 = 0x00;
 25161     1055  0191               	clrf	17	;volatile
 25162                           
 25163                           ;mcc_generated_files/i2c1_master.c: 550:         SSP1ADD = 0x4F;
 25164     1056  304F               	movlw	79
 25165     1057  008D               	movwf	13	;volatile
 25166     1058                     l13014:
 25167                           
 25168                           ;mcc_generated_files/i2c1_master.c: 551:         SSP1CON1bits.SSPEN = 1;
 25169     1058  1690               	bsf	16,5	;volatile
 25170     1059                     l2565:
 25171     1059  0008               	return
 25172     105A                     __end_of_I2C1_MasterOpen:
 25173                           
 25174                           	psect	text111
 25175     1EE1                     __ptext111:	
 25176 ;; *************** function _I2C1_MasterWrite *****************
 25177 ;; Defined at:
 25178 ;;		line 251 in file "mcc_generated_files/i2c1_master.c"
 25179 ;; Parameters:    Size  Location     Type
 25180 ;;		None
 25181 ;; Auto vars:     Size  Location     Type
 25182 ;;		None
 25183 ;; Return value:  Size  Location     Type
 25184 ;;                  1    wreg      enum E358
 25185 ;; Registers used:
 25186 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25187 ;; Tracked objects:
 25188 ;;		On entry : 0/0
 25189 ;;		On exit  : 0/0
 25190 ;;		Unchanged: 0/0
 25191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25196 ;;Total ram usage:        0 bytes
 25197 ;; Hardware stack levels used: 1
 25198 ;; Hardware stack levels required when called: 11
 25199 ;; This function calls:
 25200 ;;		_I2C1_MasterOperation
 25201 ;; This function is called by:
 25202 ;;		_i2c_write1ByteRegister
 25203 ;;		_i2c_read1ByteRegister
 25204 ;;		_i2c_read2ByteRegister
 25205 ;;		_i2c_writeNBytes
 25206 ;;		_i2c_write2ByteRegister
 25207 ;;		_i2c_readDataBlock
 25208 ;;		_I2C1_Read1ByteRegister
 25209 ;;		_I2C1_Read2ByteRegister
 25210 ;;		_I2C1_Write1ByteRegister
 25211 ;;		_I2C1_Write2ByteRegister
 25212 ;;		_I2C1_WriteNBytes
 25213 ;;		_I2C1_ReadDataBlock
 25214 ;; This function uses a non-reentrant model
 25215 ;;
 25216                           
 25217     1EE1                     _I2C1_MasterWrite:	
 25218                           ;psect for function _I2C1_MasterWrite
 25219                           
 25220     1EE1                     l13076:	
 25221                           ;incstack = 0
 25222                           ; Regs used in _I2C1_MasterWrite: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25223                           
 25224                           
 25225                           ;mcc_generated_files/i2c1_master.c: 253:     return I2C1_MasterOperation(0);;	Return val
      +                          ue of _I2C1_MasterWrite is never used
 25226     1EE1  3000               	movlw	0
 25227     1EE2  3193  23E7  319E   	fcall	_I2C1_MasterOperation
 25228     1EE5                     l2416:
 25229     1EE5  0008               	return
 25230     1EE6                     __end_of_I2C1_MasterWrite:
 25231                           
 25232                           	psect	text112
 25233     13E7                     __ptext112:	
 25234 ;; *************** function _I2C1_MasterOperation *****************
 25235 ;; Defined at:
 25236 ;;		line 224 in file "mcc_generated_files/i2c1_master.c"
 25237 ;; Parameters:    Size  Location     Type
 25238 ;;  read            1    wreg     _Bool 
 25239 ;; Auto vars:     Size  Location     Type
 25240 ;;  read            1    2[BANK0 ] _Bool 
 25241 ;;  returnValue     1    3[BANK0 ] enum E358
 25242 ;; Return value:  Size  Location     Type
 25243 ;;                  1    wreg      enum E358
 25244 ;; Registers used:
 25245 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25246 ;; Tracked objects:
 25247 ;;		On entry : 0/0
 25248 ;;		On exit  : 0/0
 25249 ;;		Unchanged: 0/0
 25250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25252 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25254 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25255 ;;Total ram usage:        2 bytes
 25256 ;; Hardware stack levels used: 1
 25257 ;; Hardware stack levels required when called: 10
 25258 ;; This function calls:
 25259 ;;		_I2C1_MasterStart
 25260 ;;		_I2C1_Poller
 25261 ;; This function is called by:
 25262 ;;		_I2C1_MasterWrite
 25263 ;;		_I2C1_MasterRead
 25264 ;; This function uses a non-reentrant model
 25265 ;;
 25266                           
 25267     13E7                     _I2C1_MasterOperation:	
 25268                           ;psect for function _I2C1_MasterOperation
 25269                           
 25270                           
 25271                           ;incstack = 0
 25272                           ; Regs used in _I2C1_MasterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25273                           ;I2C1_MasterOperation@read stored from wreg
 25274     13E7  0140               	movlb	0	; select bank0
 25275     13E8  00A2               	movwf	I2C1_MasterOperation@read
 25276     13E9                     l13022:
 25277                           
 25278                           ;mcc_generated_files/i2c1_master.c: 224: i2c1_error_t I2C1_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c1_master.c: 225: {;mcc_generated_files/i2c1_master.c: 226:     i2c
      +                          1_error_t returnValue = I2C1_BUSY;
 25279     13E9  01A3               	clrf	I2C1_MasterOperation@returnValue
 25280     13EA  0AA3               	incf	I2C1_MasterOperation@returnValue,f
 25281                           
 25282                           ;mcc_generated_files/i2c1_master.c: 227:     if(!I2C1_Status.busy)
 25283     13EB  0141               	movlb	1	; select bank1
 25284     13EC  18BD               	btfsc	(_I2C1_Status^(0+128)+29),1
 25285     13ED  2BEF               	goto	u9731
 25286     13EE  2BF0               	goto	u9730
 25287     13EF                     u9731:
 25288     13EF  2C05               	goto	l13038
 25289     13F0                     u9730:
 25290     13F0                     l13024:
 25291                           
 25292                           ;mcc_generated_files/i2c1_master.c: 228:     {;mcc_generated_files/i2c1_master.c: 229:  
      +                                 I2C1_Status.busy = 1;
 25293     13F0  14BD               	bsf	(_I2C1_Status^(0+128)+29),1
 25294     13F1                     l13026:
 25295                           
 25296                           ;mcc_generated_files/i2c1_master.c: 230:         returnValue = I2C1_NOERR;
 25297     13F1  0140               	movlb	0	; select bank0
 25298     13F2  01A3               	clrf	I2C1_MasterOperation@returnValue
 25299     13F3                     l13028:
 25300                           
 25301                           ;mcc_generated_files/i2c1_master.c: 232:         if(read)
 25302     13F3  0822               	movf	I2C1_MasterOperation@read,w
 25303     13F4  1903               	btfsc	3,2
 25304     13F5  2BF7               	goto	u9741
 25305     13F6  2BF8               	goto	u9740
 25306     13F7                     u9741:
 25307     13F7  2BFC               	goto	l13032
 25308     13F8                     u9740:
 25309     13F8                     l13030:
 25310                           
 25311                           ;mcc_generated_files/i2c1_master.c: 233:         {;mcc_generated_files/i2c1_master.c: 23
      +                          4:             I2C1_Status.state = I2C1_SEND_ADR_READ;
 25312     13F8  0141               	movlb	1	; select bank1
 25313     13F9  01BB               	clrf	(_I2C1_Status^(0+128)+27)
 25314     13FA  0ABB               	incf	(_I2C1_Status^(0+128)+27),f
 25315                           
 25316                           ;mcc_generated_files/i2c1_master.c: 235:         }
 25317     13FB  2BFF               	goto	l13034
 25318     13FC                     l13032:
 25319                           
 25320                           ;mcc_generated_files/i2c1_master.c: 237:         {;mcc_generated_files/i2c1_master.c: 23
      +                          8:             I2C1_Status.state = I2C1_SEND_ADR_WRITE;
 25321     13FC  3002               	movlw	2
 25322     13FD  0141               	movlb	1	; select bank1
 25323     13FE  00BB               	movwf	(_I2C1_Status^(0+128)+27)
 25324     13FF                     l13034:
 25325                           
 25326                           ;mcc_generated_files/i2c1_master.c: 240:         I2C1_MasterStart();
 25327     13FF  319E  267A  3193   	fcall	_I2C1_MasterStart
 25328     1402                     l13036:
 25329                           
 25330                           ;mcc_generated_files/i2c1_master.c: 241:         I2C1_Poller();
 25331     1402  3190  2040  3193   	fcall	_I2C1_Poller
 25332     1405                     l13038:
 25333                           
 25334                           ;mcc_generated_files/i2c1_master.c: 243:     return returnValue;
 25335     1405  0140               	movlb	0	; select bank0
 25336     1406  0823               	movf	I2C1_MasterOperation@returnValue,w
 25337     1407                     l2410:
 25338     1407  0008               	return
 25339     1408                     __end_of_I2C1_MasterOperation:
 25340                           
 25341                           	psect	text113
 25342     1040                     __ptext113:	
 25343 ;; *************** function _I2C1_Poller *****************
 25344 ;; Defined at:
 25345 ;;		line 312 in file "mcc_generated_files/i2c1_master.c"
 25346 ;; Parameters:    Size  Location     Type
 25347 ;;		None
 25348 ;; Auto vars:     Size  Location     Type
 25349 ;;		None
 25350 ;; Return value:  Size  Location     Type
 25351 ;;                  1    wreg      void 
 25352 ;; Registers used:
 25353 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25354 ;; Tracked objects:
 25355 ;;		On entry : 0/0
 25356 ;;		On exit  : 0/0
 25357 ;;		Unchanged: 0/0
 25358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25363 ;;Total ram usage:        0 bytes
 25364 ;; Hardware stack levels used: 1
 25365 ;; Hardware stack levels required when called: 9
 25366 ;; This function calls:
 25367 ;;		_I2C1_MasterFsm
 25368 ;;		_I2C1_MasterWaitForEvent
 25369 ;; This function is called by:
 25370 ;;		_I2C1_MasterOperation
 25371 ;; This function uses a non-reentrant model
 25372 ;;
 25373                           
 25374     1040                     _I2C1_Poller:	
 25375                           ;psect for function _I2C1_Poller
 25376                           
 25377     1040                     l12910:	
 25378                           ;incstack = 0
 25379                           ; Regs used in _I2C1_Poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25380                           
 25381                           
 25382                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 25383     1040  2847               	goto	l12916
 25384     1041                     l12912:
 25385                           
 25386                           ;mcc_generated_files/i2c1_master.c: 315:     {;mcc_generated_files/i2c1_master.c: 316:  
      +                                 I2C1_MasterWaitForEvent();
 25387     1041  319E  26F1  3190   	fcall	_I2C1_MasterWaitForEvent
 25388     1044                     l12914:
 25389                           
 25390                           ;mcc_generated_files/i2c1_master.c: 317:         I2C1_MasterFsm();
 25391     1044  3195  2535  3190   	fcall	_I2C1_MasterFsm
 25392     1047                     l12916:
 25393                           
 25394                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 25395     1047  0141               	movlb	1	; select bank1
 25396     1048  18BD               	btfsc	(_I2C1_Status^(0+128)+29),1
 25397     1049  284B               	goto	u9611
 25398     104A  284C               	goto	u9610
 25399     104B                     u9611:
 25400     104B  2841               	goto	l12912
 25401     104C                     u9610:
 25402     104C                     l2449:
 25403     104C  0008               	return
 25404     104D                     __end_of_I2C1_Poller:
 25405                           
 25406                           	psect	text114
 25407     1EF1                     __ptext114:	
 25408 ;; *************** function _I2C1_MasterWaitForEvent *****************
 25409 ;; Defined at:
 25410 ;;		line 650 in file "mcc_generated_files/i2c1_master.c"
 25411 ;; Parameters:    Size  Location     Type
 25412 ;;		None
 25413 ;; Auto vars:     Size  Location     Type
 25414 ;;		None
 25415 ;; Return value:  Size  Location     Type
 25416 ;;                  1    wreg      void 
 25417 ;; Registers used:
 25418 ;;		None
 25419 ;; Tracked objects:
 25420 ;;		On entry : 0/0
 25421 ;;		On exit  : 0/0
 25422 ;;		Unchanged: 0/0
 25423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25428 ;;Total ram usage:        0 bytes
 25429 ;; Hardware stack levels used: 1
 25430 ;; Hardware stack levels required when called: 4
 25431 ;; This function calls:
 25432 ;;		Nothing
 25433 ;; This function is called by:
 25434 ;;		_I2C1_Poller
 25435 ;; This function uses a non-reentrant model
 25436 ;;
 25437                           
 25438     1EF1                     _I2C1_MasterWaitForEvent:	
 25439                           ;psect for function _I2C1_MasterWaitForEvent
 25440                           
 25441     1EF1                     l2622:	
 25442                           ;incstack = 0
 25443                           ; Regs used in _I2C1_MasterWaitForEvent: []
 25444                           ;mcc_generated_files/i2c1_master.c: 652:     while(1)
 25445                           
 25446                           
 25447                           ;mcc_generated_files/i2c1_master.c: 653:     {;mcc_generated_files/i2c1_master.c: 654:  
      +                                 if(PIR3bits.SSP1IF)
 25448     1EF1  014E               	movlb	14	; select bank14
 25449     1EF2  1C0F               	btfss	15,0	;volatile
 25450     1EF3  2EF5               	goto	u9581
 25451     1EF4  2EF6               	goto	u9580
 25452     1EF5                     u9581:
 25453     1EF5  2EF1               	goto	l2622
 25454     1EF6                     u9580:
 25455     1EF6                     l2626:
 25456     1EF6  0008               	return
 25457     1EF7                     __end_of_I2C1_MasterWaitForEvent:
 25458                           
 25459                           	psect	text115
 25460     1535                     __ptext115:	
 25461 ;; *************** function _I2C1_MasterFsm *****************
 25462 ;; Defined at:
 25463 ;;		line 321 in file "mcc_generated_files/i2c1_master.c"
 25464 ;; Parameters:    Size  Location     Type
 25465 ;;		None
 25466 ;; Auto vars:     Size  Location     Type
 25467 ;;		None
 25468 ;; Return value:  Size  Location     Type
 25469 ;;                  1    wreg      void 
 25470 ;; Registers used:
 25471 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25472 ;; Tracked objects:
 25473 ;;		On entry : 0/0
 25474 ;;		On exit  : 0/0
 25475 ;;		Unchanged: 0/0
 25476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25479 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25480 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25481 ;;Total ram usage:        2 bytes
 25482 ;; Hardware stack levels used: 1
 25483 ;; Hardware stack levels required when called: 8
 25484 ;; This function calls:
 25485 ;;		_I2C1_DO_ADDRESS_NACK
 25486 ;;		_I2C1_DO_IDLE
 25487 ;;		_I2C1_DO_RCEN
 25488 ;;		_I2C1_DO_RESET
 25489 ;;		_I2C1_DO_RX
 25490 ;;		_I2C1_DO_RX_ACK
 25491 ;;		_I2C1_DO_RX_NACK_RESTART
 25492 ;;		_I2C1_DO_RX_NACK_STOP
 25493 ;;		_I2C1_DO_SEND_ADR_READ
 25494 ;;		_I2C1_DO_SEND_ADR_WRITE
 25495 ;;		_I2C1_DO_SEND_RESTART
 25496 ;;		_I2C1_DO_SEND_RESTART_READ
 25497 ;;		_I2C1_DO_SEND_RESTART_WRITE
 25498 ;;		_I2C1_DO_SEND_STOP
 25499 ;;		_I2C1_DO_TX
 25500 ;;		_I2C1_DO_TX_EMPTY
 25501 ;;		_I2C1_MasterClearIrq
 25502 ;;		_I2C1_MasterIsNack
 25503 ;; This function is called by:
 25504 ;;		_I2C1_Poller
 25505 ;; This function uses a non-reentrant model
 25506 ;;
 25507                           
 25508     1535                     _I2C1_MasterFsm:	
 25509                           ;psect for function _I2C1_MasterFsm
 25510                           
 25511     1535                     l12898:	
 25512                           ;incstack = 0
 25513                           ; Regs used in _I2C1_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25514                           
 25515                           
 25516                           ;mcc_generated_files/i2c1_master.c: 323:     I2C1_MasterClearIrq();
 25517     1535  319E  2671  3195   	fcall	_I2C1_MasterClearIrq
 25518     1538                     l12900:
 25519                           
 25520                           ;mcc_generated_files/i2c1_master.c: 325:     if(I2C1_Status.addressNackCheck && I2C1_Mas
      +                          terIsNack())
 25521     1538  0141               	movlb	1	; select bank1
 25522     1539  1C3D               	btfss	(_I2C1_Status^(0+128)+29),0
 25523     153A  2D3C               	goto	u9591
 25524     153B  2D3D               	goto	u9590
 25525     153C                     u9591:
 25526     153C  2D48               	goto	l12906
 25527     153D                     u9590:
 25528     153D                     l12902:
 25529     153D  319E  26EB  3195   	fcall	_I2C1_MasterIsNack
 25530     1540  3A00               	xorlw	0
 25531     1541  1903               	skipnz
 25532     1542  2D44               	goto	u9601
 25533     1543  2D45               	goto	u9600
 25534     1544                     u9601:
 25535     1544  2D48               	goto	l12906
 25536     1545                     u9600:
 25537     1545                     l12904:
 25538                           
 25539                           ;mcc_generated_files/i2c1_master.c: 326:     {;mcc_generated_files/i2c1_master.c: 327:  
      +                                 I2C1_Status.state = I2C1_ADDRESS_NACK;
 25540     1545  300F               	movlw	15
 25541     1546  0141               	movlb	1	; select bank1
 25542     1547  00BB               	movwf	(_I2C1_Status^(0+128)+27)
 25543     1548                     l12906:
 25544                           
 25545                           ;mcc_generated_files/i2c1_master.c: 329:     I2C1_Status.state = i2c1_fsmStateTable[I2C1
      +                          _Status.state]();
 25546     1548  0141               	movlb	1	; select bank1
 25547     1549  083B               	movf	(_I2C1_Status^(0+128)+27),w
 25548     154A  0140               	movlb	0	; select bank0
 25549     154B  00A0               	movwf	??_I2C1_MasterFsm
 25550     154C  01A1               	clrf	??_I2C1_MasterFsm+1
 25551     154D  35A0               	lslf	??_I2C1_MasterFsm,f
 25552     154E  0DA1               	rlf	??_I2C1_MasterFsm+1,f
 25553     154F  3028               	movlw	low _i2c1_fsmStateTable
 25554     1550  0720               	addwf	??_I2C1_MasterFsm,w
 25555     1551  0084               	movwf	4
 25556     1552  3018               	movlw	high _i2c1_fsmStateTable
 25557     1553  3D21               	addwfc	??_I2C1_MasterFsm+1,w
 25558     1554  3880               	iorlw	128
 25559     1555  0085               	movwf	5
 25560     1556  3F01               	moviw [1]fsr0
 25561     1557  008A               	movwf	10
 25562     1558  3F00               	moviw [0]fsr0
 25563     1559  000A               	callw
 25564     155A  3195               	pagesel	$
 25565     155B  0141               	movlb	1	; select bank1
 25566     155C  00BB               	movwf	(_I2C1_Status^(0+128)+27)
 25567     155D                     l2453:
 25568     155D  0008               	return
 25569     155E                     __end_of_I2C1_MasterFsm:
 25570                           
 25571                           	psect	text116
 25572     14BD                     __ptext116:	
 25573 ;; *************** function _I2C1_DO_ADDRESS_NACK *****************
 25574 ;; Defined at:
 25575 ;;		line 500 in file "mcc_generated_files/i2c1_master.c"
 25576 ;; Parameters:    Size  Location     Type
 25577 ;;		None
 25578 ;; Auto vars:     Size  Location     Type
 25579 ;;		None
 25580 ;; Return value:  Size  Location     Type
 25581 ;;                  1    wreg      enum E12565
 25582 ;; Registers used:
 25583 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25584 ;; Tracked objects:
 25585 ;;		On entry : 0/0
 25586 ;;		On exit  : 0/0
 25587 ;;		Unchanged: 0/0
 25588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25591 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25592 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25593 ;;Total ram usage:        2 bytes
 25594 ;; Hardware stack levels used: 1
 25595 ;; Hardware stack levels required when called: 7
 25596 ;; This function calls:
 25597 ;;		NULL
 25598 ;;		_I2C1_CallbackReturnReset
 25599 ;;		_I2C1_CallbackReturnStop
 25600 ;;		_I2C1_DO_SEND_RESTART
 25601 ;;		_I2C1_DO_SEND_STOP
 25602 ;;		_rd1RegCompleteHandler
 25603 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1693
 25604 ;;		_rd2RegCompleteHandler
 25605 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1704
 25606 ;;		_rdBlkRegCompleteHandler
 25607 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1727
 25608 ;;		_wr1RegCompleteHandler
 25609 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1710
 25610 ;;		_wr2RegCompleteHandler
 25611 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1716
 25612 ;; This function is called by:
 25613 ;;		_I2C1_MasterFsm
 25614 ;; This function uses a non-reentrant model
 25615 ;;
 25616                           
 25617     14BD                     _I2C1_DO_ADDRESS_NACK:	
 25618                           ;psect for function _I2C1_DO_ADDRESS_NACK
 25619                           
 25620     14BD                     l12874:	
 25621                           ;incstack = 0
 25622                           ; Regs used in _I2C1_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25623                           
 25624                           
 25625                           ;mcc_generated_files/i2c1_master.c: 502:     I2C1_Status.addressNackCheck = 0;
 25626     14BD  0141               	movlb	1	; select bank1
 25627     14BE  103D               	bcf	(_I2C1_Status^(0+128)+29),0
 25628     14BF                     l12876:
 25629                           
 25630                           ;mcc_generated_files/i2c1_master.c: 503:     I2C1_Status.error = I2C1_FAIL;
 25631     14BF  3002               	movlw	2
 25632     14C0  00BC               	movwf	(_I2C1_Status^(0+128)+28)
 25633                           
 25634                           ;mcc_generated_files/i2c1_master.c: 504:     switch(I2C1_Status.callbackTable[I2C1_ADDR_
      +                          NACK](I2C1_Status.callbackPayload[I2C1_ADDR_NACK]))
 25635     14C1  2CCA               	goto	l12888
 25636     14C2                     l12878:
 25637                           
 25638                           ;mcc_generated_files/i2c1_master.c: 508:             return I2C1_DO_SEND_RESTART();
 25639     14C2  319E  26C3  3194   	fcall	_I2C1_DO_SEND_RESTART
 25640     14C5  2CE4               	goto	l2544
 25641     14C6                     l12882:
 25642                           
 25643                           ;mcc_generated_files/i2c1_master.c: 510:             return I2C1_DO_SEND_STOP();
 25644     14C6  319E  26C8  3194   	fcall	_I2C1_DO_SEND_STOP
 25645     14C9  2CE4               	goto	l2544
 25646     14CA                     l12888:
 25647     14CA  082E               	movf	(low ((_I2C1_Status| 0+14)))^(0+128),w
 25648     14CB  00F8               	movwf	I2C1_CallbackReturnReset@funPtr
 25649     14CC  3004               	movlw	4
 25650     14CD  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 25651     14CE  0086               	movwf	6
 25652     14CF  0187               	clrf	7
 25653     14D0  3F41               	moviw [1]fsr1
 25654     14D1  008A               	movwf	10
 25655     14D2  3F40               	moviw [0]fsr1
 25656     14D3  000A               	callw
 25657     14D4  3194               	pagesel	$
 25658     14D5  00F9               	movwf	??_I2C1_DO_ADDRESS_NACK
 25659     14D6  01FA               	clrf	??_I2C1_DO_ADDRESS_NACK+1
 25660                           
 25661                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25662                           ; Switch size 1, requested type "simple"
 25663                           ; Number of cases is 1, Range of values is 0 to 0
 25664                           ; switch strategies available:
 25665                           ; Name         Instructions Cycles
 25666                           ; simple_byte            4     3 (average)
 25667                           ; direct_byte            8     6 (fixed)
 25668                           ; jumptable            260     6 (fixed)
 25669                           ;	Chosen strategy is simple_byte
 25670     14D7  087A               	movf	??_I2C1_DO_ADDRESS_NACK+1,w
 25671     14D8  3A00               	xorlw	0	; case 0
 25672     14D9  1903               	skipnz
 25673     14DA  2CDC               	goto	l16610
 25674     14DB  2CC6               	goto	l12882
 25675     14DC                     l16610:
 25676                           
 25677                           ; Switch size 1, requested type "simple"
 25678                           ; Number of cases is 2, Range of values is 2 to 3
 25679                           ; switch strategies available:
 25680                           ; Name         Instructions Cycles
 25681                           ; simple_byte            7     4 (average)
 25682                           ; direct_byte           13     9 (fixed)
 25683                           ; jumptable            263     9 (fixed)
 25684                           ;	Chosen strategy is simple_byte
 25685     14DC  0879               	movf	??_I2C1_DO_ADDRESS_NACK,w
 25686     14DD  3A02               	xorlw	2	; case 2
 25687     14DE  1903               	skipnz
 25688     14DF  2CC2               	goto	l12878
 25689     14E0  3A01               	xorlw	1	; case 3
 25690     14E1  1903               	skipnz
 25691     14E2  2CC2               	goto	l12878
 25692     14E3  2CC6               	goto	l12882
 25693     14E4                     l2544:
 25694     14E4  0008               	return
 25695     14E5                     __end_of_I2C1_DO_ADDRESS_NACK:
 25696                           
 25697                           	psect	text117
 25698     1EDC                     __ptext117:	
 25699 ;; *************** function _I2C1_DO_RESET *****************
 25700 ;; Defined at:
 25701 ;;		line 494 in file "mcc_generated_files/i2c1_master.c"
 25702 ;; Parameters:    Size  Location     Type
 25703 ;;		None
 25704 ;; Auto vars:     Size  Location     Type
 25705 ;;		None
 25706 ;; Return value:  Size  Location     Type
 25707 ;;                  1    wreg      enum E12565
 25708 ;; Registers used:
 25709 ;;		wreg, status,2
 25710 ;; Tracked objects:
 25711 ;;		On entry : 0/0
 25712 ;;		On exit  : 0/0
 25713 ;;		Unchanged: 0/0
 25714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25719 ;;Total ram usage:        0 bytes
 25720 ;; Hardware stack levels used: 1
 25721 ;; Hardware stack levels required when called: 4
 25722 ;; This function calls:
 25723 ;;		Nothing
 25724 ;; This function is called by:
 25725 ;;		_I2C1_MasterFsm
 25726 ;; This function uses a non-reentrant model
 25727 ;;
 25728                           
 25729     1EDC                     _I2C1_DO_RESET:	
 25730                           ;psect for function _I2C1_DO_RESET
 25731                           
 25732     1EDC                     l12866:	
 25733                           ;incstack = 0
 25734                           ; Regs used in _I2C1_DO_RESET: [wreg+status,2]
 25735                           
 25736                           
 25737                           ;mcc_generated_files/i2c1_master.c: 496:     I2C1_Status.busy = 0;
 25738     1EDC  0141               	movlb	1	; select bank1
 25739     1EDD  10BD               	bcf	(_I2C1_Status^(0+128)+29),1
 25740     1EDE                     l12868:
 25741                           
 25742                           ;mcc_generated_files/i2c1_master.c: 497:     I2C1_Status.error = I2C1_NOERR;
 25743     1EDE  01BC               	clrf	(_I2C1_Status^(0+128)+28)
 25744     1EDF                     l12870:
 25745                           
 25746                           ;mcc_generated_files/i2c1_master.c: 498:     return I2C1_RESET;
 25747     1EDF  300E               	movlw	14
 25748     1EE0                     l2538:
 25749     1EE0  0008               	return
 25750     1EE1                     __end_of_I2C1_DO_RESET:
 25751                           
 25752                           	psect	text118
 25753     1ED7                     __ptext118:	
 25754 ;; *************** function _I2C1_DO_RX_NACK_RESTART *****************
 25755 ;; Defined at:
 25756 ;;		line 488 in file "mcc_generated_files/i2c1_master.c"
 25757 ;; Parameters:    Size  Location     Type
 25758 ;;		None
 25759 ;; Auto vars:     Size  Location     Type
 25760 ;;		None
 25761 ;; Return value:  Size  Location     Type
 25762 ;;                  1    wreg      enum E12565
 25763 ;; Registers used:
 25764 ;;		wreg, status,2, status,0, pclath, cstack
 25765 ;; Tracked objects:
 25766 ;;		On entry : 0/0
 25767 ;;		On exit  : 0/0
 25768 ;;		Unchanged: 0/0
 25769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25774 ;;Total ram usage:        0 bytes
 25775 ;; Hardware stack levels used: 1
 25776 ;; Hardware stack levels required when called: 5
 25777 ;; This function calls:
 25778 ;;		_I2C1_MasterSendNack
 25779 ;; This function is called by:
 25780 ;;		_I2C1_DO_RX
 25781 ;;		_I2C1_MasterFsm
 25782 ;; This function uses a non-reentrant model
 25783 ;;
 25784                           
 25785     1ED7                     _I2C1_DO_RX_NACK_RESTART:	
 25786                           ;psect for function _I2C1_DO_RX_NACK_RESTART
 25787                           
 25788     1ED7                     l12704:	
 25789                           ;incstack = 0
 25790                           ; Regs used in _I2C1_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 25791                           
 25792                           
 25793                           ;mcc_generated_files/i2c1_master.c: 490:     I2C1_MasterSendNack();
 25794     1ED7  319E  269F  319E   	fcall	_I2C1_MasterSendNack
 25795     1EDA                     l12706:
 25796                           
 25797                           ;mcc_generated_files/i2c1_master.c: 491:     return I2C1_SEND_RESTART;
 25798     1EDA  3009               	movlw	9
 25799     1EDB                     l2535:
 25800     1EDB  0008               	return
 25801     1EDC                     __end_of_I2C1_DO_RX_NACK_RESTART:
 25802                           
 25803                           	psect	text119
 25804     1ED2                     __ptext119:	
 25805 ;; *************** function _I2C1_DO_RX_NACK_STOP *****************
 25806 ;; Defined at:
 25807 ;;		line 482 in file "mcc_generated_files/i2c1_master.c"
 25808 ;; Parameters:    Size  Location     Type
 25809 ;;		None
 25810 ;; Auto vars:     Size  Location     Type
 25811 ;;		None
 25812 ;; Return value:  Size  Location     Type
 25813 ;;                  1    wreg      enum E12565
 25814 ;; Registers used:
 25815 ;;		wreg, status,2, status,0, pclath, cstack
 25816 ;; Tracked objects:
 25817 ;;		On entry : 0/0
 25818 ;;		On exit  : 0/0
 25819 ;;		Unchanged: 0/0
 25820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25825 ;;Total ram usage:        0 bytes
 25826 ;; Hardware stack levels used: 1
 25827 ;; Hardware stack levels required when called: 5
 25828 ;; This function calls:
 25829 ;;		_I2C1_MasterSendNack
 25830 ;; This function is called by:
 25831 ;;		_I2C1_DO_RX
 25832 ;;		_I2C1_MasterFsm
 25833 ;; This function uses a non-reentrant model
 25834 ;;
 25835                           
 25836     1ED2                     _I2C1_DO_RX_NACK_STOP:	
 25837                           ;psect for function _I2C1_DO_RX_NACK_STOP
 25838                           
 25839     1ED2                     l12710:	
 25840                           ;incstack = 0
 25841                           ; Regs used in _I2C1_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 25842                           
 25843                           
 25844                           ;mcc_generated_files/i2c1_master.c: 484:     I2C1_MasterSendNack();
 25845     1ED2  319E  269F  319E   	fcall	_I2C1_MasterSendNack
 25846     1ED5                     l12712:
 25847                           
 25848                           ;mcc_generated_files/i2c1_master.c: 485:     return I2C1_SEND_STOP;
 25849     1ED5  300A               	movlw	10
 25850     1ED6                     l2532:
 25851     1ED6  0008               	return
 25852     1ED7                     __end_of_I2C1_DO_RX_NACK_STOP:
 25853                           
 25854                           	psect	text120
 25855     1ECD                     __ptext120:	
 25856 ;; *************** function _I2C1_DO_RX_ACK *****************
 25857 ;; Defined at:
 25858 ;;		line 475 in file "mcc_generated_files/i2c1_master.c"
 25859 ;; Parameters:    Size  Location     Type
 25860 ;;		None
 25861 ;; Auto vars:     Size  Location     Type
 25862 ;;		None
 25863 ;; Return value:  Size  Location     Type
 25864 ;;                  1    wreg      enum E12565
 25865 ;; Registers used:
 25866 ;;		wreg, status,2, status,0, pclath, cstack
 25867 ;; Tracked objects:
 25868 ;;		On entry : 0/0
 25869 ;;		On exit  : 0/0
 25870 ;;		Unchanged: 0/0
 25871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25876 ;;Total ram usage:        0 bytes
 25877 ;; Hardware stack levels used: 1
 25878 ;; Hardware stack levels required when called: 5
 25879 ;; This function calls:
 25880 ;;		_I2C1_MasterSendAck
 25881 ;; This function is called by:
 25882 ;;		_I2C1_MasterFsm
 25883 ;; This function uses a non-reentrant model
 25884 ;;
 25885                           
 25886     1ECD                     _I2C1_DO_RX_ACK:	
 25887                           ;psect for function _I2C1_DO_RX_ACK
 25888                           
 25889     1ECD                     l12860:	
 25890                           ;incstack = 0
 25891                           ; Regs used in _I2C1_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
 25892                           
 25893                           
 25894                           ;mcc_generated_files/i2c1_master.c: 477:     I2C1_MasterSendAck();
 25895     1ECD  319E  26A3  319E   	fcall	_I2C1_MasterSendAck
 25896     1ED0                     l12862:
 25897                           
 25898                           ;mcc_generated_files/i2c1_master.c: 478:     return I2C1_RCEN;
 25899     1ED0  3005               	movlw	5
 25900     1ED1                     l2529:
 25901     1ED1  0008               	return
 25902     1ED2                     __end_of_I2C1_DO_RX_ACK:
 25903                           
 25904                           	psect	text121
 25905     1EC8                     __ptext121:	
 25906 ;; *************** function _I2C1_DO_SEND_STOP *****************
 25907 ;; Defined at:
 25908 ;;		line 469 in file "mcc_generated_files/i2c1_master.c"
 25909 ;; Parameters:    Size  Location     Type
 25910 ;;		None
 25911 ;; Auto vars:     Size  Location     Type
 25912 ;;		None
 25913 ;; Return value:  Size  Location     Type
 25914 ;;                  1    wreg      enum E12565
 25915 ;; Registers used:
 25916 ;;		wreg, status,2, status,0, pclath, cstack
 25917 ;; Tracked objects:
 25918 ;;		On entry : 0/0
 25919 ;;		On exit  : 0/0
 25920 ;;		Unchanged: 0/0
 25921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25926 ;;Total ram usage:        0 bytes
 25927 ;; Hardware stack levels used: 1
 25928 ;; Hardware stack levels required when called: 5
 25929 ;; This function calls:
 25930 ;;		_I2C1_MasterStop
 25931 ;; This function is called by:
 25932 ;;		_I2C1_DO_TX
 25933 ;;		_I2C1_DO_TX_EMPTY
 25934 ;;		_I2C1_DO_ADDRESS_NACK
 25935 ;;		_I2C1_MasterFsm
 25936 ;; This function uses a non-reentrant model
 25937 ;;
 25938                           
 25939     1EC8                     _I2C1_DO_SEND_STOP:	
 25940                           ;psect for function _I2C1_DO_SEND_STOP
 25941                           
 25942     1EC8                     l12692:	
 25943                           ;incstack = 0
 25944                           ; Regs used in _I2C1_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 25945                           
 25946                           
 25947                           ;mcc_generated_files/i2c1_master.c: 471:     I2C1_MasterStop();
 25948     1EC8  319E  2680  319E   	fcall	_I2C1_MasterStop
 25949     1ECB                     l12694:
 25950                           
 25951                           ;mcc_generated_files/i2c1_master.c: 472:     return I2C1_IDLE;
 25952     1ECB  3000               	movlw	0
 25953     1ECC                     l2526:
 25954     1ECC  0008               	return
 25955     1ECD                     __end_of_I2C1_DO_SEND_STOP:
 25956                           
 25957                           	psect	text122
 25958     1EC3                     __ptext122:	
 25959 ;; *************** function _I2C1_DO_SEND_RESTART *****************
 25960 ;; Defined at:
 25961 ;;		line 463 in file "mcc_generated_files/i2c1_master.c"
 25962 ;; Parameters:    Size  Location     Type
 25963 ;;		None
 25964 ;; Auto vars:     Size  Location     Type
 25965 ;;		None
 25966 ;; Return value:  Size  Location     Type
 25967 ;;                  1    wreg      enum E12565
 25968 ;; Registers used:
 25969 ;;		wreg, status,2, status,0, pclath, cstack
 25970 ;; Tracked objects:
 25971 ;;		On entry : 0/0
 25972 ;;		On exit  : 0/0
 25973 ;;		Unchanged: 0/0
 25974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25979 ;;Total ram usage:        0 bytes
 25980 ;; Hardware stack levels used: 1
 25981 ;; Hardware stack levels required when called: 5
 25982 ;; This function calls:
 25983 ;;		_I2C1_MasterEnableRestart
 25984 ;; This function is called by:
 25985 ;;		_I2C1_DO_TX_EMPTY
 25986 ;;		_I2C1_DO_ADDRESS_NACK
 25987 ;;		_I2C1_MasterFsm
 25988 ;; This function uses a non-reentrant model
 25989 ;;
 25990                           
 25991     1EC3                     _I2C1_DO_SEND_RESTART:	
 25992                           ;psect for function _I2C1_DO_SEND_RESTART
 25993                           
 25994     1EC3                     l12718:	
 25995                           ;incstack = 0
 25996                           ; Regs used in _I2C1_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 25997                           
 25998                           
 25999                           ;mcc_generated_files/i2c1_master.c: 465:     I2C1_MasterEnableRestart();
 26000     1EC3  319E  267D  319E   	fcall	_I2C1_MasterEnableRestart
 26001     1EC6                     l12720:
 26002                           
 26003                           ;mcc_generated_files/i2c1_master.c: 466:     return I2C1_SEND_ADR_READ;
 26004     1EC6  3001               	movlw	1
 26005     1EC7                     l2523:
 26006     1EC7  0008               	return
 26007     1EC8                     __end_of_I2C1_DO_SEND_RESTART:
 26008                           
 26009                           	psect	text123
 26010     1EBE                     __ptext123:	
 26011 ;; *************** function _I2C1_DO_SEND_RESTART_WRITE *****************
 26012 ;; Defined at:
 26013 ;;		line 456 in file "mcc_generated_files/i2c1_master.c"
 26014 ;; Parameters:    Size  Location     Type
 26015 ;;		None
 26016 ;; Auto vars:     Size  Location     Type
 26017 ;;		None
 26018 ;; Return value:  Size  Location     Type
 26019 ;;                  1    wreg      enum E12565
 26020 ;; Registers used:
 26021 ;;		wreg, status,2, status,0, pclath, cstack
 26022 ;; Tracked objects:
 26023 ;;		On entry : 0/0
 26024 ;;		On exit  : 0/0
 26025 ;;		Unchanged: 0/0
 26026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26031 ;;Total ram usage:        0 bytes
 26032 ;; Hardware stack levels used: 1
 26033 ;; Hardware stack levels required when called: 5
 26034 ;; This function calls:
 26035 ;;		_I2C1_MasterEnableRestart
 26036 ;; This function is called by:
 26037 ;;		_I2C1_DO_TX
 26038 ;;		_I2C1_MasterFsm
 26039 ;; This function uses a non-reentrant model
 26040 ;;
 26041                           
 26042     1EBE                     _I2C1_DO_SEND_RESTART_WRITE:	
 26043                           ;psect for function _I2C1_DO_SEND_RESTART_WRITE
 26044                           
 26045     1EBE                     l12686:	
 26046                           ;incstack = 0
 26047                           ; Regs used in _I2C1_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 26048                           
 26049                           
 26050                           ;mcc_generated_files/i2c1_master.c: 458:     I2C1_MasterEnableRestart();
 26051     1EBE  319E  267D  319E   	fcall	_I2C1_MasterEnableRestart
 26052     1EC1                     l12688:
 26053                           
 26054                           ;mcc_generated_files/i2c1_master.c: 459:     return I2C1_SEND_ADR_WRITE;
 26055     1EC1  3002               	movlw	2
 26056     1EC2                     l2520:
 26057     1EC2  0008               	return
 26058     1EC3                     __end_of_I2C1_DO_SEND_RESTART_WRITE:
 26059                           
 26060                           	psect	text124
 26061     1EB9                     __ptext124:	
 26062 ;; *************** function _I2C1_DO_SEND_RESTART_READ *****************
 26063 ;; Defined at:
 26064 ;;		line 450 in file "mcc_generated_files/i2c1_master.c"
 26065 ;; Parameters:    Size  Location     Type
 26066 ;;		None
 26067 ;; Auto vars:     Size  Location     Type
 26068 ;;		None
 26069 ;; Return value:  Size  Location     Type
 26070 ;;                  1    wreg      enum E12565
 26071 ;; Registers used:
 26072 ;;		wreg, status,2, status,0, pclath, cstack
 26073 ;; Tracked objects:
 26074 ;;		On entry : 0/0
 26075 ;;		On exit  : 0/0
 26076 ;;		Unchanged: 0/0
 26077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26082 ;;Total ram usage:        0 bytes
 26083 ;; Hardware stack levels used: 1
 26084 ;; Hardware stack levels required when called: 5
 26085 ;; This function calls:
 26086 ;;		_I2C1_MasterEnableRestart
 26087 ;; This function is called by:
 26088 ;;		_I2C1_DO_TX
 26089 ;;		_I2C1_MasterFsm
 26090 ;; This function uses a non-reentrant model
 26091 ;;
 26092                           
 26093     1EB9                     _I2C1_DO_SEND_RESTART_READ:	
 26094                           ;psect for function _I2C1_DO_SEND_RESTART_READ
 26095                           
 26096     1EB9                     l12680:	
 26097                           ;incstack = 0
 26098                           ; Regs used in _I2C1_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 26099                           
 26100                           
 26101                           ;mcc_generated_files/i2c1_master.c: 452:     I2C1_MasterEnableRestart();
 26102     1EB9  319E  267D  319E   	fcall	_I2C1_MasterEnableRestart
 26103     1EBC                     l12682:
 26104                           
 26105                           ;mcc_generated_files/i2c1_master.c: 453:     return I2C1_SEND_ADR_READ;
 26106     1EBC  3001               	movlw	1
 26107     1EBD                     l2517:
 26108     1EBD  0008               	return
 26109     1EBE                     __end_of_I2C1_DO_SEND_RESTART_READ:
 26110                           
 26111                           	psect	text125
 26112     1F57                     __ptext125:	
 26113 ;; *************** function _I2C1_DO_RCEN *****************
 26114 ;; Defined at:
 26115 ;;		line 402 in file "mcc_generated_files/i2c1_master.c"
 26116 ;; Parameters:    Size  Location     Type
 26117 ;;		None
 26118 ;; Auto vars:     Size  Location     Type
 26119 ;;		None
 26120 ;; Return value:  Size  Location     Type
 26121 ;;                  1    wreg      enum E12565
 26122 ;; Registers used:
 26123 ;;		wreg, status,2, status,0, pclath, cstack
 26124 ;; Tracked objects:
 26125 ;;		On entry : 0/0
 26126 ;;		On exit  : 0/0
 26127 ;;		Unchanged: 0/0
 26128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26133 ;;Total ram usage:        0 bytes
 26134 ;; Hardware stack levels used: 1
 26135 ;; Hardware stack levels required when called: 5
 26136 ;; This function calls:
 26137 ;;		_I2C1_MasterStartRx
 26138 ;; This function is called by:
 26139 ;;		_I2C1_MasterFsm
 26140 ;; This function uses a non-reentrant model
 26141 ;;
 26142                           
 26143     1F57                     _I2C1_DO_RCEN:	
 26144                           ;psect for function _I2C1_DO_RCEN
 26145                           
 26146     1F57                     l12826:	
 26147                           ;incstack = 0
 26148                           ; Regs used in _I2C1_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
 26149                           
 26150                           
 26151                           ;mcc_generated_files/i2c1_master.c: 404:     I2C1_Status.addressNackCheck = 0;
 26152     1F57  0141               	movlb	1	; select bank1
 26153     1F58  103D               	bcf	(_I2C1_Status^(0+128)+29),0
 26154     1F59                     l12828:
 26155                           
 26156                           ;mcc_generated_files/i2c1_master.c: 405:     I2C1_MasterStartRx();
 26157     1F59  319E  2683  319F   	fcall	_I2C1_MasterStartRx
 26158     1F5C                     l12830:
 26159                           
 26160                           ;mcc_generated_files/i2c1_master.c: 406:     return I2C1_RX;
 26161     1F5C  3004               	movlw	4
 26162     1F5D                     l2493:
 26163     1F5D  0008               	return
 26164     1F5E                     __end_of_I2C1_DO_RCEN:
 26165                           
 26166                           	psect	text126
 26167     0AD1                     __ptext126:	
 26168 ;; *************** function _I2C1_DO_RX *****************
 26169 ;; Defined at:
 26170 ;;		line 378 in file "mcc_generated_files/i2c1_master.c"
 26171 ;; Parameters:    Size  Location     Type
 26172 ;;		None
 26173 ;; Auto vars:     Size  Location     Type
 26174 ;;		None
 26175 ;; Return value:  Size  Location     Type
 26176 ;;                  1    wreg      enum E12565
 26177 ;; Registers used:
 26178 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 26179 ;; Tracked objects:
 26180 ;;		On entry : 0/0
 26181 ;;		On exit  : 0/0
 26182 ;;		Unchanged: 0/0
 26183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26186 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26187 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26188 ;;Total ram usage:        2 bytes
 26189 ;; Hardware stack levels used: 1
 26190 ;; Hardware stack levels required when called: 7
 26191 ;; This function calls:
 26192 ;;		NULL
 26193 ;;		_I2C1_CallbackReturnReset
 26194 ;;		_I2C1_CallbackReturnStop
 26195 ;;		_I2C1_DO_RX_NACK_RESTART
 26196 ;;		_I2C1_DO_RX_NACK_STOP
 26197 ;;		_I2C1_MasterGetRxData
 26198 ;;		_I2C1_MasterSendAck
 26199 ;;		_rd1RegCompleteHandler
 26200 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1693
 26201 ;;		_rd2RegCompleteHandler
 26202 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1704
 26203 ;;		_rdBlkRegCompleteHandler
 26204 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1727
 26205 ;;		_wr1RegCompleteHandler
 26206 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1710
 26207 ;;		_wr2RegCompleteHandler
 26208 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1716
 26209 ;; This function is called by:
 26210 ;;		_I2C1_MasterFsm
 26211 ;; This function uses a non-reentrant model
 26212 ;;
 26213                           
 26214     0AD1                     _I2C1_DO_RX:	
 26215                           ;psect for function _I2C1_DO_RX
 26216                           
 26217     0AD1                     l12794:	
 26218                           ;incstack = 0
 26219                           ; Regs used in _I2C1_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 26220                           
 26221                           
 26222                           ;mcc_generated_files/i2c1_master.c: 380:     *I2C1_Status.data_ptr++ = I2C1_MasterGetRxD
      +                          ata();
 26223     0AD1  319E  2686  318A   	fcall	_I2C1_MasterGetRxData
 26224     0AD4  00F9               	movwf	??_I2C1_DO_RX
 26225     0AD5  3017               	movlw	23
 26226     0AD6  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 26227     0AD7  0086               	movwf	6
 26228     0AD8  0187               	clrf	7
 26229     0AD9  3F40               	moviw [0]fsr1
 26230     0ADA  0084               	movwf	4
 26231     0ADB  3F41               	moviw [1]fsr1
 26232     0ADC  0085               	movwf	5
 26233     0ADD  0879               	movf	??_I2C1_DO_RX,w
 26234     0ADE  0080               	movwf	0
 26235     0ADF                     l12796:
 26236     0ADF  3001               	movlw	1
 26237     0AE0  0141               	movlb	1	; select bank1
 26238     0AE1  07B7               	addwf	(low ((_I2C1_Status| 0+23)))^(0+128),f
 26239     0AE2  3000               	movlw	0
 26240     0AE3  3DB8               	addwfc	((low ((_I2C1_Status| 0+23))+1))^(0+128),f
 26241     0AE4                     l12798:
 26242                           
 26243                           ;mcc_generated_files/i2c1_master.c: 381:     if(--I2C1_Status.data_length)
 26244     0AE4  3001               	movlw	1
 26245     0AE5  02B9               	subwf	(_I2C1_Status^(0+128)+25),f
 26246     0AE6  3000               	movlw	0
 26247     0AE7  3BBA               	subwfb	((_I2C1_Status+1)^(0+128)+25),f
 26248     0AE8  0839               	movf	(_I2C1_Status^(0+128)+25),w
 26249     0AE9  043A               	iorwf	((_I2C1_Status+1)^(0+128)+25),w
 26250     0AEA  1903               	btfsc	3,2
 26251     0AEB  2AED               	goto	u9571
 26252     0AEC  2AEE               	goto	u9570
 26253     0AED                     u9571:
 26254     0AED  2AF3               	goto	l2481
 26255     0AEE                     u9570:
 26256     0AEE                     l12800:
 26257                           
 26258                           ;mcc_generated_files/i2c1_master.c: 382:     {;mcc_generated_files/i2c1_master.c: 383:  
      +                                 I2C1_MasterSendAck();
 26259     0AEE  319E  26A3  318A   	fcall	_I2C1_MasterSendAck
 26260     0AF1                     l12802:
 26261                           
 26262                           ;mcc_generated_files/i2c1_master.c: 384:         return I2C1_RCEN;
 26263     0AF1  3005               	movlw	5
 26264     0AF2  2B19               	goto	l2482
 26265     0AF3                     l2481:	
 26266                           ;mcc_generated_files/i2c1_master.c: 386:     else
 26267                           
 26268                           
 26269                           ;mcc_generated_files/i2c1_master.c: 387:     {;mcc_generated_files/i2c1_master.c: 388:  
      +                                 I2C1_Status.bufferFree = 1;
 26270     0AF3  15BD               	bsf	(_I2C1_Status^(0+128)+29),3
 26271                           
 26272                           ;mcc_generated_files/i2c1_master.c: 389:         switch(I2C1_Status.callbackTable[I2C1_D
      +                          ATA_COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 26273     0AF4  2AFD               	goto	l12818
 26274     0AF5                     l12808:
 26275                           
 26276                           ;mcc_generated_files/i2c1_master.c: 393:                 return I2C1_DO_RX_NACK_RESTART(
      +                          );
 26277     0AF5  319E  26D7  318A   	fcall	_I2C1_DO_RX_NACK_RESTART
 26278     0AF8  2B19               	goto	l2482
 26279     0AF9                     l12812:
 26280                           
 26281                           ;mcc_generated_files/i2c1_master.c: 397:                 return I2C1_DO_RX_NACK_STOP();
 26282     0AF9  319E  26D2  318A   	fcall	_I2C1_DO_RX_NACK_STOP
 26283     0AFC  2B19               	goto	l2482
 26284     0AFD                     l12818:
 26285     0AFD  082C               	movf	(low ((_I2C1_Status| 0+12)))^(0+128),w
 26286     0AFE  00F8               	movwf	I2C1_CallbackReturnReset@funPtr
 26287     0AFF  0821               	movf	(_I2C1_Status+1)^(0+128),w
 26288     0B00  008A               	movwf	10
 26289     0B01  0820               	movf	_I2C1_Status^(0+128),w
 26290     0B02  000A               	callw
 26291     0B03  318A               	pagesel	$
 26292     0B04  00F9               	movwf	??_I2C1_DO_RX
 26293     0B05  01FA               	clrf	??_I2C1_DO_RX+1
 26294                           
 26295                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26296                           ; Switch size 1, requested type "simple"
 26297                           ; Number of cases is 1, Range of values is 0 to 0
 26298                           ; switch strategies available:
 26299                           ; Name         Instructions Cycles
 26300                           ; simple_byte            4     3 (average)
 26301                           ; direct_byte            8     6 (fixed)
 26302                           ; jumptable            260     6 (fixed)
 26303                           ;	Chosen strategy is simple_byte
 26304     0B06  087A               	movf	??_I2C1_DO_RX+1,w
 26305     0B07  3A00               	xorlw	0	; case 0
 26306     0B08  1903               	skipnz
 26307     0B09  2B0B               	goto	l16612
 26308     0B0A  2AF9               	goto	l12812
 26309     0B0B                     l16612:
 26310                           
 26311                           ; Switch size 1, requested type "simple"
 26312                           ; Number of cases is 4, Range of values is 1 to 4
 26313                           ; switch strategies available:
 26314                           ; Name         Instructions Cycles
 26315                           ; simple_byte           13     7 (average)
 26316                           ; direct_byte           17     9 (fixed)
 26317                           ; jumptable            263     9 (fixed)
 26318                           ;	Chosen strategy is simple_byte
 26319     0B0B  0879               	movf	??_I2C1_DO_RX,w
 26320     0B0C  3A01               	xorlw	1	; case 1
 26321     0B0D  1903               	skipnz
 26322     0B0E  2AF9               	goto	l12812
 26323     0B0F  3A03               	xorlw	3	; case 2
 26324     0B10  1903               	skipnz
 26325     0B11  2AF5               	goto	l12808
 26326     0B12  3A01               	xorlw	1	; case 3
 26327     0B13  1903               	skipnz
 26328     0B14  2AF5               	goto	l12808
 26329     0B15  3A07               	xorlw	7	; case 4
 26330     0B16  1903               	skipnz
 26331     0B17  2AF9               	goto	l12812
 26332     0B18  2AF9               	goto	l12812
 26333     0B19                     l2482:
 26334     0B19  0008               	return
 26335     0B1A                     __end_of_I2C1_DO_RX:
 26336                           
 26337                           	psect	text127
 26338     0D9D                     __ptext127:	
 26339 ;; *************** function _I2C1_DO_TX *****************
 26340 ;; Defined at:
 26341 ;;		line 354 in file "mcc_generated_files/i2c1_master.c"
 26342 ;; Parameters:    Size  Location     Type
 26343 ;;		None
 26344 ;; Auto vars:     Size  Location     Type
 26345 ;;		None
 26346 ;; Return value:  Size  Location     Type
 26347 ;;                  1    wreg      enum E12565
 26348 ;; Registers used:
 26349 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 26350 ;; Tracked objects:
 26351 ;;		On entry : 0/0
 26352 ;;		On exit  : 0/0
 26353 ;;		Unchanged: 0/0
 26354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26357 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26358 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26359 ;;Total ram usage:        2 bytes
 26360 ;; Hardware stack levels used: 1
 26361 ;; Hardware stack levels required when called: 7
 26362 ;; This function calls:
 26363 ;;		NULL
 26364 ;;		_I2C1_CallbackReturnReset
 26365 ;;		_I2C1_CallbackReturnStop
 26366 ;;		_I2C1_DO_SEND_RESTART_READ
 26367 ;;		_I2C1_DO_SEND_RESTART_WRITE
 26368 ;;		_I2C1_DO_SEND_STOP
 26369 ;;		_I2C1_MasterIsNack
 26370 ;;		_I2C1_MasterSendTxData
 26371 ;;		_rd1RegCompleteHandler
 26372 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1693
 26373 ;;		_rd2RegCompleteHandler
 26374 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1704
 26375 ;;		_rdBlkRegCompleteHandler
 26376 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1727
 26377 ;;		_wr1RegCompleteHandler
 26378 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1710
 26379 ;;		_wr2RegCompleteHandler
 26380 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1716
 26381 ;; This function is called by:
 26382 ;;		_I2C1_MasterFsm
 26383 ;; This function uses a non-reentrant model
 26384 ;;
 26385                           
 26386     0D9D                     _I2C1_DO_TX:	
 26387                           ;psect for function _I2C1_DO_TX
 26388                           
 26389     0D9D                     l12760:	
 26390                           ;incstack = 0
 26391                           ; Regs used in _I2C1_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 26392                           
 26393                           
 26394                           ;mcc_generated_files/i2c1_master.c: 356:     if(I2C1_MasterIsNack())
 26395     0D9D  319E  26EB  318D   	fcall	_I2C1_MasterIsNack
 26396     0DA0  3A00               	xorlw	0
 26397     0DA1  1903               	skipnz
 26398     0DA2  2DA4               	goto	u9551
 26399     0DA3  2DA5               	goto	u9550
 26400     0DA4                     u9551:
 26401     0DA4  2DD3               	goto	l2465
 26402     0DA5                     u9550:
 26403     0DA5  2DB2               	goto	l12778
 26404     0DA6                     l12764:
 26405                           
 26406                           ;mcc_generated_files/i2c1_master.c: 361:                 return I2C1_DO_SEND_RESTART_REA
      +                          D();
 26407     0DA6  319E  26B9  318D   	fcall	_I2C1_DO_SEND_RESTART_READ
 26408     0DA9  2DF2               	goto	l2468
 26409     0DAA                     l12768:
 26410                           
 26411                           ;mcc_generated_files/i2c1_master.c: 363:                   return I2C1_DO_SEND_RESTART_W
      +                          RITE();
 26412     0DAA  319E  26BE  318D   	fcall	_I2C1_DO_SEND_RESTART_WRITE
 26413     0DAD  2DF2               	goto	l2468
 26414     0DAE                     l12772:
 26415                           
 26416                           ;mcc_generated_files/i2c1_master.c: 367:                 return I2C1_DO_SEND_STOP();
 26417     0DAE  319E  26C8  318D   	fcall	_I2C1_DO_SEND_STOP
 26418     0DB1  2DF2               	goto	l2468
 26419     0DB2                     l12778:
 26420     0DB2  0141               	movlb	1	; select bank1
 26421     0DB3  082F               	movf	(low ((_I2C1_Status| 0+15)))^(0+128),w
 26422     0DB4  00F8               	movwf	I2C1_CallbackReturnReset@funPtr
 26423     0DB5  3006               	movlw	6
 26424     0DB6  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 26425     0DB7  0086               	movwf	6
 26426     0DB8  0187               	clrf	7
 26427     0DB9  3F41               	moviw [1]fsr1
 26428     0DBA  008A               	movwf	10
 26429     0DBB  3F40               	moviw [0]fsr1
 26430     0DBC  000A               	callw
 26431     0DBD  318D               	pagesel	$
 26432     0DBE  00F9               	movwf	??_I2C1_DO_TX
 26433     0DBF  01FA               	clrf	??_I2C1_DO_TX+1
 26434                           
 26435                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26436                           ; Switch size 1, requested type "simple"
 26437                           ; Number of cases is 1, Range of values is 0 to 0
 26438                           ; switch strategies available:
 26439                           ; Name         Instructions Cycles
 26440                           ; simple_byte            4     3 (average)
 26441                           ; direct_byte            8     6 (fixed)
 26442                           ; jumptable            260     6 (fixed)
 26443                           ;	Chosen strategy is simple_byte
 26444     0DC0  087A               	movf	??_I2C1_DO_TX+1,w
 26445     0DC1  3A00               	xorlw	0	; case 0
 26446     0DC2  1903               	skipnz
 26447     0DC3  2DC5               	goto	l16614
 26448     0DC4  2DAE               	goto	l12772
 26449     0DC5                     l16614:
 26450                           
 26451                           ; Switch size 1, requested type "simple"
 26452                           ; Number of cases is 4, Range of values is 1 to 4
 26453                           ; switch strategies available:
 26454                           ; Name         Instructions Cycles
 26455                           ; simple_byte           13     7 (average)
 26456                           ; direct_byte           17     9 (fixed)
 26457                           ; jumptable            263     9 (fixed)
 26458                           ;	Chosen strategy is simple_byte
 26459     0DC5  0879               	movf	??_I2C1_DO_TX,w
 26460     0DC6  3A01               	xorlw	1	; case 1
 26461     0DC7  1903               	skipnz
 26462     0DC8  2DAE               	goto	l12772
 26463     0DC9  3A03               	xorlw	3	; case 2
 26464     0DCA  1903               	skipnz
 26465     0DCB  2DA6               	goto	l12764
 26466     0DCC  3A01               	xorlw	1	; case 3
 26467     0DCD  1903               	skipnz
 26468     0DCE  2DAA               	goto	l12768
 26469     0DCF  3A07               	xorlw	7	; case 4
 26470     0DD0  1903               	skipnz
 26471     0DD1  2DAE               	goto	l12772
 26472     0DD2  2DAE               	goto	l12772
 26473     0DD3                     l2465:	
 26474                           ;mcc_generated_files/i2c1_master.c: 370:     else
 26475                           
 26476                           
 26477                           ;mcc_generated_files/i2c1_master.c: 371:     {;mcc_generated_files/i2c1_master.c: 372:  
      +                                 I2C1_Status.addressNackCheck = 0;
 26478     0DD3  0141               	movlb	1	; select bank1
 26479     0DD4  103D               	bcf	(_I2C1_Status^(0+128)+29),0
 26480     0DD5                     l12780:
 26481                           
 26482                           ;mcc_generated_files/i2c1_master.c: 373:         I2C1_MasterSendTxData(*I2C1_Status.data
      +                          _ptr++);
 26483     0DD5  0838               	movf	((low ((_I2C1_Status| 0+23))+1))^(0+128),w
 26484     0DD6  00FA               	movwf	??_I2C1_DO_TX+1
 26485     0DD7  0837               	movf	(low ((_I2C1_Status| 0+23)))^(0+128),w
 26486     0DD8  00F9               	movwf	??_I2C1_DO_TX
 26487     0DD9  0AB7               	incf	(low ((_I2C1_Status| 0+23)))^(0+128),f
 26488     0DDA  1903               	skipnz
 26489     0DDB  0AB8               	incf	((low ((_I2C1_Status| 0+23))+1))^(0+128),f
 26490     0DDC  0879               	movf	??_I2C1_DO_TX,w
 26491     0DDD  0086               	movwf	6
 26492     0DDE  087A               	movf	??_I2C1_DO_TX+1,w
 26493     0DDF  0087               	movwf	7
 26494     0DE0  0801               	movf	1,w
 26495     0DE1  319E  26AF  318D   	fcall	_I2C1_MasterSendTxData
 26496     0DE4                     l12782:
 26497                           
 26498                           ;mcc_generated_files/i2c1_master.c: 374:         return (--I2C1_Status.data_length)?I2C1
      +                          _TX:I2C1_TX_EMPTY;
 26499     0DE4  3001               	movlw	1
 26500     0DE5  0141               	movlb	1	; select bank1
 26501     0DE6  02B9               	subwf	(_I2C1_Status^(0+128)+25),f
 26502     0DE7  3000               	movlw	0
 26503     0DE8  3BBA               	subwfb	((_I2C1_Status+1)^(0+128)+25),f
 26504     0DE9  0839               	movf	(_I2C1_Status^(0+128)+25),w
 26505     0DEA  043A               	iorwf	((_I2C1_Status+1)^(0+128)+25),w
 26506     0DEB  1D03               	btfss	3,2
 26507     0DEC  2DEE               	goto	u9561
 26508     0DED  2DEF               	goto	u9560
 26509     0DEE                     u9561:
 26510     0DEE  2DF1               	goto	l12786
 26511     0DEF                     u9560:
 26512     0DEF                     l12784:
 26513     0DEF  3006               	movlw	6
 26514     0DF0  2DF2               	goto	l2468
 26515     0DF1                     l12786:
 26516     0DF1  3003               	movlw	3
 26517     0DF2                     l2468:
 26518     0DF2  0008               	return
 26519     0DF3                     __end_of_I2C1_DO_TX:
 26520                           
 26521                           	psect	text128
 26522     1F65                     __ptext128:	
 26523 ;; *************** function _I2C1_DO_SEND_ADR_WRITE *****************
 26524 ;; Defined at:
 26525 ;;		line 347 in file "mcc_generated_files/i2c1_master.c"
 26526 ;; Parameters:    Size  Location     Type
 26527 ;;		None
 26528 ;; Auto vars:     Size  Location     Type
 26529 ;;		None
 26530 ;; Return value:  Size  Location     Type
 26531 ;;                  1    wreg      enum E12565
 26532 ;; Registers used:
 26533 ;;		wreg, status,2, status,0, pclath, cstack
 26534 ;; Tracked objects:
 26535 ;;		On entry : 0/0
 26536 ;;		On exit  : 0/0
 26537 ;;		Unchanged: 0/0
 26538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26543 ;;Total ram usage:        0 bytes
 26544 ;; Hardware stack levels used: 1
 26545 ;; Hardware stack levels required when called: 5
 26546 ;; This function calls:
 26547 ;;		_I2C1_MasterSendTxData
 26548 ;; This function is called by:
 26549 ;;		_I2C1_MasterFsm
 26550 ;; This function uses a non-reentrant model
 26551 ;;
 26552                           
 26553     1F65                     _I2C1_DO_SEND_ADR_WRITE:	
 26554                           ;psect for function _I2C1_DO_SEND_ADR_WRITE
 26555                           
 26556     1F65                     l12752:	
 26557                           ;incstack = 0
 26558                           ; Regs used in _I2C1_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 26559                           
 26560                           
 26561                           ;mcc_generated_files/i2c1_master.c: 349:     I2C1_Status.addressNackCheck = 1;
 26562     1F65  0141               	movlb	1	; select bank1
 26563     1F66  143D               	bsf	(_I2C1_Status^(0+128)+29),0
 26564     1F67                     l12754:
 26565                           
 26566                           ;mcc_generated_files/i2c1_master.c: 350:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1));
 26567     1F67  3536               	lslf	(_I2C1_Status^(0+128)+22),w
 26568     1F68  319E  26AF  319F   	fcall	_I2C1_MasterSendTxData
 26569     1F6B                     l12756:
 26570                           
 26571                           ;mcc_generated_files/i2c1_master.c: 351:     return I2C1_TX;
 26572     1F6B  3003               	movlw	3
 26573     1F6C                     l2462:
 26574     1F6C  0008               	return
 26575     1F6D                     __end_of_I2C1_DO_SEND_ADR_WRITE:
 26576                           
 26577                           	psect	text129
 26578     1F7E                     __ptext129:	
 26579 ;; *************** function _I2C1_DO_SEND_ADR_READ *****************
 26580 ;; Defined at:
 26581 ;;		line 340 in file "mcc_generated_files/i2c1_master.c"
 26582 ;; Parameters:    Size  Location     Type
 26583 ;;		None
 26584 ;; Auto vars:     Size  Location     Type
 26585 ;;		None
 26586 ;; Return value:  Size  Location     Type
 26587 ;;                  1    wreg      enum E12565
 26588 ;; Registers used:
 26589 ;;		wreg, status,2, status,0, pclath, cstack
 26590 ;; Tracked objects:
 26591 ;;		On entry : 0/0
 26592 ;;		On exit  : 0/0
 26593 ;;		Unchanged: 0/0
 26594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26599 ;;Total ram usage:        0 bytes
 26600 ;; Hardware stack levels used: 1
 26601 ;; Hardware stack levels required when called: 5
 26602 ;; This function calls:
 26603 ;;		_I2C1_MasterSendTxData
 26604 ;; This function is called by:
 26605 ;;		_I2C1_MasterFsm
 26606 ;; This function uses a non-reentrant model
 26607 ;;
 26608                           
 26609     1F7E                     _I2C1_DO_SEND_ADR_READ:	
 26610                           ;psect for function _I2C1_DO_SEND_ADR_READ
 26611                           
 26612     1F7E                     l12744:	
 26613                           ;incstack = 0
 26614                           ; Regs used in _I2C1_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 26615                           
 26616                           
 26617                           ;mcc_generated_files/i2c1_master.c: 342:     I2C1_Status.addressNackCheck = 1;
 26618     1F7E  0141               	movlb	1	; select bank1
 26619     1F7F  143D               	bsf	(_I2C1_Status^(0+128)+29),0
 26620     1F80                     l12746:
 26621                           
 26622                           ;mcc_generated_files/i2c1_master.c: 343:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1 | 1));
 26623     1F80  1403               	setc
 26624     1F81  0D36               	rlf	(_I2C1_Status^(0+128)+22),w
 26625     1F82  319E  26AF  319F   	fcall	_I2C1_MasterSendTxData
 26626     1F85                     l12748:
 26627                           
 26628                           ;mcc_generated_files/i2c1_master.c: 344:     return I2C1_RCEN;
 26629     1F85  3005               	movlw	5
 26630     1F86                     l2459:
 26631     1F86  0008               	return
 26632     1F87                     __end_of_I2C1_DO_SEND_ADR_READ:
 26633                           
 26634                           	psect	text130
 26635     1EB4                     __ptext130:	
 26636 ;; *************** function _I2C1_DO_IDLE *****************
 26637 ;; Defined at:
 26638 ;;		line 333 in file "mcc_generated_files/i2c1_master.c"
 26639 ;; Parameters:    Size  Location     Type
 26640 ;;		None
 26641 ;; Auto vars:     Size  Location     Type
 26642 ;;		None
 26643 ;; Return value:  Size  Location     Type
 26644 ;;                  1    wreg      enum E12565
 26645 ;; Registers used:
 26646 ;;		wreg, status,2
 26647 ;; Tracked objects:
 26648 ;;		On entry : 0/0
 26649 ;;		On exit  : 0/0
 26650 ;;		Unchanged: 0/0
 26651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26656 ;;Total ram usage:        0 bytes
 26657 ;; Hardware stack levels used: 1
 26658 ;; Hardware stack levels required when called: 4
 26659 ;; This function calls:
 26660 ;;		Nothing
 26661 ;; This function is called by:
 26662 ;;		_I2C1_MasterFsm
 26663 ;; This function uses a non-reentrant model
 26664 ;;
 26665                           
 26666     1EB4                     _I2C1_DO_IDLE:	
 26667                           ;psect for function _I2C1_DO_IDLE
 26668                           
 26669     1EB4                     l12736:	
 26670                           ;incstack = 0
 26671                           ; Regs used in _I2C1_DO_IDLE: [wreg+status,2]
 26672                           
 26673                           
 26674                           ;mcc_generated_files/i2c1_master.c: 335:     I2C1_Status.busy = 0;
 26675     1EB4  0141               	movlb	1	; select bank1
 26676     1EB5  10BD               	bcf	(_I2C1_Status^(0+128)+29),1
 26677     1EB6                     l12738:
 26678                           
 26679                           ;mcc_generated_files/i2c1_master.c: 336:     I2C1_Status.error = I2C1_NOERR;
 26680     1EB6  01BC               	clrf	(_I2C1_Status^(0+128)+28)
 26681     1EB7                     l12740:
 26682                           
 26683                           ;mcc_generated_files/i2c1_master.c: 337:     return I2C1_RESET;
 26684     1EB7  300E               	movlw	14
 26685     1EB8                     l2456:
 26686     1EB8  0008               	return
 26687     1EB9                     __end_of_I2C1_DO_IDLE:
 26688                           
 26689                           	psect	text131
 26690     15B2                     __ptext131:	
 26691 ;; *************** function _I2C1_DO_TX_EMPTY *****************
 26692 ;; Defined at:
 26693 ;;		line 409 in file "mcc_generated_files/i2c1_master.c"
 26694 ;; Parameters:    Size  Location     Type
 26695 ;;		None
 26696 ;; Auto vars:     Size  Location     Type
 26697 ;;		None
 26698 ;; Return value:  Size  Location     Type
 26699 ;;                  1    wreg      enum E12565
 26700 ;; Registers used:
 26701 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 26702 ;; Tracked objects:
 26703 ;;		On entry : 0/0
 26704 ;;		On exit  : 0/0
 26705 ;;		Unchanged: 0/0
 26706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26709 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26710 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26711 ;;Total ram usage:        2 bytes
 26712 ;; Hardware stack levels used: 1
 26713 ;; Hardware stack levels required when called: 7
 26714 ;; This function calls:
 26715 ;;		NULL
 26716 ;;		_I2C1_CallbackReturnReset
 26717 ;;		_I2C1_CallbackReturnStop
 26718 ;;		_I2C1_DO_SEND_RESTART
 26719 ;;		_I2C1_DO_SEND_STOP
 26720 ;;		_I2C1_MasterSetIrq
 26721 ;;		_rd1RegCompleteHandler
 26722 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1693
 26723 ;;		_rd2RegCompleteHandler
 26724 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1704
 26725 ;;		_rdBlkRegCompleteHandler
 26726 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1727
 26727 ;;		_wr1RegCompleteHandler
 26728 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1710
 26729 ;;		_wr2RegCompleteHandler
 26730 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1716
 26731 ;; This function is called by:
 26732 ;;		_I2C1_MasterFsm
 26733 ;; This function uses a non-reentrant model
 26734 ;;
 26735                           
 26736     15B2                     _I2C1_DO_TX_EMPTY:	
 26737                           ;psect for function _I2C1_DO_TX_EMPTY
 26738                           
 26739     15B2                     l12834:	
 26740                           ;incstack = 0
 26741                           ; Regs used in _I2C1_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 26742                           
 26743                           
 26744                           ;mcc_generated_files/i2c1_master.c: 411:     I2C1_Status.bufferFree = 1;
 26745     15B2  0141               	movlb	1	; select bank1
 26746     15B3  15BD               	bsf	(_I2C1_Status^(0+128)+29),3
 26747                           
 26748                           ;mcc_generated_files/i2c1_master.c: 412:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 26749     15B4  2DC2               	goto	l12852
 26750     15B5                     l12836:
 26751                           
 26752                           ;mcc_generated_files/i2c1_master.c: 416:             return I2C1_DO_SEND_RESTART();
 26753     15B5  319E  26C3  3195   	fcall	_I2C1_DO_SEND_RESTART
 26754     15B8  2DDE               	goto	l2499
 26755     15B9                     l12840:
 26756                           
 26757                           ;mcc_generated_files/i2c1_master.c: 418:             I2C1_MasterSetIrq();
 26758     15B9  319E  2689  3195   	fcall	_I2C1_MasterSetIrq
 26759     15BC                     l12842:
 26760                           
 26761                           ;mcc_generated_files/i2c1_master.c: 419:             return I2C1_TX;
 26762     15BC  3003               	movlw	3
 26763     15BD  2DDE               	goto	l2499
 26764     15BE                     l12846:
 26765                           
 26766                           ;mcc_generated_files/i2c1_master.c: 422:             return I2C1_DO_SEND_STOP();
 26767     15BE  319E  26C8  3195   	fcall	_I2C1_DO_SEND_STOP
 26768     15C1  2DDE               	goto	l2499
 26769     15C2                     l12852:
 26770     15C2  082C               	movf	(low ((_I2C1_Status| 0+12)))^(0+128),w
 26771     15C3  00F8               	movwf	I2C1_CallbackReturnReset@funPtr
 26772     15C4  0821               	movf	(_I2C1_Status+1)^(0+128),w
 26773     15C5  008A               	movwf	10
 26774     15C6  0820               	movf	_I2C1_Status^(0+128),w
 26775     15C7  000A               	callw
 26776     15C8  3195               	pagesel	$
 26777     15C9  00F9               	movwf	??_I2C1_DO_TX_EMPTY
 26778     15CA  01FA               	clrf	??_I2C1_DO_TX_EMPTY+1
 26779                           
 26780                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26781                           ; Switch size 1, requested type "simple"
 26782                           ; Number of cases is 1, Range of values is 0 to 0
 26783                           ; switch strategies available:
 26784                           ; Name         Instructions Cycles
 26785                           ; simple_byte            4     3 (average)
 26786                           ; direct_byte            8     6 (fixed)
 26787                           ; jumptable            260     6 (fixed)
 26788                           ;	Chosen strategy is simple_byte
 26789     15CB  087A               	movf	??_I2C1_DO_TX_EMPTY+1,w
 26790     15CC  3A00               	xorlw	0	; case 0
 26791     15CD  1903               	skipnz
 26792     15CE  2DD0               	goto	l16616
 26793     15CF  2DBE               	goto	l12846
 26794     15D0                     l16616:
 26795                           
 26796                           ; Switch size 1, requested type "simple"
 26797                           ; Number of cases is 4, Range of values is 1 to 4
 26798                           ; switch strategies available:
 26799                           ; Name         Instructions Cycles
 26800                           ; simple_byte           13     7 (average)
 26801                           ; direct_byte           17     9 (fixed)
 26802                           ; jumptable            263     9 (fixed)
 26803                           ;	Chosen strategy is simple_byte
 26804     15D0  0879               	movf	??_I2C1_DO_TX_EMPTY,w
 26805     15D1  3A01               	xorlw	1	; case 1
 26806     15D2  1903               	skipnz
 26807     15D3  2DBE               	goto	l12846
 26808     15D4  3A03               	xorlw	3	; case 2
 26809     15D5  1903               	skipnz
 26810     15D6  2DB5               	goto	l12836
 26811     15D7  3A01               	xorlw	1	; case 3
 26812     15D8  1903               	skipnz
 26813     15D9  2DB5               	goto	l12836
 26814     15DA  3A07               	xorlw	7	; case 4
 26815     15DB  1903               	skipnz
 26816     15DC  2DB9               	goto	l12840
 26817     15DD  2DBE               	goto	l12846
 26818     15DE                     l2499:
 26819     15DE  0008               	return
 26820     15DF                     __end_of_I2C1_DO_TX_EMPTY:
 26821                           
 26822                           	psect	text132
 26823     1E89                     __ptext132:	
 26824 ;; *************** function _I2C1_MasterSetIrq *****************
 26825 ;; Defined at:
 26826 ;;		line 645 in file "mcc_generated_files/i2c1_master.c"
 26827 ;; Parameters:    Size  Location     Type
 26828 ;;		None
 26829 ;; Auto vars:     Size  Location     Type
 26830 ;;		None
 26831 ;; Return value:  Size  Location     Type
 26832 ;;                  1    wreg      void 
 26833 ;; Registers used:
 26834 ;;		None
 26835 ;; Tracked objects:
 26836 ;;		On entry : 0/0
 26837 ;;		On exit  : 0/0
 26838 ;;		Unchanged: 0/0
 26839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26844 ;;Total ram usage:        0 bytes
 26845 ;; Hardware stack levels used: 1
 26846 ;; Hardware stack levels required when called: 4
 26847 ;; This function calls:
 26848 ;;		Nothing
 26849 ;; This function is called by:
 26850 ;;		_I2C1_DO_TX_EMPTY
 26851 ;; This function uses a non-reentrant model
 26852 ;;
 26853                           
 26854     1E89                     _I2C1_MasterSetIrq:	
 26855                           ;psect for function _I2C1_MasterSetIrq
 26856                           
 26857     1E89                     l12724:	
 26858                           ;incstack = 0
 26859                           ; Regs used in _I2C1_MasterSetIrq: []
 26860                           
 26861                           
 26862                           ;mcc_generated_files/i2c1_master.c: 647:     PIR3bits.SSP1IF = 1;
 26863     1E89  014E               	movlb	14	; select bank14
 26864     1E8A  140F               	bsf	15,0	;volatile
 26865     1E8B                     l2619:
 26866     1E8B  0008               	return
 26867     1E8C                     __end_of_I2C1_MasterSetIrq:
 26868                           
 26869                           	psect	text133
 26870     1EEB                     __ptext133:	
 26871 ;; *************** function _I2C1_MasterIsNack *****************
 26872 ;; Defined at:
 26873 ;;		line 598 in file "mcc_generated_files/i2c1_master.c"
 26874 ;; Parameters:    Size  Location     Type
 26875 ;;		None
 26876 ;; Auto vars:     Size  Location     Type
 26877 ;;		None
 26878 ;; Return value:  Size  Location     Type
 26879 ;;                  1    wreg      _Bool 
 26880 ;; Registers used:
 26881 ;;		wreg, status,2, status,0
 26882 ;; Tracked objects:
 26883 ;;		On entry : 0/0
 26884 ;;		On exit  : 0/0
 26885 ;;		Unchanged: 0/0
 26886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26891 ;;Total ram usage:        0 bytes
 26892 ;; Hardware stack levels used: 1
 26893 ;; Hardware stack levels required when called: 4
 26894 ;; This function calls:
 26895 ;;		Nothing
 26896 ;; This function is called by:
 26897 ;;		_I2C1_MasterFsm
 26898 ;;		_I2C1_DO_TX
 26899 ;; This function uses a non-reentrant model
 26900 ;;
 26901                           
 26902     1EEB                     _I2C1_MasterIsNack:	
 26903                           ;psect for function _I2C1_MasterIsNack
 26904                           
 26905     1EEB                     l12674:	
 26906                           ;incstack = 0
 26907                           ; Regs used in _I2C1_MasterIsNack: [wreg+status,2+status,0]
 26908                           
 26909                           
 26910                           ;mcc_generated_files/i2c1_master.c: 600:     return SSP1CON2bits.ACKSTAT;
 26911     1EEB  0143               	movlb	3	; select bank3
 26912     1EEC  0E11               	swapf	17,w	;volatile
 26913     1EED  0C89               	rrf	9,f
 26914     1EEE  0C89               	rrf	9,f
 26915     1EEF  3901               	andlw	1
 26916     1EF0                     l2592:
 26917     1EF0  0008               	return
 26918     1EF1                     __end_of_I2C1_MasterIsNack:
 26919                           
 26920                           	psect	text134
 26921     1EAF                     __ptext134:	
 26922 ;; *************** function _I2C1_MasterSendTxData *****************
 26923 ;; Defined at:
 26924 ;;		line 568 in file "mcc_generated_files/i2c1_master.c"
 26925 ;; Parameters:    Size  Location     Type
 26926 ;;  data            1    wreg     unsigned char 
 26927 ;; Auto vars:     Size  Location     Type
 26928 ;;  data            1    1[COMMON] unsigned char 
 26929 ;; Return value:  Size  Location     Type
 26930 ;;                  1    wreg      void 
 26931 ;; Registers used:
 26932 ;;		wreg
 26933 ;; Tracked objects:
 26934 ;;		On entry : 0/0
 26935 ;;		On exit  : 0/0
 26936 ;;		Unchanged: 0/0
 26937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26939 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26941 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26942 ;;Total ram usage:        1 bytes
 26943 ;; Hardware stack levels used: 1
 26944 ;; Hardware stack levels required when called: 4
 26945 ;; This function calls:
 26946 ;;		Nothing
 26947 ;; This function is called by:
 26948 ;;		_I2C1_DO_SEND_ADR_READ
 26949 ;;		_I2C1_DO_SEND_ADR_WRITE
 26950 ;;		_I2C1_DO_TX
 26951 ;; This function uses a non-reentrant model
 26952 ;;
 26953                           
 26954     1EAF                     _I2C1_MasterSendTxData:	
 26955                           ;psect for function _I2C1_MasterSendTxData
 26956                           
 26957                           
 26958                           ;incstack = 0
 26959                           ; Regs used in _I2C1_MasterSendTxData: [wreg]
 26960                           ;I2C1_MasterSendTxData@data stored from wreg
 26961     1EAF  00F1               	movwf	I2C1_MasterSendTxData@data
 26962     1EB0                     l12678:
 26963                           
 26964                           ;mcc_generated_files/i2c1_master.c: 568: static __attribute__((inline)) void I2C1_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c1_master.c: 569: {;mcc_generated_files/i
      +                          2c1_master.c: 570:     SSP1BUF = data;
 26965     1EB0  0871               	movf	I2C1_MasterSendTxData@data,w
 26966     1EB1  0143               	movlb	3	; select bank3
 26967     1EB2  008C               	movwf	12	;volatile
 26968     1EB3                     l2574:
 26969     1EB3  0008               	return
 26970     1EB4                     __end_of_I2C1_MasterSendTxData:
 26971                           
 26972                           	psect	text135
 26973     1EA3                     __ptext135:	
 26974 ;; *************** function _I2C1_MasterSendAck *****************
 26975 ;; Defined at:
 26976 ;;		line 603 in file "mcc_generated_files/i2c1_master.c"
 26977 ;; Parameters:    Size  Location     Type
 26978 ;;		None
 26979 ;; Auto vars:     Size  Location     Type
 26980 ;;		None
 26981 ;; Return value:  Size  Location     Type
 26982 ;;                  1    wreg      void 
 26983 ;; Registers used:
 26984 ;;		None
 26985 ;; Tracked objects:
 26986 ;;		On entry : 0/0
 26987 ;;		On exit  : 0/0
 26988 ;;		Unchanged: 0/0
 26989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26994 ;;Total ram usage:        0 bytes
 26995 ;; Hardware stack levels used: 1
 26996 ;; Hardware stack levels required when called: 4
 26997 ;; This function calls:
 26998 ;;		Nothing
 26999 ;; This function is called by:
 27000 ;;		_I2C1_DO_RX
 27001 ;;		_I2C1_DO_RX_ACK
 27002 ;; This function uses a non-reentrant model
 27003 ;;
 27004                           
 27005     1EA3                     _I2C1_MasterSendAck:	
 27006                           ;psect for function _I2C1_MasterSendAck
 27007                           
 27008     1EA3                     l12702:	
 27009                           ;incstack = 0
 27010                           ; Regs used in _I2C1_MasterSendAck: []
 27011                           
 27012                           
 27013                           ;mcc_generated_files/i2c1_master.c: 605:     SSP1CON2bits.ACKDT = 0;
 27014     1EA3  0143               	movlb	3	; select bank3
 27015     1EA4  1291               	bcf	17,5	;volatile
 27016                           
 27017                           ;mcc_generated_files/i2c1_master.c: 606:     SSP1CON2bits.ACKEN = 1;
 27018     1EA5  1611               	bsf	17,4	;volatile
 27019     1EA6                     l2595:
 27020     1EA6  0008               	return
 27021     1EA7                     __end_of_I2C1_MasterSendAck:
 27022                           
 27023                           	psect	text136
 27024     1E86                     __ptext136:	
 27025 ;; *************** function _I2C1_MasterGetRxData *****************
 27026 ;; Defined at:
 27027 ;;		line 563 in file "mcc_generated_files/i2c1_master.c"
 27028 ;; Parameters:    Size  Location     Type
 27029 ;;		None
 27030 ;; Auto vars:     Size  Location     Type
 27031 ;;		None
 27032 ;; Return value:  Size  Location     Type
 27033 ;;                  1    wreg      unsigned char 
 27034 ;; Registers used:
 27035 ;;		wreg
 27036 ;; Tracked objects:
 27037 ;;		On entry : 0/0
 27038 ;;		On exit  : 0/0
 27039 ;;		Unchanged: 0/0
 27040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27045 ;;Total ram usage:        0 bytes
 27046 ;; Hardware stack levels used: 1
 27047 ;; Hardware stack levels required when called: 4
 27048 ;; This function calls:
 27049 ;;		Nothing
 27050 ;; This function is called by:
 27051 ;;		_I2C1_DO_RX
 27052 ;; This function uses a non-reentrant model
 27053 ;;
 27054                           
 27055     1E86                     _I2C1_MasterGetRxData:	
 27056                           ;psect for function _I2C1_MasterGetRxData
 27057                           
 27058     1E86                     l12698:	
 27059                           ;incstack = 0
 27060                           ; Regs used in _I2C1_MasterGetRxData: [wreg]
 27061                           
 27062                           
 27063                           ;mcc_generated_files/i2c1_master.c: 565:     return SSP1BUF;
 27064     1E86  0143               	movlb	3	; select bank3
 27065     1E87  080C               	movf	12,w	;volatile
 27066     1E88                     l2571:
 27067     1E88  0008               	return
 27068     1E89                     __end_of_I2C1_MasterGetRxData:
 27069                           
 27070                           	psect	text137
 27071     1E9F                     __ptext137:	
 27072 ;; *************** function _I2C1_MasterSendNack *****************
 27073 ;; Defined at:
 27074 ;;		line 609 in file "mcc_generated_files/i2c1_master.c"
 27075 ;; Parameters:    Size  Location     Type
 27076 ;;		None
 27077 ;; Auto vars:     Size  Location     Type
 27078 ;;		None
 27079 ;; Return value:  Size  Location     Type
 27080 ;;                  1    wreg      void 
 27081 ;; Registers used:
 27082 ;;		None
 27083 ;; Tracked objects:
 27084 ;;		On entry : 0/0
 27085 ;;		On exit  : 0/0
 27086 ;;		Unchanged: 0/0
 27087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27092 ;;Total ram usage:        0 bytes
 27093 ;; Hardware stack levels used: 1
 27094 ;; Hardware stack levels required when called: 4
 27095 ;; This function calls:
 27096 ;;		Nothing
 27097 ;; This function is called by:
 27098 ;;		_I2C1_DO_RX_NACK_STOP
 27099 ;;		_I2C1_DO_RX_NACK_RESTART
 27100 ;; This function uses a non-reentrant model
 27101 ;;
 27102                           
 27103     1E9F                     _I2C1_MasterSendNack:	
 27104                           ;psect for function _I2C1_MasterSendNack
 27105                           
 27106     1E9F                     l12596:	
 27107                           ;incstack = 0
 27108                           ; Regs used in _I2C1_MasterSendNack: []
 27109                           
 27110                           
 27111                           ;mcc_generated_files/i2c1_master.c: 611:     SSP1CON2bits.ACKDT = 1;
 27112     1E9F  0143               	movlb	3	; select bank3
 27113     1EA0  1691               	bsf	17,5	;volatile
 27114                           
 27115                           ;mcc_generated_files/i2c1_master.c: 612:     SSP1CON2bits.ACKEN = 1;
 27116     1EA1  1611               	bsf	17,4	;volatile
 27117     1EA2                     l2598:
 27118     1EA2  0008               	return
 27119     1EA3                     __end_of_I2C1_MasterSendNack:
 27120                           
 27121                           	psect	text138
 27122     1E83                     __ptext138:	
 27123 ;; *************** function _I2C1_MasterStartRx *****************
 27124 ;; Defined at:
 27125 ;;		line 583 in file "mcc_generated_files/i2c1_master.c"
 27126 ;; Parameters:    Size  Location     Type
 27127 ;;		None
 27128 ;; Auto vars:     Size  Location     Type
 27129 ;;		None
 27130 ;; Return value:  Size  Location     Type
 27131 ;;                  1    wreg      void 
 27132 ;; Registers used:
 27133 ;;		None
 27134 ;; Tracked objects:
 27135 ;;		On entry : 0/0
 27136 ;;		On exit  : 0/0
 27137 ;;		Unchanged: 0/0
 27138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27143 ;;Total ram usage:        0 bytes
 27144 ;; Hardware stack levels used: 1
 27145 ;; Hardware stack levels required when called: 4
 27146 ;; This function calls:
 27147 ;;		Nothing
 27148 ;; This function is called by:
 27149 ;;		_I2C1_DO_RCEN
 27150 ;; This function uses a non-reentrant model
 27151 ;;
 27152                           
 27153     1E83                     _I2C1_MasterStartRx:	
 27154                           ;psect for function _I2C1_MasterStartRx
 27155                           
 27156     1E83                     l12716:	
 27157                           ;incstack = 0
 27158                           ; Regs used in _I2C1_MasterStartRx: []
 27159                           
 27160                           
 27161                           ;mcc_generated_files/i2c1_master.c: 585:     SSP1CON2bits.RCEN = 1;
 27162     1E83  0143               	movlb	3	; select bank3
 27163     1E84  1591               	bsf	17,3	;volatile
 27164     1E85                     l2583:
 27165     1E85  0008               	return
 27166     1E86                     __end_of_I2C1_MasterStartRx:
 27167                           
 27168                           	psect	text139
 27169     1E6F                     __ptext139:	
 27170 ;; *************** function _I2C1_CallbackReturnReset *****************
 27171 ;; Defined at:
 27172 ;;		line 525 in file "mcc_generated_files/i2c1_master.c"
 27173 ;; Parameters:    Size  Location     Type
 27174 ;;  funPtr          1    8[COMMON] PTR void 
 27175 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27176 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27177 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27178 ;; Auto vars:     Size  Location     Type
 27179 ;;		None
 27180 ;; Return value:  Size  Location     Type
 27181 ;;                  1    wreg      enum E363
 27182 ;; Registers used:
 27183 ;;		wreg
 27184 ;; Tracked objects:
 27185 ;;		On entry : 0/0
 27186 ;;		On exit  : 0/0
 27187 ;;		Unchanged: 0/0
 27188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27189 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27192 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27193 ;;Total ram usage:        1 bytes
 27194 ;; Hardware stack levels used: 1
 27195 ;; Hardware stack levels required when called: 4
 27196 ;; This function calls:
 27197 ;;		Nothing
 27198 ;; This function is called by:
 27199 ;;		_I2C1_Open
 27200 ;;		_I2C1_DO_TX
 27201 ;;		_I2C1_DO_RX
 27202 ;;		_I2C1_DO_TX_EMPTY
 27203 ;;		_I2C1_DO_ADDRESS_NACK
 27204 ;;		_I2C1_DO_RX_EMPTY
 27205 ;; This function uses a non-reentrant model
 27206 ;;
 27207                           
 27208     1E6F                     _I2C1_CallbackReturnReset:	
 27209                           ;psect for function _I2C1_CallbackReturnReset
 27210                           
 27211     1E6F                     l12730:	
 27212                           ;incstack = 0
 27213                           ; Regs used in _I2C1_CallbackReturnReset: [wreg]
 27214                           
 27215                           
 27216                           ;mcc_generated_files/i2c1_master.c: 525: i2c1_operations_t I2C1_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c1_master.c: 526: {;mcc_generated_files/i2c1_master.c: 5
      +                          27:     return I2C1_RESET_LINK;
 27217     1E6F  3005               	movlw	5
 27218     1E70                     l2555:
 27219     1E70  0008               	return
 27220     1E71                     __end_of_I2C1_CallbackReturnReset:
 27221                           
 27222                           	psect	text140
 27223     1E6D                     __ptext140:	
 27224 ;; *************** function _I2C1_CallbackReturnStop *****************
 27225 ;; Defined at:
 27226 ;;		line 520 in file "mcc_generated_files/i2c1_master.c"
 27227 ;; Parameters:    Size  Location     Type
 27228 ;;  funPtr          1    8[COMMON] PTR void 
 27229 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27230 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27231 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27232 ;; Auto vars:     Size  Location     Type
 27233 ;;		None
 27234 ;; Return value:  Size  Location     Type
 27235 ;;                  1    wreg      enum E363
 27236 ;; Registers used:
 27237 ;;		wreg
 27238 ;; Tracked objects:
 27239 ;;		On entry : 0/0
 27240 ;;		On exit  : 0/0
 27241 ;;		Unchanged: 0/0
 27242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27243 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27246 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27247 ;;Total ram usage:        1 bytes
 27248 ;; Hardware stack levels used: 1
 27249 ;; Hardware stack levels required when called: 4
 27250 ;; This function calls:
 27251 ;;		Nothing
 27252 ;; This function is called by:
 27253 ;;		_I2C1_Open
 27254 ;;		_I2C1_SetCallback
 27255 ;;		_I2C1_DO_TX
 27256 ;;		_I2C1_DO_RX
 27257 ;;		_I2C1_DO_TX_EMPTY
 27258 ;;		_I2C1_DO_ADDRESS_NACK
 27259 ;;		_I2C1_DO_RX_EMPTY
 27260 ;; This function uses a non-reentrant model
 27261 ;;
 27262                           
 27263     1E6D                     _I2C1_CallbackReturnStop:	
 27264                           ;psect for function _I2C1_CallbackReturnStop
 27265                           
 27266     1E6D                     l12726:	
 27267                           ;incstack = 0
 27268                           ; Regs used in _I2C1_CallbackReturnStop: [wreg]
 27269                           
 27270                           
 27271                           ;mcc_generated_files/i2c1_master.c: 520: i2c1_operations_t I2C1_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c1_master.c: 521: {;mcc_generated_files/i2c1_master.c: 52
      +                          2:     return I2C1_STOP;
 27272     1E6D  3001               	movlw	1
 27273     1E6E                     l2552:
 27274     1E6E  0008               	return
 27275     1E6F                     __end_of_I2C1_CallbackReturnStop:
 27276                           
 27277                           	psect	text141
 27278     135B                     __ptext141:	
 27279 ;; *************** function _rdBlkRegCompleteHandler@i2c1_master_example$F1727 *****************
 27280 ;; Defined at:
 27281 ;;		line 170 in file "mcc_generated_files/examples/i2c1_master_example.c"
 27282 ;; Parameters:    Size  Location     Type
 27283 ;;  ptr             1    8[COMMON] PTR void 
 27284 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27285 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27286 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27287 ;; Auto vars:     Size  Location     Type
 27288 ;;		None
 27289 ;; Return value:  Size  Location     Type
 27290 ;;                  1    wreg      enum E363
 27291 ;; Registers used:
 27292 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27293 ;; Tracked objects:
 27294 ;;		On entry : 0/0
 27295 ;;		On exit  : 0/0
 27296 ;;		Unchanged: 0/0
 27297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27298 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27301 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27302 ;;Total ram usage:        1 bytes
 27303 ;; Hardware stack levels used: 1
 27304 ;; Hardware stack levels required when called: 6
 27305 ;; This function calls:
 27306 ;;		_I2C1_SetBuffer
 27307 ;;		_I2C1_SetDataCompleteCallback
 27308 ;; This function is called by:
 27309 ;;		_I2C1_ReadDataBlock
 27310 ;;		_I2C1_DO_TX
 27311 ;;		_I2C1_DO_RX
 27312 ;;		_I2C1_DO_TX_EMPTY
 27313 ;;		_I2C1_DO_ADDRESS_NACK
 27314 ;;		_I2C1_DO_RX_EMPTY
 27315 ;; This function uses a non-reentrant model
 27316 ;;
 27317                           
 27318     135B                     _rdBlkRegCompleteHandler@i2c1_master_example$F1727:	
 27319                           ;psect for function _rdBlkRegCompleteHandler@i2c1_master_example$F1727
 27320                           
 27321     135B                     l12668:	
 27322                           ;incstack = 0
 27323                           ; Regs used in _rdBlkRegCompleteHandler@i2c1_master_example$F1727: [wreg+fsr1l+fsr1h+sta
      +                          tus,2+status,0+pclath+cstack]
 27324                           
 27325                           
 27326                           ;mcc_generated_files/examples/i2c1_master_example.c: 170: static i2c1_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 171: {
      +                          ;mcc_generated_files/examples/i2c1_master_example.c: 172:     I2C1_SetBuffer(((i2c1_buff
      +                          er_t *)ptr)->data,((i2c1_buffer_t*)ptr)->len);
 27327     135B  0878               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F1727@ptr,w
 27328     135C  3E02               	addlw	2
 27329     135D  0086               	movwf	6
 27330     135E  0187               	clrf	7
 27331     135F  3F40               	moviw [0]fsr1
 27332     1360  00F1               	movwf	I2C1_SetBuffer@buffer
 27333     1361  3F41               	moviw [1]fsr1
 27334     1362  00F2               	movwf	I2C1_SetBuffer@buffer+1
 27335     1363  0878               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F1727@ptr,w
 27336     1364  0086               	movwf	6
 27337     1365  0187               	clrf	7
 27338     1366  3F40               	moviw [0]fsr1
 27339     1367  00F3               	movwf	I2C1_SetBuffer@bufferSize
 27340     1368  3F41               	moviw [1]fsr1
 27341     1369  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 27342     136A  3190  2093  3193   	fcall	_I2C1_SetBuffer
 27343                           
 27344                           ;mcc_generated_files/examples/i2c1_master_example.c: 173:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 27345     136D  3000               	movlw	0
 27346     136E  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27347     136F  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27348     1370  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27349     1371  319F  27D4  3193   	fcall	_I2C1_SetDataCompleteCallback
 27350     1374                     l12670:
 27351                           
 27352                           ;mcc_generated_files/examples/i2c1_master_example.c: 174:     return I2C1_RESTART_READ;
 27353     1374  3002               	movlw	2
 27354     1375                     l1396:
 27355     1375  0008               	return
 27356     1376                     __end_of_rdBlkRegCompleteHandler@i2c1_master_example$F1727:
 27357                           
 27358                           	psect	text142
 27359     1169                     __ptext142:	
 27360 ;; *************** function _wr1RegCompleteHandler@i2c1_master_example$F1710 *****************
 27361 ;; Defined at:
 27362 ;;		line 156 in file "mcc_generated_files/examples/i2c1_master_example.c"
 27363 ;; Parameters:    Size  Location     Type
 27364 ;;  ptr             1    8[COMMON] PTR void 
 27365 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27366 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27367 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27368 ;; Auto vars:     Size  Location     Type
 27369 ;;		None
 27370 ;; Return value:  Size  Location     Type
 27371 ;;                  1    wreg      enum E363
 27372 ;; Registers used:
 27373 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27374 ;; Tracked objects:
 27375 ;;		On entry : 0/0
 27376 ;;		On exit  : 0/0
 27377 ;;		Unchanged: 0/0
 27378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27379 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27382 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27383 ;;Total ram usage:        1 bytes
 27384 ;; Hardware stack levels used: 1
 27385 ;; Hardware stack levels required when called: 6
 27386 ;; This function calls:
 27387 ;;		_I2C1_SetBuffer
 27388 ;;		_I2C1_SetDataCompleteCallback
 27389 ;; This function is called by:
 27390 ;;		_I2C1_Write1ByteRegister
 27391 ;;		_I2C1_DO_TX
 27392 ;;		_I2C1_DO_RX
 27393 ;;		_I2C1_DO_TX_EMPTY
 27394 ;;		_I2C1_DO_ADDRESS_NACK
 27395 ;;		_I2C1_DO_RX_EMPTY
 27396 ;; This function uses a non-reentrant model
 27397 ;;
 27398                           
 27399     1169                     _wr1RegCompleteHandler@i2c1_master_example$F1710:	
 27400                           ;psect for function _wr1RegCompleteHandler@i2c1_master_example$F1710
 27401                           
 27402     1169                     l12652:	
 27403                           ;incstack = 0
 27404                           ; Regs used in _wr1RegCompleteHandler@i2c1_master_example$F1710: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 27405                           
 27406                           
 27407                           ;mcc_generated_files/examples/i2c1_master_example.c: 156: static i2c1_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 157: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 158:     I2C1_SetBuffer(ptr,1);
 27408     1169  0878               	movf	wr1RegCompleteHandler@i2c1_master_example$F1710@ptr,w
 27409     116A  00F1               	movwf	I2C1_SetBuffer@buffer
 27410     116B  01F2               	clrf	I2C1_SetBuffer@buffer+1
 27411     116C  3001               	movlw	1
 27412     116D  00F3               	movwf	I2C1_SetBuffer@bufferSize
 27413     116E  3000               	movlw	0
 27414     116F  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 27415     1170  3190  2093  3191   	fcall	_I2C1_SetBuffer
 27416     1173                     l12654:
 27417                           
 27418                           ;mcc_generated_files/examples/i2c1_master_example.c: 159:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 27419     1173  3000               	movlw	0
 27420     1174  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27421     1175  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27422     1176  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27423     1177  319F  27D4  3191   	fcall	_I2C1_SetDataCompleteCallback
 27424     117A                     l12656:
 27425                           
 27426                           ;mcc_generated_files/examples/i2c1_master_example.c: 160:     return I2C1_CONTINUE;
 27427     117A  3004               	movlw	4
 27428     117B                     l1390:
 27429     117B  0008               	return
 27430     117C                     __end_of_wr1RegCompleteHandler@i2c1_master_example$F1710:
 27431                           
 27432                           	psect	text143
 27433     1156                     __ptext143:	
 27434 ;; *************** function _rd2RegCompleteHandler@i2c1_master_example$F1704 *****************
 27435 ;; Defined at:
 27436 ;;		line 149 in file "mcc_generated_files/examples/i2c1_master_example.c"
 27437 ;; Parameters:    Size  Location     Type
 27438 ;;  ptr             1    8[COMMON] PTR void 
 27439 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27440 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27441 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27442 ;; Auto vars:     Size  Location     Type
 27443 ;;		None
 27444 ;; Return value:  Size  Location     Type
 27445 ;;                  1    wreg      enum E363
 27446 ;; Registers used:
 27447 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27448 ;; Tracked objects:
 27449 ;;		On entry : 0/0
 27450 ;;		On exit  : 0/0
 27451 ;;		Unchanged: 0/0
 27452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27453 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27456 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27457 ;;Total ram usage:        1 bytes
 27458 ;; Hardware stack levels used: 1
 27459 ;; Hardware stack levels required when called: 6
 27460 ;; This function calls:
 27461 ;;		_I2C1_SetBuffer
 27462 ;;		_I2C1_SetDataCompleteCallback
 27463 ;; This function is called by:
 27464 ;;		_I2C1_Read2ByteRegister
 27465 ;;		_I2C1_DO_TX
 27466 ;;		_I2C1_DO_RX
 27467 ;;		_I2C1_DO_TX_EMPTY
 27468 ;;		_I2C1_DO_ADDRESS_NACK
 27469 ;;		_I2C1_DO_RX_EMPTY
 27470 ;; This function uses a non-reentrant model
 27471 ;;
 27472                           
 27473     1156                     _rd2RegCompleteHandler@i2c1_master_example$F1704:	
 27474                           ;psect for function _rd2RegCompleteHandler@i2c1_master_example$F1704
 27475                           
 27476     1156                     l12644:	
 27477                           ;incstack = 0
 27478                           ; Regs used in _rd2RegCompleteHandler@i2c1_master_example$F1704: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 27479                           
 27480                           
 27481                           ;mcc_generated_files/examples/i2c1_master_example.c: 149: static i2c1_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 150: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 151:     I2C1_SetBuffer(ptr,2);
 27482     1156  0878               	movf	rd2RegCompleteHandler@i2c1_master_example$F1704@ptr,w
 27483     1157  00F1               	movwf	I2C1_SetBuffer@buffer
 27484     1158  01F2               	clrf	I2C1_SetBuffer@buffer+1
 27485     1159  3002               	movlw	2
 27486     115A  00F3               	movwf	I2C1_SetBuffer@bufferSize
 27487     115B  3000               	movlw	0
 27488     115C  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 27489     115D  3190  2093  3191   	fcall	_I2C1_SetBuffer
 27490     1160                     l12646:
 27491                           
 27492                           ;mcc_generated_files/examples/i2c1_master_example.c: 152:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 27493     1160  3000               	movlw	0
 27494     1161  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27495     1162  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27496     1163  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27497     1164  319F  27D4  3191   	fcall	_I2C1_SetDataCompleteCallback
 27498     1167                     l12648:
 27499                           
 27500                           ;mcc_generated_files/examples/i2c1_master_example.c: 153:     return I2C1_RESTART_READ;
 27501     1167  3002               	movlw	2
 27502     1168                     l1387:
 27503     1168  0008               	return
 27504     1169                     __end_of_rd2RegCompleteHandler@i2c1_master_example$F1704:
 27505                           
 27506                           	psect	text144
 27507     1143                     __ptext144:	
 27508 ;; *************** function _rd1RegCompleteHandler@i2c1_master_example$F1693 *****************
 27509 ;; Defined at:
 27510 ;;		line 142 in file "mcc_generated_files/examples/i2c1_master_example.c"
 27511 ;; Parameters:    Size  Location     Type
 27512 ;;  ptr             1    8[COMMON] PTR void 
 27513 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27514 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27515 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27516 ;; Auto vars:     Size  Location     Type
 27517 ;;		None
 27518 ;; Return value:  Size  Location     Type
 27519 ;;                  1    wreg      enum E363
 27520 ;; Registers used:
 27521 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27522 ;; Tracked objects:
 27523 ;;		On entry : 0/0
 27524 ;;		On exit  : 0/0
 27525 ;;		Unchanged: 0/0
 27526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27527 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27530 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27531 ;;Total ram usage:        1 bytes
 27532 ;; Hardware stack levels used: 1
 27533 ;; Hardware stack levels required when called: 6
 27534 ;; This function calls:
 27535 ;;		_I2C1_SetBuffer
 27536 ;;		_I2C1_SetDataCompleteCallback
 27537 ;; This function is called by:
 27538 ;;		_I2C1_Read1ByteRegister
 27539 ;;		_I2C1_DO_TX
 27540 ;;		_I2C1_DO_RX
 27541 ;;		_I2C1_DO_TX_EMPTY
 27542 ;;		_I2C1_DO_ADDRESS_NACK
 27543 ;;		_I2C1_DO_RX_EMPTY
 27544 ;; This function uses a non-reentrant model
 27545 ;;
 27546                           
 27547     1143                     _rd1RegCompleteHandler@i2c1_master_example$F1693:	
 27548                           ;psect for function _rd1RegCompleteHandler@i2c1_master_example$F1693
 27549                           
 27550     1143                     l12636:	
 27551                           ;incstack = 0
 27552                           ; Regs used in _rd1RegCompleteHandler@i2c1_master_example$F1693: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 27553                           
 27554                           
 27555                           ;mcc_generated_files/examples/i2c1_master_example.c: 142: static i2c1_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 143: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 144:     I2C1_SetBuffer(ptr,1);
 27556     1143  0878               	movf	rd1RegCompleteHandler@i2c1_master_example$F1693@ptr,w
 27557     1144  00F1               	movwf	I2C1_SetBuffer@buffer
 27558     1145  01F2               	clrf	I2C1_SetBuffer@buffer+1
 27559     1146  3001               	movlw	1
 27560     1147  00F3               	movwf	I2C1_SetBuffer@bufferSize
 27561     1148  3000               	movlw	0
 27562     1149  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 27563     114A  3190  2093  3191   	fcall	_I2C1_SetBuffer
 27564     114D                     l12638:
 27565                           
 27566                           ;mcc_generated_files/examples/i2c1_master_example.c: 145:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 27567     114D  3000               	movlw	0
 27568     114E  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27569     114F  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27570     1150  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27571     1151  319F  27D4  3191   	fcall	_I2C1_SetDataCompleteCallback
 27572     1154                     l12640:
 27573                           
 27574                           ;mcc_generated_files/examples/i2c1_master_example.c: 146:     return I2C1_RESTART_READ;
 27575     1154  3002               	movlw	2
 27576     1155                     l1384:
 27577     1155  0008               	return
 27578     1156                     __end_of_rd1RegCompleteHandler@i2c1_master_example$F1693:
 27579                           
 27580                           	psect	text145
 27581     1340                     __ptext145:	
 27582 ;; *************** function _rdBlkRegCompleteHandler *****************
 27583 ;; Defined at:
 27584 ;;		line 185 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 27585 ;; Parameters:    Size  Location     Type
 27586 ;;  p               1    8[COMMON] PTR void 
 27587 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27588 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27589 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27590 ;; Auto vars:     Size  Location     Type
 27591 ;;		None
 27592 ;; Return value:  Size  Location     Type
 27593 ;;                  1    wreg      enum E363
 27594 ;; Registers used:
 27595 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27596 ;; Tracked objects:
 27597 ;;		On entry : 0/0
 27598 ;;		On exit  : 0/0
 27599 ;;		Unchanged: 0/0
 27600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27601 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27604 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27605 ;;Total ram usage:        1 bytes
 27606 ;; Hardware stack levels used: 1
 27607 ;; Hardware stack levels required when called: 6
 27608 ;; This function calls:
 27609 ;;		_I2C1_SetBuffer
 27610 ;;		_I2C1_SetDataCompleteCallback
 27611 ;; This function is called by:
 27612 ;;		_i2c_readDataBlock
 27613 ;;		_I2C1_DO_TX
 27614 ;;		_I2C1_DO_RX
 27615 ;;		_I2C1_DO_TX_EMPTY
 27616 ;;		_I2C1_DO_ADDRESS_NACK
 27617 ;;		_I2C1_DO_RX_EMPTY
 27618 ;; This function uses a non-reentrant model
 27619 ;;
 27620                           
 27621     1340                     _rdBlkRegCompleteHandler:	
 27622                           ;psect for function _rdBlkRegCompleteHandler
 27623                           
 27624     1340                     l12630:	
 27625                           ;incstack = 0
 27626                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 27627                           
 27628                           
 27629                           ;mcc_generated_files/drivers/i2c_simple_master.c: 185: static i2c1_operations_t rdBlkReg
      +                          CompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 186: {;mcc_gen
      +                          erated_files/drivers/i2c_simple_master.c: 187:     I2C1_SetBuffer(((buf_t *)p)->data,((b
      +                          uf_t*)p)->len);
 27630     1340  0878               	movf	rdBlkRegCompleteHandler@p,w
 27631     1341  3E02               	addlw	2
 27632     1342  0086               	movwf	6
 27633     1343  0187               	clrf	7
 27634     1344  3F40               	moviw [0]fsr1
 27635     1345  00F1               	movwf	I2C1_SetBuffer@buffer
 27636     1346  3F41               	moviw [1]fsr1
 27637     1347  00F2               	movwf	I2C1_SetBuffer@buffer+1
 27638     1348  0878               	movf	rdBlkRegCompleteHandler@p,w
 27639     1349  0086               	movwf	6
 27640     134A  0187               	clrf	7
 27641     134B  3F40               	moviw [0]fsr1
 27642     134C  00F3               	movwf	I2C1_SetBuffer@bufferSize
 27643     134D  3F41               	moviw [1]fsr1
 27644     134E  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 27645     134F  3190  2093  3193   	fcall	_I2C1_SetBuffer
 27646                           
 27647                           ;mcc_generated_files/drivers/i2c_simple_master.c: 188:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 27648     1352  3000               	movlw	0
 27649     1353  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27650     1354  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27651     1355  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27652     1356  319F  27D4  3193   	fcall	_I2C1_SetDataCompleteCallback
 27653     1359                     l12632:
 27654                           
 27655                           ;mcc_generated_files/drivers/i2c_simple_master.c: 189:     return I2C1_RESTART_READ;
 27656     1359  3002               	movlw	2
 27657     135A                     l561:
 27658     135A  0008               	return
 27659     135B                     __end_of_rdBlkRegCompleteHandler:
 27660                           
 27661                           	psect	text146
 27662     1130                     __ptext146:	
 27663 ;; *************** function _wr2RegCompleteHandler *****************
 27664 ;; Defined at:
 27665 ;;		line 151 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 27666 ;; Parameters:    Size  Location     Type
 27667 ;;  p               1    8[COMMON] PTR void 
 27668 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27669 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27670 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27671 ;; Auto vars:     Size  Location     Type
 27672 ;;		None
 27673 ;; Return value:  Size  Location     Type
 27674 ;;                  1    wreg      enum E363
 27675 ;; Registers used:
 27676 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27677 ;; Tracked objects:
 27678 ;;		On entry : 0/0
 27679 ;;		On exit  : 0/0
 27680 ;;		Unchanged: 0/0
 27681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27682 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27685 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27686 ;;Total ram usage:        1 bytes
 27687 ;; Hardware stack levels used: 1
 27688 ;; Hardware stack levels required when called: 6
 27689 ;; This function calls:
 27690 ;;		_I2C1_SetBuffer
 27691 ;;		_I2C1_SetDataCompleteCallback
 27692 ;; This function is called by:
 27693 ;;		_i2c_write2ByteRegister
 27694 ;;		_I2C1_DO_TX
 27695 ;;		_I2C1_DO_RX
 27696 ;;		_I2C1_DO_TX_EMPTY
 27697 ;;		_I2C1_DO_ADDRESS_NACK
 27698 ;;		_I2C1_DO_RX_EMPTY
 27699 ;; This function uses a non-reentrant model
 27700 ;;
 27701                           
 27702     1130                     _wr2RegCompleteHandler:	
 27703                           ;psect for function _wr2RegCompleteHandler
 27704                           
 27705     1130                     l12622:	
 27706                           ;incstack = 0
 27707                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 27708                           
 27709                           
 27710                           ;mcc_generated_files/drivers/i2c_simple_master.c: 151: static i2c1_operations_t wr2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 152: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 153:     I2C1_SetBuffer(p,2);
 27711     1130  0878               	movf	wr2RegCompleteHandler@p,w
 27712     1131  00F1               	movwf	I2C1_SetBuffer@buffer
 27713     1132  01F2               	clrf	I2C1_SetBuffer@buffer+1
 27714     1133  3002               	movlw	2
 27715     1134  00F3               	movwf	I2C1_SetBuffer@bufferSize
 27716     1135  3000               	movlw	0
 27717     1136  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 27718     1137  3190  2093  3191   	fcall	_I2C1_SetBuffer
 27719     113A                     l12624:
 27720                           
 27721                           ;mcc_generated_files/drivers/i2c_simple_master.c: 154:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 27722     113A  3000               	movlw	0
 27723     113B  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27724     113C  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27725     113D  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27726     113E  319F  27D4  3191   	fcall	_I2C1_SetDataCompleteCallback
 27727     1141                     l12626:
 27728                           
 27729                           ;mcc_generated_files/drivers/i2c_simple_master.c: 155:     return I2C1_CONTINUE;
 27730     1141  3004               	movlw	4
 27731     1142                     l549:
 27732     1142  0008               	return
 27733     1143                     __end_of_wr2RegCompleteHandler:
 27734                           
 27735                           	psect	text147
 27736     111D                     __ptext147:	
 27737 ;; *************** function _rd2RegCompleteHandler *****************
 27738 ;; Defined at:
 27739 ;;		line 119 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 27740 ;; Parameters:    Size  Location     Type
 27741 ;;  p               1    8[COMMON] PTR void 
 27742 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27743 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27744 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27745 ;; Auto vars:     Size  Location     Type
 27746 ;;		None
 27747 ;; Return value:  Size  Location     Type
 27748 ;;                  1    wreg      enum E363
 27749 ;; Registers used:
 27750 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27751 ;; Tracked objects:
 27752 ;;		On entry : 0/0
 27753 ;;		On exit  : 0/0
 27754 ;;		Unchanged: 0/0
 27755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27756 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27759 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27760 ;;Total ram usage:        1 bytes
 27761 ;; Hardware stack levels used: 1
 27762 ;; Hardware stack levels required when called: 6
 27763 ;; This function calls:
 27764 ;;		_I2C1_SetBuffer
 27765 ;;		_I2C1_SetDataCompleteCallback
 27766 ;; This function is called by:
 27767 ;;		_i2c_read2ByteRegister
 27768 ;;		_I2C1_DO_TX
 27769 ;;		_I2C1_DO_RX
 27770 ;;		_I2C1_DO_TX_EMPTY
 27771 ;;		_I2C1_DO_ADDRESS_NACK
 27772 ;;		_I2C1_DO_RX_EMPTY
 27773 ;; This function uses a non-reentrant model
 27774 ;;
 27775                           
 27776     111D                     _rd2RegCompleteHandler:	
 27777                           ;psect for function _rd2RegCompleteHandler
 27778                           
 27779     111D                     l12614:	
 27780                           ;incstack = 0
 27781                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 27782                           
 27783                           
 27784                           ;mcc_generated_files/drivers/i2c_simple_master.c: 119: static i2c1_operations_t rd2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 120: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 121:     I2C1_SetBuffer(p,2);
 27785     111D  0878               	movf	rd2RegCompleteHandler@p,w
 27786     111E  00F1               	movwf	I2C1_SetBuffer@buffer
 27787     111F  01F2               	clrf	I2C1_SetBuffer@buffer+1
 27788     1120  3002               	movlw	2
 27789     1121  00F3               	movwf	I2C1_SetBuffer@bufferSize
 27790     1122  3000               	movlw	0
 27791     1123  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 27792     1124  3190  2093  3191   	fcall	_I2C1_SetBuffer
 27793     1127                     l12616:
 27794                           
 27795                           ;mcc_generated_files/drivers/i2c_simple_master.c: 122:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 27796     1127  3000               	movlw	0
 27797     1128  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27798     1129  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27799     112A  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27800     112B  319F  27D4  3191   	fcall	_I2C1_SetDataCompleteCallback
 27801     112E                     l12618:
 27802                           
 27803                           ;mcc_generated_files/drivers/i2c_simple_master.c: 123:     return I2C1_RESTART_READ;
 27804     112E  3002               	movlw	2
 27805     112F                     l537:
 27806     112F  0008               	return
 27807     1130                     __end_of_rd2RegCompleteHandler:
 27808                           
 27809                           	psect	text148
 27810     110A                     __ptext148:	
 27811 ;; *************** function _rd1RegCompleteHandler *****************
 27812 ;; Defined at:
 27813 ;;		line 81 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 27814 ;; Parameters:    Size  Location     Type
 27815 ;;  p               1    8[COMMON] PTR void 
 27816 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27817 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27818 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27819 ;; Auto vars:     Size  Location     Type
 27820 ;;		None
 27821 ;; Return value:  Size  Location     Type
 27822 ;;                  1    wreg      enum E363
 27823 ;; Registers used:
 27824 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27825 ;; Tracked objects:
 27826 ;;		On entry : 0/0
 27827 ;;		On exit  : 0/0
 27828 ;;		Unchanged: 0/0
 27829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27830 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27833 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27834 ;;Total ram usage:        1 bytes
 27835 ;; Hardware stack levels used: 1
 27836 ;; Hardware stack levels required when called: 6
 27837 ;; This function calls:
 27838 ;;		_I2C1_SetBuffer
 27839 ;;		_I2C1_SetDataCompleteCallback
 27840 ;; This function is called by:
 27841 ;;		_i2c_read1ByteRegister
 27842 ;;		_I2C1_DO_TX
 27843 ;;		_I2C1_DO_RX
 27844 ;;		_I2C1_DO_TX_EMPTY
 27845 ;;		_I2C1_DO_ADDRESS_NACK
 27846 ;;		_I2C1_DO_RX_EMPTY
 27847 ;; This function uses a non-reentrant model
 27848 ;;
 27849                           
 27850     110A                     _rd1RegCompleteHandler:	
 27851                           ;psect for function _rd1RegCompleteHandler
 27852                           
 27853     110A                     l12606:	
 27854                           ;incstack = 0
 27855                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 27856                           
 27857                           
 27858                           ;mcc_generated_files/drivers/i2c_simple_master.c: 81: static i2c1_operations_t rd1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 82: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 83:     I2C1_SetBuffer(p,1);
 27859     110A  0878               	movf	rd1RegCompleteHandler@p,w
 27860     110B  00F1               	movwf	I2C1_SetBuffer@buffer
 27861     110C  01F2               	clrf	I2C1_SetBuffer@buffer+1
 27862     110D  3001               	movlw	1
 27863     110E  00F3               	movwf	I2C1_SetBuffer@bufferSize
 27864     110F  3000               	movlw	0
 27865     1110  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 27866     1111  3190  2093  3191   	fcall	_I2C1_SetBuffer
 27867     1114                     l12608:
 27868                           
 27869                           ;mcc_generated_files/drivers/i2c_simple_master.c: 84:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 27870     1114  3000               	movlw	0
 27871     1115  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27872     1116  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27873     1117  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27874     1118  319F  27D4  3191   	fcall	_I2C1_SetDataCompleteCallback
 27875     111B                     l12610:
 27876                           
 27877                           ;mcc_generated_files/drivers/i2c_simple_master.c: 85:     return I2C1_RESTART_READ;
 27878     111B  3002               	movlw	2
 27879     111C                     l522:
 27880     111C  0008               	return
 27881     111D                     __end_of_rd1RegCompleteHandler:
 27882                           
 27883                           	psect	text149
 27884     10F7                     __ptext149:	
 27885 ;; *************** function _wr1RegCompleteHandler *****************
 27886 ;; Defined at:
 27887 ;;		line 34 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 27888 ;; Parameters:    Size  Location     Type
 27889 ;;  p               1    8[COMMON] PTR void 
 27890 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27891 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27892 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27893 ;; Auto vars:     Size  Location     Type
 27894 ;;		None
 27895 ;; Return value:  Size  Location     Type
 27896 ;;                  1    wreg      enum E363
 27897 ;; Registers used:
 27898 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27899 ;; Tracked objects:
 27900 ;;		On entry : 0/0
 27901 ;;		On exit  : 0/0
 27902 ;;		Unchanged: 0/0
 27903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27904 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27907 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27908 ;;Total ram usage:        1 bytes
 27909 ;; Hardware stack levels used: 1
 27910 ;; Hardware stack levels required when called: 6
 27911 ;; This function calls:
 27912 ;;		_I2C1_SetBuffer
 27913 ;;		_I2C1_SetDataCompleteCallback
 27914 ;; This function is called by:
 27915 ;;		_i2c_write1ByteRegister
 27916 ;;		_I2C1_DO_TX
 27917 ;;		_I2C1_DO_RX
 27918 ;;		_I2C1_DO_TX_EMPTY
 27919 ;;		_I2C1_DO_ADDRESS_NACK
 27920 ;;		_I2C1_DO_RX_EMPTY
 27921 ;; This function uses a non-reentrant model
 27922 ;;
 27923                           
 27924     10F7                     _wr1RegCompleteHandler:	
 27925                           ;psect for function _wr1RegCompleteHandler
 27926                           
 27927     10F7                     l12598:	
 27928                           ;incstack = 0
 27929                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 27930                           
 27931                           
 27932                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34: static i2c1_operations_t wr1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 35: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 36:     I2C1_SetBuffer(p,1);
 27933     10F7  0878               	movf	wr1RegCompleteHandler@p,w
 27934     10F8  00F1               	movwf	I2C1_SetBuffer@buffer
 27935     10F9  01F2               	clrf	I2C1_SetBuffer@buffer+1
 27936     10FA  3001               	movlw	1
 27937     10FB  00F3               	movwf	I2C1_SetBuffer@bufferSize
 27938     10FC  3000               	movlw	0
 27939     10FD  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 27940     10FE  3190  2093  3190   	fcall	_I2C1_SetBuffer
 27941     1101                     l12600:
 27942                           
 27943                           ;mcc_generated_files/drivers/i2c_simple_master.c: 37:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 27944     1101  3000               	movlw	0
 27945     1102  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27946     1103  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27947     1104  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27948     1105  319F  27D4  3190   	fcall	_I2C1_SetDataCompleteCallback
 27949     1108                     l12602:
 27950                           
 27951                           ;mcc_generated_files/drivers/i2c_simple_master.c: 38:     return I2C1_CONTINUE;
 27952     1108  3004               	movlw	4
 27953     1109                     l501:
 27954     1109  0008               	return
 27955     110A                     __end_of_wr1RegCompleteHandler:
 27956                           
 27957                           	psect	text150
 27958     10E4                     __ptext150:	
 27959 ;; *************** function _wr2RegCompleteHandler@i2c1_master_example$F1716 *****************
 27960 ;; Defined at:
 27961 ;;		line 163 in file "mcc_generated_files/examples/i2c1_master_example.c"
 27962 ;; Parameters:    Size  Location     Type
 27963 ;;  ptr             1    8[COMMON] PTR void 
 27964 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27965 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27966 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27967 ;; Auto vars:     Size  Location     Type
 27968 ;;		None
 27969 ;; Return value:  Size  Location     Type
 27970 ;;                  1    wreg      enum E363
 27971 ;; Registers used:
 27972 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27973 ;; Tracked objects:
 27974 ;;		On entry : 0/0
 27975 ;;		On exit  : 0/0
 27976 ;;		Unchanged: 0/0
 27977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27978 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27981 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27982 ;;Total ram usage:        1 bytes
 27983 ;; Hardware stack levels used: 1
 27984 ;; Hardware stack levels required when called: 6
 27985 ;; This function calls:
 27986 ;;		_I2C1_SetBuffer
 27987 ;;		_I2C1_SetDataCompleteCallback
 27988 ;; This function is called by:
 27989 ;;		_I2C1_Write2ByteRegister
 27990 ;;		_I2C1_DO_TX
 27991 ;;		_I2C1_DO_RX
 27992 ;;		_I2C1_DO_TX_EMPTY
 27993 ;;		_I2C1_DO_ADDRESS_NACK
 27994 ;;		_I2C1_DO_RX_EMPTY
 27995 ;; This function uses a non-reentrant model
 27996 ;;
 27997                           
 27998     10E4                     _wr2RegCompleteHandler@i2c1_master_example$F1716:	
 27999                           ;psect for function _wr2RegCompleteHandler@i2c1_master_example$F1716
 28000                           
 28001     10E4                     l12660:	
 28002                           ;incstack = 0
 28003                           ; Regs used in _wr2RegCompleteHandler@i2c1_master_example$F1716: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 28004                           
 28005                           
 28006                           ;mcc_generated_files/examples/i2c1_master_example.c: 163: static i2c1_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 164: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 165:     I2C1_SetBuffer(ptr,2);
 28007     10E4  0878               	movf	wr2RegCompleteHandler@i2c1_master_example$F1716@ptr,w
 28008     10E5  00F1               	movwf	I2C1_SetBuffer@buffer
 28009     10E6  01F2               	clrf	I2C1_SetBuffer@buffer+1
 28010     10E7  3002               	movlw	2
 28011     10E8  00F3               	movwf	I2C1_SetBuffer@bufferSize
 28012     10E9  3000               	movlw	0
 28013     10EA  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 28014     10EB  3190  2093  3190   	fcall	_I2C1_SetBuffer
 28015     10EE                     l12662:
 28016                           
 28017                           ;mcc_generated_files/examples/i2c1_master_example.c: 166:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 28018     10EE  3000               	movlw	0
 28019     10EF  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 28020     10F0  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 28021     10F1  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 28022     10F2  319F  27D4  3190   	fcall	_I2C1_SetDataCompleteCallback
 28023     10F5                     l12664:
 28024                           
 28025                           ;mcc_generated_files/examples/i2c1_master_example.c: 167:     return I2C1_CONTINUE;
 28026     10F5  3004               	movlw	4
 28027     10F6                     l1393:
 28028     10F6  0008               	return
 28029     10F7                     __end_of_wr2RegCompleteHandler@i2c1_master_example$F1716:
 28030                           
 28031                           	psect	text151
 28032     1FD4                     __ptext151:	
 28033 ;; *************** function _I2C1_SetDataCompleteCallback *****************
 28034 ;; Defined at:
 28035 ;;		line 273 in file "mcc_generated_files/i2c1_master.c"
 28036 ;; Parameters:    Size  Location     Type
 28037 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 28038 ;;		 -> rdBlkRegCompleteHandler@i2c1_master_example$F1727(1), wr2RegCompleteHandler@i2c1_master_example$F1716(1), wr1Reg
      +CompleteHandler@i2c1_master_example$F1710(1), rd2RegCompleteHandler@i2c1_master_example$F1704(1), 
 28039 ;;		 -> rd1RegCompleteHandler@i2c1_master_example$F1693(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2Reg
      +CompleteHandler(1), 
 28040 ;;		 -> rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), NULL(1), 
 28041 ;;  ptr             1    7[COMMON] PTR void 
 28042 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 28043 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 28044 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 28045 ;; Auto vars:     Size  Location     Type
 28046 ;;		None
 28047 ;; Return value:  Size  Location     Type
 28048 ;;                  1    wreg      void 
 28049 ;; Registers used:
 28050 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 28051 ;; Tracked objects:
 28052 ;;		On entry : 0/0
 28053 ;;		On exit  : 0/0
 28054 ;;		Unchanged: 0/0
 28055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28056 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28059 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28060 ;;Total ram usage:        3 bytes
 28061 ;; Hardware stack levels used: 1
 28062 ;; Hardware stack levels required when called: 5
 28063 ;; This function calls:
 28064 ;;		_I2C1_SetCallback
 28065 ;; This function is called by:
 28066 ;;		_wr1RegCompleteHandler
 28067 ;;		_i2c_write1ByteRegister
 28068 ;;		_rd1RegCompleteHandler
 28069 ;;		_i2c_read1ByteRegister
 28070 ;;		_rd2RegCompleteHandler
 28071 ;;		_i2c_read2ByteRegister
 28072 ;;		_wr2RegCompleteHandler
 28073 ;;		_rdBlkRegCompleteHandler
 28074 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1693
 28075 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1704
 28076 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1710
 28077 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1716
 28078 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1727
 28079 ;;		_i2c_write2ByteRegister
 28080 ;;		_i2c_readDataBlock
 28081 ;;		_I2C1_Read1ByteRegister
 28082 ;;		_I2C1_Read2ByteRegister
 28083 ;;		_I2C1_Write1ByteRegister
 28084 ;;		_I2C1_Write2ByteRegister
 28085 ;;		_I2C1_ReadDataBlock
 28086 ;; This function uses a non-reentrant model
 28087 ;;
 28088                           
 28089     1FD4                     _I2C1_SetDataCompleteCallback:	
 28090                           ;psect for function _I2C1_SetDataCompleteCallback
 28091                           
 28092     1FD4                     l12590:	
 28093                           ;incstack = 0
 28094                           ; Regs used in _I2C1_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 28095                           
 28096                           
 28097                           ;mcc_generated_files/i2c1_master.c: 273: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 274: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 275:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 28098     1FD4  0876               	movf	I2C1_SetDataCompleteCallback@cb+1,w
 28099     1FD5  00F2               	movwf	I2C1_SetCallback@cb+1
 28100     1FD6  0875               	movf	I2C1_SetDataCompleteCallback@cb,w
 28101     1FD7  00F1               	movwf	I2C1_SetCallback@cb
 28102     1FD8  0877               	movf	I2C1_SetDataCompleteCallback@ptr,w
 28103     1FD9  00F3               	movwf	I2C1_SetCallback@ptr
 28104     1FDA  3000               	movlw	0
 28105     1FDB  3188  2001  319F   	fcall	_I2C1_SetCallback
 28106     1FDE                     l2426:
 28107     1FDE  0008               	return
 28108     1FDF                     __end_of_I2C1_SetDataCompleteCallback:
 28109                           
 28110                           	psect	text152
 28111     0801                     __ptext152:	
 28112 ;; *************** function _I2C1_SetCallback *****************
 28113 ;; Defined at:
 28114 ;;		line 298 in file "mcc_generated_files/i2c1_master.c"
 28115 ;; Parameters:    Size  Location     Type
 28116 ;;  idx             1    wreg     enum E12583
 28117 ;;  cb              2    1[COMMON] PTR FTN(PTR void ,)enum 
 28118 ;;		 -> rdBlkRegCompleteHandler@i2c1_master_example$F1727(1), wr2RegCompleteHandler@i2c1_master_example$F1716(1), wr1Reg
      +CompleteHandler@i2c1_master_example$F1710(1), rd2RegCompleteHandler@i2c1_master_example$F1704(1), 
 28119 ;;		 -> rd1RegCompleteHandler@i2c1_master_example$F1693(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2Reg
      +CompleteHandler(1), 
 28120 ;;		 -> rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), NULL(1), 
 28121 ;;  ptr             1    3[COMMON] PTR void 
 28122 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 28123 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 28124 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 28125 ;; Auto vars:     Size  Location     Type
 28126 ;;  idx             1    4[COMMON] enum E12583
 28127 ;; Return value:  Size  Location     Type
 28128 ;;                  1    wreg      void 
 28129 ;; Registers used:
 28130 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 28131 ;; Tracked objects:
 28132 ;;		On entry : 0/0
 28133 ;;		On exit  : 0/0
 28134 ;;		Unchanged: 0/0
 28135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28136 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28137 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28139 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28140 ;;Total ram usage:        4 bytes
 28141 ;; Hardware stack levels used: 1
 28142 ;; Hardware stack levels required when called: 4
 28143 ;; This function calls:
 28144 ;;		Nothing
 28145 ;; This function is called by:
 28146 ;;		_I2C1_SetDataCompleteCallback
 28147 ;;		_I2C1_SetAddressNackCallback
 28148 ;;		_I2C1_SetWriteCollisionCallback
 28149 ;;		_I2C1_SetDataNackCallback
 28150 ;;		_I2C1_SetTimeoutCallback
 28151 ;; This function uses a non-reentrant model
 28152 ;;
 28153                           
 28154     0801                     _I2C1_SetCallback:	
 28155                           ;psect for function _I2C1_SetCallback
 28156                           
 28157                           
 28158                           ;incstack = 0
 28159                           ; Regs used in _I2C1_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
 28160                           ;I2C1_SetCallback@idx stored from wreg
 28161     0801  00F4               	movwf	I2C1_SetCallback@idx
 28162     0802                     l12578:
 28163                           
 28164                           ;mcc_generated_files/i2c1_master.c: 298: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 299: {;mcc_gen
      +                          erated_files/i2c1_master.c: 300:     if(cb)
 28165     0802  0871               	movf	I2C1_SetCallback@cb,w
 28166     0803  0472               	iorwf	I2C1_SetCallback@cb+1,w
 28167     0804  1903               	btfsc	3,2
 28168     0805  2807               	goto	u9531
 28169     0806  2808               	goto	u9530
 28170     0807                     u9531:
 28171     0807  2817               	goto	l12582
 28172     0808                     u9530:
 28173     0808                     l12580:
 28174                           
 28175                           ;mcc_generated_files/i2c1_master.c: 301:     {;mcc_generated_files/i2c1_master.c: 302:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 28176     0808  3574               	lslf	I2C1_SetCallback@idx,w
 28177     0809  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 28178     080A  0086               	movwf	6
 28179     080B  0187               	clrf	7
 28180     080C  0871               	movf	I2C1_SetCallback@cb,w
 28181     080D  3FC0               	movwi [0]fsr1
 28182     080E  0872               	movf	I2C1_SetCallback@cb+1,w
 28183     080F  3FC1               	movwi [1]fsr1
 28184                           
 28185                           ;mcc_generated_files/i2c1_master.c: 303:         I2C1_Status.callbackPayload[idx] = ptr;
 28186     0810  0874               	movf	I2C1_SetCallback@idx,w
 28187     0811  3EAC               	addlw	(low ((_I2C1_Status| 0+12)))& (0+255)
 28188     0812  0086               	movwf	6
 28189     0813  0187               	clrf	7
 28190     0814  0873               	movf	I2C1_SetCallback@ptr,w
 28191     0815  0081               	movwf	1
 28192                           
 28193                           ;mcc_generated_files/i2c1_master.c: 304:     }
 28194     0816  2824               	goto	l2443
 28195     0817                     l12582:
 28196                           
 28197                           ;mcc_generated_files/i2c1_master.c: 306:     {;mcc_generated_files/i2c1_master.c: 307:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 28198     0817  3574               	lslf	I2C1_SetCallback@idx,w
 28199     0818  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 28200     0819  0086               	movwf	6
 28201     081A  0187               	clrf	7
 28202     081B  306D               	movlw	low _I2C1_CallbackReturnStop
 28203     081C  3FC0               	movwi [0]fsr1
 28204     081D  301E               	movlw	high _I2C1_CallbackReturnStop
 28205     081E  3FC1               	movwi [1]fsr1
 28206                           
 28207                           ;mcc_generated_files/i2c1_master.c: 308:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 28208     081F  0874               	movf	I2C1_SetCallback@idx,w
 28209     0820  3EAC               	addlw	(low ((_I2C1_Status| 0+12)))& (0+255)
 28210     0821  0086               	movwf	6
 28211     0822  0187               	clrf	7
 28212     0823  0181               	clrf	1
 28213     0824                     l2443:
 28214     0824  0008               	return
 28215     0825                     __end_of_I2C1_SetCallback:
 28216                           
 28217                           	psect	text153
 28218     1093                     __ptext153:	
 28219 ;; *************** function _I2C1_SetBuffer *****************
 28220 ;; Defined at:
 28221 ;;		line 263 in file "mcc_generated_files/i2c1_master.c"
 28222 ;; Parameters:    Size  Location     Type
 28223 ;;  buffer          2    1[COMMON] PTR void 
 28224 ;;		 -> I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteReg
      +ister@data(2), 
 28225 ;;		 -> I2C1_Write1ByteRegister@reg(1), I2C1_Write1ByteRegister@data(1), I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRe
      +gister@returnValue(2), 
 28226 ;;		 -> I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), RAM(8192), i2c_readDataBlock@reg(1), 
 28227 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg
      +(1), 
 28228 ;;		 -> i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegister@d2(1), i2c_write1ByteRegist
      +er@reg(1), 
 28229 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 28230 ;;  bufferSize      2    3[COMMON] unsigned int 
 28231 ;; Auto vars:     Size  Location     Type
 28232 ;;		None
 28233 ;; Return value:  Size  Location     Type
 28234 ;;                  1    wreg      void 
 28235 ;; Registers used:
 28236 ;;		wreg
 28237 ;; Tracked objects:
 28238 ;;		On entry : 0/0
 28239 ;;		On exit  : 0/0
 28240 ;;		Unchanged: 0/0
 28241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28242 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28245 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28246 ;;Total ram usage:        4 bytes
 28247 ;; Hardware stack levels used: 1
 28248 ;; Hardware stack levels required when called: 4
 28249 ;; This function calls:
 28250 ;;		Nothing
 28251 ;; This function is called by:
 28252 ;;		_wr1RegCompleteHandler
 28253 ;;		_i2c_write1ByteRegister
 28254 ;;		_rd1RegCompleteHandler
 28255 ;;		_i2c_read1ByteRegister
 28256 ;;		_rd2RegCompleteHandler
 28257 ;;		_i2c_read2ByteRegister
 28258 ;;		_wr2RegCompleteHandler
 28259 ;;		_rdBlkRegCompleteHandler
 28260 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1693
 28261 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1704
 28262 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1710
 28263 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1716
 28264 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1727
 28265 ;;		_i2c_writeNBytes
 28266 ;;		_i2c_write2ByteRegister
 28267 ;;		_i2c_readDataBlock
 28268 ;;		_i2c_readNBytes
 28269 ;;		_I2C1_Read1ByteRegister
 28270 ;;		_I2C1_Read2ByteRegister
 28271 ;;		_I2C1_Write1ByteRegister
 28272 ;;		_I2C1_Write2ByteRegister
 28273 ;;		_I2C1_WriteNBytes
 28274 ;;		_I2C1_ReadNBytes
 28275 ;;		_I2C1_ReadDataBlock
 28276 ;; This function uses a non-reentrant model
 28277 ;;
 28278                           
 28279     1093                     _I2C1_SetBuffer:	
 28280                           ;psect for function _I2C1_SetBuffer
 28281                           
 28282     1093                     l12584:	
 28283                           ;incstack = 0
 28284                           ; Regs used in _I2C1_SetBuffer: [wreg]
 28285                           
 28286                           
 28287                           ;mcc_generated_files/i2c1_master.c: 263: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 264: {;mcc_generated_files/i2c1_master.c: 265: 
      +                              if(I2C1_Status.bufferFree)
 28288     1093  0141               	movlb	1	; select bank1
 28289     1094  1DBD               	btfss	(_I2C1_Status^(0+128)+29),3
 28290     1095  2897               	goto	u9541
 28291     1096  2898               	goto	u9540
 28292     1097                     u9541:
 28293     1097  28A1               	goto	l2423
 28294     1098                     u9540:
 28295     1098                     l12586:
 28296                           
 28297                           ;mcc_generated_files/i2c1_master.c: 266:     {;mcc_generated_files/i2c1_master.c: 267:  
      +                                 I2C1_Status.data_ptr = buffer;
 28298     1098  0872               	movf	I2C1_SetBuffer@buffer+1,w
 28299     1099  00B8               	movwf	((low ((_I2C1_Status| 0+23))+1))^(0+128)
 28300     109A  0871               	movf	I2C1_SetBuffer@buffer,w
 28301     109B  00B7               	movwf	(low ((_I2C1_Status| 0+23)))^(0+128)
 28302                           
 28303                           ;mcc_generated_files/i2c1_master.c: 268:         I2C1_Status.data_length = bufferSize;
 28304     109C  0874               	movf	I2C1_SetBuffer@bufferSize+1,w
 28305     109D  00BA               	movwf	((_I2C1_Status+1)^(0+128)+25)
 28306     109E  0873               	movf	I2C1_SetBuffer@bufferSize,w
 28307     109F  00B9               	movwf	(_I2C1_Status^(0+128)+25)
 28308     10A0                     l12588:
 28309                           
 28310                           ;mcc_generated_files/i2c1_master.c: 269:         I2C1_Status.bufferFree = 0;
 28311     10A0  11BD               	bcf	(_I2C1_Status^(0+128)+29),3
 28312     10A1                     l2423:
 28313     10A1  0008               	return
 28314     10A2                     __end_of_I2C1_SetBuffer:
 28315                           
 28316                           	psect	text154
 28317     1E80                     __ptext154:	
 28318 ;; *************** function _I2C1_MasterStop *****************
 28319 ;; Defined at:
 28320 ;;		line 593 in file "mcc_generated_files/i2c1_master.c"
 28321 ;; Parameters:    Size  Location     Type
 28322 ;;		None
 28323 ;; Auto vars:     Size  Location     Type
 28324 ;;		None
 28325 ;; Return value:  Size  Location     Type
 28326 ;;                  1    wreg      void 
 28327 ;; Registers used:
 28328 ;;		None
 28329 ;; Tracked objects:
 28330 ;;		On entry : 0/0
 28331 ;;		On exit  : 0/0
 28332 ;;		Unchanged: 0/0
 28333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28338 ;;Total ram usage:        0 bytes
 28339 ;; Hardware stack levels used: 1
 28340 ;; Hardware stack levels required when called: 4
 28341 ;; This function calls:
 28342 ;;		Nothing
 28343 ;; This function is called by:
 28344 ;;		_I2C1_DO_SEND_STOP
 28345 ;; This function uses a non-reentrant model
 28346 ;;
 28347                           
 28348     1E80                     _I2C1_MasterStop:	
 28349                           ;psect for function _I2C1_MasterStop
 28350                           
 28351     1E80                     l12594:	
 28352                           ;incstack = 0
 28353                           ; Regs used in _I2C1_MasterStop: []
 28354                           
 28355                           
 28356                           ;mcc_generated_files/i2c1_master.c: 595:     SSP1CON2bits.PEN = 1;
 28357     1E80  0143               	movlb	3	; select bank3
 28358     1E81  1511               	bsf	17,2	;volatile
 28359     1E82                     l2589:
 28360     1E82  0008               	return
 28361     1E83                     __end_of_I2C1_MasterStop:
 28362                           
 28363                           	psect	text155
 28364     1E7D                     __ptext155:	
 28365 ;; *************** function _I2C1_MasterEnableRestart *****************
 28366 ;; Defined at:
 28367 ;;		line 573 in file "mcc_generated_files/i2c1_master.c"
 28368 ;; Parameters:    Size  Location     Type
 28369 ;;		None
 28370 ;; Auto vars:     Size  Location     Type
 28371 ;;		None
 28372 ;; Return value:  Size  Location     Type
 28373 ;;                  1    wreg      void 
 28374 ;; Registers used:
 28375 ;;		None
 28376 ;; Tracked objects:
 28377 ;;		On entry : 0/0
 28378 ;;		On exit  : 0/0
 28379 ;;		Unchanged: 0/0
 28380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28385 ;;Total ram usage:        0 bytes
 28386 ;; Hardware stack levels used: 1
 28387 ;; Hardware stack levels required when called: 4
 28388 ;; This function calls:
 28389 ;;		Nothing
 28390 ;; This function is called by:
 28391 ;;		_I2C1_DO_SEND_RESTART_READ
 28392 ;;		_I2C1_DO_SEND_RESTART_WRITE
 28393 ;;		_I2C1_DO_SEND_RESTART
 28394 ;;		_I2C1_DO_RX_EMPTY
 28395 ;; This function uses a non-reentrant model
 28396 ;;
 28397                           
 28398     1E7D                     _I2C1_MasterEnableRestart:	
 28399                           ;psect for function _I2C1_MasterEnableRestart
 28400                           
 28401     1E7D                     l12592:	
 28402                           ;incstack = 0
 28403                           ; Regs used in _I2C1_MasterEnableRestart: []
 28404                           
 28405                           
 28406                           ;mcc_generated_files/i2c1_master.c: 575:     SSP1CON2bits.RSEN = 1;
 28407     1E7D  0143               	movlb	3	; select bank3
 28408     1E7E  1491               	bsf	17,1	;volatile
 28409     1E7F                     l2577:
 28410     1E7F  0008               	return
 28411     1E80                     __end_of_I2C1_MasterEnableRestart:
 28412                           
 28413                           	psect	text156
 28414     1E7A                     __ptext156:	
 28415 ;; *************** function _I2C1_MasterStart *****************
 28416 ;; Defined at:
 28417 ;;		line 588 in file "mcc_generated_files/i2c1_master.c"
 28418 ;; Parameters:    Size  Location     Type
 28419 ;;		None
 28420 ;; Auto vars:     Size  Location     Type
 28421 ;;		None
 28422 ;; Return value:  Size  Location     Type
 28423 ;;                  1    wreg      void 
 28424 ;; Registers used:
 28425 ;;		None
 28426 ;; Tracked objects:
 28427 ;;		On entry : 0/0
 28428 ;;		On exit  : 0/0
 28429 ;;		Unchanged: 0/0
 28430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28435 ;;Total ram usage:        0 bytes
 28436 ;; Hardware stack levels used: 1
 28437 ;; Hardware stack levels required when called: 4
 28438 ;; This function calls:
 28439 ;;		Nothing
 28440 ;; This function is called by:
 28441 ;;		_I2C1_MasterOperation
 28442 ;; This function uses a non-reentrant model
 28443 ;;
 28444                           
 28445     1E7A                     _I2C1_MasterStart:	
 28446                           ;psect for function _I2C1_MasterStart
 28447                           
 28448     1E7A                     l12908:	
 28449                           ;incstack = 0
 28450                           ; Regs used in _I2C1_MasterStart: []
 28451                           
 28452                           
 28453                           ;mcc_generated_files/i2c1_master.c: 590:     SSP1CON2bits.SEN = 1;
 28454     1E7A  0143               	movlb	3	; select bank3
 28455     1E7B  1411               	bsf	17,0	;volatile
 28456     1E7C                     l2586:
 28457     1E7C  0008               	return
 28458     1E7D                     __end_of_I2C1_MasterStart:
 28459                           
 28460                           	psect	text157
 28461     12AB                     __ptext157:	
 28462 ;; *************** function _I2C1_Close *****************
 28463 ;; Defined at:
 28464 ;;		line 209 in file "mcc_generated_files/i2c1_master.c"
 28465 ;; Parameters:    Size  Location     Type
 28466 ;;		None
 28467 ;; Auto vars:     Size  Location     Type
 28468 ;;  returnValue     1    1[COMMON] enum E358
 28469 ;; Return value:  Size  Location     Type
 28470 ;;                  1    wreg      enum E358
 28471 ;; Registers used:
 28472 ;;		wreg, status,2, status,0, pclath, cstack
 28473 ;; Tracked objects:
 28474 ;;		On entry : 0/0
 28475 ;;		On exit  : 0/0
 28476 ;;		Unchanged: 0/0
 28477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28479 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28481 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28482 ;;Total ram usage:        1 bytes
 28483 ;; Hardware stack levels used: 1
 28484 ;; Hardware stack levels required when called: 5
 28485 ;; This function calls:
 28486 ;;		_I2C1_MasterClearIrq
 28487 ;;		_I2C1_MasterClose
 28488 ;;		_I2C1_MasterDisableIrq
 28489 ;; This function is called by:
 28490 ;;		_i2c_write1ByteRegister
 28491 ;;		_i2c_read1ByteRegister
 28492 ;;		_i2c_read2ByteRegister
 28493 ;;		_i2c_writeNBytes
 28494 ;;		_i2c_write2ByteRegister
 28495 ;;		_i2c_readDataBlock
 28496 ;;		_i2c_readNBytes
 28497 ;;		_I2C1_Read1ByteRegister
 28498 ;;		_I2C1_Read2ByteRegister
 28499 ;;		_I2C1_Write1ByteRegister
 28500 ;;		_I2C1_Write2ByteRegister
 28501 ;;		_I2C1_WriteNBytes
 28502 ;;		_I2C1_ReadNBytes
 28503 ;;		_I2C1_ReadDataBlock
 28504 ;; This function uses a non-reentrant model
 28505 ;;
 28506                           
 28507     12AB                     _I2C1_Close:	
 28508                           ;psect for function _I2C1_Close
 28509                           
 28510     12AB                     l13080:	
 28511                           ;incstack = 0
 28512                           ; Regs used in _I2C1_Close: [wreg+status,2+status,0+pclath+cstack]
 28513                           
 28514                           
 28515                           ;mcc_generated_files/i2c1_master.c: 211:     i2c1_error_t returnValue = I2C1_BUSY;
 28516     12AB  01F1               	clrf	I2C1_Close@returnValue
 28517     12AC  0AF1               	incf	I2C1_Close@returnValue,f
 28518                           
 28519                           ;mcc_generated_files/i2c1_master.c: 212:     if(!I2C1_Status.busy)
 28520     12AD  0141               	movlb	1	; select bank1
 28521     12AE  18BD               	btfsc	(_I2C1_Status^(0+128)+29),1
 28522     12AF  2AB1               	goto	u9761
 28523     12B0  2AB2               	goto	u9760
 28524     12B1                     u9761:
 28525     12B1  2AC1               	goto	l13094
 28526     12B2                     u9760:
 28527     12B2                     l13082:
 28528                           
 28529                           ;mcc_generated_files/i2c1_master.c: 213:     {;mcc_generated_files/i2c1_master.c: 214:  
      +                                 I2C1_Status.inUse = 0;
 28530     12B2  113D               	bcf	(_I2C1_Status^(0+128)+29),2
 28531     12B3                     l13084:
 28532                           
 28533                           ;mcc_generated_files/i2c1_master.c: 215:         I2C1_Status.address = 0xff;
 28534     12B3  30FF               	movlw	255
 28535     12B4  00B6               	movwf	(_I2C1_Status^(0+128)+22)
 28536     12B5                     l13086:
 28537                           
 28538                           ;mcc_generated_files/i2c1_master.c: 216:         I2C1_MasterClearIrq();
 28539     12B5  319E  2671  3192   	fcall	_I2C1_MasterClearIrq
 28540     12B8                     l13088:
 28541                           
 28542                           ;mcc_generated_files/i2c1_master.c: 217:         I2C1_MasterDisableIrq();
 28543     12B8  319E  2677  3192   	fcall	_I2C1_MasterDisableIrq
 28544     12BB                     l13090:
 28545                           
 28546                           ;mcc_generated_files/i2c1_master.c: 218:         I2C1_MasterClose();
 28547     12BB  319E  2674  3192   	fcall	_I2C1_MasterClose
 28548     12BE                     l13092:
 28549                           
 28550                           ;mcc_generated_files/i2c1_master.c: 219:         returnValue = I2C1_Status.error;
 28551     12BE  0141               	movlb	1	; select bank1
 28552     12BF  083C               	movf	(_I2C1_Status^(0+128)+28),w
 28553     12C0  00F1               	movwf	I2C1_Close@returnValue
 28554     12C1                     l13094:
 28555                           
 28556                           ;mcc_generated_files/i2c1_master.c: 221:     return returnValue;
 28557     12C1  0871               	movf	I2C1_Close@returnValue,w
 28558     12C2                     l2404:
 28559     12C2  0008               	return
 28560     12C3                     __end_of_I2C1_Close:
 28561                           
 28562                           	psect	text158
 28563     1E77                     __ptext158:	
 28564 ;; *************** function _I2C1_MasterDisableIrq *****************
 28565 ;; Defined at:
 28566 ;;		line 635 in file "mcc_generated_files/i2c1_master.c"
 28567 ;; Parameters:    Size  Location     Type
 28568 ;;		None
 28569 ;; Auto vars:     Size  Location     Type
 28570 ;;		None
 28571 ;; Return value:  Size  Location     Type
 28572 ;;                  1    wreg      void 
 28573 ;; Registers used:
 28574 ;;		None
 28575 ;; Tracked objects:
 28576 ;;		On entry : 0/0
 28577 ;;		On exit  : 0/0
 28578 ;;		Unchanged: 0/0
 28579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28584 ;;Total ram usage:        0 bytes
 28585 ;; Hardware stack levels used: 1
 28586 ;; Hardware stack levels required when called: 4
 28587 ;; This function calls:
 28588 ;;		Nothing
 28589 ;; This function is called by:
 28590 ;;		_I2C1_Close
 28591 ;;		_I2C1_SetTimeOut
 28592 ;; This function uses a non-reentrant model
 28593 ;;
 28594                           
 28595     1E77                     _I2C1_MasterDisableIrq:	
 28596                           ;psect for function _I2C1_MasterDisableIrq
 28597                           
 28598     1E77                     l13018:	
 28599                           ;incstack = 0
 28600                           ; Regs used in _I2C1_MasterDisableIrq: []
 28601                           
 28602                           
 28603                           ;mcc_generated_files/i2c1_master.c: 637:     PIE3bits.SSP1IE = 0;
 28604     1E77  014E               	movlb	14	; select bank14
 28605     1E78  1019               	bcf	25,0	;volatile
 28606     1E79                     l2613:
 28607     1E79  0008               	return
 28608     1E7A                     __end_of_I2C1_MasterDisableIrq:
 28609                           
 28610                           	psect	text159
 28611     1E74                     __ptext159:	
 28612 ;; *************** function _I2C1_MasterClose *****************
 28613 ;; Defined at:
 28614 ;;		line 557 in file "mcc_generated_files/i2c1_master.c"
 28615 ;; Parameters:    Size  Location     Type
 28616 ;;		None
 28617 ;; Auto vars:     Size  Location     Type
 28618 ;;		None
 28619 ;; Return value:  Size  Location     Type
 28620 ;;                  1    wreg      void 
 28621 ;; Registers used:
 28622 ;;		None
 28623 ;; Tracked objects:
 28624 ;;		On entry : 0/0
 28625 ;;		On exit  : 0/0
 28626 ;;		Unchanged: 0/0
 28627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28632 ;;Total ram usage:        0 bytes
 28633 ;; Hardware stack levels used: 1
 28634 ;; Hardware stack levels required when called: 4
 28635 ;; This function calls:
 28636 ;;		Nothing
 28637 ;; This function is called by:
 28638 ;;		_I2C1_Close
 28639 ;; This function uses a non-reentrant model
 28640 ;;
 28641                           
 28642     1E74                     _I2C1_MasterClose:	
 28643                           ;psect for function _I2C1_MasterClose
 28644                           
 28645     1E74                     l13020:	
 28646                           ;incstack = 0
 28647                           ; Regs used in _I2C1_MasterClose: []
 28648                           
 28649                           
 28650                           ;mcc_generated_files/i2c1_master.c: 560:     SSP1CON1bits.SSPEN = 0;
 28651     1E74  0143               	movlb	3	; select bank3
 28652     1E75  1290               	bcf	16,5	;volatile
 28653     1E76                     l2568:
 28654     1E76  0008               	return
 28655     1E77                     __end_of_I2C1_MasterClose:
 28656                           
 28657                           	psect	text160
 28658     1E71                     __ptext160:	
 28659 ;; *************** function _I2C1_MasterClearIrq *****************
 28660 ;; Defined at:
 28661 ;;		line 640 in file "mcc_generated_files/i2c1_master.c"
 28662 ;; Parameters:    Size  Location     Type
 28663 ;;		None
 28664 ;; Auto vars:     Size  Location     Type
 28665 ;;		None
 28666 ;; Return value:  Size  Location     Type
 28667 ;;                  1    wreg      void 
 28668 ;; Registers used:
 28669 ;;		None
 28670 ;; Tracked objects:
 28671 ;;		On entry : 0/0
 28672 ;;		On exit  : 0/0
 28673 ;;		Unchanged: 0/0
 28674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28679 ;;Total ram usage:        0 bytes
 28680 ;; Hardware stack levels used: 1
 28681 ;; Hardware stack levels required when called: 4
 28682 ;; This function calls:
 28683 ;;		Nothing
 28684 ;; This function is called by:
 28685 ;;		_I2C1_Open
 28686 ;;		_I2C1_Close
 28687 ;;		_I2C1_MasterFsm
 28688 ;; This function uses a non-reentrant model
 28689 ;;
 28690                           
 28691     1E71                     _I2C1_MasterClearIrq:	
 28692                           ;psect for function _I2C1_MasterClearIrq
 28693                           
 28694     1E71                     l12734:	
 28695                           ;incstack = 0
 28696                           ; Regs used in _I2C1_MasterClearIrq: []
 28697                           
 28698                           
 28699                           ;mcc_generated_files/i2c1_master.c: 642:     PIR3bits.SSP1IF = 0;
 28700     1E71  014E               	movlb	14	; select bank14
 28701     1E72  100F               	bcf	15,0	;volatile
 28702     1E73                     l2616:
 28703     1E73  0008               	return
 28704     1E74                     __end_of_I2C1_MasterClearIrq:
 28705                           
 28706                           	psect	intentry
 28707     0004                     __pintentry:	
 28708 ;; *************** function _INTERRUPT_InterruptManager *****************
 28709 ;; Defined at:
 28710 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 28711 ;; Parameters:    Size  Location     Type
 28712 ;;		None
 28713 ;; Auto vars:     Size  Location     Type
 28714 ;;		None
 28715 ;; Return value:  Size  Location     Type
 28716 ;;                  1    wreg      void 
 28717 ;; Registers used:
 28718 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 28719 ;; Tracked objects:
 28720 ;;		On entry : 0/0
 28721 ;;		On exit  : 0/0
 28722 ;;		Unchanged: 0/0
 28723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28728 ;;Total ram usage:        0 bytes
 28729 ;; Hardware stack levels used: 1
 28730 ;; Hardware stack levels required when called: 3
 28731 ;; This function calls:
 28732 ;;		NULL
 28733 ;;		_EUSART1_Receive_ISR
 28734 ;;		_EUSART1_Transmit_ISR
 28735 ;;		_EUSART2_Receive_ISR
 28736 ;;		_EUSART2_Transmit_ISR
 28737 ;;		_PIN_MANAGER_IOC
 28738 ;; This function is called by:
 28739 ;;		Interrupt level 1
 28740 ;; This function uses a non-reentrant model
 28741 ;;
 28742                           
 28743     0004                     _INTERRUPT_InterruptManager:
 28744                           
 28745                           ;incstack = 0
 28746 ;; hardware stack exceeded
 28747     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 28748                           
 28749                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 28750     0005  3180               	pagesel	$
 28751     0006                     i1l12318:
 28752                           
 28753                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.IOCIE == 1 && PIR0bits.IOC
      +                          IF == 1)
 28754     0006  014E               	movlb	14	; select bank14
 28755     0007  1E16               	btfss	22,4	;volatile
 28756     0008  280A               	goto	u932_21
 28757     0009  280B               	goto	u932_20
 28758     000A                     u932_21:
 28759     000A  2813               	goto	i1l1949
 28760     000B                     u932_20:
 28761     000B                     i1l12320:
 28762     000B  1E0C               	btfss	12,4	;volatile
 28763     000C  280E               	goto	u933_21
 28764     000D  280F               	goto	u933_20
 28765     000E                     u933_21:
 28766     000E  2813               	goto	i1l1949
 28767     000F                     u933_20:
 28768     000F                     i1l12322:
 28769                           
 28770                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
 28771     000F  319F  2775  3180   	fcall	_PIN_MANAGER_IOC
 28772                           
 28773                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 28774     0012  2853               	goto	i1l1961
 28775     0013                     i1l1949:	
 28776                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 28777                           
 28778     0013  1F0B               	btfss	11,6	;volatile
 28779     0014  2816               	goto	u934_21
 28780     0015  2817               	goto	u934_20
 28781     0016                     u934_21:
 28782     0016  2853               	goto	i1l1961
 28783     0017                     u934_20:
 28784     0017                     i1l12324:
 28785                           
 28786                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 28787     0017  1F19               	btfss	25,6	;volatile
 28788     0018  281A               	goto	u935_21
 28789     0019  281B               	goto	u935_20
 28790     001A                     u935_21:
 28791     001A  2826               	goto	i1l1952
 28792     001B                     u935_20:
 28793     001B                     i1l12326:
 28794     001B  1F0F               	btfss	15,6	;volatile
 28795     001C  281E               	goto	u936_21
 28796     001D  281F               	goto	u936_20
 28797     001E                     u936_21:
 28798     001E  2826               	goto	i1l1952
 28799     001F                     u936_20:
 28800     001F                     i1l12328:
 28801                           
 28802                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART2_TxDefaultInterruptHandler();
 28803     001F  0141               	movlb	1	; select bank1
 28804     0020  086D               	movf	(_EUSART2_TxDefaultInterruptHandler+1)^(0+128),w
 28805     0021  008A               	movwf	10
 28806     0022  086C               	movf	_EUSART2_TxDefaultInterruptHandler^(0+128),w
 28807     0023  000A               	callw
 28808     0024  3180               	pagesel	$
 28809                           
 28810                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 28811     0025  2853               	goto	i1l1961
 28812     0026                     i1l1952:	
 28813                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.RC2IE == 1 && PIR
      +                          3bits.RC2IF == 1)
 28814                           
 28815     0026  1F99               	btfss	25,7	;volatile
 28816     0027  2829               	goto	u937_21
 28817     0028  282A               	goto	u937_20
 28818     0029                     u937_21:
 28819     0029  2835               	goto	i1l1954
 28820     002A                     u937_20:
 28821     002A                     i1l12330:
 28822     002A  1F8F               	btfss	15,7	;volatile
 28823     002B  282D               	goto	u938_21
 28824     002C  282E               	goto	u938_20
 28825     002D                     u938_21:
 28826     002D  2835               	goto	i1l1954
 28827     002E                     u938_20:
 28828     002E                     i1l12332:
 28829                           
 28830                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             EUSART2_RxDefaultInterruptHandler();
 28831     002E  0142               	movlb	2	; select bank2
 28832     002F  0865               	movf	(_EUSART2_RxDefaultInterruptHandler+1)^(0+256),w
 28833     0030  008A               	movwf	10
 28834     0031  0864               	movf	_EUSART2_RxDefaultInterruptHandler^(0+256),w
 28835     0032  000A               	callw
 28836     0033  3180               	pagesel	$
 28837                           
 28838                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 28839     0034  2853               	goto	i1l1961
 28840     0035                     i1l1954:	
 28841                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.TX1IE == 1 && PIR
      +                          3bits.TX1IF == 1)
 28842                           
 28843     0035  1E19               	btfss	25,4	;volatile
 28844     0036  2838               	goto	u939_21
 28845     0037  2839               	goto	u939_20
 28846     0038                     u939_21:
 28847     0038  2844               	goto	i1l1956
 28848     0039                     u939_20:
 28849     0039                     i1l12334:
 28850     0039  1E0F               	btfss	15,4	;volatile
 28851     003A  283C               	goto	u940_21
 28852     003B  283D               	goto	u940_20
 28853     003C                     u940_21:
 28854     003C  2844               	goto	i1l1956
 28855     003D                     u940_20:
 28856     003D                     i1l12336:
 28857                           
 28858                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             EUSART1_TxDefaultInterruptHandler();
 28859     003D  0142               	movlb	2	; select bank2
 28860     003E  085D               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+256),w
 28861     003F  008A               	movwf	10
 28862     0040  085C               	movf	_EUSART1_TxDefaultInterruptHandler^(0+256),w
 28863     0041  000A               	callw
 28864     0042  3180               	pagesel	$
 28865                           
 28866                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 28867     0043  2853               	goto	i1l1961
 28868     0044                     i1l1956:	
 28869                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 28870                           
 28871     0044  1E99               	btfss	25,5	;volatile
 28872     0045  2847               	goto	u941_21
 28873     0046  2848               	goto	u941_20
 28874     0047                     u941_21:
 28875     0047  2853               	goto	i1l1955
 28876     0048                     u941_20:
 28877     0048                     i1l12338:
 28878     0048  1E8F               	btfss	15,5	;volatile
 28879     0049  284B               	goto	u942_21
 28880     004A  284C               	goto	u942_20
 28881     004B                     u942_21:
 28882     004B  2853               	goto	i1l1955
 28883     004C                     u942_20:
 28884     004C                     i1l12340:
 28885                           
 28886                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART1_RxDefaultInterruptHandler();
 28887     004C  0142               	movlb	2	; select bank2
 28888     004D  085B               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256),w
 28889     004E  008A               	movwf	10
 28890     004F  085A               	movf	_EUSART1_RxDefaultInterruptHandler^(0+256),w
 28891     0050  000A               	callw
 28892     0051  3180               	pagesel	$
 28893                           
 28894                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 28895     0052  2853               	goto	i1l1961
 28896     0053                     i1l1955:
 28897     0053                     i1l1961:
 28898     0053  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 28899     0054  0009               	retfie
 28900     0055                     __end_of_INTERRUPT_InterruptManager:
 28901                           
 28902                           	psect	text162
 28903     1F75                     __ptext162:	
 28904 ;; *************** function _PIN_MANAGER_IOC *****************
 28905 ;; Defined at:
 28906 ;;		line 142 in file "mcc_generated_files/pin_manager.c"
 28907 ;; Parameters:    Size  Location     Type
 28908 ;;		None
 28909 ;; Auto vars:     Size  Location     Type
 28910 ;;		None
 28911 ;; Return value:  Size  Location     Type
 28912 ;;                  1    wreg      void 
 28913 ;; Registers used:
 28914 ;;		wreg, status,2, status,0, pclath, cstack
 28915 ;; Tracked objects:
 28916 ;;		On entry : 0/0
 28917 ;;		On exit  : 0/0
 28918 ;;		Unchanged: 0/0
 28919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28924 ;;Total ram usage:        0 bytes
 28925 ;; Hardware stack levels used: 1
 28926 ;; Hardware stack levels required when called: 2
 28927 ;; This function calls:
 28928 ;;		_IOCAF6_ISR
 28929 ;; This function is called by:
 28930 ;;		_INTERRUPT_InterruptManager
 28931 ;; This function uses a non-reentrant model
 28932 ;;
 28933                           
 28934     1F75                     _PIN_MANAGER_IOC:	
 28935                           ;psect for function _PIN_MANAGER_IOC
 28936                           
 28937     1F75                     i1l10402:	
 28938                           ;incstack = 0
 28939 ;; hardware stack exceeded
 28940                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
 28941                           
 28942                           
 28943                           ;mcc_generated_files/pin_manager.c: 145:     if(IOCAFbits.IOCAF6 == 1)
 28944     1F75  017E               	movlb	62	; select bank62
 28945     1F76  1F3F               	btfss	63,6	;volatile
 28946     1F77  2F79               	goto	u711_21
 28947     1F78  2F7A               	goto	u711_20
 28948     1F79                     u711_21:
 28949     1F79  2F7D               	goto	i1l2101
 28950     1F7A                     u711_20:
 28951     1F7A                     i1l10404:
 28952                           
 28953                           ;mcc_generated_files/pin_manager.c: 146:     {;mcc_generated_files/pin_manager.c: 147:  
      +                                 IOCAF6_ISR();
 28954     1F7A  3190  2084  319F   	fcall	_IOCAF6_ISR
 28955     1F7D                     i1l2101:
 28956     1F7D  0008               	return
 28957     1F7E                     __end_of_PIN_MANAGER_IOC:
 28958                           
 28959                           	psect	text163
 28960     1084                     __ptext163:	
 28961 ;; *************** function _IOCAF6_ISR *****************
 28962 ;; Defined at:
 28963 ;;		line 154 in file "mcc_generated_files/pin_manager.c"
 28964 ;; Parameters:    Size  Location     Type
 28965 ;;		None
 28966 ;; Auto vars:     Size  Location     Type
 28967 ;;		None
 28968 ;; Return value:  Size  Location     Type
 28969 ;;                  1    wreg      void 
 28970 ;; Registers used:
 28971 ;;		wreg, status,2, status,0, pclath, cstack
 28972 ;; Tracked objects:
 28973 ;;		On entry : 0/0
 28974 ;;		On exit  : 0/0
 28975 ;;		Unchanged: 0/0
 28976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28981 ;;Total ram usage:        0 bytes
 28982 ;; Hardware stack levels used: 1
 28983 ;; Hardware stack levels required when called: 1
 28984 ;; This function calls:
 28985 ;;		NULL
 28986 ;;		_IOCAF6_DefaultInterruptHandler
 28987 ;; This function is called by:
 28988 ;;		_PIN_MANAGER_IOC
 28989 ;; This function uses a non-reentrant model
 28990 ;;
 28991                           
 28992     1084                     _IOCAF6_ISR:	
 28993                           ;psect for function _IOCAF6_ISR
 28994                           
 28995     1084                     i1l9868:	
 28996                           ;incstack = 0
 28997 ;; hardware stack exceeded
 28998                           ; Regs used in _IOCAF6_ISR: [wreg+status,2+status,0+pclath+cstack]
 28999                           
 29000                           
 29001                           ;mcc_generated_files/pin_manager.c: 159:     if(IOCAF6_InterruptHandler)
 29002     1084  0141               	movlb	1	; select bank1
 29003     1085  086A               	movf	_IOCAF6_InterruptHandler^(0+128),w
 29004     1086  046B               	iorwf	(_IOCAF6_InterruptHandler+1)^(0+128),w
 29005     1087  1903               	btfsc	3,2
 29006     1088  288A               	goto	u668_21
 29007     1089  288B               	goto	u668_20
 29008     108A                     u668_21:
 29009     108A  2890               	goto	i1l9872
 29010     108B                     u668_20:
 29011     108B                     i1l9870:
 29012                           
 29013                           ;mcc_generated_files/pin_manager.c: 160:     {;mcc_generated_files/pin_manager.c: 161:  
      +                                 IOCAF6_InterruptHandler();
 29014     108B  086B               	movf	(_IOCAF6_InterruptHandler+1)^(0+128),w
 29015     108C  008A               	movwf	10
 29016     108D  086A               	movf	_IOCAF6_InterruptHandler^(0+128),w
 29017     108E  000A               	callw
 29018     108F  3190               	pagesel	$
 29019     1090                     i1l9872:
 29020                           
 29021                           ;mcc_generated_files/pin_manager.c: 163:     IOCAFbits.IOCAF6 = 0;
 29022     1090  017E               	movlb	62	; select bank62
 29023     1091  133F               	bcf	63,6	;volatile
 29024     1092                     i1l2105:
 29025     1092  0008               	return
 29026     1093                     __end_of_IOCAF6_ISR:
 29027                           
 29028                           	psect	text164
 29029     0800                     __ptext164:	
 29030 ;; *************** function _IOCAF6_DefaultInterruptHandler *****************
 29031 ;; Defined at:
 29032 ;;		line 176 in file "mcc_generated_files/pin_manager.c"
 29033 ;; Parameters:    Size  Location     Type
 29034 ;;		None
 29035 ;; Auto vars:     Size  Location     Type
 29036 ;;		None
 29037 ;; Return value:  Size  Location     Type
 29038 ;;                  1    wreg      void 
 29039 ;; Registers used:
 29040 ;;		None
 29041 ;; Tracked objects:
 29042 ;;		On entry : 0/0
 29043 ;;		On exit  : 0/0
 29044 ;;		Unchanged: 0/0
 29045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29050 ;;Total ram usage:        0 bytes
 29051 ;; Hardware stack levels used: 1
 29052 ;; This function calls:
 29053 ;;		Nothing
 29054 ;; This function is called by:
 29055 ;;		_PIN_MANAGER_Initialize
 29056 ;;		_IOCAF6_ISR
 29057 ;; This function uses a non-reentrant model
 29058 ;;
 29059                           
 29060     0800                     _IOCAF6_DefaultInterruptHandler:	
 29061                           ;psect for function _IOCAF6_DefaultInterruptHandler
 29062                           
 29063     0800                     i1l2111:	
 29064                           ;incstack = 0
 29065 ;; hardware stack exceeded
 29066                           ; Regs used in _IOCAF6_DefaultInterruptHandler: []
 29067                           
 29068     0800  0008               	return
 29069     0801                     __end_of_IOCAF6_DefaultInterruptHandler:
 29070                           
 29071                           	psect	text165
 29072     142A                     __ptext165:	
 29073 ;; *************** function _EUSART1_Transmit_ISR *****************
 29074 ;; Defined at:
 29075 ;;		line 206 in file "mcc_generated_files/eusart1.c"
 29076 ;; Parameters:    Size  Location     Type
 29077 ;;		None
 29078 ;; Auto vars:     Size  Location     Type
 29079 ;;		None
 29080 ;; Return value:  Size  Location     Type
 29081 ;;                  1    wreg      void 
 29082 ;; Registers used:
 29083 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 29084 ;; Tracked objects:
 29085 ;;		On entry : 0/0
 29086 ;;		On exit  : 0/0
 29087 ;;		Unchanged: 0/0
 29088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29091 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29092 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29093 ;;Total ram usage:        1 bytes
 29094 ;; Hardware stack levels used: 1
 29095 ;; This function calls:
 29096 ;;		Nothing
 29097 ;; This function is called by:
 29098 ;;		_EUSART1_Initialize
 29099 ;;		_INTERRUPT_InterruptManager
 29100 ;; This function uses a non-reentrant model
 29101 ;;
 29102                           
 29103     142A                     _EUSART1_Transmit_ISR:	
 29104                           ;psect for function _EUSART1_Transmit_ISR
 29105                           
 29106     142A                     i1l10370:	
 29107                           ;incstack = 0
 29108                           ; Regs used in _EUSART1_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 29109                           
 29110                           
 29111                           ;mcc_generated_files/eusart1.c: 210:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 29112     142A  3008               	movlw	8
 29113     142B  0140               	movlb	0	; select bank0
 29114     142C  0255               	subwf	_eusart1TxBufferRemaining,w	;volatile
 29115     142D  1803               	skipnc
 29116     142E  2C30               	goto	u706_21
 29117     142F  2C31               	goto	u706_20
 29118     1430                     u706_21:
 29119     1430  2C4A               	goto	i1l1886
 29120     1431                     u706_20:
 29121     1431                     i1l10372:
 29122                           
 29123                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 29124     1431  0856               	movf	_eusart1TxTail,w
 29125     1432  3E4C               	addlw	(low (_eusart1TxBuffer| (0+256)))& (0+255)
 29126     1433  0086               	movwf	6
 29127     1434  3001               	movlw	1	; select bank2/3
 29128     1435  0087               	movwf	7
 29129     1436  0801               	movf	1,w
 29130     1437  0142               	movlb	2	; select bank2
 29131     1438  009A               	movwf	26	;volatile
 29132     1439                     i1l10374:
 29133     1439  3001               	movlw	1
 29134     143A  00F0               	movwf	??_EUSART1_Transmit_ISR
 29135     143B  0870               	movf	??_EUSART1_Transmit_ISR,w
 29136     143C  0140               	movlb	0	; select bank0
 29137     143D  07D6               	addwf	_eusart1TxTail,f	;volatile
 29138     143E                     i1l10376:
 29139                           
 29140                           ;mcc_generated_files/eusart1.c: 213:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 29141     143E  3008               	movlw	8
 29142     143F  0256               	subwf	_eusart1TxTail,w	;volatile
 29143     1440  1C03               	skipc
 29144     1441  2C43               	goto	u707_21
 29145     1442  2C44               	goto	u707_20
 29146     1443                     u707_21:
 29147     1443  2C45               	goto	i1l10380
 29148     1444                     u707_20:
 29149     1444                     i1l10378:
 29150                           
 29151                           ;mcc_generated_files/eusart1.c: 214:         {;mcc_generated_files/eusart1.c: 215:      
      +                                 eusart1TxTail = 0;
 29152     1444  01D6               	clrf	_eusart1TxTail	;volatile
 29153     1445                     i1l10380:
 29154                           
 29155                           ;mcc_generated_files/eusart1.c: 217:         eusart1TxBufferRemaining++;
 29156     1445  3001               	movlw	1
 29157     1446  00F0               	movwf	??_EUSART1_Transmit_ISR
 29158     1447  0870               	movf	??_EUSART1_Transmit_ISR,w
 29159     1448  07D5               	addwf	_eusart1TxBufferRemaining,f	;volatile
 29160                           
 29161                           ;mcc_generated_files/eusart1.c: 218:     }
 29162     1449  2C4C               	goto	i1l1889
 29163     144A                     i1l1886:	
 29164                           ;mcc_generated_files/eusart1.c: 219:     else
 29165                           
 29166                           
 29167                           ;mcc_generated_files/eusart1.c: 220:     {;mcc_generated_files/eusart1.c: 221:         P
      +                          IE3bits.TX1IE = 0;
 29168     144A  014E               	movlb	14	; select bank14
 29169     144B  1219               	bcf	25,4	;volatile
 29170     144C                     i1l1889:
 29171     144C  0008               	return
 29172     144D                     __end_of_EUSART1_Transmit_ISR:
 29173                           
 29174                           	psect	text166
 29175     1408                     __ptext166:	
 29176 ;; *************** function _EUSART2_Transmit_ISR *****************
 29177 ;; Defined at:
 29178 ;;		line 197 in file "mcc_generated_files/eusart2.c"
 29179 ;; Parameters:    Size  Location     Type
 29180 ;;		None
 29181 ;; Auto vars:     Size  Location     Type
 29182 ;;		None
 29183 ;; Return value:  Size  Location     Type
 29184 ;;                  1    wreg      void 
 29185 ;; Registers used:
 29186 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 29187 ;; Tracked objects:
 29188 ;;		On entry : 0/0
 29189 ;;		On exit  : 0/0
 29190 ;;		Unchanged: 0/0
 29191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29194 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29195 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29196 ;;Total ram usage:        1 bytes
 29197 ;; Hardware stack levels used: 1
 29198 ;; This function calls:
 29199 ;;		Nothing
 29200 ;; This function is called by:
 29201 ;;		_EUSART2_Initialize
 29202 ;;		_INTERRUPT_InterruptManager
 29203 ;; This function uses a non-reentrant model
 29204 ;;
 29205                           
 29206     1408                     _EUSART2_Transmit_ISR:	
 29207                           ;psect for function _EUSART2_Transmit_ISR
 29208                           
 29209     1408                     i1l10338:	
 29210                           ;incstack = 0
 29211                           ; Regs used in _EUSART2_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 29212                           
 29213                           
 29214                           ;mcc_generated_files/eusart2.c: 201:     if(sizeof(eusart2TxBuffer) > eusart2TxBufferRem
      +                          aining)
 29215     1408  3008               	movlw	8
 29216     1409  0140               	movlb	0	; select bank0
 29217     140A  025A               	subwf	_eusart2TxBufferRemaining,w	;volatile
 29218     140B  1803               	skipnc
 29219     140C  2C0E               	goto	u701_21
 29220     140D  2C0F               	goto	u701_20
 29221     140E                     u701_21:
 29222     140E  2C27               	goto	i1l1736
 29223     140F                     u701_20:
 29224     140F                     i1l10340:
 29225                           
 29226                           ;mcc_generated_files/eusart2.c: 202:     {;mcc_generated_files/eusart2.c: 203:         T
      +                          X2REG = eusart2TxBuffer[eusart2TxTail++];
 29227     140F  085B               	movf	_eusart2TxTail,w
 29228     1410  3ED6               	addlw	(low (_eusart2TxBuffer| 0))& (0+255)
 29229     1411  0086               	movwf	6
 29230     1412  0187               	clrf	7
 29231     1413  0801               	movf	1,w
 29232     1414  0154               	movlb	20	; select bank20
 29233     1415  009A               	movwf	26	;volatile
 29234     1416                     i1l10342:
 29235     1416  3001               	movlw	1
 29236     1417  00F0               	movwf	??_EUSART2_Transmit_ISR
 29237     1418  0870               	movf	??_EUSART2_Transmit_ISR,w
 29238     1419  0140               	movlb	0	; select bank0
 29239     141A  07DB               	addwf	_eusart2TxTail,f	;volatile
 29240     141B                     i1l10344:
 29241                           
 29242                           ;mcc_generated_files/eusart2.c: 204:         if(sizeof(eusart2TxBuffer) <= eusart2TxTail
      +                          )
 29243     141B  3008               	movlw	8
 29244     141C  025B               	subwf	_eusart2TxTail,w	;volatile
 29245     141D  1C03               	skipc
 29246     141E  2C20               	goto	u702_21
 29247     141F  2C21               	goto	u702_20
 29248     1420                     u702_21:
 29249     1420  2C22               	goto	i1l10348
 29250     1421                     u702_20:
 29251     1421                     i1l10346:
 29252                           
 29253                           ;mcc_generated_files/eusart2.c: 205:         {;mcc_generated_files/eusart2.c: 206:      
      +                                 eusart2TxTail = 0;
 29254     1421  01DB               	clrf	_eusart2TxTail	;volatile
 29255     1422                     i1l10348:
 29256                           
 29257                           ;mcc_generated_files/eusart2.c: 208:         eusart2TxBufferRemaining++;
 29258     1422  3001               	movlw	1
 29259     1423  00F0               	movwf	??_EUSART2_Transmit_ISR
 29260     1424  0870               	movf	??_EUSART2_Transmit_ISR,w
 29261     1425  07DA               	addwf	_eusart2TxBufferRemaining,f	;volatile
 29262                           
 29263                           ;mcc_generated_files/eusart2.c: 209:     }
 29264     1426  2C29               	goto	i1l1739
 29265     1427                     i1l1736:	
 29266                           ;mcc_generated_files/eusart2.c: 210:     else
 29267                           
 29268                           
 29269                           ;mcc_generated_files/eusart2.c: 211:     {;mcc_generated_files/eusart2.c: 212:         P
      +                          IE3bits.TX2IE = 0;
 29270     1427  014E               	movlb	14	; select bank14
 29271     1428  1319               	bcf	25,6	;volatile
 29272     1429                     i1l1739:
 29273     1429  0008               	return
 29274     142A                     __end_of_EUSART2_Transmit_ISR:
 29275                           
 29276                           	psect	text167
 29277     08CF                     __ptext167:	
 29278 ;; *************** function _EUSART1_Receive_ISR *****************
 29279 ;; Defined at:
 29280 ;;		line 225 in file "mcc_generated_files/eusart1.c"
 29281 ;; Parameters:    Size  Location     Type
 29282 ;;		None
 29283 ;; Auto vars:     Size  Location     Type
 29284 ;;		None
 29285 ;; Return value:  Size  Location     Type
 29286 ;;                  1    wreg      void 
 29287 ;; Registers used:
 29288 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 29289 ;; Tracked objects:
 29290 ;;		On entry : 0/0
 29291 ;;		On exit  : 0/0
 29292 ;;		Unchanged: 0/0
 29293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29298 ;;Total ram usage:        0 bytes
 29299 ;; Hardware stack levels used: 1
 29300 ;; Hardware stack levels required when called: 2
 29301 ;; This function calls:
 29302 ;;		NULL
 29303 ;;		_EUSART1_DefaultErrorHandler
 29304 ;;		_EUSART1_DefaultFramingErrorHandler
 29305 ;;		_EUSART1_DefaultOverrunErrorHandler
 29306 ;;		_EUSART1_RxDataHandler
 29307 ;; This function is called by:
 29308 ;;		_EUSART1_Initialize
 29309 ;;		_INTERRUPT_InterruptManager
 29310 ;; This function uses a non-reentrant model
 29311 ;;
 29312                           
 29313     08CF                     _EUSART1_Receive_ISR:	
 29314                           ;psect for function _EUSART1_Receive_ISR
 29315                           
 29316     08CF                     i1l10382:	
 29317                           ;incstack = 0
 29318 ;; hardware stack exceeded
 29319                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 29320                           
 29321                           
 29322                           ;mcc_generated_files/eusart1.c: 228:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 29323     08CF  0140               	movlb	0	; select bank0
 29324     08D0  0854               	movf	_eusart1RxHead,w	;volatile
 29325     08D1  3EBE               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 29326     08D2  0086               	movwf	6
 29327     08D3  0187               	clrf	7
 29328     08D4  0181               	clrf	1
 29329     08D5                     i1l10384:
 29330                           
 29331                           ;mcc_generated_files/eusart1.c: 230:     if(RC1STAbits.FERR){
 29332     08D5  0142               	movlb	2	; select bank2
 29333     08D6  1D1D               	btfss	29,2	;volatile
 29334     08D7  28D9               	goto	u708_21
 29335     08D8  28DA               	goto	u708_20
 29336     08D9                     u708_21:
 29337     08D9  28E6               	goto	i1l10390
 29338     08DA                     u708_20:
 29339     08DA                     i1l10386:
 29340                           
 29341                           ;mcc_generated_files/eusart1.c: 231:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 29342     08DA  0140               	movlb	0	; select bank0
 29343     08DB  0854               	movf	_eusart1RxHead,w	;volatile
 29344     08DC  3EBE               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 29345     08DD  0086               	movwf	6
 29346     08DE  0187               	clrf	7
 29347     08DF  1481               	bsf	1,1
 29348     08E0                     i1l10388:
 29349                           
 29350                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_FramingErrorHandler();
 29351     08E0  0142               	movlb	2	; select bank2
 29352     08E1  0859               	movf	(_EUSART1_FramingErrorHandler+1)^(0+256),w
 29353     08E2  008A               	movwf	10
 29354     08E3  0858               	movf	_EUSART1_FramingErrorHandler^(0+256),w
 29355     08E4  000A               	callw
 29356     08E5  3188               	pagesel	$
 29357     08E6                     i1l10390:
 29358                           
 29359                           ;mcc_generated_files/eusart1.c: 235:     if(RC1STAbits.OERR){
 29360     08E6  0142               	movlb	2	; select bank2
 29361     08E7  1C9D               	btfss	29,1	;volatile
 29362     08E8  28EA               	goto	u709_21
 29363     08E9  28EB               	goto	u709_20
 29364     08EA                     u709_21:
 29365     08EA  28F7               	goto	i1l10396
 29366     08EB                     u709_20:
 29367     08EB                     i1l10392:
 29368                           
 29369                           ;mcc_generated_files/eusart1.c: 236:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 29370     08EB  0140               	movlb	0	; select bank0
 29371     08EC  0854               	movf	_eusart1RxHead,w	;volatile
 29372     08ED  3EBE               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 29373     08EE  0086               	movwf	6
 29374     08EF  0187               	clrf	7
 29375     08F0  1501               	bsf	1,2
 29376     08F1                     i1l10394:
 29377                           
 29378                           ;mcc_generated_files/eusart1.c: 237:         EUSART1_OverrunErrorHandler();
 29379     08F1  0142               	movlb	2	; select bank2
 29380     08F2  0857               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+256),w
 29381     08F3  008A               	movwf	10
 29382     08F4  0856               	movf	_EUSART1_OverrunErrorHandler^(0+256),w
 29383     08F5  000A               	callw
 29384     08F6  3188               	pagesel	$
 29385     08F7                     i1l10396:
 29386                           
 29387                           ;mcc_generated_files/eusart1.c: 240:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 29388     08F7  0140               	movlb	0	; select bank0
 29389     08F8  0854               	movf	_eusart1RxHead,w	;volatile
 29390     08F9  3EBE               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 29391     08FA  0086               	movwf	6
 29392     08FB  0187               	clrf	7
 29393     08FC  0801               	movf	1,w
 29394     08FD  1903               	btfsc	3,2
 29395     08FE  2900               	goto	u710_21
 29396     08FF  2901               	goto	u710_20
 29397     0900                     u710_21:
 29398     0900  2908               	goto	i1l10400
 29399     0901                     u710_20:
 29400     0901                     i1l10398:
 29401                           
 29402                           ;mcc_generated_files/eusart1.c: 241:         EUSART1_ErrorHandler();
 29403     0901  0142               	movlb	2	; select bank2
 29404     0902  0855               	movf	(_EUSART1_ErrorHandler+1)^(0+256),w
 29405     0903  008A               	movwf	10
 29406     0904  0854               	movf	_EUSART1_ErrorHandler^(0+256),w
 29407     0905  000A               	callw
 29408     0906  3188               	pagesel	$
 29409                           
 29410                           ;mcc_generated_files/eusart1.c: 242:     } else {
 29411     0907  290B               	goto	i1l1896
 29412     0908                     i1l10400:
 29413                           
 29414                           ;mcc_generated_files/eusart1.c: 243:         EUSART1_RxDataHandler();
 29415     0908  3193  2326  3188   	fcall	_EUSART1_RxDataHandler
 29416     090B                     i1l1896:
 29417     090B  0008               	return
 29418     090C                     __end_of_EUSART1_Receive_ISR:
 29419                           
 29420                           	psect	text168
 29421     085D                     __ptext168:	
 29422 ;; *************** function _EUSART2_Receive_ISR *****************
 29423 ;; Defined at:
 29424 ;;		line 216 in file "mcc_generated_files/eusart2.c"
 29425 ;; Parameters:    Size  Location     Type
 29426 ;;		None
 29427 ;; Auto vars:     Size  Location     Type
 29428 ;;		None
 29429 ;; Return value:  Size  Location     Type
 29430 ;;                  1    wreg      void 
 29431 ;; Registers used:
 29432 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 29433 ;; Tracked objects:
 29434 ;;		On entry : 0/0
 29435 ;;		On exit  : 0/0
 29436 ;;		Unchanged: 0/0
 29437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29442 ;;Total ram usage:        0 bytes
 29443 ;; Hardware stack levels used: 1
 29444 ;; Hardware stack levels required when called: 2
 29445 ;; This function calls:
 29446 ;;		NULL
 29447 ;;		_EUSART2_DefaultErrorHandler
 29448 ;;		_EUSART2_DefaultFramingErrorHandler
 29449 ;;		_EUSART2_DefaultOverrunErrorHandler
 29450 ;;		_EUSART2_RxDataHandler
 29451 ;; This function is called by:
 29452 ;;		_EUSART2_Initialize
 29453 ;;		_INTERRUPT_InterruptManager
 29454 ;; This function uses a non-reentrant model
 29455 ;;
 29456                           
 29457     085D                     _EUSART2_Receive_ISR:	
 29458                           ;psect for function _EUSART2_Receive_ISR
 29459                           
 29460     085D                     i1l10350:	
 29461                           ;incstack = 0
 29462 ;; hardware stack exceeded
 29463                           ; Regs used in _EUSART2_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 29464                           
 29465                           
 29466                           ;mcc_generated_files/eusart2.c: 219:     eusart2RxStatusBuffer[eusart2RxHead].status = 0
      +                          ;
 29467     085D  087C               	movf	_eusart2RxHead,w	;volatile
 29468     085E  3EC6               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 29469     085F  0086               	movwf	6
 29470     0860  0187               	clrf	7
 29471     0861  0181               	clrf	1
 29472     0862                     i1l10352:
 29473                           
 29474                           ;mcc_generated_files/eusart2.c: 221:     if(RC2STAbits.FERR){
 29475     0862  0154               	movlb	20	; select bank20
 29476     0863  1D1D               	btfss	29,2	;volatile
 29477     0864  2866               	goto	u703_21
 29478     0865  2867               	goto	u703_20
 29479     0866                     u703_21:
 29480     0866  2872               	goto	i1l10358
 29481     0867                     u703_20:
 29482     0867                     i1l10354:
 29483                           
 29484                           ;mcc_generated_files/eusart2.c: 222:         eusart2RxStatusBuffer[eusart2RxHead].ferr =
      +                           1;
 29485     0867  087C               	movf	_eusart2RxHead,w	;volatile
 29486     0868  3EC6               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 29487     0869  0086               	movwf	6
 29488     086A  0187               	clrf	7
 29489     086B  1481               	bsf	1,1
 29490     086C                     i1l10356:
 29491                           
 29492                           ;mcc_generated_files/eusart2.c: 223:         EUSART2_FramingErrorHandler();
 29493     086C  0142               	movlb	2	; select bank2
 29494     086D  0863               	movf	(_EUSART2_FramingErrorHandler+1)^(0+256),w
 29495     086E  008A               	movwf	10
 29496     086F  0862               	movf	_EUSART2_FramingErrorHandler^(0+256),w
 29497     0870  000A               	callw
 29498     0871  3188               	pagesel	$
 29499     0872                     i1l10358:
 29500                           
 29501                           ;mcc_generated_files/eusart2.c: 226:     if(RC2STAbits.OERR){
 29502     0872  0154               	movlb	20	; select bank20
 29503     0873  1C9D               	btfss	29,1	;volatile
 29504     0874  2876               	goto	u704_21
 29505     0875  2877               	goto	u704_20
 29506     0876                     u704_21:
 29507     0876  2882               	goto	i1l10364
 29508     0877                     u704_20:
 29509     0877                     i1l10360:
 29510                           
 29511                           ;mcc_generated_files/eusart2.c: 227:         eusart2RxStatusBuffer[eusart2RxHead].oerr =
      +                           1;
 29512     0877  087C               	movf	_eusart2RxHead,w	;volatile
 29513     0878  3EC6               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 29514     0879  0086               	movwf	6
 29515     087A  0187               	clrf	7
 29516     087B  1501               	bsf	1,2
 29517     087C                     i1l10362:
 29518                           
 29519                           ;mcc_generated_files/eusart2.c: 228:         EUSART2_OverrunErrorHandler();
 29520     087C  0142               	movlb	2	; select bank2
 29521     087D  0861               	movf	(_EUSART2_OverrunErrorHandler+1)^(0+256),w
 29522     087E  008A               	movwf	10
 29523     087F  0860               	movf	_EUSART2_OverrunErrorHandler^(0+256),w
 29524     0880  000A               	callw
 29525     0881  3188               	pagesel	$
 29526     0882                     i1l10364:
 29527                           
 29528                           ;mcc_generated_files/eusart2.c: 231:     if(eusart2RxStatusBuffer[eusart2RxHead].status)
      +                          {
 29529     0882  087C               	movf	_eusart2RxHead,w	;volatile
 29530     0883  3EC6               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 29531     0884  0086               	movwf	6
 29532     0885  0187               	clrf	7
 29533     0886  0801               	movf	1,w
 29534     0887  1903               	btfsc	3,2
 29535     0888  288A               	goto	u705_21
 29536     0889  288B               	goto	u705_20
 29537     088A                     u705_21:
 29538     088A  2892               	goto	i1l10368
 29539     088B                     u705_20:
 29540     088B                     i1l10366:
 29541                           
 29542                           ;mcc_generated_files/eusart2.c: 232:         EUSART2_ErrorHandler();
 29543     088B  0142               	movlb	2	; select bank2
 29544     088C  085F               	movf	(_EUSART2_ErrorHandler+1)^(0+256),w
 29545     088D  008A               	movwf	10
 29546     088E  085E               	movf	_EUSART2_ErrorHandler^(0+256),w
 29547     088F  000A               	callw
 29548     0890  3188               	pagesel	$
 29549                           
 29550                           ;mcc_generated_files/eusart2.c: 233:     } else {
 29551     0891  2895               	goto	i1l1746
 29552     0892                     i1l10368:
 29553                           
 29554                           ;mcc_generated_files/eusart2.c: 234:         EUSART2_RxDataHandler();
 29555     0892  3192  2293  3188   	fcall	_EUSART2_RxDataHandler
 29556     0895                     i1l1746:
 29557     0895  0008               	return
 29558     0896                     __end_of_EUSART2_Receive_ISR:
 29559                           
 29560                           	psect	text169
 29561     1E9B                     __ptext169:	
 29562 ;; *************** function _EUSART2_DefaultOverrunErrorHandler *****************
 29563 ;; Defined at:
 29564 ;;		line 252 in file "mcc_generated_files/eusart2.c"
 29565 ;; Parameters:    Size  Location     Type
 29566 ;;		None
 29567 ;; Auto vars:     Size  Location     Type
 29568 ;;		None
 29569 ;; Return value:  Size  Location     Type
 29570 ;;                  1    wreg      void 
 29571 ;; Registers used:
 29572 ;;		None
 29573 ;; Tracked objects:
 29574 ;;		On entry : 0/0
 29575 ;;		On exit  : 0/0
 29576 ;;		Unchanged: 0/0
 29577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29582 ;;Total ram usage:        0 bytes
 29583 ;; Hardware stack levels used: 1
 29584 ;; This function calls:
 29585 ;;		Nothing
 29586 ;; This function is called by:
 29587 ;;		_EUSART2_Initialize
 29588 ;;		_EUSART2_Receive_ISR
 29589 ;; This function uses a non-reentrant model
 29590 ;;
 29591                           
 29592     1E9B                     _EUSART2_DefaultOverrunErrorHandler:	
 29593                           ;psect for function _EUSART2_DefaultOverrunErrorHandler
 29594                           
 29595     1E9B                     i1l9738:	
 29596                           ;incstack = 0
 29597 ;; hardware stack exceeded
 29598                           ; Regs used in _EUSART2_DefaultOverrunErrorHandler: []
 29599                           
 29600                           
 29601                           ;mcc_generated_files/eusart2.c: 255:     RC2STAbits.CREN = 0;
 29602     1E9B  0154               	movlb	20	; select bank20
 29603     1E9C  121D               	bcf	29,4	;volatile
 29604                           
 29605                           ;mcc_generated_files/eusart2.c: 256:     RC2STAbits.CREN = 1;
 29606     1E9D  161D               	bsf	29,4	;volatile
 29607     1E9E                     i1l1756:
 29608     1E9E  0008               	return
 29609     1E9F                     __end_of_EUSART2_DefaultOverrunErrorHandler:
 29610                           
 29611                           	psect	text170
 29612     1E6C                     __ptext170:	
 29613 ;; *************** function _EUSART2_DefaultFramingErrorHandler *****************
 29614 ;; Defined at:
 29615 ;;		line 250 in file "mcc_generated_files/eusart2.c"
 29616 ;; Parameters:    Size  Location     Type
 29617 ;;		None
 29618 ;; Auto vars:     Size  Location     Type
 29619 ;;		None
 29620 ;; Return value:  Size  Location     Type
 29621 ;;                  1    wreg      void 
 29622 ;; Registers used:
 29623 ;;		None
 29624 ;; Tracked objects:
 29625 ;;		On entry : 0/0
 29626 ;;		On exit  : 0/0
 29627 ;;		Unchanged: 0/0
 29628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29633 ;;Total ram usage:        0 bytes
 29634 ;; Hardware stack levels used: 1
 29635 ;; This function calls:
 29636 ;;		Nothing
 29637 ;; This function is called by:
 29638 ;;		_EUSART2_Initialize
 29639 ;;		_EUSART2_Receive_ISR
 29640 ;; This function uses a non-reentrant model
 29641 ;;
 29642                           
 29643     1E6C                     _EUSART2_DefaultFramingErrorHandler:	
 29644                           ;psect for function _EUSART2_DefaultFramingErrorHandler
 29645                           
 29646     1E6C                     i1l1753:	
 29647                           ;incstack = 0
 29648 ;; hardware stack exceeded
 29649                           ; Regs used in _EUSART2_DefaultFramingErrorHandler: []
 29650                           
 29651     1E6C  0008               	return
 29652     1E6D                     __end_of_EUSART2_DefaultFramingErrorHandler:
 29653                           
 29654                           	psect	text171
 29655     1E97                     __ptext171:	
 29656 ;; *************** function _EUSART2_DefaultErrorHandler *****************
 29657 ;; Defined at:
 29658 ;;		line 260 in file "mcc_generated_files/eusart2.c"
 29659 ;; Parameters:    Size  Location     Type
 29660 ;;		None
 29661 ;; Auto vars:     Size  Location     Type
 29662 ;;		None
 29663 ;; Return value:  Size  Location     Type
 29664 ;;                  1    wreg      void 
 29665 ;; Registers used:
 29666 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 29667 ;; Tracked objects:
 29668 ;;		On entry : 0/0
 29669 ;;		On exit  : 0/0
 29670 ;;		Unchanged: 0/0
 29671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29676 ;;Total ram usage:        0 bytes
 29677 ;; Hardware stack levels used: 1
 29678 ;; Hardware stack levels required when called: 1
 29679 ;; This function calls:
 29680 ;;		_EUSART2_RxDataHandler
 29681 ;; This function is called by:
 29682 ;;		_EUSART2_Initialize
 29683 ;;		_EUSART2_Receive_ISR
 29684 ;; This function uses a non-reentrant model
 29685 ;;
 29686                           
 29687     1E97                     _EUSART2_DefaultErrorHandler:	
 29688                           ;psect for function _EUSART2_DefaultErrorHandler
 29689                           
 29690     1E97                     i1l9740:	
 29691                           ;incstack = 0
 29692 ;; hardware stack exceeded
 29693                           ; Regs used in _EUSART2_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 29694                           
 29695                           
 29696                           ;mcc_generated_files/eusart2.c: 261:     EUSART2_RxDataHandler();
 29697     1E97  3192  2293  319E   	fcall	_EUSART2_RxDataHandler
 29698     1E9A                     i1l1759:
 29699     1E9A  0008               	return
 29700     1E9B                     __end_of_EUSART2_DefaultErrorHandler:
 29701                           
 29702                           	psect	text172
 29703     1293                     __ptext172:	
 29704 ;; *************** function _EUSART2_RxDataHandler *****************
 29705 ;; Defined at:
 29706 ;;		line 240 in file "mcc_generated_files/eusart2.c"
 29707 ;; Parameters:    Size  Location     Type
 29708 ;;		None
 29709 ;; Auto vars:     Size  Location     Type
 29710 ;;		None
 29711 ;; Return value:  Size  Location     Type
 29712 ;;                  1    wreg      void 
 29713 ;; Registers used:
 29714 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 29715 ;; Tracked objects:
 29716 ;;		On entry : 0/0
 29717 ;;		On exit  : 0/0
 29718 ;;		Unchanged: 0/0
 29719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29722 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29723 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29724 ;;Total ram usage:        1 bytes
 29725 ;; Hardware stack levels used: 1
 29726 ;; This function calls:
 29727 ;;		Nothing
 29728 ;; This function is called by:
 29729 ;;		_EUSART2_Receive_ISR
 29730 ;;		_EUSART2_DefaultErrorHandler
 29731 ;; This function uses a non-reentrant model
 29732 ;;
 29733                           
 29734     1293                     _EUSART2_RxDataHandler:	
 29735                           ;psect for function _EUSART2_RxDataHandler
 29736                           
 29737     1293                     i1l9050:	
 29738                           ;incstack = 0
 29739 ;; hardware stack exceeded
 29740                           ; Regs used in _EUSART2_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 29741                           
 29742                           
 29743                           ;mcc_generated_files/eusart2.c: 242:     eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 29744     1293  087C               	movf	_eusart2RxHead,w
 29745     1294  3ECE               	addlw	(low (_eusart2RxBuffer| 0))& (0+255)
 29746     1295  0086               	movwf	6
 29747     1296  0187               	clrf	7
 29748     1297  0154               	movlb	20	; select bank20
 29749     1298  0819               	movf	25,w	;volatile
 29750     1299  0081               	movwf	1
 29751     129A                     i1l9052:
 29752     129A  3001               	movlw	1
 29753     129B  00F0               	movwf	??_EUSART2_RxDataHandler
 29754     129C  0870               	movf	??_EUSART2_RxDataHandler,w
 29755     129D  07FC               	addwf	_eusart2RxHead,f	;volatile
 29756     129E                     i1l9054:
 29757                           
 29758                           ;mcc_generated_files/eusart2.c: 243:     if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 29759     129E  3008               	movlw	8
 29760     129F  027C               	subwf	_eusart2RxHead,w	;volatile
 29761     12A0  1C03               	skipc
 29762     12A1  2AA3               	goto	u563_21
 29763     12A2  2AA4               	goto	u563_20
 29764     12A3                     u563_21:
 29765     12A3  2AA5               	goto	i1l9058
 29766     12A4                     u563_20:
 29767     12A4                     i1l9056:
 29768                           
 29769                           ;mcc_generated_files/eusart2.c: 244:     {;mcc_generated_files/eusart2.c: 245:         e
      +                          usart2RxHead = 0;
 29770     12A4  01FC               	clrf	_eusart2RxHead	;volatile
 29771     12A5                     i1l9058:
 29772                           
 29773                           ;mcc_generated_files/eusart2.c: 247:     eusart2RxCount++;
 29774     12A5  3001               	movlw	1
 29775     12A6  00F0               	movwf	??_EUSART2_RxDataHandler
 29776     12A7  0870               	movf	??_EUSART2_RxDataHandler,w
 29777     12A8  0140               	movlb	0	; select bank0
 29778     12A9  07D8               	addwf	_eusart2RxCount,f	;volatile
 29779     12AA                     i1l1750:
 29780     12AA  0008               	return
 29781     12AB                     __end_of_EUSART2_RxDataHandler:
 29782                           
 29783                           	psect	text173
 29784     1E93                     __ptext173:	
 29785 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 29786 ;; Defined at:
 29787 ;;		line 261 in file "mcc_generated_files/eusart1.c"
 29788 ;; Parameters:    Size  Location     Type
 29789 ;;		None
 29790 ;; Auto vars:     Size  Location     Type
 29791 ;;		None
 29792 ;; Return value:  Size  Location     Type
 29793 ;;                  1    wreg      void 
 29794 ;; Registers used:
 29795 ;;		None
 29796 ;; Tracked objects:
 29797 ;;		On entry : 0/0
 29798 ;;		On exit  : 0/0
 29799 ;;		Unchanged: 0/0
 29800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29805 ;;Total ram usage:        0 bytes
 29806 ;; Hardware stack levels used: 1
 29807 ;; This function calls:
 29808 ;;		Nothing
 29809 ;; This function is called by:
 29810 ;;		_EUSART1_Initialize
 29811 ;;		_EUSART1_Receive_ISR
 29812 ;; This function uses a non-reentrant model
 29813 ;;
 29814                           
 29815     1E93                     _EUSART1_DefaultOverrunErrorHandler:	
 29816                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 29817                           
 29818     1E93                     i1l9774:	
 29819                           ;incstack = 0
 29820 ;; hardware stack exceeded
 29821                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 29822                           
 29823                           
 29824                           ;mcc_generated_files/eusart1.c: 264:     RC1STAbits.CREN = 0;
 29825     1E93  0142               	movlb	2	; select bank2
 29826     1E94  121D               	bcf	29,4	;volatile
 29827                           
 29828                           ;mcc_generated_files/eusart1.c: 265:     RC1STAbits.CREN = 1;
 29829     1E95  161D               	bsf	29,4	;volatile
 29830     1E96                     i1l1906:
 29831     1E96  0008               	return
 29832     1E97                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 29833                           
 29834                           	psect	text174
 29835     1E6B                     __ptext174:	
 29836 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 29837 ;; Defined at:
 29838 ;;		line 259 in file "mcc_generated_files/eusart1.c"
 29839 ;; Parameters:    Size  Location     Type
 29840 ;;		None
 29841 ;; Auto vars:     Size  Location     Type
 29842 ;;		None
 29843 ;; Return value:  Size  Location     Type
 29844 ;;                  1    wreg      void 
 29845 ;; Registers used:
 29846 ;;		None
 29847 ;; Tracked objects:
 29848 ;;		On entry : 0/0
 29849 ;;		On exit  : 0/0
 29850 ;;		Unchanged: 0/0
 29851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29856 ;;Total ram usage:        0 bytes
 29857 ;; Hardware stack levels used: 1
 29858 ;; This function calls:
 29859 ;;		Nothing
 29860 ;; This function is called by:
 29861 ;;		_EUSART1_Initialize
 29862 ;;		_EUSART1_Receive_ISR
 29863 ;; This function uses a non-reentrant model
 29864 ;;
 29865                           
 29866     1E6B                     _EUSART1_DefaultFramingErrorHandler:	
 29867                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 29868                           
 29869     1E6B                     i1l1903:	
 29870                           ;incstack = 0
 29871 ;; hardware stack exceeded
 29872                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 29873                           
 29874     1E6B  0008               	return
 29875     1E6C                     __end_of_EUSART1_DefaultFramingErrorHandler:
 29876                           
 29877                           	psect	text175
 29878     1E8F                     __ptext175:	
 29879 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 29880 ;; Defined at:
 29881 ;;		line 269 in file "mcc_generated_files/eusart1.c"
 29882 ;; Parameters:    Size  Location     Type
 29883 ;;		None
 29884 ;; Auto vars:     Size  Location     Type
 29885 ;;		None
 29886 ;; Return value:  Size  Location     Type
 29887 ;;                  1    wreg      void 
 29888 ;; Registers used:
 29889 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 29890 ;; Tracked objects:
 29891 ;;		On entry : 0/0
 29892 ;;		On exit  : 0/0
 29893 ;;		Unchanged: 0/0
 29894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29899 ;;Total ram usage:        0 bytes
 29900 ;; Hardware stack levels used: 1
 29901 ;; Hardware stack levels required when called: 1
 29902 ;; This function calls:
 29903 ;;		_EUSART1_RxDataHandler
 29904 ;; This function is called by:
 29905 ;;		_EUSART1_Initialize
 29906 ;;		_EUSART1_Receive_ISR
 29907 ;; This function uses a non-reentrant model
 29908 ;;
 29909                           
 29910     1E8F                     _EUSART1_DefaultErrorHandler:	
 29911                           ;psect for function _EUSART1_DefaultErrorHandler
 29912                           
 29913     1E8F                     i1l9776:	
 29914                           ;incstack = 0
 29915 ;; hardware stack exceeded
 29916                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 29917                           
 29918                           
 29919                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_RxDataHandler();
 29920     1E8F  3193  2326  319E   	fcall	_EUSART1_RxDataHandler
 29921     1E92                     i1l1909:
 29922     1E92  0008               	return
 29923     1E93                     __end_of_EUSART1_DefaultErrorHandler:
 29924                           
 29925                           	psect	text176
 29926     1326                     __ptext176:	
 29927 ;; *************** function _EUSART1_RxDataHandler *****************
 29928 ;; Defined at:
 29929 ;;		line 249 in file "mcc_generated_files/eusart1.c"
 29930 ;; Parameters:    Size  Location     Type
 29931 ;;		None
 29932 ;; Auto vars:     Size  Location     Type
 29933 ;;		None
 29934 ;; Return value:  Size  Location     Type
 29935 ;;                  1    wreg      void 
 29936 ;; Registers used:
 29937 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 29938 ;; Tracked objects:
 29939 ;;		On entry : 0/0
 29940 ;;		On exit  : 0/0
 29941 ;;		Unchanged: 0/0
 29942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29945 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29946 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29947 ;;Total ram usage:        1 bytes
 29948 ;; Hardware stack levels used: 1
 29949 ;; This function calls:
 29950 ;;		Nothing
 29951 ;; This function is called by:
 29952 ;;		_EUSART1_Receive_ISR
 29953 ;;		_EUSART1_DefaultErrorHandler
 29954 ;; This function uses a non-reentrant model
 29955 ;;
 29956                           
 29957     1326                     _EUSART1_RxDataHandler:	
 29958                           ;psect for function _EUSART1_RxDataHandler
 29959                           
 29960     1326                     i1l9070:	
 29961                           ;incstack = 0
 29962 ;; hardware stack exceeded
 29963                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 29964                           
 29965                           
 29966                           ;mcc_generated_files/eusart1.c: 251:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 29967     1326  0140               	movlb	0	; select bank0
 29968     1327  0854               	movf	_eusart1RxHead,w
 29969     1328  3E44               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 29970     1329  0086               	movwf	6
 29971     132A  3001               	movlw	1	; select bank2/3
 29972     132B  0087               	movwf	7
 29973     132C  0142               	movlb	2	; select bank2
 29974     132D  0819               	movf	25,w	;volatile
 29975     132E  0081               	movwf	1
 29976     132F                     i1l9072:
 29977     132F  3001               	movlw	1
 29978     1330  00F0               	movwf	??_EUSART1_RxDataHandler
 29979     1331  0870               	movf	??_EUSART1_RxDataHandler,w
 29980     1332  0140               	movlb	0	; select bank0
 29981     1333  07D4               	addwf	_eusart1RxHead,f	;volatile
 29982     1334                     i1l9074:
 29983                           
 29984                           ;mcc_generated_files/eusart1.c: 252:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 29985     1334  3008               	movlw	8
 29986     1335  0254               	subwf	_eusart1RxHead,w	;volatile
 29987     1336  1C03               	skipc
 29988     1337  2B39               	goto	u564_21
 29989     1338  2B3A               	goto	u564_20
 29990     1339                     u564_21:
 29991     1339  2B3B               	goto	i1l9078
 29992     133A                     u564_20:
 29993     133A                     i1l9076:
 29994                           
 29995                           ;mcc_generated_files/eusart1.c: 253:     {;mcc_generated_files/eusart1.c: 254:         e
      +                          usart1RxHead = 0;
 29996     133A  01D4               	clrf	_eusart1RxHead	;volatile
 29997     133B                     i1l9078:
 29998                           
 29999                           ;mcc_generated_files/eusart1.c: 256:     eusart1RxCount++;
 30000     133B  3001               	movlw	1
 30001     133C  00F0               	movwf	??_EUSART1_RxDataHandler
 30002     133D  0870               	movf	??_EUSART1_RxDataHandler,w
 30003     133E  07D2               	addwf	_eusart1RxCount,f	;volatile
 30004     133F                     i1l1900:
 30005     133F  0008               	return
 30006     1340                     __end_of_EUSART1_RxDataHandler:
 30007     007E                     btemp	set	126	;btemp
 30008     007E                     int$flags	set	126
 30009     007E                     wtemp0	set	126
 30010                           
 30011                           	psect	idloc
 30012                           
 30013                           ;Config register IDLOC0 @ 0x8000
 30014                           ;	unspecified, using default values
 30015     8000                     	org	32768
 30016     8000  3FFF               	dw	16383
 30017                           
 30018                           ;Config register IDLOC1 @ 0x8001
 30019                           ;	unspecified, using default values
 30020     8001                     	org	32769
 30021     8001  3FFF               	dw	16383
 30022                           
 30023                           ;Config register IDLOC2 @ 0x8002
 30024                           ;	unspecified, using default values
 30025     8002                     	org	32770
 30026     8002  3FFF               	dw	16383
 30027                           
 30028                           ;Config register IDLOC3 @ 0x8003
 30029                           ;	unspecified, using default values
 30030     8003                     	org	32771
 30031     8003  3FFF               	dw	16383
 30032                           
 30033                           	psect	config
 30034                           
 30035                           ;Config register CONFIG1 @ 0x8007
 30036                           ;	External Oscillator mode selection bits
 30037                           ;	FEXTOSC = OFF, Oscillator not enabled
 30038                           ;	Power-up default value for COSC bits
 30039                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 30040                           ;	Clock Out Enable bit
 30041                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 30042                           ;	Clock Switch Enable bit
 30043                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 30044                           ;	Fail-Safe Clock Monitor Enable bit
 30045                           ;	FCMEN = ON, FSCM timer enabled
 30046     8007                     	org	32775
 30047     8007  3FEC               	dw	16364
 30048                           
 30049                           ;Config register CONFIG2 @ 0x8008
 30050                           ;	Master Clear Enable bit
 30051                           ;	MCLRE = ON, MCLR pin is Master Clear function
 30052                           ;	Power-up Timer Enable bit
 30053                           ;	PWRTS = OFF, PWRT disabled
 30054                           ;	Low-Power BOR enable bit
 30055                           ;	LPBOREN = OFF, ULPBOR disabled
 30056                           ;	Brown-out reset enable bits
 30057                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 30058                           ;	Brown-out Reset Voltage Selection
 30059                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
 30060                           ;	Zero-cross detect disable
 30061                           ;	ZCDDIS = OFF, Zero-cross detect circuit is disabled at POR.
 30062                           ;	Peripheral Pin Select one-way control
 30063                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 30064                           ;	Stack Overflow/Underflow Reset Enable bit
 30065                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 30066     8008                     	org	32776
 30067     8008  3FFF               	dw	16383
 30068                           
 30069                           ;Config register CONFIG3 @ 0x8009
 30070                           ;	WDT Period Select bits
 30071                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 30072                           ;	WDT operating mode
 30073                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 30074                           ;	WDT Window Select bits
 30075                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 30076                           ;	WDT input clock selector
 30077                           ;	WDTCCS = SC, Software Control
 30078     8009                     	org	32777
 30079     8009  3F9F               	dw	16287
 30080                           
 30081                           ;Config register CONFIG4 @ 0x800A
 30082                           ;	Boot Block Size Selection bits
 30083                           ;	BBSIZE = BB512, 512 words boot block size
 30084                           ;	Boot Block Enable bit
 30085                           ;	BBEN = OFF, Boot Block disabled
 30086                           ;	SAF Enable bit
 30087                           ;	SAFEN = OFF, SAF disabled
 30088                           ;	Application Block Write Protection bit
 30089                           ;	WRTAPP = OFF, Application Block not write protected
 30090                           ;	Boot Block Write Protection bit
 30091                           ;	WRTB = OFF, Boot Block not write protected
 30092                           ;	Configuration Register Write Protection bit
 30093                           ;	WRTC = OFF, Configuration Register not write protected
 30094                           ;	Data EEPROM write protection bit
 30095                           ;	WRTD = OFF, Data EEPROM NOT write protected
 30096                           ;	Storage Area Flash Write Protection bit
 30097                           ;	WRTSAF = OFF, SAF not write protected
 30098                           ;	Low Voltage Programming Enable bit
 30099                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 30100     800A                     	org	32778
 30101     800A  3FFF               	dw	16383
 30102                           
 30103                           ;Config register CONFIG5 @ 0x800B
 30104                           ;	UserNVM Program memory code protection bit
 30105                           ;	CP = OFF, UserNVM code protection disabled
 30106     800B                     	org	32779
 30107     800B  3FFF               	dw	16383

Data Sizes:
    Strings     29
    Constant    147
    Data        19
    BSS         466
    Persistent  54
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     45      80
    BANK1            80      0      80
    BANK2            80      1      71
    BANK3            80      0      17
    BANK4            80      0      64
    BANK5            80      0      80
    BANK6            80      0      80
    BANK7            80      0      80
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    asyncBuffer	PTR unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), statusBuffer@main$F4234(BANK7[80]), NULL(NULL[0]), 

    bitRead8@reg	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    bitWrite8@reg	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    BMA253_GetAccelDataXYZ@accelData	PTR struct . size(1) Largest target is 6
		 -> LIGHTBLUE_AccelSensor@accelData(BANK0[6]), 

    BMA253_GetAccelDataY@yAccelData	PTR short  size(1) Largest target is 2
		 -> BMA253_GetAccelDataXYZ@sensorValue(BANK0[2]), 

    BMA253_GetAccelDataZ@zAccelData	PTR short  size(1) Largest target is 2
		 -> BMA253_GetAccelDataXYZ@sensorValue(BANK0[2]), 

    bufferBlock$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    d$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), NULL(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), NULL(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), NULL(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), NULL(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), NULL(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), NULL(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), NULL(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), NULL(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), NULL(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), NULL(), 

    fsmStateTable	const PTR FTN()enum E12652[16] size(2) Largest target is 1
		 -> do_I2C_DO_ACK(), do_I2C_DO_ADDRESS_NACK(), do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), 
		 -> do_I2C_IDLE(), do_I2C_RCEN(), do_I2C_RESET(), do_I2C_RX(), 
		 -> do_I2C_SEND_ADR_READ(), do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_RESTART(), do_I2C_SEND_RESTART_READ(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_STOP(), do_I2C_TX(), do_I2C_TX_EMPTY(), 

    I2C1_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_DO_TX$5427	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1693(), 
		 -> rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1704(), rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1727(), 
		 -> wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1710(), wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1716(), 
		 -> NULL(), 

    I2C1_DO_TX$5427$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_DO_TX$5432	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_busCollisionISR(), NULL(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_ISR(), NULL(), 

    i2c1_fsmStateTable	const PTR FTN()enum E12565[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_IDLE(), I2C1_DO_RCEN(), I2C1_DO_RESET(), 
		 -> I2C1_DO_RX(), I2C1_DO_RX_ACK(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_SEND_ADR_READ(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_READ(), 
		 -> I2C1_DO_SEND_RESTART_WRITE(), I2C1_DO_SEND_STOP(), I2C1_DO_TX(), I2C1_DO_TX_EMPTY(), 

    I2C1_MasterFsm$5426	const PTR FTN()enum E12565 size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_IDLE(), I2C1_DO_RCEN(), I2C1_DO_RESET(), 
		 -> I2C1_DO_RX(), I2C1_DO_RX_ACK(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_SEND_ADR_READ(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_READ(), 
		 -> I2C1_DO_SEND_RESTART_WRITE(), I2C1_DO_SEND_STOP(), I2C1_DO_TX(), I2C1_DO_TX_EMPTY(), 

    I2C1_Read1ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    I2C1_Read2ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    I2C1_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), 

    I2C1_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_SetBuffer@buffer	PTR void  size(2) Largest target is 8192
		 -> I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read1ByteRegister@reg(BANK0[1]), 
		 -> i2c_read2ByteRegister@reg(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), i2c_readDataBlock@reg(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write1ByteRegister@reg(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), i2c_write2ByteRegister@reg(COMMON[1]), 
		 -> RAM(DATA[8192]), NULL(NULL[0]), 

    I2C1_SetCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1693(), rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1704(), 
		 -> rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1727(), wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1710(), 
		 -> wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1716(), NULL(), 

    I2C1_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1693(), rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1704(), 
		 -> rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1727(), wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1710(), 
		 -> wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1716(), NULL(), 

    I2C1_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_Status$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_Status$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1693(), 
		 -> rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1704(), rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1727(), 
		 -> wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1710(), wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1716(), 
		 -> NULL(), 

    I2C1_Status$data_ptr	PTR unsigned char  size(2) Largest target is 8192
		 -> I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read1ByteRegister@reg(BANK0[1]), 
		 -> i2c_read2ByteRegister@reg(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), i2c_readDataBlock@reg(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write1ByteRegister@reg(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), i2c_write2ByteRegister@reg(COMMON[1]), 
		 -> RAM(DATA[8192]), NULL(NULL[0]), 

    I2C1_Write1ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    I2C1_Write2ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    i2c_read1ByteRegister@d2$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    i2c_read2ByteRegister@result$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    i2c_status$callbackPayload	PTR void [6] size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c_status$callbackTable	PTR FTN(PTR void ,)enum E12498[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    i2c_status$data_ptr	PTR unsigned char  size(2) Largest target is 0

    i2c_write1ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    i2c_write2ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    IOCAF6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF6_DefaultInterruptHandler(), NULL(), 

    IOCAF6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF6_DefaultInterruptHandler(), 

    LIGHTBLUE_SendPacket@payload	PTR unsigned char  size(1) Largest target is 19
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_LedState@payload(BANK0[3]), LIGHTBLUE_PushButton@payload(BANK0[3]), LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), 
		 -> LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), 

    LIGHTBLUE_SendSerialData@serialData	PTR unsigned char  size(1) Largest target is 80
		 -> lightBlueSerial(BANK5[80]), 

    LIGHTBLUE_SplitByte@payload	PTR unsigned char  size(1) Largest target is 19
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_LedState@payload(BANK0[3]), LIGHTBLUE_PushButton@payload(BANK0[3]), LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), 
		 -> LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), 

    LIGHTBLUE_SplitWord@payload	PTR unsigned char  size(1) Largest target is 13
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), 

    NULL$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    pHead	PTR unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), statusBuffer@main$F4234(BANK7[80]), NULL(NULL[0]), 

    protocol_version_number	const PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    rd1RegCompleteHandler@i2c1_master_example$F1693@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rd2RegCompleteHandler@i2c1_master_example$F1704@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@i2c1_master_example$F1727@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@i2c1_master_example$F1727@ptr$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@p$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    RN487X$AsyncHandler	PTR FTN(PTR unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_MessageHandler(), 

    RN487X$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_rx_ready(), 

    RN487X$DelayMs	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> RN487X_Delay(), 

    RN487X$IndicateRx	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_IndicateRx(), 

    RN487X$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> RN487X_Read@rn487x_interface$F1835(), 

    RN487X$ResetModule	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_Reset(), 

    RN487X$SetSystemMode	PTR FTN(enum E271,)void  size(2) Largest target is 1
		 -> RN487X_SetSystemMode(), 

    RN487X$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_tx_done(), 

    RN487X$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_Write(), 

    rn487x_driver_version	const PTR const unsigned char  size(2) Largest target is 6
		 -> STR_6(CODE[6]), 

    RN487X_MessageHandler@message	PTR unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), statusBuffer@main$F4234(BANK7[80]), NULL(NULL[0]), 

    rn487x_PrintMessage@passedMessage	PTR unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), statusBuffer@main$F4234(BANK7[80]), NULL(NULL[0]), 

    RN487X_ReadMsg@expectedMsg	PTR const unsigned char  size(2) Largest target is 11
		 -> RN487X_EnterCmdMode@cmdPrompt(CODE[5]), RN487X_EnterDataMode@cmdPrompt(CODE[5]), RN487X_GetInputsValues@ioValue(COMMON[2]), RN487X_RebootCmd@reboot(CODE[11]), 

    RN487X_SendCmd@cmd	PTR const unsigned char  size(1) Largest target is 64
		 -> cmdBuf(BANK4[64]), 

    RN487X_SetAsyncMessageHandler@pBuffer	PTR unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), statusBuffer@main$F4234(BANK7[80]), 

    S199$8$0	PTR unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), statusBuffer@main$F4234(BANK7[80]), NULL(NULL[0]), 

    S199$AsyncHandler	PTR FTN(PTR unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_MessageHandler(), 

    S199$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_rx_ready(), 

    S199$DelayMs	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> RN487X_Delay(), 

    S199$IndicateRx	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_IndicateRx(), 

    S199$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> RN487X_Read@rn487x_interface$F1835(), 

    S199$ResetModule	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_Reset(), 

    S199$SetSystemMode	PTR FTN(enum E271,)void  size(2) Largest target is 1
		 -> RN487X_SetSystemMode(), 

    S199$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_tx_done(), 

    S199$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_Write(), 

    S328$4$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    S328$6$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    S328$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_rx_ready(), EUSART2_is_rx_ready(), 

    S328$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Initialize(), EUSART2_Initialize(), 

    S328$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_Read(), EUSART2_Read(), 

    S328$RxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    S328$SetRxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetRxInterruptHandler(), EUSART2_SetRxInterruptHandler(), 

    S328$SetTxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetTxInterruptHandler(), EUSART2_SetTxInterruptHandler(), 

    S328$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_done(), EUSART2_is_tx_done(), 

    S328$TransmitReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_ready(), EUSART2_is_tx_ready(), 

    S328$TxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    S328$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART1_Write(), EUSART2_Write(), 

    S3602$0$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    S3602$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    S3602$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1693(), 
		 -> rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1704(), rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1727(), 
		 -> wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1710(), wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1716(), 
		 -> NULL(), 

    S3602$data_ptr	PTR unsigned char  size(2) Largest target is 8192
		 -> I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read1ByteRegister@reg(BANK0[1]), 
		 -> i2c_read2ByteRegister@reg(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), i2c_readDataBlock@reg(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write1ByteRegister@reg(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), i2c_write2ByteRegister@reg(COMMON[1]), 
		 -> RAM(DATA[8192]), NULL(NULL[0]), 

    S642$11$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S642$callbackPayload	PTR void [6] size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S642$callbackTable	PTR FTN(PTR void ,)enum E12498[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    S642$data_ptr	PTR unsigned char  size(2) Largest target is 0

    S988$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    sp__strchr	PTR unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), statusBuffer@main$F4234(BANK7[80]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 32
		 -> rn487x_PrintMessage@printCharacter(BANK0[32]), 

    sp__strstr	PTR unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), statusBuffer@main$F4234(BANK7[80]), NULL(NULL[0]), 

    strchr@s	PTR const unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), statusBuffer@main$F4234(BANK7[80]), NULL(NULL[0]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 32
		 -> rn487x_PrintMessage@printCharacter(BANK0[32]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 32
		 -> rn487x_PrintMessage@printCharacter(BANK0[32]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), statusBuffer@main$F4234(BANK7[80]), NULL(NULL[0]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_LedState@payload(BANK0[3]), LIGHTBLUE_PushButton@payload(BANK0[3]), LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), 
		 -> LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), lightBlueSerial(BANK5[80]), statusBuffer(BANK6[80]), statusBuffer@main$F4234(BANK7[80]), 
		 -> STR_1(CODE[6]), STR_3(CODE[11]), STR_5(CODE[12]), NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_LedState@payload(BANK0[3]), LIGHTBLUE_PushButton@payload(BANK0[3]), LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), 
		 -> LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), lightBlueSerial(BANK5[80]), statusBuffer(BANK6[80]), statusBuffer@main$F4234(BANK7[80]), 
		 -> STR_1(CODE[6]), STR_3(CODE[11]), STR_5(CODE[12]), NULL(NULL[0]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), statusBuffer@main$F4234(BANK7[80]), NULL(NULL[0]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[11]), STR_5(CODE[12]), 

    strstr@h	PTR const unsigned char  size(1) Largest target is 80
		 -> statusBuffer(BANK6[80]), statusBuffer@main$F4234(BANK7[80]), NULL(NULL[0]), 

    strstr@n	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[11]), STR_5(CODE[12]), 

    TMAG5273_GetTemperatureValue@temperature	PTR short  size(1) Largest target is 2
		 -> LIGHTBLUE_TemperatureSensor@temperature(BANK0[2]), 

    TMAG5273_GetXValue@x	PTR short  size(1) Largest target is 2
		 -> BMA253_GetAccelDataXYZ@sensorValue(BANK0[2]), 

    uart$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_rx_ready(), EUSART2_is_rx_ready(), 

    uart$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Initialize(), EUSART2_Initialize(), 

    uart$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_Read(), EUSART2_Read(), 

    uart$RxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    uart$SetRxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetRxInterruptHandler(), EUSART2_SetRxInterruptHandler(), 

    uart$SetTxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetTxInterruptHandler(), EUSART2_SetTxInterruptHandler(), 

    uart$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_done(), EUSART2_is_tx_done(), 

    uart$TransmitReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_ready(), EUSART2_is_tx_ready(), 

    uart$TxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    uart$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART1_Write(), EUSART2_Write(), 

    wr1RegCompleteHandler@i2c1_master_example$F1710@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    wr2RegCompleteHandler@i2c1_master_example$F1716@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    _writeRegister->_i2c_write1ByteRegister
    _getError->_getDeviceStatus
    _PIN_MANAGER_Initialize->_IOCAF6_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _RN487X_FilterData->_RN487X_MessageHandler
    _RN487X_MessageHandler->_strstr
    _strstr->_strncmp
    _rn487x_PrintMessageStart->_EUSART1_Write
    _rn487x_PrintMessageStart->_EUSART2_Write
    _rn487x_PrintMessageEnd->_EUSART1_Write
    _rn487x_PrintMessageEnd->_EUSART2_Write
    _rn487x_PrintMessage->_strlen
    _rn487x_PrintIndicatorCharacters->_EUSART1_Write
    _rn487x_PrintIndicatorCharacters->_EUSART2_Write
    _RN487X_Init->_RN487X_Delay
    _LIGHTBLUE_TemperatureSensor->_LIGHTBLUE_SplitWord
    _LIGHTBLUE_TemperatureSensor->_TMAG5273_GetTemperatureValue
    _LIGHTBLUE_SendSerialData->_RN487X_Write
    _LIGHTBLUE_SendProtocolVersion->_LIGHTBLUE_SendPacket
    _LIGHTBLUE_PushButton->_LIGHTBLUE_SendPacket
    _LIGHTBLUE_PerformAction->_LIGHTBLUE_SetErrorLedValue
    _RN487X_SetOutputs->_RN487X_SendCmd
    _RN487X_EnterDataMode->_RN487X_SendCmd
    _RN487X_EnterCmdMode->_RN487X_SendCmd
    _RN487X_SendCmd->_RN487X_Write
    _RN487X_Read@rn487x_interface$F1835->_EUSART1_Read
    _RN487X_Read@rn487x_interface$F1835->_EUSART2_Read
    _RN487X_Delay->_DELAY_milliseconds
    _LIGHTBLUE_LedState->_LIGHTBLUE_SendPacket
    _LIGHTBLUE_AccelSensor->_LIGHTBLUE_SplitWord
    _LIGHTBLUE_SplitWord->_LIGHTBLUE_SplitByte
    _LIGHTBLUE_SplitByte->_strlen
    _LIGHTBLUE_SendPacket->_RN487X_Write
    _RN487X_Write->_strlen
    _BMA253_GetAccelDataXYZ->_BMA253_NewAccelDataRdyY
    _BMA253_GetAccelDataXYZ->_BMA253_NewAccelDataRdyZ
    _BMA253_GetAccelDataXYZ->_TMAG5273_GetXValue
    _BMA253_GetAccelDataZ->_BMA253_NewAccelDataRdyZ
    _BMA253_GetAccelDataY->_BMA253_NewAccelDataRdyY
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_MasterFsm->_I2C1_DO_ADDRESS_NACK
    _I2C1_MasterFsm->_I2C1_DO_RX
    _I2C1_MasterFsm->_I2C1_DO_TX
    _I2C1_MasterFsm->_I2C1_DO_TX_EMPTY
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnReset
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnStop
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler@i2c1_master_example$F1693
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler@i2c1_master_example$F1704
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler@i2c1_master_example$F1727
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler@i2c1_master_example$F1710
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler@i2c1_master_example$F1716
    _I2C1_DO_TX->_I2C1_CallbackReturnReset
    _I2C1_DO_TX->_I2C1_CallbackReturnStop
    _I2C1_DO_TX->_rd1RegCompleteHandler
    _I2C1_DO_TX->_rd1RegCompleteHandler@i2c1_master_example$F1693
    _I2C1_DO_TX->_rd2RegCompleteHandler
    _I2C1_DO_TX->_rd2RegCompleteHandler@i2c1_master_example$F1704
    _I2C1_DO_TX->_rdBlkRegCompleteHandler
    _I2C1_DO_TX->_rdBlkRegCompleteHandler@i2c1_master_example$F1727
    _I2C1_DO_TX->_wr1RegCompleteHandler
    _I2C1_DO_TX->_wr1RegCompleteHandler@i2c1_master_example$F1710
    _I2C1_DO_TX->_wr2RegCompleteHandler
    _I2C1_DO_TX->_wr2RegCompleteHandler@i2c1_master_example$F1716
    _I2C1_DO_SEND_ADR_WRITE->_I2C1_MasterSendTxData
    _I2C1_DO_RX->_I2C1_CallbackReturnReset
    _I2C1_DO_RX->_I2C1_CallbackReturnStop
    _I2C1_DO_RX->_rd1RegCompleteHandler
    _I2C1_DO_RX->_rd1RegCompleteHandler@i2c1_master_example$F1693
    _I2C1_DO_RX->_rd2RegCompleteHandler
    _I2C1_DO_RX->_rd2RegCompleteHandler@i2c1_master_example$F1704
    _I2C1_DO_RX->_rdBlkRegCompleteHandler
    _I2C1_DO_RX->_rdBlkRegCompleteHandler@i2c1_master_example$F1727
    _I2C1_DO_RX->_wr1RegCompleteHandler
    _I2C1_DO_RX->_wr1RegCompleteHandler@i2c1_master_example$F1710
    _I2C1_DO_RX->_wr2RegCompleteHandler
    _I2C1_DO_RX->_wr2RegCompleteHandler@i2c1_master_example$F1716
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnReset
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnStop
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler@i2c1_master_example$F1693
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler@i2c1_master_example$F1704
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler@i2c1_master_example$F1727
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler@i2c1_master_example$F1710
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler@i2c1_master_example$F1716
    _wr2RegCompleteHandler@i2c1_master_example$F1716->_I2C1_SetDataCompleteCallback
    _wr2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler@i2c1_master_example$F1710->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler@i2c1_master_example$F1727->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler@i2c1_master_example$F1704->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler@i2c1_master_example$F1693->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _I2C1_SetDataCompleteCallback->_I2C1_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART1_Transmit_ISR
    _INTERRUPT_InterruptManager->_EUSART2_Transmit_ISR
    _EUSART2_Receive_ISR->_EUSART2_RxDataHandler
    _EUSART2_DefaultErrorHandler->_EUSART2_RxDataHandler
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _main->_LIGHTBLUE_AccelSensor
    _begin->_setMagneticChannel
    _begin->_setOperatingMode
    _begin->_setTemperatureEn
    _begin->_setXYAxisRange
    _begin->_setZAxisRange
    _setZAxisRange->_getError
    _setXYAxisRange->_getError
    _setTemperatureEn->_getError
    _setOperatingMode->_getError
    _setMagneticChannel->_getError
    _writeRegister->_i2c_write1ByteRegister
    _getDeviceStatus->_readRegister
    _isConnected->_TMAG5273_GetManufacture
    _TMAG5273_GetManufacture->_i2c_read2ByteRegister
    _getTemperatureEN->_readRegister
    _getOperatingMode->_readRegister
    _getMagneticChannel->_readRegister
    _getLowPower->_readRegister
    _getAngleEn->_readRegister
    _readRegister->_i2c_read1ByteRegister
    _RN487X_DataReady->_RN487X_FilterData
    _RN487X_FilterData->_RN487X_MessageHandler
    _RN487X_MessageHandler->_rn487x_PrintMessage
    _TMAG5273_GetTemperatureValue->_TMAG5273_CalcMeasurement
    _LIGHTBLUE_ParseIncomingPacket->_LIGHTBLUE_PerformAction
    _LIGHTBLUE_PerformAction->_LIGHTBLUE_SetErrorLedValue
    _LIGHTBLUE_UpdateErrorLed->_RN487X_SetOutputs
    _LIGHTBLUE_AccelSensor->_BMA253_GetAccelDataXYZ
    _TMAG5273_GetXValue->_TMAG5273_CalcMeasurement
    _TMAG5273_CalcMeasurement->_i2c_read2ByteRegister
    _BMA253_GetAccelDataZ->_i2c_read1ByteRegister
    _BMA253_NewAccelDataRdyZ->_i2c_read1ByteRegister
    _BMA253_GetAccelDataY->_i2c_read1ByteRegister
    _BMA253_NewAccelDataRdyY->_i2c_read1ByteRegister
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _I2C1_Poller->_I2C1_MasterFsm

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0 13777765
                                             44 BANK0      1     1      0
                                              0 BANK2      1     1      0
                       _EUSART1_Read *
                      _EUSART1_Write *
                _EUSART1_is_rx_ready *
                       _EUSART2_Read *
                      _EUSART2_Write *
                _EUSART2_is_rx_ready *
              _LIGHTBLUE_AccelSensor
               _LIGHTBLUE_Initialize
                 _LIGHTBLUE_LedState
      _LIGHTBLUE_ParseIncomingPacket
               _LIGHTBLUE_PushButton
      _LIGHTBLUE_SendProtocolVersion
           _LIGHTBLUE_SendSerialData
        _LIGHTBLUE_TemperatureSensor
                   _RN487X_DataReady
                        _RN487X_Init
                 _RN487X_IsConnected
                        _RN487X_Read
      _RN487X_SetAsyncMessageHandler
                       _RN487X_Write *
                  _SYSTEM_Initialize
            _TMR0_HasOverflowOccured
                              _begin
 ---------------------------------------------------------------------------------
 (1) _begin                                                1     1      0 10165293
                           _bitRead8
                         _getAngleEn
                           _getError
                        _getLowPower
                 _getMagneticChannel
                   _getOperatingMode
                   _getTemperatureEN
                        _isConnected
                 _setMagneticChannel
                   _setOperatingMode
                   _setTemperatureEn
                     _setXYAxisRange
                      _setZAxisRange
 ---------------------------------------------------------------------------------
 (2) _setZAxisRange                                        5     5      0 1399072
                                             19 BANK0      5     5      0
                          _bitWrite8
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (2) _setXYAxisRange                                       5     5      0 1399072
                                             19 BANK0      5     5      0
                          _bitWrite8
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (2) _setTemperatureEn                                     5     5      0 1399072
                                             19 BANK0      5     5      0
                          _bitWrite8
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (2) _setOperatingMode                                     5     5      0 1399382
                                             19 BANK0      5     5      0
                          _bitWrite8
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (2) _setMagneticChannel                                   5     5      0 1401118
                                             19 BANK0      5     5      0
                          _bitWrite8
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (3) _writeRegister                                        2     1      1  448722
                                              6 BANK0      2     1      1
             _i2c_write1ByteRegister
 ---------------------------------------------------------------------------------
 (4) _i2c_write1ByteRegister                               3     1      2  439917
                                             11 COMMON     1     1      0
                                              4 BANK0      2     0      2
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _getError                                             7     7      0  452471
                                             12 BANK0      7     7      0
                           _bitRead8
                    _getDeviceStatus
 ---------------------------------------------------------------------------------
 (4) _getDeviceStatus                                      1     1      0  440464
                                             11 COMMON     1     1      0
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _bitWrite8                                            6     2      4   57257
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _isConnected                                          0     0      0  440073
            _TMAG5273_GetManufacture
 ---------------------------------------------------------------------------------
 (3) _TMAG5273_GetManufacture                              4     2      2  440073
                                             13 BANK0      4     2      2
              _i2c_read2ByteRegister
                               _swap
 ---------------------------------------------------------------------------------
 (4) _swap                                                 9     7      2     268
                                              1 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) _getTemperatureEN                                     4     4      0  452245
                                             12 BANK0      4     4      0
                           _bitRead8
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _getOperatingMode                                     5     5      0  452496
                                             12 BANK0      5     5      0
                           _bitRead8
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _getMagneticChannel                                   7     7      0  453804
                                             12 BANK0      7     7      0
                           _bitRead8
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _getLowPower                                          4     4      0  452245
                                             12 BANK0      4     4      0
                           _bitRead8
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _getAngleEn                                           5     5      0  452496
                                             12 BANK0      5     5      0
                           _bitRead8
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _readRegister                                         2     2      0  440430
                                             10 BANK0      2     2      0
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (4) _bitRead8                                             5     2      3   11744
                                              1 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (1) _TMR0_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1485
                 _EUSART1_Initialize
                 _EUSART2_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     135
         _IOCAF6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCAF6_SetInterruptHandler                           2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     675
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     675
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _RN487X_SetAsyncMessageHandler                        2     1      1     410
                                              1 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) _RN487X_Read                                          0     0      0   10867
                   _RN487X_DataReady
 ---------------------------------------------------------------------------------
 (2) _RN487X_DataReady                                     0     0      0   10867
                  _RN487X_FilterData
                 _RN487X_is_rx_ready *
 ---------------------------------------------------------------------------------
 (3) _RN487X_FilterData                                    2     2      0   10867
                                             35 BANK0      2     2      0
              _RN487X_MessageHandler *
 _RN487X_Read@rn487x_interface$F1835 *
 ---------------------------------------------------------------------------------
 (4) _RN487X_MessageHandler                                2     1      1   10666
                                             11 COMMON     1     0      1
                                             34 BANK0      1     1      0
    _rn487x_PrintIndicatorCharacters
                _rn487x_PrintMessage
             _rn487x_PrintMessageEnd
           _rn487x_PrintMessageStart
                             _strstr
 ---------------------------------------------------------------------------------
 (5) _strstr                                               7     5      2    2275
                                              7 COMMON     4     2      2
                                              0 BANK0      3     3      0
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (6) _strncmp                                              6     2      4     515
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (6) _strchr                                               3     1      2     278
                                              1 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintMessageStart                             0     0      0    1691
                      _EUSART1_Write *
                      _EUSART2_Write *
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintMessageEnd                               0     0      0    1691
                      _EUSART1_Write *
                      _EUSART2_Write *
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintMessage                                 36    36      0    3046
                                              6 COMMON     2     2      0
                                              0 BANK0     34    34      0
                      _EUSART1_Write *
                      _EUSART2_Write *
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               3     2      1     246
                                              1 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintIndicatorCharacters                      1     1      0    1753
                                              3 COMMON     1     1      0
                      _EUSART1_Write *
                      _EUSART2_Write *
 ---------------------------------------------------------------------------------
 (1) _RN487X_IsConnected                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RN487X_Init                                          0     0      0     872
                       _RN487X_Delay *
                  _RN487X_IndicateRx *
 _RN487X_Read@rn487x_interface$F1835 *
                       _RN487X_Reset *
               _RN487X_SetSystemMode *
                 _RN487X_is_rx_ready *
 ---------------------------------------------------------------------------------
 (3) _RN487X_is_rx_ready                                   0     0      0       0
                _EUSART1_is_rx_ready *
                _EUSART2_is_rx_ready *
 ---------------------------------------------------------------------------------
 (4) _EUSART2_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RN487X_SetSystemMode                                 1     0      1     108
                                              1 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (2) _RN487X_Reset                                         1     0      1     185
                                              1 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (2) _RN487X_IndicateRx                                    1     0      1     108
                                              1 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_TemperatureSensor                          8     8      0  447600
                                             22 BANK0      7     7      0
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitWord
       _TMAG5273_GetTemperatureValue
 ---------------------------------------------------------------------------------
 (2) _TMAG5273_GetTemperatureValue                         1     1      0  440008
                                             11 COMMON     1     1      0
           _TMAG5273_CalcMeasurement
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_SendSerialData                             3     3      0    4274
                                              7 COMMON     3     3      0
                       _RN487X_Write *
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_SendProtocolVersion                       23    23      0    7788
                                              0 BANK0     23    23      0
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitByte
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_PushButton                                 4     4      0    6862
                                              0 BANK0      4     4      0
           _LIGHTBLUE_GetButtonValue
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitByte
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_GetButtonValue                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_ParseIncomingPacket                        9     9      0   18822
                                             11 BANK0      9     9      0
            _LIGHTBLUE_PerformAction
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_PerformAction                              4     3      1   18277
                                              7 BANK0      4     3      1
                      _EUSART1_Write *
                      _EUSART2_Write *
         _LIGHTBLUE_SetErrorLedValue
 ---------------------------------------------------------------------------------
 (3) _LIGHTBLUE_SetErrorLedValue                           2     2      0   16293
                                             11 COMMON     1     1      0
                                              6 BANK0      1     1      0
           _LIGHTBLUE_UpdateErrorLed
 ---------------------------------------------------------------------------------
 (4) _LIGHTBLUE_UpdateErrorLed                             0     0      0   16262
                       _RN487X_Delay *
                _RN487X_EnterCmdMode
               _RN487X_EnterDataMode
                  _RN487X_SetOutputs
 ---------------------------------------------------------------------------------
 (5) _RN487X_SetOutputs                                    6     4      2    5093
                                              0 BANK0      6     4      2
         _RN487X_ReadDefaultResponse
                     _RN487X_SendCmd
 ---------------------------------------------------------------------------------
 (6) _RN487X_ReadDefaultResponse                           4     4      0     389
                                              3 COMMON     4     4      0
 _RN487X_Read@rn487x_interface$F1835 *
 ---------------------------------------------------------------------------------
 (5) _RN487X_EnterDataMode                                 0     0      0    5386
                     _RN487X_ReadMsg
                     _RN487X_SendCmd
 ---------------------------------------------------------------------------------
 (5) _RN487X_EnterCmdMode                                  0     0      0    5386
                     _RN487X_ReadMsg
                     _RN487X_SendCmd
 ---------------------------------------------------------------------------------
 (6) _RN487X_SendCmd                                       4     3      1    4316
                                              7 COMMON     4     3      1
                       _RN487X_Write *
                  _RN487X_is_tx_done *
 ---------------------------------------------------------------------------------
 (7) _RN487X_is_tx_done                                    0     0      0       0
                 _EUSART1_is_tx_done *
                 _EUSART2_is_tx_done *
 ---------------------------------------------------------------------------------
 (8) _EUSART2_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RN487X_ReadMsg                                       7     4      3    1070
                                              3 COMMON     7     4      3
 _RN487X_Read@rn487x_interface$F1835 *
 ---------------------------------------------------------------------------------
 (4) _RN487X_Read@rn487x_interface$F1835                   0     0      0      74
                       _EUSART1_Read *
                       _EUSART2_Read *
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Read                                         2     2      0      37
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Read                                         2     2      0      37
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _RN487X_Delay                                         2     0      2     397
                                              4 COMMON     2     0      2
                 _DELAY_milliseconds
 ---------------------------------------------------------------------------------
 (3) _DELAY_milliseconds                                   3     1      2     135
                                              1 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_LedState                                   4     4      0    6961
                                              0 BANK0      4     4      0
          _LIGHTBLUE_GetDataLedValue
         _LIGHTBLUE_GetErrorLedValue
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitByte
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_GetErrorLedValue                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_GetDataLedValue                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_AccelSensor                               19    19      0 3090680
                                             25 BANK0     19    19      0
             _BMA253_GetAccelDataXYZ
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitWord
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_SplitWord                                  3     1      2    2607
                                              9 COMMON     3     1      2
                _LIGHTBLUE_SplitByte
 ---------------------------------------------------------------------------------
 (3) _LIGHTBLUE_SplitByte                                  3     2      1    1911
                                              6 COMMON     3     2      1
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_SendPacket                                 4     3      1    4825
                                              7 COMMON     4     3      1
                       _RN487X_Write *
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     858
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _RN487X_Write                                         1     0      1    3185
                                              6 COMMON     1     0      1
                       _EUSART1_Read (ARG) *
                      _EUSART1_Write *
                       _EUSART2_Read (ARG) *
                      _EUSART2_Write *
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Write                                        2     1      1    1525
                                              1 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        2     1      1     166
                                              1 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (2) _BMA253_GetAccelDataXYZ                               3     3      0 3082946
                                             22 BANK0      3     3      0
               _BMA253_GetAccelDataY
               _BMA253_GetAccelDataZ
            _BMA253_NewAccelDataRdyY
            _BMA253_NewAccelDataRdyZ
                 _TMAG5273_GetXValue
 ---------------------------------------------------------------------------------
 (3) _TMAG5273_GetXValue                                   1     1      0  440008
                                             11 COMMON     1     1      0
           _TMAG5273_CalcMeasurement
 ---------------------------------------------------------------------------------
 (3) _TMAG5273_CalcMeasurement                            10     8      2  439938
                                             13 BANK0      9     7      2
              _i2c_read2ByteRegister
 ---------------------------------------------------------------------------------
 (4) _i2c_read2ByteRegister                                9     7      2  439771
                                              4 BANK0      9     7      2
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _BMA253_GetAccelDataZ                                 6     6      0  880902
                                             10 BANK0      6     6      0
            _BMA253_NewAccelDataRdyZ
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_NewAccelDataRdyZ                              1     1      0  440399
                                             11 COMMON     1     1      0
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_GetAccelDataY                                 6     6      0  880902
                                             10 BANK0      6     6      0
            _BMA253_NewAccelDataRdyY
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_NewAccelDataRdyY                              1     1      0  440399
                                             11 COMMON     1     1      0
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (4) _i2c_read1ByteRegister                                6     5      1  440365
                                              4 BANK0      6     5      1
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetAddressNackCallback                          4     0      4    3815
                                              5 COMMON     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (5) _I2C1_Open                                            2     2      0      68
                                              1 COMMON     2     2      0
                _I2C1_MasterClearIrq
                    _I2C1_MasterOpen
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterWrite                                     0     0      0  424509
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterOperation                                 2     2      0  424509
                                              2 BANK0      2     2      0
                   _I2C1_MasterStart
                        _I2C1_Poller
 ---------------------------------------------------------------------------------
 (7) _I2C1_Poller                                          0     0      0  424441
                     _I2C1_MasterFsm
            _I2C1_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterWaitForEvent                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterFsm                                       2     2      0  424441
                                              0 BANK0      2     2      0
               _I2C1_DO_ADDRESS_NACK *
                       _I2C1_DO_IDLE *
                       _I2C1_DO_RCEN *
                      _I2C1_DO_RESET *
                         _I2C1_DO_RX *
                     _I2C1_DO_RX_ACK *
            _I2C1_DO_RX_NACK_RESTART *
               _I2C1_DO_RX_NACK_STOP *
              _I2C1_DO_SEND_ADR_READ *
             _I2C1_DO_SEND_ADR_WRITE *
               _I2C1_DO_SEND_RESTART *
          _I2C1_DO_SEND_RESTART_READ *
         _I2C1_DO_SEND_RESTART_WRITE *
                  _I2C1_DO_SEND_STOP *
                         _I2C1_DO_TX *
                   _I2C1_DO_TX_EMPTY *
                _I2C1_MasterClearIrq
                  _I2C1_MasterIsNack
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_TX_EMPTY                                     2     2      0  106087
                                              9 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterSetIrq
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSetIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_TX                                           2     2      0  106118
                                              9 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterIsNack                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART_WRITE                          0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART_READ                           0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_SEND_ADR_WRITE                               0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_SEND_ADR_READ                                0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendTxData                               1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_ACK                                       0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX                                           2     2      0  106087
                                              9 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
            _I2C1_DO_RX_NACK_RESTART
               _I2C1_DO_RX_NACK_STOP
               _I2C1_MasterGetRxData
                 _I2C1_MasterSendAck
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendAck                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterGetRxData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_NACK_STOP                                 0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_NACK_RESTART                              0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendNack                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RESET                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RCEN                                         0     0      0       0
                 _I2C1_MasterStartRx
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterStartRx                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_IDLE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_ADDRESS_NACK                                 2     2      0  106087
                                              9 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _wr2RegCompleteHandler@i2c1_master_example$F1716     1     0      1   10564
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr2RegCompleteHandler                               1     0      1   10564
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr1RegCompleteHandler@i2c1_master_example$F1710     1     0      1   10564
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr1RegCompleteHandler                               1     0      1   10564
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rdBlkRegCompleteHandler@i2c1_master_example$F1727   1     0      1   10595
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rdBlkRegCompleteHandler                             1     0      1   10595
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd2RegCompleteHandler@i2c1_master_example$F1704     1     0      1   10564
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd2RegCompleteHandler                               1     0      1   10564
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd1RegCompleteHandler@i2c1_master_example$F1693     1     0      1   10564
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd1RegCompleteHandler                               1     0      1   10564
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetDataCompleteCallback                         3     0      3    5479
                                              5 COMMON     3     0      3
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetCallback                                     4     1      3    1257
                                              1 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetBuffer                                       4     0      4    5054
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_STOP                                   0     0      0       0
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterStop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART                                0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterEnableRestart                            0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_CallbackReturnStop                             1     0      1       0
                                              8 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (10) _I2C1_CallbackReturnReset                            1     0      1     385
                                              8 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (18) NULL(Fake)                                           1     0      1       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_Close                                           1     1      0      37
                                              1 COMMON     1     1      0
                _I2C1_MasterClearIrq
                   _I2C1_MasterClose
              _I2C1_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INTERRUPT_InterruptManager                          0     0      0       0
                                NULL *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (16) _PIN_MANAGER_IOC                                     0     0      0       0
                         _IOCAF6_ISR
 ---------------------------------------------------------------------------------
 (17) _IOCAF6_ISR                                          0     0      0       0
                                NULL *
     _IOCAF6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (18) _IOCAF6_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART2_Transmit_ISR                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (16) _EUSART2_Receive_ISR                                 0     0      0       0
                                NULL *
        _EUSART2_DefaultErrorHandler *
 _EUSART2_DefaultFramingErrorHandler *
 _EUSART2_DefaultOverrunErrorHandler *
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (17) _EUSART2_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART2_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART2_DefaultErrorHandler                         0     0      0       0
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (17) _EUSART2_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_Transmit_ISR                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_Receive_ISR                                 0     0      0       0
                                NULL *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (17) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (17) _EUSART1_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (18) NULL(Fake)                                           1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read *
   _EUSART1_Write *
   _EUSART1_is_rx_ready *
   _EUSART2_Read *
   _EUSART2_Write *
   _EUSART2_is_rx_ready *
   _LIGHTBLUE_AccelSensor *
     _BMA253_GetAccelDataXYZ
       _BMA253_GetAccelDataY
         _BMA253_NewAccelDataRdyY
           _i2c_read1ByteRegister
             _I2C1_Close
               _I2C1_MasterClearIrq
               _I2C1_MasterClose
               _I2C1_MasterDisableIrq
             _I2C1_MasterWrite
               _I2C1_MasterOperation
                 _I2C1_MasterStart
                 _I2C1_Poller
                   _I2C1_MasterFsm
                     _I2C1_DO_ADDRESS_NACK *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_SEND_RESTART *
                         _I2C1_MasterEnableRestart
                       _I2C1_DO_SEND_STOP *
                         _I2C1_MasterStop
                       _rd1RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                           _I2C1_SetCallback
                       _rd1RegCompleteHandler@i2c1_master_example$F1693 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rd2RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rd2RegCompleteHandler@i2c1_master_example$F1704 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rdBlkRegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1727 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr1RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr1RegCompleteHandler@i2c1_master_example$F1710 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr2RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr2RegCompleteHandler@i2c1_master_example$F1716 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                     _I2C1_DO_IDLE *
                     _I2C1_DO_RCEN *
                       _I2C1_MasterStartRx
                     _I2C1_DO_RESET *
                     _I2C1_DO_RX *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_RX_NACK_RESTART *
                         _I2C1_MasterSendNack
                       _I2C1_DO_RX_NACK_STOP *
                         _I2C1_MasterSendNack
                       _I2C1_MasterGetRxData *
                       _I2C1_MasterSendAck *
                       _rd1RegCompleteHandler *
                       _rd1RegCompleteHandler@i2c1_master_example$F1693 *
                       _rd2RegCompleteHandler *
                       _rd2RegCompleteHandler@i2c1_master_example$F1704 *
                       _rdBlkRegCompleteHandler *
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1727 *
                       _wr1RegCompleteHandler *
                       _wr1RegCompleteHandler@i2c1_master_example$F1710 *
                       _wr2RegCompleteHandler *
                       _wr2RegCompleteHandler@i2c1_master_example$F1716 *
                     _I2C1_DO_RX_ACK *
                       _I2C1_MasterSendAck
                     _I2C1_DO_RX_NACK_RESTART *
                     _I2C1_DO_RX_NACK_STOP *
                     _I2C1_DO_SEND_ADR_READ *
                       _I2C1_MasterSendTxData
                     _I2C1_DO_SEND_ADR_WRITE *
                       _I2C1_MasterSendTxData
                     _I2C1_DO_SEND_RESTART *
                     _I2C1_DO_SEND_RESTART_READ *
                       _I2C1_MasterEnableRestart
                     _I2C1_DO_SEND_RESTART_WRITE *
                       _I2C1_MasterEnableRestart
                     _I2C1_DO_SEND_STOP *
                     _I2C1_DO_TX *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_SEND_RESTART_READ *
                       _I2C1_DO_SEND_RESTART_WRITE *
                       _I2C1_DO_SEND_STOP *
                       _I2C1_MasterIsNack *
                       _I2C1_MasterSendTxData *
                       _rd1RegCompleteHandler *
                       _rd1RegCompleteHandler@i2c1_master_example$F1693 *
                       _rd2RegCompleteHandler *
                       _rd2RegCompleteHandler@i2c1_master_example$F1704 *
                       _rdBlkRegCompleteHandler *
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1727 *
                       _wr1RegCompleteHandler *
                       _wr1RegCompleteHandler@i2c1_master_example$F1710 *
                       _wr2RegCompleteHandler *
                       _wr2RegCompleteHandler@i2c1_master_example$F1716 *
                     _I2C1_DO_TX_EMPTY *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_SEND_RESTART *
                       _I2C1_DO_SEND_STOP *
                       _I2C1_MasterSetIrq *
                       _rd1RegCompleteHandler *
                       _rd1RegCompleteHandler@i2c1_master_example$F1693 *
                       _rd2RegCompleteHandler *
                       _rd2RegCompleteHandler@i2c1_master_example$F1704 *
                       _rdBlkRegCompleteHandler *
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1727 *
                       _wr1RegCompleteHandler *
                       _wr1RegCompleteHandler@i2c1_master_example$F1710 *
                       _wr2RegCompleteHandler *
                       _wr2RegCompleteHandler@i2c1_master_example$F1716 *
                     _I2C1_MasterClearIrq *
                     _I2C1_MasterIsNack *
                   _I2C1_MasterWaitForEvent
             _I2C1_Open
               _I2C1_MasterClearIrq
               _I2C1_MasterOpen
             _I2C1_SetAddressNackCallback
               _I2C1_SetCallback
             _I2C1_SetBuffer
             _I2C1_SetDataCompleteCallback
         _i2c_read1ByteRegister
       _BMA253_GetAccelDataZ
         _BMA253_NewAccelDataRdyZ
           _i2c_read1ByteRegister
         _i2c_read1ByteRegister
       _BMA253_NewAccelDataRdyY
       _BMA253_NewAccelDataRdyZ
       _TMAG5273_GetXValue
         _TMAG5273_CalcMeasurement
           _i2c_read2ByteRegister
             _I2C1_Close
             _I2C1_MasterWrite
             _I2C1_Open
             _I2C1_SetAddressNackCallback
             _I2C1_SetBuffer
             _I2C1_SetDataCompleteCallback
     _LIGHTBLUE_SendPacket
       _RN487X_Write *
         _EUSART1_Read (ARG) *
         _EUSART1_Write (ARG) *
         _EUSART2_Read (ARG) *
         _EUSART2_Write (ARG) *
         _strlen (ARG) *
       _strlen *
     _LIGHTBLUE_SplitWord
       _LIGHTBLUE_SplitByte
         _strlen
   _LIGHTBLUE_Initialize *
   _LIGHTBLUE_LedState *
     _LIGHTBLUE_GetDataLedValue
     _LIGHTBLUE_GetErrorLedValue
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitByte
   _LIGHTBLUE_ParseIncomingPacket *
     _LIGHTBLUE_PerformAction
       _EUSART1_Write *
       _EUSART2_Write *
       _LIGHTBLUE_SetErrorLedValue *
         _LIGHTBLUE_UpdateErrorLed
           _RN487X_Delay *
             _DELAY_milliseconds
           _RN487X_EnterCmdMode *
             _RN487X_ReadMsg
               _RN487X_Read@rn487x_interface$F1835 *
                 _EUSART1_Read *
                 _EUSART2_Read *
             _RN487X_SendCmd
               _RN487X_Write *
               _RN487X_is_tx_done *
                 _EUSART1_is_tx_done *
                 _EUSART2_is_tx_done *
           _RN487X_EnterDataMode *
             _RN487X_ReadMsg
             _RN487X_SendCmd
           _RN487X_SetOutputs *
             _RN487X_ReadDefaultResponse
               _RN487X_Read@rn487x_interface$F1835 *
             _RN487X_SendCmd
   _LIGHTBLUE_PushButton *
     _LIGHTBLUE_GetButtonValue
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitByte
   _LIGHTBLUE_SendProtocolVersion *
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitByte
     _strlen
   _LIGHTBLUE_SendSerialData *
     _RN487X_Write *
     _strlen *
   _LIGHTBLUE_TemperatureSensor *
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitWord
     _TMAG5273_GetTemperatureValue
       _TMAG5273_CalcMeasurement
   _RN487X_DataReady *
     _RN487X_FilterData
       _RN487X_MessageHandler *
         _rn487x_PrintIndicatorCharacters
           _EUSART1_Write *
           _EUSART2_Write *
         _rn487x_PrintMessage
           _EUSART1_Write *
           _EUSART2_Write *
           _strcpy *
           _strlen *
         _rn487x_PrintMessageEnd
           _EUSART1_Write *
           _EUSART2_Write *
         _rn487x_PrintMessageStart
           _EUSART1_Write *
           _EUSART2_Write *
         _strstr
           _strchr
           _strlen
           _strncmp
       _RN487X_Read@rn487x_interface$F1835 *
     _RN487X_is_rx_ready *
       _EUSART1_is_rx_ready *
       _EUSART2_is_rx_ready *
   _RN487X_Init *
     _RN487X_Delay *
     _RN487X_IndicateRx *
     _RN487X_Read@rn487x_interface$F1835 *
     _RN487X_Reset *
     _RN487X_SetSystemMode *
     _RN487X_is_rx_ready *
   _RN487X_IsConnected *
   _RN487X_Read *
     _RN487X_DataReady
   _RN487X_SetAsyncMessageHandler *
   _RN487X_Write *
   _SYSTEM_Initialize *
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCAF6_SetInterruptHandler
     _PMD_Initialize
     _TMR0_Initialize
   _TMR0_HasOverflowOccured *
   _begin *
     _bitRead8
     _getAngleEn
       _bitRead8
       _readRegister
         _i2c_read1ByteRegister
     _getError
       _bitRead8
       _getDeviceStatus
         _readRegister
     _getLowPower
       _bitRead8
       _readRegister
     _getMagneticChannel
       _bitRead8
       _readRegister
     _getOperatingMode
       _bitRead8
       _readRegister
     _getTemperatureEN
       _bitRead8
       _readRegister
     _isConnected
       _TMAG5273_GetManufacture
         _i2c_read2ByteRegister
         _swap
     _setMagneticChannel
       _bitWrite8
       _getError
       _readRegister
       _writeRegister
         _i2c_write1ByteRegister
           _I2C1_Close
           _I2C1_MasterWrite
           _I2C1_Open
           _I2C1_SetAddressNackCallback
           _I2C1_SetBuffer
           _I2C1_SetDataCompleteCallback
     _setOperatingMode
       _bitWrite8
       _getError
       _readRegister
       _writeRegister
     _setTemperatureEn
       _bitWrite8
       _getError
       _readRegister
       _writeRegister
     _setXYAxisRange
       _bitWrite8
       _getError
       _readRegister
       _writeRegister
     _setZAxisRange
       _bitWrite8
       _getError
       _readRegister
       _writeRegister

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART1_Receive_ISR *
     NULL(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _EUSART2_Receive_ISR *
     NULL(Fake) *
     _EUSART2_DefaultErrorHandler *
       _EUSART2_RxDataHandler
     _EUSART2_DefaultFramingErrorHandler *
     _EUSART2_DefaultOverrunErrorHandler *
     _EUSART2_RxDataHandler *
   _EUSART2_Transmit_ISR *
   _PIN_MANAGER_IOC *
     _IOCAF6_ISR
       NULL(Fake) *
       _IOCAF6_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2D      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     235       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      1      47      10       88.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      11      12       21.2%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      40      14       80.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      50      16      100.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0      50      18      100.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0      50      20      100.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              50      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BANK23              50      0       0      52        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BANK24              50      0       0      54        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BANK25              20      0       0      56        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     235      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Dec 23 21:41:09 2024

                                 _eusart1TxBufferRemaining 0055  
                                   ?_EUSART2_RxDataHandler 0070  
                          __end_of_TMR0_HasOverflowOccured 1005  
                                                       l35 1667  
                                                       l44 08CE  
                                                       l53 10C1  
                                                       l29 1639  
                                                       l56 10D2  
                                      _do_I2C_SEND_RESTART 0000  
                                         ?_getDeviceStatus 0070  
                                  getLowPower@lowPowerMode 002F  
                                                      l121 1EFC  
                                                      l202 1F08  
                                                      l130 118E  
                                                      l211 10B0  
                                                      l124 120B  
                                                      l205 1F02  
                                                      l133 1495  
                                                      l221 083A  
                                                      l214 13AC  
                                                      l230 085C  
                                                      l127 1695  
                                                      l208 1EEA  
                                                      l224 083C  
                                                      l145 070E  
                                                      l139 175B  
                                                      l164 04DF  
                                                      l501 1109  
                                                      l510 1727  
                                                      l193 0F64  
                                                      l522 111C  
                                                      l187 0594  
                                                      l196 1075  
                                                      l534 0C00  
                                                      l199 16F4  
                                                      l537 112F  
                                                      l561 135A  
                                                      l546 0A88  
                                                      l549 1142  
                                                      l663 07B6  
                                                      l673 12DA  
                                                      l682 100F  
                                                      l763 0FFF  
                                                      l679 103F  
                                                      l783 0374  
                                                      l759 0FFC  
                                                      l875 0985  
                                                      l789 0377  
                                                      l893 0948  
                                                      l869 0A42  
                                                      l985 124D  
                                                      l995 0CF4  
                                                      l998 0CF3  
                                             ?_RN487X_Init 0070  
                                             ?_RN487X_Read 0070  
                               __end_of_DELAY_milliseconds 11F6  
                             LIGHTBLUE_SendPacket@packetID 007A  
                                    ?_I2C1_MasterOperation 0070  
                   __end_of_EUSART2_SetFramingErrorHandler 1F33  
                           _EUSART2_SetFramingErrorHandler 1F2D  
                                                      _dos 0067  
                                                      _uno 0068  
                               __end_of_getMagneticChannel 04BE  
                               __end_of_setMagneticChannel 0378  
                                                      wreg 0009  
                                   ?_I2C1_MasterSendTxData 0070  
                                     _I2C1_DO_RX_NACK_STOP 1ED2  
                                ?_I2C1_MasterEnableRestart 0070  
                          BMA253_NewAccelDataRdyY@yNewData 007B  
                                     I2C1_SetBuffer@buffer 0071  
                                                     l1005 04BD  
                                                     l1123 11DF  
                                                     l2012 1FD3  
                                  ??_rd2RegCompleteHandler 0079  
                                                     l2006 1237  
                                                     l1230 1325  
                                                     l1223 127B  
                                                     l2009 1FC9  
                                                     l1233 11CA  
                                                     l1242 1067  
                                                     l1090 0D48  
                                                     l1227 1292  
                                                     l2108 1F4A  
                                                     l1245 13E6  
                                                     l1093 0D47  
                                                     l1502 17C8  
                                                     l1239 1083  
                                                     l1183 0D9C  
                                            ?_RN487X_Delay 0074  
                                                     l2400 1791  
                                                     l1440 101B  
                                                     l2128 11B6  
                                                     l2410 1407  
                                                     l2146 1004  
                                                     l1443 1FAB  
                                                     l1611 13C8  
                                                     l1179 1F64  
                                                     l2404 12C2  
                                                     l1452 1F74  
                                                     l1540 16C3  
                                                     l1461 1FFF  
                                                     l1533 0E50  
                                                     l1437 1E8E  
                                                     l1509 17FF  
                                                     l1390 117B  
                                                     l1446 1FB5  
                                                     l1470 1FF4  
                                                     l1630 0B65  
                                                     l1606 1221  
                                                     l2423 10A1  
                                                     l1551 15B1  
                                                     l1711 1F8F  
                                                     l1384 1155  
                                                     l2520 1EC2  
                                                     l2416 1EE5  
                                                     l2432 1FE9  
                                                     l1456 1FFA  
                                                     l1393 10F6  
                                                     l1465 1FEF  
                                                     l1481 1026  
                                                     l1473 101C  
                                                     l1449 1FBF  
                                                     l1705 0A03  
                                                     l2097 07FF  
                                                     l2426 1FDE  
                                                     l1730 14A5  
                                                     l1714 1EAA  
                                                     l1562 0ED8  
                                                     l1618 1033  
                                                     l2443 0824  
                                                     l1387 1168  
                                                     l2523 1EC7  
                                                     l1459 1FFD  
                                                     l1483 1027  
                                                     l1627 0B63  
                                                     l1396 1375  
                                                     l2532 1ED6  
                                                     l1724 1534  
                                                     l1580 1390  
                                                     l1468 1FF2  
                                                     l1476 1023  
                                                     l1628 0B5F  
                                                     l2700 05D1  
                                                     l2613 1E79  
                                                     l2517 1EBD  
                                                     l2453 155D  
                                                     l1733 14BC  
                                                     l3333 11A2  
                                                     l2462 1F6C  
                                                     l2526 1ECC  
                                                     l2622 1EF1  
                                                     l1486 160B  
                                                     l2535 1EDB  
                                                     l1575 1264  
                                                     l1479 1025  
                                                     l2711 0638  
                                                     l2616 1E73  
                                                     l2552 1E6E  
                                                     l2456 1EB8  
                                                     l2544 14E4  
                                                     l1496 146F  
                                                     l3360 130C  
                                                     l3352 0BB2  
                                                     l1912 1F14  
                                                     l2465 0DD3  
                                                     l2481 0AF3  
                                                     l2529 1ED1  
                                                     l2449 104C  
                                                     l1729 149C  
                                                     l1489 0C4E  
                                                     l1921 1F26  
                                                     l2482 0B19  
                                                     l2538 1EE0  
                                                     l2626 1EF6  
                                                     l2634 11F5  
                                                     l1762 1F32  
                                                     l2555 1E70  
                                                     l2571 1E88  
                                                     l2619 1E8B  
                                                     l2459 1F86  
                                                     l3339 12F3  
                                                     l1587 0AD0  
                                                     l1915 1F1A  
                                                     l1771 1F44  
                                                     l2468 0DF2  
                                                     l1924 1F20  
                                                     l2396 1FA1  
                                                     l2493 1F5D  
                                                     l2565 1059  
                                                     l3365 0CA1  
                                                     l1765 1F38  
                                                     l2574 1EB3  
                                                     l3358 12F5  
                                                     l1918 1F0E  
                                                     l1774 1F3E  
                                                     l2583 1E85  
                                                     l2399 1790  
                                                     l1855 1F98  
                                                     l2568 1E76  
                                                     l2592 1EF0  
                                                     l1768 1F2C  
                                                     l2577 1E7F  
                                                     l1873 14EB  
                                                     l1849 09C4  
                                                     l2586 1E7C  
                                                     l1874 14F4  
                                                     l1858 1EAE  
                                                     l2595 1EA6  
                                                     l2499 15DE  
                                                     l1868 1586  
                                                     l2589 1E82  
                                                     l1877 150C  
                                                     l2598 1EA2  
                          BMA253_NewAccelDataRdyZ@zNewData 007B  
                                                     STR_1 2000  
                                                     STR_2 1891  
                                                     STR_3 1891  
                                                     STR_4 187A  
                                                     STR_5 187A  
                                                     STR_6 2000  
                                                     _LATA 0018  
                                                     _LATB 0019  
                                                     _LATC 001A  
                                                     _LATE 001C  
                               LIGHTBLUE_PushButton@button 0020  
                                                     _PMD0 0796  
                                                     _PMD1 0797  
                                                     _PMD2 0798  
                                                     _PMD3 0799  
                                                     _PMD4 079A  
                                                     _PMD5 079B  
                                                     _PMD6 079C  
                                                     _PMD7 079D  
                                                     u9600 1545  
                                                     u9601 1544  
                                                     u9530 0808  
                                                     u9610 104C  
                                                     u9531 0807  
                                                     u9611 104B  
                                                     u9540 1098  
                                                     u9700 14F0  
                                                     u9620 1513  
                                                     u9541 1097  
                                                     u9701 14EF  
                                                     u9621 1512  
                                                     u9550 0DA5  
                                                     u9710 1507  
                                                     u9630 152B  
                                                     u9551 0DA4  
                                                     u9711 1506  
                                                     u9631 152A  
                                                     u9560 0DEF  
                                                     u9720 1052  
                                                     u9800 0BFF  
                                                     u9640 149C  
                                                     u9561 0DEE  
                                                     u9721 1051  
                                                     u9801 0BFE  
                                                     u9641 149B  
                                                     u9570 0AEE  
                                                     u9730 13F0  
                                                     u9650 14A1  
                                                     u9810 12ED  
                                                     u9571 0AED  
                                                     u9731 13EF  
                                                     u9651 14A0  
                                                     u9811 12EC  
                                                     u9580 1EF6  
                                                     u9740 13F8  
                                                     u9660 14B7  
                                                     u9820 11F5  
                                                     u9900 0E86  
                                                     u9581 1EF5  
                                                     u9741 13F7  
                                                     u9661 14B6  
                                                     u9821 11F4  
                                                     u9901 0E85  
                                                     u9590 153D  
                                                     u9750 1764  
                                                     u9670 1564  
                                                     u9910 0E8C  
                                                     u9830 11A2  
                                                     u9591 153C  
                                                     u9751 1763  
                                                     u9671 1563  
                                                     u9911 0E8B  
                                                     u9831 11A1  
                                                     u9760 12B2  
                                                     u9680 157D  
                                                     u9840 16A7  
                                                     u9920 0C5C  
                                                     u9761 12B1  
                                                     u9681 157C  
                                                     u9841 16A6  
                                                     u9921 0C5B  
                                                     u9770 0BC5  
                                                     u9690 14EB  
                                                     u9850 16C3  
                                                     u9930 0C74  
                                                     u9771 0BC4  
                                                     u9691 14EA  
                                                     u9851 16C2  
                                                     u9931 0C73  
                                                     u9780 0BEF  
                                                     u9860 15A4  
                                                     u9940 0C7D  
                                                     u9781 0BEE  
                                                     u9861 15A3  
                                                     u9941 0C7C  
                                                     u9790 0BF4  
                                                     u9870 15B0  
                                                     u9950 0C83  
                                                     u9791 0BF3  
                                                     u9871 15AF  
                                                     u9951 0C82  
                                                     u9880 0E77  
                                                     u9960 0C93  
                                                     u9881 0E76  
                                                     u9961 0C92  
                                                     u9890 0E7D  
                                                     u9970 12FF  
                                                     u9891 0E7C  
                                                     u9971 12FE  
                                                     u9980 130B  
                                                     u9981 130A  
                                                     u9990 0A4F  
                                                     u9991 0A4E  
                                            ?_RN487X_Reset 0071  
                          BMA253_GetAccelDataXYZ@accelData 0036  
                                                     _WPUA 1F39  
                                                     _WPUB 1F44  
                                                     _WPUC 1F4F  
                                                     _WPUE 1F65  
                                    ??_EUSART2_Receive_ISR 0071  
                                  ??_wr2RegCompleteHandler 0079  
                                         ??_I2C1_MasterFsm 0020  
                                            _EUSART1_Write 14E5  
                                            ?_RN487X_Write 0076  
                                            _EUSART2_Write 1496  
                                ??_I2C1_CallbackReturnStop 0079  
                                                     __hex 01A0  
                                                     _main 0595  
                                                     _peek 005F  
                                            ?_EUSART1_Read 0070  
                                                     _seis 00E9  
                                                     _uart 1800  
                                            ?_EUSART2_Read 0070  
                                           _RN487X_ReadMsg 1587  
                                                     fsr0h 0005  
                                                     fsr1h 0007  
                                                     indf0 0000  
                                                     fsr0l 0004  
                                                     indf1 0001  
                                                     fsr1l 0006  
                                                     _tres 0066  
                                                     _swap 11B7  
                                                     btemp 007E  
                                                     _zero 0069  
                            ??_LIGHTBLUE_TemperatureSensor 007C  
                                           _RN487X_SendCmd 1696  
                         RN487X_SetOutputs@stateHighNibble 0025  
                                                     start 0055  
                                           _setXYAxisRange 0A04  
                                         ??_I2C1_SetBuffer 0075  
                             __end_of_EUSART2_Transmit_ISR 142A  
                              __end_of_RN487X_EnterCmdMode 1265  
                                             _statusBuffer 0320  
                                         _setTemperatureEn 090C  
                                        ?_getTemperatureEN 0070  
                                  ??_LIGHTBLUE_AccelSensor 007C  
                            I2C1_CallbackReturnStop@funPtr 0078  
                               __end_of_TMAG5273_GetXValue 1068  
                                    __end_of_setZAxisRange 0986  
                    __end_of_LIGHTBLUE_ParseIncomingPacket 0595  
                            _LIGHTBLUE_ParseIncomingPacket 04BE  
                                  __end_of_TMR0_Initialize 11B7  
                                             _do_I2C_RESET 0000  
                                       ??_getTemperatureEN 002C  
                                   _i2c_write1ByteRegister 16F5  
                            __end_of_OSCILLATOR_Initialize 1FCA  
                                                    l13000 1507  
                                                    l13010 1053  
                                                    l13002 1508  
                                                    l13020 1E74  
                                                    l13012 1055  
                                                    l13004 150A  
                                                    l13100 1FA2  
                                                    l13030 13F8  
                                                    l13022 13E9  
                                                    l13014 1058  
                                                    l13006 104D  
                                                    l13032 13FC  
                                                    l13024 13F0  
                                                    l13008 1052  
                                                    l13120 0BD9  
                                                    l13104 1FAC  
                                                    l13200 0E80  
                                                    l14000 0407  
                                                    l13018 1E77  
                                                    l13034 13FF  
                                                    l13026 13F1  
                                                    l13050 1768  
                                                    l13042 175D  
                                                    l13130 0BF5  
                                                    l13122 0BE2  
                                                    l13114 0BBB  
                                                    l13202 0E86  
                                                    l14010 0413  
                                                    l14002 040C  
                                                    l13036 1402  
                                                    l13028 13F3  
                                                    l13060 177E  
                                                    l13052 176F  
                                                    l13044 1764  
                                                    l13132 0BF9  
                                                    l13124 0BE5  
                                                    l13116 0BC5  
                                                    l13108 0BB5  
                                                    l13140 12E0  
                                                    l13204 0E8C  
                                                    l13212 0E90  
                                                    l13300 0AAA  
                                                    l13220 0C50  
                                                    l14100 04A6  
                                                    l14012 0418  
                                                    l13038 1405  
                                                    l13070 178F  
                                                    l13062 1783  
                                                    l13054 1774  
                                                    l13046 1766  
                                                    l13134 0BFF  
                                                    l13126 0BEF  
                                                    l13118 0BCE  
                                                    l13142 12E4  
                                                    l13150 11E1  
                                                    l13206 0E8E  
                                                    l13214 0E98  
                                                    l13310 0AB9  
                                                    l13302 0AAD  
                                                    l13230 0C67  
                                                    l13222 0C5C  
                                                    l14110 04B2  
                                                    l14030 0438  
                                                    l14014 041D  
                                                    l14022 0424  
                                                    l13080 12AB  
                                                    l12600 1101  
                                                    l13064 1784  
                                                    l13056 1775  
                                                    l13048 1767  
                                                    l13400 10B1  
                                                    l13144 12ED  
                                                    l13152 11E9  
                                                    l13160 1699  
                                                    l13216 0ED7  
                                                    l13320 0AC7  
                                                    l13312 0ABB  
                                                    l13304 0AAF  
                                                    l14200 1FF5  
                                                    l13240 0C93  
                                                    l13232 0C6B  
                                                    l14112 04B7  
                                                    l14040 0444  
                                                    l14024 0429  
                                                    l14016 0422  
                                                    l14008 040E  
                                                    l13090 12BB  
                                                    l13082 12B2  
                                                    l12602 1108  
                                                    l12610 111B  
                                                    l13066 1789  
                                                    l13058 177A  
                                                    l13074 1FDF  
                                                    l13402 10C0  
                                                    l13138 12DB  
                                                    l13170 1589  
                                                    l13162 16A7  
                                                    l13330 1387  
                                                    l13322 0ACD  
                                                    l13314 0ABF  
                                                    l13306 0AB1  
                                                    l14202 1FEA  
                                                    l13154 1190  
                                                    l13250 1301  
                                                    l13234 0C74  
                                                    l13226 0C5F  
                                                    l14210 09CE  
                                                    l14114 04BC  
                                                    l14106 04A8  
                                                    l14042 0449  
                                                    l14050 0450  
                                                    l14026 042E  
                                                    l14130 11DE  
                                                    l13092 12BE  
                                                    l13084 12B3  
                                                    l13076 1EE1  
                                                    l13068 178C  
                                                    l13500 1655  
                                                    l13260 0A4F  
                                                    l13148 11E0  
                                                    l13340 1F6D  
                                                    l13172 1593  
                                                    l13180 15AA  
                                                    l13164 16B9  
                                                    l13316 0AC3  
                                                    l13308 0AB5  
                                                    l13412 1391  
                                                    l14204 101E  
                                                    l13156 1192  
                                                    l13252 130B  
                                                    l13244 12F5  
                                                    l13236 0C7D  
                                                    l13228 0C63  
                                                    l14220 09E0  
                                                    l14212 09D7  
                                                    l14300 07D0  
                                                    l13420 1265  
                                                    l14140 0D09  
                                                    l14108 04AD  
                                                    l14052 0455  
                                                    l14044 044E  
                                                    l14028 0433  
                                                    l14036 043A  
                                                    l14124 11CB  
                                                    l13086 12B5  
                                                    l13094 12C1  
                                                    l12606 110A  
                                                    l12614 111D  
                                                    l12622 1130  
                                                    l12630 1340  
                                                    l12702 1EA3  
                                                    l12710 1ED2  
                                                    l13406 10C2  
                                                    l13270 0A77  
                                                    l13262 0A58  
                                                    l13502 105B  
                                                    l13510 16E1  
                                                    l13182 15B0  
                                                    l13174 15A4  
                                                    l13166 16BD  
                                                    l13158 1697  
                                                    l13326 1376  
                                                    l13190 0E5C  
                                                    l13318 0AC5  
                                                    l13414 1394  
                                                    l13350 1453  
                                                    l13246 12FF  
                                                    l13238 0C83  
                                                    l14230 09F9  
                                                    l14222 09E2  
                                                    l14214 09DA  
                                                    l14206 09C5  
                                                    l14310 07D6  
                                                    l14302 07D1  
                                                    l13430 127A  
                                                    l13422 1273  
                                                    l13334 1036  
                                                    l14142 0D17  
                                                    l14134 0CF5  
                                                    l14070 0475  
                                                    l14054 045A  
                                                    l14038 043F  
                                                    l14126 11CB  
                                                    l13088 12B8  
                                                    l12608 1114  
                                                    l12616 1127  
                                                    l12624 113A  
                                                    l12632 1359  
                                                    l12640 1154  
                                                    l12800 0AEE  
                                                    l12720 1EC6  
                                                    l12712 1ED5  
                                                    l12704 1ED7  
                                                    l13408 10D1  
                                                    l13264 0A63  
                                                    l13256 0A45  
                                                    l13512 16EC  
                                                    l13504 16C5  
                                                    l14400 1489  
                                                    l13168 1587  
                                                    l13328 1381  
                                                    l13192 0E66  
                                                    l13416 13A1  
                                                    l13352 145F  
                                                    l13360 179D  
                                                    l13344 15DF  
                                                    l14240 0988  
                                                    l13600 1F2D  
                                                    l14232 09FB  
                                                    l14224 09E9  
                                                    l14216 09DC  
                                                    l14208 09C7  
                                                    l14320 07E0  
                                                    l14312 07D8  
                                                    l14304 07D2  
                                                    l13424 1278  
                                                    l13336 103E  
                                                    l14144 0D1C  
                                                    l14152 0D23  
                                                    l14136 0CF5  
                                                    l14080 0481  
                                                    l14072 047A  
                                                    l14056 045F  
                                                    l14064 0466  
                                                    l14128 11D1  
                                                    l13440 11B7  
                                                    l13520 0D49  
                                                    l12618 112E  
                                                    l12626 1141  
                                                    l12730 1E6F  
                                                    l12802 0AF1  
                                                    l12706 1EDA  
                                                    l13266 0A6C  
                                                    l13258 0A45  
                                                    l13450 13CB  
                                                    l13098 1010  
                                                    l13514 16F0  
                                                    l13506 16CF  
                                                    l14402 148F  
                                                    l13178 15A6  
                                                    l13274 124E  
                                                    l13194 0E71  
                                                    l13186 0E51  
                                                    l13290 0A99  
                                                    l13282 0A89  
                                                    l13418 13A9  
                                                    l14410 173B  
                                                    l13354 1464  
                                                    l13362 17AC  
                                                    l13346 0C01  
                                                    l13370 0B7B  
                                                    l13610 1F0F  
                                                    l14250 099F  
                                                    l14242 098F  
                                                    l13602 1F33  
                                                    l14234 09FC  
                                                    l14226 09F0  
                                                    l14218 09DE  
                                                    l14330 07EC  
                                                    l14322 07E1  
                                                    l14314 07DA  
                                                    l14306 07D3  
                                                    l14154 0D28  
                                                    l14162 0D2F  
                                                    l14146 0D21  
                                                    l14138 0CFB  
                                                    l14082 0486  
                                                    l14066 046B  
                                                    l14058 0464  
                                                    l13442 11B9  
                                                    l13434 1F5E  
                                                    l13530 0D85  
                                                    l13522 0D4E  
                                                    l12580 0808  
                                                    l12660 10E4  
                                                    l12636 1143  
                                                    l12644 1156  
                                                    l12652 1169  
                                                    l12716 1E83  
                                                    l12724 1E89  
                                                    l12740 1EB7  
                                                    l12812 0AF9  
                                                    l12900 1538  
                                                    l13268 0A6F  
                                                    l13452 13D6  
                                                    l13620 089C  
                                                    l13508 16DD  
                                                    l13276 1255  
                                                    l13196 0E77  
                                                    l13188 0E52  
                                                    l13292 0A9D  
                                                    l13284 0A90  
                                                    l13516 10A4  
                                                    l14412 1740  
                                                    l14404 1728  
                                                    l14420 067B  
                                                    l13348 144E  
                                                    l13364 17B1  
                                                    l13356 1794  
                                                    l13380 0BA8  
                                                    l13372 0B8D  
                                                    l13612 1F15  
                                                    l14260 09B8  
                                                    l14252 09A1  
                                                    l14244 0998  
                                                    l13604 1F27  
                                                    l14236 0A01  
                                                    l14228 09F7  
                                                    l14340 07F8  
                                                    l14332 07EF  
                                                    l14324 07E2  
                                                    l14316 07DC  
                                                    l14308 07D4  
                                                    l14164 0D34  
                                                    l14172 0D3B  
                                                    l14156 0D2D  
                                                    l14084 048B  
                                                    l14092 0492  
                                                    l14068 0470  
                                                    l13444 11BB  
                                                    l13700 12D7  
                                                    l13436 1F63  
                                                    l13532 0D8A  
                                                    l13524 0D5B  
                                                    l12734 1E71  
                                                    l12582 0817  
                                                    l12590 1FD4  
                                                    l12662 10EE  
                                                    l12638 114D  
                                                    l12646 1160  
                                                    l12654 1173  
                                                    l12670 1374  
                                                    l12726 1E6D  
                                                    l12830 1F5C  
                                                    l12718 1EC3  
                                                    l12902 153D  
                                                    l12910 1040  
                                                    l13454 13D6  
                                                    l13630 08C1  
                                                    l13622 08A4  
                                                    l13278 125B  
                                                    l13198 0E7D  
                                                    l13294 0AA1  
                                                    l13286 0A94  
                                                    l13518 10AD  
                                                    l14414 1755  
                                                    l14406 172C  
                                                    l14430 06C6  
                                                    l14422 068D  
                                                    l13358 179A  
                                                    l13382 0BB1  
                                                    l13366 0B68  
                                                    l13470 17F0  
                                                    l13462 17C9  
                                                    l14190 13B5  
                                                    l13614 1F09  
                                                    l13606 1F1B  
                                                    l14262 09BA  
                                                    l14254 09A3  
                                                    l14246 099B  
                                                    l14238 0986  
                                                    l14350 1FC4  
                                                    l14342 07FB  
                                                    l14334 07F2  
                                                    l14326 07E3  
                                                    l14318 07DE  
                                                    l14270 1FCA  
                                                    l14174 0D40  
                                                    l14166 0D39  
                                                    l14094 0497  
                                                    l14086 0490  
                                                    l14078 047C  
                                                    l13446 11CA  
                                                    l13550 1319  
                                                    l13534 0D8F  
                                                    l13526 0D69  
                                                    l13390 16FF  
                                                    l13710 00AB  
                                                    l14510 071C  
                                                    l12592 1E7D  
                                                    l12584 1093  
                                                    l12664 10F5  
                                                    l12648 1167  
                                                    l12656 117A  
                                                    l12840 15B9  
                                                    l12736 1EB4  
                                                    l12744 1F7E  
                                                    l12752 1F65  
                                                    l12760 0D9D  
                                                    l12808 0AF5  
                                                    l12680 1EB9  
                                                    l12904 1545  
                                                    l12912 1041  
                                                    l13456 13D8  
                                                    l13632 08C5  
                                                    l13624 08AC  
                                                    l13640 0EF7  
                                                    l14360 1EF7  
                                                    l13296 0AA4  
                                                    l13288 0A97  
                                                    l14440 04C1  
                                                    l14408 1735  
                                                    l14432 06F6  
                                                    l14424 0692  
                                                    l14416 0666  
                                                    l13376 0B90  
                                                    l13368 0B6E  
                                                    l13472 17F3  
                                                    l13464 17D9  
                                                    l14192 13C3  
                                                    l14184 13AD  
                                                    l13608 1F21  
                                                    l14264 09BC  
                                                    l14256 09AA  
                                                    l14248 099D  
                                                    l14272 1F99  
                                                    l14352 1FC7  
                                                    l13616 1F45  
                                                    l14344 07FD  
                                                    l14336 07F4  
                                                    l14328 07EA  
                                                    l14280 07B7  
                                                    l14176 0D45  
                                                    l14096 049C  
                                                    l13704 12D9  
                                                    l13560 127C  
                                                    l13536 0D94  
                                                    l13544 0D9B  
                                                    l13528 0D77  
                                                    l13392 1708  
                                                    l13720 00F3  
                                                    l13712 00B6  
                                                    l13800 0934  
                                                    l14520 0753  
                                                    l14512 0727  
                                                    l12594 1E80  
                                                    l12586 1098  
                                                    l12578 0802  
                                                    l12674 1EEB  
                                                    l12842 15BC  
                                                    l12834 15B2  
                                                    l12738 1EB6  
                                                    l12746 1F80  
                                                    l12754 1F67  
                                                    l12818 0AFD  
                                                    l12826 1F57  
                                                    l12682 1EBC  
                                                    l12906 1548  
                                                    l12914 1044  
                                                    l13490 1616  
                                                    l13458 13E2  
                                                    l13626 08B0  
                                                    l13618 0898  
                                                    l13650 0F4D  
                                                    l13642 0EFC  
                                                    l14370 1668  
                                                    l12930 1525  
                                                    l12922 150D  
                                                    l13298 0AA6  
                                                    l14450 04E4  
                                                    l14442 04C4  
                                                    l14434 06FA  
                                                    l14426 069D  
                                                    l14418 0670  
                                                    l13634 1077  
                                                    l14362 11F6  
                                                    l13482 1F90  
                                                    l13378 0BA3  
                                                    l13474 17F7  
                                                    l13466 17DD  
                                                    l13570 0B25  
                                                    l14186 13B3  
                                                    l14610 121B  
                                                    l14266 09BD  
                                                    l14258 09B1  
                                                    l14274 1F9B  
                                                    l14354 1FC8  
                                                    l14346 1FC0  
                                                    l14338 07F6  
                                                    l14290 07CA  
                                                    l14282 07B9  
                                                    l14098 04A1  
                                                    l13562 1285  
                                                    l13538 0D99  
                                                    l13394 1713  
                                                    l13386 16F6  
                                                    l13554 1007  
                                                    l13730 0161  
                                                    l13722 011F  
                                                    l13714 00BB  
                                                    l13810 0F67  
                                                    l13802 093E  
                                                    l14522 075E  
                                                    l14514 0732  
                                                    l14506 070F  
                                                    l12908 1E7A  
                                                    l12588 10A0  
                                                    l12668 135B  
                                                    l12596 1E9F  
                                                    l12836 15B5  
                                                    l12852 15C2  
                                                    l12748 1F85  
                                                    l12756 1F6B  
                                                    l12780 0DD5  
                                                    l12772 0DAE  
                                                    l12764 0DA6  
                                                    l12828 1F59  
                                                    l12692 1EC8  
                                                    l12860 1ECD  
                                                    l12916 1047  
                                                    l13492 1627  
                                                    l13628 08B9  
                                                    l13652 0F51  
                                                    l13644 0F07  
                                                    l13636 1069  
                                                    l14380 168F  
                                                    l14372 166A  
                                                    l13660 1EFD  
                                                    l12940 1533  
                                                    l12932 152B  
                                                    l12924 150D  
                                                    l14460 0507  
                                                    l14452 04EA  
                                                    l14444 04C9  
                                                    l14436 0703  
                                                    l14428 06B4  
                                                    l14364 11F8  
                                                    l13564 1FB6  
                                                    l13476 17FA  
                                                    l13468 17EA  
                                                    l13580 0B42  
                                                    l13572 0B2A  
                                                    l14196 13C7  
                                                    l14612 121E  
                                                    l14604 120D  
                                                    l14268 09C2  
                                                    l14276 1F9D  
                                                    l14348 1FC3  
                                                    l14292 07CC  
                                                    l14284 07BB  
                                                    l14356 11A3  
                                                    l13900 0CC8  
                                                    l13548 130D  
                                                    l13396 171C  
                                                    l13388 16F6  
                                                    l13740 01CE  
                                                    l13732 0167  
                                                    l13724 0127  
                                                    l13716 00E6  
                                                    l13708 00AB  
                                                    l13820 0F98  
                                                    l13812 0F72  
                                                    l13804 0945  
                                                    l14540 07A1  
                                                    l14532 078F  
                                                    l14524 0769  
                                                    l14516 073D  
                                                    l14508 0712  
                     __end_of_TMAG5273_GetTemperatureValue 1084  
                             _TMAG5273_GetTemperatureValue 1076  
                                                    l12598 10F7  
                                                    l12678 1EB0  
                                                    l12846 15BE  
                                                    l12782 0DE4  
                                                    l12686 1EBE  
                                                    l12694 1ECB  
                                                    l12862 1ED0  
                                                    l12870 1EDF  
                                                    l13486 160E  
                                                    l13494 163C  
                                                    l12950 14A6  
                                                    l13654 0F59  
                                                    l13646 0F27  
                                                    l13638 0EDA  
                                                    l14374 166E  
                                                    l14390 1470  
                                                    l12934 152C  
                                                    l12926 1513  
                                                    l12918 1EA7  
                                                    l13670 0828  
                                                    l14470 0527  
                                                    l14462 050D  
                                                    l14454 04F3  
                                                    l14446 04CF  
                                                    l14438 04C0  
                                                    l14382 117C  
                                                    l14366 11FC  
                                                    l13478 1F87  
                                                    l14622 1E8C  
                                                    l13590 0B5C  
                                                    l13582 0B49  
                                                    l13574 0B30  
                                                    l14630 1030  
                                                    l14606 1212  
                                                    l14278 1FA0  
                                                    l14294 07CD  
                                                    l14286 07C6  
                                                    l14358 11B1  
                                                    l13910 0CD4  
                                                    l13902 0CCD  
                                                    l13558 127C  
                                                    l13398 171F  
                                                    l13750 0217  
                                                    l13742 01D6  
                                                    l13734 0194  
                                                    l13726 012D  
                                                    l13718 00EE  
                                                    l13830 0FD8  
                                                    l13822 0FAD  
                                                    l13814 0F77  
                                                    l14518 0748  
                                                    l12784 0DEF  
                                                    l12768 0DAA  
                                                    l12688 1EC1  
                                                    l13488 160E  
                                                    l13496 163C  
                                                    l12952 14AD  
                                                    l12960 14BA  
                                                    l12944 1496  
                                                    l13648 0F3F  
                                                    l14376 1679  
                                                    l13664 1EE6  
                                                    l14392 1475  
                                                    l12936 152E  
                                                    l12928 1521  
                                                    l13672 0836  
                                                    l13680 0854  
                                                    l14480 0542  
                                                    l14472 0529  
                                                    l14464 0517  
                                                    l14456 04FA  
                                                    l14448 04D8  
                                                    l13656 1F03  
                                                    l14384 1181  
                                                    l14368 1205  
                                                    l14640 0E42  
                                                    l13592 0B61  
                                                    l13584 0B4F  
                                                    l13576 0B31  
                                                    l13568 0B1A  
                                                    l14632 1032  
                                                    l14608 1218  
                                                    l14296 07CE  
                                                    l14288 07C8  
                                                    l13920 0CE0  
                                                    l13912 0CD9  
                                                    l13760 0288  
                                                    l13752 0244  
                                                    l13744 01DC  
                                                    l13736 019C  
                                                    l13728 0159  
                                                    l13832 0FDE  
                                                    l13824 0FB5  
                                                    l13816 0F8B  
                                                    l13808 0F67  
                                                    l13840 0A06  
                                                    l14544 07AA  
                                                    l14536 0798  
                                                    l14528 0772  
                                                    l12698 1E86  
                                                    l12786 0DF1  
                                                    l12778 0DB2  
                                                    l12794 0AD1  
                                                    l12866 1EDC  
                                                    l12882 14C6  
                                                    l12874 14BD  
                                                    l13498 1644  
                                                    l12954 14B1  
                                                    l12946 1496  
                                                    l14378 1684  
                                                    l14394 1476  
                                                    l12938 1531  
                                                    l12970 1564  
                                                    l12962 1EAB  
                                                    l13674 083E  
                                                    l14482 055C  
                                                    l14474 052C  
                                                    l14466 051F  
                                                    l14458 0504  
                                                    l14386 1182  
                                                    l13578 0B36  
                                                    l13586 0B54  
                                                    l14626 1028  
                                                    l14618 1220  
                                                    l14298 07CF  
                                                    l14650 122E  
                                                    l14642 1222  
                                                    l13930 0CEC  
                                                    l13922 0CE5  
                                                    l13770 02F5  
                                                    l13762 028E  
                                                    l13754 024C  
                                                    l13746 0209  
                                                    l13738 01A2  
                                                    l13834 0FF4  
                                                    l13826 0FBB  
                                                    l13818 0F93  
                                                    l13850 0A28  
                                                    l13842 0A06  
                                                    l12796 0ADF  
                                                    l12868 1EDE  
                                                    l12876 14BF  
                                                    l12956 14B7  
                                                    l12948 14A1  
                                                    l14396 147C  
                                                    l12980 1580  
                                                    l12972 1573  
                                                    l13676 0848  
                                                    l13668 0827  
                                                    l14492 056C  
                                                    l14484 0563  
                                                    l14476 0532  
                                                    l14468 0522  
                                                    l14388 1188  
                                                    l14636 0DF3  
                                                    l13588 0B5A  
                                                    l14628 1028  
                                                    l13596 1F39  
                                                    l14652 1231  
                                                    l14644 1225  
                                                    l13940 0378  
                                                    l13932 0CF1  
                                                    l13908 0CCF  
                                                    l13780 033E  
                                                    l13772 02FD  
                                                    l13764 02BA  
                                                    l13756 0252  
                                                    l13748 0211  
                                                    l13828 0FD0  
                                                    l13836 0FFC  
                                                    l13852 0A2D  
                                                    l13844 0A11  
                                                    l13860 094B  
                                                    l14548 07B3  
                                                    l12798 0AE4  
                                                    l12878 14C2  
                                                    l12958 14B8  
                                                    l12990 14E5  
                                                    l14398 1482  
                                                    l12982 1583  
                                                    l12974 1577  
                                                    l12966 155E  
                                                    l14494 0572  
                                                    l14486 0566  
                                                    l14478 053B  
                                                    l14638 0E39  
                                                    l13598 1F3F  
                                                    l14654 1234  
                                                    l14646 1228  
                                                    l13950 03A8  
                                                    l13942 0378  
                                                    l13918 0CDB  
                                                    l13782 036C  
                                                    l13774 0303  
                                                    l13766 02C2  
                                                    l13758 0280  
                                                    l13790 090E  
                                                    l13854 0A38  
                                                    l13846 0A16  
                                                    l13870 096C  
                                                    l13862 094B  
                                                    l16430 05A0  
                                                    l12888 14CA  
                                                    l12992 14F0  
                                                    l12984 1585  
                                                    l12976 157D  
                                                    l12968 155E  
                                                    l14648 122B  
                                                    l14656 1000  
                                                    l13880 1238  
                                                    l13960 03CA  
                                                    l13952 03B6  
                                                    l13944 037E  
                                                    l13928 0CE7  
                                                    l13696 12C3  
                                                    l13776 0330  
                                                    l13768 02C8  
                                                    l13784 0374  
                                                    l13792 0919  
                                                    l13856 0A3F  
                                                    l13848 0A20  
                                                    l13872 0971  
                                                    l13864 0956  
                                                    l16440 05BB  
                                                    l16432 05A3  
                                                    l16424 0595  
                                                    l16610 14DC  
                                                    l12898 1535  
                                                    l12994 14F5  
                                                    l12978 157E  
                                                    l14498 0575  
                                                    l13882 1238  
                                                    l13970 03D6  
                                                    l13954 03BB  
                                                    l13946 038C  
                                                    l13890 0CA2  
                                                    l13698 12CE  
                                                    l13778 0338  
                                                    l13794 091E  
                                                    l13874 097B  
                                                    l13866 095B  
                                                    l16450 0602  
                                                    l16442 05CB  
                                                    l16434 05A9  
                                                    l16426 059E  
                                                    l16612 0B0B  
                                                    l12996 14FD  
                                                    l12988 14E5  
                                                    l13884 123E  
                                                    l13972 03DB  
                                                    l13980 03E2  
                                                    l13956 03C0  
                                                    l13948 039A  
                                                    l13892 0CA2  
                                                    l13796 0927  
                                                    l13788 090E  
                                                    l13876 0982  
                                                    l13868 0964  
                                                    l16452 0608  
                                                    l16444 05DA  
                                                    l16460 0619  
                                                    l16436 05B1  
                                                    l16428 059F  
                                                    l16614 0DC5  
                                                    l12998 1501  
                                                    l13886 124C  
                                                    l13982 03E7  
                                                    l13974 03E0  
                                                    l13958 03C5  
                                                    l13966 03CC  
                                                    l13894 0CA8  
                                                    l13798 092F  
                                                    l16462 0628  
                                                    l16454 060E  
                                                    l16446 05EC  
                                                    l16438 05B9  
                                                    l16616 15D0  
                                                    l16608 057D  
                                                    l13984 03EC  
                                                    l13968 03D1  
                                                    l13896 0CB5  
                                                    l16464 0641  
                                                    l16456 0612  
                                                    l16448 05F7  
                                                    l13986 03F1  
                                                    l13994 03F8  
                                                    l13898 0CC3  
                                                    l16466 0654  
                                                    l16458 0615  
                                                    l13996 03FD  
                                                    l13988 03F6  
                                                    l13998 0402  
                                    _eusart1RxStatusBuffer 00BE  
                                        __end_of_I2C1_Open 1792  
                                                    ?_main 0070  
                           ?_RN487X_SetAsyncMessageHandler 0071  
                                                    ?_swap 0071  
                                                    u10000 0A77  
                                                    u10001 0A76  
                                                    u10010 0A94  
                                                    u10011 0A93  
                                                    u10020 0AA1  
                                                    u10100 16FF  
                                                    u10021 0AA0  
                                                    u10101 16FE  
                                                    u10030 1453  
                                                    u10110 1727  
                                                    u10031 1452  
                                                    u10111 1726  
                                                    u10120 10BE  
                                                    u10200 1F8E  
                                                    u10040 1464  
                                                    u11000 042E  
                                                    u10121 10BC  
                                                    u10201 1F8C  
                                                    u10041 1463  
                                                    u11001 042D  
                                                    u10130 10BF  
                                                    u10210 1F8F  
                                                    u10050 17C8  
                                                    u11010 0433  
                                                    u10051 17C7  
                                                    u11011 0432  
                                                    u10140 10CF  
                                                    u10220 1F97  
                                                    u10060 0B6E  
                                                    u11100 0464  
                                                    u11020 0438  
                                                    u10300 0D94  
                                                    u10141 10CD  
                                                    u10221 1F95  
                                                    u10061 0B6D  
                                                    u11101 0463  
                                                    u11021 0437  
                                                    u10301 0D93  
                                                    u10150 10D0  
                                                    u10230 1F98  
                                                    u10070 0B8D  
                                                    u11110 046B  
                                                    u11030 043F  
                                                    u10310 0D99  
                                                    u10055 17C4  
                                                    u10071 0B8C  
                                                    u11111 046A  
                                                    u11031 043E  
                                                    u10311 0D98  
                                                    u10240 1616  
                                                    u10400 0F59  
                                                    u10080 0BA8  
                                                    u11200 049C  
                                                    u11120 0470  
                                                    u11040 0444  
                                                    u10241 1615  
                                                    u10401 0F58  
                                                    u10081 0BA7  
                                                    u11201 049B  
                                                    u11121 046F  
                                                    u11041 0443  
                                                    u10090 0BB1  
                                                    u10330 0B2A  
                                                    u10170 1278  
                                                    u11210 04A1  
                                                    u11130 0475  
                                                    u11050 0449  
                                                    u10091 0BB0  
                                                    u10331 0B29  
                                                    u10171 1277  
                                                    u11211 04A0  
                                                    u11131 0474  
                                                    u11051 0448  
                                                    u10260 1644  
                                                    u10420 0836  
                                                    u10180 17D9  
                                                    u10340 0B30  
                                                    u10164 126E  
                                                    u11300 0D2D  
                                                    u11220 04A6  
                                                    u11140 047A  
                                                    u11060 044E  
                                                    u10324 1281  
                                                    u10500 00F3  
                                                    u10261 1643  
                                                    u10421 0835  
                                                    u10181 17D8  
                                                    u10341 0B2F  
                                                    u10165 126D  
                                                    u11301 0D2C  
                                                    u11221 04A5  
                                                    u11141 0479  
                                                    u11061 044D  
                                                    u10325 1280  
                                                    u10501 00F2  
                                                    u10430 083A  
                                                    u10190 17EA  
                                                    u10350 0B49  
                                                    u11310 0D34  
                                                    u11230 04AD  
                                                    u11150 0481  
                                                    u11070 0455  
                                                    u10510 012D  
                                                    u10255 162D  
                                                    u10431 0839  
                                                    u10415 082B  
                                                    u10191 17E9  
                                                    u10351 0B48  
                                                    u11311 0D33  
                                                    u11231 04AC  
                                                    u11151 0480  
                                                    u11071 0454  
                                                    u10511 012C  
                                                    u10440 0843  
                                                    u11400 1755  
                                                    u10360 0B5A  
                                                    u11320 0D39  
                                                    u11240 04B2  
                                                    u11160 0486  
                                                    u11080 045A  
                                                    u10280 0D8A  
                                                    u10600 033E  
                                                    u10520 0167  
                                                    u10441 0841  
                                                    u11401 1754  
                                                    u10361 0B59  
                                                    u11321 0D38  
                                                    u11241 04B1  
                                                    u11161 0485  
                                                    u11081 0459  
                                                    u10281 0D89  
                                                    u10601 033D  
                                                    u10521 0166  
                                                    u10370 08AC  
                                                    u10450 0844  
                                                    u11330 0D40  
                                                    u11250 04B7  
                                                    u11170 048B  
                                                    u11090 045F  
                                                    u10290 0D8F  
                                                    u10530 01A2  
                                                    u10610 091E  
                                                    u10275 165B  
                                                    u10371 08AB  
                                                    u11331 0D3F  
                                                    u11251 04B6  
                                                    u11171 048A  
                                                    u11091 045E  
                                                    u10291 0D8E  
                                                    u10531 01A1  
                                                    u10611 091D  
                                                    u10380 08C1  
                                                    u11500 056B  
                                                    u11340 0D45  
                                                    u11260 04BC  
                                                    u11180 0490  
                                                    u10540 01DC  
                                                    u10620 0934  
                                                    u10700 0971  
                                                    u10381 08C0  
                                                    u11501 056A  
                                                    u11405 1751  
                                                    u11341 0D44  
                                                    u11261 04BB  
                                                    u11181 048F  
                                                    u10541 01DB  
                                                    u10621 0933  
                                                    u10701 0970  
                                                    u11510 0572  
                                                    u11430 0703  
                                                    u11350 13B3  
                                                    u11270 0D1C  
                                                    u11190 0497  
                                                    u10710 0CC8  
                                                    u10550 0217  
                                                    u10630 0F77  
                                                    u11511 0571  
                                                    u11431 0702  
                                                    u11415 06A0  
                                                    u11351 13B2  
                                                    u11271 0D1B  
                                                    u11191 0496  
                                                    u10711 0CC7  
                                                    u10551 0216  
                                                    u10631 0F76  
                                                    u11440 04CF  
                                                    u11360 13C3  
                                                    u11280 0D21  
                                                    u10800 03C0  
                                                    u10720 0CCD  
                                                    u10480 12D7  
                                                    u10560 0252  
                                                    u10640 0F98  
                                                    u11520 0771  
                                                    u11441 04CE  
                                                    u11425 06CD  
                                                    u11361 13C2  
                                                    u11281 0D20  
                                                    u10801 03BF  
                                                    u10721 0CCC  
                                                    u10481 12D6  
                                                    u10561 0251  
                                                    u10641 0F97  
                                                    u11521 0770  
                                                    u11450 04EA  
                                                    u11370 1FFA  
                                                    u11290 0D28  
                                                    u10810 03C5  
                                                    u10730 0CD4  
                                                    u10570 028E  
                                                    u10490 00BB  
                                                    u10650 0FBB  
                                                    u11530 078E  
                                                    u10395 0F12  
                                                    u11451 04E9  
                                                    u11371 1FF9  
                                                    u11291 0D27  
                                                    u10811 03C4  
                                                    u10731 0CD3  
                                                    u10571 028D  
                                                    u10491 00BA  
                                                    u10651 0FBA  
                                                    u11531 078D  
                                                    u11380 1FEF  
                                                    u11620 1212  
                                                    u10900 03F6  
                                                    u10820 03CA  
                                                    u10740 0CD9  
                                                    u10580 02C8  
                                                    u10660 0FDE  
                                                    u11540 0797  
                                                    u11381 1FEE  
                                                    u11621 1211  
                                                    u10901 03F5  
                                                    u10821 03C9  
                                                    u10741 0CD8  
                                                    u10581 02C7  
                                                    u10661 0FDD  
                                                    u11541 0796  
                                                    u11470 050D  
                                                    u11390 1023  
                                                    u11630 1218  
                                                    u10910 03FD  
                                                    u10830 03D1  
                                                    u10750 0CE0  
                                                    u10590 0303  
                                                    u10670 0A16  
                                                    u11550 07A0  
                                                    u11471 050C  
                                                    u11391 1022  
                                                    u11631 1217  
                                                    u10911 03FC  
                                                    u10831 03D0  
                                                    u10751 0CDF  
                                                    u10591 0302  
                                                    u10671 0A15  
                                                    u11551 079F  
                                                    u11480 0527  
                                                    u11640 1030  
                                                    u10920 0402  
                                                    u10840 03D6  
                                                    u10760 0CE5  
                                                    u10680 0A2D  
                                                    u11560 07A9  
                                                    u11481 0526  
                                                    u11465 04FD  
                                                    u11641 102F  
                                                    u10921 0401  
                                                    u10841 03D5  
                                                    u10761 0CE4  
                                                    u10681 0A2C  
                                                    u11561 07A8  
                                                    u11490 0532  
                                                    u11650 0E50  
                                                    u10930 0407  
                                                    u10850 03DB  
                                                    u10770 0CEC  
                                                    u10690 095B  
                                                    u11570 07B2  
                                                    u11491 0531  
                                                    u11651 0E4F  
                                                    u10931 0406  
                                                    u10851 03DA  
                                                    u10771 0CEB  
                                                    u10691 095A  
                                                    u11571 07B1  
                                                    u10940 040C  
                                                    u10860 03E0  
                                                    u10780 0CF1  
                                                    u10941 040B  
                                                    u10861 03DF  
                                                    u10781 0CF0  
                                                    u10950 0413  
                                                    u10870 03E7  
                                                    u10790 03BB  
                                                    u10951 0412  
                                                    u10871 03E6  
                                                    u10791 03BA  
                                                    u10960 0418  
                                                    u10880 03EC  
                                                    u10961 0417  
                                                    u10881 03EB  
                                                    u10970 041D  
                                                    u10890 03F1  
                                                    u10971 041C  
                                                    u10891 03F0  
                                                    u10980 0422  
                                                    u10981 0421  
                                                    u10990 0429  
                                                    u10991 0428  
                                                    u13800 05F7  
                                                    u13801 05F6  
                                                    u13810 0602  
                                                    u13811 0601  
                                                    u13820 0608  
                                                    u13821 0607  
                                                    u13830 0627  
                            __end_of_rn487x_driver_version 2012  
                                                    u13831 0626  
                                                    u13840 0640  
                                                    u13841 063F  
                                                    u13850 0662  
                                                    u13770 05B1  
                                                    u13851 0661  
                                                    u13771 05B0  
                                                    u13780 05B9  
                                                    u13781 05B8  
                                                    u13790 05D9  
                                                    u13791 05D8  
                                                    u13867 11E4  
                               __end_of_i2c1_fsmStateTable 1848  
                                                    _OSCEN 0891  
                                                    _TMR0H 059D  
                                                    _TMR0L 059C  
                                                    _TRISA 0012  
                                                    _TRISB 0013  
                                                    _TRISC 0014  
                                                    _TRISE 0016  
                                   ??_I2C1_MasterGetRxData 0071  
                              LIGHTBLUE_PushButton@payload 0021  
                                    ?_I2C1_DO_RX_NACK_STOP 0070  
                               ??_I2C1_CallbackReturnReset 0079  
                                        ??_I2C1_MasterOpen 0071  
                                     _EUSART1_Transmit_ISR 142A  
                                        ??_I2C1_MasterStop 0071  
                                        ??_I2C1_Initialize 0071  
                                                    _pHead 0060  
                                                    _begin 070F  
                                                    _cinco 0064  
                                  __end_of_PIN_MANAGER_IOC 1F7E  
                                           ??_RN487X_Delay 0076  
                                                    _siete 00E8  
                           BMA253_GetAccelDataY@yAccelData 002D  
                                           ??_RN487X_Reset 0072  
                                    _i2c_read1ByteRegister 0BB3  
                                           ?_EUSART1_Write 0071  
                                           ??_RN487X_Write 0077  
                                           ?_EUSART2_Write 0071  
                                   __end_of_RN487X_ReadMsg 15B2  
                                                    pclath 000A  
                                i2c_write1ByteRegister@reg 0024  
                                   __end_of_RN487X_SendCmd 16C4  
                                           ??_EUSART1_Read 0071  
                                LIGHTBLUE_PerformAction@id 0029  
                                           ??_EUSART2_Read 0071  
                                                    status 0003  
                                   __end_of_setXYAxisRange 0A43  
                                                    wtemp0 007E  
                                             ??_I2C1_DO_RX 0079  
                                             ??_I2C1_DO_TX 0079  
                                          __end_of_strncmp 0CA2  
                                   ??_RN487X_SetSystemMode 0072  
               __end_of_EUSART1_DefaultFramingErrorHandler 1E6C  
                     ??_EUSART1_DefaultFramingErrorHandler 0070  
                      ?_EUSART1_DefaultFramingErrorHandler 0070  
                       _EUSART1_DefaultFramingErrorHandler 1E6B  
                                   ??_I2C1_DO_ADDRESS_NACK 0079  
                             __end_of_RN487X_EnterDataMode 1391  
                                             ??_I2C1_Close 0071  
                    __end_of_EUSART2_SetTxInterruptHandler 1F45  
                            _EUSART2_SetTxInterruptHandler 1F3F  
                                            _fsmStateTable 1848  
                                          __initialization 0057  
                                   _rn487x_PrintMessageEnd 0C01  
                                               _i2c_status 0120  
                               __end_of_EUSART1_Initialize 09C5  
                                             __end_of_main 0665  
                                             __end_of_uart 1828  
                              ?_LIGHTBLUE_GetErrorLedValue 0070  
                                             __end_of_swap 11CB  
                                 _LIGHTBLUE_UpdateErrorLed 1391  
                               __end_of_RN487X_is_rx_ready 1FC0  
                              ?_INTERRUPT_InterruptManager 0070  
                               ?_LIGHTBLUE_GetDataLedValue 0070  
                           BMA253_GetAccelDataZ@zAccelData 002D  
                                            _do_I2C_DO_ACK 0000  
                                   ??_I2C1_MasterOperation 007B  
                                                   ??_main 004C  
                                                   ??_swap 0073  
                                ?_rn487x_PrintMessageStart 0070  
                            ?_TMAG5273_GetTemperatureValue 0070  
                      __end_of_EUSART2_DefaultErrorHandler 1E9B  
                              _EUSART2_DefaultErrorHandler 1E97  
                                  _LIGHTBLUE_PerformAction 0825  
                         RN487X_MessageHandler@messageType 0042  
                         __end_of_LIGHTBLUE_SendSerialData 070F  
                                    ?_EUSART1_Transmit_ISR 0070  
                                       __end_of_I2C1_DO_RX 0B1A  
                                       __end_of_I2C1_DO_TX 0DF3  
                                         _RN487X_DataReady 13AD  
                                       __end_of_I2C1_Close 12C3  
                                            ?_readRegister 0070  
                                                   ?_begin 0070  
                               __end_of_EUSART2_Initialize 0A04  
                             ??_IOCAF6_SetInterruptHandler 0073  
                                 _eusart2TxBufferRemaining 005A  
                                                   _ANSELA 1F38  
                                                   _ANSELB 1F43  
                                                   _ANSELC 1F4E  
                             ??_LIGHTBLUE_SetErrorLedValue 007B  
                                                   _T0CON0 059E  
                                                   _T0CON1 059F  
                                    _i2c_read2ByteRegister 0A43  
                                                   _RC1REG 0119  
                                                   _RC2REG 0A19  
                                                   _RB1PPS 1F19  
                                                   _RB2PPS 1F1A  
                                                   _RC1STA 011D  
                                                   _RB4PPS 1F1C  
                                                   _RC2STA 0A1D  
                                                   _RC4PPS 1F24  
                                                   i1l2101 1F7D  
                                                   i1l2111 0800  
                                                   i1l2105 1092  
                                                   _ODCONA 1F3A  
                                                   _ODCONB 1F45  
                                                   _ODCONC 1F50  
                                                   _ODCONE 1F66  
                                                   i1l1900 133F  
                                                   i1l1750 12AA  
                                                   i1l1903 1E6B  
                                                   i1l1736 1427  
                                                   i1l1753 1E6C  
                                                   i1l1906 1E96  
                                                   i1l1746 0895  
                                                   i1l1739 1429  
                                                   i1l1756 1E9E  
                                                   i1l1909 1E92  
                                                   _RN487X 1868  
                                                   i1l1759 1E9A  
                                                   i1l1952 0026  
                                                   i1l1961 0053  
                                                   i1l1954 0035  
                                                   i1l1955 0053  
                                                   i1l1956 0044  
                                                   i1l1949 0013  
                                                   i1l1886 144A  
                                                   i1l1896 090B  
                                                   i1l1889 144C  
                                          ?_RN487X_ReadMsg 0073  
                                                   i1l9050 1293  
                                                   i1l9052 129A  
                                                   i1l9070 1326  
                                                   i1l9054 129E  
                                                   i1l9072 132F  
                                                   i1l9056 12A4  
                                                   i1l9074 1334  
                                                   i1l9058 12A5  
                                                   i1l9076 133A  
                                                   i1l9078 133B  
                                                   _INLVLA 1F3C  
                                                   _INLVLB 1F47  
                                                   _INLVLC 1F52  
                                                   i1l9740 1E97  
                                                   i1l9738 1E9B  
                                                   i1l9774 1E93  
                                                   i1l9870 108B  
                                                   i1l9776 1E8F  
                                                   i1l9872 1090  
                                                   i1l9868 1084  
                                                   u701_20 140F  
                                                   u701_21 140E  
                                                   u710_20 0901  
                                                   u702_20 1421  
                                                   u710_21 0900  
                                                   u702_21 1420  
                                                   u703_20 0867  
                                                   u711_20 1F7A  
                                                   u703_21 0866  
                                                   u711_21 1F79  
                                                   u704_20 0877  
                                                   u704_21 0876  
                                                   u705_20 088B  
                                                   u705_21 088A  
                       __end_of_RN487X_ReadDefaultResponse 0ED9  
                               _RN487X_ReadDefaultResponse 0E51  
                                                   u706_20 1431  
                                                   u706_21 1430  
                                                   u563_20 12A4  
                                                   u707_20 1444  
                                                   u563_21 12A3  
                                                   u707_21 1443  
                                                   u564_20 133A  
                                                   u708_20 08DA  
                                                   u564_21 1339  
                                                   u708_21 08D9  
                                                   _OSCFRQ 0893  
                                                   u709_20 08EB  
                                                   u709_21 08EA  
                                          ?_RN487X_SendCmd 0077  
                                                   u668_20 108B  
                                                   u940_20 003D  
                                                   u932_20 000B  
                                                   u668_21 108A  
                                                   u940_21 003C  
                                                   u932_21 000A  
                                                   u941_20 0048  
                                                   u933_20 000F  
                                                   u941_21 0047  
                                                   u933_21 000E  
                                                   u942_20 004C  
                                                   u934_20 0017  
                                                   u942_21 004B  
                                                   u934_21 0016  
                                                   u935_20 001B  
                                                   u935_21 001A  
                                                   u936_20 001F  
                                                   u936_21 001E  
                                                   u937_20 002A  
                                                   u937_21 0029  
                                                   u938_20 002E  
                                                   u938_21 002D  
                                                   _TX1REG 011A  
                                                   u939_20 0039  
                                                   u939_21 0038  
                                                   _TX2REG 0A1A  
                                                   _TX1STA 011E  
                                                   _TX2STA 0A1E  
                                        ?_I2C1_MasterClose 0070  
                                 rdBlkRegCompleteHandler@p 0078  
                                          ?_setXYAxisRange 0070  
                                         __end_of_bitRead8 127C  
                                  ??_I2C1_MasterDisableIrq 0071  
                                        ?_I2C1_MasterStart 0070  
                                        ?_I2C1_MasterWrite 0070  
                                 ?_I2C1_MasterWaitForEvent 0070  
                                       ??_I2C1_MasterClose 0071  
                                         _I2C1_DO_TX_EMPTY 15B2  
                                setXYAxisRange@xyAxisRange 0035  
                                         __end_of_getError 0D9D  
                    __end_ofRN487X_EnterDataMode@cmdPrompt 200B  
                            RN487X_EnterDataMode@cmdPrompt 2006  
                                       ??_I2C1_MasterStart 0071  
                              BMA253_GetAccelDataY@lsbData 002E  
                        BMA253_GetAccelDataXYZ@sensorValue 0037  
                                       ??_I2C1_MasterWrite 007B  
                              BMA253_GetAccelDataY@msbData 002F  
                   LIGHTBLUE_TemperatureSensor@temperature 003B  
                              BMA253_GetAccelDataZ@lsbData 002E  
                                 __end_of_setOperatingMode 1000  
                              BMA253_GetAccelDataZ@msbData 002F  
                                                   _cmdBuf 0220  
                                                   _bitMap 004F  
                             __end_of_BMA253_GetAccelDataY 163A  
                             __end_of_BMA253_GetAccelDataZ 1668  
                                RN487X_FilterData@readChar 0044  
                                                   _cuatro 0065  
                                 ?_EUSART1_SetErrorHandler 0071  
                                         ?_TMR0_Initialize 0070  
                                ?_TMAG5273_CalcMeasurement 002D  
                                                   _number 006A  
                              _EUSART2_FramingErrorHandler 0162  
                         ??_EUSART1_SetOverrunErrorHandler 0073  
                          ?_EUSART1_SetOverrunErrorHandler 0071  
                        __end_of_LIGHTBLUE_GetDataLedValue 1F03  
                                                   _strchr 12F4  
                                 ??_I2C1_DO_SEND_ADR_WRITE 0072  
                                                   _strcpy 118F  
                                                   _strlen 12DB  
                                                   _strstr 0B66  
                                        ?_I2C1_SetCallback 0071  
                                   ??_I2C1_DO_RX_NACK_STOP 0071  
                              LIGHTBLUE_SendPacket@payload 0077  
                                    _I2C1_DO_SEND_ADR_READ 1F7E  
                                           _PMD_Initialize 1FCA  
                                  _BMA253_NewAccelDataRdyY 10B1  
                                  _BMA253_NewAccelDataRdyZ 10C2  
                            ?_I2C1_SetDataCompleteCallback 0075  
                               i2c_write1ByteRegister@data 0025  
                                       ??_I2C1_SetCallback 0074  
                                           ??_readRegister 007B  
                                     _EUSART2_Transmit_ISR 1408  
                               LIGHTBLUE_PerformAction@led 002A  
                                           bitWrite8@value 0074  
                           __end_ofRN487X_RebootCmd@reboot 1891  
                                   ?_i2c_read1ByteRegister 0024  
                                          ??_EUSART1_Write 0072  
                                          ??_EUSART2_Write 0072  
               IOCAF6_SetInterruptHandler@InterruptHandler 0071  
                                         ?_PIN_MANAGER_IOC 0070  
                                          _eusart1RxBuffer 0144  
                                                ??_strncmp 0075  
                                            _manufactureId 00DE  
                                  _I2C1_DO_RX_NACK_RESTART 1ED7  
                                             ??_IOCAF6_ISR 0070  
                                    _RN487X_MessageHandler 17C9  
                                        RN487X_SendCmd@cmd 007A  
                                          _eusart1TxBuffer 014C  
                                          _eusart2RxBuffer 00CE  
                                 ?_TMAG5273_GetManufacture 002D  
                                        _SYSTEM_Initialize 1222  
                           I2C1_SetDataCompleteCallback@cb 0075  
                                          _eusart2TxBuffer 00D6  
                                  __end_of__initialization 00A5  
                                  _protocol_version_number 2012  
                                         _do_I2C_SEND_STOP 0000  
                                   getOperatingMode@opMode 002E  
                          I2C1_MasterOperation@returnValue 0023  
                                       ?_SYSTEM_Initialize 0070  
                                            ??_I2C1_Poller 007B  
                                  ??_EUSART2_RxDataHandler 0070  
                     __end_ofRN487X_EnterCmdMode@cmdPrompt 2010  
                             RN487X_EnterCmdMode@cmdPrompt 200B  
                            __end_of_EUSART1_RxDataHandler 1340  
                                  _rdBlkRegCompleteHandler 1340  
                                           __pcstackCOMMON 0070  
                                             __pidataBANK1 0002  
                                             __pidataBANK3 10D3  
                                      ??_SYSTEM_Initialize 0073  
                         __end_of_I2C1_MasterEnableRestart 1E80  
                                            __end_of_begin 07B7  
                                     __end_of_RN487X_Delay 1F75  
                                            swap@lowerByte 0079  
                           ?_EUSART2_SetTxInterruptHandler 0071  
                                 ??_BMA253_GetAccelDataXYZ 007C  
                                     __end_of_RN487X_Reset 2000  
                                   setOperatingMode@opMode 0035  
                                     __end_of_RN487X_Write 101C  
                                ??_LIGHTBLUE_PerformAction 0028  
                                   __end_of_PMD_Initialize 1FD4  
                             ??_I2C1_DO_SEND_RESTART_WRITE 0071  
                           ?_LIGHTBLUE_SendProtocolVersion 0070  
                                  ??_I2C1_MasterSendTxData 0071  
                                       __end_of_IOCAF6_ISR 1093  
                                     __end_of_EUSART1_Read 1587  
                                     __end_of_EUSART2_Read 1535  
                                      _LIGHTBLUE_SplitByte 16C4  
                                        RN487X_Reset@value 0071  
                                   ??_EUSART1_Transmit_ISR 0070  
                                      _LIGHTBLUE_SplitWord 1068  
                                ?_LIGHTBLUE_GetButtonValue 0070  
                                 ?_EUSART2_SetErrorHandler 0071  
                                     _RN487X_EnterDataMode 1376  
                                    ?_EUSART2_Transmit_ISR 0070  
                              __end_of_EUSART1_Receive_ISR 090C  
                                    __end_of_I2C1_DO_RESET 1EE1  
                                       readRegister@regVal 002B  
                                 __end_of_setTemperatureEn 0949  
                                                  ??_begin 007C  
                                   ?_i2c_read2ByteRegister 0024  
                           ??_TMAG5273_GetTemperatureValue 007B  
                                   _do_I2C_DO_NACK_RESTART 0000  
                                __end_of_SYSTEM_Initialize 1238  
                                 _LIGHTBLUE_SendSerialData 0665  
                                  writeRegister@regAddress 0027  
                                            _eusart1RxHead 0054  
                                            swap@upperByte 0078  
                                            _eusart1TxHead 0057  
                                            _eusart2RxHead 007C  
                                            _eusart1RxTail 0053  
                                            _eusart2TxHead 005C  
                                               __pbssBANK0 004D  
                                               __pbssBANK1 00A0  
                                               __pbssBANK2 0120  
                                               __pbssBANK4 0220  
                                               __pbssBANK5 02A0  
                                               __pbssBANK6 0320  
                                               __pbssBANK7 03A0  
                                            _eusart2RxTail 0059  
                                            _eusart1TxTail 0056  
                          __end_of_I2C1_MasterWaitForEvent 1EF7  
                        _EUSART1_TxDefaultInterruptHandler 015C  
                                            _eusart2TxTail 005B  
                          ??_EUSART1_SetRxInterruptHandler 0073  
                               __end_of_LIGHTBLUE_LedState 1496  
                            __end_of_rd2RegCompleteHandler 1130  
                                       _DELAY_milliseconds 11E0  
                             __end_of_LIGHTBLUE_Initialize 1EFD  
                                     I2C1_Open@returnValue 0072  
                         ??_EUSART2_SetFramingErrorHandler 0073  
                          ?_EUSART2_SetFramingErrorHandler 0071  
                                     ?_LIGHTBLUE_SplitByte 0076  
                                       _getMagneticChannel 0378  
                                       _setMagneticChannel 00A9  
                                     ?_LIGHTBLUE_SplitWord 0079  
                            __end_of_wr2RegCompleteHandler 1143  
                                    _rd1RegCompleteHandler 110A  
                                    EUSART2_Read@readValue 0072  
                                        _I2C1_DO_SEND_STOP 1EC8  
                                    _wr1RegCompleteHandler 10F7  
                          __end_of_EUSART1_SetErrorHandler 1F0F  
                                      ?_DELAY_milliseconds 0071  
                                               __pmaintext 0595  
                                               _getAngleEn 0CF5  
                                  ?_i2c_write1ByteRegister 0024  
                           LIGHTBLUE_SendSerialData@length 0078  
                                      ?_getMagneticChannel 0070  
                                      ?_setMagneticChannel 0070  
                                       ?_I2C1_DO_SEND_STOP 0070  
                                       getAngleEn@angleReg 002E  
                         rn487x_PrintMessage@passedMessage 0040  
                          rn487x_PrintMessage@messageIndex 0041  
                                          _I2C1_MasterOpen 104D  
                                               __pintentry 0004  
                                          _I2C1_MasterStop 1E80  
                                          _I2C1_Initialize 1F99  
                             __end_of_LIGHTBLUE_SendPacket 0F65  
                                      __end_of_I2C1_Poller 104D  
                            __end_of_LIGHTBLUE_AccelSensor 1696  
                                ??_BMA253_NewAccelDataRdyY 007B  
                                ??_BMA253_NewAccelDataRdyZ 007B  
                                          ?_PMD_Initialize 0070  
                                   ?_I2C1_DO_SEND_ADR_READ 0070  
                                                  ?_strchr 0071  
                                      ??_I2C1_DO_SEND_STOP 0071  
                                                  ?_strcpy 0071  
                                                  ?_strlen 0071  
                   __end_of_EUSART1_SetFramingErrorHandler 1F15  
                           _EUSART1_SetFramingErrorHandler 1F0F  
                                                  ?_strstr 0077  
                                    _eusart2RxStatusBuffer 00C6  
                                                  i1l10400 0908  
                                                  i1l10402 1F75  
                                                  i1l10340 140F  
                                                  i1l10404 1F7A  
                                                  i1l10350 085D  
                                                  i1l10342 1416  
                                                  i1l10360 0877  
                                                  i1l10352 0862  
                                                  i1l10344 141B  
                                                  i1l10362 087C  
                                                  i1l10354 0867  
                                                  i1l10346 1421  
                                                  i1l10338 1408  
                                                  i1l10370 142A  
                                                  i1l10364 0882  
                                                  i1l10356 086C  
                                                  i1l10348 1422  
                                                  i1l10380 1445  
                                                  i1l10372 1431  
                                                  i1l10366 088B  
                                                  i1l10358 0872  
                                                  i1l10390 08E6  
                                                  i1l10382 08CF  
                                                  i1l10374 1439  
                                                  i1l10368 0892  
                                                  i1l10392 08EB  
                                                  i1l10384 08D5  
                                                  i1l10376 143E  
                                                  i1l12320 000B  
                                                  i1l10394 08F1  
                                                  i1l10386 08DA  
                                                  i1l10378 1444  
                                                  i1l12330 002A  
                                                  i1l12322 000F  
                                                  i1l10396 08F7  
                                                  i1l10388 08E0  
                                                  i1l12340 004C  
                                                  i1l12332 002E  
                                                  i1l12324 0017  
                                                  i1l10398 0901  
                                                  i1l12334 0039  
                                                  i1l12326 001B  
                                                  i1l12318 0006  
                                                  i1l12336 003D  
                                                  i1l12328 001F  
                                                  i1l12338 0048  
                             getMagneticChannel@magChannel 002E  
                                    ?_RN487X_EnterDataMode 0070  
                                            _writeRegister 1005  
                             ?_EUSART1_DefaultErrorHandler 0070  
                                                ?_bitRead8 0071  
                                        _I2C1_MasterIsNack 1EEB  
                                                  _SP1BRGH 011C  
                                                  _SP1BRGL 011B  
                                                  _SP2BRGH 0A1C  
                                                  _SP2BRGL 0A1B  
                                     ??_DELAY_milliseconds 0073  
                                                  _OSCCON1 088D  
                                                  _OSCCON3 088F  
                                                _I2C1_Open 175C  
  __end_of_wr1RegCompleteHandler@i2c1_master_example$F1710 117C  
          _wr1RegCompleteHandler@i2c1_master_example$F1710 1169  
  __end_of_rd2RegCompleteHandler@i2c1_master_example$F1704 1169  
          _rd2RegCompleteHandler@i2c1_master_example$F1704 1156  
  __end_of_wr2RegCompleteHandler@i2c1_master_example$F1716 10F7  
          _wr2RegCompleteHandler@i2c1_master_example$F1716 10E4  
__end_of_rdBlkRegCompleteHandler@i2c1_master_example$F1727 1376  
        _rdBlkRegCompleteHandler@i2c1_master_example$F1727 135B  
                              __end_of_EUSART2_Receive_ISR 0896  
  __end_of_rd1RegCompleteHandler@i2c1_master_example$F1693 1156  
          _rd1RegCompleteHandler@i2c1_master_example$F1693 1143  
                       __end_of_IOCAF6_SetInterruptHandler 1F4B  
                               _IOCAF6_SetInterruptHandler 1F45  
                                ??_I2C1_DO_RX_NACK_RESTART 0071  
                          __end_of_TMAG5273_GetManufacture 1326  
                                       _TMAG5273_GetXValue 105A  
                                                  _OSCSTAT 0890  
                                                  _OSCTUNE 0892  
                                        _I2C1_MasterSetIrq 1E89  
                                     ??_getMagneticChannel 002C  
                                                ?_getError 0070  
                                                  _SSP1ADD 018D  
                                     ??_setMagneticChannel 0033  
                                                  _SLRCONA 1F3B  
                                                  _SLRCONB 1F46  
                                                  _SLRCONC 1F51  
                                                  _SSP1BUF 018C  
                                                  _SSP1MSK 018E  
                       __end_of_LIGHTBLUE_SetErrorLedValue 10B1  
                               _LIGHTBLUE_SetErrorLedValue 10A2  
                                       ?_I2C1_MasterIsNack 0070  
                               ?_I2C1_DO_SEND_RESTART_READ 0070  
                                   ?_RN487X_MessageHandler 007B  
                            i2c_write1ByteRegister@address 007B  
                           ??_I2C1_SetDataCompleteCallback 0078  
                                       ?_I2C1_MasterSetIrq 0070  
                                     _BMA253_GetAccelDataY 160C  
                                     _BMA253_GetAccelDataZ 163A  
                                       RN487X_ReadMsg@resp 0078  
                                  _TMR0_HasOverflowOccured 1000  
                                      ?_TMAG5273_GetXValue 0070  
                                          _asyncBufferSize 0061  
                                    ??_LIGHTBLUE_SplitByte 0077  
                                       _i2c1_fsmStateTable 1828  
                                       _i2c1_driver_i2cISR 00E0  
                                    ??_LIGHTBLUE_SplitWord 007B  
                                      ??_I2C1_MasterIsNack 0071  
                                                  _i2c_ISR 0000  
                                        __end_of_bitWrite8 1293  
                                __end_of_I2C1_DO_SEND_STOP 1ECD  
                                ??_rdBlkRegCompleteHandler 0079  
                               ??_LIGHTBLUE_UpdateErrorLed 007B  
                                       I2C1_SetCallback@cb 0071  
                                  ?_rn487x_PrintMessageEnd 0070  
                                      _rn487x_PrintMessage 1792  
                                      ??_I2C1_MasterSetIrq 0071  
                         RN487X_SetAsyncMessageHandler@len 0071  
                           __end_of_i2c_write1ByteRegister 1728  
                                        _RN487X_FilterData 0B1A  
                                 __end_of_RN487X_DataReady 13C9  
                             __end_of_LIGHTBLUE_PushButton 118F  
                                     __end_of_readRegister 1040  
                                       ?_RN487X_FilterData 0070  
                                      _EUSART1_is_rx_ready 1F90  
                               __end_of_EUSART1_is_tx_done 1EAF  
                          __end_of_EUSART2_SetErrorHandler 1F2D  
                                            ?_I2C1_DO_IDLE 0070  
                                     ??_TMAG5273_GetXValue 007B  
                                            ?_I2C1_DO_RCEN 0070  
                LIGHTBLUE_ParseIncomingPacket@receivedByte 0033  
                                      _EUSART1_is_tx_ready 0000  
                                        _RN487X_IndicateRx 1FEA  
                              ??_LIGHTBLUE_GetDataLedValue 0071  
                                                  __ptext1 070F  
                                                  __ptext2 0949  
                                                  __ptext3 0A04  
                                                  __ptext4 090C  
                                                  __ptext5 0F65  
                                                  __ptext6 00A9  
                                                  __ptext7 1005  
                                                  __ptext8 16F5  
                                                  __ptext9 0D49  
                                 _I2C1_MasterEnableRestart 1E7D  
                                __end_of_I2C1_MasterIsNack 1EF1  
                             ?_I2C1_SetAddressNackCallback 0075  
                                      ??_RN487X_FilterData 0043  
                                           ?_writeRegister 0026  
                                     ?_rn487x_PrintMessage 0070  
               __end_of_EUSART2_DefaultOverrunErrorHandler 1E9F  
                     ??_EUSART2_DefaultOverrunErrorHandler 0070  
                      ?_EUSART2_DefaultOverrunErrorHandler 0070  
                       _EUSART2_DefaultOverrunErrorHandler 1E9B  
                                    _OSCILLATOR_Initialize 1FC0  
                                   ??_EUSART2_Transmit_ISR 0070  
                                       ?_RN487X_IndicateRx 0071  
                                __end_of_I2C1_MasterSetIrq 1E8C  
                                 __end_of_I2C1_DO_TX_EMPTY 15DF  
                                               ??_bitRead8 0074  
                                       _EUSART1_Initialize 0986  
                                 ??_PIN_MANAGER_Initialize 0073  
                                                _IOCAFbits 1F3F  
                                    _rn487x_driver_version 2010  
                                               ?_I2C1_Open 0070  
                                         ??_RN487X_ReadMsg 0076  
                                                _IOCANbits 1F3E  
                                                _IOCAPbits 1F3D  
                                               ??_getError 002C  
                                         ??_RN487X_SendCmd 0078  
                            ??_EUSART1_DefaultErrorHandler 0071  
                                 ?_I2C1_CallbackReturnStop 0078  
                                       _RN487X_is_rx_ready 1FB6  
                                         ??_setXYAxisRange 0033  
                  TMAG5273_GetTemperatureValue@temperature 007B  
                                 _do_I2C_SEND_RESTART_READ 0000  
                                  i2c_read1ByteRegister@d2 0029  
                                                  clrloop0 1F4C  
                                      ??_RN487X_IndicateRx 0072  
                                    ?_BMA253_GetAccelDataY 0070  
                                    ?_BMA253_GetAccelDataZ 0070  
                                                  _strncmp 0C4F  
                        rn487x_PrintMessage@printCharacter 0020  
                        __end_of_I2C1_DO_SEND_RESTART_READ 1EBE  
                                     end_of_initialization 00A5  
                               __end_of_I2C1_MasterSendAck 1EA7  
               __end_of_RN487X_Read@rn487x_interface$F1835 1FAC  
                       _RN487X_Read@rn487x_interface$F1835 1FA2  
                      ?_RN487X_Read@rn487x_interface$F1836 0070  
                     ??_RN487X_Read@rn487x_interface$F1838 0073  
                                     ?_EUSART1_is_rx_ready 0070  
                      __end_of_LIGHTBLUE_TemperatureSensor 120C  
                              _LIGHTBLUE_TemperatureSensor 11F6  
                                      _I2C1_MasterClearIrq 1E71  
                                      ?_EUSART1_Initialize 0070  
                               __end_of_EUSART2_is_tx_done 1EAB  
                           __end_of_rn487x_PrintMessageEnd 0C4F  
                              ?_RN487X_ReadDefaultResponse 0070  
                                                  init_ram 1F51  
                               __end_of_I2C1_MasterStartRx 1E86  
                              _EUSART1_OverrunErrorHandler 0156  
                                   ?_rd1RegCompleteHandler 0078  
                                                  initloop 1F52  
                         __end_of_TMAG5273_CalcMeasurement 13E7  
                                   _I2C1_DO_SEND_ADR_WRITE 1F65  
                                      ?_RN487X_is_rx_ready 0070  
                                        getError@statusReg 0032  
                                __end_of_RN487X_FilterData 0B66  
                             __end_of_I2C1_DO_SEND_RESTART 1EC8  
                                  __end_of_I2C1_MasterOpen 105A  
                                   ?_wr1RegCompleteHandler 0078  
                                  __end_of_I2C1_MasterStop 1E83  
                                  __end_of_I2C1_Initialize 1FA2  
                    __end_of_EUSART1_SetRxInterruptHandler 1F21  
                            _EUSART1_SetRxInterruptHandler 1F1B  
                                              _I2C1_Poller 1040  
                                ?_I2C1_CallbackReturnReset 0078  
                                       _EUSART2_Initialize 09C5  
                            __end_of_I2C1_MasterDisableIrq 1E7A  
                                              _I2C1_Status 00A0  
                                              ?_getAngleEn 0070  
                              LIGHTBLUE_PerformAction@data 0027  
                                         _getOperatingMode 0CA2  
                                                  swap@reg 0071  
                                        ?_setOperatingMode 0070  
                          __end_of_protocol_version_number 2014  
                               __end_of_RN487X_IsConnected 1E8F  
                                _do_I2C_SEND_RESTART_WRITE 0000  
                                      _I2C1_MasterSendNack 1E9F  
                      __end_of_I2C1_SetAddressNackCallback 1FEA  
                              _I2C1_SetAddressNackCallback 1FDF  
                                __end_of_RN487X_IndicateRx 1FF5  
                                     ?_I2C1_MasterClearIrq 0070  
                                           ??_I2C1_DO_IDLE 0071  
                                     ??_EUSART1_Initialize 0073  
                                                  strchr@c 0071  
                                                  strchr@s 0073  
                                           ??_I2C1_DO_RCEN 0071  
                               LIGHTBLUE_SplitByte@payload 0078  
                       __end_of_I2C1_DO_SEND_RESTART_WRITE 1EC3  
                               _I2C1_DO_SEND_RESTART_WRITE 1EBE  
                                      ?_EUSART2_Initialize 0070  
                                                  strcpy@d 0072  
                                                  strlen@a 0074  
                                       ??_setOperatingMode 0033  
                                      _EUSART2_is_rx_ready 1F87  
                                                  strlen@s 0071  
                                           __deviceAddress 006F  
                                               _returnStop 0000  
                                                  strstr@h 0022  
                                                  strstr@n 0077  
                                      _EUSART2_is_tx_ready 0000  
                                                _PORTAbits 000C  
                                     ??_RN487X_is_rx_ready 0071  
                                        _RN487X_SetOutputs 0A89  
                          __end_of_rdBlkRegCompleteHandler 135B  
                                    ??_rn487x_PrintMessage 0076  
                                   ??_RN487X_EnterDataMode 007B  
                                     _LIGHTBLUE_Initialize 1EF7  
                                  _statusBuffer@main$F4234 03A0  
                                  ??_i2c_read1ByteRegister 007B  
                                            ??_getLowPower 002C  
                                       ?_RN487X_SetOutputs 0020  
                                  _IOCAF6_InterruptHandler 00EA  
                            ??_I2C1_SetAddressNackCallback 0079  
                                   RN487X_Delay@delayCount 0074  
                                                _TRISAbits 0012  
                          I2C1_SetDataCompleteCallback@ptr 0077  
                           getDeviceStatus@deviceStatusReg 007B  
                                ??_TMR0_HasOverflowOccured 0071  
                           I2C1_CallbackReturnReset@funPtr 0078  
                                     ?_I2C1_MasterSendNack 0070  
                                      EUSART1_Write@txData 0071  
                       TMAG5273_CalcMeasurement@regAddress 0032  
                                    ??_EUSART1_is_rx_ready 0071  
                                      ??_RN487X_SetOutputs 007B  
                                             _RN487X_Delay 1F6D  
                                            ??_isConnected 007B  
                                  getOperatingMode@opMode0 002F  
                                  getOperatingMode@opMode1 0030  
                                     RN487X_ReadMsg@msgLen 0075  
                                     ??_EUSART2_Initialize 0073  
                                     ?_EUSART2_is_rx_ready 0070  
                                   _BMA253_GetAccelDataXYZ 0896  
                                     _LIGHTBLUE_SendPacket 0ED9  
                                             _RN487X_Reset 1FF5  
                                _LIGHTBLUE_GetDataLedValue 1EFD  
                                             _RN487X_Write 1010  
                                        ??_getDeviceStatus 007B  
                                           __end_of_RN487X 187A  
                                             _EUSART1_Read 155E  
                                             _EUSART2_Read 150D  
                         __end_of_LIGHTBLUE_GetButtonValue 1F09  
                            RN487X_SetOutputs@ioHighNibble 0024  
                                     _timer0ReloadVal16bit 004D  
                            __end_of_EUSART2_RxDataHandler 12AB  
                                              _do_I2C_IDLE 0000  
                                              _do_I2C_RCEN 0000  
                                    ??_I2C1_MasterClearIrq 0071  
                                 _rn487x_PrintMessageStart 15DF  
                                __end_of_RN487X_SetOutputs 0AD1  
                                            _setZAxisRange 0949  
                                           _I2C1_DO_RX_ACK 1ECD  
                                          ??_writeRegister 007C  
                                   ?_OSCILLATOR_Initialize 0070  
                                    ?_LIGHTBLUE_Initialize 0070  
                                            ??_RN487X_Init 0076  
                                            ??_RN487X_Read 007C  
                               ??_LIGHTBLUE_SendSerialData 0077  
                          RN487X_FilterData@asyncBuffering 005D  
                          __end_of_I2C1_CallbackReturnStop 1E6F  
                            __end_of_I2C1_MasterSendTxData 1EB4  
                                           __end_of_strchr 130D  
                                  ??_i2c_read2ByteRegister 0026  
                                           __end_of_strcpy 11A3  
                                           __end_of_strlen 12F4  
                                           __end_of_strstr 0BB3  
                                      start_initialization 0057  
                             LIGHTBLUE_AccelSensor@payload 0039  
                                              ??_I2C1_Open 0071  
                            setMagneticChannel@channelMode 0035  
                                      _i2c_busCollisionISR 0000  
                             TMAG5273_CalcMeasurement@data 0034  
                                         _getTemperatureEN 11CB  
                          RN487X_SetOutputs@stateLowNibble 0023  
                   LIGHTBLUE_SendProtocolVersion@dataIndex 0036  
                                   ??_BMA253_GetAccelDataY 002A  
                                   ??_BMA253_GetAccelDataZ 002A  
                                    ??_I2C1_MasterSendNack 0071  
                                     setOperatingMode@mode 0036  
                                        ?_setTemperatureEn 0070  
            EUSART1_SetRxInterruptHandler@interruptHandler 0071  
            EUSART1_SetTxInterruptHandler@interruptHandler 0071  
            EUSART2_SetRxInterruptHandler@interruptHandler 0071  
            EUSART2_SetTxInterruptHandler@interruptHandler 0071  
                                     _LIGHTBLUE_PushButton 117C  
                                 LIGHTBLUE_SplitByte@value 0076  
                                    ??_EUSART2_is_rx_ready 0071  
                                   setMagneticChannel@mode 0036  
                                    __end_of_EUSART1_Write 150D  
                                    __end_of_EUSART2_Write 14BD  
                                    ?_LIGHTBLUE_SendPacket 0077  
                                      __end_of_getLowPower 124E  
                                       ??_setTemperatureEn 0033  
                          ??_LIGHTBLUE_SendProtocolVersion 0020  
                                   rd1RegCompleteHandler@p 0078  
                               getMagneticChannel@magMode4 002F  
                               getMagneticChannel@magMode5 0030  
                               getMagneticChannel@magMode6 0031  
                               getMagneticChannel@magMode7 0032  
                                 I2C1_SetBuffer@bufferSize 0073  
                                         ?_I2C1_MasterOpen 0070  
                   __end_of_EUSART2_SetOverrunErrorHandler 1F39  
                           _EUSART2_SetOverrunErrorHandler 1F33  
                                         ?_I2C1_MasterStop 0070  
                                         ?_I2C1_Initialize 0070  
                                      getError@intPinError 0030  
                                      __end_of_isConnected 12DB  
                                getTemperatureEN@tempENreg 002F  
                                         bitRead8@position 0073  
                                 _TMAG5273_CalcMeasurement 13C9  
                                         ??_PMD_Initialize 0071  
                             i2c_read1ByteRegister@address 0025  
                                       setXYAxisRange@mode 0036  
                                   __end_of_I2C1_DO_RX_ACK 1ED2  
                                   wr1RegCompleteHandler@p 0078  
                                    _EUSART1_RxDataHandler 1326  
                                  ??_I2C1_DO_SEND_ADR_READ 0071  
                                           ?_setZAxisRange 0070  
                           ?_EUSART1_SetRxInterruptHandler 0071  
                                       _LIGHTBLUE_LedState 1470  
                                              __pdataBANK1 00EE  
                                              __pdataBANK3 01A0  
                                            bitWrite8@mask 0076  
                                                 ??_strchr 0073  
                                                 ??_strcpy 0072  
                                                 ??_strlen 0073  
                                         I2C1_Open@address 0071  
                                           _eusart1RxCount 0052  
                                                 ??_strstr 0079  
                                           _eusart2RxCount 0058  
                                      ?_LIGHTBLUE_LedState 0070  
                                  ??_RN487X_MessageHandler 007C  
                                              __pbssCOMMON 007C  
                                     _I2C1_DO_SEND_RESTART 1EC3  
                        _EUSART1_RxDefaultInterruptHandler 015A  
                                                ___latbits 0003  
                                            __pcstackBANK0 0020  
                                            __pcstackBANK2 0166  
                           ?_LIGHTBLUE_ParseIncomingPacket 0070  
                              ?_IOCAF6_SetInterruptHandler 0071  
                                                _do_I2C_RX 0000  
                                                _do_I2C_TX 0000  
                                    ?_LIGHTBLUE_PushButton 0070  
                                             _readRegister 1034  
                                      __end_of_RN487X_Init 0E51  
                                      __end_of_RN487X_Read 1034  
                              ?_LIGHTBLUE_SetErrorLedValue 0070  
                              ??_I2C1_DO_SEND_RESTART_READ 0071  
                                      EUSART2_Write@txData 0071  
                          ??_EUSART1_SetTxInterruptHandler 0073  
                                      _RN487X_EnterCmdMode 124E  
                                     __end_of_I2C1_DO_IDLE 1EB9  
                         ??_EUSART1_SetFramingErrorHandler 0073  
                          ?_EUSART1_SetFramingErrorHandler 0071  
                          ??_EUSART2_SetRxInterruptHandler 0073  
                                     __end_of_I2C1_DO_RCEN 1F5E  
                            I2C1_SetAddressNackCallback@cb 0075  
                                                _dataReady 005E  
                                          _do_I2C_TX_EMPTY 0000  
                                     ??_LIGHTBLUE_LedState 007B  
                                                __pnvBANK1 00EA  
                                                __pnvBANK2 0154  
                                    _rd2RegCompleteHandler 111D  
                                             bitRead8@mask 0075  
                                    __end_of_fsmStateTable 1868  
                                                _main$5433 0166  
                                   _PIN_MANAGER_Initialize 07B7  
                                    _wr2RegCompleteHandler 1130  
                         ??_IOCAF6_DefaultInterruptHandler 0070  
                          ?_IOCAF6_DefaultInterruptHandler 0070  
                               ??_I2C1_MasterEnableRestart 0071  
                                                _bitWrite8 127C  
                                 ?_LIGHTBLUE_PerformAction 0027  
                                           _I2C1_MasterFsm 1535  
                                        ?_RN487X_DataReady 0070  
                                          ?_I2C1_DO_RX_ACK 0070  
                                                __ptext100 105A  
                                                __ptext101 13C9  
                                                __ptext110 104D  
                                                __ptext102 0A43  
                                                __ptext111 1EE1  
                                                __ptext103 163A  
                                                __ptext120 1ECD  
                                                __ptext112 13E7  
                                                __ptext104 10C2  
                                                __ptext121 1EC8  
                                                __ptext113 1040  
                                                __ptext105 160C  
                                                __ptext130 1EB4  
                                                __ptext122 1EC3  
                                                __ptext114 1EF1  
                                                __ptext106 10B1  
                                                __ptext131 15B2  
                                                __ptext123 1EBE  
                                                __ptext115 1535  
                                                __ptext107 0BB3  
                                                __ptext140 1E6D  
                                                __ptext132 1E89  
                                                __ptext124 1EB9  
                                                __ptext116 14BD  
                                                __ptext108 1FDF  
                                                __ptext141 135B  
                                                __ptext133 1EEB  
                                                __ptext125 1F57  
                                                __ptext117 1EDC  
                                                __ptext109 175C  
                                                __ptext150 10E4  
                                                __ptext142 1169  
                                                __ptext134 1EAF  
                                                __ptext126 0AD1  
                                                __ptext118 1ED7  
                                                __ptext151 1FD4  
                                                __ptext143 1156  
                                                __ptext135 1EA3  
                                                __ptext127 0D9D  
                                                __ptext119 1ED2  
                                                __ptext160 1E71  
                                                __ptext152 0801  
                                                __ptext144 1143  
                                                __ptext136 1E86  
                                                __ptext128 1F65  
                                                __ptext153 1093  
                                                __ptext145 1340  
                                                __ptext137 1E9F  
                                                __ptext129 1F7E  
                                                __ptext170 1E6C  
                                                __ptext162 1F75  
                                                __ptext154 1E80  
                                                __ptext146 1130  
                                                __ptext138 1E83  
                                                __ptext171 1E97  
                                                __ptext163 1084  
                                                __ptext155 1E7D  
                                                __ptext147 111D  
                                                __ptext139 1E6F  
                                                __ptext172 1293  
                                                __ptext164 0800  
                                                __ptext156 1E7A  
                                                __ptext148 110A  
                                                __ptext173 1E93  
                                                __ptext165 142A  
                                                __ptext157 12AB  
                                                __ptext149 10F7  
                                                __ptext174 1E6B  
                                                __ptext166 1408  
                                                __ptext158 1E77  
                                                __ptext175 1E8F  
                                                __ptext167 08CF  
                                                __ptext159 1E74  
                                                __ptext176 1326  
                                                __ptext168 085D  
                                                __ptext169 1E9B  
                                      getAngleEn@angleDir2 002F  
                                      getAngleEn@angleDir3 0030  
                             ??_LIGHTBLUE_GetErrorLedValue 0071  
                              _i2c1_driver_busCollisionISR 00E2  
                                 _LIGHTBLUE_GetButtonValue 1F03  
                        _EUSART2_TxDefaultInterruptHandler 00EC  
                                       ??_RN487X_DataReady 007C  
                       LIGHTBLUE_SendProtocolVersion@value 0035  
                                     ?_RN487X_EnterCmdMode 0070  
                                   ??_LIGHTBLUE_Initialize 0071  
                                  _I2C1_MasterWaitForEvent 1EF1  
                                         _I2C1_MasterClose 1E74  
                                  getError@oscillatorError 0031  
                                           _I2C1_SetBuffer 1093  
                             ??_INTERRUPT_InterruptManager 0071  
                                           _sequenceNumber 006E  
                              i2c_read2ByteRegister@result 002B  
                                         _I2C1_MasterStart 1E7A  
                                                _connected 0063  
                                         _I2C1_MasterWrite 1EE1  
                                    _LIGHTBLUE_AccelSensor 1668  
                                                 _BAUD1CON 011F  
                                                 _BAUD2CON 0A1F  
                    ??_rd1RegCompleteHandler@strncmp$F4850 0079  
                     ?_wr1RegCompleteHandler@strncmp$F4842 0078  
                     ?_rd2RegCompleteHandler@strncmp$F4851 0078  
                    ??_wr1RegCompleteHandler@strncmp$F4844 0079  
                   ?_rdBlkRegCompleteHandler@strncmp$F4860 0078  
                    ??_rd2RegCompleteHandler@strncmp$F4853 0079  
                  ??_rdBlkRegCompleteHandler@strncmp$F4862 0079  
                     ?_wr2RegCompleteHandler@strncmp$F4854 0078  
                    ??_wr2RegCompleteHandler@strncmp$F4856 0079  
                     ?_rd1RegCompleteHandler@strncmp$F4848 0078  
               __end_of_EUSART1_DefaultOverrunErrorHandler 1E97  
                     ??_EUSART1_DefaultOverrunErrorHandler 0070  
                      ?_EUSART1_DefaultOverrunErrorHandler 0070  
                       _EUSART1_DefaultOverrunErrorHandler 1E93  
                                    ?_I2C1_DO_SEND_RESTART 0070  
                                     _EUSART1_ErrorHandler 0154  
                             ?_EUSART2_DefaultErrorHandler 0070  
                                              _getLowPower 1238  
                                        ?_I2C1_DO_TX_EMPTY 0070  
                                  _EUSART1_SetErrorHandler 1F09  
                              __end_of_LIGHTBLUE_SplitByte 16F5  
                                 __end_of_getOperatingMode 0CF5  
                         __end_of_I2C1_CallbackReturnReset 1E71  
                              __end_of_LIGHTBLUE_SplitWord 1076  
                                 LIGHTBLUE_SplitWord@value 0079  
                                       ??_I2C1_DO_TX_EMPTY 0079  
                                   ??_LIGHTBLUE_SendPacket 0078  
                                      getError@otpCrcError 002F  
                                       _EUSART1_is_tx_done 1EAB  
                                  ??_rd1RegCompleteHandler 0079  
                                                 ?_strncmp 0071  
                                  ?_I2C1_DO_SEND_ADR_WRITE 0070  
                                I2C1_MasterSendTxData@data 0071  
                                              _isConnected 12C3  
                                  ??_wr1RegCompleteHandler 0079  
                     LIGHTBLUE_SendProtocolVersion@payload 0022  
                                        ??_TMR0_Initialize 0071  
                                         _I2C1_SetCallback 0801  
                                        _RN487X_is_tx_done 1FAC  
                                   i2c_read1ByteRegister@e 0026  
                                                 _LATAbits 0018  
                  EUSART1_SetErrorHandler@interruptHandler 0071  
                  EUSART2_SetErrorHandler@interruptHandler 0071  
                                   i2c_read1ByteRegister@x 0027  
                                                 _LATCbits 001A  
                                               _I2C1_DO_RX 0AD1  
                                               _I2C1_DO_TX 0D9D  
                                      ?_EUSART1_is_tx_done 0070  
                                                clear_ram0 1F4B  
                                                 _PIE0bits 0716  
                                                 _PIE3bits 0719  
                 LIGHTBLUE_ParseIncomingPacket@parserState 006D  
                                               _I2C1_Close 12AB  
                    __end_of_LIGHTBLUE_SendProtocolVersion 175C  
                            _LIGHTBLUE_SendProtocolVersion 1728  
                                       ?_RN487X_is_tx_done 0070  
                                             ?_I2C1_Poller 0070  
                                   __end_of_I2C1_MasterFsm 155E  
                             __end_of_I2C1_MasterGetRxData 1E89  
                                                 _PIR0bits 070C  
                                             ??_getAngleEn 002C  
                                                 _PIR3bits 070F  
                                               ?_bitWrite8 0071  
                                                 _RX1DTPPS 1ECB  
                                          ??_setZAxisRange 0033  
                                                 _RX2DTPPS 1ECD  
                                   ?_EUSART1_RxDataHandler 0070  
                                  _TMAG5273_GetManufacture 130D  
                                       _I2C1_MasterSendAck 1EA3  
                           DELAY_milliseconds@milliseconds 0071  
                                 ?_BMA253_NewAccelDataRdyY 0070  
                                 ?_BMA253_NewAccelDataRdyZ 0070  
                  __end_of_rn487x_PrintIndicatorCharacters 1470  
                        ??_rn487x_PrintIndicatorCharacters 0073  
                         ?_rn487x_PrintIndicatorCharacters 0070  
                          _rn487x_PrintIndicatorCharacters 144D  
                                _I2C1_DO_SEND_RESTART_READ 1EB9  
                                                 _SSP1CON1 0190  
                                                 _SSP1CON2 0191  
                                     setTemperatureEn@mode 0036  
                                       _EUSART2_is_tx_done 1EA7  
                                   __end_of_I2C1_SetBuffer 10A2  
                                                 _SSP1STAT 018F  
                                        ??_PIN_MANAGER_IOC 0070  
                                      ??_RN487X_is_tx_done 0071  
                                    ??_RN487X_EnterCmdMode 007B  
                     __end_of_I2C1_SetDataCompleteCallback 1FDF  
                             _I2C1_SetDataCompleteCallback 1FD4  
                                       _I2C1_MasterStartRx 1E83  
                              ?_I2C1_DO_SEND_RESTART_WRITE 0070  
                                      ?_I2C1_MasterSendAck 0070  
                           LIGHTBLUE_AccelSensor@accelData 0046  
                                 ?_I2C1_DO_RX_NACK_RESTART 0070  
                                ?_LIGHTBLUE_UpdateErrorLed 0070  
                                      RN487X_ReadMsg@index 0079  
               rn487x_PrintIndicatorCharacters@messageType 0073  
                                      TMAG5273_GetXValue@x 007B  
                                     ??_EUSART1_is_tx_done 0071  
                                              _RN487X_Init 0DF3  
                                              _RN487X_Read 1028  
                                      ?_EUSART2_is_tx_done 0070  
                                getError@undervoltageError 002E  
                             __end_of_RN487X_SetSystemMode 1028  
                                      ?_I2C1_MasterStartRx 0070  
                                          _getDeviceStatus 1F5E  
                             __end_of_I2C1_DO_ADDRESS_NACK 14E5  
                                   ??_LIGHTBLUE_PushButton 007B  
                                       _RN487X_IsConnected 1E8C  
                            __end_of_i2c_read1ByteRegister 0C01  
                                  ?_BMA253_GetAccelDataXYZ 0070  
                           __end_of_I2C1_DO_SEND_ADR_WRITE 1F6D  
                            ??_EUSART2_DefaultErrorHandler 0071  
                                            _I2C1_DO_RESET 1EDC  
                                              _asyncBuffer 0062  
                                       __end_of_getAngleEn 0D49  
                                    I2C1_Close@returnValue 0071  
                                 ?_rdBlkRegCompleteHandler 0078  
                                        setZAxisRange@mode 0036  
                                __end_of_RN487X_is_tx_done 1FB6  
                                      I2C1_SetCallback@idx 0074  
                                      I2C1_SetCallback@ptr 0073  
                                      ?_RN487X_IsConnected 0070  
                                LIGHTBLUE_LedState@payload 0020  
                                  _EUSART2_SetErrorHandler 1F27  
                                     ??_I2C1_MasterSendAck 0071  
                    LIGHTBLUE_ParseIncomingPacket@packetID 006B  
                                    EUSART1_Read@readValue 0072  
                                   ?_rd2RegCompleteHandler 0078  
                              _EUSART2_OverrunErrorHandler 0160  
                                      _do_I2C_DO_NACK_STOP 0000  
                                     ??_EUSART2_is_tx_done 0071  
                        setTemperatureEn@temperatureEnable 0035  
                             __end_of_I2C1_MasterOperation 1408  
                               ??_rn487x_PrintMessageStart 0073  
                          __end_of_LIGHTBLUE_PerformAction 085D  
                          ??_RN487X_SetAsyncMessageHandler 0072  
                                   ?_wr2RegCompleteHandler 0078  
                                     ??_I2C1_MasterStartRx 0071  
                       LIGHTBLUE_SendSerialData@serialData 0079  
                    __end_of_EUSART1_SetTxInterruptHandler 1F27  
                            _EUSART1_SetTxInterruptHandler 1F21  
                                          ?_I2C1_MasterFsm 0070  
                    __end_of_EUSART2_SetRxInterruptHandler 1F3F  
                            _EUSART2_SetRxInterruptHandler 1F39  
                      LIGHTBLUE_ParseIncomingPacket@length 006C  
                                 __end_of_getTemperatureEN 11E0  
                                  setZAxisRange@zAxisRange 0035  
                                ??_I2C1_MasterWaitForEvent 0071  
                             RN487X_SetOutputs@ioLowNibble 0022  
       wr1RegCompleteHandler@i2c1_master_example$F1710@ptr 0078  
                              __end_of_rn487x_PrintMessage 17C9  
       rd2RegCompleteHandler@i2c1_master_example$F1704@ptr 0078  
                                    _I2C1_MasterDisableIrq 1E77  
       wr2RegCompleteHandler@i2c1_master_example$F1716@ptr 0078  
     rdBlkRegCompleteHandler@i2c1_master_example$F1727@ptr 0078  
                                             bitWrite8@reg 0071  
                                  ??_OSCILLATOR_Initialize 0071  
                                          ?_I2C1_SetBuffer 0071  
       rd1RegCompleteHandler@i2c1_master_example$F1693@ptr 0078  
                                   readRegister@regAddress 002A  
                                     ??_RN487X_IsConnected 0071  
                                   ?_LIGHTBLUE_AccelSensor 0070  
                                   ??_I2C1_DO_SEND_RESTART 0071  
                                ??_EUSART1_SetErrorHandler 0073  
                      __end_of_EUSART1_DefaultErrorHandler 1E93  
                              _EUSART1_DefaultErrorHandler 1E8F  
                                  RN487X_SetOutputs@bitMap 0020  
                              __end_of_EUSART1_is_rx_ready 1F99  
                                               _T0CON0bits 059E  
                           __end_of_BMA253_GetAccelDataXYZ 08CF  
                                                 _bitRead8 1265  
                                              bitRead8@reg 0071  
                                     _EUSART2_ErrorHandler 015E  
                                           ?_I2C1_DO_RESET 0070  
                       LIGHTBLUE_TemperatureSensor@payload 0036  
                            __end_of_i2c_read2ByteRegister 0A89  
                                                 _getError 0D49  
                                                 __ptext10 1F5E  
                                                 __ptext11 127C  
                                                 __ptext20 1034  
                                                 __ptext12 12C3  
                                                 __ptext21 1265  
                                                 __ptext13 130D  
                                                 __ptext30 09C5  
                                                 __ptext22 1000  
                                                 __ptext14 11B7  
                                                 __ptext31 1F3F  
                                                 __ptext23 1222  
                                                 __ptext15 11CB  
                                                 __ptext40 1F0F  
                                                 __ptext32 1F39  
                                                 __ptext24 11A3  
                                                 __ptext16 0CA2  
                                                 __ptext41 1F09  
                                                 __ptext33 1F33  
                                                 __ptext25 1FCA  
                                                 __ptext17 0378  
                                                 __ptext50 15DF  
                                                 __ptext42 120C  
                                                 __ptext34 1F2D  
                                                 __ptext26 07B7  
                                                 __ptext18 1238  
                                                 __ptext51 0C01  
                                                 __ptext43 1028  
                                                 __ptext35 1F27  
                                                 __ptext27 1F45  
                                                 __ptext19 0CF5  
                                                 __ptext60 101C  
                                                 __ptext52 1792  
                                                 __ptext44 13AD  
                                                 __ptext36 0986  
                                                 __ptext28 1FC0  
                                                 __ptext61 1FF5  
                                                 __ptext53 118F  
                                                 __ptext45 0B1A  
                                                 __ptext37 1F21  
                                                 __ptext29 1F99  
                                                 __ptext70 0825  
                                                 __ptext62 1FEA  
                                                 __ptext54 144D  
                                                 __ptext46 17C9  
                                                 __ptext38 1F1B  
                                                 __ptext71 10A2  
                                                 __ptext63 11F6  
                                                 __ptext55 1E8C  
                                                 __ptext47 0B66  
                                                 __ptext39 1F15  
                                                 __ptext80 1EA7  
                                                 __ptext72 1391  
                                                 __ptext64 1076  
                                                 __ptext56 0DF3  
                                                 __ptext48 0C4F  
                                                 __ptext81 1587  
                                                 __ptext73 0A89  
                                                 __ptext65 0665  
                                                 __ptext57 1FB6  
                                                 __ptext49 12F4  
                                                 __ptext90 1EF7  
                                                 __ptext82 1FA2  
                                                 __ptext74 0E51  
                                                 __ptext66 1728  
                                                 __ptext58 1F90  
                                                 __ptext91 1668  
                                                 __ptext83 155E  
                                                 __ptext75 1376  
                                                 __ptext67 117C  
                                                 __ptext59 1F87  
                                                 __ptext92 1068  
                                                 __ptext84 150D  
                                                 __ptext76 124E  
                                                 __ptext68 1F03  
                                                 __ptext93 16C4  
                                                 __ptext85 1F6D  
                                                 __ptext77 1696  
                                                 __ptext69 04BE  
                                                 __ptext94 0ED9  
                                                 __ptext86 11E0  
                                                 __ptext78 1FAC  
                                                 __ptext95 12DB  
                                                 __ptext87 1470  
                                                 __ptext79 1EAB  
                                                 __ptext96 1010  
                                                 __ptext88 1EE6  
                                                 __ptext97 14E5  
                                                 __ptext89 1EFD  
                                                 __ptext98 1496  
                                                 __ptext99 0896  
                                             _SSP1CON1bits 0190  
                                             _SSP1CON2bits 0191  
                                               _IOCAF6_ISR 1084  
                                 ??_i2c_write1ByteRegister 007B  
                                               strcpy@dest 0073  
                               ??_TMAG5273_CalcMeasurement 002F  
                                 _I2C1_CallbackReturnReset 1E6F  
                                              ?_I2C1_DO_RX 0070  
                                              ?_I2C1_DO_TX 0070  
               __end_of_EUSART2_DefaultFramingErrorHandler 1E6D  
                     ??_EUSART2_DefaultFramingErrorHandler 0070  
                      ?_EUSART2_DefaultFramingErrorHandler 0070  
                       _EUSART2_DefaultFramingErrorHandler 1E6C  
                          __end_of_BMA253_NewAccelDataRdyY 10C2  
                          __end_of_BMA253_NewAccelDataRdyZ 10D3  
                                          _lightBlueSerial 02A0  
                                ??_TMAG5273_GetManufacture 007B  
                              __end_of_I2C1_MasterClearIrq 1E74  
                             __end_of_I2C1_DO_RX_NACK_STOP 1ED7  
                                              ?_I2C1_Close 0070  
                                        writeRegister@data 0026  
                                               _RC1STAbits 011D  
                                              ??_bitWrite8 0075  
                                               _RC2STAbits 0A1D  
           EUSART1_SetOverrunErrorHandler@interruptHandler 0071  
           EUSART2_SetOverrunErrorHandler@interruptHandler 0071  
                     RN487X_SetAsyncMessageHandler@pBuffer 0072  
                       __end_of_LIGHTBLUE_GetErrorLedValue 1EEB  
                               _LIGHTBLUE_GetErrorLedValue 1EE6  
                                                 int$flags 007E  
                          __end_of_I2C1_DO_RX_NACK_RESTART 1EDC  
                             RN487X_GetInputsValues@F12901 00EE  
                                   getTemperatureEN@tempEN 002E  
                                 I2C1_MasterOperation@read 0022  
                       __end_of_INTERRUPT_InterruptManager 0055  
                               _INTERRUPT_InterruptManager 0004  
                                    _EUSART2_RxDataHandler 1293  
                                  __end_of_getDeviceStatus 1F65  
                                             _SSP1STATbits 018F  
                                 i2c_read1ByteRegister@reg 0024  
                            __end_of_I2C1_DO_SEND_ADR_READ 1F87  
                              _EUSART1_FramingErrorHandler 0158  
                                             _I2C1_DO_IDLE 1EB4  
                                      _EUSART1_Receive_ISR 08CF  
                                             _I2C1_DO_RCEN 1F57  
                                    LIGHTBLUE_LedState@led 0023  
                              __end_of_I2C1_MasterSendNack 1EA3  
                         ??_EUSART2_SetOverrunErrorHandler 0073  
                          ?_EUSART2_SetOverrunErrorHandler 0071  
                                 ?_TMR0_HasOverflowOccured 0070  
                                    __end_of_writeRegister 1010  
                                        bitWrite8@position 0073  
                                               _INTCONbits 000B  
                              __end_of_EUSART2_is_rx_ready 1F90  
                           I2C1_SetAddressNackCallback@ptr 0077  
                                 ??_rn487x_PrintMessageEnd 0073  
                               getLowPower@lowPowerModeBit 002E  
                                           __pstringtext10 187A  
                                           __pstringtext11 1891  
                                           __pstringtext12 2000  
                                           __pstringtext13 0000  
                                     _I2C1_MasterGetRxData 1E86  
                                    _I2C1_MasterSendTxData 1EAF  
                            __end_of_RN487X_MessageHandler 1800  
                              TMAG5273_GetManufacture@read 002F  
                                ??_EUSART2_SetErrorHandler 0073  
                                   _do_I2C_DO_ADDRESS_NACK 0000  
                                                 intlevel1 0000  
                             RN487X_MessageHandler@message 007B  
                                       RN487X_Write@txData 0076  
                                 __end_of_I2C1_MasterClose 1E77  
                                     ?_EUSART1_Receive_ISR 0070  
                                   rd2RegCompleteHandler@p 0078  
                                  ?_PIN_MANAGER_Initialize 0070  
                                 __end_of_I2C1_MasterStart 1E7D  
                                ?_LIGHTBLUE_SendSerialData 0070  
                                 __end_of_I2C1_MasterWrite 1EE6  
                                   RN487X_RebootCmd@reboot 1886  
                   __end_of_EUSART1_SetOverrunErrorHandler 1F1B  
                           _EUSART1_SetOverrunErrorHandler 1F15  
                                                strcpy@src 0071  
                                         ??_I2C1_DO_RX_ACK 0071  
                               ??_LIGHTBLUE_GetButtonValue 0071  
                                  _I2C1_CallbackReturnStop 1E6D  
                             __end_of_EUSART1_Transmit_ISR 144D  
                          ??_LIGHTBLUE_ParseIncomingPacket 002B  
                                              _serialIndex 0051  
                                     _RN487X_SetSystemMode 101C  
                                     _I2C1_DO_ADDRESS_NACK 14BD  
                                   ?_I2C1_MasterDisableIrq 0070  
                             i2c_read2ByteRegister@address 002A  
                    __end_of_RN487X_SetAsyncMessageHandler 1222  
                            _RN487X_SetAsyncMessageHandler 120C  
                                   wr2RegCompleteHandler@p 0078  
           EUSART1_SetFramingErrorHandler@interruptHandler 0071  
           EUSART2_SetFramingErrorHandler@interruptHandler 0071  
                           ?_EUSART1_SetTxInterruptHandler 0071  
                                 RN487X_SetSystemMode@mode 0071  
                           ?_EUSART2_SetRxInterruptHandler 0071  
                        LIGHTBLUE_ParseIncomingPacket@data 00E4  
                                       _eusart1RxLastError 00E6  
                           RN487X_ReadDefaultResponse@resp 0073  
                                            __pstringtext1 1800  
                                            __pstringtext2 1828  
                                            __pstringtext3 1848  
                                            __pstringtext4 1868  
                                            __pstringtext5 2010  
                                            __pstringtext6 2012  
                                            __pstringtext7 1886  
                                            __pstringtext8 2006  
                                            __pstringtext9 200B  
                                      _EUSART2_Receive_ISR 085D  
                          LIGHTBLUE_SetErrorLedValue@value 0026  
                                 __end_of_I2C1_SetCallback 0825  
                                               _SSP1DATPPS 1EC6  
                                               _SSP1CLKPPS 1EC5  
                                          ??_I2C1_DO_RESET 0071  
                   __end_of_IOCAF6_DefaultInterruptHandler 0801  
                           _IOCAF6_DefaultInterruptHandler 0800  
                                     _I2C1_MasterOperation 13E7  
                                          _TMR0_Initialize 11A3  
                                             ?_getLowPower 0070  
                                     RN487X_SendCmd@cmdLen 0077  
                                                 strncmp@l 0076  
                                                 strncmp@n 0073  
                                                 strncmp@r 0071  
                        _LIGHTBLUE_ParseIncomingPacket$431 002D  
                        _LIGHTBLUE_ParseIncomingPacket$432 002F  
                        _LIGHTBLUE_ParseIncomingPacket$433 0031  
                                    ?_I2C1_MasterGetRxData 0070  
                                 i2c_read2ByteRegister@reg 0024  
                                              _returnReset 0000  
                                         _setOperatingMode 0F65  
                                                 strstr@nl 0020  
                                               _TX1STAbits 011E  
                                        ?_getOperatingMode 0070  
                                RN487X_ReadMsg@expectedMsg 0073  
                                               _TX2STAbits 0A1E  
                                              ?_IOCAF6_ISR 0070  
                                             ?_isConnected 0070  
                                    ??_EUSART1_Receive_ISR 0071  
                           __end_of_PIN_MANAGER_Initialize 0800  
                                       ??_getOperatingMode 002C  
                             ?_LIGHTBLUE_TemperatureSensor 0070  
                          ??_EUSART2_SetTxInterruptHandler 0073  
                            __end_of_rd1RegCompleteHandler 111D  
                                     ?_EUSART2_Receive_ISR 0070  
                                       _eusart2RxLastError 00E7  
                                      RN487X_SendCmd@index 0079  
                         __end_of_rn487x_PrintMessageStart 160C  
                                          _PIN_MANAGER_IOC 1F75  
                         RN487X_ReadDefaultResponse@status 0076  
                             ??_RN487X_ReadDefaultResponse 0073  
                            __end_of_wr1RegCompleteHandler 110A  
                        TMAG5273_CalcMeasurement@lowerByte 0033  
                                    _do_I2C_SEND_ADR_WRITE 0000  
                                  ??_EUSART1_RxDataHandler 0070  
                                     _do_I2C_SEND_ADR_READ 0000  
                         __end_of_LIGHTBLUE_UpdateErrorLed 13AD  
                                    ?_RN487X_SetSystemMode 0071  
                        _EUSART2_RxDefaultInterruptHandler 0164  
                                    ?_I2C1_DO_ADDRESS_NACK 0070  
                               LIGHTBLUE_SplitWord@payload 007B  
                                   RN487X_IndicateRx@value 0071  
