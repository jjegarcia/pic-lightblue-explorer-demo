

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Dec 20 11:38:03 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16LF18456
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    15                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
    17                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    21                           	psect	cinit,global,class=CODE,merge=1,delta=2
    22                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    23                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    25                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    26                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    27                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    28                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    29                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    30                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,noexec
    31                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,noexec
    32                           	psect	inittext,global,class=CODE,delta=2
    33                           	psect	clrtext,global,class=CODE,delta=2
    34                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    35                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    36                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    37                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    38                           	psect	text1,local,class=CODE,merge=1,delta=2
    39                           	psect	text2,local,class=CODE,merge=1,delta=2
    40                           	psect	text3,local,class=CODE,merge=1,delta=2
    41                           	psect	text4,local,class=CODE,merge=1,delta=2
    42                           	psect	text5,local,class=CODE,merge=1,delta=2
    43                           	psect	text6,local,class=CODE,merge=1,delta=2
    44                           	psect	text7,local,class=CODE,merge=1,delta=2
    45                           	psect	text8,local,class=CODE,merge=1,delta=2
    46                           	psect	text9,local,class=CODE,merge=1,delta=2
    47                           	psect	text10,local,class=CODE,merge=1,delta=2
    48                           	psect	text11,local,class=CODE,merge=1,delta=2
    49                           	psect	text12,local,class=CODE,merge=1,delta=2
    50                           	psect	text13,local,class=CODE,merge=1,delta=2
    51                           	psect	text14,local,class=CODE,merge=1,delta=2
    52                           	psect	text15,local,class=CODE,merge=1,delta=2
    53                           	psect	text16,local,class=CODE,merge=1,delta=2
    54                           	psect	text17,local,class=CODE,merge=1,delta=2
    55                           	psect	text18,local,class=CODE,merge=1,delta=2
    56                           	psect	text19,local,class=CODE,merge=1,delta=2
    57                           	psect	text20,local,class=CODE,merge=1,delta=2
    58                           	psect	text21,local,class=CODE,merge=1,delta=2
    59                           	psect	text22,local,class=CODE,merge=1,delta=2
    60                           	psect	text23,local,class=CODE,merge=1,delta=2
    61                           	psect	text24,local,class=CODE,merge=1,delta=2
    62                           	psect	text25,local,class=CODE,merge=1,delta=2
    63                           	psect	text26,local,class=CODE,merge=1,delta=2
    64                           	psect	text27,local,class=CODE,merge=1,delta=2
    65                           	psect	text28,local,class=CODE,merge=1,delta=2
    66                           	psect	text29,local,class=CODE,merge=1,delta=2
    67                           	psect	text30,local,class=CODE,merge=1,delta=2
    68                           	psect	text31,local,class=CODE,merge=1,delta=2
    69                           	psect	text32,local,class=CODE,merge=1,delta=2
    70                           	psect	text33,local,class=CODE,merge=1,delta=2
    71                           	psect	text34,local,class=CODE,merge=1,delta=2
    72                           	psect	text35,local,class=CODE,merge=1,delta=2
    73                           	psect	text36,local,class=CODE,merge=1,delta=2
    74                           	psect	text37,local,class=CODE,merge=1,delta=2
    75                           	psect	text38,local,class=CODE,merge=1,delta=2
    76                           	psect	text39,local,class=CODE,merge=1,delta=2
    77                           	psect	text40,local,class=CODE,merge=1,delta=2
    78                           	psect	text41,local,class=CODE,merge=1,delta=2
    79                           	psect	text42,local,class=CODE,merge=1,delta=2
    80                           	psect	text43,local,class=CODE,merge=1,delta=2
    81                           	psect	text44,local,class=CODE,merge=1,delta=2
    82                           	psect	text45,local,class=CODE,merge=1,delta=2
    83                           	psect	text46,local,class=CODE,merge=1,delta=2,group=2
    84                           	psect	text47,local,class=CODE,merge=1,delta=2,group=2
    85                           	psect	text48,local,class=CODE,merge=1,delta=2,group=2
    86                           	psect	text49,local,class=CODE,merge=1,inline,delta=2
    87                           	psect	text50,local,class=CODE,merge=1,inline,delta=2
    88                           	psect	text51,local,class=CODE,merge=1,inline,delta=2
    89                           	psect	text52,local,class=CODE,merge=1,delta=2,group=2
    90                           	psect	text53,local,class=CODE,merge=1,inline,delta=2
    91                           	psect	text54,local,class=CODE,merge=1,delta=2
    92                           	psect	text55,local,class=CODE,merge=1,delta=2
    93                           	psect	text56,local,class=CODE,merge=1,inline,delta=2
    94                           	psect	text57,local,class=CODE,merge=1,delta=2
    95                           	psect	text58,local,class=CODE,merge=1,delta=2
    96                           	psect	text59,local,class=CODE,merge=1,delta=2
    97                           	psect	text60,local,class=CODE,merge=1,delta=2
    98                           	psect	text61,local,class=CODE,merge=1,delta=2
    99                           	psect	text62,local,class=CODE,merge=1,delta=2
   100                           	psect	text63,local,class=CODE,merge=1,delta=2
   101                           	psect	text64,local,class=CODE,merge=1,delta=2
   102                           	psect	text65,local,class=CODE,merge=1,delta=2
   103                           	psect	text66,local,class=CODE,merge=1,delta=2
   104                           	psect	text67,local,class=CODE,merge=1,delta=2
   105                           	psect	text68,local,class=CODE,merge=1,delta=2
   106                           	psect	text69,local,class=CODE,merge=1,delta=2
   107                           	psect	text70,local,class=CODE,merge=1,delta=2
   108                           	psect	text71,local,class=CODE,merge=1,delta=2
   109                           	psect	text72,local,class=CODE,merge=1,delta=2
   110                           	psect	text73,local,class=CODE,merge=1,delta=2
   111                           	psect	text74,local,class=CODE,merge=1,delta=2
   112                           	psect	text75,local,class=CODE,merge=1,delta=2
   113                           	psect	text76,local,class=CODE,merge=1,delta=2
   114                           	psect	text77,local,class=CODE,merge=1,delta=2
   115                           	psect	text78,local,class=CODE,merge=1,delta=2
   116                           	psect	text79,local,class=CODE,merge=1,inline,delta=2
   117                           	psect	text80,local,class=CODE,merge=1,delta=2
   118                           	psect	text81,local,class=CODE,merge=1,delta=2
   119                           	psect	text82,local,class=CODE,merge=1,delta=2
   120                           	psect	text83,local,class=CODE,merge=1,inline,delta=2
   121                           	psect	text84,local,class=CODE,merge=1,delta=2
   122                           	psect	text85,local,class=CODE,merge=1,delta=2
   123                           	psect	text86,local,class=CODE,merge=1,inline,delta=2
   124                           	psect	text87,local,class=CODE,merge=1,delta=2
   125                           	psect	text88,local,class=CODE,merge=1,delta=2
   126                           	psect	text89,local,class=CODE,merge=1,delta=2
   127                           	psect	text90,local,class=CODE,merge=1,delta=2
   128                           	psect	text91,local,class=CODE,merge=1,delta=2
   129                           	psect	text92,local,class=CODE,merge=1,delta=2
   130                           	psect	text93,local,class=CODE,merge=1,delta=2
   131                           	psect	text94,local,class=CODE,merge=1,delta=2
   132                           	psect	text95,local,class=CODE,merge=1,delta=2
   133                           	psect	text96,local,class=CODE,merge=1,delta=2,group=2
   134                           	psect	text97,local,class=CODE,merge=1,inline,delta=2
   135                           	psect	text98,local,class=CODE,merge=1,delta=2
   136                           	psect	text99,local,class=CODE,merge=1,delta=2
   137                           	psect	text100,local,class=CODE,merge=1,delta=2
   138                           	psect	text101,local,class=CODE,merge=1,delta=2
   139                           	psect	text102,local,class=CODE,merge=1,delta=2
   140                           	psect	text103,local,class=CODE,merge=1,delta=2
   141                           	psect	text104,local,class=CODE,merge=1,delta=2
   142                           	psect	text105,local,class=CODE,merge=1,delta=2
   143                           	psect	text106,local,class=CODE,merge=1,delta=2
   144                           	psect	text107,local,class=CODE,merge=1,delta=2
   145                           	psect	text108,local,class=CODE,merge=1,delta=2
   146                           	psect	text109,local,class=CODE,merge=1,delta=2
   147                           	psect	text110,local,class=CODE,merge=1,delta=2
   148                           	psect	text111,local,class=CODE,merge=1,delta=2
   149                           	psect	text112,local,class=CODE,merge=1,inline,delta=2
   150                           	psect	text113,local,class=CODE,merge=1,delta=2
   151                           	psect	text114,local,class=CODE,merge=1,delta=2
   152                           	psect	text115,local,class=CODE,merge=1,delta=2
   153                           	psect	text116,local,class=CODE,merge=1,inline,delta=2
   154                           	psect	text117,local,class=CODE,merge=1,inline,delta=2
   155                           	psect	text118,local,class=CODE,merge=1,delta=2
   156                           	psect	text119,local,class=CODE,merge=1,delta=2
   157                           	psect	text120,local,class=CODE,merge=1,delta=2
   158                           	psect	text121,local,class=CODE,merge=1,delta=2
   159                           	psect	text122,local,class=CODE,merge=1,delta=2
   160                           	psect	text123,local,class=CODE,merge=1,delta=2
   161                           	psect	text124,local,class=CODE,merge=1,delta=2
   162                           	psect	text125,local,class=CODE,merge=1,delta=2
   163                           	psect	text126,local,class=CODE,merge=1,delta=2
   164                           	psect	text127,local,class=CODE,merge=1,delta=2
   165                           	psect	text128,local,class=CODE,merge=1,delta=2
   166                           	psect	text129,local,class=CODE,merge=1,delta=2
   167                           	psect	text130,local,class=CODE,merge=1,delta=2
   168                           	psect	text131,local,class=CODE,merge=1,delta=2
   169                           	psect	text132,local,class=CODE,merge=1,delta=2
   170                           	psect	text133,local,class=CODE,merge=1,delta=2
   171                           	psect	text134,local,class=CODE,merge=1,inline,delta=2
   172                           	psect	text135,local,class=CODE,merge=1,inline,delta=2
   173                           	psect	text136,local,class=CODE,merge=1,inline,delta=2
   174                           	psect	text137,local,class=CODE,merge=1,inline,delta=2
   175                           	psect	text138,local,class=CODE,merge=1,inline,delta=2
   176                           	psect	text139,local,class=CODE,merge=1,inline,delta=2
   177                           	psect	text140,local,class=CODE,merge=1,inline,delta=2
   178                           	psect	text141,local,class=CODE,merge=1,delta=2
   179                           	psect	text142,local,class=CODE,merge=1,delta=2
   180                           	psect	text143,local,class=CODE,merge=1,delta=2
   181                           	psect	text144,local,class=CODE,merge=1,delta=2
   182                           	psect	text145,local,class=CODE,merge=1,delta=2
   183                           	psect	text146,local,class=CODE,merge=1,delta=2
   184                           	psect	text147,local,class=CODE,merge=1,delta=2
   185                           	psect	text148,local,class=CODE,merge=1,delta=2
   186                           	psect	text149,local,class=CODE,merge=1,delta=2
   187                           	psect	text150,local,class=CODE,merge=1,delta=2
   188                           	psect	text151,local,class=CODE,merge=1,delta=2
   189                           	psect	text152,local,class=CODE,merge=1,delta=2
   190                           	psect	text153,local,class=CODE,merge=1,delta=2
   191                           	psect	text154,local,class=CODE,merge=1,delta=2
   192                           	psect	text155,local,class=CODE,merge=1,delta=2
   193                           	psect	text156,local,class=CODE,merge=1,inline,delta=2
   194                           	psect	text157,local,class=CODE,merge=1,inline,delta=2
   195                           	psect	text158,local,class=CODE,merge=1,inline,delta=2
   196                           	psect	text159,local,class=CODE,merge=1,delta=2
   197                           	psect	text160,local,class=CODE,merge=1,inline,delta=2
   198                           	psect	text161,local,class=CODE,merge=1,inline,delta=2
   199                           	psect	text162,local,class=CODE,merge=1,inline,delta=2
   200                           	psect	intentry,global,class=CODE,delta=2
   201                           	psect	text164,local,class=CODE,merge=1,delta=2
   202                           	psect	text165,local,class=CODE,merge=1,delta=2
   203                           	psect	text166,local,class=CODE,merge=1,delta=2
   204                           	psect	text167,local,class=CODE,merge=1,delta=2
   205                           	psect	text168,local,class=CODE,merge=1,delta=2
   206                           	psect	text169,local,class=CODE,merge=1,delta=2
   207                           	psect	text170,local,class=CODE,merge=1,delta=2
   208                           	psect	text171,local,class=CODE,merge=1,delta=2
   209                           	psect	text172,local,class=CODE,merge=1,delta=2
   210                           	psect	text173,local,class=CODE,merge=1,delta=2
   211                           	psect	text174,local,class=CODE,merge=1,delta=2
   212                           	psect	text175,local,class=CODE,merge=1,delta=2
   213                           	psect	text176,local,class=CODE,merge=1,delta=2
   214                           	psect	text177,local,class=CODE,merge=1,delta=2
   215                           	psect	text178,local,class=CODE,merge=1,delta=2
   216                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
   217                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   218                           	dabs	1,0x7E,2
   219     0000                     
   220                           ; Version 2.35
   221                           ; Generated 01/06/2021 GMT
   222                           ; 
   223                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   224                           ; All rights reserved.
   225                           ; 
   226                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   227                           ; 
   228                           ; Redistribution and use in source and binary forms, with or without modification, are
   229                           ; permitted provided that the following conditions are met:
   230                           ; 
   231                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   232                           ;        conditions and the following disclaimer.
   233                           ; 
   234                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   235                           ;        of conditions and the following disclaimer in the documentation and/or other
   236                           ;        materials provided with the distribution. Publication is not required when
   237                           ;        this file is used in an embedded application.
   238                           ; 
   239                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   240                           ;        software without specific prior written permission.
   241                           ; 
   242                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   243                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   244                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   245                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   246                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   247                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   248                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   249                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   250                           ; 
   251                           ; 
   252                           ; Code-generator required, PIC16LF18456 Definitions
   253                           ; 
   254                           ; SFR Addresses
   255     0000                     	;# 
   256     0001                     	;# 
   257     0002                     	;# 
   258     0003                     	;# 
   259     0004                     	;# 
   260     0005                     	;# 
   261     0006                     	;# 
   262     0007                     	;# 
   263     0008                     	;# 
   264     0009                     	;# 
   265     000A                     	;# 
   266     000B                     	;# 
   267     000C                     	;# 
   268     000D                     	;# 
   269     000E                     	;# 
   270     0010                     	;# 
   271     0012                     	;# 
   272     0013                     	;# 
   273     0014                     	;# 
   274     0016                     	;# 
   275     0018                     	;# 
   276     0019                     	;# 
   277     001A                     	;# 
   278     001C                     	;# 
   279     008C                     	;# 
   280     008C                     	;# 
   281     008D                     	;# 
   282     008E                     	;# 
   283     008E                     	;# 
   284     008F                     	;# 
   285     0090                     	;# 
   286     0090                     	;# 
   287     0091                     	;# 
   288     0092                     	;# 
   289     0092                     	;# 
   290     0093                     	;# 
   291     0094                     	;# 
   292     0094                     	;# 
   293     0095                     	;# 
   294     0096                     	;# 
   295     0096                     	;# 
   296     0097                     	;# 
   297     0098                     	;# 
   298     0099                     	;# 
   299     009A                     	;# 
   300     009B                     	;# 
   301     009B                     	;# 
   302     009C                     	;# 
   303     009D                     	;# 
   304     009D                     	;# 
   305     009E                     	;# 
   306     009F                     	;# 
   307     010C                     	;# 
   308     010C                     	;# 
   309     010D                     	;# 
   310     010E                     	;# 
   311     010F                     	;# 
   312     010F                     	;# 
   313     0110                     	;# 
   314     0111                     	;# 
   315     0112                     	;# 
   316     0113                     	;# 
   317     0114                     	;# 
   318     0115                     	;# 
   319     0116                     	;# 
   320     0117                     	;# 
   321     0118                     	;# 
   322     0119                     	;# 
   323     0119                     	;# 
   324     0119                     	;# 
   325     011A                     	;# 
   326     011A                     	;# 
   327     011A                     	;# 
   328     011B                     	;# 
   329     011B                     	;# 
   330     011B                     	;# 
   331     011B                     	;# 
   332     011B                     	;# 
   333     011C                     	;# 
   334     011C                     	;# 
   335     011C                     	;# 
   336     011D                     	;# 
   337     011D                     	;# 
   338     011D                     	;# 
   339     011E                     	;# 
   340     011E                     	;# 
   341     011E                     	;# 
   342     011F                     	;# 
   343     011F                     	;# 
   344     011F                     	;# 
   345     011F                     	;# 
   346     011F                     	;# 
   347     018C                     	;# 
   348     018D                     	;# 
   349     018E                     	;# 
   350     018F                     	;# 
   351     0190                     	;# 
   352     0191                     	;# 
   353     0192                     	;# 
   354     0196                     	;# 
   355     0197                     	;# 
   356     0198                     	;# 
   357     0199                     	;# 
   358     019A                     	;# 
   359     019B                     	;# 
   360     019C                     	;# 
   361     020C                     	;# 
   362     020D                     	;# 
   363     020E                     	;# 
   364     020E                     	;# 
   365     020F                     	;# 
   366     020F                     	;# 
   367     0210                     	;# 
   368     0210                     	;# 
   369     0211                     	;# 
   370     0211                     	;# 
   371     0212                     	;# 
   372     0213                     	;# 
   373     0214                     	;# 
   374     0214                     	;# 
   375     0215                     	;# 
   376     0215                     	;# 
   377     0216                     	;# 
   378     0216                     	;# 
   379     0217                     	;# 
   380     0217                     	;# 
   381     0218                     	;# 
   382     0219                     	;# 
   383     021A                     	;# 
   384     021A                     	;# 
   385     021B                     	;# 
   386     021B                     	;# 
   387     021C                     	;# 
   388     021C                     	;# 
   389     021D                     	;# 
   390     021D                     	;# 
   391     021E                     	;# 
   392     021F                     	;# 
   393     028C                     	;# 
   394     028C                     	;# 
   395     028D                     	;# 
   396     028D                     	;# 
   397     028E                     	;# 
   398     028F                     	;# 
   399     0290                     	;# 
   400     0291                     	;# 
   401     0292                     	;# 
   402     0292                     	;# 
   403     0293                     	;# 
   404     0293                     	;# 
   405     0294                     	;# 
   406     0295                     	;# 
   407     0296                     	;# 
   408     0297                     	;# 
   409     0298                     	;# 
   410     0298                     	;# 
   411     0299                     	;# 
   412     0299                     	;# 
   413     029A                     	;# 
   414     029B                     	;# 
   415     029C                     	;# 
   416     029D                     	;# 
   417     029F                     	;# 
   418     030C                     	;# 
   419     030C                     	;# 
   420     030D                     	;# 
   421     030E                     	;# 
   422     030F                     	;# 
   423     0310                     	;# 
   424     0310                     	;# 
   425     0311                     	;# 
   426     0312                     	;# 
   427     0313                     	;# 
   428     0314                     	;# 
   429     0314                     	;# 
   430     0315                     	;# 
   431     0316                     	;# 
   432     0317                     	;# 
   433     0318                     	;# 
   434     0318                     	;# 
   435     0319                     	;# 
   436     031A                     	;# 
   437     031B                     	;# 
   438     031C                     	;# 
   439     031C                     	;# 
   440     031D                     	;# 
   441     031E                     	;# 
   442     031F                     	;# 
   443     038C                     	;# 
   444     038C                     	;# 
   445     038D                     	;# 
   446     038E                     	;# 
   447     0390                     	;# 
   448     0390                     	;# 
   449     0391                     	;# 
   450     0392                     	;# 
   451     048C                     	;# 
   452     048C                     	;# 
   453     048D                     	;# 
   454     048E                     	;# 
   455     048F                     	;# 
   456     048F                     	;# 
   457     0490                     	;# 
   458     0491                     	;# 
   459     0492                     	;# 
   460     0492                     	;# 
   461     0493                     	;# 
   462     0494                     	;# 
   463     0495                     	;# 
   464     0495                     	;# 
   465     0496                     	;# 
   466     0497                     	;# 
   467     0498                     	;# 
   468     0499                     	;# 
   469     049A                     	;# 
   470     049B                     	;# 
   471     049C                     	;# 
   472     049D                     	;# 
   473     050C                     	;# 
   474     050C                     	;# 
   475     050D                     	;# 
   476     050E                     	;# 
   477     050F                     	;# 
   478     050F                     	;# 
   479     0510                     	;# 
   480     0511                     	;# 
   481     0512                     	;# 
   482     0512                     	;# 
   483     0513                     	;# 
   484     0514                     	;# 
   485     0515                     	;# 
   486     0515                     	;# 
   487     0516                     	;# 
   488     0517                     	;# 
   489     0518                     	;# 
   490     0519                     	;# 
   491     051A                     	;# 
   492     051B                     	;# 
   493     051C                     	;# 
   494     051D                     	;# 
   495     058C                     	;# 
   496     058C                     	;# 
   497     058D                     	;# 
   498     058E                     	;# 
   499     058F                     	;# 
   500     058F                     	;# 
   501     0590                     	;# 
   502     0591                     	;# 
   503     0592                     	;# 
   504     0593                     	;# 
   505     059C                     	;# 
   506     059C                     	;# 
   507     059D                     	;# 
   508     059D                     	;# 
   509     059E                     	;# 
   510     059F                     	;# 
   511     060C                     	;# 
   512     060C                     	;# 
   513     060D                     	;# 
   514     060D                     	;# 
   515     060E                     	;# 
   516     060F                     	;# 
   517     0610                     	;# 
   518     0611                     	;# 
   519     0612                     	;# 
   520     0613                     	;# 
   521     0614                     	;# 
   522     0616                     	;# 
   523     0616                     	;# 
   524     0617                     	;# 
   525     0617                     	;# 
   526     0618                     	;# 
   527     0619                     	;# 
   528     061A                     	;# 
   529     061B                     	;# 
   530     061C                     	;# 
   531     061D                     	;# 
   532     061E                     	;# 
   533     068C                     	;# 
   534     068D                     	;# 
   535     068E                     	;# 
   536     068F                     	;# 
   537     0690                     	;# 
   538     0691                     	;# 
   539     0692                     	;# 
   540     0693                     	;# 
   541     0694                     	;# 
   542     070C                     	;# 
   543     070D                     	;# 
   544     070E                     	;# 
   545     070F                     	;# 
   546     0710                     	;# 
   547     0711                     	;# 
   548     0712                     	;# 
   549     0713                     	;# 
   550     0714                     	;# 
   551     0716                     	;# 
   552     0717                     	;# 
   553     0718                     	;# 
   554     0719                     	;# 
   555     071A                     	;# 
   556     071B                     	;# 
   557     071C                     	;# 
   558     071D                     	;# 
   559     071E                     	;# 
   560     0796                     	;# 
   561     0797                     	;# 
   562     0798                     	;# 
   563     0799                     	;# 
   564     079A                     	;# 
   565     079B                     	;# 
   566     079C                     	;# 
   567     079D                     	;# 
   568     080C                     	;# 
   569     080D                     	;# 
   570     080E                     	;# 
   571     080F                     	;# 
   572     0810                     	;# 
   573     0811                     	;# 
   574     0813                     	;# 
   575     0814                     	;# 
   576     081A                     	;# 
   577     081A                     	;# 
   578     081B                     	;# 
   579     081C                     	;# 
   580     081C                     	;# 
   581     081D                     	;# 
   582     081E                     	;# 
   583     081F                     	;# 
   584     088C                     	;# 
   585     088D                     	;# 
   586     088E                     	;# 
   587     088F                     	;# 
   588     0890                     	;# 
   589     0891                     	;# 
   590     0892                     	;# 
   591     0893                     	;# 
   592     0895                     	;# 
   593     0896                     	;# 
   594     0897                     	;# 
   595     0898                     	;# 
   596     0899                     	;# 
   597     089A                     	;# 
   598     089B                     	;# 
   599     090C                     	;# 
   600     090E                     	;# 
   601     090F                     	;# 
   602     091F                     	;# 
   603     098F                     	;# 
   604     098F                     	;# 
   605     0990                     	;# 
   606     0991                     	;# 
   607     0992                     	;# 
   608     0993                     	;# 
   609     0994                     	;# 
   610     0995                     	;# 
   611     0996                     	;# 
   612     0997                     	;# 
   613     0A19                     	;# 
   614     0A19                     	;# 
   615     0A1A                     	;# 
   616     0A1A                     	;# 
   617     0A1B                     	;# 
   618     0A1B                     	;# 
   619     0A1B                     	;# 
   620     0A1C                     	;# 
   621     0A1C                     	;# 
   622     0A1D                     	;# 
   623     0A1D                     	;# 
   624     0A1E                     	;# 
   625     0A1E                     	;# 
   626     0A1F                     	;# 
   627     0A1F                     	;# 
   628     0A1F                     	;# 
   629     1E0F                     	;# 
   630     1E10                     	;# 
   631     1E11                     	;# 
   632     1E12                     	;# 
   633     1E13                     	;# 
   634     1E14                     	;# 
   635     1E15                     	;# 
   636     1E16                     	;# 
   637     1E17                     	;# 
   638     1E18                     	;# 
   639     1E19                     	;# 
   640     1E1A                     	;# 
   641     1E1B                     	;# 
   642     1E1C                     	;# 
   643     1E1D                     	;# 
   644     1E1E                     	;# 
   645     1E1F                     	;# 
   646     1E20                     	;# 
   647     1E21                     	;# 
   648     1E22                     	;# 
   649     1E23                     	;# 
   650     1E24                     	;# 
   651     1E25                     	;# 
   652     1E26                     	;# 
   653     1E27                     	;# 
   654     1E28                     	;# 
   655     1E29                     	;# 
   656     1E2A                     	;# 
   657     1E2B                     	;# 
   658     1E2C                     	;# 
   659     1E2D                     	;# 
   660     1E2E                     	;# 
   661     1E2F                     	;# 
   662     1E30                     	;# 
   663     1E31                     	;# 
   664     1E32                     	;# 
   665     1E33                     	;# 
   666     1E34                     	;# 
   667     1E35                     	;# 
   668     1E36                     	;# 
   669     1E37                     	;# 
   670     1E8F                     	;# 
   671     1E90                     	;# 
   672     1E91                     	;# 
   673     1E92                     	;# 
   674     1E93                     	;# 
   675     1E94                     	;# 
   676     1E95                     	;# 
   677     1E96                     	;# 
   678     1E97                     	;# 
   679     1E9C                     	;# 
   680     1E9D                     	;# 
   681     1E9E                     	;# 
   682     1EA1                     	;# 
   683     1EA2                     	;# 
   684     1EA3                     	;# 
   685     1EA4                     	;# 
   686     1EA5                     	;# 
   687     1EA9                     	;# 
   688     1EAA                     	;# 
   689     1EAB                     	;# 
   690     1EAC                     	;# 
   691     1EB1                     	;# 
   692     1EB2                     	;# 
   693     1EB3                     	;# 
   694     1EB8                     	;# 
   695     1EB9                     	;# 
   696     1EBA                     	;# 
   697     1EBB                     	;# 
   698     1EBC                     	;# 
   699     1EBD                     	;# 
   700     1EBE                     	;# 
   701     1EC3                     	;# 
   702     1EC5                     	;# 
   703     1EC6                     	;# 
   704     1EC7                     	;# 
   705     1EC8                     	;# 
   706     1EC9                     	;# 
   707     1ECA                     	;# 
   708     1ECB                     	;# 
   709     1ECC                     	;# 
   710     1ECD                     	;# 
   711     1ECE                     	;# 
   712     1F10                     	;# 
   713     1F11                     	;# 
   714     1F12                     	;# 
   715     1F13                     	;# 
   716     1F14                     	;# 
   717     1F15                     	;# 
   718     1F16                     	;# 
   719     1F17                     	;# 
   720     1F18                     	;# 
   721     1F19                     	;# 
   722     1F1A                     	;# 
   723     1F1B                     	;# 
   724     1F1C                     	;# 
   725     1F1D                     	;# 
   726     1F1E                     	;# 
   727     1F1F                     	;# 
   728     1F20                     	;# 
   729     1F21                     	;# 
   730     1F22                     	;# 
   731     1F23                     	;# 
   732     1F24                     	;# 
   733     1F25                     	;# 
   734     1F26                     	;# 
   735     1F27                     	;# 
   736     1F38                     	;# 
   737     1F39                     	;# 
   738     1F3A                     	;# 
   739     1F3B                     	;# 
   740     1F3C                     	;# 
   741     1F3D                     	;# 
   742     1F3E                     	;# 
   743     1F3F                     	;# 
   744     1F43                     	;# 
   745     1F44                     	;# 
   746     1F45                     	;# 
   747     1F46                     	;# 
   748     1F47                     	;# 
   749     1F48                     	;# 
   750     1F49                     	;# 
   751     1F4A                     	;# 
   752     1F4E                     	;# 
   753     1F4F                     	;# 
   754     1F50                     	;# 
   755     1F51                     	;# 
   756     1F52                     	;# 
   757     1F53                     	;# 
   758     1F54                     	;# 
   759     1F55                     	;# 
   760     1F65                     	;# 
   761     1F66                     	;# 
   762     1F67                     	;# 
   763     1F68                     	;# 
   764     1F69                     	;# 
   765     1F6A                     	;# 
   766     1F6B                     	;# 
   767     1FE4                     	;# 
   768     1FE5                     	;# 
   769     1FE6                     	;# 
   770     1FE7                     	;# 
   771     1FE8                     	;# 
   772     1FE8                     	;# 
   773     1FE9                     	;# 
   774     1FEA                     	;# 
   775     1FEB                     	;# 
   776     1FED                     	;# 
   777     1FEE                     	;# 
   778     1FEF                     	;# 
   779     0000                     	;# 
   780     0001                     	;# 
   781     0002                     	;# 
   782     0003                     	;# 
   783     0004                     	;# 
   784     0005                     	;# 
   785     0006                     	;# 
   786     0007                     	;# 
   787     0008                     	;# 
   788     0009                     	;# 
   789     000A                     	;# 
   790     000B                     	;# 
   791     000C                     	;# 
   792     000D                     	;# 
   793     000E                     	;# 
   794     0010                     	;# 
   795     0012                     	;# 
   796     0013                     	;# 
   797     0014                     	;# 
   798     0016                     	;# 
   799     0018                     	;# 
   800     0019                     	;# 
   801     001A                     	;# 
   802     001C                     	;# 
   803     008C                     	;# 
   804     008C                     	;# 
   805     008D                     	;# 
   806     008E                     	;# 
   807     008E                     	;# 
   808     008F                     	;# 
   809     0090                     	;# 
   810     0090                     	;# 
   811     0091                     	;# 
   812     0092                     	;# 
   813     0092                     	;# 
   814     0093                     	;# 
   815     0094                     	;# 
   816     0094                     	;# 
   817     0095                     	;# 
   818     0096                     	;# 
   819     0096                     	;# 
   820     0097                     	;# 
   821     0098                     	;# 
   822     0099                     	;# 
   823     009A                     	;# 
   824     009B                     	;# 
   825     009B                     	;# 
   826     009C                     	;# 
   827     009D                     	;# 
   828     009D                     	;# 
   829     009E                     	;# 
   830     009F                     	;# 
   831     010C                     	;# 
   832     010C                     	;# 
   833     010D                     	;# 
   834     010E                     	;# 
   835     010F                     	;# 
   836     010F                     	;# 
   837     0110                     	;# 
   838     0111                     	;# 
   839     0112                     	;# 
   840     0113                     	;# 
   841     0114                     	;# 
   842     0115                     	;# 
   843     0116                     	;# 
   844     0117                     	;# 
   845     0118                     	;# 
   846     0119                     	;# 
   847     0119                     	;# 
   848     0119                     	;# 
   849     011A                     	;# 
   850     011A                     	;# 
   851     011A                     	;# 
   852     011B                     	;# 
   853     011B                     	;# 
   854     011B                     	;# 
   855     011B                     	;# 
   856     011B                     	;# 
   857     011C                     	;# 
   858     011C                     	;# 
   859     011C                     	;# 
   860     011D                     	;# 
   861     011D                     	;# 
   862     011D                     	;# 
   863     011E                     	;# 
   864     011E                     	;# 
   865     011E                     	;# 
   866     011F                     	;# 
   867     011F                     	;# 
   868     011F                     	;# 
   869     011F                     	;# 
   870     011F                     	;# 
   871     018C                     	;# 
   872     018D                     	;# 
   873     018E                     	;# 
   874     018F                     	;# 
   875     0190                     	;# 
   876     0191                     	;# 
   877     0192                     	;# 
   878     0196                     	;# 
   879     0197                     	;# 
   880     0198                     	;# 
   881     0199                     	;# 
   882     019A                     	;# 
   883     019B                     	;# 
   884     019C                     	;# 
   885     020C                     	;# 
   886     020D                     	;# 
   887     020E                     	;# 
   888     020E                     	;# 
   889     020F                     	;# 
   890     020F                     	;# 
   891     0210                     	;# 
   892     0210                     	;# 
   893     0211                     	;# 
   894     0211                     	;# 
   895     0212                     	;# 
   896     0213                     	;# 
   897     0214                     	;# 
   898     0214                     	;# 
   899     0215                     	;# 
   900     0215                     	;# 
   901     0216                     	;# 
   902     0216                     	;# 
   903     0217                     	;# 
   904     0217                     	;# 
   905     0218                     	;# 
   906     0219                     	;# 
   907     021A                     	;# 
   908     021A                     	;# 
   909     021B                     	;# 
   910     021B                     	;# 
   911     021C                     	;# 
   912     021C                     	;# 
   913     021D                     	;# 
   914     021D                     	;# 
   915     021E                     	;# 
   916     021F                     	;# 
   917     028C                     	;# 
   918     028C                     	;# 
   919     028D                     	;# 
   920     028D                     	;# 
   921     028E                     	;# 
   922     028F                     	;# 
   923     0290                     	;# 
   924     0291                     	;# 
   925     0292                     	;# 
   926     0292                     	;# 
   927     0293                     	;# 
   928     0293                     	;# 
   929     0294                     	;# 
   930     0295                     	;# 
   931     0296                     	;# 
   932     0297                     	;# 
   933     0298                     	;# 
   934     0298                     	;# 
   935     0299                     	;# 
   936     0299                     	;# 
   937     029A                     	;# 
   938     029B                     	;# 
   939     029C                     	;# 
   940     029D                     	;# 
   941     029F                     	;# 
   942     030C                     	;# 
   943     030C                     	;# 
   944     030D                     	;# 
   945     030E                     	;# 
   946     030F                     	;# 
   947     0310                     	;# 
   948     0310                     	;# 
   949     0311                     	;# 
   950     0312                     	;# 
   951     0313                     	;# 
   952     0314                     	;# 
   953     0314                     	;# 
   954     0315                     	;# 
   955     0316                     	;# 
   956     0317                     	;# 
   957     0318                     	;# 
   958     0318                     	;# 
   959     0319                     	;# 
   960     031A                     	;# 
   961     031B                     	;# 
   962     031C                     	;# 
   963     031C                     	;# 
   964     031D                     	;# 
   965     031E                     	;# 
   966     031F                     	;# 
   967     038C                     	;# 
   968     038C                     	;# 
   969     038D                     	;# 
   970     038E                     	;# 
   971     0390                     	;# 
   972     0390                     	;# 
   973     0391                     	;# 
   974     0392                     	;# 
   975     048C                     	;# 
   976     048C                     	;# 
   977     048D                     	;# 
   978     048E                     	;# 
   979     048F                     	;# 
   980     048F                     	;# 
   981     0490                     	;# 
   982     0491                     	;# 
   983     0492                     	;# 
   984     0492                     	;# 
   985     0493                     	;# 
   986     0494                     	;# 
   987     0495                     	;# 
   988     0495                     	;# 
   989     0496                     	;# 
   990     0497                     	;# 
   991     0498                     	;# 
   992     0499                     	;# 
   993     049A                     	;# 
   994     049B                     	;# 
   995     049C                     	;# 
   996     049D                     	;# 
   997     050C                     	;# 
   998     050C                     	;# 
   999     050D                     	;# 
  1000     050E                     	;# 
  1001     050F                     	;# 
  1002     050F                     	;# 
  1003     0510                     	;# 
  1004     0511                     	;# 
  1005     0512                     	;# 
  1006     0512                     	;# 
  1007     0513                     	;# 
  1008     0514                     	;# 
  1009     0515                     	;# 
  1010     0515                     	;# 
  1011     0516                     	;# 
  1012     0517                     	;# 
  1013     0518                     	;# 
  1014     0519                     	;# 
  1015     051A                     	;# 
  1016     051B                     	;# 
  1017     051C                     	;# 
  1018     051D                     	;# 
  1019     058C                     	;# 
  1020     058C                     	;# 
  1021     058D                     	;# 
  1022     058E                     	;# 
  1023     058F                     	;# 
  1024     058F                     	;# 
  1025     0590                     	;# 
  1026     0591                     	;# 
  1027     0592                     	;# 
  1028     0593                     	;# 
  1029     059C                     	;# 
  1030     059C                     	;# 
  1031     059D                     	;# 
  1032     059D                     	;# 
  1033     059E                     	;# 
  1034     059F                     	;# 
  1035     060C                     	;# 
  1036     060C                     	;# 
  1037     060D                     	;# 
  1038     060D                     	;# 
  1039     060E                     	;# 
  1040     060F                     	;# 
  1041     0610                     	;# 
  1042     0611                     	;# 
  1043     0612                     	;# 
  1044     0613                     	;# 
  1045     0614                     	;# 
  1046     0616                     	;# 
  1047     0616                     	;# 
  1048     0617                     	;# 
  1049     0617                     	;# 
  1050     0618                     	;# 
  1051     0619                     	;# 
  1052     061A                     	;# 
  1053     061B                     	;# 
  1054     061C                     	;# 
  1055     061D                     	;# 
  1056     061E                     	;# 
  1057     068C                     	;# 
  1058     068D                     	;# 
  1059     068E                     	;# 
  1060     068F                     	;# 
  1061     0690                     	;# 
  1062     0691                     	;# 
  1063     0692                     	;# 
  1064     0693                     	;# 
  1065     0694                     	;# 
  1066     070C                     	;# 
  1067     070D                     	;# 
  1068     070E                     	;# 
  1069     070F                     	;# 
  1070     0710                     	;# 
  1071     0711                     	;# 
  1072     0712                     	;# 
  1073     0713                     	;# 
  1074     0714                     	;# 
  1075     0716                     	;# 
  1076     0717                     	;# 
  1077     0718                     	;# 
  1078     0719                     	;# 
  1079     071A                     	;# 
  1080     071B                     	;# 
  1081     071C                     	;# 
  1082     071D                     	;# 
  1083     071E                     	;# 
  1084     0796                     	;# 
  1085     0797                     	;# 
  1086     0798                     	;# 
  1087     0799                     	;# 
  1088     079A                     	;# 
  1089     079B                     	;# 
  1090     079C                     	;# 
  1091     079D                     	;# 
  1092     080C                     	;# 
  1093     080D                     	;# 
  1094     080E                     	;# 
  1095     080F                     	;# 
  1096     0810                     	;# 
  1097     0811                     	;# 
  1098     0813                     	;# 
  1099     0814                     	;# 
  1100     081A                     	;# 
  1101     081A                     	;# 
  1102     081B                     	;# 
  1103     081C                     	;# 
  1104     081C                     	;# 
  1105     081D                     	;# 
  1106     081E                     	;# 
  1107     081F                     	;# 
  1108     088C                     	;# 
  1109     088D                     	;# 
  1110     088E                     	;# 
  1111     088F                     	;# 
  1112     0890                     	;# 
  1113     0891                     	;# 
  1114     0892                     	;# 
  1115     0893                     	;# 
  1116     0895                     	;# 
  1117     0896                     	;# 
  1118     0897                     	;# 
  1119     0898                     	;# 
  1120     0899                     	;# 
  1121     089A                     	;# 
  1122     089B                     	;# 
  1123     090C                     	;# 
  1124     090E                     	;# 
  1125     090F                     	;# 
  1126     091F                     	;# 
  1127     098F                     	;# 
  1128     098F                     	;# 
  1129     0990                     	;# 
  1130     0991                     	;# 
  1131     0992                     	;# 
  1132     0993                     	;# 
  1133     0994                     	;# 
  1134     0995                     	;# 
  1135     0996                     	;# 
  1136     0997                     	;# 
  1137     0A19                     	;# 
  1138     0A19                     	;# 
  1139     0A1A                     	;# 
  1140     0A1A                     	;# 
  1141     0A1B                     	;# 
  1142     0A1B                     	;# 
  1143     0A1B                     	;# 
  1144     0A1C                     	;# 
  1145     0A1C                     	;# 
  1146     0A1D                     	;# 
  1147     0A1D                     	;# 
  1148     0A1E                     	;# 
  1149     0A1E                     	;# 
  1150     0A1F                     	;# 
  1151     0A1F                     	;# 
  1152     0A1F                     	;# 
  1153     1E0F                     	;# 
  1154     1E10                     	;# 
  1155     1E11                     	;# 
  1156     1E12                     	;# 
  1157     1E13                     	;# 
  1158     1E14                     	;# 
  1159     1E15                     	;# 
  1160     1E16                     	;# 
  1161     1E17                     	;# 
  1162     1E18                     	;# 
  1163     1E19                     	;# 
  1164     1E1A                     	;# 
  1165     1E1B                     	;# 
  1166     1E1C                     	;# 
  1167     1E1D                     	;# 
  1168     1E1E                     	;# 
  1169     1E1F                     	;# 
  1170     1E20                     	;# 
  1171     1E21                     	;# 
  1172     1E22                     	;# 
  1173     1E23                     	;# 
  1174     1E24                     	;# 
  1175     1E25                     	;# 
  1176     1E26                     	;# 
  1177     1E27                     	;# 
  1178     1E28                     	;# 
  1179     1E29                     	;# 
  1180     1E2A                     	;# 
  1181     1E2B                     	;# 
  1182     1E2C                     	;# 
  1183     1E2D                     	;# 
  1184     1E2E                     	;# 
  1185     1E2F                     	;# 
  1186     1E30                     	;# 
  1187     1E31                     	;# 
  1188     1E32                     	;# 
  1189     1E33                     	;# 
  1190     1E34                     	;# 
  1191     1E35                     	;# 
  1192     1E36                     	;# 
  1193     1E37                     	;# 
  1194     1E8F                     	;# 
  1195     1E90                     	;# 
  1196     1E91                     	;# 
  1197     1E92                     	;# 
  1198     1E93                     	;# 
  1199     1E94                     	;# 
  1200     1E95                     	;# 
  1201     1E96                     	;# 
  1202     1E97                     	;# 
  1203     1E9C                     	;# 
  1204     1E9D                     	;# 
  1205     1E9E                     	;# 
  1206     1EA1                     	;# 
  1207     1EA2                     	;# 
  1208     1EA3                     	;# 
  1209     1EA4                     	;# 
  1210     1EA5                     	;# 
  1211     1EA9                     	;# 
  1212     1EAA                     	;# 
  1213     1EAB                     	;# 
  1214     1EAC                     	;# 
  1215     1EB1                     	;# 
  1216     1EB2                     	;# 
  1217     1EB3                     	;# 
  1218     1EB8                     	;# 
  1219     1EB9                     	;# 
  1220     1EBA                     	;# 
  1221     1EBB                     	;# 
  1222     1EBC                     	;# 
  1223     1EBD                     	;# 
  1224     1EBE                     	;# 
  1225     1EC3                     	;# 
  1226     1EC5                     	;# 
  1227     1EC6                     	;# 
  1228     1EC7                     	;# 
  1229     1EC8                     	;# 
  1230     1EC9                     	;# 
  1231     1ECA                     	;# 
  1232     1ECB                     	;# 
  1233     1ECC                     	;# 
  1234     1ECD                     	;# 
  1235     1ECE                     	;# 
  1236     1F10                     	;# 
  1237     1F11                     	;# 
  1238     1F12                     	;# 
  1239     1F13                     	;# 
  1240     1F14                     	;# 
  1241     1F15                     	;# 
  1242     1F16                     	;# 
  1243     1F17                     	;# 
  1244     1F18                     	;# 
  1245     1F19                     	;# 
  1246     1F1A                     	;# 
  1247     1F1B                     	;# 
  1248     1F1C                     	;# 
  1249     1F1D                     	;# 
  1250     1F1E                     	;# 
  1251     1F1F                     	;# 
  1252     1F20                     	;# 
  1253     1F21                     	;# 
  1254     1F22                     	;# 
  1255     1F23                     	;# 
  1256     1F24                     	;# 
  1257     1F25                     	;# 
  1258     1F26                     	;# 
  1259     1F27                     	;# 
  1260     1F38                     	;# 
  1261     1F39                     	;# 
  1262     1F3A                     	;# 
  1263     1F3B                     	;# 
  1264     1F3C                     	;# 
  1265     1F3D                     	;# 
  1266     1F3E                     	;# 
  1267     1F3F                     	;# 
  1268     1F43                     	;# 
  1269     1F44                     	;# 
  1270     1F45                     	;# 
  1271     1F46                     	;# 
  1272     1F47                     	;# 
  1273     1F48                     	;# 
  1274     1F49                     	;# 
  1275     1F4A                     	;# 
  1276     1F4E                     	;# 
  1277     1F4F                     	;# 
  1278     1F50                     	;# 
  1279     1F51                     	;# 
  1280     1F52                     	;# 
  1281     1F53                     	;# 
  1282     1F54                     	;# 
  1283     1F55                     	;# 
  1284     1F65                     	;# 
  1285     1F66                     	;# 
  1286     1F67                     	;# 
  1287     1F68                     	;# 
  1288     1F69                     	;# 
  1289     1F6A                     	;# 
  1290     1F6B                     	;# 
  1291     1FE4                     	;# 
  1292     1FE5                     	;# 
  1293     1FE6                     	;# 
  1294     1FE7                     	;# 
  1295     1FE8                     	;# 
  1296     1FE8                     	;# 
  1297     1FE9                     	;# 
  1298     1FEA                     	;# 
  1299     1FEB                     	;# 
  1300     1FED                     	;# 
  1301     1FEE                     	;# 
  1302     1FEF                     	;# 
  1303     0000                     	;# 
  1304     0001                     	;# 
  1305     0002                     	;# 
  1306     0003                     	;# 
  1307     0004                     	;# 
  1308     0005                     	;# 
  1309     0006                     	;# 
  1310     0007                     	;# 
  1311     0008                     	;# 
  1312     0009                     	;# 
  1313     000A                     	;# 
  1314     000B                     	;# 
  1315     000C                     	;# 
  1316     000D                     	;# 
  1317     000E                     	;# 
  1318     0010                     	;# 
  1319     0012                     	;# 
  1320     0013                     	;# 
  1321     0014                     	;# 
  1322     0016                     	;# 
  1323     0018                     	;# 
  1324     0019                     	;# 
  1325     001A                     	;# 
  1326     001C                     	;# 
  1327     008C                     	;# 
  1328     008C                     	;# 
  1329     008D                     	;# 
  1330     008E                     	;# 
  1331     008E                     	;# 
  1332     008F                     	;# 
  1333     0090                     	;# 
  1334     0090                     	;# 
  1335     0091                     	;# 
  1336     0092                     	;# 
  1337     0092                     	;# 
  1338     0093                     	;# 
  1339     0094                     	;# 
  1340     0094                     	;# 
  1341     0095                     	;# 
  1342     0096                     	;# 
  1343     0096                     	;# 
  1344     0097                     	;# 
  1345     0098                     	;# 
  1346     0099                     	;# 
  1347     009A                     	;# 
  1348     009B                     	;# 
  1349     009B                     	;# 
  1350     009C                     	;# 
  1351     009D                     	;# 
  1352     009D                     	;# 
  1353     009E                     	;# 
  1354     009F                     	;# 
  1355     010C                     	;# 
  1356     010C                     	;# 
  1357     010D                     	;# 
  1358     010E                     	;# 
  1359     010F                     	;# 
  1360     010F                     	;# 
  1361     0110                     	;# 
  1362     0111                     	;# 
  1363     0112                     	;# 
  1364     0113                     	;# 
  1365     0114                     	;# 
  1366     0115                     	;# 
  1367     0116                     	;# 
  1368     0117                     	;# 
  1369     0118                     	;# 
  1370     0119                     	;# 
  1371     0119                     	;# 
  1372     0119                     	;# 
  1373     011A                     	;# 
  1374     011A                     	;# 
  1375     011A                     	;# 
  1376     011B                     	;# 
  1377     011B                     	;# 
  1378     011B                     	;# 
  1379     011B                     	;# 
  1380     011B                     	;# 
  1381     011C                     	;# 
  1382     011C                     	;# 
  1383     011C                     	;# 
  1384     011D                     	;# 
  1385     011D                     	;# 
  1386     011D                     	;# 
  1387     011E                     	;# 
  1388     011E                     	;# 
  1389     011E                     	;# 
  1390     011F                     	;# 
  1391     011F                     	;# 
  1392     011F                     	;# 
  1393     011F                     	;# 
  1394     011F                     	;# 
  1395     018C                     	;# 
  1396     018D                     	;# 
  1397     018E                     	;# 
  1398     018F                     	;# 
  1399     0190                     	;# 
  1400     0191                     	;# 
  1401     0192                     	;# 
  1402     0196                     	;# 
  1403     0197                     	;# 
  1404     0198                     	;# 
  1405     0199                     	;# 
  1406     019A                     	;# 
  1407     019B                     	;# 
  1408     019C                     	;# 
  1409     020C                     	;# 
  1410     020D                     	;# 
  1411     020E                     	;# 
  1412     020E                     	;# 
  1413     020F                     	;# 
  1414     020F                     	;# 
  1415     0210                     	;# 
  1416     0210                     	;# 
  1417     0211                     	;# 
  1418     0211                     	;# 
  1419     0212                     	;# 
  1420     0213                     	;# 
  1421     0214                     	;# 
  1422     0214                     	;# 
  1423     0215                     	;# 
  1424     0215                     	;# 
  1425     0216                     	;# 
  1426     0216                     	;# 
  1427     0217                     	;# 
  1428     0217                     	;# 
  1429     0218                     	;# 
  1430     0219                     	;# 
  1431     021A                     	;# 
  1432     021A                     	;# 
  1433     021B                     	;# 
  1434     021B                     	;# 
  1435     021C                     	;# 
  1436     021C                     	;# 
  1437     021D                     	;# 
  1438     021D                     	;# 
  1439     021E                     	;# 
  1440     021F                     	;# 
  1441     028C                     	;# 
  1442     028C                     	;# 
  1443     028D                     	;# 
  1444     028D                     	;# 
  1445     028E                     	;# 
  1446     028F                     	;# 
  1447     0290                     	;# 
  1448     0291                     	;# 
  1449     0292                     	;# 
  1450     0292                     	;# 
  1451     0293                     	;# 
  1452     0293                     	;# 
  1453     0294                     	;# 
  1454     0295                     	;# 
  1455     0296                     	;# 
  1456     0297                     	;# 
  1457     0298                     	;# 
  1458     0298                     	;# 
  1459     0299                     	;# 
  1460     0299                     	;# 
  1461     029A                     	;# 
  1462     029B                     	;# 
  1463     029C                     	;# 
  1464     029D                     	;# 
  1465     029F                     	;# 
  1466     030C                     	;# 
  1467     030C                     	;# 
  1468     030D                     	;# 
  1469     030E                     	;# 
  1470     030F                     	;# 
  1471     0310                     	;# 
  1472     0310                     	;# 
  1473     0311                     	;# 
  1474     0312                     	;# 
  1475     0313                     	;# 
  1476     0314                     	;# 
  1477     0314                     	;# 
  1478     0315                     	;# 
  1479     0316                     	;# 
  1480     0317                     	;# 
  1481     0318                     	;# 
  1482     0318                     	;# 
  1483     0319                     	;# 
  1484     031A                     	;# 
  1485     031B                     	;# 
  1486     031C                     	;# 
  1487     031C                     	;# 
  1488     031D                     	;# 
  1489     031E                     	;# 
  1490     031F                     	;# 
  1491     038C                     	;# 
  1492     038C                     	;# 
  1493     038D                     	;# 
  1494     038E                     	;# 
  1495     0390                     	;# 
  1496     0390                     	;# 
  1497     0391                     	;# 
  1498     0392                     	;# 
  1499     048C                     	;# 
  1500     048C                     	;# 
  1501     048D                     	;# 
  1502     048E                     	;# 
  1503     048F                     	;# 
  1504     048F                     	;# 
  1505     0490                     	;# 
  1506     0491                     	;# 
  1507     0492                     	;# 
  1508     0492                     	;# 
  1509     0493                     	;# 
  1510     0494                     	;# 
  1511     0495                     	;# 
  1512     0495                     	;# 
  1513     0496                     	;# 
  1514     0497                     	;# 
  1515     0498                     	;# 
  1516     0499                     	;# 
  1517     049A                     	;# 
  1518     049B                     	;# 
  1519     049C                     	;# 
  1520     049D                     	;# 
  1521     050C                     	;# 
  1522     050C                     	;# 
  1523     050D                     	;# 
  1524     050E                     	;# 
  1525     050F                     	;# 
  1526     050F                     	;# 
  1527     0510                     	;# 
  1528     0511                     	;# 
  1529     0512                     	;# 
  1530     0512                     	;# 
  1531     0513                     	;# 
  1532     0514                     	;# 
  1533     0515                     	;# 
  1534     0515                     	;# 
  1535     0516                     	;# 
  1536     0517                     	;# 
  1537     0518                     	;# 
  1538     0519                     	;# 
  1539     051A                     	;# 
  1540     051B                     	;# 
  1541     051C                     	;# 
  1542     051D                     	;# 
  1543     058C                     	;# 
  1544     058C                     	;# 
  1545     058D                     	;# 
  1546     058E                     	;# 
  1547     058F                     	;# 
  1548     058F                     	;# 
  1549     0590                     	;# 
  1550     0591                     	;# 
  1551     0592                     	;# 
  1552     0593                     	;# 
  1553     059C                     	;# 
  1554     059C                     	;# 
  1555     059D                     	;# 
  1556     059D                     	;# 
  1557     059E                     	;# 
  1558     059F                     	;# 
  1559     060C                     	;# 
  1560     060C                     	;# 
  1561     060D                     	;# 
  1562     060D                     	;# 
  1563     060E                     	;# 
  1564     060F                     	;# 
  1565     0610                     	;# 
  1566     0611                     	;# 
  1567     0612                     	;# 
  1568     0613                     	;# 
  1569     0614                     	;# 
  1570     0616                     	;# 
  1571     0616                     	;# 
  1572     0617                     	;# 
  1573     0617                     	;# 
  1574     0618                     	;# 
  1575     0619                     	;# 
  1576     061A                     	;# 
  1577     061B                     	;# 
  1578     061C                     	;# 
  1579     061D                     	;# 
  1580     061E                     	;# 
  1581     068C                     	;# 
  1582     068D                     	;# 
  1583     068E                     	;# 
  1584     068F                     	;# 
  1585     0690                     	;# 
  1586     0691                     	;# 
  1587     0692                     	;# 
  1588     0693                     	;# 
  1589     0694                     	;# 
  1590     070C                     	;# 
  1591     070D                     	;# 
  1592     070E                     	;# 
  1593     070F                     	;# 
  1594     0710                     	;# 
  1595     0711                     	;# 
  1596     0712                     	;# 
  1597     0713                     	;# 
  1598     0714                     	;# 
  1599     0716                     	;# 
  1600     0717                     	;# 
  1601     0718                     	;# 
  1602     0719                     	;# 
  1603     071A                     	;# 
  1604     071B                     	;# 
  1605     071C                     	;# 
  1606     071D                     	;# 
  1607     071E                     	;# 
  1608     0796                     	;# 
  1609     0797                     	;# 
  1610     0798                     	;# 
  1611     0799                     	;# 
  1612     079A                     	;# 
  1613     079B                     	;# 
  1614     079C                     	;# 
  1615     079D                     	;# 
  1616     080C                     	;# 
  1617     080D                     	;# 
  1618     080E                     	;# 
  1619     080F                     	;# 
  1620     0810                     	;# 
  1621     0811                     	;# 
  1622     0813                     	;# 
  1623     0814                     	;# 
  1624     081A                     	;# 
  1625     081A                     	;# 
  1626     081B                     	;# 
  1627     081C                     	;# 
  1628     081C                     	;# 
  1629     081D                     	;# 
  1630     081E                     	;# 
  1631     081F                     	;# 
  1632     088C                     	;# 
  1633     088D                     	;# 
  1634     088E                     	;# 
  1635     088F                     	;# 
  1636     0890                     	;# 
  1637     0891                     	;# 
  1638     0892                     	;# 
  1639     0893                     	;# 
  1640     0895                     	;# 
  1641     0896                     	;# 
  1642     0897                     	;# 
  1643     0898                     	;# 
  1644     0899                     	;# 
  1645     089A                     	;# 
  1646     089B                     	;# 
  1647     090C                     	;# 
  1648     090E                     	;# 
  1649     090F                     	;# 
  1650     091F                     	;# 
  1651     098F                     	;# 
  1652     098F                     	;# 
  1653     0990                     	;# 
  1654     0991                     	;# 
  1655     0992                     	;# 
  1656     0993                     	;# 
  1657     0994                     	;# 
  1658     0995                     	;# 
  1659     0996                     	;# 
  1660     0997                     	;# 
  1661     0A19                     	;# 
  1662     0A19                     	;# 
  1663     0A1A                     	;# 
  1664     0A1A                     	;# 
  1665     0A1B                     	;# 
  1666     0A1B                     	;# 
  1667     0A1B                     	;# 
  1668     0A1C                     	;# 
  1669     0A1C                     	;# 
  1670     0A1D                     	;# 
  1671     0A1D                     	;# 
  1672     0A1E                     	;# 
  1673     0A1E                     	;# 
  1674     0A1F                     	;# 
  1675     0A1F                     	;# 
  1676     0A1F                     	;# 
  1677     1E0F                     	;# 
  1678     1E10                     	;# 
  1679     1E11                     	;# 
  1680     1E12                     	;# 
  1681     1E13                     	;# 
  1682     1E14                     	;# 
  1683     1E15                     	;# 
  1684     1E16                     	;# 
  1685     1E17                     	;# 
  1686     1E18                     	;# 
  1687     1E19                     	;# 
  1688     1E1A                     	;# 
  1689     1E1B                     	;# 
  1690     1E1C                     	;# 
  1691     1E1D                     	;# 
  1692     1E1E                     	;# 
  1693     1E1F                     	;# 
  1694     1E20                     	;# 
  1695     1E21                     	;# 
  1696     1E22                     	;# 
  1697     1E23                     	;# 
  1698     1E24                     	;# 
  1699     1E25                     	;# 
  1700     1E26                     	;# 
  1701     1E27                     	;# 
  1702     1E28                     	;# 
  1703     1E29                     	;# 
  1704     1E2A                     	;# 
  1705     1E2B                     	;# 
  1706     1E2C                     	;# 
  1707     1E2D                     	;# 
  1708     1E2E                     	;# 
  1709     1E2F                     	;# 
  1710     1E30                     	;# 
  1711     1E31                     	;# 
  1712     1E32                     	;# 
  1713     1E33                     	;# 
  1714     1E34                     	;# 
  1715     1E35                     	;# 
  1716     1E36                     	;# 
  1717     1E37                     	;# 
  1718     1E8F                     	;# 
  1719     1E90                     	;# 
  1720     1E91                     	;# 
  1721     1E92                     	;# 
  1722     1E93                     	;# 
  1723     1E94                     	;# 
  1724     1E95                     	;# 
  1725     1E96                     	;# 
  1726     1E97                     	;# 
  1727     1E9C                     	;# 
  1728     1E9D                     	;# 
  1729     1E9E                     	;# 
  1730     1EA1                     	;# 
  1731     1EA2                     	;# 
  1732     1EA3                     	;# 
  1733     1EA4                     	;# 
  1734     1EA5                     	;# 
  1735     1EA9                     	;# 
  1736     1EAA                     	;# 
  1737     1EAB                     	;# 
  1738     1EAC                     	;# 
  1739     1EB1                     	;# 
  1740     1EB2                     	;# 
  1741     1EB3                     	;# 
  1742     1EB8                     	;# 
  1743     1EB9                     	;# 
  1744     1EBA                     	;# 
  1745     1EBB                     	;# 
  1746     1EBC                     	;# 
  1747     1EBD                     	;# 
  1748     1EBE                     	;# 
  1749     1EC3                     	;# 
  1750     1EC5                     	;# 
  1751     1EC6                     	;# 
  1752     1EC7                     	;# 
  1753     1EC8                     	;# 
  1754     1EC9                     	;# 
  1755     1ECA                     	;# 
  1756     1ECB                     	;# 
  1757     1ECC                     	;# 
  1758     1ECD                     	;# 
  1759     1ECE                     	;# 
  1760     1F10                     	;# 
  1761     1F11                     	;# 
  1762     1F12                     	;# 
  1763     1F13                     	;# 
  1764     1F14                     	;# 
  1765     1F15                     	;# 
  1766     1F16                     	;# 
  1767     1F17                     	;# 
  1768     1F18                     	;# 
  1769     1F19                     	;# 
  1770     1F1A                     	;# 
  1771     1F1B                     	;# 
  1772     1F1C                     	;# 
  1773     1F1D                     	;# 
  1774     1F1E                     	;# 
  1775     1F1F                     	;# 
  1776     1F20                     	;# 
  1777     1F21                     	;# 
  1778     1F22                     	;# 
  1779     1F23                     	;# 
  1780     1F24                     	;# 
  1781     1F25                     	;# 
  1782     1F26                     	;# 
  1783     1F27                     	;# 
  1784     1F38                     	;# 
  1785     1F39                     	;# 
  1786     1F3A                     	;# 
  1787     1F3B                     	;# 
  1788     1F3C                     	;# 
  1789     1F3D                     	;# 
  1790     1F3E                     	;# 
  1791     1F3F                     	;# 
  1792     1F43                     	;# 
  1793     1F44                     	;# 
  1794     1F45                     	;# 
  1795     1F46                     	;# 
  1796     1F47                     	;# 
  1797     1F48                     	;# 
  1798     1F49                     	;# 
  1799     1F4A                     	;# 
  1800     1F4E                     	;# 
  1801     1F4F                     	;# 
  1802     1F50                     	;# 
  1803     1F51                     	;# 
  1804     1F52                     	;# 
  1805     1F53                     	;# 
  1806     1F54                     	;# 
  1807     1F55                     	;# 
  1808     1F65                     	;# 
  1809     1F66                     	;# 
  1810     1F67                     	;# 
  1811     1F68                     	;# 
  1812     1F69                     	;# 
  1813     1F6A                     	;# 
  1814     1F6B                     	;# 
  1815     1FE4                     	;# 
  1816     1FE5                     	;# 
  1817     1FE6                     	;# 
  1818     1FE7                     	;# 
  1819     1FE8                     	;# 
  1820     1FE8                     	;# 
  1821     1FE9                     	;# 
  1822     1FEA                     	;# 
  1823     1FEB                     	;# 
  1824     1FED                     	;# 
  1825     1FEE                     	;# 
  1826     1FEF                     	;# 
  1827     0000                     	;# 
  1828     0001                     	;# 
  1829     0002                     	;# 
  1830     0003                     	;# 
  1831     0004                     	;# 
  1832     0005                     	;# 
  1833     0006                     	;# 
  1834     0007                     	;# 
  1835     0008                     	;# 
  1836     0009                     	;# 
  1837     000A                     	;# 
  1838     000B                     	;# 
  1839     000C                     	;# 
  1840     000D                     	;# 
  1841     000E                     	;# 
  1842     0010                     	;# 
  1843     0012                     	;# 
  1844     0013                     	;# 
  1845     0014                     	;# 
  1846     0016                     	;# 
  1847     0018                     	;# 
  1848     0019                     	;# 
  1849     001A                     	;# 
  1850     001C                     	;# 
  1851     008C                     	;# 
  1852     008C                     	;# 
  1853     008D                     	;# 
  1854     008E                     	;# 
  1855     008E                     	;# 
  1856     008F                     	;# 
  1857     0090                     	;# 
  1858     0090                     	;# 
  1859     0091                     	;# 
  1860     0092                     	;# 
  1861     0092                     	;# 
  1862     0093                     	;# 
  1863     0094                     	;# 
  1864     0094                     	;# 
  1865     0095                     	;# 
  1866     0096                     	;# 
  1867     0096                     	;# 
  1868     0097                     	;# 
  1869     0098                     	;# 
  1870     0099                     	;# 
  1871     009A                     	;# 
  1872     009B                     	;# 
  1873     009B                     	;# 
  1874     009C                     	;# 
  1875     009D                     	;# 
  1876     009D                     	;# 
  1877     009E                     	;# 
  1878     009F                     	;# 
  1879     010C                     	;# 
  1880     010C                     	;# 
  1881     010D                     	;# 
  1882     010E                     	;# 
  1883     010F                     	;# 
  1884     010F                     	;# 
  1885     0110                     	;# 
  1886     0111                     	;# 
  1887     0112                     	;# 
  1888     0113                     	;# 
  1889     0114                     	;# 
  1890     0115                     	;# 
  1891     0116                     	;# 
  1892     0117                     	;# 
  1893     0118                     	;# 
  1894     0119                     	;# 
  1895     0119                     	;# 
  1896     0119                     	;# 
  1897     011A                     	;# 
  1898     011A                     	;# 
  1899     011A                     	;# 
  1900     011B                     	;# 
  1901     011B                     	;# 
  1902     011B                     	;# 
  1903     011B                     	;# 
  1904     011B                     	;# 
  1905     011C                     	;# 
  1906     011C                     	;# 
  1907     011C                     	;# 
  1908     011D                     	;# 
  1909     011D                     	;# 
  1910     011D                     	;# 
  1911     011E                     	;# 
  1912     011E                     	;# 
  1913     011E                     	;# 
  1914     011F                     	;# 
  1915     011F                     	;# 
  1916     011F                     	;# 
  1917     011F                     	;# 
  1918     011F                     	;# 
  1919     018C                     	;# 
  1920     018D                     	;# 
  1921     018E                     	;# 
  1922     018F                     	;# 
  1923     0190                     	;# 
  1924     0191                     	;# 
  1925     0192                     	;# 
  1926     0196                     	;# 
  1927     0197                     	;# 
  1928     0198                     	;# 
  1929     0199                     	;# 
  1930     019A                     	;# 
  1931     019B                     	;# 
  1932     019C                     	;# 
  1933     020C                     	;# 
  1934     020D                     	;# 
  1935     020E                     	;# 
  1936     020E                     	;# 
  1937     020F                     	;# 
  1938     020F                     	;# 
  1939     0210                     	;# 
  1940     0210                     	;# 
  1941     0211                     	;# 
  1942     0211                     	;# 
  1943     0212                     	;# 
  1944     0213                     	;# 
  1945     0214                     	;# 
  1946     0214                     	;# 
  1947     0215                     	;# 
  1948     0215                     	;# 
  1949     0216                     	;# 
  1950     0216                     	;# 
  1951     0217                     	;# 
  1952     0217                     	;# 
  1953     0218                     	;# 
  1954     0219                     	;# 
  1955     021A                     	;# 
  1956     021A                     	;# 
  1957     021B                     	;# 
  1958     021B                     	;# 
  1959     021C                     	;# 
  1960     021C                     	;# 
  1961     021D                     	;# 
  1962     021D                     	;# 
  1963     021E                     	;# 
  1964     021F                     	;# 
  1965     028C                     	;# 
  1966     028C                     	;# 
  1967     028D                     	;# 
  1968     028D                     	;# 
  1969     028E                     	;# 
  1970     028F                     	;# 
  1971     0290                     	;# 
  1972     0291                     	;# 
  1973     0292                     	;# 
  1974     0292                     	;# 
  1975     0293                     	;# 
  1976     0293                     	;# 
  1977     0294                     	;# 
  1978     0295                     	;# 
  1979     0296                     	;# 
  1980     0297                     	;# 
  1981     0298                     	;# 
  1982     0298                     	;# 
  1983     0299                     	;# 
  1984     0299                     	;# 
  1985     029A                     	;# 
  1986     029B                     	;# 
  1987     029C                     	;# 
  1988     029D                     	;# 
  1989     029F                     	;# 
  1990     030C                     	;# 
  1991     030C                     	;# 
  1992     030D                     	;# 
  1993     030E                     	;# 
  1994     030F                     	;# 
  1995     0310                     	;# 
  1996     0310                     	;# 
  1997     0311                     	;# 
  1998     0312                     	;# 
  1999     0313                     	;# 
  2000     0314                     	;# 
  2001     0314                     	;# 
  2002     0315                     	;# 
  2003     0316                     	;# 
  2004     0317                     	;# 
  2005     0318                     	;# 
  2006     0318                     	;# 
  2007     0319                     	;# 
  2008     031A                     	;# 
  2009     031B                     	;# 
  2010     031C                     	;# 
  2011     031C                     	;# 
  2012     031D                     	;# 
  2013     031E                     	;# 
  2014     031F                     	;# 
  2015     038C                     	;# 
  2016     038C                     	;# 
  2017     038D                     	;# 
  2018     038E                     	;# 
  2019     0390                     	;# 
  2020     0390                     	;# 
  2021     0391                     	;# 
  2022     0392                     	;# 
  2023     048C                     	;# 
  2024     048C                     	;# 
  2025     048D                     	;# 
  2026     048E                     	;# 
  2027     048F                     	;# 
  2028     048F                     	;# 
  2029     0490                     	;# 
  2030     0491                     	;# 
  2031     0492                     	;# 
  2032     0492                     	;# 
  2033     0493                     	;# 
  2034     0494                     	;# 
  2035     0495                     	;# 
  2036     0495                     	;# 
  2037     0496                     	;# 
  2038     0497                     	;# 
  2039     0498                     	;# 
  2040     0499                     	;# 
  2041     049A                     	;# 
  2042     049B                     	;# 
  2043     049C                     	;# 
  2044     049D                     	;# 
  2045     050C                     	;# 
  2046     050C                     	;# 
  2047     050D                     	;# 
  2048     050E                     	;# 
  2049     050F                     	;# 
  2050     050F                     	;# 
  2051     0510                     	;# 
  2052     0511                     	;# 
  2053     0512                     	;# 
  2054     0512                     	;# 
  2055     0513                     	;# 
  2056     0514                     	;# 
  2057     0515                     	;# 
  2058     0515                     	;# 
  2059     0516                     	;# 
  2060     0517                     	;# 
  2061     0518                     	;# 
  2062     0519                     	;# 
  2063     051A                     	;# 
  2064     051B                     	;# 
  2065     051C                     	;# 
  2066     051D                     	;# 
  2067     058C                     	;# 
  2068     058C                     	;# 
  2069     058D                     	;# 
  2070     058E                     	;# 
  2071     058F                     	;# 
  2072     058F                     	;# 
  2073     0590                     	;# 
  2074     0591                     	;# 
  2075     0592                     	;# 
  2076     0593                     	;# 
  2077     059C                     	;# 
  2078     059C                     	;# 
  2079     059D                     	;# 
  2080     059D                     	;# 
  2081     059E                     	;# 
  2082     059F                     	;# 
  2083     060C                     	;# 
  2084     060C                     	;# 
  2085     060D                     	;# 
  2086     060D                     	;# 
  2087     060E                     	;# 
  2088     060F                     	;# 
  2089     0610                     	;# 
  2090     0611                     	;# 
  2091     0612                     	;# 
  2092     0613                     	;# 
  2093     0614                     	;# 
  2094     0616                     	;# 
  2095     0616                     	;# 
  2096     0617                     	;# 
  2097     0617                     	;# 
  2098     0618                     	;# 
  2099     0619                     	;# 
  2100     061A                     	;# 
  2101     061B                     	;# 
  2102     061C                     	;# 
  2103     061D                     	;# 
  2104     061E                     	;# 
  2105     068C                     	;# 
  2106     068D                     	;# 
  2107     068E                     	;# 
  2108     068F                     	;# 
  2109     0690                     	;# 
  2110     0691                     	;# 
  2111     0692                     	;# 
  2112     0693                     	;# 
  2113     0694                     	;# 
  2114     070C                     	;# 
  2115     070D                     	;# 
  2116     070E                     	;# 
  2117     070F                     	;# 
  2118     0710                     	;# 
  2119     0711                     	;# 
  2120     0712                     	;# 
  2121     0713                     	;# 
  2122     0714                     	;# 
  2123     0716                     	;# 
  2124     0717                     	;# 
  2125     0718                     	;# 
  2126     0719                     	;# 
  2127     071A                     	;# 
  2128     071B                     	;# 
  2129     071C                     	;# 
  2130     071D                     	;# 
  2131     071E                     	;# 
  2132     0796                     	;# 
  2133     0797                     	;# 
  2134     0798                     	;# 
  2135     0799                     	;# 
  2136     079A                     	;# 
  2137     079B                     	;# 
  2138     079C                     	;# 
  2139     079D                     	;# 
  2140     080C                     	;# 
  2141     080D                     	;# 
  2142     080E                     	;# 
  2143     080F                     	;# 
  2144     0810                     	;# 
  2145     0811                     	;# 
  2146     0813                     	;# 
  2147     0814                     	;# 
  2148     081A                     	;# 
  2149     081A                     	;# 
  2150     081B                     	;# 
  2151     081C                     	;# 
  2152     081C                     	;# 
  2153     081D                     	;# 
  2154     081E                     	;# 
  2155     081F                     	;# 
  2156     088C                     	;# 
  2157     088D                     	;# 
  2158     088E                     	;# 
  2159     088F                     	;# 
  2160     0890                     	;# 
  2161     0891                     	;# 
  2162     0892                     	;# 
  2163     0893                     	;# 
  2164     0895                     	;# 
  2165     0896                     	;# 
  2166     0897                     	;# 
  2167     0898                     	;# 
  2168     0899                     	;# 
  2169     089A                     	;# 
  2170     089B                     	;# 
  2171     090C                     	;# 
  2172     090E                     	;# 
  2173     090F                     	;# 
  2174     091F                     	;# 
  2175     098F                     	;# 
  2176     098F                     	;# 
  2177     0990                     	;# 
  2178     0991                     	;# 
  2179     0992                     	;# 
  2180     0993                     	;# 
  2181     0994                     	;# 
  2182     0995                     	;# 
  2183     0996                     	;# 
  2184     0997                     	;# 
  2185     0A19                     	;# 
  2186     0A19                     	;# 
  2187     0A1A                     	;# 
  2188     0A1A                     	;# 
  2189     0A1B                     	;# 
  2190     0A1B                     	;# 
  2191     0A1B                     	;# 
  2192     0A1C                     	;# 
  2193     0A1C                     	;# 
  2194     0A1D                     	;# 
  2195     0A1D                     	;# 
  2196     0A1E                     	;# 
  2197     0A1E                     	;# 
  2198     0A1F                     	;# 
  2199     0A1F                     	;# 
  2200     0A1F                     	;# 
  2201     1E0F                     	;# 
  2202     1E10                     	;# 
  2203     1E11                     	;# 
  2204     1E12                     	;# 
  2205     1E13                     	;# 
  2206     1E14                     	;# 
  2207     1E15                     	;# 
  2208     1E16                     	;# 
  2209     1E17                     	;# 
  2210     1E18                     	;# 
  2211     1E19                     	;# 
  2212     1E1A                     	;# 
  2213     1E1B                     	;# 
  2214     1E1C                     	;# 
  2215     1E1D                     	;# 
  2216     1E1E                     	;# 
  2217     1E1F                     	;# 
  2218     1E20                     	;# 
  2219     1E21                     	;# 
  2220     1E22                     	;# 
  2221     1E23                     	;# 
  2222     1E24                     	;# 
  2223     1E25                     	;# 
  2224     1E26                     	;# 
  2225     1E27                     	;# 
  2226     1E28                     	;# 
  2227     1E29                     	;# 
  2228     1E2A                     	;# 
  2229     1E2B                     	;# 
  2230     1E2C                     	;# 
  2231     1E2D                     	;# 
  2232     1E2E                     	;# 
  2233     1E2F                     	;# 
  2234     1E30                     	;# 
  2235     1E31                     	;# 
  2236     1E32                     	;# 
  2237     1E33                     	;# 
  2238     1E34                     	;# 
  2239     1E35                     	;# 
  2240     1E36                     	;# 
  2241     1E37                     	;# 
  2242     1E8F                     	;# 
  2243     1E90                     	;# 
  2244     1E91                     	;# 
  2245     1E92                     	;# 
  2246     1E93                     	;# 
  2247     1E94                     	;# 
  2248     1E95                     	;# 
  2249     1E96                     	;# 
  2250     1E97                     	;# 
  2251     1E9C                     	;# 
  2252     1E9D                     	;# 
  2253     1E9E                     	;# 
  2254     1EA1                     	;# 
  2255     1EA2                     	;# 
  2256     1EA3                     	;# 
  2257     1EA4                     	;# 
  2258     1EA5                     	;# 
  2259     1EA9                     	;# 
  2260     1EAA                     	;# 
  2261     1EAB                     	;# 
  2262     1EAC                     	;# 
  2263     1EB1                     	;# 
  2264     1EB2                     	;# 
  2265     1EB3                     	;# 
  2266     1EB8                     	;# 
  2267     1EB9                     	;# 
  2268     1EBA                     	;# 
  2269     1EBB                     	;# 
  2270     1EBC                     	;# 
  2271     1EBD                     	;# 
  2272     1EBE                     	;# 
  2273     1EC3                     	;# 
  2274     1EC5                     	;# 
  2275     1EC6                     	;# 
  2276     1EC7                     	;# 
  2277     1EC8                     	;# 
  2278     1EC9                     	;# 
  2279     1ECA                     	;# 
  2280     1ECB                     	;# 
  2281     1ECC                     	;# 
  2282     1ECD                     	;# 
  2283     1ECE                     	;# 
  2284     1F10                     	;# 
  2285     1F11                     	;# 
  2286     1F12                     	;# 
  2287     1F13                     	;# 
  2288     1F14                     	;# 
  2289     1F15                     	;# 
  2290     1F16                     	;# 
  2291     1F17                     	;# 
  2292     1F18                     	;# 
  2293     1F19                     	;# 
  2294     1F1A                     	;# 
  2295     1F1B                     	;# 
  2296     1F1C                     	;# 
  2297     1F1D                     	;# 
  2298     1F1E                     	;# 
  2299     1F1F                     	;# 
  2300     1F20                     	;# 
  2301     1F21                     	;# 
  2302     1F22                     	;# 
  2303     1F23                     	;# 
  2304     1F24                     	;# 
  2305     1F25                     	;# 
  2306     1F26                     	;# 
  2307     1F27                     	;# 
  2308     1F38                     	;# 
  2309     1F39                     	;# 
  2310     1F3A                     	;# 
  2311     1F3B                     	;# 
  2312     1F3C                     	;# 
  2313     1F3D                     	;# 
  2314     1F3E                     	;# 
  2315     1F3F                     	;# 
  2316     1F43                     	;# 
  2317     1F44                     	;# 
  2318     1F45                     	;# 
  2319     1F46                     	;# 
  2320     1F47                     	;# 
  2321     1F48                     	;# 
  2322     1F49                     	;# 
  2323     1F4A                     	;# 
  2324     1F4E                     	;# 
  2325     1F4F                     	;# 
  2326     1F50                     	;# 
  2327     1F51                     	;# 
  2328     1F52                     	;# 
  2329     1F53                     	;# 
  2330     1F54                     	;# 
  2331     1F55                     	;# 
  2332     1F65                     	;# 
  2333     1F66                     	;# 
  2334     1F67                     	;# 
  2335     1F68                     	;# 
  2336     1F69                     	;# 
  2337     1F6A                     	;# 
  2338     1F6B                     	;# 
  2339     1FE4                     	;# 
  2340     1FE5                     	;# 
  2341     1FE6                     	;# 
  2342     1FE7                     	;# 
  2343     1FE8                     	;# 
  2344     1FE8                     	;# 
  2345     1FE9                     	;# 
  2346     1FEA                     	;# 
  2347     1FEB                     	;# 
  2348     1FED                     	;# 
  2349     1FEE                     	;# 
  2350     1FEF                     	;# 
  2351     0000                     	;# 
  2352     0001                     	;# 
  2353     0002                     	;# 
  2354     0003                     	;# 
  2355     0004                     	;# 
  2356     0005                     	;# 
  2357     0006                     	;# 
  2358     0007                     	;# 
  2359     0008                     	;# 
  2360     0009                     	;# 
  2361     000A                     	;# 
  2362     000B                     	;# 
  2363     000C                     	;# 
  2364     000D                     	;# 
  2365     000E                     	;# 
  2366     0010                     	;# 
  2367     0012                     	;# 
  2368     0013                     	;# 
  2369     0014                     	;# 
  2370     0016                     	;# 
  2371     0018                     	;# 
  2372     0019                     	;# 
  2373     001A                     	;# 
  2374     001C                     	;# 
  2375     008C                     	;# 
  2376     008C                     	;# 
  2377     008D                     	;# 
  2378     008E                     	;# 
  2379     008E                     	;# 
  2380     008F                     	;# 
  2381     0090                     	;# 
  2382     0090                     	;# 
  2383     0091                     	;# 
  2384     0092                     	;# 
  2385     0092                     	;# 
  2386     0093                     	;# 
  2387     0094                     	;# 
  2388     0094                     	;# 
  2389     0095                     	;# 
  2390     0096                     	;# 
  2391     0096                     	;# 
  2392     0097                     	;# 
  2393     0098                     	;# 
  2394     0099                     	;# 
  2395     009A                     	;# 
  2396     009B                     	;# 
  2397     009B                     	;# 
  2398     009C                     	;# 
  2399     009D                     	;# 
  2400     009D                     	;# 
  2401     009E                     	;# 
  2402     009F                     	;# 
  2403     010C                     	;# 
  2404     010C                     	;# 
  2405     010D                     	;# 
  2406     010E                     	;# 
  2407     010F                     	;# 
  2408     010F                     	;# 
  2409     0110                     	;# 
  2410     0111                     	;# 
  2411     0112                     	;# 
  2412     0113                     	;# 
  2413     0114                     	;# 
  2414     0115                     	;# 
  2415     0116                     	;# 
  2416     0117                     	;# 
  2417     0118                     	;# 
  2418     0119                     	;# 
  2419     0119                     	;# 
  2420     0119                     	;# 
  2421     011A                     	;# 
  2422     011A                     	;# 
  2423     011A                     	;# 
  2424     011B                     	;# 
  2425     011B                     	;# 
  2426     011B                     	;# 
  2427     011B                     	;# 
  2428     011B                     	;# 
  2429     011C                     	;# 
  2430     011C                     	;# 
  2431     011C                     	;# 
  2432     011D                     	;# 
  2433     011D                     	;# 
  2434     011D                     	;# 
  2435     011E                     	;# 
  2436     011E                     	;# 
  2437     011E                     	;# 
  2438     011F                     	;# 
  2439     011F                     	;# 
  2440     011F                     	;# 
  2441     011F                     	;# 
  2442     011F                     	;# 
  2443     018C                     	;# 
  2444     018D                     	;# 
  2445     018E                     	;# 
  2446     018F                     	;# 
  2447     0190                     	;# 
  2448     0191                     	;# 
  2449     0192                     	;# 
  2450     0196                     	;# 
  2451     0197                     	;# 
  2452     0198                     	;# 
  2453     0199                     	;# 
  2454     019A                     	;# 
  2455     019B                     	;# 
  2456     019C                     	;# 
  2457     020C                     	;# 
  2458     020D                     	;# 
  2459     020E                     	;# 
  2460     020E                     	;# 
  2461     020F                     	;# 
  2462     020F                     	;# 
  2463     0210                     	;# 
  2464     0210                     	;# 
  2465     0211                     	;# 
  2466     0211                     	;# 
  2467     0212                     	;# 
  2468     0213                     	;# 
  2469     0214                     	;# 
  2470     0214                     	;# 
  2471     0215                     	;# 
  2472     0215                     	;# 
  2473     0216                     	;# 
  2474     0216                     	;# 
  2475     0217                     	;# 
  2476     0217                     	;# 
  2477     0218                     	;# 
  2478     0219                     	;# 
  2479     021A                     	;# 
  2480     021A                     	;# 
  2481     021B                     	;# 
  2482     021B                     	;# 
  2483     021C                     	;# 
  2484     021C                     	;# 
  2485     021D                     	;# 
  2486     021D                     	;# 
  2487     021E                     	;# 
  2488     021F                     	;# 
  2489     028C                     	;# 
  2490     028C                     	;# 
  2491     028D                     	;# 
  2492     028D                     	;# 
  2493     028E                     	;# 
  2494     028F                     	;# 
  2495     0290                     	;# 
  2496     0291                     	;# 
  2497     0292                     	;# 
  2498     0292                     	;# 
  2499     0293                     	;# 
  2500     0293                     	;# 
  2501     0294                     	;# 
  2502     0295                     	;# 
  2503     0296                     	;# 
  2504     0297                     	;# 
  2505     0298                     	;# 
  2506     0298                     	;# 
  2507     0299                     	;# 
  2508     0299                     	;# 
  2509     029A                     	;# 
  2510     029B                     	;# 
  2511     029C                     	;# 
  2512     029D                     	;# 
  2513     029F                     	;# 
  2514     030C                     	;# 
  2515     030C                     	;# 
  2516     030D                     	;# 
  2517     030E                     	;# 
  2518     030F                     	;# 
  2519     0310                     	;# 
  2520     0310                     	;# 
  2521     0311                     	;# 
  2522     0312                     	;# 
  2523     0313                     	;# 
  2524     0314                     	;# 
  2525     0314                     	;# 
  2526     0315                     	;# 
  2527     0316                     	;# 
  2528     0317                     	;# 
  2529     0318                     	;# 
  2530     0318                     	;# 
  2531     0319                     	;# 
  2532     031A                     	;# 
  2533     031B                     	;# 
  2534     031C                     	;# 
  2535     031C                     	;# 
  2536     031D                     	;# 
  2537     031E                     	;# 
  2538     031F                     	;# 
  2539     038C                     	;# 
  2540     038C                     	;# 
  2541     038D                     	;# 
  2542     038E                     	;# 
  2543     0390                     	;# 
  2544     0390                     	;# 
  2545     0391                     	;# 
  2546     0392                     	;# 
  2547     048C                     	;# 
  2548     048C                     	;# 
  2549     048D                     	;# 
  2550     048E                     	;# 
  2551     048F                     	;# 
  2552     048F                     	;# 
  2553     0490                     	;# 
  2554     0491                     	;# 
  2555     0492                     	;# 
  2556     0492                     	;# 
  2557     0493                     	;# 
  2558     0494                     	;# 
  2559     0495                     	;# 
  2560     0495                     	;# 
  2561     0496                     	;# 
  2562     0497                     	;# 
  2563     0498                     	;# 
  2564     0499                     	;# 
  2565     049A                     	;# 
  2566     049B                     	;# 
  2567     049C                     	;# 
  2568     049D                     	;# 
  2569     050C                     	;# 
  2570     050C                     	;# 
  2571     050D                     	;# 
  2572     050E                     	;# 
  2573     050F                     	;# 
  2574     050F                     	;# 
  2575     0510                     	;# 
  2576     0511                     	;# 
  2577     0512                     	;# 
  2578     0512                     	;# 
  2579     0513                     	;# 
  2580     0514                     	;# 
  2581     0515                     	;# 
  2582     0515                     	;# 
  2583     0516                     	;# 
  2584     0517                     	;# 
  2585     0518                     	;# 
  2586     0519                     	;# 
  2587     051A                     	;# 
  2588     051B                     	;# 
  2589     051C                     	;# 
  2590     051D                     	;# 
  2591     058C                     	;# 
  2592     058C                     	;# 
  2593     058D                     	;# 
  2594     058E                     	;# 
  2595     058F                     	;# 
  2596     058F                     	;# 
  2597     0590                     	;# 
  2598     0591                     	;# 
  2599     0592                     	;# 
  2600     0593                     	;# 
  2601     059C                     	;# 
  2602     059C                     	;# 
  2603     059D                     	;# 
  2604     059D                     	;# 
  2605     059E                     	;# 
  2606     059F                     	;# 
  2607     060C                     	;# 
  2608     060C                     	;# 
  2609     060D                     	;# 
  2610     060D                     	;# 
  2611     060E                     	;# 
  2612     060F                     	;# 
  2613     0610                     	;# 
  2614     0611                     	;# 
  2615     0612                     	;# 
  2616     0613                     	;# 
  2617     0614                     	;# 
  2618     0616                     	;# 
  2619     0616                     	;# 
  2620     0617                     	;# 
  2621     0617                     	;# 
  2622     0618                     	;# 
  2623     0619                     	;# 
  2624     061A                     	;# 
  2625     061B                     	;# 
  2626     061C                     	;# 
  2627     061D                     	;# 
  2628     061E                     	;# 
  2629     068C                     	;# 
  2630     068D                     	;# 
  2631     068E                     	;# 
  2632     068F                     	;# 
  2633     0690                     	;# 
  2634     0691                     	;# 
  2635     0692                     	;# 
  2636     0693                     	;# 
  2637     0694                     	;# 
  2638     070C                     	;# 
  2639     070D                     	;# 
  2640     070E                     	;# 
  2641     070F                     	;# 
  2642     0710                     	;# 
  2643     0711                     	;# 
  2644     0712                     	;# 
  2645     0713                     	;# 
  2646     0714                     	;# 
  2647     0716                     	;# 
  2648     0717                     	;# 
  2649     0718                     	;# 
  2650     0719                     	;# 
  2651     071A                     	;# 
  2652     071B                     	;# 
  2653     071C                     	;# 
  2654     071D                     	;# 
  2655     071E                     	;# 
  2656     0796                     	;# 
  2657     0797                     	;# 
  2658     0798                     	;# 
  2659     0799                     	;# 
  2660     079A                     	;# 
  2661     079B                     	;# 
  2662     079C                     	;# 
  2663     079D                     	;# 
  2664     080C                     	;# 
  2665     080D                     	;# 
  2666     080E                     	;# 
  2667     080F                     	;# 
  2668     0810                     	;# 
  2669     0811                     	;# 
  2670     0813                     	;# 
  2671     0814                     	;# 
  2672     081A                     	;# 
  2673     081A                     	;# 
  2674     081B                     	;# 
  2675     081C                     	;# 
  2676     081C                     	;# 
  2677     081D                     	;# 
  2678     081E                     	;# 
  2679     081F                     	;# 
  2680     088C                     	;# 
  2681     088D                     	;# 
  2682     088E                     	;# 
  2683     088F                     	;# 
  2684     0890                     	;# 
  2685     0891                     	;# 
  2686     0892                     	;# 
  2687     0893                     	;# 
  2688     0895                     	;# 
  2689     0896                     	;# 
  2690     0897                     	;# 
  2691     0898                     	;# 
  2692     0899                     	;# 
  2693     089A                     	;# 
  2694     089B                     	;# 
  2695     090C                     	;# 
  2696     090E                     	;# 
  2697     090F                     	;# 
  2698     091F                     	;# 
  2699     098F                     	;# 
  2700     098F                     	;# 
  2701     0990                     	;# 
  2702     0991                     	;# 
  2703     0992                     	;# 
  2704     0993                     	;# 
  2705     0994                     	;# 
  2706     0995                     	;# 
  2707     0996                     	;# 
  2708     0997                     	;# 
  2709     0A19                     	;# 
  2710     0A19                     	;# 
  2711     0A1A                     	;# 
  2712     0A1A                     	;# 
  2713     0A1B                     	;# 
  2714     0A1B                     	;# 
  2715     0A1B                     	;# 
  2716     0A1C                     	;# 
  2717     0A1C                     	;# 
  2718     0A1D                     	;# 
  2719     0A1D                     	;# 
  2720     0A1E                     	;# 
  2721     0A1E                     	;# 
  2722     0A1F                     	;# 
  2723     0A1F                     	;# 
  2724     0A1F                     	;# 
  2725     1E0F                     	;# 
  2726     1E10                     	;# 
  2727     1E11                     	;# 
  2728     1E12                     	;# 
  2729     1E13                     	;# 
  2730     1E14                     	;# 
  2731     1E15                     	;# 
  2732     1E16                     	;# 
  2733     1E17                     	;# 
  2734     1E18                     	;# 
  2735     1E19                     	;# 
  2736     1E1A                     	;# 
  2737     1E1B                     	;# 
  2738     1E1C                     	;# 
  2739     1E1D                     	;# 
  2740     1E1E                     	;# 
  2741     1E1F                     	;# 
  2742     1E20                     	;# 
  2743     1E21                     	;# 
  2744     1E22                     	;# 
  2745     1E23                     	;# 
  2746     1E24                     	;# 
  2747     1E25                     	;# 
  2748     1E26                     	;# 
  2749     1E27                     	;# 
  2750     1E28                     	;# 
  2751     1E29                     	;# 
  2752     1E2A                     	;# 
  2753     1E2B                     	;# 
  2754     1E2C                     	;# 
  2755     1E2D                     	;# 
  2756     1E2E                     	;# 
  2757     1E2F                     	;# 
  2758     1E30                     	;# 
  2759     1E31                     	;# 
  2760     1E32                     	;# 
  2761     1E33                     	;# 
  2762     1E34                     	;# 
  2763     1E35                     	;# 
  2764     1E36                     	;# 
  2765     1E37                     	;# 
  2766     1E8F                     	;# 
  2767     1E90                     	;# 
  2768     1E91                     	;# 
  2769     1E92                     	;# 
  2770     1E93                     	;# 
  2771     1E94                     	;# 
  2772     1E95                     	;# 
  2773     1E96                     	;# 
  2774     1E97                     	;# 
  2775     1E9C                     	;# 
  2776     1E9D                     	;# 
  2777     1E9E                     	;# 
  2778     1EA1                     	;# 
  2779     1EA2                     	;# 
  2780     1EA3                     	;# 
  2781     1EA4                     	;# 
  2782     1EA5                     	;# 
  2783     1EA9                     	;# 
  2784     1EAA                     	;# 
  2785     1EAB                     	;# 
  2786     1EAC                     	;# 
  2787     1EB1                     	;# 
  2788     1EB2                     	;# 
  2789     1EB3                     	;# 
  2790     1EB8                     	;# 
  2791     1EB9                     	;# 
  2792     1EBA                     	;# 
  2793     1EBB                     	;# 
  2794     1EBC                     	;# 
  2795     1EBD                     	;# 
  2796     1EBE                     	;# 
  2797     1EC3                     	;# 
  2798     1EC5                     	;# 
  2799     1EC6                     	;# 
  2800     1EC7                     	;# 
  2801     1EC8                     	;# 
  2802     1EC9                     	;# 
  2803     1ECA                     	;# 
  2804     1ECB                     	;# 
  2805     1ECC                     	;# 
  2806     1ECD                     	;# 
  2807     1ECE                     	;# 
  2808     1F10                     	;# 
  2809     1F11                     	;# 
  2810     1F12                     	;# 
  2811     1F13                     	;# 
  2812     1F14                     	;# 
  2813     1F15                     	;# 
  2814     1F16                     	;# 
  2815     1F17                     	;# 
  2816     1F18                     	;# 
  2817     1F19                     	;# 
  2818     1F1A                     	;# 
  2819     1F1B                     	;# 
  2820     1F1C                     	;# 
  2821     1F1D                     	;# 
  2822     1F1E                     	;# 
  2823     1F1F                     	;# 
  2824     1F20                     	;# 
  2825     1F21                     	;# 
  2826     1F22                     	;# 
  2827     1F23                     	;# 
  2828     1F24                     	;# 
  2829     1F25                     	;# 
  2830     1F26                     	;# 
  2831     1F27                     	;# 
  2832     1F38                     	;# 
  2833     1F39                     	;# 
  2834     1F3A                     	;# 
  2835     1F3B                     	;# 
  2836     1F3C                     	;# 
  2837     1F3D                     	;# 
  2838     1F3E                     	;# 
  2839     1F3F                     	;# 
  2840     1F43                     	;# 
  2841     1F44                     	;# 
  2842     1F45                     	;# 
  2843     1F46                     	;# 
  2844     1F47                     	;# 
  2845     1F48                     	;# 
  2846     1F49                     	;# 
  2847     1F4A                     	;# 
  2848     1F4E                     	;# 
  2849     1F4F                     	;# 
  2850     1F50                     	;# 
  2851     1F51                     	;# 
  2852     1F52                     	;# 
  2853     1F53                     	;# 
  2854     1F54                     	;# 
  2855     1F55                     	;# 
  2856     1F65                     	;# 
  2857     1F66                     	;# 
  2858     1F67                     	;# 
  2859     1F68                     	;# 
  2860     1F69                     	;# 
  2861     1F6A                     	;# 
  2862     1F6B                     	;# 
  2863     1FE4                     	;# 
  2864     1FE5                     	;# 
  2865     1FE6                     	;# 
  2866     1FE7                     	;# 
  2867     1FE8                     	;# 
  2868     1FE8                     	;# 
  2869     1FE9                     	;# 
  2870     1FEA                     	;# 
  2871     1FEB                     	;# 
  2872     1FED                     	;# 
  2873     1FEE                     	;# 
  2874     1FEF                     	;# 
  2875     0000                     	;# 
  2876     0001                     	;# 
  2877     0002                     	;# 
  2878     0003                     	;# 
  2879     0004                     	;# 
  2880     0005                     	;# 
  2881     0006                     	;# 
  2882     0007                     	;# 
  2883     0008                     	;# 
  2884     0009                     	;# 
  2885     000A                     	;# 
  2886     000B                     	;# 
  2887     000C                     	;# 
  2888     000D                     	;# 
  2889     000E                     	;# 
  2890     0010                     	;# 
  2891     0012                     	;# 
  2892     0013                     	;# 
  2893     0014                     	;# 
  2894     0016                     	;# 
  2895     0018                     	;# 
  2896     0019                     	;# 
  2897     001A                     	;# 
  2898     001C                     	;# 
  2899     008C                     	;# 
  2900     008C                     	;# 
  2901     008D                     	;# 
  2902     008E                     	;# 
  2903     008E                     	;# 
  2904     008F                     	;# 
  2905     0090                     	;# 
  2906     0090                     	;# 
  2907     0091                     	;# 
  2908     0092                     	;# 
  2909     0092                     	;# 
  2910     0093                     	;# 
  2911     0094                     	;# 
  2912     0094                     	;# 
  2913     0095                     	;# 
  2914     0096                     	;# 
  2915     0096                     	;# 
  2916     0097                     	;# 
  2917     0098                     	;# 
  2918     0099                     	;# 
  2919     009A                     	;# 
  2920     009B                     	;# 
  2921     009B                     	;# 
  2922     009C                     	;# 
  2923     009D                     	;# 
  2924     009D                     	;# 
  2925     009E                     	;# 
  2926     009F                     	;# 
  2927     010C                     	;# 
  2928     010C                     	;# 
  2929     010D                     	;# 
  2930     010E                     	;# 
  2931     010F                     	;# 
  2932     010F                     	;# 
  2933     0110                     	;# 
  2934     0111                     	;# 
  2935     0112                     	;# 
  2936     0113                     	;# 
  2937     0114                     	;# 
  2938     0115                     	;# 
  2939     0116                     	;# 
  2940     0117                     	;# 
  2941     0118                     	;# 
  2942     0119                     	;# 
  2943     0119                     	;# 
  2944     0119                     	;# 
  2945     011A                     	;# 
  2946     011A                     	;# 
  2947     011A                     	;# 
  2948     011B                     	;# 
  2949     011B                     	;# 
  2950     011B                     	;# 
  2951     011B                     	;# 
  2952     011B                     	;# 
  2953     011C                     	;# 
  2954     011C                     	;# 
  2955     011C                     	;# 
  2956     011D                     	;# 
  2957     011D                     	;# 
  2958     011D                     	;# 
  2959     011E                     	;# 
  2960     011E                     	;# 
  2961     011E                     	;# 
  2962     011F                     	;# 
  2963     011F                     	;# 
  2964     011F                     	;# 
  2965     011F                     	;# 
  2966     011F                     	;# 
  2967     018C                     	;# 
  2968     018D                     	;# 
  2969     018E                     	;# 
  2970     018F                     	;# 
  2971     0190                     	;# 
  2972     0191                     	;# 
  2973     0192                     	;# 
  2974     0196                     	;# 
  2975     0197                     	;# 
  2976     0198                     	;# 
  2977     0199                     	;# 
  2978     019A                     	;# 
  2979     019B                     	;# 
  2980     019C                     	;# 
  2981     020C                     	;# 
  2982     020D                     	;# 
  2983     020E                     	;# 
  2984     020E                     	;# 
  2985     020F                     	;# 
  2986     020F                     	;# 
  2987     0210                     	;# 
  2988     0210                     	;# 
  2989     0211                     	;# 
  2990     0211                     	;# 
  2991     0212                     	;# 
  2992     0213                     	;# 
  2993     0214                     	;# 
  2994     0214                     	;# 
  2995     0215                     	;# 
  2996     0215                     	;# 
  2997     0216                     	;# 
  2998     0216                     	;# 
  2999     0217                     	;# 
  3000     0217                     	;# 
  3001     0218                     	;# 
  3002     0219                     	;# 
  3003     021A                     	;# 
  3004     021A                     	;# 
  3005     021B                     	;# 
  3006     021B                     	;# 
  3007     021C                     	;# 
  3008     021C                     	;# 
  3009     021D                     	;# 
  3010     021D                     	;# 
  3011     021E                     	;# 
  3012     021F                     	;# 
  3013     028C                     	;# 
  3014     028C                     	;# 
  3015     028D                     	;# 
  3016     028D                     	;# 
  3017     028E                     	;# 
  3018     028F                     	;# 
  3019     0290                     	;# 
  3020     0291                     	;# 
  3021     0292                     	;# 
  3022     0292                     	;# 
  3023     0293                     	;# 
  3024     0293                     	;# 
  3025     0294                     	;# 
  3026     0295                     	;# 
  3027     0296                     	;# 
  3028     0297                     	;# 
  3029     0298                     	;# 
  3030     0298                     	;# 
  3031     0299                     	;# 
  3032     0299                     	;# 
  3033     029A                     	;# 
  3034     029B                     	;# 
  3035     029C                     	;# 
  3036     029D                     	;# 
  3037     029F                     	;# 
  3038     030C                     	;# 
  3039     030C                     	;# 
  3040     030D                     	;# 
  3041     030E                     	;# 
  3042     030F                     	;# 
  3043     0310                     	;# 
  3044     0310                     	;# 
  3045     0311                     	;# 
  3046     0312                     	;# 
  3047     0313                     	;# 
  3048     0314                     	;# 
  3049     0314                     	;# 
  3050     0315                     	;# 
  3051     0316                     	;# 
  3052     0317                     	;# 
  3053     0318                     	;# 
  3054     0318                     	;# 
  3055     0319                     	;# 
  3056     031A                     	;# 
  3057     031B                     	;# 
  3058     031C                     	;# 
  3059     031C                     	;# 
  3060     031D                     	;# 
  3061     031E                     	;# 
  3062     031F                     	;# 
  3063     038C                     	;# 
  3064     038C                     	;# 
  3065     038D                     	;# 
  3066     038E                     	;# 
  3067     0390                     	;# 
  3068     0390                     	;# 
  3069     0391                     	;# 
  3070     0392                     	;# 
  3071     048C                     	;# 
  3072     048C                     	;# 
  3073     048D                     	;# 
  3074     048E                     	;# 
  3075     048F                     	;# 
  3076     048F                     	;# 
  3077     0490                     	;# 
  3078     0491                     	;# 
  3079     0492                     	;# 
  3080     0492                     	;# 
  3081     0493                     	;# 
  3082     0494                     	;# 
  3083     0495                     	;# 
  3084     0495                     	;# 
  3085     0496                     	;# 
  3086     0497                     	;# 
  3087     0498                     	;# 
  3088     0499                     	;# 
  3089     049A                     	;# 
  3090     049B                     	;# 
  3091     049C                     	;# 
  3092     049D                     	;# 
  3093     050C                     	;# 
  3094     050C                     	;# 
  3095     050D                     	;# 
  3096     050E                     	;# 
  3097     050F                     	;# 
  3098     050F                     	;# 
  3099     0510                     	;# 
  3100     0511                     	;# 
  3101     0512                     	;# 
  3102     0512                     	;# 
  3103     0513                     	;# 
  3104     0514                     	;# 
  3105     0515                     	;# 
  3106     0515                     	;# 
  3107     0516                     	;# 
  3108     0517                     	;# 
  3109     0518                     	;# 
  3110     0519                     	;# 
  3111     051A                     	;# 
  3112     051B                     	;# 
  3113     051C                     	;# 
  3114     051D                     	;# 
  3115     058C                     	;# 
  3116     058C                     	;# 
  3117     058D                     	;# 
  3118     058E                     	;# 
  3119     058F                     	;# 
  3120     058F                     	;# 
  3121     0590                     	;# 
  3122     0591                     	;# 
  3123     0592                     	;# 
  3124     0593                     	;# 
  3125     059C                     	;# 
  3126     059C                     	;# 
  3127     059D                     	;# 
  3128     059D                     	;# 
  3129     059E                     	;# 
  3130     059F                     	;# 
  3131     060C                     	;# 
  3132     060C                     	;# 
  3133     060D                     	;# 
  3134     060D                     	;# 
  3135     060E                     	;# 
  3136     060F                     	;# 
  3137     0610                     	;# 
  3138     0611                     	;# 
  3139     0612                     	;# 
  3140     0613                     	;# 
  3141     0614                     	;# 
  3142     0616                     	;# 
  3143     0616                     	;# 
  3144     0617                     	;# 
  3145     0617                     	;# 
  3146     0618                     	;# 
  3147     0619                     	;# 
  3148     061A                     	;# 
  3149     061B                     	;# 
  3150     061C                     	;# 
  3151     061D                     	;# 
  3152     061E                     	;# 
  3153     068C                     	;# 
  3154     068D                     	;# 
  3155     068E                     	;# 
  3156     068F                     	;# 
  3157     0690                     	;# 
  3158     0691                     	;# 
  3159     0692                     	;# 
  3160     0693                     	;# 
  3161     0694                     	;# 
  3162     070C                     	;# 
  3163     070D                     	;# 
  3164     070E                     	;# 
  3165     070F                     	;# 
  3166     0710                     	;# 
  3167     0711                     	;# 
  3168     0712                     	;# 
  3169     0713                     	;# 
  3170     0714                     	;# 
  3171     0716                     	;# 
  3172     0717                     	;# 
  3173     0718                     	;# 
  3174     0719                     	;# 
  3175     071A                     	;# 
  3176     071B                     	;# 
  3177     071C                     	;# 
  3178     071D                     	;# 
  3179     071E                     	;# 
  3180     0796                     	;# 
  3181     0797                     	;# 
  3182     0798                     	;# 
  3183     0799                     	;# 
  3184     079A                     	;# 
  3185     079B                     	;# 
  3186     079C                     	;# 
  3187     079D                     	;# 
  3188     080C                     	;# 
  3189     080D                     	;# 
  3190     080E                     	;# 
  3191     080F                     	;# 
  3192     0810                     	;# 
  3193     0811                     	;# 
  3194     0813                     	;# 
  3195     0814                     	;# 
  3196     081A                     	;# 
  3197     081A                     	;# 
  3198     081B                     	;# 
  3199     081C                     	;# 
  3200     081C                     	;# 
  3201     081D                     	;# 
  3202     081E                     	;# 
  3203     081F                     	;# 
  3204     088C                     	;# 
  3205     088D                     	;# 
  3206     088E                     	;# 
  3207     088F                     	;# 
  3208     0890                     	;# 
  3209     0891                     	;# 
  3210     0892                     	;# 
  3211     0893                     	;# 
  3212     0895                     	;# 
  3213     0896                     	;# 
  3214     0897                     	;# 
  3215     0898                     	;# 
  3216     0899                     	;# 
  3217     089A                     	;# 
  3218     089B                     	;# 
  3219     090C                     	;# 
  3220     090E                     	;# 
  3221     090F                     	;# 
  3222     091F                     	;# 
  3223     098F                     	;# 
  3224     098F                     	;# 
  3225     0990                     	;# 
  3226     0991                     	;# 
  3227     0992                     	;# 
  3228     0993                     	;# 
  3229     0994                     	;# 
  3230     0995                     	;# 
  3231     0996                     	;# 
  3232     0997                     	;# 
  3233     0A19                     	;# 
  3234     0A19                     	;# 
  3235     0A1A                     	;# 
  3236     0A1A                     	;# 
  3237     0A1B                     	;# 
  3238     0A1B                     	;# 
  3239     0A1B                     	;# 
  3240     0A1C                     	;# 
  3241     0A1C                     	;# 
  3242     0A1D                     	;# 
  3243     0A1D                     	;# 
  3244     0A1E                     	;# 
  3245     0A1E                     	;# 
  3246     0A1F                     	;# 
  3247     0A1F                     	;# 
  3248     0A1F                     	;# 
  3249     1E0F                     	;# 
  3250     1E10                     	;# 
  3251     1E11                     	;# 
  3252     1E12                     	;# 
  3253     1E13                     	;# 
  3254     1E14                     	;# 
  3255     1E15                     	;# 
  3256     1E16                     	;# 
  3257     1E17                     	;# 
  3258     1E18                     	;# 
  3259     1E19                     	;# 
  3260     1E1A                     	;# 
  3261     1E1B                     	;# 
  3262     1E1C                     	;# 
  3263     1E1D                     	;# 
  3264     1E1E                     	;# 
  3265     1E1F                     	;# 
  3266     1E20                     	;# 
  3267     1E21                     	;# 
  3268     1E22                     	;# 
  3269     1E23                     	;# 
  3270     1E24                     	;# 
  3271     1E25                     	;# 
  3272     1E26                     	;# 
  3273     1E27                     	;# 
  3274     1E28                     	;# 
  3275     1E29                     	;# 
  3276     1E2A                     	;# 
  3277     1E2B                     	;# 
  3278     1E2C                     	;# 
  3279     1E2D                     	;# 
  3280     1E2E                     	;# 
  3281     1E2F                     	;# 
  3282     1E30                     	;# 
  3283     1E31                     	;# 
  3284     1E32                     	;# 
  3285     1E33                     	;# 
  3286     1E34                     	;# 
  3287     1E35                     	;# 
  3288     1E36                     	;# 
  3289     1E37                     	;# 
  3290     1E8F                     	;# 
  3291     1E90                     	;# 
  3292     1E91                     	;# 
  3293     1E92                     	;# 
  3294     1E93                     	;# 
  3295     1E94                     	;# 
  3296     1E95                     	;# 
  3297     1E96                     	;# 
  3298     1E97                     	;# 
  3299     1E9C                     	;# 
  3300     1E9D                     	;# 
  3301     1E9E                     	;# 
  3302     1EA1                     	;# 
  3303     1EA2                     	;# 
  3304     1EA3                     	;# 
  3305     1EA4                     	;# 
  3306     1EA5                     	;# 
  3307     1EA9                     	;# 
  3308     1EAA                     	;# 
  3309     1EAB                     	;# 
  3310     1EAC                     	;# 
  3311     1EB1                     	;# 
  3312     1EB2                     	;# 
  3313     1EB3                     	;# 
  3314     1EB8                     	;# 
  3315     1EB9                     	;# 
  3316     1EBA                     	;# 
  3317     1EBB                     	;# 
  3318     1EBC                     	;# 
  3319     1EBD                     	;# 
  3320     1EBE                     	;# 
  3321     1EC3                     	;# 
  3322     1EC5                     	;# 
  3323     1EC6                     	;# 
  3324     1EC7                     	;# 
  3325     1EC8                     	;# 
  3326     1EC9                     	;# 
  3327     1ECA                     	;# 
  3328     1ECB                     	;# 
  3329     1ECC                     	;# 
  3330     1ECD                     	;# 
  3331     1ECE                     	;# 
  3332     1F10                     	;# 
  3333     1F11                     	;# 
  3334     1F12                     	;# 
  3335     1F13                     	;# 
  3336     1F14                     	;# 
  3337     1F15                     	;# 
  3338     1F16                     	;# 
  3339     1F17                     	;# 
  3340     1F18                     	;# 
  3341     1F19                     	;# 
  3342     1F1A                     	;# 
  3343     1F1B                     	;# 
  3344     1F1C                     	;# 
  3345     1F1D                     	;# 
  3346     1F1E                     	;# 
  3347     1F1F                     	;# 
  3348     1F20                     	;# 
  3349     1F21                     	;# 
  3350     1F22                     	;# 
  3351     1F23                     	;# 
  3352     1F24                     	;# 
  3353     1F25                     	;# 
  3354     1F26                     	;# 
  3355     1F27                     	;# 
  3356     1F38                     	;# 
  3357     1F39                     	;# 
  3358     1F3A                     	;# 
  3359     1F3B                     	;# 
  3360     1F3C                     	;# 
  3361     1F3D                     	;# 
  3362     1F3E                     	;# 
  3363     1F3F                     	;# 
  3364     1F43                     	;# 
  3365     1F44                     	;# 
  3366     1F45                     	;# 
  3367     1F46                     	;# 
  3368     1F47                     	;# 
  3369     1F48                     	;# 
  3370     1F49                     	;# 
  3371     1F4A                     	;# 
  3372     1F4E                     	;# 
  3373     1F4F                     	;# 
  3374     1F50                     	;# 
  3375     1F51                     	;# 
  3376     1F52                     	;# 
  3377     1F53                     	;# 
  3378     1F54                     	;# 
  3379     1F55                     	;# 
  3380     1F65                     	;# 
  3381     1F66                     	;# 
  3382     1F67                     	;# 
  3383     1F68                     	;# 
  3384     1F69                     	;# 
  3385     1F6A                     	;# 
  3386     1F6B                     	;# 
  3387     1FE4                     	;# 
  3388     1FE5                     	;# 
  3389     1FE6                     	;# 
  3390     1FE7                     	;# 
  3391     1FE8                     	;# 
  3392     1FE8                     	;# 
  3393     1FE9                     	;# 
  3394     1FEA                     	;# 
  3395     1FEB                     	;# 
  3396     1FED                     	;# 
  3397     1FEE                     	;# 
  3398     1FEF                     	;# 
  3399     0000                     	;# 
  3400     0001                     	;# 
  3401     0002                     	;# 
  3402     0003                     	;# 
  3403     0004                     	;# 
  3404     0005                     	;# 
  3405     0006                     	;# 
  3406     0007                     	;# 
  3407     0008                     	;# 
  3408     0009                     	;# 
  3409     000A                     	;# 
  3410     000B                     	;# 
  3411     000C                     	;# 
  3412     000D                     	;# 
  3413     000E                     	;# 
  3414     0010                     	;# 
  3415     0012                     	;# 
  3416     0013                     	;# 
  3417     0014                     	;# 
  3418     0016                     	;# 
  3419     0018                     	;# 
  3420     0019                     	;# 
  3421     001A                     	;# 
  3422     001C                     	;# 
  3423     008C                     	;# 
  3424     008C                     	;# 
  3425     008D                     	;# 
  3426     008E                     	;# 
  3427     008E                     	;# 
  3428     008F                     	;# 
  3429     0090                     	;# 
  3430     0090                     	;# 
  3431     0091                     	;# 
  3432     0092                     	;# 
  3433     0092                     	;# 
  3434     0093                     	;# 
  3435     0094                     	;# 
  3436     0094                     	;# 
  3437     0095                     	;# 
  3438     0096                     	;# 
  3439     0096                     	;# 
  3440     0097                     	;# 
  3441     0098                     	;# 
  3442     0099                     	;# 
  3443     009A                     	;# 
  3444     009B                     	;# 
  3445     009B                     	;# 
  3446     009C                     	;# 
  3447     009D                     	;# 
  3448     009D                     	;# 
  3449     009E                     	;# 
  3450     009F                     	;# 
  3451     010C                     	;# 
  3452     010C                     	;# 
  3453     010D                     	;# 
  3454     010E                     	;# 
  3455     010F                     	;# 
  3456     010F                     	;# 
  3457     0110                     	;# 
  3458     0111                     	;# 
  3459     0112                     	;# 
  3460     0113                     	;# 
  3461     0114                     	;# 
  3462     0115                     	;# 
  3463     0116                     	;# 
  3464     0117                     	;# 
  3465     0118                     	;# 
  3466     0119                     	;# 
  3467     0119                     	;# 
  3468     0119                     	;# 
  3469     011A                     	;# 
  3470     011A                     	;# 
  3471     011A                     	;# 
  3472     011B                     	;# 
  3473     011B                     	;# 
  3474     011B                     	;# 
  3475     011B                     	;# 
  3476     011B                     	;# 
  3477     011C                     	;# 
  3478     011C                     	;# 
  3479     011C                     	;# 
  3480     011D                     	;# 
  3481     011D                     	;# 
  3482     011D                     	;# 
  3483     011E                     	;# 
  3484     011E                     	;# 
  3485     011E                     	;# 
  3486     011F                     	;# 
  3487     011F                     	;# 
  3488     011F                     	;# 
  3489     011F                     	;# 
  3490     011F                     	;# 
  3491     018C                     	;# 
  3492     018D                     	;# 
  3493     018E                     	;# 
  3494     018F                     	;# 
  3495     0190                     	;# 
  3496     0191                     	;# 
  3497     0192                     	;# 
  3498     0196                     	;# 
  3499     0197                     	;# 
  3500     0198                     	;# 
  3501     0199                     	;# 
  3502     019A                     	;# 
  3503     019B                     	;# 
  3504     019C                     	;# 
  3505     020C                     	;# 
  3506     020D                     	;# 
  3507     020E                     	;# 
  3508     020E                     	;# 
  3509     020F                     	;# 
  3510     020F                     	;# 
  3511     0210                     	;# 
  3512     0210                     	;# 
  3513     0211                     	;# 
  3514     0211                     	;# 
  3515     0212                     	;# 
  3516     0213                     	;# 
  3517     0214                     	;# 
  3518     0214                     	;# 
  3519     0215                     	;# 
  3520     0215                     	;# 
  3521     0216                     	;# 
  3522     0216                     	;# 
  3523     0217                     	;# 
  3524     0217                     	;# 
  3525     0218                     	;# 
  3526     0219                     	;# 
  3527     021A                     	;# 
  3528     021A                     	;# 
  3529     021B                     	;# 
  3530     021B                     	;# 
  3531     021C                     	;# 
  3532     021C                     	;# 
  3533     021D                     	;# 
  3534     021D                     	;# 
  3535     021E                     	;# 
  3536     021F                     	;# 
  3537     028C                     	;# 
  3538     028C                     	;# 
  3539     028D                     	;# 
  3540     028D                     	;# 
  3541     028E                     	;# 
  3542     028F                     	;# 
  3543     0290                     	;# 
  3544     0291                     	;# 
  3545     0292                     	;# 
  3546     0292                     	;# 
  3547     0293                     	;# 
  3548     0293                     	;# 
  3549     0294                     	;# 
  3550     0295                     	;# 
  3551     0296                     	;# 
  3552     0297                     	;# 
  3553     0298                     	;# 
  3554     0298                     	;# 
  3555     0299                     	;# 
  3556     0299                     	;# 
  3557     029A                     	;# 
  3558     029B                     	;# 
  3559     029C                     	;# 
  3560     029D                     	;# 
  3561     029F                     	;# 
  3562     030C                     	;# 
  3563     030C                     	;# 
  3564     030D                     	;# 
  3565     030E                     	;# 
  3566     030F                     	;# 
  3567     0310                     	;# 
  3568     0310                     	;# 
  3569     0311                     	;# 
  3570     0312                     	;# 
  3571     0313                     	;# 
  3572     0314                     	;# 
  3573     0314                     	;# 
  3574     0315                     	;# 
  3575     0316                     	;# 
  3576     0317                     	;# 
  3577     0318                     	;# 
  3578     0318                     	;# 
  3579     0319                     	;# 
  3580     031A                     	;# 
  3581     031B                     	;# 
  3582     031C                     	;# 
  3583     031C                     	;# 
  3584     031D                     	;# 
  3585     031E                     	;# 
  3586     031F                     	;# 
  3587     038C                     	;# 
  3588     038C                     	;# 
  3589     038D                     	;# 
  3590     038E                     	;# 
  3591     0390                     	;# 
  3592     0390                     	;# 
  3593     0391                     	;# 
  3594     0392                     	;# 
  3595     048C                     	;# 
  3596     048C                     	;# 
  3597     048D                     	;# 
  3598     048E                     	;# 
  3599     048F                     	;# 
  3600     048F                     	;# 
  3601     0490                     	;# 
  3602     0491                     	;# 
  3603     0492                     	;# 
  3604     0492                     	;# 
  3605     0493                     	;# 
  3606     0494                     	;# 
  3607     0495                     	;# 
  3608     0495                     	;# 
  3609     0496                     	;# 
  3610     0497                     	;# 
  3611     0498                     	;# 
  3612     0499                     	;# 
  3613     049A                     	;# 
  3614     049B                     	;# 
  3615     049C                     	;# 
  3616     049D                     	;# 
  3617     050C                     	;# 
  3618     050C                     	;# 
  3619     050D                     	;# 
  3620     050E                     	;# 
  3621     050F                     	;# 
  3622     050F                     	;# 
  3623     0510                     	;# 
  3624     0511                     	;# 
  3625     0512                     	;# 
  3626     0512                     	;# 
  3627     0513                     	;# 
  3628     0514                     	;# 
  3629     0515                     	;# 
  3630     0515                     	;# 
  3631     0516                     	;# 
  3632     0517                     	;# 
  3633     0518                     	;# 
  3634     0519                     	;# 
  3635     051A                     	;# 
  3636     051B                     	;# 
  3637     051C                     	;# 
  3638     051D                     	;# 
  3639     058C                     	;# 
  3640     058C                     	;# 
  3641     058D                     	;# 
  3642     058E                     	;# 
  3643     058F                     	;# 
  3644     058F                     	;# 
  3645     0590                     	;# 
  3646     0591                     	;# 
  3647     0592                     	;# 
  3648     0593                     	;# 
  3649     059C                     	;# 
  3650     059C                     	;# 
  3651     059D                     	;# 
  3652     059D                     	;# 
  3653     059E                     	;# 
  3654     059F                     	;# 
  3655     060C                     	;# 
  3656     060C                     	;# 
  3657     060D                     	;# 
  3658     060D                     	;# 
  3659     060E                     	;# 
  3660     060F                     	;# 
  3661     0610                     	;# 
  3662     0611                     	;# 
  3663     0612                     	;# 
  3664     0613                     	;# 
  3665     0614                     	;# 
  3666     0616                     	;# 
  3667     0616                     	;# 
  3668     0617                     	;# 
  3669     0617                     	;# 
  3670     0618                     	;# 
  3671     0619                     	;# 
  3672     061A                     	;# 
  3673     061B                     	;# 
  3674     061C                     	;# 
  3675     061D                     	;# 
  3676     061E                     	;# 
  3677     068C                     	;# 
  3678     068D                     	;# 
  3679     068E                     	;# 
  3680     068F                     	;# 
  3681     0690                     	;# 
  3682     0691                     	;# 
  3683     0692                     	;# 
  3684     0693                     	;# 
  3685     0694                     	;# 
  3686     070C                     	;# 
  3687     070D                     	;# 
  3688     070E                     	;# 
  3689     070F                     	;# 
  3690     0710                     	;# 
  3691     0711                     	;# 
  3692     0712                     	;# 
  3693     0713                     	;# 
  3694     0714                     	;# 
  3695     0716                     	;# 
  3696     0717                     	;# 
  3697     0718                     	;# 
  3698     0719                     	;# 
  3699     071A                     	;# 
  3700     071B                     	;# 
  3701     071C                     	;# 
  3702     071D                     	;# 
  3703     071E                     	;# 
  3704     0796                     	;# 
  3705     0797                     	;# 
  3706     0798                     	;# 
  3707     0799                     	;# 
  3708     079A                     	;# 
  3709     079B                     	;# 
  3710     079C                     	;# 
  3711     079D                     	;# 
  3712     080C                     	;# 
  3713     080D                     	;# 
  3714     080E                     	;# 
  3715     080F                     	;# 
  3716     0810                     	;# 
  3717     0811                     	;# 
  3718     0813                     	;# 
  3719     0814                     	;# 
  3720     081A                     	;# 
  3721     081A                     	;# 
  3722     081B                     	;# 
  3723     081C                     	;# 
  3724     081C                     	;# 
  3725     081D                     	;# 
  3726     081E                     	;# 
  3727     081F                     	;# 
  3728     088C                     	;# 
  3729     088D                     	;# 
  3730     088E                     	;# 
  3731     088F                     	;# 
  3732     0890                     	;# 
  3733     0891                     	;# 
  3734     0892                     	;# 
  3735     0893                     	;# 
  3736     0895                     	;# 
  3737     0896                     	;# 
  3738     0897                     	;# 
  3739     0898                     	;# 
  3740     0899                     	;# 
  3741     089A                     	;# 
  3742     089B                     	;# 
  3743     090C                     	;# 
  3744     090E                     	;# 
  3745     090F                     	;# 
  3746     091F                     	;# 
  3747     098F                     	;# 
  3748     098F                     	;# 
  3749     0990                     	;# 
  3750     0991                     	;# 
  3751     0992                     	;# 
  3752     0993                     	;# 
  3753     0994                     	;# 
  3754     0995                     	;# 
  3755     0996                     	;# 
  3756     0997                     	;# 
  3757     0A19                     	;# 
  3758     0A19                     	;# 
  3759     0A1A                     	;# 
  3760     0A1A                     	;# 
  3761     0A1B                     	;# 
  3762     0A1B                     	;# 
  3763     0A1B                     	;# 
  3764     0A1C                     	;# 
  3765     0A1C                     	;# 
  3766     0A1D                     	;# 
  3767     0A1D                     	;# 
  3768     0A1E                     	;# 
  3769     0A1E                     	;# 
  3770     0A1F                     	;# 
  3771     0A1F                     	;# 
  3772     0A1F                     	;# 
  3773     1E0F                     	;# 
  3774     1E10                     	;# 
  3775     1E11                     	;# 
  3776     1E12                     	;# 
  3777     1E13                     	;# 
  3778     1E14                     	;# 
  3779     1E15                     	;# 
  3780     1E16                     	;# 
  3781     1E17                     	;# 
  3782     1E18                     	;# 
  3783     1E19                     	;# 
  3784     1E1A                     	;# 
  3785     1E1B                     	;# 
  3786     1E1C                     	;# 
  3787     1E1D                     	;# 
  3788     1E1E                     	;# 
  3789     1E1F                     	;# 
  3790     1E20                     	;# 
  3791     1E21                     	;# 
  3792     1E22                     	;# 
  3793     1E23                     	;# 
  3794     1E24                     	;# 
  3795     1E25                     	;# 
  3796     1E26                     	;# 
  3797     1E27                     	;# 
  3798     1E28                     	;# 
  3799     1E29                     	;# 
  3800     1E2A                     	;# 
  3801     1E2B                     	;# 
  3802     1E2C                     	;# 
  3803     1E2D                     	;# 
  3804     1E2E                     	;# 
  3805     1E2F                     	;# 
  3806     1E30                     	;# 
  3807     1E31                     	;# 
  3808     1E32                     	;# 
  3809     1E33                     	;# 
  3810     1E34                     	;# 
  3811     1E35                     	;# 
  3812     1E36                     	;# 
  3813     1E37                     	;# 
  3814     1E8F                     	;# 
  3815     1E90                     	;# 
  3816     1E91                     	;# 
  3817     1E92                     	;# 
  3818     1E93                     	;# 
  3819     1E94                     	;# 
  3820     1E95                     	;# 
  3821     1E96                     	;# 
  3822     1E97                     	;# 
  3823     1E9C                     	;# 
  3824     1E9D                     	;# 
  3825     1E9E                     	;# 
  3826     1EA1                     	;# 
  3827     1EA2                     	;# 
  3828     1EA3                     	;# 
  3829     1EA4                     	;# 
  3830     1EA5                     	;# 
  3831     1EA9                     	;# 
  3832     1EAA                     	;# 
  3833     1EAB                     	;# 
  3834     1EAC                     	;# 
  3835     1EB1                     	;# 
  3836     1EB2                     	;# 
  3837     1EB3                     	;# 
  3838     1EB8                     	;# 
  3839     1EB9                     	;# 
  3840     1EBA                     	;# 
  3841     1EBB                     	;# 
  3842     1EBC                     	;# 
  3843     1EBD                     	;# 
  3844     1EBE                     	;# 
  3845     1EC3                     	;# 
  3846     1EC5                     	;# 
  3847     1EC6                     	;# 
  3848     1EC7                     	;# 
  3849     1EC8                     	;# 
  3850     1EC9                     	;# 
  3851     1ECA                     	;# 
  3852     1ECB                     	;# 
  3853     1ECC                     	;# 
  3854     1ECD                     	;# 
  3855     1ECE                     	;# 
  3856     1F10                     	;# 
  3857     1F11                     	;# 
  3858     1F12                     	;# 
  3859     1F13                     	;# 
  3860     1F14                     	;# 
  3861     1F15                     	;# 
  3862     1F16                     	;# 
  3863     1F17                     	;# 
  3864     1F18                     	;# 
  3865     1F19                     	;# 
  3866     1F1A                     	;# 
  3867     1F1B                     	;# 
  3868     1F1C                     	;# 
  3869     1F1D                     	;# 
  3870     1F1E                     	;# 
  3871     1F1F                     	;# 
  3872     1F20                     	;# 
  3873     1F21                     	;# 
  3874     1F22                     	;# 
  3875     1F23                     	;# 
  3876     1F24                     	;# 
  3877     1F25                     	;# 
  3878     1F26                     	;# 
  3879     1F27                     	;# 
  3880     1F38                     	;# 
  3881     1F39                     	;# 
  3882     1F3A                     	;# 
  3883     1F3B                     	;# 
  3884     1F3C                     	;# 
  3885     1F3D                     	;# 
  3886     1F3E                     	;# 
  3887     1F3F                     	;# 
  3888     1F43                     	;# 
  3889     1F44                     	;# 
  3890     1F45                     	;# 
  3891     1F46                     	;# 
  3892     1F47                     	;# 
  3893     1F48                     	;# 
  3894     1F49                     	;# 
  3895     1F4A                     	;# 
  3896     1F4E                     	;# 
  3897     1F4F                     	;# 
  3898     1F50                     	;# 
  3899     1F51                     	;# 
  3900     1F52                     	;# 
  3901     1F53                     	;# 
  3902     1F54                     	;# 
  3903     1F55                     	;# 
  3904     1F65                     	;# 
  3905     1F66                     	;# 
  3906     1F67                     	;# 
  3907     1F68                     	;# 
  3908     1F69                     	;# 
  3909     1F6A                     	;# 
  3910     1F6B                     	;# 
  3911     1FE4                     	;# 
  3912     1FE5                     	;# 
  3913     1FE6                     	;# 
  3914     1FE7                     	;# 
  3915     1FE8                     	;# 
  3916     1FE8                     	;# 
  3917     1FE9                     	;# 
  3918     1FEA                     	;# 
  3919     1FEB                     	;# 
  3920     1FED                     	;# 
  3921     1FEE                     	;# 
  3922     1FEF                     	;# 
  3923     0000                     	;# 
  3924     0001                     	;# 
  3925     0002                     	;# 
  3926     0003                     	;# 
  3927     0004                     	;# 
  3928     0005                     	;# 
  3929     0006                     	;# 
  3930     0007                     	;# 
  3931     0008                     	;# 
  3932     0009                     	;# 
  3933     000A                     	;# 
  3934     000B                     	;# 
  3935     000C                     	;# 
  3936     000D                     	;# 
  3937     000E                     	;# 
  3938     0010                     	;# 
  3939     0012                     	;# 
  3940     0013                     	;# 
  3941     0014                     	;# 
  3942     0016                     	;# 
  3943     0018                     	;# 
  3944     0019                     	;# 
  3945     001A                     	;# 
  3946     001C                     	;# 
  3947     008C                     	;# 
  3948     008C                     	;# 
  3949     008D                     	;# 
  3950     008E                     	;# 
  3951     008E                     	;# 
  3952     008F                     	;# 
  3953     0090                     	;# 
  3954     0090                     	;# 
  3955     0091                     	;# 
  3956     0092                     	;# 
  3957     0092                     	;# 
  3958     0093                     	;# 
  3959     0094                     	;# 
  3960     0094                     	;# 
  3961     0095                     	;# 
  3962     0096                     	;# 
  3963     0096                     	;# 
  3964     0097                     	;# 
  3965     0098                     	;# 
  3966     0099                     	;# 
  3967     009A                     	;# 
  3968     009B                     	;# 
  3969     009B                     	;# 
  3970     009C                     	;# 
  3971     009D                     	;# 
  3972     009D                     	;# 
  3973     009E                     	;# 
  3974     009F                     	;# 
  3975     010C                     	;# 
  3976     010C                     	;# 
  3977     010D                     	;# 
  3978     010E                     	;# 
  3979     010F                     	;# 
  3980     010F                     	;# 
  3981     0110                     	;# 
  3982     0111                     	;# 
  3983     0112                     	;# 
  3984     0113                     	;# 
  3985     0114                     	;# 
  3986     0115                     	;# 
  3987     0116                     	;# 
  3988     0117                     	;# 
  3989     0118                     	;# 
  3990     0119                     	;# 
  3991     0119                     	;# 
  3992     0119                     	;# 
  3993     011A                     	;# 
  3994     011A                     	;# 
  3995     011A                     	;# 
  3996     011B                     	;# 
  3997     011B                     	;# 
  3998     011B                     	;# 
  3999     011B                     	;# 
  4000     011B                     	;# 
  4001     011C                     	;# 
  4002     011C                     	;# 
  4003     011C                     	;# 
  4004     011D                     	;# 
  4005     011D                     	;# 
  4006     011D                     	;# 
  4007     011E                     	;# 
  4008     011E                     	;# 
  4009     011E                     	;# 
  4010     011F                     	;# 
  4011     011F                     	;# 
  4012     011F                     	;# 
  4013     011F                     	;# 
  4014     011F                     	;# 
  4015     018C                     	;# 
  4016     018D                     	;# 
  4017     018E                     	;# 
  4018     018F                     	;# 
  4019     0190                     	;# 
  4020     0191                     	;# 
  4021     0192                     	;# 
  4022     0196                     	;# 
  4023     0197                     	;# 
  4024     0198                     	;# 
  4025     0199                     	;# 
  4026     019A                     	;# 
  4027     019B                     	;# 
  4028     019C                     	;# 
  4029     020C                     	;# 
  4030     020D                     	;# 
  4031     020E                     	;# 
  4032     020E                     	;# 
  4033     020F                     	;# 
  4034     020F                     	;# 
  4035     0210                     	;# 
  4036     0210                     	;# 
  4037     0211                     	;# 
  4038     0211                     	;# 
  4039     0212                     	;# 
  4040     0213                     	;# 
  4041     0214                     	;# 
  4042     0214                     	;# 
  4043     0215                     	;# 
  4044     0215                     	;# 
  4045     0216                     	;# 
  4046     0216                     	;# 
  4047     0217                     	;# 
  4048     0217                     	;# 
  4049     0218                     	;# 
  4050     0219                     	;# 
  4051     021A                     	;# 
  4052     021A                     	;# 
  4053     021B                     	;# 
  4054     021B                     	;# 
  4055     021C                     	;# 
  4056     021C                     	;# 
  4057     021D                     	;# 
  4058     021D                     	;# 
  4059     021E                     	;# 
  4060     021F                     	;# 
  4061     028C                     	;# 
  4062     028C                     	;# 
  4063     028D                     	;# 
  4064     028D                     	;# 
  4065     028E                     	;# 
  4066     028F                     	;# 
  4067     0290                     	;# 
  4068     0291                     	;# 
  4069     0292                     	;# 
  4070     0292                     	;# 
  4071     0293                     	;# 
  4072     0293                     	;# 
  4073     0294                     	;# 
  4074     0295                     	;# 
  4075     0296                     	;# 
  4076     0297                     	;# 
  4077     0298                     	;# 
  4078     0298                     	;# 
  4079     0299                     	;# 
  4080     0299                     	;# 
  4081     029A                     	;# 
  4082     029B                     	;# 
  4083     029C                     	;# 
  4084     029D                     	;# 
  4085     029F                     	;# 
  4086     030C                     	;# 
  4087     030C                     	;# 
  4088     030D                     	;# 
  4089     030E                     	;# 
  4090     030F                     	;# 
  4091     0310                     	;# 
  4092     0310                     	;# 
  4093     0311                     	;# 
  4094     0312                     	;# 
  4095     0313                     	;# 
  4096     0314                     	;# 
  4097     0314                     	;# 
  4098     0315                     	;# 
  4099     0316                     	;# 
  4100     0317                     	;# 
  4101     0318                     	;# 
  4102     0318                     	;# 
  4103     0319                     	;# 
  4104     031A                     	;# 
  4105     031B                     	;# 
  4106     031C                     	;# 
  4107     031C                     	;# 
  4108     031D                     	;# 
  4109     031E                     	;# 
  4110     031F                     	;# 
  4111     038C                     	;# 
  4112     038C                     	;# 
  4113     038D                     	;# 
  4114     038E                     	;# 
  4115     0390                     	;# 
  4116     0390                     	;# 
  4117     0391                     	;# 
  4118     0392                     	;# 
  4119     048C                     	;# 
  4120     048C                     	;# 
  4121     048D                     	;# 
  4122     048E                     	;# 
  4123     048F                     	;# 
  4124     048F                     	;# 
  4125     0490                     	;# 
  4126     0491                     	;# 
  4127     0492                     	;# 
  4128     0492                     	;# 
  4129     0493                     	;# 
  4130     0494                     	;# 
  4131     0495                     	;# 
  4132     0495                     	;# 
  4133     0496                     	;# 
  4134     0497                     	;# 
  4135     0498                     	;# 
  4136     0499                     	;# 
  4137     049A                     	;# 
  4138     049B                     	;# 
  4139     049C                     	;# 
  4140     049D                     	;# 
  4141     050C                     	;# 
  4142     050C                     	;# 
  4143     050D                     	;# 
  4144     050E                     	;# 
  4145     050F                     	;# 
  4146     050F                     	;# 
  4147     0510                     	;# 
  4148     0511                     	;# 
  4149     0512                     	;# 
  4150     0512                     	;# 
  4151     0513                     	;# 
  4152     0514                     	;# 
  4153     0515                     	;# 
  4154     0515                     	;# 
  4155     0516                     	;# 
  4156     0517                     	;# 
  4157     0518                     	;# 
  4158     0519                     	;# 
  4159     051A                     	;# 
  4160     051B                     	;# 
  4161     051C                     	;# 
  4162     051D                     	;# 
  4163     058C                     	;# 
  4164     058C                     	;# 
  4165     058D                     	;# 
  4166     058E                     	;# 
  4167     058F                     	;# 
  4168     058F                     	;# 
  4169     0590                     	;# 
  4170     0591                     	;# 
  4171     0592                     	;# 
  4172     0593                     	;# 
  4173     059C                     	;# 
  4174     059C                     	;# 
  4175     059D                     	;# 
  4176     059D                     	;# 
  4177     059E                     	;# 
  4178     059F                     	;# 
  4179     060C                     	;# 
  4180     060C                     	;# 
  4181     060D                     	;# 
  4182     060D                     	;# 
  4183     060E                     	;# 
  4184     060F                     	;# 
  4185     0610                     	;# 
  4186     0611                     	;# 
  4187     0612                     	;# 
  4188     0613                     	;# 
  4189     0614                     	;# 
  4190     0616                     	;# 
  4191     0616                     	;# 
  4192     0617                     	;# 
  4193     0617                     	;# 
  4194     0618                     	;# 
  4195     0619                     	;# 
  4196     061A                     	;# 
  4197     061B                     	;# 
  4198     061C                     	;# 
  4199     061D                     	;# 
  4200     061E                     	;# 
  4201     068C                     	;# 
  4202     068D                     	;# 
  4203     068E                     	;# 
  4204     068F                     	;# 
  4205     0690                     	;# 
  4206     0691                     	;# 
  4207     0692                     	;# 
  4208     0693                     	;# 
  4209     0694                     	;# 
  4210     070C                     	;# 
  4211     070D                     	;# 
  4212     070E                     	;# 
  4213     070F                     	;# 
  4214     0710                     	;# 
  4215     0711                     	;# 
  4216     0712                     	;# 
  4217     0713                     	;# 
  4218     0714                     	;# 
  4219     0716                     	;# 
  4220     0717                     	;# 
  4221     0718                     	;# 
  4222     0719                     	;# 
  4223     071A                     	;# 
  4224     071B                     	;# 
  4225     071C                     	;# 
  4226     071D                     	;# 
  4227     071E                     	;# 
  4228     0796                     	;# 
  4229     0797                     	;# 
  4230     0798                     	;# 
  4231     0799                     	;# 
  4232     079A                     	;# 
  4233     079B                     	;# 
  4234     079C                     	;# 
  4235     079D                     	;# 
  4236     080C                     	;# 
  4237     080D                     	;# 
  4238     080E                     	;# 
  4239     080F                     	;# 
  4240     0810                     	;# 
  4241     0811                     	;# 
  4242     0813                     	;# 
  4243     0814                     	;# 
  4244     081A                     	;# 
  4245     081A                     	;# 
  4246     081B                     	;# 
  4247     081C                     	;# 
  4248     081C                     	;# 
  4249     081D                     	;# 
  4250     081E                     	;# 
  4251     081F                     	;# 
  4252     088C                     	;# 
  4253     088D                     	;# 
  4254     088E                     	;# 
  4255     088F                     	;# 
  4256     0890                     	;# 
  4257     0891                     	;# 
  4258     0892                     	;# 
  4259     0893                     	;# 
  4260     0895                     	;# 
  4261     0896                     	;# 
  4262     0897                     	;# 
  4263     0898                     	;# 
  4264     0899                     	;# 
  4265     089A                     	;# 
  4266     089B                     	;# 
  4267     090C                     	;# 
  4268     090E                     	;# 
  4269     090F                     	;# 
  4270     091F                     	;# 
  4271     098F                     	;# 
  4272     098F                     	;# 
  4273     0990                     	;# 
  4274     0991                     	;# 
  4275     0992                     	;# 
  4276     0993                     	;# 
  4277     0994                     	;# 
  4278     0995                     	;# 
  4279     0996                     	;# 
  4280     0997                     	;# 
  4281     0A19                     	;# 
  4282     0A19                     	;# 
  4283     0A1A                     	;# 
  4284     0A1A                     	;# 
  4285     0A1B                     	;# 
  4286     0A1B                     	;# 
  4287     0A1B                     	;# 
  4288     0A1C                     	;# 
  4289     0A1C                     	;# 
  4290     0A1D                     	;# 
  4291     0A1D                     	;# 
  4292     0A1E                     	;# 
  4293     0A1E                     	;# 
  4294     0A1F                     	;# 
  4295     0A1F                     	;# 
  4296     0A1F                     	;# 
  4297     1E0F                     	;# 
  4298     1E10                     	;# 
  4299     1E11                     	;# 
  4300     1E12                     	;# 
  4301     1E13                     	;# 
  4302     1E14                     	;# 
  4303     1E15                     	;# 
  4304     1E16                     	;# 
  4305     1E17                     	;# 
  4306     1E18                     	;# 
  4307     1E19                     	;# 
  4308     1E1A                     	;# 
  4309     1E1B                     	;# 
  4310     1E1C                     	;# 
  4311     1E1D                     	;# 
  4312     1E1E                     	;# 
  4313     1E1F                     	;# 
  4314     1E20                     	;# 
  4315     1E21                     	;# 
  4316     1E22                     	;# 
  4317     1E23                     	;# 
  4318     1E24                     	;# 
  4319     1E25                     	;# 
  4320     1E26                     	;# 
  4321     1E27                     	;# 
  4322     1E28                     	;# 
  4323     1E29                     	;# 
  4324     1E2A                     	;# 
  4325     1E2B                     	;# 
  4326     1E2C                     	;# 
  4327     1E2D                     	;# 
  4328     1E2E                     	;# 
  4329     1E2F                     	;# 
  4330     1E30                     	;# 
  4331     1E31                     	;# 
  4332     1E32                     	;# 
  4333     1E33                     	;# 
  4334     1E34                     	;# 
  4335     1E35                     	;# 
  4336     1E36                     	;# 
  4337     1E37                     	;# 
  4338     1E8F                     	;# 
  4339     1E90                     	;# 
  4340     1E91                     	;# 
  4341     1E92                     	;# 
  4342     1E93                     	;# 
  4343     1E94                     	;# 
  4344     1E95                     	;# 
  4345     1E96                     	;# 
  4346     1E97                     	;# 
  4347     1E9C                     	;# 
  4348     1E9D                     	;# 
  4349     1E9E                     	;# 
  4350     1EA1                     	;# 
  4351     1EA2                     	;# 
  4352     1EA3                     	;# 
  4353     1EA4                     	;# 
  4354     1EA5                     	;# 
  4355     1EA9                     	;# 
  4356     1EAA                     	;# 
  4357     1EAB                     	;# 
  4358     1EAC                     	;# 
  4359     1EB1                     	;# 
  4360     1EB2                     	;# 
  4361     1EB3                     	;# 
  4362     1EB8                     	;# 
  4363     1EB9                     	;# 
  4364     1EBA                     	;# 
  4365     1EBB                     	;# 
  4366     1EBC                     	;# 
  4367     1EBD                     	;# 
  4368     1EBE                     	;# 
  4369     1EC3                     	;# 
  4370     1EC5                     	;# 
  4371     1EC6                     	;# 
  4372     1EC7                     	;# 
  4373     1EC8                     	;# 
  4374     1EC9                     	;# 
  4375     1ECA                     	;# 
  4376     1ECB                     	;# 
  4377     1ECC                     	;# 
  4378     1ECD                     	;# 
  4379     1ECE                     	;# 
  4380     1F10                     	;# 
  4381     1F11                     	;# 
  4382     1F12                     	;# 
  4383     1F13                     	;# 
  4384     1F14                     	;# 
  4385     1F15                     	;# 
  4386     1F16                     	;# 
  4387     1F17                     	;# 
  4388     1F18                     	;# 
  4389     1F19                     	;# 
  4390     1F1A                     	;# 
  4391     1F1B                     	;# 
  4392     1F1C                     	;# 
  4393     1F1D                     	;# 
  4394     1F1E                     	;# 
  4395     1F1F                     	;# 
  4396     1F20                     	;# 
  4397     1F21                     	;# 
  4398     1F22                     	;# 
  4399     1F23                     	;# 
  4400     1F24                     	;# 
  4401     1F25                     	;# 
  4402     1F26                     	;# 
  4403     1F27                     	;# 
  4404     1F38                     	;# 
  4405     1F39                     	;# 
  4406     1F3A                     	;# 
  4407     1F3B                     	;# 
  4408     1F3C                     	;# 
  4409     1F3D                     	;# 
  4410     1F3E                     	;# 
  4411     1F3F                     	;# 
  4412     1F43                     	;# 
  4413     1F44                     	;# 
  4414     1F45                     	;# 
  4415     1F46                     	;# 
  4416     1F47                     	;# 
  4417     1F48                     	;# 
  4418     1F49                     	;# 
  4419     1F4A                     	;# 
  4420     1F4E                     	;# 
  4421     1F4F                     	;# 
  4422     1F50                     	;# 
  4423     1F51                     	;# 
  4424     1F52                     	;# 
  4425     1F53                     	;# 
  4426     1F54                     	;# 
  4427     1F55                     	;# 
  4428     1F65                     	;# 
  4429     1F66                     	;# 
  4430     1F67                     	;# 
  4431     1F68                     	;# 
  4432     1F69                     	;# 
  4433     1F6A                     	;# 
  4434     1F6B                     	;# 
  4435     1FE4                     	;# 
  4436     1FE5                     	;# 
  4437     1FE6                     	;# 
  4438     1FE7                     	;# 
  4439     1FE8                     	;# 
  4440     1FE8                     	;# 
  4441     1FE9                     	;# 
  4442     1FEA                     	;# 
  4443     1FEB                     	;# 
  4444     1FED                     	;# 
  4445     1FEE                     	;# 
  4446     1FEF                     	;# 
  4447     0000                     	;# 
  4448     0001                     	;# 
  4449     0002                     	;# 
  4450     0003                     	;# 
  4451     0004                     	;# 
  4452     0005                     	;# 
  4453     0006                     	;# 
  4454     0007                     	;# 
  4455     0008                     	;# 
  4456     0009                     	;# 
  4457     000A                     	;# 
  4458     000B                     	;# 
  4459     000C                     	;# 
  4460     000D                     	;# 
  4461     000E                     	;# 
  4462     0010                     	;# 
  4463     0012                     	;# 
  4464     0013                     	;# 
  4465     0014                     	;# 
  4466     0016                     	;# 
  4467     0018                     	;# 
  4468     0019                     	;# 
  4469     001A                     	;# 
  4470     001C                     	;# 
  4471     008C                     	;# 
  4472     008C                     	;# 
  4473     008D                     	;# 
  4474     008E                     	;# 
  4475     008E                     	;# 
  4476     008F                     	;# 
  4477     0090                     	;# 
  4478     0090                     	;# 
  4479     0091                     	;# 
  4480     0092                     	;# 
  4481     0092                     	;# 
  4482     0093                     	;# 
  4483     0094                     	;# 
  4484     0094                     	;# 
  4485     0095                     	;# 
  4486     0096                     	;# 
  4487     0096                     	;# 
  4488     0097                     	;# 
  4489     0098                     	;# 
  4490     0099                     	;# 
  4491     009A                     	;# 
  4492     009B                     	;# 
  4493     009B                     	;# 
  4494     009C                     	;# 
  4495     009D                     	;# 
  4496     009D                     	;# 
  4497     009E                     	;# 
  4498     009F                     	;# 
  4499     010C                     	;# 
  4500     010C                     	;# 
  4501     010D                     	;# 
  4502     010E                     	;# 
  4503     010F                     	;# 
  4504     010F                     	;# 
  4505     0110                     	;# 
  4506     0111                     	;# 
  4507     0112                     	;# 
  4508     0113                     	;# 
  4509     0114                     	;# 
  4510     0115                     	;# 
  4511     0116                     	;# 
  4512     0117                     	;# 
  4513     0118                     	;# 
  4514     0119                     	;# 
  4515     0119                     	;# 
  4516     0119                     	;# 
  4517     011A                     	;# 
  4518     011A                     	;# 
  4519     011A                     	;# 
  4520     011B                     	;# 
  4521     011B                     	;# 
  4522     011B                     	;# 
  4523     011B                     	;# 
  4524     011B                     	;# 
  4525     011C                     	;# 
  4526     011C                     	;# 
  4527     011C                     	;# 
  4528     011D                     	;# 
  4529     011D                     	;# 
  4530     011D                     	;# 
  4531     011E                     	;# 
  4532     011E                     	;# 
  4533     011E                     	;# 
  4534     011F                     	;# 
  4535     011F                     	;# 
  4536     011F                     	;# 
  4537     011F                     	;# 
  4538     011F                     	;# 
  4539     018C                     	;# 
  4540     018D                     	;# 
  4541     018E                     	;# 
  4542     018F                     	;# 
  4543     0190                     	;# 
  4544     0191                     	;# 
  4545     0192                     	;# 
  4546     0196                     	;# 
  4547     0197                     	;# 
  4548     0198                     	;# 
  4549     0199                     	;# 
  4550     019A                     	;# 
  4551     019B                     	;# 
  4552     019C                     	;# 
  4553     020C                     	;# 
  4554     020D                     	;# 
  4555     020E                     	;# 
  4556     020E                     	;# 
  4557     020F                     	;# 
  4558     020F                     	;# 
  4559     0210                     	;# 
  4560     0210                     	;# 
  4561     0211                     	;# 
  4562     0211                     	;# 
  4563     0212                     	;# 
  4564     0213                     	;# 
  4565     0214                     	;# 
  4566     0214                     	;# 
  4567     0215                     	;# 
  4568     0215                     	;# 
  4569     0216                     	;# 
  4570     0216                     	;# 
  4571     0217                     	;# 
  4572     0217                     	;# 
  4573     0218                     	;# 
  4574     0219                     	;# 
  4575     021A                     	;# 
  4576     021A                     	;# 
  4577     021B                     	;# 
  4578     021B                     	;# 
  4579     021C                     	;# 
  4580     021C                     	;# 
  4581     021D                     	;# 
  4582     021D                     	;# 
  4583     021E                     	;# 
  4584     021F                     	;# 
  4585     028C                     	;# 
  4586     028C                     	;# 
  4587     028D                     	;# 
  4588     028D                     	;# 
  4589     028E                     	;# 
  4590     028F                     	;# 
  4591     0290                     	;# 
  4592     0291                     	;# 
  4593     0292                     	;# 
  4594     0292                     	;# 
  4595     0293                     	;# 
  4596     0293                     	;# 
  4597     0294                     	;# 
  4598     0295                     	;# 
  4599     0296                     	;# 
  4600     0297                     	;# 
  4601     0298                     	;# 
  4602     0298                     	;# 
  4603     0299                     	;# 
  4604     0299                     	;# 
  4605     029A                     	;# 
  4606     029B                     	;# 
  4607     029C                     	;# 
  4608     029D                     	;# 
  4609     029F                     	;# 
  4610     030C                     	;# 
  4611     030C                     	;# 
  4612     030D                     	;# 
  4613     030E                     	;# 
  4614     030F                     	;# 
  4615     0310                     	;# 
  4616     0310                     	;# 
  4617     0311                     	;# 
  4618     0312                     	;# 
  4619     0313                     	;# 
  4620     0314                     	;# 
  4621     0314                     	;# 
  4622     0315                     	;# 
  4623     0316                     	;# 
  4624     0317                     	;# 
  4625     0318                     	;# 
  4626     0318                     	;# 
  4627     0319                     	;# 
  4628     031A                     	;# 
  4629     031B                     	;# 
  4630     031C                     	;# 
  4631     031C                     	;# 
  4632     031D                     	;# 
  4633     031E                     	;# 
  4634     031F                     	;# 
  4635     038C                     	;# 
  4636     038C                     	;# 
  4637     038D                     	;# 
  4638     038E                     	;# 
  4639     0390                     	;# 
  4640     0390                     	;# 
  4641     0391                     	;# 
  4642     0392                     	;# 
  4643     048C                     	;# 
  4644     048C                     	;# 
  4645     048D                     	;# 
  4646     048E                     	;# 
  4647     048F                     	;# 
  4648     048F                     	;# 
  4649     0490                     	;# 
  4650     0491                     	;# 
  4651     0492                     	;# 
  4652     0492                     	;# 
  4653     0493                     	;# 
  4654     0494                     	;# 
  4655     0495                     	;# 
  4656     0495                     	;# 
  4657     0496                     	;# 
  4658     0497                     	;# 
  4659     0498                     	;# 
  4660     0499                     	;# 
  4661     049A                     	;# 
  4662     049B                     	;# 
  4663     049C                     	;# 
  4664     049D                     	;# 
  4665     050C                     	;# 
  4666     050C                     	;# 
  4667     050D                     	;# 
  4668     050E                     	;# 
  4669     050F                     	;# 
  4670     050F                     	;# 
  4671     0510                     	;# 
  4672     0511                     	;# 
  4673     0512                     	;# 
  4674     0512                     	;# 
  4675     0513                     	;# 
  4676     0514                     	;# 
  4677     0515                     	;# 
  4678     0515                     	;# 
  4679     0516                     	;# 
  4680     0517                     	;# 
  4681     0518                     	;# 
  4682     0519                     	;# 
  4683     051A                     	;# 
  4684     051B                     	;# 
  4685     051C                     	;# 
  4686     051D                     	;# 
  4687     058C                     	;# 
  4688     058C                     	;# 
  4689     058D                     	;# 
  4690     058E                     	;# 
  4691     058F                     	;# 
  4692     058F                     	;# 
  4693     0590                     	;# 
  4694     0591                     	;# 
  4695     0592                     	;# 
  4696     0593                     	;# 
  4697     059C                     	;# 
  4698     059C                     	;# 
  4699     059D                     	;# 
  4700     059D                     	;# 
  4701     059E                     	;# 
  4702     059F                     	;# 
  4703     060C                     	;# 
  4704     060C                     	;# 
  4705     060D                     	;# 
  4706     060D                     	;# 
  4707     060E                     	;# 
  4708     060F                     	;# 
  4709     0610                     	;# 
  4710     0611                     	;# 
  4711     0612                     	;# 
  4712     0613                     	;# 
  4713     0614                     	;# 
  4714     0616                     	;# 
  4715     0616                     	;# 
  4716     0617                     	;# 
  4717     0617                     	;# 
  4718     0618                     	;# 
  4719     0619                     	;# 
  4720     061A                     	;# 
  4721     061B                     	;# 
  4722     061C                     	;# 
  4723     061D                     	;# 
  4724     061E                     	;# 
  4725     068C                     	;# 
  4726     068D                     	;# 
  4727     068E                     	;# 
  4728     068F                     	;# 
  4729     0690                     	;# 
  4730     0691                     	;# 
  4731     0692                     	;# 
  4732     0693                     	;# 
  4733     0694                     	;# 
  4734     070C                     	;# 
  4735     070D                     	;# 
  4736     070E                     	;# 
  4737     070F                     	;# 
  4738     0710                     	;# 
  4739     0711                     	;# 
  4740     0712                     	;# 
  4741     0713                     	;# 
  4742     0714                     	;# 
  4743     0716                     	;# 
  4744     0717                     	;# 
  4745     0718                     	;# 
  4746     0719                     	;# 
  4747     071A                     	;# 
  4748     071B                     	;# 
  4749     071C                     	;# 
  4750     071D                     	;# 
  4751     071E                     	;# 
  4752     0796                     	;# 
  4753     0797                     	;# 
  4754     0798                     	;# 
  4755     0799                     	;# 
  4756     079A                     	;# 
  4757     079B                     	;# 
  4758     079C                     	;# 
  4759     079D                     	;# 
  4760     080C                     	;# 
  4761     080D                     	;# 
  4762     080E                     	;# 
  4763     080F                     	;# 
  4764     0810                     	;# 
  4765     0811                     	;# 
  4766     0813                     	;# 
  4767     0814                     	;# 
  4768     081A                     	;# 
  4769     081A                     	;# 
  4770     081B                     	;# 
  4771     081C                     	;# 
  4772     081C                     	;# 
  4773     081D                     	;# 
  4774     081E                     	;# 
  4775     081F                     	;# 
  4776     088C                     	;# 
  4777     088D                     	;# 
  4778     088E                     	;# 
  4779     088F                     	;# 
  4780     0890                     	;# 
  4781     0891                     	;# 
  4782     0892                     	;# 
  4783     0893                     	;# 
  4784     0895                     	;# 
  4785     0896                     	;# 
  4786     0897                     	;# 
  4787     0898                     	;# 
  4788     0899                     	;# 
  4789     089A                     	;# 
  4790     089B                     	;# 
  4791     090C                     	;# 
  4792     090E                     	;# 
  4793     090F                     	;# 
  4794     091F                     	;# 
  4795     098F                     	;# 
  4796     098F                     	;# 
  4797     0990                     	;# 
  4798     0991                     	;# 
  4799     0992                     	;# 
  4800     0993                     	;# 
  4801     0994                     	;# 
  4802     0995                     	;# 
  4803     0996                     	;# 
  4804     0997                     	;# 
  4805     0A19                     	;# 
  4806     0A19                     	;# 
  4807     0A1A                     	;# 
  4808     0A1A                     	;# 
  4809     0A1B                     	;# 
  4810     0A1B                     	;# 
  4811     0A1B                     	;# 
  4812     0A1C                     	;# 
  4813     0A1C                     	;# 
  4814     0A1D                     	;# 
  4815     0A1D                     	;# 
  4816     0A1E                     	;# 
  4817     0A1E                     	;# 
  4818     0A1F                     	;# 
  4819     0A1F                     	;# 
  4820     0A1F                     	;# 
  4821     1E0F                     	;# 
  4822     1E10                     	;# 
  4823     1E11                     	;# 
  4824     1E12                     	;# 
  4825     1E13                     	;# 
  4826     1E14                     	;# 
  4827     1E15                     	;# 
  4828     1E16                     	;# 
  4829     1E17                     	;# 
  4830     1E18                     	;# 
  4831     1E19                     	;# 
  4832     1E1A                     	;# 
  4833     1E1B                     	;# 
  4834     1E1C                     	;# 
  4835     1E1D                     	;# 
  4836     1E1E                     	;# 
  4837     1E1F                     	;# 
  4838     1E20                     	;# 
  4839     1E21                     	;# 
  4840     1E22                     	;# 
  4841     1E23                     	;# 
  4842     1E24                     	;# 
  4843     1E25                     	;# 
  4844     1E26                     	;# 
  4845     1E27                     	;# 
  4846     1E28                     	;# 
  4847     1E29                     	;# 
  4848     1E2A                     	;# 
  4849     1E2B                     	;# 
  4850     1E2C                     	;# 
  4851     1E2D                     	;# 
  4852     1E2E                     	;# 
  4853     1E2F                     	;# 
  4854     1E30                     	;# 
  4855     1E31                     	;# 
  4856     1E32                     	;# 
  4857     1E33                     	;# 
  4858     1E34                     	;# 
  4859     1E35                     	;# 
  4860     1E36                     	;# 
  4861     1E37                     	;# 
  4862     1E8F                     	;# 
  4863     1E90                     	;# 
  4864     1E91                     	;# 
  4865     1E92                     	;# 
  4866     1E93                     	;# 
  4867     1E94                     	;# 
  4868     1E95                     	;# 
  4869     1E96                     	;# 
  4870     1E97                     	;# 
  4871     1E9C                     	;# 
  4872     1E9D                     	;# 
  4873     1E9E                     	;# 
  4874     1EA1                     	;# 
  4875     1EA2                     	;# 
  4876     1EA3                     	;# 
  4877     1EA4                     	;# 
  4878     1EA5                     	;# 
  4879     1EA9                     	;# 
  4880     1EAA                     	;# 
  4881     1EAB                     	;# 
  4882     1EAC                     	;# 
  4883     1EB1                     	;# 
  4884     1EB2                     	;# 
  4885     1EB3                     	;# 
  4886     1EB8                     	;# 
  4887     1EB9                     	;# 
  4888     1EBA                     	;# 
  4889     1EBB                     	;# 
  4890     1EBC                     	;# 
  4891     1EBD                     	;# 
  4892     1EBE                     	;# 
  4893     1EC3                     	;# 
  4894     1EC5                     	;# 
  4895     1EC6                     	;# 
  4896     1EC7                     	;# 
  4897     1EC8                     	;# 
  4898     1EC9                     	;# 
  4899     1ECA                     	;# 
  4900     1ECB                     	;# 
  4901     1ECC                     	;# 
  4902     1ECD                     	;# 
  4903     1ECE                     	;# 
  4904     1F10                     	;# 
  4905     1F11                     	;# 
  4906     1F12                     	;# 
  4907     1F13                     	;# 
  4908     1F14                     	;# 
  4909     1F15                     	;# 
  4910     1F16                     	;# 
  4911     1F17                     	;# 
  4912     1F18                     	;# 
  4913     1F19                     	;# 
  4914     1F1A                     	;# 
  4915     1F1B                     	;# 
  4916     1F1C                     	;# 
  4917     1F1D                     	;# 
  4918     1F1E                     	;# 
  4919     1F1F                     	;# 
  4920     1F20                     	;# 
  4921     1F21                     	;# 
  4922     1F22                     	;# 
  4923     1F23                     	;# 
  4924     1F24                     	;# 
  4925     1F25                     	;# 
  4926     1F26                     	;# 
  4927     1F27                     	;# 
  4928     1F38                     	;# 
  4929     1F39                     	;# 
  4930     1F3A                     	;# 
  4931     1F3B                     	;# 
  4932     1F3C                     	;# 
  4933     1F3D                     	;# 
  4934     1F3E                     	;# 
  4935     1F3F                     	;# 
  4936     1F43                     	;# 
  4937     1F44                     	;# 
  4938     1F45                     	;# 
  4939     1F46                     	;# 
  4940     1F47                     	;# 
  4941     1F48                     	;# 
  4942     1F49                     	;# 
  4943     1F4A                     	;# 
  4944     1F4E                     	;# 
  4945     1F4F                     	;# 
  4946     1F50                     	;# 
  4947     1F51                     	;# 
  4948     1F52                     	;# 
  4949     1F53                     	;# 
  4950     1F54                     	;# 
  4951     1F55                     	;# 
  4952     1F65                     	;# 
  4953     1F66                     	;# 
  4954     1F67                     	;# 
  4955     1F68                     	;# 
  4956     1F69                     	;# 
  4957     1F6A                     	;# 
  4958     1F6B                     	;# 
  4959     1FE4                     	;# 
  4960     1FE5                     	;# 
  4961     1FE6                     	;# 
  4962     1FE7                     	;# 
  4963     1FE8                     	;# 
  4964     1FE8                     	;# 
  4965     1FE9                     	;# 
  4966     1FEA                     	;# 
  4967     1FEB                     	;# 
  4968     1FED                     	;# 
  4969     1FEE                     	;# 
  4970     1FEF                     	;# 
  4971     0000                     	;# 
  4972     0001                     	;# 
  4973     0002                     	;# 
  4974     0003                     	;# 
  4975     0004                     	;# 
  4976     0005                     	;# 
  4977     0006                     	;# 
  4978     0007                     	;# 
  4979     0008                     	;# 
  4980     0009                     	;# 
  4981     000A                     	;# 
  4982     000B                     	;# 
  4983     000C                     	;# 
  4984     000D                     	;# 
  4985     000E                     	;# 
  4986     0010                     	;# 
  4987     0012                     	;# 
  4988     0013                     	;# 
  4989     0014                     	;# 
  4990     0016                     	;# 
  4991     0018                     	;# 
  4992     0019                     	;# 
  4993     001A                     	;# 
  4994     001C                     	;# 
  4995     008C                     	;# 
  4996     008C                     	;# 
  4997     008D                     	;# 
  4998     008E                     	;# 
  4999     008E                     	;# 
  5000     008F                     	;# 
  5001     0090                     	;# 
  5002     0090                     	;# 
  5003     0091                     	;# 
  5004     0092                     	;# 
  5005     0092                     	;# 
  5006     0093                     	;# 
  5007     0094                     	;# 
  5008     0094                     	;# 
  5009     0095                     	;# 
  5010     0096                     	;# 
  5011     0096                     	;# 
  5012     0097                     	;# 
  5013     0098                     	;# 
  5014     0099                     	;# 
  5015     009A                     	;# 
  5016     009B                     	;# 
  5017     009B                     	;# 
  5018     009C                     	;# 
  5019     009D                     	;# 
  5020     009D                     	;# 
  5021     009E                     	;# 
  5022     009F                     	;# 
  5023     010C                     	;# 
  5024     010C                     	;# 
  5025     010D                     	;# 
  5026     010E                     	;# 
  5027     010F                     	;# 
  5028     010F                     	;# 
  5029     0110                     	;# 
  5030     0111                     	;# 
  5031     0112                     	;# 
  5032     0113                     	;# 
  5033     0114                     	;# 
  5034     0115                     	;# 
  5035     0116                     	;# 
  5036     0117                     	;# 
  5037     0118                     	;# 
  5038     0119                     	;# 
  5039     0119                     	;# 
  5040     0119                     	;# 
  5041     011A                     	;# 
  5042     011A                     	;# 
  5043     011A                     	;# 
  5044     011B                     	;# 
  5045     011B                     	;# 
  5046     011B                     	;# 
  5047     011B                     	;# 
  5048     011B                     	;# 
  5049     011C                     	;# 
  5050     011C                     	;# 
  5051     011C                     	;# 
  5052     011D                     	;# 
  5053     011D                     	;# 
  5054     011D                     	;# 
  5055     011E                     	;# 
  5056     011E                     	;# 
  5057     011E                     	;# 
  5058     011F                     	;# 
  5059     011F                     	;# 
  5060     011F                     	;# 
  5061     011F                     	;# 
  5062     011F                     	;# 
  5063     018C                     	;# 
  5064     018D                     	;# 
  5065     018E                     	;# 
  5066     018F                     	;# 
  5067     0190                     	;# 
  5068     0191                     	;# 
  5069     0192                     	;# 
  5070     0196                     	;# 
  5071     0197                     	;# 
  5072     0198                     	;# 
  5073     0199                     	;# 
  5074     019A                     	;# 
  5075     019B                     	;# 
  5076     019C                     	;# 
  5077     020C                     	;# 
  5078     020D                     	;# 
  5079     020E                     	;# 
  5080     020E                     	;# 
  5081     020F                     	;# 
  5082     020F                     	;# 
  5083     0210                     	;# 
  5084     0210                     	;# 
  5085     0211                     	;# 
  5086     0211                     	;# 
  5087     0212                     	;# 
  5088     0213                     	;# 
  5089     0214                     	;# 
  5090     0214                     	;# 
  5091     0215                     	;# 
  5092     0215                     	;# 
  5093     0216                     	;# 
  5094     0216                     	;# 
  5095     0217                     	;# 
  5096     0217                     	;# 
  5097     0218                     	;# 
  5098     0219                     	;# 
  5099     021A                     	;# 
  5100     021A                     	;# 
  5101     021B                     	;# 
  5102     021B                     	;# 
  5103     021C                     	;# 
  5104     021C                     	;# 
  5105     021D                     	;# 
  5106     021D                     	;# 
  5107     021E                     	;# 
  5108     021F                     	;# 
  5109     028C                     	;# 
  5110     028C                     	;# 
  5111     028D                     	;# 
  5112     028D                     	;# 
  5113     028E                     	;# 
  5114     028F                     	;# 
  5115     0290                     	;# 
  5116     0291                     	;# 
  5117     0292                     	;# 
  5118     0292                     	;# 
  5119     0293                     	;# 
  5120     0293                     	;# 
  5121     0294                     	;# 
  5122     0295                     	;# 
  5123     0296                     	;# 
  5124     0297                     	;# 
  5125     0298                     	;# 
  5126     0298                     	;# 
  5127     0299                     	;# 
  5128     0299                     	;# 
  5129     029A                     	;# 
  5130     029B                     	;# 
  5131     029C                     	;# 
  5132     029D                     	;# 
  5133     029F                     	;# 
  5134     030C                     	;# 
  5135     030C                     	;# 
  5136     030D                     	;# 
  5137     030E                     	;# 
  5138     030F                     	;# 
  5139     0310                     	;# 
  5140     0310                     	;# 
  5141     0311                     	;# 
  5142     0312                     	;# 
  5143     0313                     	;# 
  5144     0314                     	;# 
  5145     0314                     	;# 
  5146     0315                     	;# 
  5147     0316                     	;# 
  5148     0317                     	;# 
  5149     0318                     	;# 
  5150     0318                     	;# 
  5151     0319                     	;# 
  5152     031A                     	;# 
  5153     031B                     	;# 
  5154     031C                     	;# 
  5155     031C                     	;# 
  5156     031D                     	;# 
  5157     031E                     	;# 
  5158     031F                     	;# 
  5159     038C                     	;# 
  5160     038C                     	;# 
  5161     038D                     	;# 
  5162     038E                     	;# 
  5163     0390                     	;# 
  5164     0390                     	;# 
  5165     0391                     	;# 
  5166     0392                     	;# 
  5167     048C                     	;# 
  5168     048C                     	;# 
  5169     048D                     	;# 
  5170     048E                     	;# 
  5171     048F                     	;# 
  5172     048F                     	;# 
  5173     0490                     	;# 
  5174     0491                     	;# 
  5175     0492                     	;# 
  5176     0492                     	;# 
  5177     0493                     	;# 
  5178     0494                     	;# 
  5179     0495                     	;# 
  5180     0495                     	;# 
  5181     0496                     	;# 
  5182     0497                     	;# 
  5183     0498                     	;# 
  5184     0499                     	;# 
  5185     049A                     	;# 
  5186     049B                     	;# 
  5187     049C                     	;# 
  5188     049D                     	;# 
  5189     050C                     	;# 
  5190     050C                     	;# 
  5191     050D                     	;# 
  5192     050E                     	;# 
  5193     050F                     	;# 
  5194     050F                     	;# 
  5195     0510                     	;# 
  5196     0511                     	;# 
  5197     0512                     	;# 
  5198     0512                     	;# 
  5199     0513                     	;# 
  5200     0514                     	;# 
  5201     0515                     	;# 
  5202     0515                     	;# 
  5203     0516                     	;# 
  5204     0517                     	;# 
  5205     0518                     	;# 
  5206     0519                     	;# 
  5207     051A                     	;# 
  5208     051B                     	;# 
  5209     051C                     	;# 
  5210     051D                     	;# 
  5211     058C                     	;# 
  5212     058C                     	;# 
  5213     058D                     	;# 
  5214     058E                     	;# 
  5215     058F                     	;# 
  5216     058F                     	;# 
  5217     0590                     	;# 
  5218     0591                     	;# 
  5219     0592                     	;# 
  5220     0593                     	;# 
  5221     059C                     	;# 
  5222     059C                     	;# 
  5223     059D                     	;# 
  5224     059D                     	;# 
  5225     059E                     	;# 
  5226     059F                     	;# 
  5227     060C                     	;# 
  5228     060C                     	;# 
  5229     060D                     	;# 
  5230     060D                     	;# 
  5231     060E                     	;# 
  5232     060F                     	;# 
  5233     0610                     	;# 
  5234     0611                     	;# 
  5235     0612                     	;# 
  5236     0613                     	;# 
  5237     0614                     	;# 
  5238     0616                     	;# 
  5239     0616                     	;# 
  5240     0617                     	;# 
  5241     0617                     	;# 
  5242     0618                     	;# 
  5243     0619                     	;# 
  5244     061A                     	;# 
  5245     061B                     	;# 
  5246     061C                     	;# 
  5247     061D                     	;# 
  5248     061E                     	;# 
  5249     068C                     	;# 
  5250     068D                     	;# 
  5251     068E                     	;# 
  5252     068F                     	;# 
  5253     0690                     	;# 
  5254     0691                     	;# 
  5255     0692                     	;# 
  5256     0693                     	;# 
  5257     0694                     	;# 
  5258     070C                     	;# 
  5259     070D                     	;# 
  5260     070E                     	;# 
  5261     070F                     	;# 
  5262     0710                     	;# 
  5263     0711                     	;# 
  5264     0712                     	;# 
  5265     0713                     	;# 
  5266     0714                     	;# 
  5267     0716                     	;# 
  5268     0717                     	;# 
  5269     0718                     	;# 
  5270     0719                     	;# 
  5271     071A                     	;# 
  5272     071B                     	;# 
  5273     071C                     	;# 
  5274     071D                     	;# 
  5275     071E                     	;# 
  5276     0796                     	;# 
  5277     0797                     	;# 
  5278     0798                     	;# 
  5279     0799                     	;# 
  5280     079A                     	;# 
  5281     079B                     	;# 
  5282     079C                     	;# 
  5283     079D                     	;# 
  5284     080C                     	;# 
  5285     080D                     	;# 
  5286     080E                     	;# 
  5287     080F                     	;# 
  5288     0810                     	;# 
  5289     0811                     	;# 
  5290     0813                     	;# 
  5291     0814                     	;# 
  5292     081A                     	;# 
  5293     081A                     	;# 
  5294     081B                     	;# 
  5295     081C                     	;# 
  5296     081C                     	;# 
  5297     081D                     	;# 
  5298     081E                     	;# 
  5299     081F                     	;# 
  5300     088C                     	;# 
  5301     088D                     	;# 
  5302     088E                     	;# 
  5303     088F                     	;# 
  5304     0890                     	;# 
  5305     0891                     	;# 
  5306     0892                     	;# 
  5307     0893                     	;# 
  5308     0895                     	;# 
  5309     0896                     	;# 
  5310     0897                     	;# 
  5311     0898                     	;# 
  5312     0899                     	;# 
  5313     089A                     	;# 
  5314     089B                     	;# 
  5315     090C                     	;# 
  5316     090E                     	;# 
  5317     090F                     	;# 
  5318     091F                     	;# 
  5319     098F                     	;# 
  5320     098F                     	;# 
  5321     0990                     	;# 
  5322     0991                     	;# 
  5323     0992                     	;# 
  5324     0993                     	;# 
  5325     0994                     	;# 
  5326     0995                     	;# 
  5327     0996                     	;# 
  5328     0997                     	;# 
  5329     0A19                     	;# 
  5330     0A19                     	;# 
  5331     0A1A                     	;# 
  5332     0A1A                     	;# 
  5333     0A1B                     	;# 
  5334     0A1B                     	;# 
  5335     0A1B                     	;# 
  5336     0A1C                     	;# 
  5337     0A1C                     	;# 
  5338     0A1D                     	;# 
  5339     0A1D                     	;# 
  5340     0A1E                     	;# 
  5341     0A1E                     	;# 
  5342     0A1F                     	;# 
  5343     0A1F                     	;# 
  5344     0A1F                     	;# 
  5345     1E0F                     	;# 
  5346     1E10                     	;# 
  5347     1E11                     	;# 
  5348     1E12                     	;# 
  5349     1E13                     	;# 
  5350     1E14                     	;# 
  5351     1E15                     	;# 
  5352     1E16                     	;# 
  5353     1E17                     	;# 
  5354     1E18                     	;# 
  5355     1E19                     	;# 
  5356     1E1A                     	;# 
  5357     1E1B                     	;# 
  5358     1E1C                     	;# 
  5359     1E1D                     	;# 
  5360     1E1E                     	;# 
  5361     1E1F                     	;# 
  5362     1E20                     	;# 
  5363     1E21                     	;# 
  5364     1E22                     	;# 
  5365     1E23                     	;# 
  5366     1E24                     	;# 
  5367     1E25                     	;# 
  5368     1E26                     	;# 
  5369     1E27                     	;# 
  5370     1E28                     	;# 
  5371     1E29                     	;# 
  5372     1E2A                     	;# 
  5373     1E2B                     	;# 
  5374     1E2C                     	;# 
  5375     1E2D                     	;# 
  5376     1E2E                     	;# 
  5377     1E2F                     	;# 
  5378     1E30                     	;# 
  5379     1E31                     	;# 
  5380     1E32                     	;# 
  5381     1E33                     	;# 
  5382     1E34                     	;# 
  5383     1E35                     	;# 
  5384     1E36                     	;# 
  5385     1E37                     	;# 
  5386     1E8F                     	;# 
  5387     1E90                     	;# 
  5388     1E91                     	;# 
  5389     1E92                     	;# 
  5390     1E93                     	;# 
  5391     1E94                     	;# 
  5392     1E95                     	;# 
  5393     1E96                     	;# 
  5394     1E97                     	;# 
  5395     1E9C                     	;# 
  5396     1E9D                     	;# 
  5397     1E9E                     	;# 
  5398     1EA1                     	;# 
  5399     1EA2                     	;# 
  5400     1EA3                     	;# 
  5401     1EA4                     	;# 
  5402     1EA5                     	;# 
  5403     1EA9                     	;# 
  5404     1EAA                     	;# 
  5405     1EAB                     	;# 
  5406     1EAC                     	;# 
  5407     1EB1                     	;# 
  5408     1EB2                     	;# 
  5409     1EB3                     	;# 
  5410     1EB8                     	;# 
  5411     1EB9                     	;# 
  5412     1EBA                     	;# 
  5413     1EBB                     	;# 
  5414     1EBC                     	;# 
  5415     1EBD                     	;# 
  5416     1EBE                     	;# 
  5417     1EC3                     	;# 
  5418     1EC5                     	;# 
  5419     1EC6                     	;# 
  5420     1EC7                     	;# 
  5421     1EC8                     	;# 
  5422     1EC9                     	;# 
  5423     1ECA                     	;# 
  5424     1ECB                     	;# 
  5425     1ECC                     	;# 
  5426     1ECD                     	;# 
  5427     1ECE                     	;# 
  5428     1F10                     	;# 
  5429     1F11                     	;# 
  5430     1F12                     	;# 
  5431     1F13                     	;# 
  5432     1F14                     	;# 
  5433     1F15                     	;# 
  5434     1F16                     	;# 
  5435     1F17                     	;# 
  5436     1F18                     	;# 
  5437     1F19                     	;# 
  5438     1F1A                     	;# 
  5439     1F1B                     	;# 
  5440     1F1C                     	;# 
  5441     1F1D                     	;# 
  5442     1F1E                     	;# 
  5443     1F1F                     	;# 
  5444     1F20                     	;# 
  5445     1F21                     	;# 
  5446     1F22                     	;# 
  5447     1F23                     	;# 
  5448     1F24                     	;# 
  5449     1F25                     	;# 
  5450     1F26                     	;# 
  5451     1F27                     	;# 
  5452     1F38                     	;# 
  5453     1F39                     	;# 
  5454     1F3A                     	;# 
  5455     1F3B                     	;# 
  5456     1F3C                     	;# 
  5457     1F3D                     	;# 
  5458     1F3E                     	;# 
  5459     1F3F                     	;# 
  5460     1F43                     	;# 
  5461     1F44                     	;# 
  5462     1F45                     	;# 
  5463     1F46                     	;# 
  5464     1F47                     	;# 
  5465     1F48                     	;# 
  5466     1F49                     	;# 
  5467     1F4A                     	;# 
  5468     1F4E                     	;# 
  5469     1F4F                     	;# 
  5470     1F50                     	;# 
  5471     1F51                     	;# 
  5472     1F52                     	;# 
  5473     1F53                     	;# 
  5474     1F54                     	;# 
  5475     1F55                     	;# 
  5476     1F65                     	;# 
  5477     1F66                     	;# 
  5478     1F67                     	;# 
  5479     1F68                     	;# 
  5480     1F69                     	;# 
  5481     1F6A                     	;# 
  5482     1F6B                     	;# 
  5483     1FE4                     	;# 
  5484     1FE5                     	;# 
  5485     1FE6                     	;# 
  5486     1FE7                     	;# 
  5487     1FE8                     	;# 
  5488     1FE8                     	;# 
  5489     1FE9                     	;# 
  5490     1FEA                     	;# 
  5491     1FEB                     	;# 
  5492     1FED                     	;# 
  5493     1FEE                     	;# 
  5494     1FEF                     	;# 
  5495     0000                     	;# 
  5496     0001                     	;# 
  5497     0002                     	;# 
  5498     0003                     	;# 
  5499     0004                     	;# 
  5500     0005                     	;# 
  5501     0006                     	;# 
  5502     0007                     	;# 
  5503     0008                     	;# 
  5504     0009                     	;# 
  5505     000A                     	;# 
  5506     000B                     	;# 
  5507     000C                     	;# 
  5508     000D                     	;# 
  5509     000E                     	;# 
  5510     0010                     	;# 
  5511     0012                     	;# 
  5512     0013                     	;# 
  5513     0014                     	;# 
  5514     0016                     	;# 
  5515     0018                     	;# 
  5516     0019                     	;# 
  5517     001A                     	;# 
  5518     001C                     	;# 
  5519     008C                     	;# 
  5520     008C                     	;# 
  5521     008D                     	;# 
  5522     008E                     	;# 
  5523     008E                     	;# 
  5524     008F                     	;# 
  5525     0090                     	;# 
  5526     0090                     	;# 
  5527     0091                     	;# 
  5528     0092                     	;# 
  5529     0092                     	;# 
  5530     0093                     	;# 
  5531     0094                     	;# 
  5532     0094                     	;# 
  5533     0095                     	;# 
  5534     0096                     	;# 
  5535     0096                     	;# 
  5536     0097                     	;# 
  5537     0098                     	;# 
  5538     0099                     	;# 
  5539     009A                     	;# 
  5540     009B                     	;# 
  5541     009B                     	;# 
  5542     009C                     	;# 
  5543     009D                     	;# 
  5544     009D                     	;# 
  5545     009E                     	;# 
  5546     009F                     	;# 
  5547     010C                     	;# 
  5548     010C                     	;# 
  5549     010D                     	;# 
  5550     010E                     	;# 
  5551     010F                     	;# 
  5552     010F                     	;# 
  5553     0110                     	;# 
  5554     0111                     	;# 
  5555     0112                     	;# 
  5556     0113                     	;# 
  5557     0114                     	;# 
  5558     0115                     	;# 
  5559     0116                     	;# 
  5560     0117                     	;# 
  5561     0118                     	;# 
  5562     0119                     	;# 
  5563     0119                     	;# 
  5564     0119                     	;# 
  5565     011A                     	;# 
  5566     011A                     	;# 
  5567     011A                     	;# 
  5568     011B                     	;# 
  5569     011B                     	;# 
  5570     011B                     	;# 
  5571     011B                     	;# 
  5572     011B                     	;# 
  5573     011C                     	;# 
  5574     011C                     	;# 
  5575     011C                     	;# 
  5576     011D                     	;# 
  5577     011D                     	;# 
  5578     011D                     	;# 
  5579     011E                     	;# 
  5580     011E                     	;# 
  5581     011E                     	;# 
  5582     011F                     	;# 
  5583     011F                     	;# 
  5584     011F                     	;# 
  5585     011F                     	;# 
  5586     011F                     	;# 
  5587     018C                     	;# 
  5588     018D                     	;# 
  5589     018E                     	;# 
  5590     018F                     	;# 
  5591     0190                     	;# 
  5592     0191                     	;# 
  5593     0192                     	;# 
  5594     0196                     	;# 
  5595     0197                     	;# 
  5596     0198                     	;# 
  5597     0199                     	;# 
  5598     019A                     	;# 
  5599     019B                     	;# 
  5600     019C                     	;# 
  5601     020C                     	;# 
  5602     020D                     	;# 
  5603     020E                     	;# 
  5604     020E                     	;# 
  5605     020F                     	;# 
  5606     020F                     	;# 
  5607     0210                     	;# 
  5608     0210                     	;# 
  5609     0211                     	;# 
  5610     0211                     	;# 
  5611     0212                     	;# 
  5612     0213                     	;# 
  5613     0214                     	;# 
  5614     0214                     	;# 
  5615     0215                     	;# 
  5616     0215                     	;# 
  5617     0216                     	;# 
  5618     0216                     	;# 
  5619     0217                     	;# 
  5620     0217                     	;# 
  5621     0218                     	;# 
  5622     0219                     	;# 
  5623     021A                     	;# 
  5624     021A                     	;# 
  5625     021B                     	;# 
  5626     021B                     	;# 
  5627     021C                     	;# 
  5628     021C                     	;# 
  5629     021D                     	;# 
  5630     021D                     	;# 
  5631     021E                     	;# 
  5632     021F                     	;# 
  5633     028C                     	;# 
  5634     028C                     	;# 
  5635     028D                     	;# 
  5636     028D                     	;# 
  5637     028E                     	;# 
  5638     028F                     	;# 
  5639     0290                     	;# 
  5640     0291                     	;# 
  5641     0292                     	;# 
  5642     0292                     	;# 
  5643     0293                     	;# 
  5644     0293                     	;# 
  5645     0294                     	;# 
  5646     0295                     	;# 
  5647     0296                     	;# 
  5648     0297                     	;# 
  5649     0298                     	;# 
  5650     0298                     	;# 
  5651     0299                     	;# 
  5652     0299                     	;# 
  5653     029A                     	;# 
  5654     029B                     	;# 
  5655     029C                     	;# 
  5656     029D                     	;# 
  5657     029F                     	;# 
  5658     030C                     	;# 
  5659     030C                     	;# 
  5660     030D                     	;# 
  5661     030E                     	;# 
  5662     030F                     	;# 
  5663     0310                     	;# 
  5664     0310                     	;# 
  5665     0311                     	;# 
  5666     0312                     	;# 
  5667     0313                     	;# 
  5668     0314                     	;# 
  5669     0314                     	;# 
  5670     0315                     	;# 
  5671     0316                     	;# 
  5672     0317                     	;# 
  5673     0318                     	;# 
  5674     0318                     	;# 
  5675     0319                     	;# 
  5676     031A                     	;# 
  5677     031B                     	;# 
  5678     031C                     	;# 
  5679     031C                     	;# 
  5680     031D                     	;# 
  5681     031E                     	;# 
  5682     031F                     	;# 
  5683     038C                     	;# 
  5684     038C                     	;# 
  5685     038D                     	;# 
  5686     038E                     	;# 
  5687     0390                     	;# 
  5688     0390                     	;# 
  5689     0391                     	;# 
  5690     0392                     	;# 
  5691     048C                     	;# 
  5692     048C                     	;# 
  5693     048D                     	;# 
  5694     048E                     	;# 
  5695     048F                     	;# 
  5696     048F                     	;# 
  5697     0490                     	;# 
  5698     0491                     	;# 
  5699     0492                     	;# 
  5700     0492                     	;# 
  5701     0493                     	;# 
  5702     0494                     	;# 
  5703     0495                     	;# 
  5704     0495                     	;# 
  5705     0496                     	;# 
  5706     0497                     	;# 
  5707     0498                     	;# 
  5708     0499                     	;# 
  5709     049A                     	;# 
  5710     049B                     	;# 
  5711     049C                     	;# 
  5712     049D                     	;# 
  5713     050C                     	;# 
  5714     050C                     	;# 
  5715     050D                     	;# 
  5716     050E                     	;# 
  5717     050F                     	;# 
  5718     050F                     	;# 
  5719     0510                     	;# 
  5720     0511                     	;# 
  5721     0512                     	;# 
  5722     0512                     	;# 
  5723     0513                     	;# 
  5724     0514                     	;# 
  5725     0515                     	;# 
  5726     0515                     	;# 
  5727     0516                     	;# 
  5728     0517                     	;# 
  5729     0518                     	;# 
  5730     0519                     	;# 
  5731     051A                     	;# 
  5732     051B                     	;# 
  5733     051C                     	;# 
  5734     051D                     	;# 
  5735     058C                     	;# 
  5736     058C                     	;# 
  5737     058D                     	;# 
  5738     058E                     	;# 
  5739     058F                     	;# 
  5740     058F                     	;# 
  5741     0590                     	;# 
  5742     0591                     	;# 
  5743     0592                     	;# 
  5744     0593                     	;# 
  5745     059C                     	;# 
  5746     059C                     	;# 
  5747     059D                     	;# 
  5748     059D                     	;# 
  5749     059E                     	;# 
  5750     059F                     	;# 
  5751     060C                     	;# 
  5752     060C                     	;# 
  5753     060D                     	;# 
  5754     060D                     	;# 
  5755     060E                     	;# 
  5756     060F                     	;# 
  5757     0610                     	;# 
  5758     0611                     	;# 
  5759     0612                     	;# 
  5760     0613                     	;# 
  5761     0614                     	;# 
  5762     0616                     	;# 
  5763     0616                     	;# 
  5764     0617                     	;# 
  5765     0617                     	;# 
  5766     0618                     	;# 
  5767     0619                     	;# 
  5768     061A                     	;# 
  5769     061B                     	;# 
  5770     061C                     	;# 
  5771     061D                     	;# 
  5772     061E                     	;# 
  5773     068C                     	;# 
  5774     068D                     	;# 
  5775     068E                     	;# 
  5776     068F                     	;# 
  5777     0690                     	;# 
  5778     0691                     	;# 
  5779     0692                     	;# 
  5780     0693                     	;# 
  5781     0694                     	;# 
  5782     070C                     	;# 
  5783     070D                     	;# 
  5784     070E                     	;# 
  5785     070F                     	;# 
  5786     0710                     	;# 
  5787     0711                     	;# 
  5788     0712                     	;# 
  5789     0713                     	;# 
  5790     0714                     	;# 
  5791     0716                     	;# 
  5792     0717                     	;# 
  5793     0718                     	;# 
  5794     0719                     	;# 
  5795     071A                     	;# 
  5796     071B                     	;# 
  5797     071C                     	;# 
  5798     071D                     	;# 
  5799     071E                     	;# 
  5800     0796                     	;# 
  5801     0797                     	;# 
  5802     0798                     	;# 
  5803     0799                     	;# 
  5804     079A                     	;# 
  5805     079B                     	;# 
  5806     079C                     	;# 
  5807     079D                     	;# 
  5808     080C                     	;# 
  5809     080D                     	;# 
  5810     080E                     	;# 
  5811     080F                     	;# 
  5812     0810                     	;# 
  5813     0811                     	;# 
  5814     0813                     	;# 
  5815     0814                     	;# 
  5816     081A                     	;# 
  5817     081A                     	;# 
  5818     081B                     	;# 
  5819     081C                     	;# 
  5820     081C                     	;# 
  5821     081D                     	;# 
  5822     081E                     	;# 
  5823     081F                     	;# 
  5824     088C                     	;# 
  5825     088D                     	;# 
  5826     088E                     	;# 
  5827     088F                     	;# 
  5828     0890                     	;# 
  5829     0891                     	;# 
  5830     0892                     	;# 
  5831     0893                     	;# 
  5832     0895                     	;# 
  5833     0896                     	;# 
  5834     0897                     	;# 
  5835     0898                     	;# 
  5836     0899                     	;# 
  5837     089A                     	;# 
  5838     089B                     	;# 
  5839     090C                     	;# 
  5840     090E                     	;# 
  5841     090F                     	;# 
  5842     091F                     	;# 
  5843     098F                     	;# 
  5844     098F                     	;# 
  5845     0990                     	;# 
  5846     0991                     	;# 
  5847     0992                     	;# 
  5848     0993                     	;# 
  5849     0994                     	;# 
  5850     0995                     	;# 
  5851     0996                     	;# 
  5852     0997                     	;# 
  5853     0A19                     	;# 
  5854     0A19                     	;# 
  5855     0A1A                     	;# 
  5856     0A1A                     	;# 
  5857     0A1B                     	;# 
  5858     0A1B                     	;# 
  5859     0A1B                     	;# 
  5860     0A1C                     	;# 
  5861     0A1C                     	;# 
  5862     0A1D                     	;# 
  5863     0A1D                     	;# 
  5864     0A1E                     	;# 
  5865     0A1E                     	;# 
  5866     0A1F                     	;# 
  5867     0A1F                     	;# 
  5868     0A1F                     	;# 
  5869     1E0F                     	;# 
  5870     1E10                     	;# 
  5871     1E11                     	;# 
  5872     1E12                     	;# 
  5873     1E13                     	;# 
  5874     1E14                     	;# 
  5875     1E15                     	;# 
  5876     1E16                     	;# 
  5877     1E17                     	;# 
  5878     1E18                     	;# 
  5879     1E19                     	;# 
  5880     1E1A                     	;# 
  5881     1E1B                     	;# 
  5882     1E1C                     	;# 
  5883     1E1D                     	;# 
  5884     1E1E                     	;# 
  5885     1E1F                     	;# 
  5886     1E20                     	;# 
  5887     1E21                     	;# 
  5888     1E22                     	;# 
  5889     1E23                     	;# 
  5890     1E24                     	;# 
  5891     1E25                     	;# 
  5892     1E26                     	;# 
  5893     1E27                     	;# 
  5894     1E28                     	;# 
  5895     1E29                     	;# 
  5896     1E2A                     	;# 
  5897     1E2B                     	;# 
  5898     1E2C                     	;# 
  5899     1E2D                     	;# 
  5900     1E2E                     	;# 
  5901     1E2F                     	;# 
  5902     1E30                     	;# 
  5903     1E31                     	;# 
  5904     1E32                     	;# 
  5905     1E33                     	;# 
  5906     1E34                     	;# 
  5907     1E35                     	;# 
  5908     1E36                     	;# 
  5909     1E37                     	;# 
  5910     1E8F                     	;# 
  5911     1E90                     	;# 
  5912     1E91                     	;# 
  5913     1E92                     	;# 
  5914     1E93                     	;# 
  5915     1E94                     	;# 
  5916     1E95                     	;# 
  5917     1E96                     	;# 
  5918     1E97                     	;# 
  5919     1E9C                     	;# 
  5920     1E9D                     	;# 
  5921     1E9E                     	;# 
  5922     1EA1                     	;# 
  5923     1EA2                     	;# 
  5924     1EA3                     	;# 
  5925     1EA4                     	;# 
  5926     1EA5                     	;# 
  5927     1EA9                     	;# 
  5928     1EAA                     	;# 
  5929     1EAB                     	;# 
  5930     1EAC                     	;# 
  5931     1EB1                     	;# 
  5932     1EB2                     	;# 
  5933     1EB3                     	;# 
  5934     1EB8                     	;# 
  5935     1EB9                     	;# 
  5936     1EBA                     	;# 
  5937     1EBB                     	;# 
  5938     1EBC                     	;# 
  5939     1EBD                     	;# 
  5940     1EBE                     	;# 
  5941     1EC3                     	;# 
  5942     1EC5                     	;# 
  5943     1EC6                     	;# 
  5944     1EC7                     	;# 
  5945     1EC8                     	;# 
  5946     1EC9                     	;# 
  5947     1ECA                     	;# 
  5948     1ECB                     	;# 
  5949     1ECC                     	;# 
  5950     1ECD                     	;# 
  5951     1ECE                     	;# 
  5952     1F10                     	;# 
  5953     1F11                     	;# 
  5954     1F12                     	;# 
  5955     1F13                     	;# 
  5956     1F14                     	;# 
  5957     1F15                     	;# 
  5958     1F16                     	;# 
  5959     1F17                     	;# 
  5960     1F18                     	;# 
  5961     1F19                     	;# 
  5962     1F1A                     	;# 
  5963     1F1B                     	;# 
  5964     1F1C                     	;# 
  5965     1F1D                     	;# 
  5966     1F1E                     	;# 
  5967     1F1F                     	;# 
  5968     1F20                     	;# 
  5969     1F21                     	;# 
  5970     1F22                     	;# 
  5971     1F23                     	;# 
  5972     1F24                     	;# 
  5973     1F25                     	;# 
  5974     1F26                     	;# 
  5975     1F27                     	;# 
  5976     1F38                     	;# 
  5977     1F39                     	;# 
  5978     1F3A                     	;# 
  5979     1F3B                     	;# 
  5980     1F3C                     	;# 
  5981     1F3D                     	;# 
  5982     1F3E                     	;# 
  5983     1F3F                     	;# 
  5984     1F43                     	;# 
  5985     1F44                     	;# 
  5986     1F45                     	;# 
  5987     1F46                     	;# 
  5988     1F47                     	;# 
  5989     1F48                     	;# 
  5990     1F49                     	;# 
  5991     1F4A                     	;# 
  5992     1F4E                     	;# 
  5993     1F4F                     	;# 
  5994     1F50                     	;# 
  5995     1F51                     	;# 
  5996     1F52                     	;# 
  5997     1F53                     	;# 
  5998     1F54                     	;# 
  5999     1F55                     	;# 
  6000     1F65                     	;# 
  6001     1F66                     	;# 
  6002     1F67                     	;# 
  6003     1F68                     	;# 
  6004     1F69                     	;# 
  6005     1F6A                     	;# 
  6006     1F6B                     	;# 
  6007     1FE4                     	;# 
  6008     1FE5                     	;# 
  6009     1FE6                     	;# 
  6010     1FE7                     	;# 
  6011     1FE8                     	;# 
  6012     1FE8                     	;# 
  6013     1FE9                     	;# 
  6014     1FEA                     	;# 
  6015     1FEB                     	;# 
  6016     1FED                     	;# 
  6017     1FEE                     	;# 
  6018     1FEF                     	;# 
  6019     0000                     	;# 
  6020     0001                     	;# 
  6021     0002                     	;# 
  6022     0003                     	;# 
  6023     0004                     	;# 
  6024     0005                     	;# 
  6025     0006                     	;# 
  6026     0007                     	;# 
  6027     0008                     	;# 
  6028     0009                     	;# 
  6029     000A                     	;# 
  6030     000B                     	;# 
  6031     000C                     	;# 
  6032     000D                     	;# 
  6033     000E                     	;# 
  6034     0010                     	;# 
  6035     0012                     	;# 
  6036     0013                     	;# 
  6037     0014                     	;# 
  6038     0016                     	;# 
  6039     0018                     	;# 
  6040     0019                     	;# 
  6041     001A                     	;# 
  6042     001C                     	;# 
  6043     008C                     	;# 
  6044     008C                     	;# 
  6045     008D                     	;# 
  6046     008E                     	;# 
  6047     008E                     	;# 
  6048     008F                     	;# 
  6049     0090                     	;# 
  6050     0090                     	;# 
  6051     0091                     	;# 
  6052     0092                     	;# 
  6053     0092                     	;# 
  6054     0093                     	;# 
  6055     0094                     	;# 
  6056     0094                     	;# 
  6057     0095                     	;# 
  6058     0096                     	;# 
  6059     0096                     	;# 
  6060     0097                     	;# 
  6061     0098                     	;# 
  6062     0099                     	;# 
  6063     009A                     	;# 
  6064     009B                     	;# 
  6065     009B                     	;# 
  6066     009C                     	;# 
  6067     009D                     	;# 
  6068     009D                     	;# 
  6069     009E                     	;# 
  6070     009F                     	;# 
  6071     010C                     	;# 
  6072     010C                     	;# 
  6073     010D                     	;# 
  6074     010E                     	;# 
  6075     010F                     	;# 
  6076     010F                     	;# 
  6077     0110                     	;# 
  6078     0111                     	;# 
  6079     0112                     	;# 
  6080     0113                     	;# 
  6081     0114                     	;# 
  6082     0115                     	;# 
  6083     0116                     	;# 
  6084     0117                     	;# 
  6085     0118                     	;# 
  6086     0119                     	;# 
  6087     0119                     	;# 
  6088     0119                     	;# 
  6089     011A                     	;# 
  6090     011A                     	;# 
  6091     011A                     	;# 
  6092     011B                     	;# 
  6093     011B                     	;# 
  6094     011B                     	;# 
  6095     011B                     	;# 
  6096     011B                     	;# 
  6097     011C                     	;# 
  6098     011C                     	;# 
  6099     011C                     	;# 
  6100     011D                     	;# 
  6101     011D                     	;# 
  6102     011D                     	;# 
  6103     011E                     	;# 
  6104     011E                     	;# 
  6105     011E                     	;# 
  6106     011F                     	;# 
  6107     011F                     	;# 
  6108     011F                     	;# 
  6109     011F                     	;# 
  6110     011F                     	;# 
  6111     018C                     	;# 
  6112     018D                     	;# 
  6113     018E                     	;# 
  6114     018F                     	;# 
  6115     0190                     	;# 
  6116     0191                     	;# 
  6117     0192                     	;# 
  6118     0196                     	;# 
  6119     0197                     	;# 
  6120     0198                     	;# 
  6121     0199                     	;# 
  6122     019A                     	;# 
  6123     019B                     	;# 
  6124     019C                     	;# 
  6125     020C                     	;# 
  6126     020D                     	;# 
  6127     020E                     	;# 
  6128     020E                     	;# 
  6129     020F                     	;# 
  6130     020F                     	;# 
  6131     0210                     	;# 
  6132     0210                     	;# 
  6133     0211                     	;# 
  6134     0211                     	;# 
  6135     0212                     	;# 
  6136     0213                     	;# 
  6137     0214                     	;# 
  6138     0214                     	;# 
  6139     0215                     	;# 
  6140     0215                     	;# 
  6141     0216                     	;# 
  6142     0216                     	;# 
  6143     0217                     	;# 
  6144     0217                     	;# 
  6145     0218                     	;# 
  6146     0219                     	;# 
  6147     021A                     	;# 
  6148     021A                     	;# 
  6149     021B                     	;# 
  6150     021B                     	;# 
  6151     021C                     	;# 
  6152     021C                     	;# 
  6153     021D                     	;# 
  6154     021D                     	;# 
  6155     021E                     	;# 
  6156     021F                     	;# 
  6157     028C                     	;# 
  6158     028C                     	;# 
  6159     028D                     	;# 
  6160     028D                     	;# 
  6161     028E                     	;# 
  6162     028F                     	;# 
  6163     0290                     	;# 
  6164     0291                     	;# 
  6165     0292                     	;# 
  6166     0292                     	;# 
  6167     0293                     	;# 
  6168     0293                     	;# 
  6169     0294                     	;# 
  6170     0295                     	;# 
  6171     0296                     	;# 
  6172     0297                     	;# 
  6173     0298                     	;# 
  6174     0298                     	;# 
  6175     0299                     	;# 
  6176     0299                     	;# 
  6177     029A                     	;# 
  6178     029B                     	;# 
  6179     029C                     	;# 
  6180     029D                     	;# 
  6181     029F                     	;# 
  6182     030C                     	;# 
  6183     030C                     	;# 
  6184     030D                     	;# 
  6185     030E                     	;# 
  6186     030F                     	;# 
  6187     0310                     	;# 
  6188     0310                     	;# 
  6189     0311                     	;# 
  6190     0312                     	;# 
  6191     0313                     	;# 
  6192     0314                     	;# 
  6193     0314                     	;# 
  6194     0315                     	;# 
  6195     0316                     	;# 
  6196     0317                     	;# 
  6197     0318                     	;# 
  6198     0318                     	;# 
  6199     0319                     	;# 
  6200     031A                     	;# 
  6201     031B                     	;# 
  6202     031C                     	;# 
  6203     031C                     	;# 
  6204     031D                     	;# 
  6205     031E                     	;# 
  6206     031F                     	;# 
  6207     038C                     	;# 
  6208     038C                     	;# 
  6209     038D                     	;# 
  6210     038E                     	;# 
  6211     0390                     	;# 
  6212     0390                     	;# 
  6213     0391                     	;# 
  6214     0392                     	;# 
  6215     048C                     	;# 
  6216     048C                     	;# 
  6217     048D                     	;# 
  6218     048E                     	;# 
  6219     048F                     	;# 
  6220     048F                     	;# 
  6221     0490                     	;# 
  6222     0491                     	;# 
  6223     0492                     	;# 
  6224     0492                     	;# 
  6225     0493                     	;# 
  6226     0494                     	;# 
  6227     0495                     	;# 
  6228     0495                     	;# 
  6229     0496                     	;# 
  6230     0497                     	;# 
  6231     0498                     	;# 
  6232     0499                     	;# 
  6233     049A                     	;# 
  6234     049B                     	;# 
  6235     049C                     	;# 
  6236     049D                     	;# 
  6237     050C                     	;# 
  6238     050C                     	;# 
  6239     050D                     	;# 
  6240     050E                     	;# 
  6241     050F                     	;# 
  6242     050F                     	;# 
  6243     0510                     	;# 
  6244     0511                     	;# 
  6245     0512                     	;# 
  6246     0512                     	;# 
  6247     0513                     	;# 
  6248     0514                     	;# 
  6249     0515                     	;# 
  6250     0515                     	;# 
  6251     0516                     	;# 
  6252     0517                     	;# 
  6253     0518                     	;# 
  6254     0519                     	;# 
  6255     051A                     	;# 
  6256     051B                     	;# 
  6257     051C                     	;# 
  6258     051D                     	;# 
  6259     058C                     	;# 
  6260     058C                     	;# 
  6261     058D                     	;# 
  6262     058E                     	;# 
  6263     058F                     	;# 
  6264     058F                     	;# 
  6265     0590                     	;# 
  6266     0591                     	;# 
  6267     0592                     	;# 
  6268     0593                     	;# 
  6269     059C                     	;# 
  6270     059C                     	;# 
  6271     059D                     	;# 
  6272     059D                     	;# 
  6273     059E                     	;# 
  6274     059F                     	;# 
  6275     060C                     	;# 
  6276     060C                     	;# 
  6277     060D                     	;# 
  6278     060D                     	;# 
  6279     060E                     	;# 
  6280     060F                     	;# 
  6281     0610                     	;# 
  6282     0611                     	;# 
  6283     0612                     	;# 
  6284     0613                     	;# 
  6285     0614                     	;# 
  6286     0616                     	;# 
  6287     0616                     	;# 
  6288     0617                     	;# 
  6289     0617                     	;# 
  6290     0618                     	;# 
  6291     0619                     	;# 
  6292     061A                     	;# 
  6293     061B                     	;# 
  6294     061C                     	;# 
  6295     061D                     	;# 
  6296     061E                     	;# 
  6297     068C                     	;# 
  6298     068D                     	;# 
  6299     068E                     	;# 
  6300     068F                     	;# 
  6301     0690                     	;# 
  6302     0691                     	;# 
  6303     0692                     	;# 
  6304     0693                     	;# 
  6305     0694                     	;# 
  6306     070C                     	;# 
  6307     070D                     	;# 
  6308     070E                     	;# 
  6309     070F                     	;# 
  6310     0710                     	;# 
  6311     0711                     	;# 
  6312     0712                     	;# 
  6313     0713                     	;# 
  6314     0714                     	;# 
  6315     0716                     	;# 
  6316     0717                     	;# 
  6317     0718                     	;# 
  6318     0719                     	;# 
  6319     071A                     	;# 
  6320     071B                     	;# 
  6321     071C                     	;# 
  6322     071D                     	;# 
  6323     071E                     	;# 
  6324     0796                     	;# 
  6325     0797                     	;# 
  6326     0798                     	;# 
  6327     0799                     	;# 
  6328     079A                     	;# 
  6329     079B                     	;# 
  6330     079C                     	;# 
  6331     079D                     	;# 
  6332     080C                     	;# 
  6333     080D                     	;# 
  6334     080E                     	;# 
  6335     080F                     	;# 
  6336     0810                     	;# 
  6337     0811                     	;# 
  6338     0813                     	;# 
  6339     0814                     	;# 
  6340     081A                     	;# 
  6341     081A                     	;# 
  6342     081B                     	;# 
  6343     081C                     	;# 
  6344     081C                     	;# 
  6345     081D                     	;# 
  6346     081E                     	;# 
  6347     081F                     	;# 
  6348     088C                     	;# 
  6349     088D                     	;# 
  6350     088E                     	;# 
  6351     088F                     	;# 
  6352     0890                     	;# 
  6353     0891                     	;# 
  6354     0892                     	;# 
  6355     0893                     	;# 
  6356     0895                     	;# 
  6357     0896                     	;# 
  6358     0897                     	;# 
  6359     0898                     	;# 
  6360     0899                     	;# 
  6361     089A                     	;# 
  6362     089B                     	;# 
  6363     090C                     	;# 
  6364     090E                     	;# 
  6365     090F                     	;# 
  6366     091F                     	;# 
  6367     098F                     	;# 
  6368     098F                     	;# 
  6369     0990                     	;# 
  6370     0991                     	;# 
  6371     0992                     	;# 
  6372     0993                     	;# 
  6373     0994                     	;# 
  6374     0995                     	;# 
  6375     0996                     	;# 
  6376     0997                     	;# 
  6377     0A19                     	;# 
  6378     0A19                     	;# 
  6379     0A1A                     	;# 
  6380     0A1A                     	;# 
  6381     0A1B                     	;# 
  6382     0A1B                     	;# 
  6383     0A1B                     	;# 
  6384     0A1C                     	;# 
  6385     0A1C                     	;# 
  6386     0A1D                     	;# 
  6387     0A1D                     	;# 
  6388     0A1E                     	;# 
  6389     0A1E                     	;# 
  6390     0A1F                     	;# 
  6391     0A1F                     	;# 
  6392     0A1F                     	;# 
  6393     1E0F                     	;# 
  6394     1E10                     	;# 
  6395     1E11                     	;# 
  6396     1E12                     	;# 
  6397     1E13                     	;# 
  6398     1E14                     	;# 
  6399     1E15                     	;# 
  6400     1E16                     	;# 
  6401     1E17                     	;# 
  6402     1E18                     	;# 
  6403     1E19                     	;# 
  6404     1E1A                     	;# 
  6405     1E1B                     	;# 
  6406     1E1C                     	;# 
  6407     1E1D                     	;# 
  6408     1E1E                     	;# 
  6409     1E1F                     	;# 
  6410     1E20                     	;# 
  6411     1E21                     	;# 
  6412     1E22                     	;# 
  6413     1E23                     	;# 
  6414     1E24                     	;# 
  6415     1E25                     	;# 
  6416     1E26                     	;# 
  6417     1E27                     	;# 
  6418     1E28                     	;# 
  6419     1E29                     	;# 
  6420     1E2A                     	;# 
  6421     1E2B                     	;# 
  6422     1E2C                     	;# 
  6423     1E2D                     	;# 
  6424     1E2E                     	;# 
  6425     1E2F                     	;# 
  6426     1E30                     	;# 
  6427     1E31                     	;# 
  6428     1E32                     	;# 
  6429     1E33                     	;# 
  6430     1E34                     	;# 
  6431     1E35                     	;# 
  6432     1E36                     	;# 
  6433     1E37                     	;# 
  6434     1E8F                     	;# 
  6435     1E90                     	;# 
  6436     1E91                     	;# 
  6437     1E92                     	;# 
  6438     1E93                     	;# 
  6439     1E94                     	;# 
  6440     1E95                     	;# 
  6441     1E96                     	;# 
  6442     1E97                     	;# 
  6443     1E9C                     	;# 
  6444     1E9D                     	;# 
  6445     1E9E                     	;# 
  6446     1EA1                     	;# 
  6447     1EA2                     	;# 
  6448     1EA3                     	;# 
  6449     1EA4                     	;# 
  6450     1EA5                     	;# 
  6451     1EA9                     	;# 
  6452     1EAA                     	;# 
  6453     1EAB                     	;# 
  6454     1EAC                     	;# 
  6455     1EB1                     	;# 
  6456     1EB2                     	;# 
  6457     1EB3                     	;# 
  6458     1EB8                     	;# 
  6459     1EB9                     	;# 
  6460     1EBA                     	;# 
  6461     1EBB                     	;# 
  6462     1EBC                     	;# 
  6463     1EBD                     	;# 
  6464     1EBE                     	;# 
  6465     1EC3                     	;# 
  6466     1EC5                     	;# 
  6467     1EC6                     	;# 
  6468     1EC7                     	;# 
  6469     1EC8                     	;# 
  6470     1EC9                     	;# 
  6471     1ECA                     	;# 
  6472     1ECB                     	;# 
  6473     1ECC                     	;# 
  6474     1ECD                     	;# 
  6475     1ECE                     	;# 
  6476     1F10                     	;# 
  6477     1F11                     	;# 
  6478     1F12                     	;# 
  6479     1F13                     	;# 
  6480     1F14                     	;# 
  6481     1F15                     	;# 
  6482     1F16                     	;# 
  6483     1F17                     	;# 
  6484     1F18                     	;# 
  6485     1F19                     	;# 
  6486     1F1A                     	;# 
  6487     1F1B                     	;# 
  6488     1F1C                     	;# 
  6489     1F1D                     	;# 
  6490     1F1E                     	;# 
  6491     1F1F                     	;# 
  6492     1F20                     	;# 
  6493     1F21                     	;# 
  6494     1F22                     	;# 
  6495     1F23                     	;# 
  6496     1F24                     	;# 
  6497     1F25                     	;# 
  6498     1F26                     	;# 
  6499     1F27                     	;# 
  6500     1F38                     	;# 
  6501     1F39                     	;# 
  6502     1F3A                     	;# 
  6503     1F3B                     	;# 
  6504     1F3C                     	;# 
  6505     1F3D                     	;# 
  6506     1F3E                     	;# 
  6507     1F3F                     	;# 
  6508     1F43                     	;# 
  6509     1F44                     	;# 
  6510     1F45                     	;# 
  6511     1F46                     	;# 
  6512     1F47                     	;# 
  6513     1F48                     	;# 
  6514     1F49                     	;# 
  6515     1F4A                     	;# 
  6516     1F4E                     	;# 
  6517     1F4F                     	;# 
  6518     1F50                     	;# 
  6519     1F51                     	;# 
  6520     1F52                     	;# 
  6521     1F53                     	;# 
  6522     1F54                     	;# 
  6523     1F55                     	;# 
  6524     1F65                     	;# 
  6525     1F66                     	;# 
  6526     1F67                     	;# 
  6527     1F68                     	;# 
  6528     1F69                     	;# 
  6529     1F6A                     	;# 
  6530     1F6B                     	;# 
  6531     1FE4                     	;# 
  6532     1FE5                     	;# 
  6533     1FE6                     	;# 
  6534     1FE7                     	;# 
  6535     1FE8                     	;# 
  6536     1FE8                     	;# 
  6537     1FE9                     	;# 
  6538     1FEA                     	;# 
  6539     1FEB                     	;# 
  6540     1FED                     	;# 
  6541     1FEE                     	;# 
  6542     1FEF                     	;# 
  6543     0000                     	;# 
  6544     0001                     	;# 
  6545     0002                     	;# 
  6546     0003                     	;# 
  6547     0004                     	;# 
  6548     0005                     	;# 
  6549     0006                     	;# 
  6550     0007                     	;# 
  6551     0008                     	;# 
  6552     0009                     	;# 
  6553     000A                     	;# 
  6554     000B                     	;# 
  6555     000C                     	;# 
  6556     000D                     	;# 
  6557     000E                     	;# 
  6558     0010                     	;# 
  6559     0012                     	;# 
  6560     0013                     	;# 
  6561     0014                     	;# 
  6562     0016                     	;# 
  6563     0018                     	;# 
  6564     0019                     	;# 
  6565     001A                     	;# 
  6566     001C                     	;# 
  6567     008C                     	;# 
  6568     008C                     	;# 
  6569     008D                     	;# 
  6570     008E                     	;# 
  6571     008E                     	;# 
  6572     008F                     	;# 
  6573     0090                     	;# 
  6574     0090                     	;# 
  6575     0091                     	;# 
  6576     0092                     	;# 
  6577     0092                     	;# 
  6578     0093                     	;# 
  6579     0094                     	;# 
  6580     0094                     	;# 
  6581     0095                     	;# 
  6582     0096                     	;# 
  6583     0096                     	;# 
  6584     0097                     	;# 
  6585     0098                     	;# 
  6586     0099                     	;# 
  6587     009A                     	;# 
  6588     009B                     	;# 
  6589     009B                     	;# 
  6590     009C                     	;# 
  6591     009D                     	;# 
  6592     009D                     	;# 
  6593     009E                     	;# 
  6594     009F                     	;# 
  6595     010C                     	;# 
  6596     010C                     	;# 
  6597     010D                     	;# 
  6598     010E                     	;# 
  6599     010F                     	;# 
  6600     010F                     	;# 
  6601     0110                     	;# 
  6602     0111                     	;# 
  6603     0112                     	;# 
  6604     0113                     	;# 
  6605     0114                     	;# 
  6606     0115                     	;# 
  6607     0116                     	;# 
  6608     0117                     	;# 
  6609     0118                     	;# 
  6610     0119                     	;# 
  6611     0119                     	;# 
  6612     0119                     	;# 
  6613     011A                     	;# 
  6614     011A                     	;# 
  6615     011A                     	;# 
  6616     011B                     	;# 
  6617     011B                     	;# 
  6618     011B                     	;# 
  6619     011B                     	;# 
  6620     011B                     	;# 
  6621     011C                     	;# 
  6622     011C                     	;# 
  6623     011C                     	;# 
  6624     011D                     	;# 
  6625     011D                     	;# 
  6626     011D                     	;# 
  6627     011E                     	;# 
  6628     011E                     	;# 
  6629     011E                     	;# 
  6630     011F                     	;# 
  6631     011F                     	;# 
  6632     011F                     	;# 
  6633     011F                     	;# 
  6634     011F                     	;# 
  6635     018C                     	;# 
  6636     018D                     	;# 
  6637     018E                     	;# 
  6638     018F                     	;# 
  6639     0190                     	;# 
  6640     0191                     	;# 
  6641     0192                     	;# 
  6642     0196                     	;# 
  6643     0197                     	;# 
  6644     0198                     	;# 
  6645     0199                     	;# 
  6646     019A                     	;# 
  6647     019B                     	;# 
  6648     019C                     	;# 
  6649     020C                     	;# 
  6650     020D                     	;# 
  6651     020E                     	;# 
  6652     020E                     	;# 
  6653     020F                     	;# 
  6654     020F                     	;# 
  6655     0210                     	;# 
  6656     0210                     	;# 
  6657     0211                     	;# 
  6658     0211                     	;# 
  6659     0212                     	;# 
  6660     0213                     	;# 
  6661     0214                     	;# 
  6662     0214                     	;# 
  6663     0215                     	;# 
  6664     0215                     	;# 
  6665     0216                     	;# 
  6666     0216                     	;# 
  6667     0217                     	;# 
  6668     0217                     	;# 
  6669     0218                     	;# 
  6670     0219                     	;# 
  6671     021A                     	;# 
  6672     021A                     	;# 
  6673     021B                     	;# 
  6674     021B                     	;# 
  6675     021C                     	;# 
  6676     021C                     	;# 
  6677     021D                     	;# 
  6678     021D                     	;# 
  6679     021E                     	;# 
  6680     021F                     	;# 
  6681     028C                     	;# 
  6682     028C                     	;# 
  6683     028D                     	;# 
  6684     028D                     	;# 
  6685     028E                     	;# 
  6686     028F                     	;# 
  6687     0290                     	;# 
  6688     0291                     	;# 
  6689     0292                     	;# 
  6690     0292                     	;# 
  6691     0293                     	;# 
  6692     0293                     	;# 
  6693     0294                     	;# 
  6694     0295                     	;# 
  6695     0296                     	;# 
  6696     0297                     	;# 
  6697     0298                     	;# 
  6698     0298                     	;# 
  6699     0299                     	;# 
  6700     0299                     	;# 
  6701     029A                     	;# 
  6702     029B                     	;# 
  6703     029C                     	;# 
  6704     029D                     	;# 
  6705     029F                     	;# 
  6706     030C                     	;# 
  6707     030C                     	;# 
  6708     030D                     	;# 
  6709     030E                     	;# 
  6710     030F                     	;# 
  6711     0310                     	;# 
  6712     0310                     	;# 
  6713     0311                     	;# 
  6714     0312                     	;# 
  6715     0313                     	;# 
  6716     0314                     	;# 
  6717     0314                     	;# 
  6718     0315                     	;# 
  6719     0316                     	;# 
  6720     0317                     	;# 
  6721     0318                     	;# 
  6722     0318                     	;# 
  6723     0319                     	;# 
  6724     031A                     	;# 
  6725     031B                     	;# 
  6726     031C                     	;# 
  6727     031C                     	;# 
  6728     031D                     	;# 
  6729     031E                     	;# 
  6730     031F                     	;# 
  6731     038C                     	;# 
  6732     038C                     	;# 
  6733     038D                     	;# 
  6734     038E                     	;# 
  6735     0390                     	;# 
  6736     0390                     	;# 
  6737     0391                     	;# 
  6738     0392                     	;# 
  6739     048C                     	;# 
  6740     048C                     	;# 
  6741     048D                     	;# 
  6742     048E                     	;# 
  6743     048F                     	;# 
  6744     048F                     	;# 
  6745     0490                     	;# 
  6746     0491                     	;# 
  6747     0492                     	;# 
  6748     0492                     	;# 
  6749     0493                     	;# 
  6750     0494                     	;# 
  6751     0495                     	;# 
  6752     0495                     	;# 
  6753     0496                     	;# 
  6754     0497                     	;# 
  6755     0498                     	;# 
  6756     0499                     	;# 
  6757     049A                     	;# 
  6758     049B                     	;# 
  6759     049C                     	;# 
  6760     049D                     	;# 
  6761     050C                     	;# 
  6762     050C                     	;# 
  6763     050D                     	;# 
  6764     050E                     	;# 
  6765     050F                     	;# 
  6766     050F                     	;# 
  6767     0510                     	;# 
  6768     0511                     	;# 
  6769     0512                     	;# 
  6770     0512                     	;# 
  6771     0513                     	;# 
  6772     0514                     	;# 
  6773     0515                     	;# 
  6774     0515                     	;# 
  6775     0516                     	;# 
  6776     0517                     	;# 
  6777     0518                     	;# 
  6778     0519                     	;# 
  6779     051A                     	;# 
  6780     051B                     	;# 
  6781     051C                     	;# 
  6782     051D                     	;# 
  6783     058C                     	;# 
  6784     058C                     	;# 
  6785     058D                     	;# 
  6786     058E                     	;# 
  6787     058F                     	;# 
  6788     058F                     	;# 
  6789     0590                     	;# 
  6790     0591                     	;# 
  6791     0592                     	;# 
  6792     0593                     	;# 
  6793     059C                     	;# 
  6794     059C                     	;# 
  6795     059D                     	;# 
  6796     059D                     	;# 
  6797     059E                     	;# 
  6798     059F                     	;# 
  6799     060C                     	;# 
  6800     060C                     	;# 
  6801     060D                     	;# 
  6802     060D                     	;# 
  6803     060E                     	;# 
  6804     060F                     	;# 
  6805     0610                     	;# 
  6806     0611                     	;# 
  6807     0612                     	;# 
  6808     0613                     	;# 
  6809     0614                     	;# 
  6810     0616                     	;# 
  6811     0616                     	;# 
  6812     0617                     	;# 
  6813     0617                     	;# 
  6814     0618                     	;# 
  6815     0619                     	;# 
  6816     061A                     	;# 
  6817     061B                     	;# 
  6818     061C                     	;# 
  6819     061D                     	;# 
  6820     061E                     	;# 
  6821     068C                     	;# 
  6822     068D                     	;# 
  6823     068E                     	;# 
  6824     068F                     	;# 
  6825     0690                     	;# 
  6826     0691                     	;# 
  6827     0692                     	;# 
  6828     0693                     	;# 
  6829     0694                     	;# 
  6830     070C                     	;# 
  6831     070D                     	;# 
  6832     070E                     	;# 
  6833     070F                     	;# 
  6834     0710                     	;# 
  6835     0711                     	;# 
  6836     0712                     	;# 
  6837     0713                     	;# 
  6838     0714                     	;# 
  6839     0716                     	;# 
  6840     0717                     	;# 
  6841     0718                     	;# 
  6842     0719                     	;# 
  6843     071A                     	;# 
  6844     071B                     	;# 
  6845     071C                     	;# 
  6846     071D                     	;# 
  6847     071E                     	;# 
  6848     0796                     	;# 
  6849     0797                     	;# 
  6850     0798                     	;# 
  6851     0799                     	;# 
  6852     079A                     	;# 
  6853     079B                     	;# 
  6854     079C                     	;# 
  6855     079D                     	;# 
  6856     080C                     	;# 
  6857     080D                     	;# 
  6858     080E                     	;# 
  6859     080F                     	;# 
  6860     0810                     	;# 
  6861     0811                     	;# 
  6862     0813                     	;# 
  6863     0814                     	;# 
  6864     081A                     	;# 
  6865     081A                     	;# 
  6866     081B                     	;# 
  6867     081C                     	;# 
  6868     081C                     	;# 
  6869     081D                     	;# 
  6870     081E                     	;# 
  6871     081F                     	;# 
  6872     088C                     	;# 
  6873     088D                     	;# 
  6874     088E                     	;# 
  6875     088F                     	;# 
  6876     0890                     	;# 
  6877     0891                     	;# 
  6878     0892                     	;# 
  6879     0893                     	;# 
  6880     0895                     	;# 
  6881     0896                     	;# 
  6882     0897                     	;# 
  6883     0898                     	;# 
  6884     0899                     	;# 
  6885     089A                     	;# 
  6886     089B                     	;# 
  6887     090C                     	;# 
  6888     090E                     	;# 
  6889     090F                     	;# 
  6890     091F                     	;# 
  6891     098F                     	;# 
  6892     098F                     	;# 
  6893     0990                     	;# 
  6894     0991                     	;# 
  6895     0992                     	;# 
  6896     0993                     	;# 
  6897     0994                     	;# 
  6898     0995                     	;# 
  6899     0996                     	;# 
  6900     0997                     	;# 
  6901     0A19                     	;# 
  6902     0A19                     	;# 
  6903     0A1A                     	;# 
  6904     0A1A                     	;# 
  6905     0A1B                     	;# 
  6906     0A1B                     	;# 
  6907     0A1B                     	;# 
  6908     0A1C                     	;# 
  6909     0A1C                     	;# 
  6910     0A1D                     	;# 
  6911     0A1D                     	;# 
  6912     0A1E                     	;# 
  6913     0A1E                     	;# 
  6914     0A1F                     	;# 
  6915     0A1F                     	;# 
  6916     0A1F                     	;# 
  6917     1E0F                     	;# 
  6918     1E10                     	;# 
  6919     1E11                     	;# 
  6920     1E12                     	;# 
  6921     1E13                     	;# 
  6922     1E14                     	;# 
  6923     1E15                     	;# 
  6924     1E16                     	;# 
  6925     1E17                     	;# 
  6926     1E18                     	;# 
  6927     1E19                     	;# 
  6928     1E1A                     	;# 
  6929     1E1B                     	;# 
  6930     1E1C                     	;# 
  6931     1E1D                     	;# 
  6932     1E1E                     	;# 
  6933     1E1F                     	;# 
  6934     1E20                     	;# 
  6935     1E21                     	;# 
  6936     1E22                     	;# 
  6937     1E23                     	;# 
  6938     1E24                     	;# 
  6939     1E25                     	;# 
  6940     1E26                     	;# 
  6941     1E27                     	;# 
  6942     1E28                     	;# 
  6943     1E29                     	;# 
  6944     1E2A                     	;# 
  6945     1E2B                     	;# 
  6946     1E2C                     	;# 
  6947     1E2D                     	;# 
  6948     1E2E                     	;# 
  6949     1E2F                     	;# 
  6950     1E30                     	;# 
  6951     1E31                     	;# 
  6952     1E32                     	;# 
  6953     1E33                     	;# 
  6954     1E34                     	;# 
  6955     1E35                     	;# 
  6956     1E36                     	;# 
  6957     1E37                     	;# 
  6958     1E8F                     	;# 
  6959     1E90                     	;# 
  6960     1E91                     	;# 
  6961     1E92                     	;# 
  6962     1E93                     	;# 
  6963     1E94                     	;# 
  6964     1E95                     	;# 
  6965     1E96                     	;# 
  6966     1E97                     	;# 
  6967     1E9C                     	;# 
  6968     1E9D                     	;# 
  6969     1E9E                     	;# 
  6970     1EA1                     	;# 
  6971     1EA2                     	;# 
  6972     1EA3                     	;# 
  6973     1EA4                     	;# 
  6974     1EA5                     	;# 
  6975     1EA9                     	;# 
  6976     1EAA                     	;# 
  6977     1EAB                     	;# 
  6978     1EAC                     	;# 
  6979     1EB1                     	;# 
  6980     1EB2                     	;# 
  6981     1EB3                     	;# 
  6982     1EB8                     	;# 
  6983     1EB9                     	;# 
  6984     1EBA                     	;# 
  6985     1EBB                     	;# 
  6986     1EBC                     	;# 
  6987     1EBD                     	;# 
  6988     1EBE                     	;# 
  6989     1EC3                     	;# 
  6990     1EC5                     	;# 
  6991     1EC6                     	;# 
  6992     1EC7                     	;# 
  6993     1EC8                     	;# 
  6994     1EC9                     	;# 
  6995     1ECA                     	;# 
  6996     1ECB                     	;# 
  6997     1ECC                     	;# 
  6998     1ECD                     	;# 
  6999     1ECE                     	;# 
  7000     1F10                     	;# 
  7001     1F11                     	;# 
  7002     1F12                     	;# 
  7003     1F13                     	;# 
  7004     1F14                     	;# 
  7005     1F15                     	;# 
  7006     1F16                     	;# 
  7007     1F17                     	;# 
  7008     1F18                     	;# 
  7009     1F19                     	;# 
  7010     1F1A                     	;# 
  7011     1F1B                     	;# 
  7012     1F1C                     	;# 
  7013     1F1D                     	;# 
  7014     1F1E                     	;# 
  7015     1F1F                     	;# 
  7016     1F20                     	;# 
  7017     1F21                     	;# 
  7018     1F22                     	;# 
  7019     1F23                     	;# 
  7020     1F24                     	;# 
  7021     1F25                     	;# 
  7022     1F26                     	;# 
  7023     1F27                     	;# 
  7024     1F38                     	;# 
  7025     1F39                     	;# 
  7026     1F3A                     	;# 
  7027     1F3B                     	;# 
  7028     1F3C                     	;# 
  7029     1F3D                     	;# 
  7030     1F3E                     	;# 
  7031     1F3F                     	;# 
  7032     1F43                     	;# 
  7033     1F44                     	;# 
  7034     1F45                     	;# 
  7035     1F46                     	;# 
  7036     1F47                     	;# 
  7037     1F48                     	;# 
  7038     1F49                     	;# 
  7039     1F4A                     	;# 
  7040     1F4E                     	;# 
  7041     1F4F                     	;# 
  7042     1F50                     	;# 
  7043     1F51                     	;# 
  7044     1F52                     	;# 
  7045     1F53                     	;# 
  7046     1F54                     	;# 
  7047     1F55                     	;# 
  7048     1F65                     	;# 
  7049     1F66                     	;# 
  7050     1F67                     	;# 
  7051     1F68                     	;# 
  7052     1F69                     	;# 
  7053     1F6A                     	;# 
  7054     1F6B                     	;# 
  7055     1FE4                     	;# 
  7056     1FE5                     	;# 
  7057     1FE6                     	;# 
  7058     1FE7                     	;# 
  7059     1FE8                     	;# 
  7060     1FE8                     	;# 
  7061     1FE9                     	;# 
  7062     1FEA                     	;# 
  7063     1FEB                     	;# 
  7064     1FED                     	;# 
  7065     1FEE                     	;# 
  7066     1FEF                     	;# 
  7067     0000                     	;# 
  7068     0001                     	;# 
  7069     0002                     	;# 
  7070     0003                     	;# 
  7071     0004                     	;# 
  7072     0005                     	;# 
  7073     0006                     	;# 
  7074     0007                     	;# 
  7075     0008                     	;# 
  7076     0009                     	;# 
  7077     000A                     	;# 
  7078     000B                     	;# 
  7079     000C                     	;# 
  7080     000D                     	;# 
  7081     000E                     	;# 
  7082     0010                     	;# 
  7083     0012                     	;# 
  7084     0013                     	;# 
  7085     0014                     	;# 
  7086     0016                     	;# 
  7087     0018                     	;# 
  7088     0019                     	;# 
  7089     001A                     	;# 
  7090     001C                     	;# 
  7091     008C                     	;# 
  7092     008C                     	;# 
  7093     008D                     	;# 
  7094     008E                     	;# 
  7095     008E                     	;# 
  7096     008F                     	;# 
  7097     0090                     	;# 
  7098     0090                     	;# 
  7099     0091                     	;# 
  7100     0092                     	;# 
  7101     0092                     	;# 
  7102     0093                     	;# 
  7103     0094                     	;# 
  7104     0094                     	;# 
  7105     0095                     	;# 
  7106     0096                     	;# 
  7107     0096                     	;# 
  7108     0097                     	;# 
  7109     0098                     	;# 
  7110     0099                     	;# 
  7111     009A                     	;# 
  7112     009B                     	;# 
  7113     009B                     	;# 
  7114     009C                     	;# 
  7115     009D                     	;# 
  7116     009D                     	;# 
  7117     009E                     	;# 
  7118     009F                     	;# 
  7119     010C                     	;# 
  7120     010C                     	;# 
  7121     010D                     	;# 
  7122     010E                     	;# 
  7123     010F                     	;# 
  7124     010F                     	;# 
  7125     0110                     	;# 
  7126     0111                     	;# 
  7127     0112                     	;# 
  7128     0113                     	;# 
  7129     0114                     	;# 
  7130     0115                     	;# 
  7131     0116                     	;# 
  7132     0117                     	;# 
  7133     0118                     	;# 
  7134     0119                     	;# 
  7135     0119                     	;# 
  7136     0119                     	;# 
  7137     011A                     	;# 
  7138     011A                     	;# 
  7139     011A                     	;# 
  7140     011B                     	;# 
  7141     011B                     	;# 
  7142     011B                     	;# 
  7143     011B                     	;# 
  7144     011B                     	;# 
  7145     011C                     	;# 
  7146     011C                     	;# 
  7147     011C                     	;# 
  7148     011D                     	;# 
  7149     011D                     	;# 
  7150     011D                     	;# 
  7151     011E                     	;# 
  7152     011E                     	;# 
  7153     011E                     	;# 
  7154     011F                     	;# 
  7155     011F                     	;# 
  7156     011F                     	;# 
  7157     011F                     	;# 
  7158     011F                     	;# 
  7159     018C                     	;# 
  7160     018D                     	;# 
  7161     018E                     	;# 
  7162     018F                     	;# 
  7163     0190                     	;# 
  7164     0191                     	;# 
  7165     0192                     	;# 
  7166     0196                     	;# 
  7167     0197                     	;# 
  7168     0198                     	;# 
  7169     0199                     	;# 
  7170     019A                     	;# 
  7171     019B                     	;# 
  7172     019C                     	;# 
  7173     020C                     	;# 
  7174     020D                     	;# 
  7175     020E                     	;# 
  7176     020E                     	;# 
  7177     020F                     	;# 
  7178     020F                     	;# 
  7179     0210                     	;# 
  7180     0210                     	;# 
  7181     0211                     	;# 
  7182     0211                     	;# 
  7183     0212                     	;# 
  7184     0213                     	;# 
  7185     0214                     	;# 
  7186     0214                     	;# 
  7187     0215                     	;# 
  7188     0215                     	;# 
  7189     0216                     	;# 
  7190     0216                     	;# 
  7191     0217                     	;# 
  7192     0217                     	;# 
  7193     0218                     	;# 
  7194     0219                     	;# 
  7195     021A                     	;# 
  7196     021A                     	;# 
  7197     021B                     	;# 
  7198     021B                     	;# 
  7199     021C                     	;# 
  7200     021C                     	;# 
  7201     021D                     	;# 
  7202     021D                     	;# 
  7203     021E                     	;# 
  7204     021F                     	;# 
  7205     028C                     	;# 
  7206     028C                     	;# 
  7207     028D                     	;# 
  7208     028D                     	;# 
  7209     028E                     	;# 
  7210     028F                     	;# 
  7211     0290                     	;# 
  7212     0291                     	;# 
  7213     0292                     	;# 
  7214     0292                     	;# 
  7215     0293                     	;# 
  7216     0293                     	;# 
  7217     0294                     	;# 
  7218     0295                     	;# 
  7219     0296                     	;# 
  7220     0297                     	;# 
  7221     0298                     	;# 
  7222     0298                     	;# 
  7223     0299                     	;# 
  7224     0299                     	;# 
  7225     029A                     	;# 
  7226     029B                     	;# 
  7227     029C                     	;# 
  7228     029D                     	;# 
  7229     029F                     	;# 
  7230     030C                     	;# 
  7231     030C                     	;# 
  7232     030D                     	;# 
  7233     030E                     	;# 
  7234     030F                     	;# 
  7235     0310                     	;# 
  7236     0310                     	;# 
  7237     0311                     	;# 
  7238     0312                     	;# 
  7239     0313                     	;# 
  7240     0314                     	;# 
  7241     0314                     	;# 
  7242     0315                     	;# 
  7243     0316                     	;# 
  7244     0317                     	;# 
  7245     0318                     	;# 
  7246     0318                     	;# 
  7247     0319                     	;# 
  7248     031A                     	;# 
  7249     031B                     	;# 
  7250     031C                     	;# 
  7251     031C                     	;# 
  7252     031D                     	;# 
  7253     031E                     	;# 
  7254     031F                     	;# 
  7255     038C                     	;# 
  7256     038C                     	;# 
  7257     038D                     	;# 
  7258     038E                     	;# 
  7259     0390                     	;# 
  7260     0390                     	;# 
  7261     0391                     	;# 
  7262     0392                     	;# 
  7263     048C                     	;# 
  7264     048C                     	;# 
  7265     048D                     	;# 
  7266     048E                     	;# 
  7267     048F                     	;# 
  7268     048F                     	;# 
  7269     0490                     	;# 
  7270     0491                     	;# 
  7271     0492                     	;# 
  7272     0492                     	;# 
  7273     0493                     	;# 
  7274     0494                     	;# 
  7275     0495                     	;# 
  7276     0495                     	;# 
  7277     0496                     	;# 
  7278     0497                     	;# 
  7279     0498                     	;# 
  7280     0499                     	;# 
  7281     049A                     	;# 
  7282     049B                     	;# 
  7283     049C                     	;# 
  7284     049D                     	;# 
  7285     050C                     	;# 
  7286     050C                     	;# 
  7287     050D                     	;# 
  7288     050E                     	;# 
  7289     050F                     	;# 
  7290     050F                     	;# 
  7291     0510                     	;# 
  7292     0511                     	;# 
  7293     0512                     	;# 
  7294     0512                     	;# 
  7295     0513                     	;# 
  7296     0514                     	;# 
  7297     0515                     	;# 
  7298     0515                     	;# 
  7299     0516                     	;# 
  7300     0517                     	;# 
  7301     0518                     	;# 
  7302     0519                     	;# 
  7303     051A                     	;# 
  7304     051B                     	;# 
  7305     051C                     	;# 
  7306     051D                     	;# 
  7307     058C                     	;# 
  7308     058C                     	;# 
  7309     058D                     	;# 
  7310     058E                     	;# 
  7311     058F                     	;# 
  7312     058F                     	;# 
  7313     0590                     	;# 
  7314     0591                     	;# 
  7315     0592                     	;# 
  7316     0593                     	;# 
  7317     059C                     	;# 
  7318     059C                     	;# 
  7319     059D                     	;# 
  7320     059D                     	;# 
  7321     059E                     	;# 
  7322     059F                     	;# 
  7323     060C                     	;# 
  7324     060C                     	;# 
  7325     060D                     	;# 
  7326     060D                     	;# 
  7327     060E                     	;# 
  7328     060F                     	;# 
  7329     0610                     	;# 
  7330     0611                     	;# 
  7331     0612                     	;# 
  7332     0613                     	;# 
  7333     0614                     	;# 
  7334     0616                     	;# 
  7335     0616                     	;# 
  7336     0617                     	;# 
  7337     0617                     	;# 
  7338     0618                     	;# 
  7339     0619                     	;# 
  7340     061A                     	;# 
  7341     061B                     	;# 
  7342     061C                     	;# 
  7343     061D                     	;# 
  7344     061E                     	;# 
  7345     068C                     	;# 
  7346     068D                     	;# 
  7347     068E                     	;# 
  7348     068F                     	;# 
  7349     0690                     	;# 
  7350     0691                     	;# 
  7351     0692                     	;# 
  7352     0693                     	;# 
  7353     0694                     	;# 
  7354     070C                     	;# 
  7355     070D                     	;# 
  7356     070E                     	;# 
  7357     070F                     	;# 
  7358     0710                     	;# 
  7359     0711                     	;# 
  7360     0712                     	;# 
  7361     0713                     	;# 
  7362     0714                     	;# 
  7363     0716                     	;# 
  7364     0717                     	;# 
  7365     0718                     	;# 
  7366     0719                     	;# 
  7367     071A                     	;# 
  7368     071B                     	;# 
  7369     071C                     	;# 
  7370     071D                     	;# 
  7371     071E                     	;# 
  7372     0796                     	;# 
  7373     0797                     	;# 
  7374     0798                     	;# 
  7375     0799                     	;# 
  7376     079A                     	;# 
  7377     079B                     	;# 
  7378     079C                     	;# 
  7379     079D                     	;# 
  7380     080C                     	;# 
  7381     080D                     	;# 
  7382     080E                     	;# 
  7383     080F                     	;# 
  7384     0810                     	;# 
  7385     0811                     	;# 
  7386     0813                     	;# 
  7387     0814                     	;# 
  7388     081A                     	;# 
  7389     081A                     	;# 
  7390     081B                     	;# 
  7391     081C                     	;# 
  7392     081C                     	;# 
  7393     081D                     	;# 
  7394     081E                     	;# 
  7395     081F                     	;# 
  7396     088C                     	;# 
  7397     088D                     	;# 
  7398     088E                     	;# 
  7399     088F                     	;# 
  7400     0890                     	;# 
  7401     0891                     	;# 
  7402     0892                     	;# 
  7403     0893                     	;# 
  7404     0895                     	;# 
  7405     0896                     	;# 
  7406     0897                     	;# 
  7407     0898                     	;# 
  7408     0899                     	;# 
  7409     089A                     	;# 
  7410     089B                     	;# 
  7411     090C                     	;# 
  7412     090E                     	;# 
  7413     090F                     	;# 
  7414     091F                     	;# 
  7415     098F                     	;# 
  7416     098F                     	;# 
  7417     0990                     	;# 
  7418     0991                     	;# 
  7419     0992                     	;# 
  7420     0993                     	;# 
  7421     0994                     	;# 
  7422     0995                     	;# 
  7423     0996                     	;# 
  7424     0997                     	;# 
  7425     0A19                     	;# 
  7426     0A19                     	;# 
  7427     0A1A                     	;# 
  7428     0A1A                     	;# 
  7429     0A1B                     	;# 
  7430     0A1B                     	;# 
  7431     0A1B                     	;# 
  7432     0A1C                     	;# 
  7433     0A1C                     	;# 
  7434     0A1D                     	;# 
  7435     0A1D                     	;# 
  7436     0A1E                     	;# 
  7437     0A1E                     	;# 
  7438     0A1F                     	;# 
  7439     0A1F                     	;# 
  7440     0A1F                     	;# 
  7441     1E0F                     	;# 
  7442     1E10                     	;# 
  7443     1E11                     	;# 
  7444     1E12                     	;# 
  7445     1E13                     	;# 
  7446     1E14                     	;# 
  7447     1E15                     	;# 
  7448     1E16                     	;# 
  7449     1E17                     	;# 
  7450     1E18                     	;# 
  7451     1E19                     	;# 
  7452     1E1A                     	;# 
  7453     1E1B                     	;# 
  7454     1E1C                     	;# 
  7455     1E1D                     	;# 
  7456     1E1E                     	;# 
  7457     1E1F                     	;# 
  7458     1E20                     	;# 
  7459     1E21                     	;# 
  7460     1E22                     	;# 
  7461     1E23                     	;# 
  7462     1E24                     	;# 
  7463     1E25                     	;# 
  7464     1E26                     	;# 
  7465     1E27                     	;# 
  7466     1E28                     	;# 
  7467     1E29                     	;# 
  7468     1E2A                     	;# 
  7469     1E2B                     	;# 
  7470     1E2C                     	;# 
  7471     1E2D                     	;# 
  7472     1E2E                     	;# 
  7473     1E2F                     	;# 
  7474     1E30                     	;# 
  7475     1E31                     	;# 
  7476     1E32                     	;# 
  7477     1E33                     	;# 
  7478     1E34                     	;# 
  7479     1E35                     	;# 
  7480     1E36                     	;# 
  7481     1E37                     	;# 
  7482     1E8F                     	;# 
  7483     1E90                     	;# 
  7484     1E91                     	;# 
  7485     1E92                     	;# 
  7486     1E93                     	;# 
  7487     1E94                     	;# 
  7488     1E95                     	;# 
  7489     1E96                     	;# 
  7490     1E97                     	;# 
  7491     1E9C                     	;# 
  7492     1E9D                     	;# 
  7493     1E9E                     	;# 
  7494     1EA1                     	;# 
  7495     1EA2                     	;# 
  7496     1EA3                     	;# 
  7497     1EA4                     	;# 
  7498     1EA5                     	;# 
  7499     1EA9                     	;# 
  7500     1EAA                     	;# 
  7501     1EAB                     	;# 
  7502     1EAC                     	;# 
  7503     1EB1                     	;# 
  7504     1EB2                     	;# 
  7505     1EB3                     	;# 
  7506     1EB8                     	;# 
  7507     1EB9                     	;# 
  7508     1EBA                     	;# 
  7509     1EBB                     	;# 
  7510     1EBC                     	;# 
  7511     1EBD                     	;# 
  7512     1EBE                     	;# 
  7513     1EC3                     	;# 
  7514     1EC5                     	;# 
  7515     1EC6                     	;# 
  7516     1EC7                     	;# 
  7517     1EC8                     	;# 
  7518     1EC9                     	;# 
  7519     1ECA                     	;# 
  7520     1ECB                     	;# 
  7521     1ECC                     	;# 
  7522     1ECD                     	;# 
  7523     1ECE                     	;# 
  7524     1F10                     	;# 
  7525     1F11                     	;# 
  7526     1F12                     	;# 
  7527     1F13                     	;# 
  7528     1F14                     	;# 
  7529     1F15                     	;# 
  7530     1F16                     	;# 
  7531     1F17                     	;# 
  7532     1F18                     	;# 
  7533     1F19                     	;# 
  7534     1F1A                     	;# 
  7535     1F1B                     	;# 
  7536     1F1C                     	;# 
  7537     1F1D                     	;# 
  7538     1F1E                     	;# 
  7539     1F1F                     	;# 
  7540     1F20                     	;# 
  7541     1F21                     	;# 
  7542     1F22                     	;# 
  7543     1F23                     	;# 
  7544     1F24                     	;# 
  7545     1F25                     	;# 
  7546     1F26                     	;# 
  7547     1F27                     	;# 
  7548     1F38                     	;# 
  7549     1F39                     	;# 
  7550     1F3A                     	;# 
  7551     1F3B                     	;# 
  7552     1F3C                     	;# 
  7553     1F3D                     	;# 
  7554     1F3E                     	;# 
  7555     1F3F                     	;# 
  7556     1F43                     	;# 
  7557     1F44                     	;# 
  7558     1F45                     	;# 
  7559     1F46                     	;# 
  7560     1F47                     	;# 
  7561     1F48                     	;# 
  7562     1F49                     	;# 
  7563     1F4A                     	;# 
  7564     1F4E                     	;# 
  7565     1F4F                     	;# 
  7566     1F50                     	;# 
  7567     1F51                     	;# 
  7568     1F52                     	;# 
  7569     1F53                     	;# 
  7570     1F54                     	;# 
  7571     1F55                     	;# 
  7572     1F65                     	;# 
  7573     1F66                     	;# 
  7574     1F67                     	;# 
  7575     1F68                     	;# 
  7576     1F69                     	;# 
  7577     1F6A                     	;# 
  7578     1F6B                     	;# 
  7579     1FE4                     	;# 
  7580     1FE5                     	;# 
  7581     1FE6                     	;# 
  7582     1FE7                     	;# 
  7583     1FE8                     	;# 
  7584     1FE8                     	;# 
  7585     1FE9                     	;# 
  7586     1FEA                     	;# 
  7587     1FEB                     	;# 
  7588     1FED                     	;# 
  7589     1FEE                     	;# 
  7590     1FEF                     	;# 
  7591     0000                     	;# 
  7592     0001                     	;# 
  7593     0002                     	;# 
  7594     0003                     	;# 
  7595     0004                     	;# 
  7596     0005                     	;# 
  7597     0006                     	;# 
  7598     0007                     	;# 
  7599     0008                     	;# 
  7600     0009                     	;# 
  7601     000A                     	;# 
  7602     000B                     	;# 
  7603     000C                     	;# 
  7604     000D                     	;# 
  7605     000E                     	;# 
  7606     0010                     	;# 
  7607     0012                     	;# 
  7608     0013                     	;# 
  7609     0014                     	;# 
  7610     0016                     	;# 
  7611     0018                     	;# 
  7612     0019                     	;# 
  7613     001A                     	;# 
  7614     001C                     	;# 
  7615     008C                     	;# 
  7616     008C                     	;# 
  7617     008D                     	;# 
  7618     008E                     	;# 
  7619     008E                     	;# 
  7620     008F                     	;# 
  7621     0090                     	;# 
  7622     0090                     	;# 
  7623     0091                     	;# 
  7624     0092                     	;# 
  7625     0092                     	;# 
  7626     0093                     	;# 
  7627     0094                     	;# 
  7628     0094                     	;# 
  7629     0095                     	;# 
  7630     0096                     	;# 
  7631     0096                     	;# 
  7632     0097                     	;# 
  7633     0098                     	;# 
  7634     0099                     	;# 
  7635     009A                     	;# 
  7636     009B                     	;# 
  7637     009B                     	;# 
  7638     009C                     	;# 
  7639     009D                     	;# 
  7640     009D                     	;# 
  7641     009E                     	;# 
  7642     009F                     	;# 
  7643     010C                     	;# 
  7644     010C                     	;# 
  7645     010D                     	;# 
  7646     010E                     	;# 
  7647     010F                     	;# 
  7648     010F                     	;# 
  7649     0110                     	;# 
  7650     0111                     	;# 
  7651     0112                     	;# 
  7652     0113                     	;# 
  7653     0114                     	;# 
  7654     0115                     	;# 
  7655     0116                     	;# 
  7656     0117                     	;# 
  7657     0118                     	;# 
  7658     0119                     	;# 
  7659     0119                     	;# 
  7660     0119                     	;# 
  7661     011A                     	;# 
  7662     011A                     	;# 
  7663     011A                     	;# 
  7664     011B                     	;# 
  7665     011B                     	;# 
  7666     011B                     	;# 
  7667     011B                     	;# 
  7668     011B                     	;# 
  7669     011C                     	;# 
  7670     011C                     	;# 
  7671     011C                     	;# 
  7672     011D                     	;# 
  7673     011D                     	;# 
  7674     011D                     	;# 
  7675     011E                     	;# 
  7676     011E                     	;# 
  7677     011E                     	;# 
  7678     011F                     	;# 
  7679     011F                     	;# 
  7680     011F                     	;# 
  7681     011F                     	;# 
  7682     011F                     	;# 
  7683     018C                     	;# 
  7684     018D                     	;# 
  7685     018E                     	;# 
  7686     018F                     	;# 
  7687     0190                     	;# 
  7688     0191                     	;# 
  7689     0192                     	;# 
  7690     0196                     	;# 
  7691     0197                     	;# 
  7692     0198                     	;# 
  7693     0199                     	;# 
  7694     019A                     	;# 
  7695     019B                     	;# 
  7696     019C                     	;# 
  7697     020C                     	;# 
  7698     020D                     	;# 
  7699     020E                     	;# 
  7700     020E                     	;# 
  7701     020F                     	;# 
  7702     020F                     	;# 
  7703     0210                     	;# 
  7704     0210                     	;# 
  7705     0211                     	;# 
  7706     0211                     	;# 
  7707     0212                     	;# 
  7708     0213                     	;# 
  7709     0214                     	;# 
  7710     0214                     	;# 
  7711     0215                     	;# 
  7712     0215                     	;# 
  7713     0216                     	;# 
  7714     0216                     	;# 
  7715     0217                     	;# 
  7716     0217                     	;# 
  7717     0218                     	;# 
  7718     0219                     	;# 
  7719     021A                     	;# 
  7720     021A                     	;# 
  7721     021B                     	;# 
  7722     021B                     	;# 
  7723     021C                     	;# 
  7724     021C                     	;# 
  7725     021D                     	;# 
  7726     021D                     	;# 
  7727     021E                     	;# 
  7728     021F                     	;# 
  7729     028C                     	;# 
  7730     028C                     	;# 
  7731     028D                     	;# 
  7732     028D                     	;# 
  7733     028E                     	;# 
  7734     028F                     	;# 
  7735     0290                     	;# 
  7736     0291                     	;# 
  7737     0292                     	;# 
  7738     0292                     	;# 
  7739     0293                     	;# 
  7740     0293                     	;# 
  7741     0294                     	;# 
  7742     0295                     	;# 
  7743     0296                     	;# 
  7744     0297                     	;# 
  7745     0298                     	;# 
  7746     0298                     	;# 
  7747     0299                     	;# 
  7748     0299                     	;# 
  7749     029A                     	;# 
  7750     029B                     	;# 
  7751     029C                     	;# 
  7752     029D                     	;# 
  7753     029F                     	;# 
  7754     030C                     	;# 
  7755     030C                     	;# 
  7756     030D                     	;# 
  7757     030E                     	;# 
  7758     030F                     	;# 
  7759     0310                     	;# 
  7760     0310                     	;# 
  7761     0311                     	;# 
  7762     0312                     	;# 
  7763     0313                     	;# 
  7764     0314                     	;# 
  7765     0314                     	;# 
  7766     0315                     	;# 
  7767     0316                     	;# 
  7768     0317                     	;# 
  7769     0318                     	;# 
  7770     0318                     	;# 
  7771     0319                     	;# 
  7772     031A                     	;# 
  7773     031B                     	;# 
  7774     031C                     	;# 
  7775     031C                     	;# 
  7776     031D                     	;# 
  7777     031E                     	;# 
  7778     031F                     	;# 
  7779     038C                     	;# 
  7780     038C                     	;# 
  7781     038D                     	;# 
  7782     038E                     	;# 
  7783     0390                     	;# 
  7784     0390                     	;# 
  7785     0391                     	;# 
  7786     0392                     	;# 
  7787     048C                     	;# 
  7788     048C                     	;# 
  7789     048D                     	;# 
  7790     048E                     	;# 
  7791     048F                     	;# 
  7792     048F                     	;# 
  7793     0490                     	;# 
  7794     0491                     	;# 
  7795     0492                     	;# 
  7796     0492                     	;# 
  7797     0493                     	;# 
  7798     0494                     	;# 
  7799     0495                     	;# 
  7800     0495                     	;# 
  7801     0496                     	;# 
  7802     0497                     	;# 
  7803     0498                     	;# 
  7804     0499                     	;# 
  7805     049A                     	;# 
  7806     049B                     	;# 
  7807     049C                     	;# 
  7808     049D                     	;# 
  7809     050C                     	;# 
  7810     050C                     	;# 
  7811     050D                     	;# 
  7812     050E                     	;# 
  7813     050F                     	;# 
  7814     050F                     	;# 
  7815     0510                     	;# 
  7816     0511                     	;# 
  7817     0512                     	;# 
  7818     0512                     	;# 
  7819     0513                     	;# 
  7820     0514                     	;# 
  7821     0515                     	;# 
  7822     0515                     	;# 
  7823     0516                     	;# 
  7824     0517                     	;# 
  7825     0518                     	;# 
  7826     0519                     	;# 
  7827     051A                     	;# 
  7828     051B                     	;# 
  7829     051C                     	;# 
  7830     051D                     	;# 
  7831     058C                     	;# 
  7832     058C                     	;# 
  7833     058D                     	;# 
  7834     058E                     	;# 
  7835     058F                     	;# 
  7836     058F                     	;# 
  7837     0590                     	;# 
  7838     0591                     	;# 
  7839     0592                     	;# 
  7840     0593                     	;# 
  7841     059C                     	;# 
  7842     059C                     	;# 
  7843     059D                     	;# 
  7844     059D                     	;# 
  7845     059E                     	;# 
  7846     059F                     	;# 
  7847     060C                     	;# 
  7848     060C                     	;# 
  7849     060D                     	;# 
  7850     060D                     	;# 
  7851     060E                     	;# 
  7852     060F                     	;# 
  7853     0610                     	;# 
  7854     0611                     	;# 
  7855     0612                     	;# 
  7856     0613                     	;# 
  7857     0614                     	;# 
  7858     0616                     	;# 
  7859     0616                     	;# 
  7860     0617                     	;# 
  7861     0617                     	;# 
  7862     0618                     	;# 
  7863     0619                     	;# 
  7864     061A                     	;# 
  7865     061B                     	;# 
  7866     061C                     	;# 
  7867     061D                     	;# 
  7868     061E                     	;# 
  7869     068C                     	;# 
  7870     068D                     	;# 
  7871     068E                     	;# 
  7872     068F                     	;# 
  7873     0690                     	;# 
  7874     0691                     	;# 
  7875     0692                     	;# 
  7876     0693                     	;# 
  7877     0694                     	;# 
  7878     070C                     	;# 
  7879     070D                     	;# 
  7880     070E                     	;# 
  7881     070F                     	;# 
  7882     0710                     	;# 
  7883     0711                     	;# 
  7884     0712                     	;# 
  7885     0713                     	;# 
  7886     0714                     	;# 
  7887     0716                     	;# 
  7888     0717                     	;# 
  7889     0718                     	;# 
  7890     0719                     	;# 
  7891     071A                     	;# 
  7892     071B                     	;# 
  7893     071C                     	;# 
  7894     071D                     	;# 
  7895     071E                     	;# 
  7896     0796                     	;# 
  7897     0797                     	;# 
  7898     0798                     	;# 
  7899     0799                     	;# 
  7900     079A                     	;# 
  7901     079B                     	;# 
  7902     079C                     	;# 
  7903     079D                     	;# 
  7904     080C                     	;# 
  7905     080D                     	;# 
  7906     080E                     	;# 
  7907     080F                     	;# 
  7908     0810                     	;# 
  7909     0811                     	;# 
  7910     0813                     	;# 
  7911     0814                     	;# 
  7912     081A                     	;# 
  7913     081A                     	;# 
  7914     081B                     	;# 
  7915     081C                     	;# 
  7916     081C                     	;# 
  7917     081D                     	;# 
  7918     081E                     	;# 
  7919     081F                     	;# 
  7920     088C                     	;# 
  7921     088D                     	;# 
  7922     088E                     	;# 
  7923     088F                     	;# 
  7924     0890                     	;# 
  7925     0891                     	;# 
  7926     0892                     	;# 
  7927     0893                     	;# 
  7928     0895                     	;# 
  7929     0896                     	;# 
  7930     0897                     	;# 
  7931     0898                     	;# 
  7932     0899                     	;# 
  7933     089A                     	;# 
  7934     089B                     	;# 
  7935     090C                     	;# 
  7936     090E                     	;# 
  7937     090F                     	;# 
  7938     091F                     	;# 
  7939     098F                     	;# 
  7940     098F                     	;# 
  7941     0990                     	;# 
  7942     0991                     	;# 
  7943     0992                     	;# 
  7944     0993                     	;# 
  7945     0994                     	;# 
  7946     0995                     	;# 
  7947     0996                     	;# 
  7948     0997                     	;# 
  7949     0A19                     	;# 
  7950     0A19                     	;# 
  7951     0A1A                     	;# 
  7952     0A1A                     	;# 
  7953     0A1B                     	;# 
  7954     0A1B                     	;# 
  7955     0A1B                     	;# 
  7956     0A1C                     	;# 
  7957     0A1C                     	;# 
  7958     0A1D                     	;# 
  7959     0A1D                     	;# 
  7960     0A1E                     	;# 
  7961     0A1E                     	;# 
  7962     0A1F                     	;# 
  7963     0A1F                     	;# 
  7964     0A1F                     	;# 
  7965     1E0F                     	;# 
  7966     1E10                     	;# 
  7967     1E11                     	;# 
  7968     1E12                     	;# 
  7969     1E13                     	;# 
  7970     1E14                     	;# 
  7971     1E15                     	;# 
  7972     1E16                     	;# 
  7973     1E17                     	;# 
  7974     1E18                     	;# 
  7975     1E19                     	;# 
  7976     1E1A                     	;# 
  7977     1E1B                     	;# 
  7978     1E1C                     	;# 
  7979     1E1D                     	;# 
  7980     1E1E                     	;# 
  7981     1E1F                     	;# 
  7982     1E20                     	;# 
  7983     1E21                     	;# 
  7984     1E22                     	;# 
  7985     1E23                     	;# 
  7986     1E24                     	;# 
  7987     1E25                     	;# 
  7988     1E26                     	;# 
  7989     1E27                     	;# 
  7990     1E28                     	;# 
  7991     1E29                     	;# 
  7992     1E2A                     	;# 
  7993     1E2B                     	;# 
  7994     1E2C                     	;# 
  7995     1E2D                     	;# 
  7996     1E2E                     	;# 
  7997     1E2F                     	;# 
  7998     1E30                     	;# 
  7999     1E31                     	;# 
  8000     1E32                     	;# 
  8001     1E33                     	;# 
  8002     1E34                     	;# 
  8003     1E35                     	;# 
  8004     1E36                     	;# 
  8005     1E37                     	;# 
  8006     1E8F                     	;# 
  8007     1E90                     	;# 
  8008     1E91                     	;# 
  8009     1E92                     	;# 
  8010     1E93                     	;# 
  8011     1E94                     	;# 
  8012     1E95                     	;# 
  8013     1E96                     	;# 
  8014     1E97                     	;# 
  8015     1E9C                     	;# 
  8016     1E9D                     	;# 
  8017     1E9E                     	;# 
  8018     1EA1                     	;# 
  8019     1EA2                     	;# 
  8020     1EA3                     	;# 
  8021     1EA4                     	;# 
  8022     1EA5                     	;# 
  8023     1EA9                     	;# 
  8024     1EAA                     	;# 
  8025     1EAB                     	;# 
  8026     1EAC                     	;# 
  8027     1EB1                     	;# 
  8028     1EB2                     	;# 
  8029     1EB3                     	;# 
  8030     1EB8                     	;# 
  8031     1EB9                     	;# 
  8032     1EBA                     	;# 
  8033     1EBB                     	;# 
  8034     1EBC                     	;# 
  8035     1EBD                     	;# 
  8036     1EBE                     	;# 
  8037     1EC3                     	;# 
  8038     1EC5                     	;# 
  8039     1EC6                     	;# 
  8040     1EC7                     	;# 
  8041     1EC8                     	;# 
  8042     1EC9                     	;# 
  8043     1ECA                     	;# 
  8044     1ECB                     	;# 
  8045     1ECC                     	;# 
  8046     1ECD                     	;# 
  8047     1ECE                     	;# 
  8048     1F10                     	;# 
  8049     1F11                     	;# 
  8050     1F12                     	;# 
  8051     1F13                     	;# 
  8052     1F14                     	;# 
  8053     1F15                     	;# 
  8054     1F16                     	;# 
  8055     1F17                     	;# 
  8056     1F18                     	;# 
  8057     1F19                     	;# 
  8058     1F1A                     	;# 
  8059     1F1B                     	;# 
  8060     1F1C                     	;# 
  8061     1F1D                     	;# 
  8062     1F1E                     	;# 
  8063     1F1F                     	;# 
  8064     1F20                     	;# 
  8065     1F21                     	;# 
  8066     1F22                     	;# 
  8067     1F23                     	;# 
  8068     1F24                     	;# 
  8069     1F25                     	;# 
  8070     1F26                     	;# 
  8071     1F27                     	;# 
  8072     1F38                     	;# 
  8073     1F39                     	;# 
  8074     1F3A                     	;# 
  8075     1F3B                     	;# 
  8076     1F3C                     	;# 
  8077     1F3D                     	;# 
  8078     1F3E                     	;# 
  8079     1F3F                     	;# 
  8080     1F43                     	;# 
  8081     1F44                     	;# 
  8082     1F45                     	;# 
  8083     1F46                     	;# 
  8084     1F47                     	;# 
  8085     1F48                     	;# 
  8086     1F49                     	;# 
  8087     1F4A                     	;# 
  8088     1F4E                     	;# 
  8089     1F4F                     	;# 
  8090     1F50                     	;# 
  8091     1F51                     	;# 
  8092     1F52                     	;# 
  8093     1F53                     	;# 
  8094     1F54                     	;# 
  8095     1F55                     	;# 
  8096     1F65                     	;# 
  8097     1F66                     	;# 
  8098     1F67                     	;# 
  8099     1F68                     	;# 
  8100     1F69                     	;# 
  8101     1F6A                     	;# 
  8102     1F6B                     	;# 
  8103     1FE4                     	;# 
  8104     1FE5                     	;# 
  8105     1FE6                     	;# 
  8106     1FE7                     	;# 
  8107     1FE8                     	;# 
  8108     1FE8                     	;# 
  8109     1FE9                     	;# 
  8110     1FEA                     	;# 
  8111     1FEB                     	;# 
  8112     1FED                     	;# 
  8113     1FEE                     	;# 
  8114     1FEF                     	;# 
  8115     0000                     	;# 
  8116     0001                     	;# 
  8117     0002                     	;# 
  8118     0003                     	;# 
  8119     0004                     	;# 
  8120     0005                     	;# 
  8121     0006                     	;# 
  8122     0007                     	;# 
  8123     0008                     	;# 
  8124     0009                     	;# 
  8125     000A                     	;# 
  8126     000B                     	;# 
  8127     000C                     	;# 
  8128     000D                     	;# 
  8129     000E                     	;# 
  8130     0010                     	;# 
  8131     0012                     	;# 
  8132     0013                     	;# 
  8133     0014                     	;# 
  8134     0016                     	;# 
  8135     0018                     	;# 
  8136     0019                     	;# 
  8137     001A                     	;# 
  8138     001C                     	;# 
  8139     008C                     	;# 
  8140     008C                     	;# 
  8141     008D                     	;# 
  8142     008E                     	;# 
  8143     008E                     	;# 
  8144     008F                     	;# 
  8145     0090                     	;# 
  8146     0090                     	;# 
  8147     0091                     	;# 
  8148     0092                     	;# 
  8149     0092                     	;# 
  8150     0093                     	;# 
  8151     0094                     	;# 
  8152     0094                     	;# 
  8153     0095                     	;# 
  8154     0096                     	;# 
  8155     0096                     	;# 
  8156     0097                     	;# 
  8157     0098                     	;# 
  8158     0099                     	;# 
  8159     009A                     	;# 
  8160     009B                     	;# 
  8161     009B                     	;# 
  8162     009C                     	;# 
  8163     009D                     	;# 
  8164     009D                     	;# 
  8165     009E                     	;# 
  8166     009F                     	;# 
  8167     010C                     	;# 
  8168     010C                     	;# 
  8169     010D                     	;# 
  8170     010E                     	;# 
  8171     010F                     	;# 
  8172     010F                     	;# 
  8173     0110                     	;# 
  8174     0111                     	;# 
  8175     0112                     	;# 
  8176     0113                     	;# 
  8177     0114                     	;# 
  8178     0115                     	;# 
  8179     0116                     	;# 
  8180     0117                     	;# 
  8181     0118                     	;# 
  8182     0119                     	;# 
  8183     0119                     	;# 
  8184     0119                     	;# 
  8185     011A                     	;# 
  8186     011A                     	;# 
  8187     011A                     	;# 
  8188     011B                     	;# 
  8189     011B                     	;# 
  8190     011B                     	;# 
  8191     011B                     	;# 
  8192     011B                     	;# 
  8193     011C                     	;# 
  8194     011C                     	;# 
  8195     011C                     	;# 
  8196     011D                     	;# 
  8197     011D                     	;# 
  8198     011D                     	;# 
  8199     011E                     	;# 
  8200     011E                     	;# 
  8201     011E                     	;# 
  8202     011F                     	;# 
  8203     011F                     	;# 
  8204     011F                     	;# 
  8205     011F                     	;# 
  8206     011F                     	;# 
  8207     018C                     	;# 
  8208     018D                     	;# 
  8209     018E                     	;# 
  8210     018F                     	;# 
  8211     0190                     	;# 
  8212     0191                     	;# 
  8213     0192                     	;# 
  8214     0196                     	;# 
  8215     0197                     	;# 
  8216     0198                     	;# 
  8217     0199                     	;# 
  8218     019A                     	;# 
  8219     019B                     	;# 
  8220     019C                     	;# 
  8221     020C                     	;# 
  8222     020D                     	;# 
  8223     020E                     	;# 
  8224     020E                     	;# 
  8225     020F                     	;# 
  8226     020F                     	;# 
  8227     0210                     	;# 
  8228     0210                     	;# 
  8229     0211                     	;# 
  8230     0211                     	;# 
  8231     0212                     	;# 
  8232     0213                     	;# 
  8233     0214                     	;# 
  8234     0214                     	;# 
  8235     0215                     	;# 
  8236     0215                     	;# 
  8237     0216                     	;# 
  8238     0216                     	;# 
  8239     0217                     	;# 
  8240     0217                     	;# 
  8241     0218                     	;# 
  8242     0219                     	;# 
  8243     021A                     	;# 
  8244     021A                     	;# 
  8245     021B                     	;# 
  8246     021B                     	;# 
  8247     021C                     	;# 
  8248     021C                     	;# 
  8249     021D                     	;# 
  8250     021D                     	;# 
  8251     021E                     	;# 
  8252     021F                     	;# 
  8253     028C                     	;# 
  8254     028C                     	;# 
  8255     028D                     	;# 
  8256     028D                     	;# 
  8257     028E                     	;# 
  8258     028F                     	;# 
  8259     0290                     	;# 
  8260     0291                     	;# 
  8261     0292                     	;# 
  8262     0292                     	;# 
  8263     0293                     	;# 
  8264     0293                     	;# 
  8265     0294                     	;# 
  8266     0295                     	;# 
  8267     0296                     	;# 
  8268     0297                     	;# 
  8269     0298                     	;# 
  8270     0298                     	;# 
  8271     0299                     	;# 
  8272     0299                     	;# 
  8273     029A                     	;# 
  8274     029B                     	;# 
  8275     029C                     	;# 
  8276     029D                     	;# 
  8277     029F                     	;# 
  8278     030C                     	;# 
  8279     030C                     	;# 
  8280     030D                     	;# 
  8281     030E                     	;# 
  8282     030F                     	;# 
  8283     0310                     	;# 
  8284     0310                     	;# 
  8285     0311                     	;# 
  8286     0312                     	;# 
  8287     0313                     	;# 
  8288     0314                     	;# 
  8289     0314                     	;# 
  8290     0315                     	;# 
  8291     0316                     	;# 
  8292     0317                     	;# 
  8293     0318                     	;# 
  8294     0318                     	;# 
  8295     0319                     	;# 
  8296     031A                     	;# 
  8297     031B                     	;# 
  8298     031C                     	;# 
  8299     031C                     	;# 
  8300     031D                     	;# 
  8301     031E                     	;# 
  8302     031F                     	;# 
  8303     038C                     	;# 
  8304     038C                     	;# 
  8305     038D                     	;# 
  8306     038E                     	;# 
  8307     0390                     	;# 
  8308     0390                     	;# 
  8309     0391                     	;# 
  8310     0392                     	;# 
  8311     048C                     	;# 
  8312     048C                     	;# 
  8313     048D                     	;# 
  8314     048E                     	;# 
  8315     048F                     	;# 
  8316     048F                     	;# 
  8317     0490                     	;# 
  8318     0491                     	;# 
  8319     0492                     	;# 
  8320     0492                     	;# 
  8321     0493                     	;# 
  8322     0494                     	;# 
  8323     0495                     	;# 
  8324     0495                     	;# 
  8325     0496                     	;# 
  8326     0497                     	;# 
  8327     0498                     	;# 
  8328     0499                     	;# 
  8329     049A                     	;# 
  8330     049B                     	;# 
  8331     049C                     	;# 
  8332     049D                     	;# 
  8333     050C                     	;# 
  8334     050C                     	;# 
  8335     050D                     	;# 
  8336     050E                     	;# 
  8337     050F                     	;# 
  8338     050F                     	;# 
  8339     0510                     	;# 
  8340     0511                     	;# 
  8341     0512                     	;# 
  8342     0512                     	;# 
  8343     0513                     	;# 
  8344     0514                     	;# 
  8345     0515                     	;# 
  8346     0515                     	;# 
  8347     0516                     	;# 
  8348     0517                     	;# 
  8349     0518                     	;# 
  8350     0519                     	;# 
  8351     051A                     	;# 
  8352     051B                     	;# 
  8353     051C                     	;# 
  8354     051D                     	;# 
  8355     058C                     	;# 
  8356     058C                     	;# 
  8357     058D                     	;# 
  8358     058E                     	;# 
  8359     058F                     	;# 
  8360     058F                     	;# 
  8361     0590                     	;# 
  8362     0591                     	;# 
  8363     0592                     	;# 
  8364     0593                     	;# 
  8365     059C                     	;# 
  8366     059C                     	;# 
  8367     059D                     	;# 
  8368     059D                     	;# 
  8369     059E                     	;# 
  8370     059F                     	;# 
  8371     060C                     	;# 
  8372     060C                     	;# 
  8373     060D                     	;# 
  8374     060D                     	;# 
  8375     060E                     	;# 
  8376     060F                     	;# 
  8377     0610                     	;# 
  8378     0611                     	;# 
  8379     0612                     	;# 
  8380     0613                     	;# 
  8381     0614                     	;# 
  8382     0616                     	;# 
  8383     0616                     	;# 
  8384     0617                     	;# 
  8385     0617                     	;# 
  8386     0618                     	;# 
  8387     0619                     	;# 
  8388     061A                     	;# 
  8389     061B                     	;# 
  8390     061C                     	;# 
  8391     061D                     	;# 
  8392     061E                     	;# 
  8393     068C                     	;# 
  8394     068D                     	;# 
  8395     068E                     	;# 
  8396     068F                     	;# 
  8397     0690                     	;# 
  8398     0691                     	;# 
  8399     0692                     	;# 
  8400     0693                     	;# 
  8401     0694                     	;# 
  8402     070C                     	;# 
  8403     070D                     	;# 
  8404     070E                     	;# 
  8405     070F                     	;# 
  8406     0710                     	;# 
  8407     0711                     	;# 
  8408     0712                     	;# 
  8409     0713                     	;# 
  8410     0714                     	;# 
  8411     0716                     	;# 
  8412     0717                     	;# 
  8413     0718                     	;# 
  8414     0719                     	;# 
  8415     071A                     	;# 
  8416     071B                     	;# 
  8417     071C                     	;# 
  8418     071D                     	;# 
  8419     071E                     	;# 
  8420     0796                     	;# 
  8421     0797                     	;# 
  8422     0798                     	;# 
  8423     0799                     	;# 
  8424     079A                     	;# 
  8425     079B                     	;# 
  8426     079C                     	;# 
  8427     079D                     	;# 
  8428     080C                     	;# 
  8429     080D                     	;# 
  8430     080E                     	;# 
  8431     080F                     	;# 
  8432     0810                     	;# 
  8433     0811                     	;# 
  8434     0813                     	;# 
  8435     0814                     	;# 
  8436     081A                     	;# 
  8437     081A                     	;# 
  8438     081B                     	;# 
  8439     081C                     	;# 
  8440     081C                     	;# 
  8441     081D                     	;# 
  8442     081E                     	;# 
  8443     081F                     	;# 
  8444     088C                     	;# 
  8445     088D                     	;# 
  8446     088E                     	;# 
  8447     088F                     	;# 
  8448     0890                     	;# 
  8449     0891                     	;# 
  8450     0892                     	;# 
  8451     0893                     	;# 
  8452     0895                     	;# 
  8453     0896                     	;# 
  8454     0897                     	;# 
  8455     0898                     	;# 
  8456     0899                     	;# 
  8457     089A                     	;# 
  8458     089B                     	;# 
  8459     090C                     	;# 
  8460     090E                     	;# 
  8461     090F                     	;# 
  8462     091F                     	;# 
  8463     098F                     	;# 
  8464     098F                     	;# 
  8465     0990                     	;# 
  8466     0991                     	;# 
  8467     0992                     	;# 
  8468     0993                     	;# 
  8469     0994                     	;# 
  8470     0995                     	;# 
  8471     0996                     	;# 
  8472     0997                     	;# 
  8473     0A19                     	;# 
  8474     0A19                     	;# 
  8475     0A1A                     	;# 
  8476     0A1A                     	;# 
  8477     0A1B                     	;# 
  8478     0A1B                     	;# 
  8479     0A1B                     	;# 
  8480     0A1C                     	;# 
  8481     0A1C                     	;# 
  8482     0A1D                     	;# 
  8483     0A1D                     	;# 
  8484     0A1E                     	;# 
  8485     0A1E                     	;# 
  8486     0A1F                     	;# 
  8487     0A1F                     	;# 
  8488     0A1F                     	;# 
  8489     1E0F                     	;# 
  8490     1E10                     	;# 
  8491     1E11                     	;# 
  8492     1E12                     	;# 
  8493     1E13                     	;# 
  8494     1E14                     	;# 
  8495     1E15                     	;# 
  8496     1E16                     	;# 
  8497     1E17                     	;# 
  8498     1E18                     	;# 
  8499     1E19                     	;# 
  8500     1E1A                     	;# 
  8501     1E1B                     	;# 
  8502     1E1C                     	;# 
  8503     1E1D                     	;# 
  8504     1E1E                     	;# 
  8505     1E1F                     	;# 
  8506     1E20                     	;# 
  8507     1E21                     	;# 
  8508     1E22                     	;# 
  8509     1E23                     	;# 
  8510     1E24                     	;# 
  8511     1E25                     	;# 
  8512     1E26                     	;# 
  8513     1E27                     	;# 
  8514     1E28                     	;# 
  8515     1E29                     	;# 
  8516     1E2A                     	;# 
  8517     1E2B                     	;# 
  8518     1E2C                     	;# 
  8519     1E2D                     	;# 
  8520     1E2E                     	;# 
  8521     1E2F                     	;# 
  8522     1E30                     	;# 
  8523     1E31                     	;# 
  8524     1E32                     	;# 
  8525     1E33                     	;# 
  8526     1E34                     	;# 
  8527     1E35                     	;# 
  8528     1E36                     	;# 
  8529     1E37                     	;# 
  8530     1E8F                     	;# 
  8531     1E90                     	;# 
  8532     1E91                     	;# 
  8533     1E92                     	;# 
  8534     1E93                     	;# 
  8535     1E94                     	;# 
  8536     1E95                     	;# 
  8537     1E96                     	;# 
  8538     1E97                     	;# 
  8539     1E9C                     	;# 
  8540     1E9D                     	;# 
  8541     1E9E                     	;# 
  8542     1EA1                     	;# 
  8543     1EA2                     	;# 
  8544     1EA3                     	;# 
  8545     1EA4                     	;# 
  8546     1EA5                     	;# 
  8547     1EA9                     	;# 
  8548     1EAA                     	;# 
  8549     1EAB                     	;# 
  8550     1EAC                     	;# 
  8551     1EB1                     	;# 
  8552     1EB2                     	;# 
  8553     1EB3                     	;# 
  8554     1EB8                     	;# 
  8555     1EB9                     	;# 
  8556     1EBA                     	;# 
  8557     1EBB                     	;# 
  8558     1EBC                     	;# 
  8559     1EBD                     	;# 
  8560     1EBE                     	;# 
  8561     1EC3                     	;# 
  8562     1EC5                     	;# 
  8563     1EC6                     	;# 
  8564     1EC7                     	;# 
  8565     1EC8                     	;# 
  8566     1EC9                     	;# 
  8567     1ECA                     	;# 
  8568     1ECB                     	;# 
  8569     1ECC                     	;# 
  8570     1ECD                     	;# 
  8571     1ECE                     	;# 
  8572     1F10                     	;# 
  8573     1F11                     	;# 
  8574     1F12                     	;# 
  8575     1F13                     	;# 
  8576     1F14                     	;# 
  8577     1F15                     	;# 
  8578     1F16                     	;# 
  8579     1F17                     	;# 
  8580     1F18                     	;# 
  8581     1F19                     	;# 
  8582     1F1A                     	;# 
  8583     1F1B                     	;# 
  8584     1F1C                     	;# 
  8585     1F1D                     	;# 
  8586     1F1E                     	;# 
  8587     1F1F                     	;# 
  8588     1F20                     	;# 
  8589     1F21                     	;# 
  8590     1F22                     	;# 
  8591     1F23                     	;# 
  8592     1F24                     	;# 
  8593     1F25                     	;# 
  8594     1F26                     	;# 
  8595     1F27                     	;# 
  8596     1F38                     	;# 
  8597     1F39                     	;# 
  8598     1F3A                     	;# 
  8599     1F3B                     	;# 
  8600     1F3C                     	;# 
  8601     1F3D                     	;# 
  8602     1F3E                     	;# 
  8603     1F3F                     	;# 
  8604     1F43                     	;# 
  8605     1F44                     	;# 
  8606     1F45                     	;# 
  8607     1F46                     	;# 
  8608     1F47                     	;# 
  8609     1F48                     	;# 
  8610     1F49                     	;# 
  8611     1F4A                     	;# 
  8612     1F4E                     	;# 
  8613     1F4F                     	;# 
  8614     1F50                     	;# 
  8615     1F51                     	;# 
  8616     1F52                     	;# 
  8617     1F53                     	;# 
  8618     1F54                     	;# 
  8619     1F55                     	;# 
  8620     1F65                     	;# 
  8621     1F66                     	;# 
  8622     1F67                     	;# 
  8623     1F68                     	;# 
  8624     1F69                     	;# 
  8625     1F6A                     	;# 
  8626     1F6B                     	;# 
  8627     1FE4                     	;# 
  8628     1FE5                     	;# 
  8629     1FE6                     	;# 
  8630     1FE7                     	;# 
  8631     1FE8                     	;# 
  8632     1FE8                     	;# 
  8633     1FE9                     	;# 
  8634     1FEA                     	;# 
  8635     1FEB                     	;# 
  8636     1FED                     	;# 
  8637     1FEE                     	;# 
  8638     1FEF                     	;# 
  8639     0000                     	;# 
  8640     0001                     	;# 
  8641     0002                     	;# 
  8642     0003                     	;# 
  8643     0004                     	;# 
  8644     0005                     	;# 
  8645     0006                     	;# 
  8646     0007                     	;# 
  8647     0008                     	;# 
  8648     0009                     	;# 
  8649     000A                     	;# 
  8650     000B                     	;# 
  8651     000C                     	;# 
  8652     000D                     	;# 
  8653     000E                     	;# 
  8654     0010                     	;# 
  8655     0012                     	;# 
  8656     0013                     	;# 
  8657     0014                     	;# 
  8658     0016                     	;# 
  8659     0018                     	;# 
  8660     0019                     	;# 
  8661     001A                     	;# 
  8662     001C                     	;# 
  8663     008C                     	;# 
  8664     008C                     	;# 
  8665     008D                     	;# 
  8666     008E                     	;# 
  8667     008E                     	;# 
  8668     008F                     	;# 
  8669     0090                     	;# 
  8670     0090                     	;# 
  8671     0091                     	;# 
  8672     0092                     	;# 
  8673     0092                     	;# 
  8674     0093                     	;# 
  8675     0094                     	;# 
  8676     0094                     	;# 
  8677     0095                     	;# 
  8678     0096                     	;# 
  8679     0096                     	;# 
  8680     0097                     	;# 
  8681     0098                     	;# 
  8682     0099                     	;# 
  8683     009A                     	;# 
  8684     009B                     	;# 
  8685     009B                     	;# 
  8686     009C                     	;# 
  8687     009D                     	;# 
  8688     009D                     	;# 
  8689     009E                     	;# 
  8690     009F                     	;# 
  8691     010C                     	;# 
  8692     010C                     	;# 
  8693     010D                     	;# 
  8694     010E                     	;# 
  8695     010F                     	;# 
  8696     010F                     	;# 
  8697     0110                     	;# 
  8698     0111                     	;# 
  8699     0112                     	;# 
  8700     0113                     	;# 
  8701     0114                     	;# 
  8702     0115                     	;# 
  8703     0116                     	;# 
  8704     0117                     	;# 
  8705     0118                     	;# 
  8706     0119                     	;# 
  8707     0119                     	;# 
  8708     0119                     	;# 
  8709     011A                     	;# 
  8710     011A                     	;# 
  8711     011A                     	;# 
  8712     011B                     	;# 
  8713     011B                     	;# 
  8714     011B                     	;# 
  8715     011B                     	;# 
  8716     011B                     	;# 
  8717     011C                     	;# 
  8718     011C                     	;# 
  8719     011C                     	;# 
  8720     011D                     	;# 
  8721     011D                     	;# 
  8722     011D                     	;# 
  8723     011E                     	;# 
  8724     011E                     	;# 
  8725     011E                     	;# 
  8726     011F                     	;# 
  8727     011F                     	;# 
  8728     011F                     	;# 
  8729     011F                     	;# 
  8730     011F                     	;# 
  8731     018C                     	;# 
  8732     018D                     	;# 
  8733     018E                     	;# 
  8734     018F                     	;# 
  8735     0190                     	;# 
  8736     0191                     	;# 
  8737     0192                     	;# 
  8738     0196                     	;# 
  8739     0197                     	;# 
  8740     0198                     	;# 
  8741     0199                     	;# 
  8742     019A                     	;# 
  8743     019B                     	;# 
  8744     019C                     	;# 
  8745     020C                     	;# 
  8746     020D                     	;# 
  8747     020E                     	;# 
  8748     020E                     	;# 
  8749     020F                     	;# 
  8750     020F                     	;# 
  8751     0210                     	;# 
  8752     0210                     	;# 
  8753     0211                     	;# 
  8754     0211                     	;# 
  8755     0212                     	;# 
  8756     0213                     	;# 
  8757     0214                     	;# 
  8758     0214                     	;# 
  8759     0215                     	;# 
  8760     0215                     	;# 
  8761     0216                     	;# 
  8762     0216                     	;# 
  8763     0217                     	;# 
  8764     0217                     	;# 
  8765     0218                     	;# 
  8766     0219                     	;# 
  8767     021A                     	;# 
  8768     021A                     	;# 
  8769     021B                     	;# 
  8770     021B                     	;# 
  8771     021C                     	;# 
  8772     021C                     	;# 
  8773     021D                     	;# 
  8774     021D                     	;# 
  8775     021E                     	;# 
  8776     021F                     	;# 
  8777     028C                     	;# 
  8778     028C                     	;# 
  8779     028D                     	;# 
  8780     028D                     	;# 
  8781     028E                     	;# 
  8782     028F                     	;# 
  8783     0290                     	;# 
  8784     0291                     	;# 
  8785     0292                     	;# 
  8786     0292                     	;# 
  8787     0293                     	;# 
  8788     0293                     	;# 
  8789     0294                     	;# 
  8790     0295                     	;# 
  8791     0296                     	;# 
  8792     0297                     	;# 
  8793     0298                     	;# 
  8794     0298                     	;# 
  8795     0299                     	;# 
  8796     0299                     	;# 
  8797     029A                     	;# 
  8798     029B                     	;# 
  8799     029C                     	;# 
  8800     029D                     	;# 
  8801     029F                     	;# 
  8802     030C                     	;# 
  8803     030C                     	;# 
  8804     030D                     	;# 
  8805     030E                     	;# 
  8806     030F                     	;# 
  8807     0310                     	;# 
  8808     0310                     	;# 
  8809     0311                     	;# 
  8810     0312                     	;# 
  8811     0313                     	;# 
  8812     0314                     	;# 
  8813     0314                     	;# 
  8814     0315                     	;# 
  8815     0316                     	;# 
  8816     0317                     	;# 
  8817     0318                     	;# 
  8818     0318                     	;# 
  8819     0319                     	;# 
  8820     031A                     	;# 
  8821     031B                     	;# 
  8822     031C                     	;# 
  8823     031C                     	;# 
  8824     031D                     	;# 
  8825     031E                     	;# 
  8826     031F                     	;# 
  8827     038C                     	;# 
  8828     038C                     	;# 
  8829     038D                     	;# 
  8830     038E                     	;# 
  8831     0390                     	;# 
  8832     0390                     	;# 
  8833     0391                     	;# 
  8834     0392                     	;# 
  8835     048C                     	;# 
  8836     048C                     	;# 
  8837     048D                     	;# 
  8838     048E                     	;# 
  8839     048F                     	;# 
  8840     048F                     	;# 
  8841     0490                     	;# 
  8842     0491                     	;# 
  8843     0492                     	;# 
  8844     0492                     	;# 
  8845     0493                     	;# 
  8846     0494                     	;# 
  8847     0495                     	;# 
  8848     0495                     	;# 
  8849     0496                     	;# 
  8850     0497                     	;# 
  8851     0498                     	;# 
  8852     0499                     	;# 
  8853     049A                     	;# 
  8854     049B                     	;# 
  8855     049C                     	;# 
  8856     049D                     	;# 
  8857     050C                     	;# 
  8858     050C                     	;# 
  8859     050D                     	;# 
  8860     050E                     	;# 
  8861     050F                     	;# 
  8862     050F                     	;# 
  8863     0510                     	;# 
  8864     0511                     	;# 
  8865     0512                     	;# 
  8866     0512                     	;# 
  8867     0513                     	;# 
  8868     0514                     	;# 
  8869     0515                     	;# 
  8870     0515                     	;# 
  8871     0516                     	;# 
  8872     0517                     	;# 
  8873     0518                     	;# 
  8874     0519                     	;# 
  8875     051A                     	;# 
  8876     051B                     	;# 
  8877     051C                     	;# 
  8878     051D                     	;# 
  8879     058C                     	;# 
  8880     058C                     	;# 
  8881     058D                     	;# 
  8882     058E                     	;# 
  8883     058F                     	;# 
  8884     058F                     	;# 
  8885     0590                     	;# 
  8886     0591                     	;# 
  8887     0592                     	;# 
  8888     0593                     	;# 
  8889     059C                     	;# 
  8890     059C                     	;# 
  8891     059D                     	;# 
  8892     059D                     	;# 
  8893     059E                     	;# 
  8894     059F                     	;# 
  8895     060C                     	;# 
  8896     060C                     	;# 
  8897     060D                     	;# 
  8898     060D                     	;# 
  8899     060E                     	;# 
  8900     060F                     	;# 
  8901     0610                     	;# 
  8902     0611                     	;# 
  8903     0612                     	;# 
  8904     0613                     	;# 
  8905     0614                     	;# 
  8906     0616                     	;# 
  8907     0616                     	;# 
  8908     0617                     	;# 
  8909     0617                     	;# 
  8910     0618                     	;# 
  8911     0619                     	;# 
  8912     061A                     	;# 
  8913     061B                     	;# 
  8914     061C                     	;# 
  8915     061D                     	;# 
  8916     061E                     	;# 
  8917     068C                     	;# 
  8918     068D                     	;# 
  8919     068E                     	;# 
  8920     068F                     	;# 
  8921     0690                     	;# 
  8922     0691                     	;# 
  8923     0692                     	;# 
  8924     0693                     	;# 
  8925     0694                     	;# 
  8926     070C                     	;# 
  8927     070D                     	;# 
  8928     070E                     	;# 
  8929     070F                     	;# 
  8930     0710                     	;# 
  8931     0711                     	;# 
  8932     0712                     	;# 
  8933     0713                     	;# 
  8934     0714                     	;# 
  8935     0716                     	;# 
  8936     0717                     	;# 
  8937     0718                     	;# 
  8938     0719                     	;# 
  8939     071A                     	;# 
  8940     071B                     	;# 
  8941     071C                     	;# 
  8942     071D                     	;# 
  8943     071E                     	;# 
  8944     0796                     	;# 
  8945     0797                     	;# 
  8946     0798                     	;# 
  8947     0799                     	;# 
  8948     079A                     	;# 
  8949     079B                     	;# 
  8950     079C                     	;# 
  8951     079D                     	;# 
  8952     080C                     	;# 
  8953     080D                     	;# 
  8954     080E                     	;# 
  8955     080F                     	;# 
  8956     0810                     	;# 
  8957     0811                     	;# 
  8958     0813                     	;# 
  8959     0814                     	;# 
  8960     081A                     	;# 
  8961     081A                     	;# 
  8962     081B                     	;# 
  8963     081C                     	;# 
  8964     081C                     	;# 
  8965     081D                     	;# 
  8966     081E                     	;# 
  8967     081F                     	;# 
  8968     088C                     	;# 
  8969     088D                     	;# 
  8970     088E                     	;# 
  8971     088F                     	;# 
  8972     0890                     	;# 
  8973     0891                     	;# 
  8974     0892                     	;# 
  8975     0893                     	;# 
  8976     0895                     	;# 
  8977     0896                     	;# 
  8978     0897                     	;# 
  8979     0898                     	;# 
  8980     0899                     	;# 
  8981     089A                     	;# 
  8982     089B                     	;# 
  8983     090C                     	;# 
  8984     090E                     	;# 
  8985     090F                     	;# 
  8986     091F                     	;# 
  8987     098F                     	;# 
  8988     098F                     	;# 
  8989     0990                     	;# 
  8990     0991                     	;# 
  8991     0992                     	;# 
  8992     0993                     	;# 
  8993     0994                     	;# 
  8994     0995                     	;# 
  8995     0996                     	;# 
  8996     0997                     	;# 
  8997     0A19                     	;# 
  8998     0A19                     	;# 
  8999     0A1A                     	;# 
  9000     0A1A                     	;# 
  9001     0A1B                     	;# 
  9002     0A1B                     	;# 
  9003     0A1B                     	;# 
  9004     0A1C                     	;# 
  9005     0A1C                     	;# 
  9006     0A1D                     	;# 
  9007     0A1D                     	;# 
  9008     0A1E                     	;# 
  9009     0A1E                     	;# 
  9010     0A1F                     	;# 
  9011     0A1F                     	;# 
  9012     0A1F                     	;# 
  9013     1E0F                     	;# 
  9014     1E10                     	;# 
  9015     1E11                     	;# 
  9016     1E12                     	;# 
  9017     1E13                     	;# 
  9018     1E14                     	;# 
  9019     1E15                     	;# 
  9020     1E16                     	;# 
  9021     1E17                     	;# 
  9022     1E18                     	;# 
  9023     1E19                     	;# 
  9024     1E1A                     	;# 
  9025     1E1B                     	;# 
  9026     1E1C                     	;# 
  9027     1E1D                     	;# 
  9028     1E1E                     	;# 
  9029     1E1F                     	;# 
  9030     1E20                     	;# 
  9031     1E21                     	;# 
  9032     1E22                     	;# 
  9033     1E23                     	;# 
  9034     1E24                     	;# 
  9035     1E25                     	;# 
  9036     1E26                     	;# 
  9037     1E27                     	;# 
  9038     1E28                     	;# 
  9039     1E29                     	;# 
  9040     1E2A                     	;# 
  9041     1E2B                     	;# 
  9042     1E2C                     	;# 
  9043     1E2D                     	;# 
  9044     1E2E                     	;# 
  9045     1E2F                     	;# 
  9046     1E30                     	;# 
  9047     1E31                     	;# 
  9048     1E32                     	;# 
  9049     1E33                     	;# 
  9050     1E34                     	;# 
  9051     1E35                     	;# 
  9052     1E36                     	;# 
  9053     1E37                     	;# 
  9054     1E8F                     	;# 
  9055     1E90                     	;# 
  9056     1E91                     	;# 
  9057     1E92                     	;# 
  9058     1E93                     	;# 
  9059     1E94                     	;# 
  9060     1E95                     	;# 
  9061     1E96                     	;# 
  9062     1E97                     	;# 
  9063     1E9C                     	;# 
  9064     1E9D                     	;# 
  9065     1E9E                     	;# 
  9066     1EA1                     	;# 
  9067     1EA2                     	;# 
  9068     1EA3                     	;# 
  9069     1EA4                     	;# 
  9070     1EA5                     	;# 
  9071     1EA9                     	;# 
  9072     1EAA                     	;# 
  9073     1EAB                     	;# 
  9074     1EAC                     	;# 
  9075     1EB1                     	;# 
  9076     1EB2                     	;# 
  9077     1EB3                     	;# 
  9078     1EB8                     	;# 
  9079     1EB9                     	;# 
  9080     1EBA                     	;# 
  9081     1EBB                     	;# 
  9082     1EBC                     	;# 
  9083     1EBD                     	;# 
  9084     1EBE                     	;# 
  9085     1EC3                     	;# 
  9086     1EC5                     	;# 
  9087     1EC6                     	;# 
  9088     1EC7                     	;# 
  9089     1EC8                     	;# 
  9090     1EC9                     	;# 
  9091     1ECA                     	;# 
  9092     1ECB                     	;# 
  9093     1ECC                     	;# 
  9094     1ECD                     	;# 
  9095     1ECE                     	;# 
  9096     1F10                     	;# 
  9097     1F11                     	;# 
  9098     1F12                     	;# 
  9099     1F13                     	;# 
  9100     1F14                     	;# 
  9101     1F15                     	;# 
  9102     1F16                     	;# 
  9103     1F17                     	;# 
  9104     1F18                     	;# 
  9105     1F19                     	;# 
  9106     1F1A                     	;# 
  9107     1F1B                     	;# 
  9108     1F1C                     	;# 
  9109     1F1D                     	;# 
  9110     1F1E                     	;# 
  9111     1F1F                     	;# 
  9112     1F20                     	;# 
  9113     1F21                     	;# 
  9114     1F22                     	;# 
  9115     1F23                     	;# 
  9116     1F24                     	;# 
  9117     1F25                     	;# 
  9118     1F26                     	;# 
  9119     1F27                     	;# 
  9120     1F38                     	;# 
  9121     1F39                     	;# 
  9122     1F3A                     	;# 
  9123     1F3B                     	;# 
  9124     1F3C                     	;# 
  9125     1F3D                     	;# 
  9126     1F3E                     	;# 
  9127     1F3F                     	;# 
  9128     1F43                     	;# 
  9129     1F44                     	;# 
  9130     1F45                     	;# 
  9131     1F46                     	;# 
  9132     1F47                     	;# 
  9133     1F48                     	;# 
  9134     1F49                     	;# 
  9135     1F4A                     	;# 
  9136     1F4E                     	;# 
  9137     1F4F                     	;# 
  9138     1F50                     	;# 
  9139     1F51                     	;# 
  9140     1F52                     	;# 
  9141     1F53                     	;# 
  9142     1F54                     	;# 
  9143     1F55                     	;# 
  9144     1F65                     	;# 
  9145     1F66                     	;# 
  9146     1F67                     	;# 
  9147     1F68                     	;# 
  9148     1F69                     	;# 
  9149     1F6A                     	;# 
  9150     1F6B                     	;# 
  9151     1FE4                     	;# 
  9152     1FE5                     	;# 
  9153     1FE6                     	;# 
  9154     1FE7                     	;# 
  9155     1FE8                     	;# 
  9156     1FE8                     	;# 
  9157     1FE9                     	;# 
  9158     1FEA                     	;# 
  9159     1FEB                     	;# 
  9160     1FED                     	;# 
  9161     1FEE                     	;# 
  9162     1FEF                     	;# 
  9163     0000                     	;# 
  9164     0001                     	;# 
  9165     0002                     	;# 
  9166     0003                     	;# 
  9167     0004                     	;# 
  9168     0005                     	;# 
  9169     0006                     	;# 
  9170     0007                     	;# 
  9171     0008                     	;# 
  9172     0009                     	;# 
  9173     000A                     	;# 
  9174     000B                     	;# 
  9175     000C                     	;# 
  9176     000D                     	;# 
  9177     000E                     	;# 
  9178     0010                     	;# 
  9179     0012                     	;# 
  9180     0013                     	;# 
  9181     0014                     	;# 
  9182     0016                     	;# 
  9183     0018                     	;# 
  9184     0019                     	;# 
  9185     001A                     	;# 
  9186     001C                     	;# 
  9187     008C                     	;# 
  9188     008C                     	;# 
  9189     008D                     	;# 
  9190     008E                     	;# 
  9191     008E                     	;# 
  9192     008F                     	;# 
  9193     0090                     	;# 
  9194     0090                     	;# 
  9195     0091                     	;# 
  9196     0092                     	;# 
  9197     0092                     	;# 
  9198     0093                     	;# 
  9199     0094                     	;# 
  9200     0094                     	;# 
  9201     0095                     	;# 
  9202     0096                     	;# 
  9203     0096                     	;# 
  9204     0097                     	;# 
  9205     0098                     	;# 
  9206     0099                     	;# 
  9207     009A                     	;# 
  9208     009B                     	;# 
  9209     009B                     	;# 
  9210     009C                     	;# 
  9211     009D                     	;# 
  9212     009D                     	;# 
  9213     009E                     	;# 
  9214     009F                     	;# 
  9215     010C                     	;# 
  9216     010C                     	;# 
  9217     010D                     	;# 
  9218     010E                     	;# 
  9219     010F                     	;# 
  9220     010F                     	;# 
  9221     0110                     	;# 
  9222     0111                     	;# 
  9223     0112                     	;# 
  9224     0113                     	;# 
  9225     0114                     	;# 
  9226     0115                     	;# 
  9227     0116                     	;# 
  9228     0117                     	;# 
  9229     0118                     	;# 
  9230     0119                     	;# 
  9231     0119                     	;# 
  9232     0119                     	;# 
  9233     011A                     	;# 
  9234     011A                     	;# 
  9235     011A                     	;# 
  9236     011B                     	;# 
  9237     011B                     	;# 
  9238     011B                     	;# 
  9239     011B                     	;# 
  9240     011B                     	;# 
  9241     011C                     	;# 
  9242     011C                     	;# 
  9243     011C                     	;# 
  9244     011D                     	;# 
  9245     011D                     	;# 
  9246     011D                     	;# 
  9247     011E                     	;# 
  9248     011E                     	;# 
  9249     011E                     	;# 
  9250     011F                     	;# 
  9251     011F                     	;# 
  9252     011F                     	;# 
  9253     011F                     	;# 
  9254     011F                     	;# 
  9255     018C                     	;# 
  9256     018D                     	;# 
  9257     018E                     	;# 
  9258     018F                     	;# 
  9259     0190                     	;# 
  9260     0191                     	;# 
  9261     0192                     	;# 
  9262     0196                     	;# 
  9263     0197                     	;# 
  9264     0198                     	;# 
  9265     0199                     	;# 
  9266     019A                     	;# 
  9267     019B                     	;# 
  9268     019C                     	;# 
  9269     020C                     	;# 
  9270     020D                     	;# 
  9271     020E                     	;# 
  9272     020E                     	;# 
  9273     020F                     	;# 
  9274     020F                     	;# 
  9275     0210                     	;# 
  9276     0210                     	;# 
  9277     0211                     	;# 
  9278     0211                     	;# 
  9279     0212                     	;# 
  9280     0213                     	;# 
  9281     0214                     	;# 
  9282     0214                     	;# 
  9283     0215                     	;# 
  9284     0215                     	;# 
  9285     0216                     	;# 
  9286     0216                     	;# 
  9287     0217                     	;# 
  9288     0217                     	;# 
  9289     0218                     	;# 
  9290     0219                     	;# 
  9291     021A                     	;# 
  9292     021A                     	;# 
  9293     021B                     	;# 
  9294     021B                     	;# 
  9295     021C                     	;# 
  9296     021C                     	;# 
  9297     021D                     	;# 
  9298     021D                     	;# 
  9299     021E                     	;# 
  9300     021F                     	;# 
  9301     028C                     	;# 
  9302     028C                     	;# 
  9303     028D                     	;# 
  9304     028D                     	;# 
  9305     028E                     	;# 
  9306     028F                     	;# 
  9307     0290                     	;# 
  9308     0291                     	;# 
  9309     0292                     	;# 
  9310     0292                     	;# 
  9311     0293                     	;# 
  9312     0293                     	;# 
  9313     0294                     	;# 
  9314     0295                     	;# 
  9315     0296                     	;# 
  9316     0297                     	;# 
  9317     0298                     	;# 
  9318     0298                     	;# 
  9319     0299                     	;# 
  9320     0299                     	;# 
  9321     029A                     	;# 
  9322     029B                     	;# 
  9323     029C                     	;# 
  9324     029D                     	;# 
  9325     029F                     	;# 
  9326     030C                     	;# 
  9327     030C                     	;# 
  9328     030D                     	;# 
  9329     030E                     	;# 
  9330     030F                     	;# 
  9331     0310                     	;# 
  9332     0310                     	;# 
  9333     0311                     	;# 
  9334     0312                     	;# 
  9335     0313                     	;# 
  9336     0314                     	;# 
  9337     0314                     	;# 
  9338     0315                     	;# 
  9339     0316                     	;# 
  9340     0317                     	;# 
  9341     0318                     	;# 
  9342     0318                     	;# 
  9343     0319                     	;# 
  9344     031A                     	;# 
  9345     031B                     	;# 
  9346     031C                     	;# 
  9347     031C                     	;# 
  9348     031D                     	;# 
  9349     031E                     	;# 
  9350     031F                     	;# 
  9351     038C                     	;# 
  9352     038C                     	;# 
  9353     038D                     	;# 
  9354     038E                     	;# 
  9355     0390                     	;# 
  9356     0390                     	;# 
  9357     0391                     	;# 
  9358     0392                     	;# 
  9359     048C                     	;# 
  9360     048C                     	;# 
  9361     048D                     	;# 
  9362     048E                     	;# 
  9363     048F                     	;# 
  9364     048F                     	;# 
  9365     0490                     	;# 
  9366     0491                     	;# 
  9367     0492                     	;# 
  9368     0492                     	;# 
  9369     0493                     	;# 
  9370     0494                     	;# 
  9371     0495                     	;# 
  9372     0495                     	;# 
  9373     0496                     	;# 
  9374     0497                     	;# 
  9375     0498                     	;# 
  9376     0499                     	;# 
  9377     049A                     	;# 
  9378     049B                     	;# 
  9379     049C                     	;# 
  9380     049D                     	;# 
  9381     050C                     	;# 
  9382     050C                     	;# 
  9383     050D                     	;# 
  9384     050E                     	;# 
  9385     050F                     	;# 
  9386     050F                     	;# 
  9387     0510                     	;# 
  9388     0511                     	;# 
  9389     0512                     	;# 
  9390     0512                     	;# 
  9391     0513                     	;# 
  9392     0514                     	;# 
  9393     0515                     	;# 
  9394     0515                     	;# 
  9395     0516                     	;# 
  9396     0517                     	;# 
  9397     0518                     	;# 
  9398     0519                     	;# 
  9399     051A                     	;# 
  9400     051B                     	;# 
  9401     051C                     	;# 
  9402     051D                     	;# 
  9403     058C                     	;# 
  9404     058C                     	;# 
  9405     058D                     	;# 
  9406     058E                     	;# 
  9407     058F                     	;# 
  9408     058F                     	;# 
  9409     0590                     	;# 
  9410     0591                     	;# 
  9411     0592                     	;# 
  9412     0593                     	;# 
  9413     059C                     	;# 
  9414     059C                     	;# 
  9415     059D                     	;# 
  9416     059D                     	;# 
  9417     059E                     	;# 
  9418     059F                     	;# 
  9419     060C                     	;# 
  9420     060C                     	;# 
  9421     060D                     	;# 
  9422     060D                     	;# 
  9423     060E                     	;# 
  9424     060F                     	;# 
  9425     0610                     	;# 
  9426     0611                     	;# 
  9427     0612                     	;# 
  9428     0613                     	;# 
  9429     0614                     	;# 
  9430     0616                     	;# 
  9431     0616                     	;# 
  9432     0617                     	;# 
  9433     0617                     	;# 
  9434     0618                     	;# 
  9435     0619                     	;# 
  9436     061A                     	;# 
  9437     061B                     	;# 
  9438     061C                     	;# 
  9439     061D                     	;# 
  9440     061E                     	;# 
  9441     068C                     	;# 
  9442     068D                     	;# 
  9443     068E                     	;# 
  9444     068F                     	;# 
  9445     0690                     	;# 
  9446     0691                     	;# 
  9447     0692                     	;# 
  9448     0693                     	;# 
  9449     0694                     	;# 
  9450     070C                     	;# 
  9451     070D                     	;# 
  9452     070E                     	;# 
  9453     070F                     	;# 
  9454     0710                     	;# 
  9455     0711                     	;# 
  9456     0712                     	;# 
  9457     0713                     	;# 
  9458     0714                     	;# 
  9459     0716                     	;# 
  9460     0717                     	;# 
  9461     0718                     	;# 
  9462     0719                     	;# 
  9463     071A                     	;# 
  9464     071B                     	;# 
  9465     071C                     	;# 
  9466     071D                     	;# 
  9467     071E                     	;# 
  9468     0796                     	;# 
  9469     0797                     	;# 
  9470     0798                     	;# 
  9471     0799                     	;# 
  9472     079A                     	;# 
  9473     079B                     	;# 
  9474     079C                     	;# 
  9475     079D                     	;# 
  9476     080C                     	;# 
  9477     080D                     	;# 
  9478     080E                     	;# 
  9479     080F                     	;# 
  9480     0810                     	;# 
  9481     0811                     	;# 
  9482     0813                     	;# 
  9483     0814                     	;# 
  9484     081A                     	;# 
  9485     081A                     	;# 
  9486     081B                     	;# 
  9487     081C                     	;# 
  9488     081C                     	;# 
  9489     081D                     	;# 
  9490     081E                     	;# 
  9491     081F                     	;# 
  9492     088C                     	;# 
  9493     088D                     	;# 
  9494     088E                     	;# 
  9495     088F                     	;# 
  9496     0890                     	;# 
  9497     0891                     	;# 
  9498     0892                     	;# 
  9499     0893                     	;# 
  9500     0895                     	;# 
  9501     0896                     	;# 
  9502     0897                     	;# 
  9503     0898                     	;# 
  9504     0899                     	;# 
  9505     089A                     	;# 
  9506     089B                     	;# 
  9507     090C                     	;# 
  9508     090E                     	;# 
  9509     090F                     	;# 
  9510     091F                     	;# 
  9511     098F                     	;# 
  9512     098F                     	;# 
  9513     0990                     	;# 
  9514     0991                     	;# 
  9515     0992                     	;# 
  9516     0993                     	;# 
  9517     0994                     	;# 
  9518     0995                     	;# 
  9519     0996                     	;# 
  9520     0997                     	;# 
  9521     0A19                     	;# 
  9522     0A19                     	;# 
  9523     0A1A                     	;# 
  9524     0A1A                     	;# 
  9525     0A1B                     	;# 
  9526     0A1B                     	;# 
  9527     0A1B                     	;# 
  9528     0A1C                     	;# 
  9529     0A1C                     	;# 
  9530     0A1D                     	;# 
  9531     0A1D                     	;# 
  9532     0A1E                     	;# 
  9533     0A1E                     	;# 
  9534     0A1F                     	;# 
  9535     0A1F                     	;# 
  9536     0A1F                     	;# 
  9537     1E0F                     	;# 
  9538     1E10                     	;# 
  9539     1E11                     	;# 
  9540     1E12                     	;# 
  9541     1E13                     	;# 
  9542     1E14                     	;# 
  9543     1E15                     	;# 
  9544     1E16                     	;# 
  9545     1E17                     	;# 
  9546     1E18                     	;# 
  9547     1E19                     	;# 
  9548     1E1A                     	;# 
  9549     1E1B                     	;# 
  9550     1E1C                     	;# 
  9551     1E1D                     	;# 
  9552     1E1E                     	;# 
  9553     1E1F                     	;# 
  9554     1E20                     	;# 
  9555     1E21                     	;# 
  9556     1E22                     	;# 
  9557     1E23                     	;# 
  9558     1E24                     	;# 
  9559     1E25                     	;# 
  9560     1E26                     	;# 
  9561     1E27                     	;# 
  9562     1E28                     	;# 
  9563     1E29                     	;# 
  9564     1E2A                     	;# 
  9565     1E2B                     	;# 
  9566     1E2C                     	;# 
  9567     1E2D                     	;# 
  9568     1E2E                     	;# 
  9569     1E2F                     	;# 
  9570     1E30                     	;# 
  9571     1E31                     	;# 
  9572     1E32                     	;# 
  9573     1E33                     	;# 
  9574     1E34                     	;# 
  9575     1E35                     	;# 
  9576     1E36                     	;# 
  9577     1E37                     	;# 
  9578     1E8F                     	;# 
  9579     1E90                     	;# 
  9580     1E91                     	;# 
  9581     1E92                     	;# 
  9582     1E93                     	;# 
  9583     1E94                     	;# 
  9584     1E95                     	;# 
  9585     1E96                     	;# 
  9586     1E97                     	;# 
  9587     1E9C                     	;# 
  9588     1E9D                     	;# 
  9589     1E9E                     	;# 
  9590     1EA1                     	;# 
  9591     1EA2                     	;# 
  9592     1EA3                     	;# 
  9593     1EA4                     	;# 
  9594     1EA5                     	;# 
  9595     1EA9                     	;# 
  9596     1EAA                     	;# 
  9597     1EAB                     	;# 
  9598     1EAC                     	;# 
  9599     1EB1                     	;# 
  9600     1EB2                     	;# 
  9601     1EB3                     	;# 
  9602     1EB8                     	;# 
  9603     1EB9                     	;# 
  9604     1EBA                     	;# 
  9605     1EBB                     	;# 
  9606     1EBC                     	;# 
  9607     1EBD                     	;# 
  9608     1EBE                     	;# 
  9609     1EC3                     	;# 
  9610     1EC5                     	;# 
  9611     1EC6                     	;# 
  9612     1EC7                     	;# 
  9613     1EC8                     	;# 
  9614     1EC9                     	;# 
  9615     1ECA                     	;# 
  9616     1ECB                     	;# 
  9617     1ECC                     	;# 
  9618     1ECD                     	;# 
  9619     1ECE                     	;# 
  9620     1F10                     	;# 
  9621     1F11                     	;# 
  9622     1F12                     	;# 
  9623     1F13                     	;# 
  9624     1F14                     	;# 
  9625     1F15                     	;# 
  9626     1F16                     	;# 
  9627     1F17                     	;# 
  9628     1F18                     	;# 
  9629     1F19                     	;# 
  9630     1F1A                     	;# 
  9631     1F1B                     	;# 
  9632     1F1C                     	;# 
  9633     1F1D                     	;# 
  9634     1F1E                     	;# 
  9635     1F1F                     	;# 
  9636     1F20                     	;# 
  9637     1F21                     	;# 
  9638     1F22                     	;# 
  9639     1F23                     	;# 
  9640     1F24                     	;# 
  9641     1F25                     	;# 
  9642     1F26                     	;# 
  9643     1F27                     	;# 
  9644     1F38                     	;# 
  9645     1F39                     	;# 
  9646     1F3A                     	;# 
  9647     1F3B                     	;# 
  9648     1F3C                     	;# 
  9649     1F3D                     	;# 
  9650     1F3E                     	;# 
  9651     1F3F                     	;# 
  9652     1F43                     	;# 
  9653     1F44                     	;# 
  9654     1F45                     	;# 
  9655     1F46                     	;# 
  9656     1F47                     	;# 
  9657     1F48                     	;# 
  9658     1F49                     	;# 
  9659     1F4A                     	;# 
  9660     1F4E                     	;# 
  9661     1F4F                     	;# 
  9662     1F50                     	;# 
  9663     1F51                     	;# 
  9664     1F52                     	;# 
  9665     1F53                     	;# 
  9666     1F54                     	;# 
  9667     1F55                     	;# 
  9668     1F65                     	;# 
  9669     1F66                     	;# 
  9670     1F67                     	;# 
  9671     1F68                     	;# 
  9672     1F69                     	;# 
  9673     1F6A                     	;# 
  9674     1F6B                     	;# 
  9675     1FE4                     	;# 
  9676     1FE5                     	;# 
  9677     1FE6                     	;# 
  9678     1FE7                     	;# 
  9679     1FE8                     	;# 
  9680     1FE8                     	;# 
  9681     1FE9                     	;# 
  9682     1FEA                     	;# 
  9683     1FEB                     	;# 
  9684     1FED                     	;# 
  9685     1FEE                     	;# 
  9686     1FEF                     	;# 
  9687     0000                     	;# 
  9688     0001                     	;# 
  9689     0002                     	;# 
  9690     0003                     	;# 
  9691     0004                     	;# 
  9692     0005                     	;# 
  9693     0006                     	;# 
  9694     0007                     	;# 
  9695     0008                     	;# 
  9696     0009                     	;# 
  9697     000A                     	;# 
  9698     000B                     	;# 
  9699     000C                     	;# 
  9700     000D                     	;# 
  9701     000E                     	;# 
  9702     0010                     	;# 
  9703     0012                     	;# 
  9704     0013                     	;# 
  9705     0014                     	;# 
  9706     0016                     	;# 
  9707     0018                     	;# 
  9708     0019                     	;# 
  9709     001A                     	;# 
  9710     001C                     	;# 
  9711     008C                     	;# 
  9712     008C                     	;# 
  9713     008D                     	;# 
  9714     008E                     	;# 
  9715     008E                     	;# 
  9716     008F                     	;# 
  9717     0090                     	;# 
  9718     0090                     	;# 
  9719     0091                     	;# 
  9720     0092                     	;# 
  9721     0092                     	;# 
  9722     0093                     	;# 
  9723     0094                     	;# 
  9724     0094                     	;# 
  9725     0095                     	;# 
  9726     0096                     	;# 
  9727     0096                     	;# 
  9728     0097                     	;# 
  9729     0098                     	;# 
  9730     0099                     	;# 
  9731     009A                     	;# 
  9732     009B                     	;# 
  9733     009B                     	;# 
  9734     009C                     	;# 
  9735     009D                     	;# 
  9736     009D                     	;# 
  9737     009E                     	;# 
  9738     009F                     	;# 
  9739     010C                     	;# 
  9740     010C                     	;# 
  9741     010D                     	;# 
  9742     010E                     	;# 
  9743     010F                     	;# 
  9744     010F                     	;# 
  9745     0110                     	;# 
  9746     0111                     	;# 
  9747     0112                     	;# 
  9748     0113                     	;# 
  9749     0114                     	;# 
  9750     0115                     	;# 
  9751     0116                     	;# 
  9752     0117                     	;# 
  9753     0118                     	;# 
  9754     0119                     	;# 
  9755     0119                     	;# 
  9756     0119                     	;# 
  9757     011A                     	;# 
  9758     011A                     	;# 
  9759     011A                     	;# 
  9760     011B                     	;# 
  9761     011B                     	;# 
  9762     011B                     	;# 
  9763     011B                     	;# 
  9764     011B                     	;# 
  9765     011C                     	;# 
  9766     011C                     	;# 
  9767     011C                     	;# 
  9768     011D                     	;# 
  9769     011D                     	;# 
  9770     011D                     	;# 
  9771     011E                     	;# 
  9772     011E                     	;# 
  9773     011E                     	;# 
  9774     011F                     	;# 
  9775     011F                     	;# 
  9776     011F                     	;# 
  9777     011F                     	;# 
  9778     011F                     	;# 
  9779     018C                     	;# 
  9780     018D                     	;# 
  9781     018E                     	;# 
  9782     018F                     	;# 
  9783     0190                     	;# 
  9784     0191                     	;# 
  9785     0192                     	;# 
  9786     0196                     	;# 
  9787     0197                     	;# 
  9788     0198                     	;# 
  9789     0199                     	;# 
  9790     019A                     	;# 
  9791     019B                     	;# 
  9792     019C                     	;# 
  9793     020C                     	;# 
  9794     020D                     	;# 
  9795     020E                     	;# 
  9796     020E                     	;# 
  9797     020F                     	;# 
  9798     020F                     	;# 
  9799     0210                     	;# 
  9800     0210                     	;# 
  9801     0211                     	;# 
  9802     0211                     	;# 
  9803     0212                     	;# 
  9804     0213                     	;# 
  9805     0214                     	;# 
  9806     0214                     	;# 
  9807     0215                     	;# 
  9808     0215                     	;# 
  9809     0216                     	;# 
  9810     0216                     	;# 
  9811     0217                     	;# 
  9812     0217                     	;# 
  9813     0218                     	;# 
  9814     0219                     	;# 
  9815     021A                     	;# 
  9816     021A                     	;# 
  9817     021B                     	;# 
  9818     021B                     	;# 
  9819     021C                     	;# 
  9820     021C                     	;# 
  9821     021D                     	;# 
  9822     021D                     	;# 
  9823     021E                     	;# 
  9824     021F                     	;# 
  9825     028C                     	;# 
  9826     028C                     	;# 
  9827     028D                     	;# 
  9828     028D                     	;# 
  9829     028E                     	;# 
  9830     028F                     	;# 
  9831     0290                     	;# 
  9832     0291                     	;# 
  9833     0292                     	;# 
  9834     0292                     	;# 
  9835     0293                     	;# 
  9836     0293                     	;# 
  9837     0294                     	;# 
  9838     0295                     	;# 
  9839     0296                     	;# 
  9840     0297                     	;# 
  9841     0298                     	;# 
  9842     0298                     	;# 
  9843     0299                     	;# 
  9844     0299                     	;# 
  9845     029A                     	;# 
  9846     029B                     	;# 
  9847     029C                     	;# 
  9848     029D                     	;# 
  9849     029F                     	;# 
  9850     030C                     	;# 
  9851     030C                     	;# 
  9852     030D                     	;# 
  9853     030E                     	;# 
  9854     030F                     	;# 
  9855     0310                     	;# 
  9856     0310                     	;# 
  9857     0311                     	;# 
  9858     0312                     	;# 
  9859     0313                     	;# 
  9860     0314                     	;# 
  9861     0314                     	;# 
  9862     0315                     	;# 
  9863     0316                     	;# 
  9864     0317                     	;# 
  9865     0318                     	;# 
  9866     0318                     	;# 
  9867     0319                     	;# 
  9868     031A                     	;# 
  9869     031B                     	;# 
  9870     031C                     	;# 
  9871     031C                     	;# 
  9872     031D                     	;# 
  9873     031E                     	;# 
  9874     031F                     	;# 
  9875     038C                     	;# 
  9876     038C                     	;# 
  9877     038D                     	;# 
  9878     038E                     	;# 
  9879     0390                     	;# 
  9880     0390                     	;# 
  9881     0391                     	;# 
  9882     0392                     	;# 
  9883     048C                     	;# 
  9884     048C                     	;# 
  9885     048D                     	;# 
  9886     048E                     	;# 
  9887     048F                     	;# 
  9888     048F                     	;# 
  9889     0490                     	;# 
  9890     0491                     	;# 
  9891     0492                     	;# 
  9892     0492                     	;# 
  9893     0493                     	;# 
  9894     0494                     	;# 
  9895     0495                     	;# 
  9896     0495                     	;# 
  9897     0496                     	;# 
  9898     0497                     	;# 
  9899     0498                     	;# 
  9900     0499                     	;# 
  9901     049A                     	;# 
  9902     049B                     	;# 
  9903     049C                     	;# 
  9904     049D                     	;# 
  9905     050C                     	;# 
  9906     050C                     	;# 
  9907     050D                     	;# 
  9908     050E                     	;# 
  9909     050F                     	;# 
  9910     050F                     	;# 
  9911     0510                     	;# 
  9912     0511                     	;# 
  9913     0512                     	;# 
  9914     0512                     	;# 
  9915     0513                     	;# 
  9916     0514                     	;# 
  9917     0515                     	;# 
  9918     0515                     	;# 
  9919     0516                     	;# 
  9920     0517                     	;# 
  9921     0518                     	;# 
  9922     0519                     	;# 
  9923     051A                     	;# 
  9924     051B                     	;# 
  9925     051C                     	;# 
  9926     051D                     	;# 
  9927     058C                     	;# 
  9928     058C                     	;# 
  9929     058D                     	;# 
  9930     058E                     	;# 
  9931     058F                     	;# 
  9932     058F                     	;# 
  9933     0590                     	;# 
  9934     0591                     	;# 
  9935     0592                     	;# 
  9936     0593                     	;# 
  9937     059C                     	;# 
  9938     059C                     	;# 
  9939     059D                     	;# 
  9940     059D                     	;# 
  9941     059E                     	;# 
  9942     059F                     	;# 
  9943     060C                     	;# 
  9944     060C                     	;# 
  9945     060D                     	;# 
  9946     060D                     	;# 
  9947     060E                     	;# 
  9948     060F                     	;# 
  9949     0610                     	;# 
  9950     0611                     	;# 
  9951     0612                     	;# 
  9952     0613                     	;# 
  9953     0614                     	;# 
  9954     0616                     	;# 
  9955     0616                     	;# 
  9956     0617                     	;# 
  9957     0617                     	;# 
  9958     0618                     	;# 
  9959     0619                     	;# 
  9960     061A                     	;# 
  9961     061B                     	;# 
  9962     061C                     	;# 
  9963     061D                     	;# 
  9964     061E                     	;# 
  9965     068C                     	;# 
  9966     068D                     	;# 
  9967     068E                     	;# 
  9968     068F                     	;# 
  9969     0690                     	;# 
  9970     0691                     	;# 
  9971     0692                     	;# 
  9972     0693                     	;# 
  9973     0694                     	;# 
  9974     070C                     	;# 
  9975     070D                     	;# 
  9976     070E                     	;# 
  9977     070F                     	;# 
  9978     0710                     	;# 
  9979     0711                     	;# 
  9980     0712                     	;# 
  9981     0713                     	;# 
  9982     0714                     	;# 
  9983     0716                     	;# 
  9984     0717                     	;# 
  9985     0718                     	;# 
  9986     0719                     	;# 
  9987     071A                     	;# 
  9988     071B                     	;# 
  9989     071C                     	;# 
  9990     071D                     	;# 
  9991     071E                     	;# 
  9992     0796                     	;# 
  9993     0797                     	;# 
  9994     0798                     	;# 
  9995     0799                     	;# 
  9996     079A                     	;# 
  9997     079B                     	;# 
  9998     079C                     	;# 
  9999     079D                     	;# 
 10000     080C                     	;# 
 10001     080D                     	;# 
 10002     080E                     	;# 
 10003     080F                     	;# 
 10004     0810                     	;# 
 10005     0811                     	;# 
 10006     0813                     	;# 
 10007     0814                     	;# 
 10008     081A                     	;# 
 10009     081A                     	;# 
 10010     081B                     	;# 
 10011     081C                     	;# 
 10012     081C                     	;# 
 10013     081D                     	;# 
 10014     081E                     	;# 
 10015     081F                     	;# 
 10016     088C                     	;# 
 10017     088D                     	;# 
 10018     088E                     	;# 
 10019     088F                     	;# 
 10020     0890                     	;# 
 10021     0891                     	;# 
 10022     0892                     	;# 
 10023     0893                     	;# 
 10024     0895                     	;# 
 10025     0896                     	;# 
 10026     0897                     	;# 
 10027     0898                     	;# 
 10028     0899                     	;# 
 10029     089A                     	;# 
 10030     089B                     	;# 
 10031     090C                     	;# 
 10032     090E                     	;# 
 10033     090F                     	;# 
 10034     091F                     	;# 
 10035     098F                     	;# 
 10036     098F                     	;# 
 10037     0990                     	;# 
 10038     0991                     	;# 
 10039     0992                     	;# 
 10040     0993                     	;# 
 10041     0994                     	;# 
 10042     0995                     	;# 
 10043     0996                     	;# 
 10044     0997                     	;# 
 10045     0A19                     	;# 
 10046     0A19                     	;# 
 10047     0A1A                     	;# 
 10048     0A1A                     	;# 
 10049     0A1B                     	;# 
 10050     0A1B                     	;# 
 10051     0A1B                     	;# 
 10052     0A1C                     	;# 
 10053     0A1C                     	;# 
 10054     0A1D                     	;# 
 10055     0A1D                     	;# 
 10056     0A1E                     	;# 
 10057     0A1E                     	;# 
 10058     0A1F                     	;# 
 10059     0A1F                     	;# 
 10060     0A1F                     	;# 
 10061     1E0F                     	;# 
 10062     1E10                     	;# 
 10063     1E11                     	;# 
 10064     1E12                     	;# 
 10065     1E13                     	;# 
 10066     1E14                     	;# 
 10067     1E15                     	;# 
 10068     1E16                     	;# 
 10069     1E17                     	;# 
 10070     1E18                     	;# 
 10071     1E19                     	;# 
 10072     1E1A                     	;# 
 10073     1E1B                     	;# 
 10074     1E1C                     	;# 
 10075     1E1D                     	;# 
 10076     1E1E                     	;# 
 10077     1E1F                     	;# 
 10078     1E20                     	;# 
 10079     1E21                     	;# 
 10080     1E22                     	;# 
 10081     1E23                     	;# 
 10082     1E24                     	;# 
 10083     1E25                     	;# 
 10084     1E26                     	;# 
 10085     1E27                     	;# 
 10086     1E28                     	;# 
 10087     1E29                     	;# 
 10088     1E2A                     	;# 
 10089     1E2B                     	;# 
 10090     1E2C                     	;# 
 10091     1E2D                     	;# 
 10092     1E2E                     	;# 
 10093     1E2F                     	;# 
 10094     1E30                     	;# 
 10095     1E31                     	;# 
 10096     1E32                     	;# 
 10097     1E33                     	;# 
 10098     1E34                     	;# 
 10099     1E35                     	;# 
 10100     1E36                     	;# 
 10101     1E37                     	;# 
 10102     1E8F                     	;# 
 10103     1E90                     	;# 
 10104     1E91                     	;# 
 10105     1E92                     	;# 
 10106     1E93                     	;# 
 10107     1E94                     	;# 
 10108     1E95                     	;# 
 10109     1E96                     	;# 
 10110     1E97                     	;# 
 10111     1E9C                     	;# 
 10112     1E9D                     	;# 
 10113     1E9E                     	;# 
 10114     1EA1                     	;# 
 10115     1EA2                     	;# 
 10116     1EA3                     	;# 
 10117     1EA4                     	;# 
 10118     1EA5                     	;# 
 10119     1EA9                     	;# 
 10120     1EAA                     	;# 
 10121     1EAB                     	;# 
 10122     1EAC                     	;# 
 10123     1EB1                     	;# 
 10124     1EB2                     	;# 
 10125     1EB3                     	;# 
 10126     1EB8                     	;# 
 10127     1EB9                     	;# 
 10128     1EBA                     	;# 
 10129     1EBB                     	;# 
 10130     1EBC                     	;# 
 10131     1EBD                     	;# 
 10132     1EBE                     	;# 
 10133     1EC3                     	;# 
 10134     1EC5                     	;# 
 10135     1EC6                     	;# 
 10136     1EC7                     	;# 
 10137     1EC8                     	;# 
 10138     1EC9                     	;# 
 10139     1ECA                     	;# 
 10140     1ECB                     	;# 
 10141     1ECC                     	;# 
 10142     1ECD                     	;# 
 10143     1ECE                     	;# 
 10144     1F10                     	;# 
 10145     1F11                     	;# 
 10146     1F12                     	;# 
 10147     1F13                     	;# 
 10148     1F14                     	;# 
 10149     1F15                     	;# 
 10150     1F16                     	;# 
 10151     1F17                     	;# 
 10152     1F18                     	;# 
 10153     1F19                     	;# 
 10154     1F1A                     	;# 
 10155     1F1B                     	;# 
 10156     1F1C                     	;# 
 10157     1F1D                     	;# 
 10158     1F1E                     	;# 
 10159     1F1F                     	;# 
 10160     1F20                     	;# 
 10161     1F21                     	;# 
 10162     1F22                     	;# 
 10163     1F23                     	;# 
 10164     1F24                     	;# 
 10165     1F25                     	;# 
 10166     1F26                     	;# 
 10167     1F27                     	;# 
 10168     1F38                     	;# 
 10169     1F39                     	;# 
 10170     1F3A                     	;# 
 10171     1F3B                     	;# 
 10172     1F3C                     	;# 
 10173     1F3D                     	;# 
 10174     1F3E                     	;# 
 10175     1F3F                     	;# 
 10176     1F43                     	;# 
 10177     1F44                     	;# 
 10178     1F45                     	;# 
 10179     1F46                     	;# 
 10180     1F47                     	;# 
 10181     1F48                     	;# 
 10182     1F49                     	;# 
 10183     1F4A                     	;# 
 10184     1F4E                     	;# 
 10185     1F4F                     	;# 
 10186     1F50                     	;# 
 10187     1F51                     	;# 
 10188     1F52                     	;# 
 10189     1F53                     	;# 
 10190     1F54                     	;# 
 10191     1F55                     	;# 
 10192     1F65                     	;# 
 10193     1F66                     	;# 
 10194     1F67                     	;# 
 10195     1F68                     	;# 
 10196     1F69                     	;# 
 10197     1F6A                     	;# 
 10198     1F6B                     	;# 
 10199     1FE4                     	;# 
 10200     1FE5                     	;# 
 10201     1FE6                     	;# 
 10202     1FE7                     	;# 
 10203     1FE8                     	;# 
 10204     1FE8                     	;# 
 10205     1FE9                     	;# 
 10206     1FEA                     	;# 
 10207     1FEB                     	;# 
 10208     1FED                     	;# 
 10209     1FEE                     	;# 
 10210     1FEF                     	;# 
 10211                           
 10212 ;; Function _do_I2C_RESET is unused but had its address taken
 10213     0000                     
 10214 ;; Function _do_I2C_IDLE is unused but had its address taken
 10215     0000                     
 10216 ;; Function _do_I2C_SEND_RESTART_READ is unused but had its address taken
 10217     0000                     
 10218 ;; Function _do_I2C_SEND_RESTART_WRITE is unused but had its address taken
 10219     0000                     
 10220 ;; Function _do_I2C_SEND_RESTART is unused but had its address taken
 10221     0000                     
 10222 ;; Function _do_I2C_SEND_STOP is unused but had its address taken
 10223     0000                     
 10224 ;; Function _do_I2C_SEND_ADR_READ is unused but had its address taken
 10225     0000                     
 10226 ;; Function _do_I2C_SEND_ADR_WRITE is unused but had its address taken
 10227     0000                     
 10228 ;; Function _do_I2C_RCEN is unused but had its address taken
 10229     0000                     
 10230 ;; Function _do_I2C_DO_ACK is unused but had its address taken
 10231     0000                     
 10232 ;; Function _do_I2C_DO_NACK_STOP is unused but had its address taken
 10233     0000                     
 10234 ;; Function _do_I2C_DO_NACK_RESTART is unused but had its address taken
 10235     0000                     
 10236 ;; Function _do_I2C_DO_ADDRESS_NACK is unused but had its address taken
 10237     0000                     
 10238 ;; Function _do_I2C_TX is unused but had its address taken
 10239     0000                     
 10240 ;; Function _do_I2C_RX is unused but had its address taken
 10241     0000                     
 10242 ;; Function _do_I2C_TX_EMPTY is unused but had its address taken
 10243     0000                     
 10244 ;; Function _i2c_ISR is unused but had its address taken
 10245     0000                     
 10246 ;; Function _i2c_busCollisionISR is unused but had its address taken
 10247     0000                     
 10248 ;; Function _returnStop is unused but had its address taken
 10249     0000                     
 10250 ;; Function _returnReset is unused but had its address taken
 10251     0000                     
 10252 ;; Function _EUSART2_is_tx_ready is unused but had its address taken
 10253     0000                     
 10254 ;; Function _EUSART1_is_tx_ready is unused but had its address taken
 10255     0000                     
 10256                           	psect	idataBANK0
 10257     0002                     __pidataBANK0:
 10258                           
 10259                           ;initializer for RN487X_GetInputsValues@F12901
 10260     0002  3430               	retlw	48
 10261     0003  3430               	retlw	48
 10262                           
 10263                           	psect	idataBANK2
 10264     1166                     __pidataBANK2:
 10265                           
 10266                           ;initializer for __hex
 10267     1166  3430               	retlw	48
 10268     1167  3431               	retlw	49
 10269     1168  3432               	retlw	50
 10270     1169  3433               	retlw	51
 10271     116A  3434               	retlw	52
 10272     116B  3435               	retlw	53
 10273     116C  3436               	retlw	54
 10274     116D  3437               	retlw	55
 10275     116E  3438               	retlw	56
 10276     116F  3439               	retlw	57
 10277     1170  3441               	retlw	65
 10278     1171  3442               	retlw	66
 10279     1172  3443               	retlw	67
 10280     1173  3444               	retlw	68
 10281     1174  3445               	retlw	69
 10282     1175  3446               	retlw	70
 10283     1176  3400               	retlw	0
 10284                           
 10285                           	psect	stringtext1
 10286     1800                     __pstringtext1:
 10287     1800                     _uart:
 10288     1800  344B               	retlw	low _EUSART1_Read
 10289     1801  3415               	retlw	high _EUSART1_Read
 10290     1802  3424               	retlw	low _EUSART1_Write
 10291     1803  3415               	retlw	high _EUSART1_Write
 10292     1804  3400               	retlw	0
 10293     1805  3400               	retlw	0
 10294     1806  349B               	retlw	low _EUSART1_is_rx_ready
 10295     1807  341F               	retlw	high _EUSART1_is_rx_ready
 10296     1808  342B               	retlw	low _EUSART1_SetTxInterruptHandler
 10297     1809  341F               	retlw	high _EUSART1_SetTxInterruptHandler
 10298     180A  3497               	retlw	low _EUSART1_Receive_ISR
 10299     180B  3408               	retlw	high _EUSART1_Receive_ISR
 10300     180C  3425               	retlw	low _EUSART1_SetRxInterruptHandler
 10301     180D  341F               	retlw	high _EUSART1_SetRxInterruptHandler
 10302     180E  34AB               	retlw	low _EUSART1_is_tx_done
 10303     180F  341E               	retlw	high _EUSART1_is_tx_done
 10304     1810  34FF               	retlw	low _EUSART1_Transmit_ISR
 10305     1811  3413               	retlw	high _EUSART1_Transmit_ISR
 10306     1812  344E               	retlw	low _EUSART1_Initialize
 10307     1813  3409               	retlw	high _EUSART1_Initialize
 10308     1814  34D7               	retlw	low _EUSART2_Read
 10309     1815  3414               	retlw	high _EUSART2_Read
 10310     1816  34FD               	retlw	low _EUSART2_Write
 10311     1817  3414               	retlw	high _EUSART2_Write
 10312     1818  3400               	retlw	0
 10313     1819  3400               	retlw	0
 10314     181A  3492               	retlw	low _EUSART2_is_rx_ready
 10315     181B  341F               	retlw	high _EUSART2_is_rx_ready
 10316     181C  3449               	retlw	low _EUSART2_SetTxInterruptHandler
 10317     181D  341F               	retlw	high _EUSART2_SetTxInterruptHandler
 10318     181E  345E               	retlw	low _EUSART2_Receive_ISR
 10319     181F  3408               	retlw	high _EUSART2_Receive_ISR
 10320     1820  3443               	retlw	low _EUSART2_SetRxInterruptHandler
 10321     1821  341F               	retlw	high _EUSART2_SetRxInterruptHandler
 10322     1822  34A7               	retlw	low _EUSART2_is_tx_done
 10323     1823  341E               	retlw	high _EUSART2_is_tx_done
 10324     1824  34DD               	retlw	low _EUSART2_Transmit_ISR
 10325     1825  3413               	retlw	high _EUSART2_Transmit_ISR
 10326     1826  348C               	retlw	low _EUSART2_Initialize
 10327     1827  3409               	retlw	high _EUSART2_Initialize
 10328     1828                     __end_of_uart:
 10329                           
 10330                           	psect	stringtext2
 10331     1828                     __pstringtext2:
 10332     1828                     _i2c1_fsmStateTable:
 10333     1828  34B4               	retlw	low _I2C1_DO_IDLE
 10334     1829  341E               	retlw	high _I2C1_DO_IDLE
 10335     182A  3489               	retlw	low _I2C1_DO_SEND_ADR_READ
 10336     182B  341F               	retlw	high _I2C1_DO_SEND_ADR_READ
 10337     182C  3468               	retlw	low _I2C1_DO_SEND_ADR_WRITE
 10338     182D  341F               	retlw	high _I2C1_DO_SEND_ADR_WRITE
 10339     182E  34ED               	retlw	low _I2C1_DO_TX
 10340     182F  340C               	retlw	high _I2C1_DO_TX
 10341     1830  3409               	retlw	low _I2C1_DO_RX
 10342     1831  340A               	retlw	high _I2C1_DO_RX
 10343     1832  3461               	retlw	low _I2C1_DO_RCEN
 10344     1833  341F               	retlw	high _I2C1_DO_RCEN
 10345     1834  34EE               	retlw	low _I2C1_DO_TX_EMPTY
 10346     1835  3415               	retlw	high _I2C1_DO_TX_EMPTY
 10347     1836  34B9               	retlw	low _I2C1_DO_SEND_RESTART_READ
 10348     1837  341E               	retlw	high _I2C1_DO_SEND_RESTART_READ
 10349     1838  34BE               	retlw	low _I2C1_DO_SEND_RESTART_WRITE
 10350     1839  341E               	retlw	high _I2C1_DO_SEND_RESTART_WRITE
 10351     183A  34C3               	retlw	low _I2C1_DO_SEND_RESTART
 10352     183B  341E               	retlw	high _I2C1_DO_SEND_RESTART
 10353     183C  34C8               	retlw	low _I2C1_DO_SEND_STOP
 10354     183D  341E               	retlw	high _I2C1_DO_SEND_STOP
 10355     183E  34CD               	retlw	low _I2C1_DO_RX_ACK
 10356     183F  341E               	retlw	high _I2C1_DO_RX_ACK
 10357     1840  34D2               	retlw	low _I2C1_DO_RX_NACK_STOP
 10358     1841  341E               	retlw	high _I2C1_DO_RX_NACK_STOP
 10359     1842  34D7               	retlw	low _I2C1_DO_RX_NACK_RESTART
 10360     1843  341E               	retlw	high _I2C1_DO_RX_NACK_RESTART
 10361     1844  34DC               	retlw	low _I2C1_DO_RESET
 10362     1845  341E               	retlw	high _I2C1_DO_RESET
 10363     1846  3472               	retlw	low _I2C1_DO_ADDRESS_NACK
 10364     1847  3415               	retlw	high _I2C1_DO_ADDRESS_NACK
 10365     1848                     __end_of_i2c1_fsmStateTable:
 10366                           
 10367                           	psect	stringtext3
 10368     1848                     __pstringtext3:
 10369     1848                     _fsmStateTable:
 10370     1848  3400               	retlw	0
 10371     1849  3400               	retlw	0
 10372     184A  3400               	retlw	0
 10373     184B  3400               	retlw	0
 10374     184C  3400               	retlw	0
 10375     184D  3400               	retlw	0
 10376     184E  3400               	retlw	0
 10377     184F  3400               	retlw	0
 10378     1850  3400               	retlw	0
 10379     1851  3400               	retlw	0
 10380     1852  3400               	retlw	0
 10381     1853  3400               	retlw	0
 10382     1854  3400               	retlw	0
 10383     1855  3400               	retlw	0
 10384     1856  3400               	retlw	0
 10385     1857  3400               	retlw	0
 10386     1858  3400               	retlw	0
 10387     1859  3400               	retlw	0
 10388     185A  3400               	retlw	0
 10389     185B  3400               	retlw	0
 10390     185C  3400               	retlw	0
 10391     185D  3400               	retlw	0
 10392     185E  3400               	retlw	0
 10393     185F  3400               	retlw	0
 10394     1860  3400               	retlw	0
 10395     1861  3400               	retlw	0
 10396     1862  3400               	retlw	0
 10397     1863  3400               	retlw	0
 10398     1864  3400               	retlw	0
 10399     1865  3400               	retlw	0
 10400     1866  3400               	retlw	0
 10401     1867  3400               	retlw	0
 10402     1868                     __end_of_fsmStateTable:
 10403                           
 10404                           	psect	stringtext4
 10405     1868                     __pstringtext4:
 10406     1868                     _RN487X:
 10407     1868  3419               	retlw	low _RN487X_Write
 10408     1869  3410               	retlw	high _RN487X_Write
 10409     186A  34AD               	retlw	low _RN487X_Read@rn487x_interface$F1381
 10410     186B  341F               	retlw	high _RN487X_Read@rn487x_interface$F1381
 10411     186C  34B7               	retlw	low _RN487X_is_tx_done
 10412     186D  341F               	retlw	high _RN487X_is_tx_done
 10413     186E  34C1               	retlw	low _RN487X_is_rx_ready
 10414     186F  341F               	retlw	high _RN487X_is_rx_ready
 10415     1870  34F5               	retlw	low _RN487X_IndicateRx
 10416     1871  341F               	retlw	high _RN487X_IndicateRx
 10417     1872  3403               	retlw	low _RN487X_Reset
 10418     1873  3410               	retlw	high _RN487X_Reset
 10419     1874  3425               	retlw	low _RN487X_SetSystemMode
 10420     1875  3410               	retlw	high _RN487X_SetSystemMode
 10421     1876  3470               	retlw	low _RN487X_Delay
 10422     1877  341F               	retlw	high _RN487X_Delay
 10423     1878  348F               	retlw	low _RN487X_MessageHandler
 10424     1879  340A               	retlw	high _RN487X_MessageHandler
 10425     187A                     __end_of_RN487X:
 10426                           
 10427                           	psect	stringtext5
 10428     2010                     __pstringtext5:
 10429     2010                     _rn487x_driver_version:
 10430     2010  3400               	retlw	low (STR_1| (0+32768))
 10431     2011  34A0               	retlw	high (STR_1| (0+32768))
 10432     2012                     __end_of_rn487x_driver_version:
 10433                           
 10434                           	psect	stringtext6
 10435     2012                     __pstringtext6:
 10436     2012                     _protocol_version_number:
 10437     2012  3400               	retlw	low (STR_1| (0+32768))
 10438     2013  34A0               	retlw	high (STR_1| (0+32768))
 10439     2014                     __end_of_protocol_version_number:
 10440                           
 10441                           	psect	stringtext7
 10442     1886                     __pstringtext7:
 10443     1886                     RN487X_RebootCmd@reboot:
 10444     1886  3452               	retlw	82
 10445     1887  3465               	retlw	101
 10446     1888  3462               	retlw	98
 10447     1889  346F               	retlw	111
 10448     188A  346F               	retlw	111
 10449     188B  3474               	retlw	116
 10450     188C  3469               	retlw	105
 10451     188D  346E               	retlw	110
 10452     188E  3467               	retlw	103
 10453     188F  340D               	retlw	13
 10454     1890  340A               	retlw	10
 10455     1891                     __end_ofRN487X_RebootCmd@reboot:
 10456                           
 10457                           	psect	stringtext8
 10458     2006                     __pstringtext8:
 10459     2006                     RN487X_EnterDataMode@cmdPrompt:
 10460     2006  3445               	retlw	69
 10461     2007  344E               	retlw	78
 10462     2008  3444               	retlw	68
 10463     2009  340D               	retlw	13
 10464     200A  340A               	retlw	10
 10465     200B                     __end_ofRN487X_EnterDataMode@cmdPrompt:
 10466                           
 10467                           	psect	stringtext9
 10468     200B                     __pstringtext9:
 10469     200B                     RN487X_EnterCmdMode@cmdPrompt:
 10470     200B  3443               	retlw	67
 10471     200C  344D               	retlw	77
 10472     200D  3444               	retlw	68
 10473     200E  343E               	retlw	62
 10474     200F  3420               	retlw	32
 10475     2010                     __end_ofRN487X_EnterCmdMode@cmdPrompt:
 10476                           
 10477                           	psect	nvBANK1
 10478     00E9                     __pnvBANK1:
 10479     00E9                     _IOCAF6_InterruptHandler:
 10480     00E9                     	ds	2
 10481     00EB                     _EUSART2_RxDefaultInterruptHandler:
 10482     00EB                     	ds	2
 10483     00ED                     _EUSART2_TxDefaultInterruptHandler:
 10484     00ED                     	ds	2
 10485                           
 10486                           	psect	nvBANK2
 10487     015D                     __pnvBANK2:
 10488     015D                     _EUSART1_ErrorHandler:
 10489     015D                     	ds	2
 10490     015F                     _EUSART1_OverrunErrorHandler:
 10491     015F                     	ds	2
 10492     0161                     _EUSART1_FramingErrorHandler:
 10493     0161                     	ds	2
 10494     0163                     _EUSART1_RxDefaultInterruptHandler:
 10495     0163                     	ds	2
 10496     0165                     _EUSART1_TxDefaultInterruptHandler:
 10497     0165                     	ds	2
 10498     0167                     _EUSART2_ErrorHandler:
 10499     0167                     	ds	2
 10500     0169                     _EUSART2_OverrunErrorHandler:
 10501     0169                     	ds	2
 10502     016B                     _EUSART2_FramingErrorHandler:
 10503     016B                     	ds	2
 10504     0014                     _TRISC	set	20
 10505     0013                     _TRISB	set	19
 10506     0012                     _TRISA	set	18
 10507     0016                     _TRISE	set	22
 10508     001A                     _LATC	set	26
 10509     0019                     _LATB	set	25
 10510     0018                     _LATA	set	24
 10511     001C                     _LATE	set	28
 10512     0012                     _TRISAbits	set	18
 10513     001A                     _LATCbits	set	26
 10514     000B                     _INTCONbits	set	11
 10515     0018                     _LATAbits	set	24
 10516     000C                     _PORTAbits	set	12
 10517     0119                     _RC1REG	set	281
 10518     011D                     _RC1STAbits	set	285
 10519     011A                     _TX1REG	set	282
 10520     011E                     _TX1STAbits	set	286
 10521     011C                     _SP1BRGH	set	284
 10522     011B                     _SP1BRGL	set	283
 10523     011E                     _TX1STA	set	286
 10524     011D                     _RC1STA	set	285
 10525     011F                     _BAUD1CON	set	287
 10526     018F                     _SSP1STATbits	set	399
 10527     018E                     _SSP1MSK	set	398
 10528     018C                     _SSP1BUF	set	396
 10529     0191                     _SSP1CON2bits	set	401
 10530     018D                     _SSP1ADD	set	397
 10531     0191                     _SSP1CON2	set	401
 10532     0190                     _SSP1CON1	set	400
 10533     018F                     _SSP1STAT	set	399
 10534     0190                     _SSP1CON1bits	set	400
 10535     059E                     _T0CON0bits	set	1438
 10536     059E                     _T0CON0	set	1438
 10537     059C                     _TMR0L	set	1436
 10538     059D                     _TMR0H	set	1437
 10539     059F                     _T0CON1	set	1439
 10540     070F                     _PIR3bits	set	1807
 10541     070C                     _PIR0bits	set	1804
 10542     0716                     _PIE0bits	set	1814
 10543     0719                     _PIE3bits	set	1817
 10544     079D                     _PMD7	set	1949
 10545     079C                     _PMD6	set	1948
 10546     079B                     _PMD5	set	1947
 10547     079A                     _PMD4	set	1946
 10548     0799                     _PMD3	set	1945
 10549     0798                     _PMD2	set	1944
 10550     0797                     _PMD1	set	1943
 10551     0796                     _PMD0	set	1942
 10552     0892                     _OSCTUNE	set	2194
 10553     0890                     _OSCSTAT	set	2192
 10554     0893                     _OSCFRQ	set	2195
 10555     0891                     _OSCEN	set	2193
 10556     088F                     _OSCCON3	set	2191
 10557     088D                     _OSCCON1	set	2189
 10558     0A19                     _RC2REG	set	2585
 10559     0A1D                     _RC2STAbits	set	2589
 10560     0A1A                     _TX2REG	set	2586
 10561     0A1E                     _TX2STAbits	set	2590
 10562     0A1C                     _SP2BRGH	set	2588
 10563     0A1B                     _SP2BRGL	set	2587
 10564     0A1E                     _TX2STA	set	2590
 10565     0A1D                     _RC2STA	set	2589
 10566     0A1F                     _BAUD2CON	set	2591
 10567     1ECB                     _RX1DTPPS	set	7883
 10568     1EC6                     _SSP1DATPPS	set	7878
 10569     1ECD                     _RX2DTPPS	set	7885
 10570     1EC5                     _SSP1CLKPPS	set	7877
 10571     1F1C                     _RB4PPS	set	7964
 10572     1F24                     _RC4PPS	set	7972
 10573     1F1A                     _RB2PPS	set	7962
 10574     1F19                     _RB1PPS	set	7961
 10575     1F3D                     _IOCAPbits	set	7997
 10576     1F3E                     _IOCANbits	set	7998
 10577     1F3F                     _IOCAFbits	set	7999
 10578     1F52                     _INLVLC	set	8018
 10579     1F47                     _INLVLB	set	8007
 10580     1F3C                     _INLVLA	set	7996
 10581     1F51                     _SLRCONC	set	8017
 10582     1F46                     _SLRCONB	set	8006
 10583     1F3B                     _SLRCONA	set	7995
 10584     1F50                     _ODCONC	set	8016
 10585     1F45                     _ODCONB	set	8005
 10586     1F3A                     _ODCONA	set	7994
 10587     1F66                     _ODCONE	set	8038
 10588     1F4F                     _WPUC	set	8015
 10589     1F39                     _WPUA	set	7993
 10590     1F44                     _WPUB	set	8004
 10591     1F65                     _WPUE	set	8037
 10592     1F38                     _ANSELA	set	7992
 10593     1F43                     _ANSELB	set	8003
 10594     1F4E                     _ANSELC	set	8014
 10595                           
 10596                           	psect	stringtext10
 10597     187A                     __pstringtext10:
 10598     187A                     STR_4:
 10599     187A  3453               	retlw	83	;'S'
 10600     187B  3454               	retlw	84	;'T'
 10601     187C  3452               	retlw	82	;'R'
 10602     187D  3445               	retlw	69	;'E'
 10603     187E  3441               	retlw	65	;'A'
 10604     187F  344D               	retlw	77	;'M'
 10605     1880  345F               	retlw	95	;'_'
 10606     1881  344F               	retlw	79	;'O'
 10607     1882  3450               	retlw	80	;'P'
 10608     1883  3445               	retlw	69	;'E'
 10609     1884  344E               	retlw	78	;'N'
 10610     1885  3400               	retlw	0
 10611                           
 10612                           	psect	stringtext11
 10613     1891                     __pstringtext11:
 10614     1891                     STR_2:
 10615     1891  3444               	retlw	68	;'D'
 10616     1892  3449               	retlw	73	;'I'
 10617     1893  3453               	retlw	83	;'S'
 10618     1894  3443               	retlw	67	;'C'
 10619     1895  344F               	retlw	79	;'O'
 10620     1896  344E               	retlw	78	;'N'
 10621     1897  344E               	retlw	78	;'N'
 10622     1898  3445               	retlw	69	;'E'
 10623     1899  3443               	retlw	67	;'C'
 10624     189A  3454               	retlw	84	;'T'
 10625     189B  3400               	retlw	0
 10626                           
 10627                           	psect	stringtext12
 10628     2000                     __pstringtext12:
 10629     2000                     STR_1:
 10630     2000  3431               	retlw	49	;'1'
 10631     2001  342E               	retlw	46	;'.'
 10632     2002  3431               	retlw	49	;'1'
 10633     2003  342E               	retlw	46	;'.'
 10634     2004  3430               	retlw	48	;'0'
 10635     2005  3400               	retlw	0
 10636                           
 10637                           	psect	stringtext13
 10638     0000                     __pstringtext13:
 10639     2000                     
 10640                           	psect	cinit
 10641     0057                     start_initialization:	
 10642                           ; #config settings
 10643                           
 10644     0057                     __initialization:
 10645                           
 10646                           ; Initialize objects allocated to BANK0
 10647     0057  3180  2002  3180   	fcall	__pidataBANK0	;fetch initializer
 10648     005A  00EE               	movwf	__pdataBANK0& (0+127)
 10649     005B  3180  2003  3180   	fcall	__pidataBANK0+1	;fetch initializer
 10650     005E  00EF               	movwf	(__pdataBANK0+1)& (0+127)
 10651                           
 10652                           ; Initialize objects allocated to BANK2
 10653     005F  3066               	movlw	low __pidataBANK2
 10654     0060  0084               	movwf	4
 10655     0061  3091               	movlw	(high __pidataBANK2)| (0+128)
 10656     0062  0085               	movwf	5
 10657     0063  304C               	movlw	low __pdataBANK2
 10658     0064  0086               	movwf	6
 10659     0065  3001               	movlw	high __pdataBANK2
 10660     0066  0087               	movwf	7
 10661     0067  3011               	movlw	17
 10662     0068  319F  275B  3180   	fcall	init_ram
 10663                           
 10664                           ; Clear objects allocated to COMMON
 10665     006B  01FC               	clrf	__pbssCOMMON& (0+127)
 10666                           
 10667                           ; Clear objects allocated to BANK0
 10668     006C  304A               	movlw	low __pbssBANK0
 10669     006D  0084               	movwf	4
 10670     006E  3000               	movlw	high __pbssBANK0
 10671     006F  0085               	movwf	5
 10672     0070  3024               	movlw	36
 10673     0071  319F  2755  3180   	fcall	clear_ram0
 10674                           
 10675                           ; Clear objects allocated to BANK1
 10676     0074  30A0               	movlw	low __pbssBANK1
 10677     0075  0084               	movwf	4
 10678     0076  3000               	movlw	high __pbssBANK1
 10679     0077  0085               	movwf	5
 10680     0078  3049               	movlw	73
 10681     0079  319F  2755  3180   	fcall	clear_ram0
 10682                           
 10683                           ; Clear objects allocated to BANK2
 10684     007C  3020               	movlw	low __pbssBANK2
 10685     007D  0084               	movwf	4
 10686     007E  3001               	movlw	high __pbssBANK2
 10687     007F  0085               	movwf	5
 10688     0080  302C               	movlw	44
 10689     0081  319F  2755  3180   	fcall	clear_ram0
 10690                           
 10691                           ; Clear objects allocated to BANK3
 10692     0084  30A0               	movlw	low __pbssBANK3
 10693     0085  0084               	movwf	4
 10694     0086  3001               	movlw	high __pbssBANK3
 10695     0087  0085               	movwf	5
 10696     0088  3040               	movlw	64
 10697     0089  319F  2755  3180   	fcall	clear_ram0
 10698                           
 10699                           ; Clear objects allocated to BANK4
 10700     008C  3020               	movlw	low __pbssBANK4
 10701     008D  0084               	movwf	4
 10702     008E  3002               	movlw	high __pbssBANK4
 10703     008F  0085               	movwf	5
 10704     0090  3050               	movlw	80
 10705     0091  319F  2755  3180   	fcall	clear_ram0
 10706                           
 10707                           ; Clear objects allocated to BANK5
 10708     0094  30A0               	movlw	low __pbssBANK5
 10709     0095  0084               	movwf	4
 10710     0096  3002               	movlw	high __pbssBANK5
 10711     0097  0085               	movwf	5
 10712     0098  3050               	movlw	80
 10713     0099  319F  2755  3180   	fcall	clear_ram0
 10714                           
 10715                           ; Clear objects allocated to BANK6
 10716     009C  3020               	movlw	low __pbssBANK6
 10717     009D  0084               	movwf	4
 10718     009E  3003               	movlw	high __pbssBANK6
 10719     009F  0085               	movwf	5
 10720     00A0  3050               	movlw	80
 10721     00A1  319F  2755  3180   	fcall	clear_ram0
 10722     00A4                     end_of_initialization:	
 10723                           ;End of C runtime variable initialization code
 10724                           
 10725     00A4                     __end_of__initialization:
 10726     00A4  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 10727     00A5  0140               	movlb	0
 10728     00A6  3184  2CBD         	ljmp	_main	;jump to C main() function
 10729                           
 10730                           	psect	bssCOMMON
 10731     007C                     __pbssCOMMON:
 10732     007C                     _eusart2RxHead:
 10733     007C                     	ds	1
 10734                           
 10735                           	psect	bssBANK0
 10736     004A                     __pbssBANK0:
 10737     004A                     _manufactureId:
 10738     004A                     	ds	2
 10739     004C                     _timer0ReloadVal16bit:
 10740     004C                     	ds	2
 10741     004E                     _pHead:
 10742     004E                     	ds	2
 10743     0050                     _asyncBuffer:
 10744     0050                     	ds	2
 10745     0052                     LIGHTBLUE_ParseIncomingPacket@data:
 10746     0052                     	ds	2
 10747     0054                     _bitMap:
 10748     0054                     	ds	2
 10749     0056                     _serialIndex:
 10750     0056                     	ds	1
 10751     0057                     _eusart1RxLastError:
 10752     0057                     	ds	1
 10753     0058                     _eusart1RxCount:
 10754     0058                     	ds	1
 10755     0059                     _eusart1RxTail:
 10756     0059                     	ds	1
 10757     005A                     _eusart1RxHead:
 10758     005A                     	ds	1
 10759     005B                     _eusart1TxBufferRemaining:
 10760     005B                     	ds	1
 10761     005C                     _eusart1TxTail:
 10762     005C                     	ds	1
 10763     005D                     _eusart1TxHead:
 10764     005D                     	ds	1
 10765     005E                     _eusart2RxLastError:
 10766     005E                     	ds	1
 10767     005F                     _eusart2RxCount:
 10768     005F                     	ds	1
 10769     0060                     _eusart2RxTail:
 10770     0060                     	ds	1
 10771     0061                     _eusart2TxBufferRemaining:
 10772     0061                     	ds	1
 10773     0062                     _eusart2TxTail:
 10774     0062                     	ds	1
 10775     0063                     _eusart2TxHead:
 10776     0063                     	ds	1
 10777     0064                     RN487X_FilterData@asyncBuffering:
 10778     0064                     	ds	1
 10779     0065                     _dataReady:
 10780     0065                     	ds	1
 10781     0066                     _peek:
 10782     0066                     	ds	1
 10783     0067                     _asyncBufferSize:
 10784     0067                     	ds	1
 10785     0068                     _connected:
 10786     0068                     	ds	1
 10787     0069                     LIGHTBLUE_ParseIncomingPacket@packetID:
 10788     0069                     	ds	1
 10789     006A                     LIGHTBLUE_ParseIncomingPacket@length:
 10790     006A                     	ds	1
 10791     006B                     LIGHTBLUE_ParseIncomingPacket@parserState:
 10792     006B                     	ds	1
 10793     006C                     _sequenceNumber:
 10794     006C                     	ds	1
 10795     006D                     __deviceAddress:
 10796     006D                     	ds	1
 10797                           
 10798                           	psect	dataBANK0
 10799     006E                     __pdataBANK0:
 10800     006E                     RN487X_GetInputsValues@F12901:
 10801     006E                     	ds	2
 10802                           
 10803                           	psect	bssBANK1
 10804     00A0                     __pbssBANK1:
 10805     00A0                     _I2C1_Status:
 10806     00A0                     	ds	29
 10807     00BD                     _eusart1RxStatusBuffer:
 10808     00BD                     	ds	8
 10809     00C5                     _eusart1TxBuffer:
 10810     00C5                     	ds	8
 10811     00CD                     _eusart2RxStatusBuffer:
 10812     00CD                     	ds	8
 10813     00D5                     _eusart2RxBuffer:
 10814     00D5                     	ds	8
 10815     00DD                     _eusart2TxBuffer:
 10816     00DD                     	ds	8
 10817     00E5                     _i2c1_driver_i2cISR:
 10818     00E5                     	ds	2
 10819     00E7                     _i2c1_driver_busCollisionISR:
 10820     00E7                     	ds	2
 10821                           
 10822                           	psect	bssBANK2
 10823     0120                     __pbssBANK2:
 10824     0120                     _i2c_status:
 10825     0120                     	ds	36
 10826     0144                     _eusart1RxBuffer:
 10827     0144                     	ds	8
 10828                           
 10829                           	psect	dataBANK2
 10830     014C                     __pdataBANK2:
 10831     014C                     __hex:
 10832     014C                     	ds	17
 10833                           
 10834                           	psect	bssBANK3
 10835     01A0                     __pbssBANK3:
 10836     01A0                     _cmdBuf:
 10837     01A0                     	ds	64
 10838                           
 10839                           	psect	bssBANK4
 10840     0220                     __pbssBANK4:
 10841     0220                     _lightBlueSerial:
 10842     0220                     	ds	80
 10843                           
 10844                           	psect	bssBANK5
 10845     02A0                     __pbssBANK5:
 10846     02A0                     _statusBuffer:
 10847     02A0                     	ds	80
 10848                           
 10849                           	psect	bssBANK6
 10850     0320                     __pbssBANK6:
 10851     0320                     _statusBuffer@main$F3783:
 10852     0320                     	ds	80
 10853                           
 10854                           	psect	inittext
 10855     1F5B                     init_ram:
 10856     1F5B  00FE               	movwf	btemp
 10857     1F5C                     initloop:
 10858     1F5C  0012               	moviw fsr0++
 10859     1F5D  001E               	movwi fsr1++
 10860     1F5E  0BFE               	decfsz	btemp,f
 10861     1F5F  2F5C               	goto	initloop
 10862     1F60  3400               	retlw	0
 10863                           
 10864                           	psect	clrtext
 10865     1F55                     clear_ram0:	
 10866                           ;	Called with FSR0 containing the base address, and
 10867                           ;	WREG with the size to clear
 10868                           
 10869     1F55  0064               	clrwdt	;clear the watchdog before getting into this loop
 10870     1F56                     clrloop0:
 10871     1F56  0180               	clrf	0	;clear RAM location pointed to by FSR
 10872     1F57  3101               	addfsr 0,1
 10873     1F58  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
 10874     1F59  2F56               	goto	clrloop0	;have we reached the end yet?
 10875     1F5A  3400               	retlw	0	;all done for this memory range, return
 10876                           
 10877                           	psect	cstackBANK1
 10878     00EF                     __pcstackBANK1:
 10879     00EF                     _main$5439:
 10880                           
 10881                           ; 1 bytes @ 0x0
 10882     00EF                     	ds	1
 10883                           
 10884                           	psect	cstackCOMMON
 10885     0070                     __pcstackCOMMON:
 10886     0070                     ?_BMA253_NewAccelDataRdyY:
 10887     0070                     ?_BMA253_NewAccelDataRdyZ:	
 10888                           ; 1 bytes @ 0x0
 10889                           
 10890     0070                     ?_readRegister:	
 10891                           ; 1 bytes @ 0x0
 10892                           
 10893     0070                     ?_LIGHTBLUE_GetButtonValue:	
 10894                           ; 1 bytes @ 0x0
 10895                           
 10896     0070                     ?_LIGHTBLUE_GetDataLedValue:	
 10897                           ; 1 bytes @ 0x0
 10898                           
 10899     0070                     ?_LIGHTBLUE_GetErrorLedValue:	
 10900                           ; 1 bytes @ 0x0
 10901                           
 10902     0070                     ?_LIGHTBLUE_UpdateErrorLed:	
 10903                           ; 1 bytes @ 0x0
 10904                           
 10905     0070                     ?_RN487X_EnterCmdMode:	
 10906                           ; 1 bytes @ 0x0
 10907                           
 10908     0070                     ?_RN487X_EnterDataMode:	
 10909                           ; 1 bytes @ 0x0
 10910                           
 10911     0070                     ?_EUSART1_Read:	
 10912                           ; 1 bytes @ 0x0
 10913                           
 10914     0070                     ?_EUSART1_is_rx_ready:	
 10915                           ; 1 bytes @ 0x0
 10916                           
 10917     0070                     ?_EUSART1_Receive_ISR:	
 10918                           ; 1 bytes @ 0x0
 10919                           
 10920     0070                     ?_EUSART1_is_tx_done:	
 10921                           ; 1 bytes @ 0x0
 10922                           
 10923     0070                     ?_EUSART1_Transmit_ISR:	
 10924                           ; 1 bytes @ 0x0
 10925                           
 10926     0070                     ??_EUSART1_Transmit_ISR:	
 10927                           ; 1 bytes @ 0x0
 10928                           
 10929     0070                     ?_EUSART1_Initialize:	
 10930                           ; 1 bytes @ 0x0
 10931                           
 10932     0070                     ?_EUSART2_Read:	
 10933                           ; 1 bytes @ 0x0
 10934                           
 10935     0070                     ?_EUSART2_is_rx_ready:	
 10936                           ; 1 bytes @ 0x0
 10937                           
 10938     0070                     ?_EUSART2_Receive_ISR:	
 10939                           ; 1 bytes @ 0x0
 10940                           
 10941     0070                     ?_EUSART2_is_tx_done:	
 10942                           ; 1 bytes @ 0x0
 10943                           
 10944     0070                     ?_EUSART2_Transmit_ISR:	
 10945                           ; 1 bytes @ 0x0
 10946                           
 10947     0070                     ??_EUSART2_Transmit_ISR:	
 10948                           ; 1 bytes @ 0x0
 10949                           
 10950     0070                     ?_EUSART2_Initialize:	
 10951                           ; 1 bytes @ 0x0
 10952                           
 10953     0070                     ?_I2C1_Open:	
 10954                           ; 1 bytes @ 0x0
 10955                           
 10956     0070                     ?_I2C1_MasterWrite:	
 10957                           ; 1 bytes @ 0x0
 10958                           
 10959     0070                     ?_I2C1_Close:	
 10960                           ; 1 bytes @ 0x0
 10961                           
 10962     0070                     ?_I2C1_MasterRead:	
 10963                           ; 1 bytes @ 0x0
 10964                           
 10965     0070                     ?_RN487X_IsConnected:	
 10966                           ; 1 bytes @ 0x0
 10967                           
 10968     0070                     ?_RN487X_Read:	
 10969                           ; 1 bytes @ 0x0
 10970                           
 10971     0070                     ?_RN487X_DataReady:	
 10972                           ; 1 bytes @ 0x0
 10973                           
 10974     0070                     ?_RN487X_Read@rn487x_interface$F1382:	
 10975                           ; 1 bytes @ 0x0
 10976                           
 10977     0070                     ?_RN487X_is_tx_done:	
 10978                           ; 1 bytes @ 0x0
 10979                           
 10980     0070                     ?_RN487X_is_rx_ready:	
 10981                           ; 1 bytes @ 0x0
 10982                           
 10983     0070                     ?_RN487X_FilterData:	
 10984                           ; 1 bytes @ 0x0
 10985                           
 10986     0070                     ?_EUSART2_DefaultFramingErrorHandler:	
 10987                           ; 1 bytes @ 0x0
 10988                           
 10989     0070                     ??_EUSART2_DefaultFramingErrorHandler:	
 10990                           ; 1 bytes @ 0x0
 10991                           
 10992     0070                     ?_EUSART2_DefaultOverrunErrorHandler:	
 10993                           ; 1 bytes @ 0x0
 10994                           
 10995     0070                     ??_EUSART2_DefaultOverrunErrorHandler:	
 10996                           ; 1 bytes @ 0x0
 10997                           
 10998     0070                     ?_EUSART2_DefaultErrorHandler:	
 10999                           ; 1 bytes @ 0x0
 11000                           
 11001     0070                     ?_EUSART2_RxDataHandler:	
 11002                           ; 1 bytes @ 0x0
 11003                           
 11004     0070                     ??_EUSART2_RxDataHandler:	
 11005                           ; 1 bytes @ 0x0
 11006                           
 11007     0070                     ?_EUSART1_DefaultFramingErrorHandler:	
 11008                           ; 1 bytes @ 0x0
 11009                           
 11010     0070                     ??_EUSART1_DefaultFramingErrorHandler:	
 11011                           ; 1 bytes @ 0x0
 11012                           
 11013     0070                     ?_EUSART1_DefaultOverrunErrorHandler:	
 11014                           ; 1 bytes @ 0x0
 11015                           
 11016     0070                     ??_EUSART1_DefaultOverrunErrorHandler:	
 11017                           ; 1 bytes @ 0x0
 11018                           
 11019     0070                     ?_EUSART1_DefaultErrorHandler:	
 11020                           ; 1 bytes @ 0x0
 11021                           
 11022     0070                     ?_EUSART1_RxDataHandler:	
 11023                           ; 1 bytes @ 0x0
 11024                           
 11025     0070                     ??_EUSART1_RxDataHandler:	
 11026                           ; 1 bytes @ 0x0
 11027                           
 11028     0070                     ?_PIN_MANAGER_IOC:	
 11029                           ; 1 bytes @ 0x0
 11030                           
 11031     0070                     ??_PIN_MANAGER_IOC:	
 11032                           ; 1 bytes @ 0x0
 11033                           
 11034     0070                     ?_PMD_Initialize:	
 11035                           ; 1 bytes @ 0x0
 11036                           
 11037     0070                     ?_I2C1_Initialize:	
 11038                           ; 1 bytes @ 0x0
 11039                           
 11040     0070                     ?_PIN_MANAGER_Initialize:	
 11041                           ; 1 bytes @ 0x0
 11042                           
 11043     0070                     ?_OSCILLATOR_Initialize:	
 11044                           ; 1 bytes @ 0x0
 11045                           
 11046     0070                     ?_TMR0_Initialize:	
 11047                           ; 1 bytes @ 0x0
 11048                           
 11049     0070                     ?_IOCAF6_DefaultInterruptHandler:	
 11050                           ; 1 bytes @ 0x0
 11051                           
 11052     0070                     ??_IOCAF6_DefaultInterruptHandler:	
 11053                           ; 1 bytes @ 0x0
 11054                           
 11055     0070                     ?_IOCAF6_ISR:	
 11056                           ; 1 bytes @ 0x0
 11057                           
 11058     0070                     ??_IOCAF6_ISR:	
 11059                           ; 1 bytes @ 0x0
 11060                           
 11061     0070                     ?_I2C1_DO_IDLE:	
 11062                           ; 1 bytes @ 0x0
 11063                           
 11064     0070                     ?_I2C1_DO_SEND_ADR_READ:	
 11065                           ; 1 bytes @ 0x0
 11066                           
 11067     0070                     ?_I2C1_DO_SEND_ADR_WRITE:	
 11068                           ; 1 bytes @ 0x0
 11069                           
 11070     0070                     ?_I2C1_DO_TX:	
 11071                           ; 1 bytes @ 0x0
 11072                           
 11073     0070                     ?_I2C1_DO_RX:	
 11074                           ; 1 bytes @ 0x0
 11075                           
 11076     0070                     ?_I2C1_DO_RCEN:	
 11077                           ; 1 bytes @ 0x0
 11078                           
 11079     0070                     ?_I2C1_DO_TX_EMPTY:	
 11080                           ; 1 bytes @ 0x0
 11081                           
 11082     0070                     ?_I2C1_DO_SEND_RESTART_READ:	
 11083                           ; 1 bytes @ 0x0
 11084                           
 11085     0070                     ?_I2C1_DO_SEND_RESTART_WRITE:	
 11086                           ; 1 bytes @ 0x0
 11087                           
 11088     0070                     ?_I2C1_DO_SEND_RESTART:	
 11089                           ; 1 bytes @ 0x0
 11090                           
 11091     0070                     ?_I2C1_DO_SEND_STOP:	
 11092                           ; 1 bytes @ 0x0
 11093                           
 11094     0070                     ?_I2C1_DO_RX_ACK:	
 11095                           ; 1 bytes @ 0x0
 11096                           
 11097     0070                     ?_I2C1_DO_RX_NACK_STOP:	
 11098                           ; 1 bytes @ 0x0
 11099                           
 11100     0070                     ?_I2C1_DO_RX_NACK_RESTART:	
 11101                           ; 1 bytes @ 0x0
 11102                           
 11103     0070                     ?_I2C1_DO_RESET:	
 11104                           ; 1 bytes @ 0x0
 11105                           
 11106     0070                     ?_I2C1_DO_ADDRESS_NACK:	
 11107                           ; 1 bytes @ 0x0
 11108                           
 11109     0070                     ?_I2C1_MasterClearIrq:	
 11110                           ; 1 bytes @ 0x0
 11111                           
 11112     0070                     ?_I2C1_MasterOpen:	
 11113                           ; 1 bytes @ 0x0
 11114                           
 11115     0070                     ?_I2C1_MasterDisableIrq:	
 11116                           ; 1 bytes @ 0x0
 11117                           
 11118     0070                     ?_I2C1_MasterClose:	
 11119                           ; 1 bytes @ 0x0
 11120                           
 11121     0070                     ?_I2C1_MasterStart:	
 11122                           ; 1 bytes @ 0x0
 11123                           
 11124     0070                     ?_I2C1_Poller:	
 11125                           ; 1 bytes @ 0x0
 11126                           
 11127     0070                     ?_I2C1_MasterWaitForEvent:	
 11128                           ; 1 bytes @ 0x0
 11129                           
 11130     0070                     ?_I2C1_MasterFsm:	
 11131                           ; 1 bytes @ 0x0
 11132                           
 11133     0070                     ?_I2C1_MasterIsNack:	
 11134                           ; 1 bytes @ 0x0
 11135                           
 11136     0070                     ?_I2C1_MasterSendTxData:	
 11137                           ; 1 bytes @ 0x0
 11138                           
 11139     0070                     ?_I2C1_MasterGetRxData:	
 11140                           ; 1 bytes @ 0x0
 11141                           
 11142     0070                     ?_I2C1_MasterSendAck:	
 11143                           ; 1 bytes @ 0x0
 11144                           
 11145     0070                     ?_I2C1_MasterStartRx:	
 11146                           ; 1 bytes @ 0x0
 11147                           
 11148     0070                     ?_I2C1_MasterSetIrq:	
 11149                           ; 1 bytes @ 0x0
 11150                           
 11151     0070                     ?_I2C1_MasterEnableRestart:	
 11152                           ; 1 bytes @ 0x0
 11153                           
 11154     0070                     ?_I2C1_MasterStop:	
 11155                           ; 1 bytes @ 0x0
 11156                           
 11157     0070                     ?_I2C1_MasterSendNack:	
 11158                           ; 1 bytes @ 0x0
 11159                           
 11160     0070                     ?_begin:	
 11161                           ; 1 bytes @ 0x0
 11162                           
 11163     0070                     ?_isConnected:	
 11164                           ; 1 bytes @ 0x0
 11165                           
 11166     0070                     ?_setMagneticChannel:	
 11167                           ; 1 bytes @ 0x0
 11168                           
 11169     0070                     ?_setTemperatureEn:	
 11170                           ; 1 bytes @ 0x0
 11171                           
 11172     0070                     ?_setOperatingMode:	
 11173                           ; 1 bytes @ 0x0
 11174                           
 11175     0070                     ?_setXYAxisRange:	
 11176                           ; 1 bytes @ 0x0
 11177                           
 11178     0070                     ?_setZAxisRange:	
 11179                           ; 1 bytes @ 0x0
 11180                           
 11181     0070                     ?_getError:	
 11182                           ; 1 bytes @ 0x0
 11183                           
 11184     0070                     ?_getLowPower:	
 11185                           ; 1 bytes @ 0x0
 11186                           
 11187     0070                     ?_getOperatingMode:	
 11188                           ; 1 bytes @ 0x0
 11189                           
 11190     0070                     ?_getMagneticChannel:	
 11191                           ; 1 bytes @ 0x0
 11192                           
 11193     0070                     ?_getTemperatureEN:	
 11194                           ; 1 bytes @ 0x0
 11195                           
 11196     0070                     ?_getAngleEn:	
 11197                           ; 1 bytes @ 0x0
 11198                           
 11199     0070                     ?_BMA253_GetAccelDataY:	
 11200                           ; 1 bytes @ 0x0
 11201                           
 11202     0070                     ?_BMA253_GetAccelDataZ:	
 11203                           ; 1 bytes @ 0x0
 11204                           
 11205     0070                     ?_BMA253_GetAccelDataXYZ:	
 11206                           ; 1 bytes @ 0x0
 11207                           
 11208     0070                     ?_LIGHTBLUE_Initialize:	
 11209                           ; 1 bytes @ 0x0
 11210                           
 11211     0070                     ?_LIGHTBLUE_TemperatureSensor:	
 11212                           ; 1 bytes @ 0x0
 11213                           
 11214     0070                     ?_LIGHTBLUE_AccelSensor:	
 11215                           ; 1 bytes @ 0x0
 11216                           
 11217     0070                     ?_LIGHTBLUE_PushButton:	
 11218                           ; 1 bytes @ 0x0
 11219                           
 11220     0070                     ?_LIGHTBLUE_LedState:	
 11221                           ; 1 bytes @ 0x0
 11222                           
 11223     0070                     ?_LIGHTBLUE_SendProtocolVersion:	
 11224                           ; 1 bytes @ 0x0
 11225                           
 11226     0070                     ?_LIGHTBLUE_SendSerialData:	
 11227                           ; 1 bytes @ 0x0
 11228                           
 11229     0070                     ?_LIGHTBLUE_ParseIncomingPacket:	
 11230                           ; 1 bytes @ 0x0
 11231                           
 11232     0070                     ?_LIGHTBLUE_SetErrorLedValue:	
 11233                           ; 1 bytes @ 0x0
 11234                           
 11235     0070                     ?_rn487x_PrintMessageStart:	
 11236                           ; 1 bytes @ 0x0
 11237                           
 11238     0070                     ?_rn487x_PrintMessageEnd:	
 11239                           ; 1 bytes @ 0x0
 11240                           
 11241     0070                     ?_rn487x_PrintIndicatorCharacters:	
 11242                           ; 1 bytes @ 0x0
 11243                           
 11244     0070                     ?_RN487X_Init:	
 11245                           ; 1 bytes @ 0x0
 11246                           
 11247     0070                     ?_RN487X_ReadDefaultResponse:	
 11248                           ; 1 bytes @ 0x0
 11249                           
 11250     0070                     ?_INTERRUPT_InterruptManager:	
 11251                           ; 1 bytes @ 0x0
 11252                           
 11253     0070                     ?_SYSTEM_Initialize:	
 11254                           ; 1 bytes @ 0x0
 11255                           
 11256     0070                     ?_TMR0_HasOverflowOccured:	
 11257                           ; 1 bytes @ 0x0
 11258                           
 11259     0070                     ?_I2C1_MasterOperation:	
 11260                           ; 1 bytes @ 0x0
 11261                           
 11262     0070                     ?_getDeviceStatus:	
 11263                           ; 1 bytes @ 0x0
 11264                           
 11265     0070                     ?_main:	
 11266                           ; 1 bytes @ 0x0
 11267                           
 11268                           
 11269                           ; 2 bytes @ 0x0
 11270     0070                     	ds	1
 11271     0071                     ??_LIGHTBLUE_GetButtonValue:
 11272     0071                     ??_LIGHTBLUE_GetDataLedValue:	
 11273                           ; 1 bytes @ 0x1
 11274                           
 11275     0071                     ??_LIGHTBLUE_GetErrorLedValue:	
 11276                           ; 1 bytes @ 0x1
 11277                           
 11278     0071                     ??_EUSART1_Read:	
 11279                           ; 1 bytes @ 0x1
 11280                           
 11281     0071                     ?_EUSART1_Write:	
 11282                           ; 1 bytes @ 0x1
 11283                           
 11284     0071                     ??_EUSART1_is_rx_ready:	
 11285                           ; 1 bytes @ 0x1
 11286                           
 11287     0071                     ?_EUSART1_SetTxInterruptHandler:	
 11288                           ; 1 bytes @ 0x1
 11289                           
 11290     0071                     ??_EUSART1_Receive_ISR:	
 11291                           ; 1 bytes @ 0x1
 11292                           
 11293     0071                     ?_EUSART1_SetRxInterruptHandler:	
 11294                           ; 1 bytes @ 0x1
 11295                           
 11296     0071                     ??_EUSART1_is_tx_done:	
 11297                           ; 1 bytes @ 0x1
 11298                           
 11299     0071                     ??_EUSART2_Read:	
 11300                           ; 1 bytes @ 0x1
 11301                           
 11302     0071                     ?_EUSART2_Write:	
 11303                           ; 1 bytes @ 0x1
 11304                           
 11305     0071                     ??_EUSART2_is_rx_ready:	
 11306                           ; 1 bytes @ 0x1
 11307                           
 11308     0071                     ?_EUSART2_SetTxInterruptHandler:	
 11309                           ; 1 bytes @ 0x1
 11310                           
 11311     0071                     ??_EUSART2_Receive_ISR:	
 11312                           ; 1 bytes @ 0x1
 11313                           
 11314     0071                     ?_EUSART2_SetRxInterruptHandler:	
 11315                           ; 1 bytes @ 0x1
 11316                           
 11317     0071                     ??_EUSART2_is_tx_done:	
 11318                           ; 1 bytes @ 0x1
 11319                           
 11320     0071                     ?_I2C1_SetBuffer:	
 11321                           ; 1 bytes @ 0x1
 11322                           
 11323     0071                     ??_I2C1_Open:	
 11324                           ; 1 bytes @ 0x1
 11325                           
 11326     0071                     ??_I2C1_Close:	
 11327                           ; 1 bytes @ 0x1
 11328                           
 11329     0071                     ?_RN487X_SetAsyncMessageHandler:	
 11330                           ; 1 bytes @ 0x1
 11331                           
 11332     0071                     ??_RN487X_IsConnected:	
 11333                           ; 1 bytes @ 0x1
 11334                           
 11335     0071                     ??_RN487X_is_tx_done:	
 11336                           ; 1 bytes @ 0x1
 11337                           
 11338     0071                     ??_RN487X_is_rx_ready:	
 11339                           ; 1 bytes @ 0x1
 11340                           
 11341     0071                     ?_RN487X_IndicateRx:	
 11342                           ; 1 bytes @ 0x1
 11343                           
 11344     0071                     ?_RN487X_Reset:	
 11345                           ; 1 bytes @ 0x1
 11346                           
 11347     0071                     ?_RN487X_SetSystemMode:	
 11348                           ; 1 bytes @ 0x1
 11349                           
 11350     0071                     ?_DELAY_milliseconds:	
 11351                           ; 1 bytes @ 0x1
 11352                           
 11353     0071                     ?_strcpy:	
 11354                           ; 1 bytes @ 0x1
 11355                           
 11356     0071                     ?_EUSART2_SetFramingErrorHandler:	
 11357                           ; 1 bytes @ 0x1
 11358                           
 11359     0071                     ?_EUSART2_SetOverrunErrorHandler:	
 11360                           ; 1 bytes @ 0x1
 11361                           
 11362     0071                     ?_EUSART2_SetErrorHandler:	
 11363                           ; 1 bytes @ 0x1
 11364                           
 11365     0071                     ??_EUSART2_DefaultErrorHandler:	
 11366                           ; 1 bytes @ 0x1
 11367                           
 11368     0071                     ?_EUSART1_SetFramingErrorHandler:	
 11369                           ; 1 bytes @ 0x1
 11370                           
 11371     0071                     ?_EUSART1_SetOverrunErrorHandler:	
 11372                           ; 1 bytes @ 0x1
 11373                           
 11374     0071                     ?_EUSART1_SetErrorHandler:	
 11375                           ; 1 bytes @ 0x1
 11376                           
 11377     0071                     ??_EUSART1_DefaultErrorHandler:	
 11378                           ; 1 bytes @ 0x1
 11379                           
 11380     0071                     ??_PMD_Initialize:	
 11381                           ; 1 bytes @ 0x1
 11382                           
 11383     0071                     ??_I2C1_Initialize:	
 11384                           ; 1 bytes @ 0x1
 11385                           
 11386     0071                     ??_OSCILLATOR_Initialize:	
 11387                           ; 1 bytes @ 0x1
 11388                           
 11389     0071                     ??_TMR0_Initialize:	
 11390                           ; 1 bytes @ 0x1
 11391                           
 11392     0071                     ?_IOCAF6_SetInterruptHandler:	
 11393                           ; 1 bytes @ 0x1
 11394                           
 11395     0071                     ??_I2C1_DO_IDLE:	
 11396                           ; 1 bytes @ 0x1
 11397                           
 11398     0071                     ??_I2C1_DO_SEND_ADR_READ:	
 11399                           ; 1 bytes @ 0x1
 11400                           
 11401     0071                     ??_I2C1_DO_RCEN:	
 11402                           ; 1 bytes @ 0x1
 11403                           
 11404     0071                     ??_I2C1_DO_SEND_RESTART_READ:	
 11405                           ; 1 bytes @ 0x1
 11406                           
 11407     0071                     ??_I2C1_DO_SEND_RESTART_WRITE:	
 11408                           ; 1 bytes @ 0x1
 11409                           
 11410     0071                     ??_I2C1_DO_SEND_RESTART:	
 11411                           ; 1 bytes @ 0x1
 11412                           
 11413     0071                     ??_I2C1_DO_SEND_STOP:	
 11414                           ; 1 bytes @ 0x1
 11415                           
 11416     0071                     ??_I2C1_DO_RX_ACK:	
 11417                           ; 1 bytes @ 0x1
 11418                           
 11419     0071                     ??_I2C1_DO_RX_NACK_STOP:	
 11420                           ; 1 bytes @ 0x1
 11421                           
 11422     0071                     ??_I2C1_DO_RX_NACK_RESTART:	
 11423                           ; 1 bytes @ 0x1
 11424                           
 11425     0071                     ??_I2C1_DO_RESET:	
 11426                           ; 1 bytes @ 0x1
 11427                           
 11428     0071                     ??_I2C1_MasterClearIrq:	
 11429                           ; 1 bytes @ 0x1
 11430                           
 11431     0071                     ??_I2C1_MasterOpen:	
 11432                           ; 1 bytes @ 0x1
 11433                           
 11434     0071                     ??_I2C1_MasterDisableIrq:	
 11435                           ; 1 bytes @ 0x1
 11436                           
 11437     0071                     ??_I2C1_MasterClose:	
 11438                           ; 1 bytes @ 0x1
 11439                           
 11440     0071                     ??_I2C1_MasterStart:	
 11441                           ; 1 bytes @ 0x1
 11442                           
 11443     0071                     ?_I2C1_SetCallback:	
 11444                           ; 1 bytes @ 0x1
 11445                           
 11446     0071                     ??_I2C1_MasterWaitForEvent:	
 11447                           ; 1 bytes @ 0x1
 11448                           
 11449     0071                     ??_I2C1_MasterIsNack:	
 11450                           ; 1 bytes @ 0x1
 11451                           
 11452     0071                     ??_I2C1_MasterSendTxData:	
 11453                           ; 1 bytes @ 0x1
 11454                           
 11455     0071                     ??_I2C1_MasterGetRxData:	
 11456                           ; 1 bytes @ 0x1
 11457                           
 11458     0071                     ??_I2C1_MasterSendAck:	
 11459                           ; 1 bytes @ 0x1
 11460                           
 11461     0071                     ??_I2C1_MasterStartRx:	
 11462                           ; 1 bytes @ 0x1
 11463                           
 11464     0071                     ??_I2C1_MasterSetIrq:	
 11465                           ; 1 bytes @ 0x1
 11466                           
 11467     0071                     ??_I2C1_MasterEnableRestart:	
 11468                           ; 1 bytes @ 0x1
 11469                           
 11470     0071                     ??_I2C1_MasterStop:	
 11471                           ; 1 bytes @ 0x1
 11472                           
 11473     0071                     ??_I2C1_MasterSendNack:	
 11474                           ; 1 bytes @ 0x1
 11475                           
 11476     0071                     ?_bitWrite:	
 11477                           ; 1 bytes @ 0x1
 11478                           
 11479     0071                     ?_bitRead:	
 11480                           ; 1 bytes @ 0x1
 11481                           
 11482     0071                     ??_LIGHTBLUE_Initialize:	
 11483                           ; 1 bytes @ 0x1
 11484                           
 11485     0071                     ??_INTERRUPT_InterruptManager:	
 11486                           ; 1 bytes @ 0x1
 11487                           
 11488     0071                     ??_TMR0_HasOverflowOccured:	
 11489                           ; 1 bytes @ 0x1
 11490                           
 11491     0071                     ?_strlen:	
 11492                           ; 1 bytes @ 0x1
 11493                           
 11494     0071                     ?_swap:	
 11495                           ; 2 bytes @ 0x1
 11496                           
 11497     0071                     ?_strncmp:	
 11498                           ; 2 bytes @ 0x1
 11499                           
 11500     0071                     ?_strchr:	
 11501                           ; 2 bytes @ 0x1
 11502                           
 11503     0071                     RN487X_Reset@value:	
 11504                           ; 2 bytes @ 0x1
 11505                           
 11506     0071                     RN487X_IndicateRx@value:	
 11507                           ; 1 bytes @ 0x1
 11508                           
 11509     0071                     RN487X_SetSystemMode@mode:	
 11510                           ; 1 bytes @ 0x1
 11511                           
 11512     0071                     EUSART2_Write@txData:	
 11513                           ; 1 bytes @ 0x1
 11514                           
 11515     0071                     EUSART1_Write@txData:	
 11516                           ; 1 bytes @ 0x1
 11517                           
 11518     0071                     I2C1_Open@address:	
 11519                           ; 1 bytes @ 0x1
 11520                           
 11521     0071                     I2C1_Close@returnValue:	
 11522                           ; 1 bytes @ 0x1
 11523                           
 11524     0071                     I2C1_MasterSendTxData@data:	
 11525                           ; 1 bytes @ 0x1
 11526                           
 11527     0071                     RN487X_SetAsyncMessageHandler@pBuffer:	
 11528                           ; 1 bytes @ 0x1
 11529                           
 11530     0071                     EUSART2_SetFramingErrorHandler@interruptHandler:	
 11531                           ; 2 bytes @ 0x1
 11532                           
 11533     0071                     EUSART2_SetOverrunErrorHandler@interruptHandler:	
 11534                           ; 2 bytes @ 0x1
 11535                           
 11536     0071                     EUSART2_SetErrorHandler@interruptHandler:	
 11537                           ; 2 bytes @ 0x1
 11538                           
 11539     0071                     EUSART2_SetTxInterruptHandler@interruptHandler:	
 11540                           ; 2 bytes @ 0x1
 11541                           
 11542     0071                     EUSART2_SetRxInterruptHandler@interruptHandler:	
 11543                           ; 2 bytes @ 0x1
 11544                           
 11545     0071                     EUSART1_SetFramingErrorHandler@interruptHandler:	
 11546                           ; 2 bytes @ 0x1
 11547                           
 11548     0071                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
 11549                           ; 2 bytes @ 0x1
 11550                           
 11551     0071                     EUSART1_SetErrorHandler@interruptHandler:	
 11552                           ; 2 bytes @ 0x1
 11553                           
 11554     0071                     EUSART1_SetTxInterruptHandler@interruptHandler:	
 11555                           ; 2 bytes @ 0x1
 11556                           
 11557     0071                     EUSART1_SetRxInterruptHandler@interruptHandler:	
 11558                           ; 2 bytes @ 0x1
 11559                           
 11560     0071                     IOCAF6_SetInterruptHandler@InterruptHandler:	
 11561                           ; 2 bytes @ 0x1
 11562                           
 11563     0071                     I2C1_SetBuffer@bufferSize:	
 11564                           ; 2 bytes @ 0x1
 11565                           
 11566     0071                     I2C1_SetCallback@cb:	
 11567                           ; 2 bytes @ 0x1
 11568                           
 11569     0071                     DELAY_milliseconds@milliseconds:	
 11570                           ; 2 bytes @ 0x1
 11571                           
 11572     0071                     bitRead@reg:	
 11573                           ; 2 bytes @ 0x1
 11574                           
 11575     0071                     bitWrite@reg:	
 11576                           ; 2 bytes @ 0x1
 11577                           
 11578     0071                     swap@reg:	
 11579                           ; 2 bytes @ 0x1
 11580                           
 11581     0071                     strcpy@src:	
 11582                           ; 2 bytes @ 0x1
 11583                           
 11584     0071                     strlen@s:	
 11585                           ; 2 bytes @ 0x1
 11586                           
 11587     0071                     strchr@s:	
 11588                           ; 2 bytes @ 0x1
 11589                           
 11590     0071                     strncmp@l:	
 11591                           ; 2 bytes @ 0x1
 11592                           
 11593                           
 11594                           ; 2 bytes @ 0x1
 11595     0071                     	ds	1
 11596     0072                     ??_EUSART1_Write:
 11597     0072                     ??_EUSART2_Write:	
 11598                           ; 1 bytes @ 0x2
 11599                           
 11600     0072                     ??_RN487X_IndicateRx:	
 11601                           ; 1 bytes @ 0x2
 11602                           
 11603     0072                     ??_RN487X_Reset:	
 11604                           ; 1 bytes @ 0x2
 11605                           
 11606     0072                     ??_RN487X_SetSystemMode:	
 11607                           ; 1 bytes @ 0x2
 11608                           
 11609     0072                     ??_I2C1_DO_SEND_ADR_WRITE:	
 11610                           ; 1 bytes @ 0x2
 11611                           
 11612     0072                     EUSART2_Read@readValue:	
 11613                           ; 1 bytes @ 0x2
 11614                           
 11615     0072                     EUSART1_Read@readValue:	
 11616                           ; 1 bytes @ 0x2
 11617                           
 11618     0072                     I2C1_Open@returnValue:	
 11619                           ; 1 bytes @ 0x2
 11620                           
 11621                           
 11622                           ; 1 bytes @ 0x2
 11623     0072                     	ds	1
 11624     0073                     ??_strlen:
 11625     0073                     ??_EUSART1_SetTxInterruptHandler:	
 11626                           ; 1 bytes @ 0x3
 11627                           
 11628     0073                     ??_EUSART1_SetRxInterruptHandler:	
 11629                           ; 1 bytes @ 0x3
 11630                           
 11631     0073                     ??_EUSART1_Initialize:	
 11632                           ; 1 bytes @ 0x3
 11633                           
 11634     0073                     ??_EUSART2_SetTxInterruptHandler:	
 11635                           ; 1 bytes @ 0x3
 11636                           
 11637     0073                     ??_EUSART2_SetRxInterruptHandler:	
 11638                           ; 1 bytes @ 0x3
 11639                           
 11640     0073                     ??_EUSART2_Initialize:	
 11641                           ; 1 bytes @ 0x3
 11642                           
 11643     0073                     ??_I2C1_SetBuffer:	
 11644                           ; 1 bytes @ 0x3
 11645                           
 11646     0073                     ??_RN487X_Read@rn487x_interface$F1384:	
 11647                           ; 1 bytes @ 0x3
 11648                           
 11649     0073                     ??_DELAY_milliseconds:	
 11650                           ; 1 bytes @ 0x3
 11651                           
 11652     0073                     ??_strcpy:	
 11653                           ; 1 bytes @ 0x3
 11654                           
 11655     0073                     ??_EUSART2_SetFramingErrorHandler:	
 11656                           ; 1 bytes @ 0x3
 11657                           
 11658     0073                     ??_EUSART2_SetOverrunErrorHandler:	
 11659                           ; 1 bytes @ 0x3
 11660                           
 11661     0073                     ??_EUSART2_SetErrorHandler:	
 11662                           ; 1 bytes @ 0x3
 11663                           
 11664     0073                     ??_EUSART1_SetFramingErrorHandler:	
 11665                           ; 1 bytes @ 0x3
 11666                           
 11667     0073                     ??_EUSART1_SetOverrunErrorHandler:	
 11668                           ; 1 bytes @ 0x3
 11669                           
 11670     0073                     ??_EUSART1_SetErrorHandler:	
 11671                           ; 1 bytes @ 0x3
 11672                           
 11673     0073                     ??_PIN_MANAGER_Initialize:	
 11674                           ; 1 bytes @ 0x3
 11675                           
 11676     0073                     ??_IOCAF6_SetInterruptHandler:	
 11677                           ; 1 bytes @ 0x3
 11678                           
 11679     0073                     ??_swap:	
 11680                           ; 1 bytes @ 0x3
 11681                           
 11682     0073                     ??_rn487x_PrintMessageStart:	
 11683                           ; 1 bytes @ 0x3
 11684                           
 11685     0073                     ??_rn487x_PrintMessageEnd:	
 11686                           ; 1 bytes @ 0x3
 11687                           
 11688     0073                     ??_rn487x_PrintIndicatorCharacters:	
 11689                           ; 1 bytes @ 0x3
 11690                           
 11691     0073                     ?_RN487X_ReadMsg:	
 11692                           ; 1 bytes @ 0x3
 11693                           
 11694     0073                     ??_RN487X_ReadDefaultResponse:	
 11695                           ; 1 bytes @ 0x3
 11696                           
 11697     0073                     ??_SYSTEM_Initialize:	
 11698                           ; 1 bytes @ 0x3
 11699                           
 11700     0073                     rn487x_PrintIndicatorCharacters@messageType:	
 11701                           ; 1 bytes @ 0x3
 11702                           
 11703     0073                     RN487X_SetAsyncMessageHandler@len:	
 11704                           ; 1 bytes @ 0x3
 11705                           
 11706     0073                     I2C1_SetBuffer@buffer:	
 11707                           ; 1 bytes @ 0x3
 11708                           
 11709     0073                     I2C1_SetCallback@ptr:	
 11710                           ; 1 bytes @ 0x3
 11711                           
 11712     0073                     bitRead@position:	
 11713                           ; 1 bytes @ 0x3
 11714                           
 11715     0073                     bitWrite@position:	
 11716                           ; 1 bytes @ 0x3
 11717                           
 11718     0073                     RN487X_ReadMsg@expectedMsg:	
 11719                           ; 1 bytes @ 0x3
 11720                           
 11721     0073                     strchr@c:	
 11722                           ; 2 bytes @ 0x3
 11723                           
 11724     0073                     strncmp@r:	
 11725                           ; 2 bytes @ 0x3
 11726                           
 11727     0073                     RN487X_ReadDefaultResponse@resp:	
 11728                           ; 2 bytes @ 0x3
 11729                           
 11730                           
 11731                           ; 3 bytes @ 0x3
 11732     0073                     	ds	1
 11733     0074                     ??_RN487X_SetAsyncMessageHandler:
 11734     0074                     ?_RN487X_Delay:	
 11735                           ; 1 bytes @ 0x4
 11736                           
 11737     0074                     ??_I2C1_SetCallback:	
 11738                           ; 1 bytes @ 0x4
 11739                           
 11740     0074                     ??_bitRead:	
 11741                           ; 1 bytes @ 0x4
 11742                           
 11743     0074                     I2C1_SetCallback@idx:	
 11744                           ; 1 bytes @ 0x4
 11745                           
 11746     0074                     bitWrite@value:	
 11747                           ; 1 bytes @ 0x4
 11748                           
 11749     0074                     RN487X_Delay@delayCount:	
 11750                           ; 1 bytes @ 0x4
 11751                           
 11752     0074                     strlen@a:	
 11753                           ; 2 bytes @ 0x4
 11754                           
 11755                           
 11756                           ; 2 bytes @ 0x4
 11757     0074                     	ds	1
 11758     0075                     ?_I2C1_SetDataCompleteCallback:
 11759     0075                     ?_I2C1_SetAddressNackCallback:	
 11760                           ; 1 bytes @ 0x5
 11761                           
 11762     0075                     ??_bitWrite:	
 11763                           ; 1 bytes @ 0x5
 11764                           
 11765     0075                     ??_strchr:	
 11766                           ; 1 bytes @ 0x5
 11767                           
 11768     0075                     RN487X_ReadMsg@msgLen:	
 11769                           ; 1 bytes @ 0x5
 11770                           
 11771     0075                     strcpy@d:	
 11772                           ; 1 bytes @ 0x5
 11773                           
 11774     0075                     I2C1_SetDataCompleteCallback@cb:	
 11775                           ; 1 bytes @ 0x5
 11776                           
 11777     0075                     I2C1_SetAddressNackCallback@cb:	
 11778                           ; 2 bytes @ 0x5
 11779                           
 11780     0075                     strncmp@n:	
 11781                           ; 2 bytes @ 0x5
 11782                           
 11783                           
 11784                           ; 2 bytes @ 0x5
 11785     0075                     	ds	1
 11786     0076                     ?_LIGHTBLUE_SplitByte:
 11787     0076                     ?_RN487X_Write:	
 11788                           ; 1 bytes @ 0x6
 11789                           
 11790     0076                     ??_RN487X_Delay:	
 11791                           ; 1 bytes @ 0x6
 11792                           
 11793     0076                     ??_RN487X_Init:	
 11794                           ; 1 bytes @ 0x6
 11795                           
 11796     0076                     ??_RN487X_ReadMsg:	
 11797                           ; 1 bytes @ 0x6
 11798                           
 11799     0076                     LIGHTBLUE_SplitByte@value:	
 11800                           ; 1 bytes @ 0x6
 11801                           
 11802     0076                     RN487X_Write@txData:	
 11803                           ; 1 bytes @ 0x6
 11804                           
 11805     0076                     RN487X_ReadDefaultResponse@status:	
 11806                           ; 1 bytes @ 0x6
 11807                           
 11808     0076                     bitWrite@msb:	
 11809                           ; 1 bytes @ 0x6
 11810                           
 11811     0076                     strcpy@dest:	
 11812                           ; 1 bytes @ 0x6
 11813                           
 11814                           
 11815                           ; 1 bytes @ 0x6
 11816     0076                     	ds	1
 11817     0077                     ?_LIGHTBLUE_SendPacket:
 11818     0077                     ??_LIGHTBLUE_SplitByte:	
 11819                           ; 1 bytes @ 0x7
 11820                           
 11821     0077                     ??_RN487X_Write:	
 11822                           ; 1 bytes @ 0x7
 11823                           
 11824     0077                     ??_strncmp:	
 11825                           ; 1 bytes @ 0x7
 11826                           
 11827     0077                     ??_LIGHTBLUE_SendSerialData:	
 11828                           ; 1 bytes @ 0x7
 11829                           
 11830     0077                     ?_rn487x_PrintMessage:	
 11831                           ; 1 bytes @ 0x7
 11832                           
 11833     0077                     ?_RN487X_SendCmd:	
 11834                           ; 1 bytes @ 0x7
 11835                           
 11836     0077                     LIGHTBLUE_SendPacket@payload:	
 11837                           ; 1 bytes @ 0x7
 11838                           
 11839     0077                     RN487X_SendCmd@cmdLen:	
 11840                           ; 1 bytes @ 0x7
 11841                           
 11842     0077                     I2C1_SetDataCompleteCallback@ptr:	
 11843                           ; 1 bytes @ 0x7
 11844                           
 11845     0077                     bitWrite@mask:	
 11846                           ; 1 bytes @ 0x7
 11847                           
 11848     0077                     rn487x_PrintMessage@passedMessage:	
 11849                           ; 1 bytes @ 0x7
 11850                           
 11851     0077                     I2C1_SetAddressNackCallback@ptr:	
 11852                           ; 2 bytes @ 0x7
 11853                           
 11854                           
 11855                           ; 2 bytes @ 0x7
 11856     0077                     	ds	1
 11857     0078                     ??_LIGHTBLUE_SendPacket:
 11858     0078                     ??_I2C1_SetDataCompleteCallback:	
 11859                           ; 1 bytes @ 0x8
 11860                           
 11861     0078                     ?_rd1RegCompleteHandler:	
 11862                           ; 1 bytes @ 0x8
 11863                           
 11864     0078                     ?_rd2RegCompleteHandler:	
 11865                           ; 1 bytes @ 0x8
 11866                           
 11867     0078                     ?_wr1RegCompleteHandler:	
 11868                           ; 1 bytes @ 0x8
 11869                           
 11870     0078                     ?_wr2RegCompleteHandler:	
 11871                           ; 1 bytes @ 0x8
 11872                           
 11873     0078                     ?_rdBlkRegCompleteHandler:	
 11874                           ; 1 bytes @ 0x8
 11875                           
 11876     0078                     ?_I2C1_CallbackReturnStop:	
 11877                           ; 1 bytes @ 0x8
 11878                           
 11879     0078                     ?_I2C1_CallbackReturnReset:	
 11880                           ; 1 bytes @ 0x8
 11881                           
 11882     0078                     ?_wr1RegCompleteHandler@strncmp$F4855:	
 11883                           ; 1 bytes @ 0x8
 11884                           
 11885     0078                     ?_rd1RegCompleteHandler@strncmp$F4861:	
 11886                           ; 1 bytes @ 0x8
 11887                           
 11888     0078                     ?_rd2RegCompleteHandler@strncmp$F4864:	
 11889                           ; 1 bytes @ 0x8
 11890                           
 11891     0078                     ?_wr2RegCompleteHandler@strncmp$F4867:	
 11892                           ; 1 bytes @ 0x8
 11893                           
 11894     0078                     ?_rdBlkRegCompleteHandler@strncmp$F4873:	
 11895                           ; 1 bytes @ 0x8
 11896                           
 11897     0078                     ??_RN487X_SendCmd:	
 11898                           ; 1 bytes @ 0x8
 11899                           
 11900     0078                     ?_strstr:	
 11901                           ; 1 bytes @ 0x8
 11902                           
 11903     0078                     LIGHTBLUE_SendSerialData@length:	
 11904                           ; 2 bytes @ 0x8
 11905                           
 11906     0078                     LIGHTBLUE_SplitByte@payload:	
 11907                           ; 1 bytes @ 0x8
 11908                           
 11909     0078                     wr1RegCompleteHandler@p:	
 11910                           ; 1 bytes @ 0x8
 11911                           
 11912     0078                     rd1RegCompleteHandler@p:	
 11913                           ; 1 bytes @ 0x8
 11914                           
 11915     0078                     rd2RegCompleteHandler@p:	
 11916                           ; 1 bytes @ 0x8
 11917                           
 11918     0078                     wr2RegCompleteHandler@p:	
 11919                           ; 1 bytes @ 0x8
 11920                           
 11921     0078                     rdBlkRegCompleteHandler@p:	
 11922                           ; 1 bytes @ 0x8
 11923                           
 11924     0078                     rd1RegCompleteHandler@i2c1_master_example$F1239@ptr:	
 11925                           ; 1 bytes @ 0x8
 11926                           
 11927     0078                     rd2RegCompleteHandler@i2c1_master_example$F1250@ptr:	
 11928                           ; 1 bytes @ 0x8
 11929                           
 11930     0078                     wr1RegCompleteHandler@i2c1_master_example$F1256@ptr:	
 11931                           ; 1 bytes @ 0x8
 11932                           
 11933     0078                     wr2RegCompleteHandler@i2c1_master_example$F1262@ptr:	
 11934                           ; 1 bytes @ 0x8
 11935                           
 11936     0078                     rdBlkRegCompleteHandler@i2c1_master_example$F1273@ptr:	
 11937                           ; 1 bytes @ 0x8
 11938                           
 11939     0078                     RN487X_ReadMsg@resp:	
 11940                           ; 1 bytes @ 0x8
 11941                           
 11942     0078                     I2C1_CallbackReturnStop@funPtr:	
 11943                           ; 1 bytes @ 0x8
 11944                           
 11945     0078                     I2C1_CallbackReturnReset@funPtr:	
 11946                           ; 1 bytes @ 0x8
 11947                           
 11948     0078                     bitWrite@lsb:	
 11949                           ; 1 bytes @ 0x8
 11950                           
 11951     0078                     swap@upperByte:	
 11952                           ; 1 bytes @ 0x8
 11953                           
 11954     0078                     strstr@h:	
 11955                           ; 1 bytes @ 0x8
 11956                           
 11957                           
 11958                           ; 2 bytes @ 0x8
 11959     0078                     	ds	1
 11960     0079                     ?_LIGHTBLUE_SplitWord:
 11961     0079                     ??_I2C1_SetAddressNackCallback:	
 11962                           ; 1 bytes @ 0x9
 11963                           
 11964     0079                     ??_rd1RegCompleteHandler:	
 11965                           ; 1 bytes @ 0x9
 11966                           
 11967     0079                     ??_rd2RegCompleteHandler:	
 11968                           ; 1 bytes @ 0x9
 11969                           
 11970     0079                     ??_wr1RegCompleteHandler:	
 11971                           ; 1 bytes @ 0x9
 11972                           
 11973     0079                     ??_wr2RegCompleteHandler:	
 11974                           ; 1 bytes @ 0x9
 11975                           
 11976     0079                     ??_rdBlkRegCompleteHandler:	
 11977                           ; 1 bytes @ 0x9
 11978                           
 11979     0079                     ??_I2C1_DO_TX:	
 11980                           ; 1 bytes @ 0x9
 11981                           
 11982     0079                     ??_I2C1_DO_RX:	
 11983                           ; 1 bytes @ 0x9
 11984                           
 11985     0079                     ??_I2C1_DO_TX_EMPTY:	
 11986                           ; 1 bytes @ 0x9
 11987                           
 11988     0079                     ??_I2C1_DO_ADDRESS_NACK:	
 11989                           ; 1 bytes @ 0x9
 11990                           
 11991     0079                     ??_I2C1_CallbackReturnStop:	
 11992                           ; 1 bytes @ 0x9
 11993                           
 11994     0079                     ??_I2C1_CallbackReturnReset:	
 11995                           ; 1 bytes @ 0x9
 11996                           
 11997     0079                     ??_wr1RegCompleteHandler@strncmp$F4857:	
 11998                           ; 1 bytes @ 0x9
 11999                           
 12000     0079                     ??_rd1RegCompleteHandler@strncmp$F4863:	
 12001                           ; 1 bytes @ 0x9
 12002                           
 12003     0079                     ??_rd2RegCompleteHandler@strncmp$F4866:	
 12004                           ; 1 bytes @ 0x9
 12005                           
 12006     0079                     ??_wr2RegCompleteHandler@strncmp$F4869:	
 12007                           ; 1 bytes @ 0x9
 12008                           
 12009     0079                     ??_rdBlkRegCompleteHandler@strncmp$F4875:	
 12010                           ; 1 bytes @ 0x9
 12011                           
 12012     0079                     ??_rn487x_PrintMessage:	
 12013                           ; 1 bytes @ 0x9
 12014                           
 12015     0079                     LIGHTBLUE_SendSerialData@serialData:	
 12016                           ; 1 bytes @ 0x9
 12017                           
 12018     0079                     RN487X_SendCmd@index:	
 12019                           ; 1 bytes @ 0x9
 12020                           
 12021     0079                     RN487X_ReadMsg@index:	
 12022                           ; 1 bytes @ 0x9
 12023                           
 12024     0079                     swap@lowerByte:	
 12025                           ; 1 bytes @ 0x9
 12026                           
 12027     0079                     LIGHTBLUE_SplitWord@value:	
 12028                           ; 1 bytes @ 0x9
 12029                           
 12030                           
 12031                           ; 2 bytes @ 0x9
 12032     0079                     	ds	1
 12033     007A                     LIGHTBLUE_SendPacket@packetID:
 12034     007A                     RN487X_SendCmd@cmd:	
 12035                           ; 1 bytes @ 0xA
 12036                           
 12037     007A                     strstr@n:	
 12038                           ; 1 bytes @ 0xA
 12039                           
 12040                           
 12041                           ; 2 bytes @ 0xA
 12042     007A                     	ds	1
 12043     007B                     ??_i2c_write1ByteRegister:
 12044     007B                     ??_i2c_read1ByteRegister:	
 12045                           ; 1 bytes @ 0xB
 12046                           
 12047     007B                     ??_BMA253_NewAccelDataRdyY:	
 12048                           ; 1 bytes @ 0xB
 12049                           
 12050     007B                     ??_BMA253_NewAccelDataRdyZ:	
 12051                           ; 1 bytes @ 0xB
 12052                           
 12053     007B                     ??_TMAG5273_GetTemperatureValue:	
 12054                           ; 1 bytes @ 0xB
 12055                           
 12056     007B                     ??_LIGHTBLUE_SplitWord:	
 12057                           ; 1 bytes @ 0xB
 12058                           
 12059     007B                     ??_LIGHTBLUE_UpdateErrorLed:	
 12060                           ; 1 bytes @ 0xB
 12061                           
 12062     007B                     ??_RN487X_EnterCmdMode:	
 12063                           ; 1 bytes @ 0xB
 12064                           
 12065     007B                     ??_RN487X_SetOutputs:	
 12066                           ; 1 bytes @ 0xB
 12067                           
 12068     007B                     ??_RN487X_EnterDataMode:	
 12069                           ; 1 bytes @ 0xB
 12070                           
 12071     007B                     ??_I2C1_MasterWrite:	
 12072                           ; 1 bytes @ 0xB
 12073                           
 12074     007B                     ??_I2C1_MasterRead:	
 12075                           ; 1 bytes @ 0xB
 12076                           
 12077     007B                     ??_I2C1_Poller:	
 12078                           ; 1 bytes @ 0xB
 12079                           
 12080     007B                     ??_isConnected:	
 12081                           ; 1 bytes @ 0xB
 12082                           
 12083     007B                     ??_TMAG5273_GetManufacture:	
 12084                           ; 1 bytes @ 0xB
 12085                           
 12086     007B                     ??_LIGHTBLUE_PushButton:	
 12087                           ; 1 bytes @ 0xB
 12088                           
 12089     007B                     ??_LIGHTBLUE_LedState:	
 12090                           ; 1 bytes @ 0xB
 12091                           
 12092     007B                     ??_LIGHTBLUE_SetErrorLedValue:	
 12093                           ; 1 bytes @ 0xB
 12094                           
 12095     007B                     ??_i2c_readNBytes:	
 12096                           ; 1 bytes @ 0xB
 12097                           
 12098     007B                     ??_I2C1_MasterOperation:	
 12099                           ; 1 bytes @ 0xB
 12100                           
 12101     007B                     BMA253_NewAccelDataRdyY@yNewData:	
 12102                           ; 1 bytes @ 0xB
 12103                           
 12104     007B                     BMA253_NewAccelDataRdyZ@zNewData:	
 12105                           ; 1 bytes @ 0xB
 12106                           
 12107     007B                     LIGHTBLUE_SplitWord@payload:	
 12108                           ; 1 bytes @ 0xB
 12109                           
 12110     007B                     i2c_write1ByteRegister@address:	
 12111                           ; 1 bytes @ 0xB
 12112                           
 12113     007B                     i2c_readNBytes@address:	
 12114                           ; 1 bytes @ 0xB
 12115                           
 12116                           
 12117                           ; 1 bytes @ 0xB
 12118     007B                     	ds	1
 12119     007C                     ??_readRegister:
 12120     007C                     ??_RN487X_Read:	
 12121                           ; 1 bytes @ 0xC
 12122                           
 12123     007C                     ??_RN487X_DataReady:	
 12124                           ; 1 bytes @ 0xC
 12125                           
 12126     007C                     ??_RN487X_MessageHandler:	
 12127                           ; 1 bytes @ 0xC
 12128                           
 12129     007C                     ??_begin:	
 12130                           ; 1 bytes @ 0xC
 12131                           
 12132     007C                     ??_LIGHTBLUE_TemperatureSensor:	
 12133                           ; 1 bytes @ 0xC
 12134                           
 12135     007C                     ??_LIGHTBLUE_AccelSensor:	
 12136                           ; 1 bytes @ 0xC
 12137                           
 12138     007C                     ??_writeRegister:	
 12139                           ; 1 bytes @ 0xC
 12140                           
 12141     007C                     ??_getDeviceStatus:	
 12142                           ; 1 bytes @ 0xC
 12143                           
 12144                           
 12145                           	psect	cstackBANK0
 12146     0020                     __pcstackBANK0:	
 12147                           ; 1 bytes @ 0xC
 12148                           
 12149     0020                     ?_RN487X_SetOutputs:
 12150     0020                     ??_strstr:	
 12151                           ; 1 bytes @ 0x0
 12152                           
 12153     0020                     ??_I2C1_MasterFsm:	
 12154                           ; 1 bytes @ 0x0
 12155                           
 12156     0020                     ??_LIGHTBLUE_SendProtocolVersion:	
 12157                           ; 1 bytes @ 0x0
 12158                           
 12159     0020                     LIGHTBLUE_PushButton@button:	
 12160                           ; 1 bytes @ 0x0
 12161                           
 12162     0020                     RN487X_SetOutputs@bitMap:	
 12163                           ; 1 bytes @ 0x0
 12164                           
 12165     0020                     LIGHTBLUE_LedState@payload:	
 12166                           ; 2 bytes @ 0x0
 12167                           
 12168     0020                     rn487x_PrintMessage@printCharacter:	
 12169                           ; 3 bytes @ 0x0
 12170                           
 12171                           
 12172                           ; 32 bytes @ 0x0
 12173     0020                     	ds	1
 12174     0021                     LIGHTBLUE_PushButton@payload:
 12175                           
 12176                           ; 3 bytes @ 0x1
 12177     0021                     	ds	1
 12178     0022                     RN487X_SetOutputs@ioLowNibble:
 12179     0022                     I2C1_MasterOperation@read:	
 12180                           ; 1 bytes @ 0x2
 12181                           
 12182     0022                     strstr@nl:	
 12183                           ; 1 bytes @ 0x2
 12184                           
 12185     0022                     LIGHTBLUE_SendProtocolVersion@payload:	
 12186                           ; 2 bytes @ 0x2
 12187                           
 12188                           
 12189                           ; 19 bytes @ 0x2
 12190     0022                     	ds	1
 12191     0023                     LIGHTBLUE_LedState@led:
 12192     0023                     RN487X_SetOutputs@stateLowNibble:	
 12193                           ; 1 bytes @ 0x3
 12194                           
 12195     0023                     I2C1_MasterOperation@returnValue:	
 12196                           ; 1 bytes @ 0x3
 12197                           
 12198                           
 12199                           ; 1 bytes @ 0x3
 12200     0023                     	ds	1
 12201     0024                     ?_i2c_write1ByteRegister:
 12202     0024                     ?_i2c_read1ByteRegister:	
 12203                           ; 1 bytes @ 0x4
 12204                           
 12205     0024                     ?_i2c_readNBytes:	
 12206                           ; 1 bytes @ 0x4
 12207                           
 12208     0024                     ?_i2c_read2ByteRegister:	
 12209                           ; 1 bytes @ 0x4
 12210                           
 12211     0024                     i2c_write1ByteRegister@reg:	
 12212                           ; 2 bytes @ 0x4
 12213                           
 12214     0024                     i2c_read1ByteRegister@reg:	
 12215                           ; 1 bytes @ 0x4
 12216                           
 12217     0024                     i2c_read2ByteRegister@reg:	
 12218                           ; 1 bytes @ 0x4
 12219                           
 12220     0024                     i2c_readNBytes@data:	
 12221                           ; 1 bytes @ 0x4
 12222                           
 12223     0024                     RN487X_SetOutputs@ioHighNibble:	
 12224                           ; 1 bytes @ 0x4
 12225                           
 12226                           
 12227                           ; 1 bytes @ 0x4
 12228     0024                     	ds	1
 12229     0025                     i2c_write1ByteRegister@data:
 12230     0025                     i2c_read1ByteRegister@address:	
 12231                           ; 1 bytes @ 0x5
 12232                           
 12233     0025                     RN487X_SetOutputs@stateHighNibble:	
 12234                           ; 1 bytes @ 0x5
 12235                           
 12236     0025                     i2c_readNBytes@len:	
 12237                           ; 1 bytes @ 0x5
 12238                           
 12239                           
 12240                           ; 2 bytes @ 0x5
 12241     0025                     	ds	1
 12242     0026                     ??_i2c_read2ByteRegister:
 12243     0026                     ?_writeRegister:	
 12244                           ; 1 bytes @ 0x6
 12245                           
 12246     0026                     LIGHTBLUE_SetErrorLedValue@value:	
 12247                           ; 1 bytes @ 0x6
 12248                           
 12249     0026                     i2c_read1ByteRegister@e:	
 12250                           ; 1 bytes @ 0x6
 12251                           
 12252     0026                     writeRegister@data:	
 12253                           ; 1 bytes @ 0x6
 12254                           
 12255                           
 12256                           ; 1 bytes @ 0x6
 12257     0026                     	ds	1
 12258     0027                     ?_LIGHTBLUE_PerformAction:
 12259     0027                     ?_readRegisters:	
 12260                           ; 1 bytes @ 0x7
 12261                           
 12262     0027                     LIGHTBLUE_PerformAction@data:	
 12263                           ; 1 bytes @ 0x7
 12264                           
 12265     0027                     readRegisters@dataBuffer:	
 12266                           ; 1 bytes @ 0x7
 12267                           
 12268     0027                     writeRegister@regAddress:	
 12269                           ; 1 bytes @ 0x7
 12270                           
 12271     0027                     i2c_read1ByteRegister@x:	
 12272                           ; 1 bytes @ 0x7
 12273                           
 12274                           
 12275                           ; 2 bytes @ 0x7
 12276     0027                     	ds	1
 12277     0028                     ??_LIGHTBLUE_PerformAction:
 12278     0028                     readRegisters@numBytes:	
 12279                           ; 1 bytes @ 0x8
 12280                           
 12281                           
 12282                           ; 1 bytes @ 0x8
 12283     0028                     	ds	1
 12284     0029                     ??_readRegisters:
 12285     0029                     LIGHTBLUE_PerformAction@id:	
 12286                           ; 1 bytes @ 0x9
 12287                           
 12288     0029                     i2c_read1ByteRegister@d2:	
 12289                           ; 1 bytes @ 0x9
 12290                           
 12291                           
 12292                           ; 1 bytes @ 0x9
 12293     0029                     	ds	1
 12294     002A                     ??_BMA253_GetAccelDataY:
 12295     002A                     ??_BMA253_GetAccelDataZ:	
 12296                           ; 1 bytes @ 0xA
 12297                           
 12298     002A                     LIGHTBLUE_PerformAction@led:	
 12299                           ; 1 bytes @ 0xA
 12300                           
 12301     002A                     i2c_read2ByteRegister@address:	
 12302                           ; 1 bytes @ 0xA
 12303                           
 12304                           
 12305                           ; 1 bytes @ 0xA
 12306     002A                     	ds	1
 12307     002B                     ??_LIGHTBLUE_ParseIncomingPacket:
 12308     002B                     readRegisters@regAddress:	
 12309                           ; 1 bytes @ 0xB
 12310                           
 12311     002B                     i2c_read2ByteRegister@result:	
 12312                           ; 1 bytes @ 0xB
 12313                           
 12314                           
 12315                           ; 2 bytes @ 0xB
 12316     002B                     	ds	1
 12317     002C                     readRegister@regAddress:
 12318                           
 12319                           ; 1 bytes @ 0xC
 12320     002C                     	ds	1
 12321     002D                     ?_TMAG5273_GetManufacture:
 12322     002D                     ?_TMAG5273_CalcTemperature:	
 12323                           ; 2 bytes @ 0xD
 12324                           
 12325     002D                     BMA253_GetAccelDataY@yAccelData:	
 12326                           ; 2 bytes @ 0xD
 12327                           
 12328     002D                     BMA253_GetAccelDataZ@zAccelData:	
 12329                           ; 1 bytes @ 0xD
 12330                           
 12331     002D                     readRegister@regVal:	
 12332                           ; 1 bytes @ 0xD
 12333                           
 12334     002D                     _LIGHTBLUE_ParseIncomingPacket$463:	
 12335                           ; 1 bytes @ 0xD
 12336                           
 12337                           
 12338                           ; 2 bytes @ 0xD
 12339     002D                     	ds	1
 12340     002E                     ??_getLowPower:
 12341     002E                     ??_getOperatingMode:	
 12342                           ; 1 bytes @ 0xE
 12343                           
 12344     002E                     ??_getMagneticChannel:	
 12345                           ; 1 bytes @ 0xE
 12346                           
 12347     002E                     ??_getTemperatureEN:	
 12348                           ; 1 bytes @ 0xE
 12349                           
 12350     002E                     ??_getAngleEn:	
 12351                           ; 1 bytes @ 0xE
 12352                           
 12353     002E                     BMA253_GetAccelDataY@lsbData:	
 12354                           ; 1 bytes @ 0xE
 12355                           
 12356     002E                     BMA253_GetAccelDataZ@lsbData:	
 12357                           ; 1 bytes @ 0xE
 12358                           
 12359     002E                     getDeviceStatus@deviceStatusReg:	
 12360                           ; 1 bytes @ 0xE
 12361                           
 12362                           
 12363                           ; 1 bytes @ 0xE
 12364     002E                     	ds	1
 12365     002F                     ??_getError:
 12366     002F                     ??_TMAG5273_CalcTemperature:	
 12367                           ; 1 bytes @ 0xF
 12368                           
 12369     002F                     BMA253_GetAccelDataY@msbData:	
 12370                           ; 1 bytes @ 0xF
 12371                           
 12372     002F                     BMA253_GetAccelDataZ@msbData:	
 12373                           ; 1 bytes @ 0xF
 12374                           
 12375     002F                     _LIGHTBLUE_ParseIncomingPacket$464:	
 12376                           ; 1 bytes @ 0xF
 12377                           
 12378     002F                     TMAG5273_GetManufacture@read:	
 12379                           ; 2 bytes @ 0xF
 12380                           
 12381                           
 12382                           ; 2 bytes @ 0xF
 12383     002F                     	ds	1
 12384     0030                     ??_BMA253_GetAccelDataXYZ:
 12385     0030                     getLowPower@lowPowerModeBit:	
 12386                           ; 1 bytes @ 0x10
 12387                           
 12388     0030                     getOperatingMode@opMode:	
 12389                           ; 1 bytes @ 0x10
 12390                           
 12391     0030                     getMagneticChannel@magChannel:	
 12392                           ; 1 bytes @ 0x10
 12393                           
 12394     0030                     getAngleEn@angleReg:	
 12395                           ; 1 bytes @ 0x10
 12396                           
 12397     0030                     getTemperatureEN@tempEN:	
 12398                           ; 1 bytes @ 0x10
 12399                           
 12400                           
 12401                           ; 1 bytes @ 0x10
 12402     0030                     	ds	1
 12403     0031                     BMA253_GetAccelDataXYZ@lSB:
 12404     0031                     getLowPower@lowPowerMode:	
 12405                           ; 1 bytes @ 0x11
 12406                           
 12407     0031                     getOperatingMode@opMode0:	
 12408                           ; 1 bytes @ 0x11
 12409                           
 12410     0031                     getMagneticChannel@magMode4:	
 12411                           ; 1 bytes @ 0x11
 12412                           
 12413     0031                     getAngleEn@angleDir2:	
 12414                           ; 1 bytes @ 0x11
 12415                           
 12416     0031                     getTemperatureEN@tempENreg:	
 12417                           ; 1 bytes @ 0x11
 12418                           
 12419     0031                     getError@undervoltageError:	
 12420                           ; 1 bytes @ 0x11
 12421                           
 12422     0031                     _LIGHTBLUE_ParseIncomingPacket$465:	
 12423                           ; 1 bytes @ 0x11
 12424                           
 12425                           
 12426                           ; 2 bytes @ 0x11
 12427     0031                     	ds	1
 12428     0032                     BMA253_GetAccelDataXYZ@mSB:
 12429     0032                     getOperatingMode@opMode1:	
 12430                           ; 1 bytes @ 0x12
 12431                           
 12432     0032                     getMagneticChannel@magMode5:	
 12433                           ; 1 bytes @ 0x12
 12434                           
 12435     0032                     getAngleEn@angleDir3:	
 12436                           ; 1 bytes @ 0x12
 12437                           
 12438     0032                     getError@otpCrcError:	
 12439                           ; 1 bytes @ 0x12
 12440                           
 12441                           
 12442                           ; 1 bytes @ 0x12
 12443     0032                     	ds	1
 12444     0033                     BMA253_GetAccelDataXYZ@accelData:
 12445     0033                     LIGHTBLUE_ParseIncomingPacket@receivedByte:	
 12446                           ; 1 bytes @ 0x13
 12447                           
 12448     0033                     getMagneticChannel@magMode6:	
 12449                           ; 1 bytes @ 0x13
 12450                           
 12451     0033                     getError@intPinError:	
 12452                           ; 1 bytes @ 0x13
 12453                           
 12454                           
 12455                           ; 1 bytes @ 0x13
 12456     0033                     	ds	1
 12457     0034                     getMagneticChannel@magMode7:
 12458     0034                     getError@oscillatorError:	
 12459                           ; 1 bytes @ 0x14
 12460                           
 12461     0034                     TMAG5273_CalcTemperature@upperByte:	
 12462                           ; 1 bytes @ 0x14
 12463                           
 12464     0034                     BMA253_GetAccelDataXYZ@sensorValue:	
 12465                           ; 1 bytes @ 0x14
 12466                           
 12467                           
 12468                           ; 2 bytes @ 0x14
 12469     0034                     	ds	1
 12470     0035                     LIGHTBLUE_SendProtocolVersion@value:
 12471     0035                     getError@statusReg:	
 12472                           ; 1 bytes @ 0x15
 12473                           
 12474     0035                     TMAG5273_CalcTemperature@lowerByte:	
 12475                           ; 1 bytes @ 0x15
 12476                           
 12477                           
 12478                           ; 1 bytes @ 0x15
 12479     0035                     	ds	1
 12480     0036                     ??_setMagneticChannel:
 12481     0036                     ??_setTemperatureEn:	
 12482                           ; 1 bytes @ 0x16
 12483                           
 12484     0036                     ??_setOperatingMode:	
 12485                           ; 1 bytes @ 0x16
 12486                           
 12487     0036                     ??_setXYAxisRange:	
 12488                           ; 1 bytes @ 0x16
 12489                           
 12490     0036                     ??_setZAxisRange:	
 12491                           ; 1 bytes @ 0x16
 12492                           
 12493     0036                     LIGHTBLUE_SendProtocolVersion@dataIndex:	
 12494                           ; 1 bytes @ 0x16
 12495                           
 12496     0036                     TMAG5273_CalcTemperature@temperatureData:	
 12497                           ; 1 bytes @ 0x16
 12498                           
 12499     0036                     LIGHTBLUE_AccelSensor@payload:	
 12500                           ; 2 bytes @ 0x16
 12501                           
 12502                           
 12503                           ; 13 bytes @ 0x16
 12504     0036                     	ds	2
 12505     0038                     ?_TMAG5273_GetTemperatureValue:
 12506     0038                     setOperatingMode@opMode:	
 12507                           ; 1 bytes @ 0x18
 12508                           
 12509     0038                     setMagneticChannel@channelMode:	
 12510                           ; 1 bytes @ 0x18
 12511                           
 12512     0038                     setXYAxisRange@xyAxisRange:	
 12513                           ; 1 bytes @ 0x18
 12514                           
 12515     0038                     setZAxisRange@zAxisRange:	
 12516                           ; 1 bytes @ 0x18
 12517                           
 12518     0038                     setTemperatureEn@temperatureEnable:	
 12519                           ; 1 bytes @ 0x18
 12520                           
 12521     0038                     TMAG5273_GetTemperatureValue@temperature:	
 12522                           ; 1 bytes @ 0x18
 12523                           
 12524                           
 12525                           ; 2 bytes @ 0x18
 12526     0038                     	ds	1
 12527     0039                     setOperatingMode@mode:
 12528     0039                     setMagneticChannel@mode:	
 12529                           ; 2 bytes @ 0x19
 12530                           
 12531     0039                     setXYAxisRange@mode:	
 12532                           ; 2 bytes @ 0x19
 12533                           
 12534     0039                     setZAxisRange@mode:	
 12535                           ; 2 bytes @ 0x19
 12536                           
 12537     0039                     setTemperatureEn@mode:	
 12538                           ; 2 bytes @ 0x19
 12539                           
 12540                           
 12541                           ; 2 bytes @ 0x19
 12542     0039                     	ds	1
 12543     003A                     LIGHTBLUE_TemperatureSensor@payload:
 12544                           
 12545                           ; 5 bytes @ 0x1A
 12546     003A                     	ds	5
 12547     003F                     LIGHTBLUE_TemperatureSensor@temperature:
 12548                           
 12549                           ; 2 bytes @ 0x1F
 12550     003F                     	ds	1
 12551     0040                     rn487x_PrintMessage@messageIndex:
 12552                           
 12553                           ; 1 bytes @ 0x20
 12554     0040                     	ds	1
 12555     0041                     ?_RN487X_MessageHandler:
 12556     0041                     RN487X_MessageHandler@message:	
 12557                           ; 1 bytes @ 0x21
 12558                           
 12559                           
 12560                           ; 2 bytes @ 0x21
 12561     0041                     	ds	2
 12562     0043                     RN487X_MessageHandler@messageType:
 12563     0043                     LIGHTBLUE_AccelSensor@accelData:	
 12564                           ; 1 bytes @ 0x23
 12565                           
 12566                           
 12567                           ; 6 bytes @ 0x23
 12568     0043                     	ds	1
 12569     0044                     ??_RN487X_FilterData:
 12570                           
 12571                           ; 1 bytes @ 0x24
 12572     0044                     	ds	4
 12573     0048                     RN487X_FilterData@readChar:
 12574                           
 12575                           ; 1 bytes @ 0x28
 12576     0048                     	ds	1
 12577     0049                     ??_main:
 12578                           
 12579                           ; 1 bytes @ 0x29
 12580     0049                     	ds	1
 12581                           
 12582                           	psect	maintext
 12583     04BD                     __pmaintext:	
 12584 ;;
 12585 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
 12586 ;;
 12587 ;; *************** function _main *****************
 12588 ;; Defined at:
 12589 ;;		line 72 in file "main.c"
 12590 ;; Parameters:    Size  Location     Type
 12591 ;;		None
 12592 ;; Auto vars:     Size  Location     Type
 12593 ;;		None
 12594 ;; Return value:  Size  Location     Type
 12595 ;;                  2  2041[None  ] int 
 12596 ;; Registers used:
 12597 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12598 ;; Tracked objects:
 12599 ;;		On entry : B3F/0
 12600 ;;		On exit  : 0/0
 12601 ;;		Unchanged: 0/0
 12602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12604 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12605 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12606 ;;      Totals:         0       1       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12607 ;;Total ram usage:        2 bytes
 12608 ;; Hardware stack levels required when called: 19
 12609 ;; This function calls:
 12610 ;;		_EUSART1_Read
 12611 ;;		_EUSART1_Write
 12612 ;;		_EUSART1_is_rx_ready
 12613 ;;		_EUSART2_Read
 12614 ;;		_EUSART2_Write
 12615 ;;		_EUSART2_is_rx_ready
 12616 ;;		_LIGHTBLUE_AccelSensor
 12617 ;;		_LIGHTBLUE_Initialize
 12618 ;;		_LIGHTBLUE_LedState
 12619 ;;		_LIGHTBLUE_ParseIncomingPacket
 12620 ;;		_LIGHTBLUE_PushButton
 12621 ;;		_LIGHTBLUE_SendProtocolVersion
 12622 ;;		_LIGHTBLUE_SendSerialData
 12623 ;;		_LIGHTBLUE_TemperatureSensor
 12624 ;;		_RN487X_DataReady
 12625 ;;		_RN487X_Init
 12626 ;;		_RN487X_IsConnected
 12627 ;;		_RN487X_Read
 12628 ;;		_RN487X_SetAsyncMessageHandler
 12629 ;;		_RN487X_Write
 12630 ;;		_SYSTEM_Initialize
 12631 ;;		_TMR0_HasOverflowOccured
 12632 ;;		_begin
 12633 ;; This function is called by:
 12634 ;;		Startup code after reset
 12635 ;; This function uses a non-reentrant model
 12636 ;;
 12637                           
 12638     04BD                     _main:	
 12639                           ;psect for function _main
 12640                           
 12641     04BD                     l15010:	
 12642                           ;incstack = 0
 12643 ;; hardware stack exceeded
 12644                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12645                           
 12646                           
 12647                           ;main.c: 75:     SYSTEM_Initialize();
 12648     04BD  3191  21F2  3184   	fcall	_SYSTEM_Initialize
 12649                           
 12650                           ;main.c: 76:     RN487X_SetAsyncMessageHandler(statusBuffer, sizeof(statusBuffer));
 12651     04C0  3020               	movlw	low _statusBuffer@main$F3783
 12652     04C1  00F1               	movwf	RN487X_SetAsyncMessageHandler@pBuffer
 12653     04C2  3003               	movlw	high _statusBuffer@main$F3783
 12654     04C3  00F2               	movwf	RN487X_SetAsyncMessageHandler@pBuffer+1
 12655     04C4  3050               	movlw	80
 12656     04C5  00F3               	movwf	RN487X_SetAsyncMessageHandler@len
 12657     04C6  3192  2295  3184   	fcall	_RN487X_SetAsyncMessageHandler
 12658     04C9                     l15012:
 12659                           
 12660                           ;main.c: 79:     (INTCONbits.GIE = 1);
 12661     04C9  178B               	bsf	11,7	;volatile
 12662     04CA                     l15014:
 12663                           
 12664                           ;main.c: 82:     (INTCONbits.PEIE = 1);
 12665     04CA  170B               	bsf	11,6	;volatile
 12666     04CB                     l15016:
 12667                           
 12668                           ;main.c: 84:     RN487X_Init();
 12669     04CB  3187  27A1  3184   	fcall	_RN487X_Init
 12670     04CE                     l15018:
 12671                           
 12672                           ;main.c: 85:     LIGHTBLUE_Initialize();
 12673     04CE  319F  2701  3184   	fcall	_LIGHTBLUE_Initialize
 12674                           
 12675                           ;main.c: 86:     begin();
 12676     04D1  318B  23FD  3184   	fcall	_begin
 12677     04D4                     l15020:
 12678                           
 12679                           ;main.c: 89:     {;main.c: 90:         if (RN487X_IsConnected() == 1)
 12680     04D4  3190  2000  3184   	fcall	_RN487X_IsConnected
 12681     04D7  3A01               	xorlw	1
 12682     04D8  1D03               	skipz
 12683     04D9  2CDB               	goto	u12321
 12684     04DA  2CDC               	goto	u12320
 12685     04DB                     u12321:
 12686     04DB  2D63               	goto	l2057
 12687     04DC                     u12320:
 12688     04DC                     l15022:
 12689                           
 12690                           ;main.c: 91:         {;main.c: 92:             if ((TMR0_HasOverflowOccured()) == 1)
 12691     04DC  319E  26F0  3184   	fcall	_TMR0_HasOverflowOccured
 12692     04DF  3A01               	xorlw	1
 12693     04E0  1D03               	skipz
 12694     04E1  2CE3               	goto	u12331
 12695     04E2  2CE4               	goto	u12330
 12696     04E3                     u12331:
 12697     04E3  2CFC               	goto	l2046
 12698     04E4                     u12330:
 12699     04E4                     l15024:
 12700                           
 12701                           ;main.c: 93:             {;main.c: 94:                 (PIR0bits.TMR0IF = 0);
 12702     04E4  014E               	movlb	14	; select bank14
 12703     04E5  128C               	bcf	12,5	;volatile
 12704     04E6                     l15026:
 12705                           
 12706                           ;main.c: 96:                 LIGHTBLUE_TemperatureSensor();
 12707     04E6  3192  22C6  3184   	fcall	_LIGHTBLUE_TemperatureSensor
 12708                           
 12709                           ;main.c: 97:                 LIGHTBLUE_AccelSensor();
 12710     04E9  3196  26A4  3184   	fcall	_LIGHTBLUE_AccelSensor
 12711                           
 12712                           ;main.c: 98:                 LIGHTBLUE_PushButton();
 12713     04EC  3191  2177  3184   	fcall	_LIGHTBLUE_PushButton
 12714                           
 12715                           ;main.c: 99:                 LIGHTBLUE_LedState();
 12716     04EF  3194  24B1  3184   	fcall	_LIGHTBLUE_LedState
 12717                           
 12718                           ;main.c: 100:                 LIGHTBLUE_SendProtocolVersion();
 12719     04F2  3197  2761  3184   	fcall	_LIGHTBLUE_SendProtocolVersion
 12720                           
 12721                           ;main.c: 101:             }
 12722     04F5  2CD4               	goto	l15020
 12723     04F6                     l15028:
 12724                           
 12725                           ;main.c: 105:                 {;main.c: 106:                     LIGHTBLUE_ParseIncoming
      +                          Packet(RN487X_Read());
 12726     04F6  3190  2031  3184   	fcall	_RN487X_Read
 12727     04F9  3185  2590  3184   	fcall	_LIGHTBLUE_ParseIncomingPacket
 12728     04FC                     l2046:	
 12729                           ;main.c: 107:                 }
 12730                           
 12731                           
 12732                           ;main.c: 104:                 while (RN487X_DataReady())
 12733     04FC  3193  2363  3184   	fcall	_RN487X_DataReady
 12734     04FF  3A00               	xorlw	0
 12735     0500  1D03               	skipz
 12736     0501  2D03               	goto	u12341
 12737     0502  2D04               	goto	u12340
 12738     0503                     u12341:
 12739     0503  2CF6               	goto	l15028
 12740     0504                     u12340:
 12741     0504  2D44               	goto	l15046
 12742     0505                     l15030:
 12743                           
 12744                           ;main.c: 109:                 {;main.c: 110:                     lightBlueSerial[serialI
      +                          ndex] = uart[UART_CDC].Read();
 12745     0505  3000               	movlw	low (_uart| (0+32768))
 12746     0506  0084               	movwf	4
 12747     0507  3098               	movlw	high (_uart| (0+32768))
 12748     0508  0085               	movwf	5
 12749     0509  3F01               	moviw [1]fsr0
 12750     050A  008A               	movwf	10
 12751     050B  3F00               	moviw [0]fsr0
 12752     050C  000A               	callw
 12753     050D  3184               	pagesel	$
 12754     050E  0140               	movlb	0	; select bank0
 12755     050F  00C9               	movwf	??_main
 12756     0510  0856               	movf	_serialIndex,w
 12757     0511  3E20               	addlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12758     0512  0086               	movwf	6
 12759     0513  3002               	movlw	2	; select bank4/5
 12760     0514  0087               	movwf	7
 12761     0515  0849               	movf	??_main,w
 12762     0516  0081               	movwf	1
 12763     0517                     l15032:
 12764                           
 12765                           ;main.c: 111:                     if ((lightBlueSerial[serialIndex] == '\r')
 12766     0517  0856               	movf	_serialIndex,w
 12767     0518  3E20               	addlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12768     0519  0086               	movwf	6
 12769     051A  3002               	movlw	2	; select bank4/5
 12770     051B  0087               	movwf	7
 12771     051C  300D               	movlw	13
 12772     051D  0601               	xorwf	1,w
 12773     051E  1903               	btfsc	3,2
 12774     051F  2D21               	goto	u12351
 12775     0520  2D22               	goto	u12350
 12776     0521                     u12351:
 12777     0521  2D33               	goto	l15038
 12778     0522                     u12350:
 12779     0522                     l15034:
 12780     0522  0856               	movf	_serialIndex,w
 12781     0523  3E20               	addlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12782     0524  0086               	movwf	6
 12783     0525  3002               	movlw	2	; select bank4/5
 12784     0526  0087               	movwf	7
 12785     0527  300A               	movlw	10
 12786     0528  0601               	xorwf	1,w
 12787     0529  1903               	btfsc	3,2
 12788     052A  2D2C               	goto	u12361
 12789     052B  2D2D               	goto	u12360
 12790     052C                     u12361:
 12791     052C  2D33               	goto	l15038
 12792     052D                     u12360:
 12793     052D                     l15036:
 12794     052D  304F               	movlw	79
 12795     052E  0656               	xorwf	_serialIndex,w
 12796     052F  1D03               	btfss	3,2
 12797     0530  2D32               	goto	u12371
 12798     0531  2D33               	goto	u12370
 12799     0532                     u12371:
 12800     0532  2D40               	goto	l15044
 12801     0533                     u12370:
 12802     0533                     l15038:
 12803                           
 12804                           ;main.c: 114:                     {;main.c: 115:                         lightBlueSerial
      +                          [serialIndex] = '\0';
 12805     0533  0856               	movf	_serialIndex,w
 12806     0534  3E20               	addlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12807     0535  0086               	movwf	6
 12808     0536  3002               	movlw	2	; select bank4/5
 12809     0537  0087               	movwf	7
 12810     0538  0181               	clrf	1
 12811     0539                     l15040:
 12812                           
 12813                           ;main.c: 116:                         LIGHTBLUE_SendSerialData(lightBlueSerial);
 12814     0539  3020               	movlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12815     053A  3186  265C  3184   	fcall	_LIGHTBLUE_SendSerialData
 12816     053D                     l15042:
 12817                           
 12818                           ;main.c: 117:                         serialIndex = 0;
 12819     053D  0140               	movlb	0	; select bank0
 12820     053E  01D6               	clrf	_serialIndex
 12821                           
 12822                           ;main.c: 118:                     }
 12823     053F  2D44               	goto	l15046
 12824     0540                     l15044:
 12825                           
 12826                           ;main.c: 120:                     {;main.c: 121:                         serialIndex++;
 12827     0540  3001               	movlw	1
 12828     0541  00C9               	movwf	??_main
 12829     0542  0849               	movf	??_main,w
 12830     0543  07D6               	addwf	_serialIndex,f
 12831     0544                     l15046:
 12832                           
 12833                           ;main.c: 108:                 while (uart[UART_CDC].DataReady())
 12834     0544  3006               	movlw	low ((_uart+6)| (0+32768))
 12835     0545  0084               	movwf	4
 12836     0546  3098               	movlw	high ((_uart+6)| (0+32768))
 12837     0547  0085               	movwf	5
 12838     0548  3F01               	moviw [1]fsr0
 12839     0549  008A               	movwf	10
 12840     054A  3F00               	moviw [0]fsr0
 12841     054B  000A               	callw
 12842     054C  3184               	pagesel	$
 12843     054D  3A00               	xorlw	0
 12844     054E  1D03               	skipz
 12845     054F  2D51               	goto	u12381
 12846     0550  2D52               	goto	u12380
 12847     0551                     u12381:
 12848     0551  2D05               	goto	l15030
 12849     0552                     u12380:
 12850     0552  2CD4               	goto	l15020
 12851     0553                     l15048:
 12852                           
 12853                           ;main.c: 130:             {;main.c: 131:                 uart[UART_CDC].Write(RN487X_Rea
      +                          d());
 12854     0553  3190  2031  3184   	fcall	_RN487X_Read
 12855     0556  0141               	movlb	1	; select bank1
 12856     0557  00EF               	movwf	_main$5439^(0+128)
 12857                           
 12858                           ;main.c: 130:             {;main.c: 131:                 uart[UART_CDC].Write(RN487X_Rea
      +                          d());
 12859     0558  086F               	movf	_main$5439^(0+128),w
 12860     0559  00F1               	movwf	EUSART2_Write@txData
 12861     055A  3002               	movlw	low ((_uart+2)| (0+32768))
 12862     055B  0084               	movwf	4
 12863     055C  3098               	movlw	high ((_uart+2)| (0+32768))
 12864     055D  0085               	movwf	5
 12865     055E  3F01               	moviw [1]fsr0
 12866     055F  008A               	movwf	10
 12867     0560  3F00               	moviw [0]fsr0
 12868     0561  000A               	callw
 12869     0562  3184               	pagesel	$
 12870     0563                     l2057:	
 12871                           ;main.c: 132:             }
 12872                           
 12873                           
 12874                           ;main.c: 129:             while(RN487X_DataReady())
 12875     0563  3193  2363  3184   	fcall	_RN487X_DataReady
 12876     0566  3A00               	xorlw	0
 12877     0567  1D03               	skipz
 12878     0568  2D6A               	goto	u12391
 12879     0569  2D6B               	goto	u12390
 12880     056A                     u12391:
 12881     056A  2D53               	goto	l15048
 12882     056B                     u12390:
 12883     056B  2D7F               	goto	l15052
 12884     056C                     l15050:
 12885                           
 12886                           ;main.c: 134:             {;main.c: 135:                 RN487X.Write(uart[UART_CDC].Rea
      +                          d());
 12887     056C  3000               	movlw	low (_uart| (0+32768))
 12888     056D  0084               	movwf	4
 12889     056E  3098               	movlw	high (_uart| (0+32768))
 12890     056F  0085               	movwf	5
 12891     0570  3F01               	moviw [1]fsr0
 12892     0571  008A               	movwf	10
 12893     0572  3F00               	moviw [0]fsr0
 12894     0573  000A               	callw
 12895     0574  3184               	pagesel	$
 12896     0575  00F6               	movwf	RN487X_Write@txData
 12897     0576  3068               	movlw	low (_RN487X| (0+32768))
 12898     0577  0084               	movwf	4
 12899     0578  3098               	movlw	high (_RN487X| (0+32768))
 12900     0579  0085               	movwf	5
 12901     057A  3F01               	moviw [1]fsr0
 12902     057B  008A               	movwf	10
 12903     057C  3F00               	moviw [0]fsr0
 12904     057D  000A               	callw
 12905     057E  3184               	pagesel	$
 12906     057F                     l15052:
 12907                           
 12908                           ;main.c: 133:             while (uart[UART_CDC].DataReady())
 12909     057F  3006               	movlw	low ((_uart+6)| (0+32768))
 12910     0580  0084               	movwf	4
 12911     0581  3098               	movlw	high ((_uart+6)| (0+32768))
 12912     0582  0085               	movwf	5
 12913     0583  3F01               	moviw [1]fsr0
 12914     0584  008A               	movwf	10
 12915     0585  3F00               	moviw [0]fsr0
 12916     0586  000A               	callw
 12917     0587  3184               	pagesel	$
 12918     0588  3A00               	xorlw	0
 12919     0589  1D03               	skipz
 12920     058A  2D8C               	goto	u12401
 12921     058B  2D8D               	goto	u12400
 12922     058C                     u12401:
 12923     058C  2D6C               	goto	l15050
 12924     058D                     u12400:
 12925     058D  2CD4               	goto	l15020
 12926     058E  3180  2855         	ljmp	start
 12927     0590                     __end_of_main:
 12928                           
 12929                           	psect	text1
 12930     0BFD                     __ptext1:	
 12931 ;; *************** function _begin *****************
 12932 ;; Defined at:
 12933 ;;		line 31 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 12934 ;; Parameters:    Size  Location     Type
 12935 ;;		None
 12936 ;; Auto vars:     Size  Location     Type
 12937 ;;		None
 12938 ;; Return value:  Size  Location     Type
 12939 ;;                  1    wreg      char 
 12940 ;; Registers used:
 12941 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12942 ;; Tracked objects:
 12943 ;;		On entry : 0/0
 12944 ;;		On exit  : 0/0
 12945 ;;		Unchanged: 0/0
 12946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12951 ;;Total ram usage:        0 bytes
 12952 ;; Hardware stack levels used: 1
 12953 ;; Hardware stack levels required when called: 18
 12954 ;; This function calls:
 12955 ;;		_getAngleEn
 12956 ;;		_getError
 12957 ;;		_getLowPower
 12958 ;;		_getMagneticChannel
 12959 ;;		_getOperatingMode
 12960 ;;		_getTemperatureEN
 12961 ;;		_isConnected
 12962 ;;		_setMagneticChannel
 12963 ;;		_setOperatingMode
 12964 ;;		_setTemperatureEn
 12965 ;;		_setXYAxisRange
 12966 ;;		_setZAxisRange
 12967 ;; This function is called by:
 12968 ;;		_main
 12969 ;; This function uses a non-reentrant model
 12970 ;;
 12971                           
 12972     0BFD                     _begin:	
 12973                           ;psect for function _begin
 12974                           
 12975     0BFD                     l14540:	
 12976                           ;incstack = 0
 12977 ;; hardware stack exceeded
 12978                           ; Regs used in _begin: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12979                           
 12980                           
 12981                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 37:     if (isConnecte
      +                          d() != 0) {
 12982     0BFD  3191  21C7  318B   	fcall	_isConnected
 12983     0C00  3A00               	xorlw	0
 12984     0C01  1903               	skipnz
 12985     0C02  2C04               	goto	u11741
 12986     0C03  2C05               	goto	u11740
 12987     0C04                     u11741:
 12988     0C04  2C06               	goto	l14544
 12989     0C05                     u11740:
 12990     0C05  2C4A               	goto	l2117
 12991     0C06                     l14544:
 12992                           
 12993                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 42:     setMagneticCha
      +                          nnel(0X7);
 12994     0C06  3007               	movlw	7
 12995     0C07  3180  20A8  318B   	fcall	_setMagneticChannel
 12996                           
 12997                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 43:     setTemperature
      +                          En(1);
 12998     0C0A  3001               	movlw	1
 12999     0C0B  3188  20D4  318B   	fcall	_setTemperatureEn
 13000                           
 13001                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 44:     setOperatingMo
      +                          de(0X2);
 13002     0C0E  3002               	movlw	2
 13003     0C0F  3187  2706  318B   	fcall	_setOperatingMode
 13004                           
 13005                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 47:     setXYAxisRange
      +                          (0X1);
 13006     0C12  3001               	movlw	1
 13007     0C13  3189  21CA  318B   	fcall	_setXYAxisRange
 13008                           
 13009                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 48:     setZAxisRange(
      +                          0X1);
 13010     0C16  3001               	movlw	1
 13011     0C17  3189  2111  318B   	fcall	_setZAxisRange
 13012                           
 13013                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 51:     if (getError()
      +                           != 0) {
 13014     0C1A  318D  25E7  318B   	fcall	_getError
 13015     0C1D  3A00               	xorlw	0
 13016     0C1E  1903               	skipnz
 13017     0C1F  2C21               	goto	u11751
 13018     0C20  2C22               	goto	u11750
 13019     0C21                     u11751:
 13020     0C21  2C23               	goto	l14548
 13021     0C22                     u11750:
 13022     0C22  2C4A               	goto	l2117
 13023     0C23                     l14548:
 13024                           
 13025                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 56:     if (getLowPowe
      +                          r() != 0X0) {
 13026     0C23  3192  2208  318B   	fcall	_getLowPower
 13027     0C26  3A00               	xorlw	0
 13028     0C27  1903               	skipnz
 13029     0C28  2C2A               	goto	u11761
 13030     0C29  2C2B               	goto	u11760
 13031     0C2A                     u11761:
 13032     0C2A  2C2C               	goto	l14552
 13033     0C2B                     u11760:
 13034     0C2B  2C4A               	goto	l2117
 13035     0C2C                     l14552:
 13036                           
 13037                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 61:     if (getOperati
      +                          ngMode() != 0X2) {
 13038     0C2C  318D  2540  318B   	fcall	_getOperatingMode
 13039     0C2F  3A02               	xorlw	2
 13040     0C30  1903               	skipnz
 13041     0C31  2C33               	goto	u11771
 13042     0C32  2C34               	goto	u11770
 13043     0C33                     u11771:
 13044     0C33  2C35               	goto	l14556
 13045     0C34                     u11770:
 13046     0C34  2C4A               	goto	l2117
 13047     0C35                     l14556:
 13048                           
 13049                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 66:     if (getMagneti
      +                          cChannel() != 0X7) {
 13050     0C35  3183  2377  318B   	fcall	_getMagneticChannel
 13051     0C38  3A07               	xorlw	7
 13052     0C39  1903               	skipnz
 13053     0C3A  2C3C               	goto	u11781
 13054     0C3B  2C3D               	goto	u11780
 13055     0C3C                     u11781:
 13056     0C3C  2C3E               	goto	l14560
 13057     0C3D                     u11780:
 13058     0C3D  2C4A               	goto	l2117
 13059     0C3E                     l14560:
 13060                           
 13061                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 71:     if (getTempera
      +                          tureEN() != 0X1) {
 13062     0C3E  3191  21B2  318B   	fcall	_getTemperatureEN
 13063     0C41  3A01               	xorlw	1
 13064     0C42  1903               	skipnz
 13065     0C43  2C45               	goto	u11791
 13066     0C44  2C46               	goto	u11790
 13067     0C45                     u11791:
 13068     0C45  2C47               	goto	l14564
 13069     0C46                     u11790:
 13070     0C46  2C4A               	goto	l2117
 13071     0C47                     l14564:
 13072                           
 13073                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 76:     if (getAngleEn
      +                          () != 0X0) {
 13074     0C47  318D  2593  318B   	fcall	_getAngleEn
 13075     0C4A                     l2117:
 13076     0C4A  0008               	return
 13077     0C4B                     __end_of_begin:
 13078                           
 13079                           	psect	text2
 13080     0911                     __ptext2:	
 13081 ;; *************** function _setZAxisRange *****************
 13082 ;; Defined at:
 13083 ;;		line 1038 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13084 ;; Parameters:    Size  Location     Type
 13085 ;;  zAxisRange      1    wreg     unsigned char 
 13086 ;; Auto vars:     Size  Location     Type
 13087 ;;  zAxisRange      1   24[BANK0 ] unsigned char 
 13088 ;;  mode            2   25[BANK0 ] unsigned short 
 13089 ;; Return value:  Size  Location     Type
 13090 ;;                  1    wreg      char 
 13091 ;; Registers used:
 13092 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13093 ;; Tracked objects:
 13094 ;;		On entry : 0/0
 13095 ;;		On exit  : 0/0
 13096 ;;		Unchanged: 0/0
 13097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13099 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13100 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13101 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13102 ;;Total ram usage:        5 bytes
 13103 ;; Hardware stack levels used: 1
 13104 ;; Hardware stack levels required when called: 17
 13105 ;; This function calls:
 13106 ;;		_bitWrite
 13107 ;;		_getError
 13108 ;;		_readRegister
 13109 ;;		_writeRegister
 13110 ;; This function is called by:
 13111 ;;		_begin
 13112 ;; This function uses a non-reentrant model
 13113 ;;
 13114                           
 13115     0911                     _setZAxisRange:	
 13116                           ;psect for function _setZAxisRange
 13117                           
 13118                           
 13119                           ;incstack = 0
 13120 ;; hardware stack exceeded
 13121                           ; Regs used in _setZAxisRange: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13122                           ;setZAxisRange@zAxisRange stored from wreg
 13123     0911  0140               	movlb	0	; select bank0
 13124     0912  00B8               	movwf	setZAxisRange@zAxisRange
 13125     0913                     l13994:
 13126     0913                     l13996:
 13127                           
 13128                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1040:     mode = readR
      +                          egister(TMAG5273_REG_SENSOR_CONFIG_2);
 13129     0913  3003               	movlw	3
 13130     0914  3190  2072  3189   	fcall	_readRegister
 13131     0917  0140               	movlb	0	; select bank0
 13132     0918  00B6               	movwf	??_setZAxisRange
 13133     0919  01B7               	clrf	??_setZAxisRange+1
 13134     091A  0836               	movf	??_setZAxisRange,w
 13135     091B  00B9               	movwf	setZAxisRange@mode
 13136     091C  0837               	movf	??_setZAxisRange+1,w
 13137     091D  00BA               	movwf	setZAxisRange@mode+1
 13138     091E                     l13998:
 13139                           
 13140                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1043:     if (zAxisRan
      +                          ge == 0X0)
 13141     091E  0838               	movf	setZAxisRange@zAxisRange,w
 13142     091F  1D03               	btfss	3,2
 13143     0920  2922               	goto	u10891
 13144     0921  2923               	goto	u10890
 13145     0922                     u10891:
 13146     0922  2934               	goto	l14004
 13147     0923                     u10890:
 13148     0923                     l14000:
 13149                           
 13150                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1044:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1046:         bitWrite(mode, 0, 0
      +                          );
 13151     0923  083A               	movf	setZAxisRange@mode+1,w
 13152     0924  00F2               	movwf	bitWrite@reg+1
 13153     0925  0839               	movf	setZAxisRange@mode,w
 13154     0926  00F1               	movwf	bitWrite@reg
 13155     0927  01F3               	clrf	bitWrite@position
 13156     0928  01F4               	clrf	bitWrite@value
 13157     0929  3188  2000  3189   	fcall	_bitWrite
 13158     092C                     l14002:
 13159                           
 13160                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1048:         writeReg
      +                          ister(TMAG5273_REG_SENSOR_CONFIG_2, mode);
 13161     092C  0140               	movlb	0	; select bank0
 13162     092D  0839               	movf	setZAxisRange@mode,w
 13163     092E  00A6               	movwf	writeRegister@data
 13164     092F  3003               	movlw	3
 13165     0930  3190  200E  3189   	fcall	_writeRegister
 13166                           
 13167                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1049:     } else if (z
      +                          AxisRange == 0X1)
 13168     0933  294A               	goto	l14010
 13169     0934                     l14004:
 13170     0934  0338               	decf	setZAxisRange@zAxisRange,w
 13171     0935  1D03               	btfss	3,2
 13172     0936  2938               	goto	u10901
 13173     0937  2939               	goto	u10900
 13174     0938                     u10901:
 13175     0938  294A               	goto	l14010
 13176     0939                     u10900:
 13177     0939                     l14006:
 13178                           
 13179                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1050:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1051:         bitWrite(mode, 0, 1
      +                          );
 13180     0939  083A               	movf	setZAxisRange@mode+1,w
 13181     093A  00F2               	movwf	bitWrite@reg+1
 13182     093B  0839               	movf	setZAxisRange@mode,w
 13183     093C  00F1               	movwf	bitWrite@reg
 13184     093D  01F3               	clrf	bitWrite@position
 13185     093E  01F4               	clrf	bitWrite@value
 13186     093F  0AF4               	incf	bitWrite@value,f
 13187     0940  3188  2000  3189   	fcall	_bitWrite
 13188     0943                     l14008:
 13189                           
 13190                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1052:         writeReg
      +                          ister(TMAG5273_REG_SENSOR_CONFIG_2, mode);
 13191     0943  0140               	movlb	0	; select bank0
 13192     0944  0839               	movf	setZAxisRange@mode,w
 13193     0945  00A6               	movwf	writeRegister@data
 13194     0946  3003               	movlw	3
 13195     0947  3190  200E  3189   	fcall	_writeRegister
 13196     094A                     l14010:
 13197                           
 13198                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1055:     return getEr
      +                          ror();;	Return value of _setZAxisRange is never used
 13199     094A  318D  25E7  3189   	fcall	_getError
 13200     094D                     l2332:
 13201     094D  0008               	return
 13202     094E                     __end_of_setZAxisRange:
 13203                           
 13204                           	psect	text3
 13205     09CA                     __ptext3:	
 13206 ;; *************** function _setXYAxisRange *****************
 13207 ;; Defined at:
 13208 ;;		line 1011 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13209 ;; Parameters:    Size  Location     Type
 13210 ;;  xyAxisRange     1    wreg     unsigned char 
 13211 ;; Auto vars:     Size  Location     Type
 13212 ;;  xyAxisRange     1   24[BANK0 ] unsigned char 
 13213 ;;  mode            2   25[BANK0 ] unsigned short 
 13214 ;; Return value:  Size  Location     Type
 13215 ;;                  1    wreg      char 
 13216 ;; Registers used:
 13217 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13218 ;; Tracked objects:
 13219 ;;		On entry : 0/0
 13220 ;;		On exit  : 0/0
 13221 ;;		Unchanged: 0/0
 13222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13224 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13225 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13226 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13227 ;;Total ram usage:        5 bytes
 13228 ;; Hardware stack levels used: 1
 13229 ;; Hardware stack levels required when called: 17
 13230 ;; This function calls:
 13231 ;;		_bitWrite
 13232 ;;		_getError
 13233 ;;		_readRegister
 13234 ;;		_writeRegister
 13235 ;; This function is called by:
 13236 ;;		_begin
 13237 ;; This function uses a non-reentrant model
 13238 ;;
 13239                           
 13240     09CA                     _setXYAxisRange:	
 13241                           ;psect for function _setXYAxisRange
 13242                           
 13243                           
 13244                           ;incstack = 0
 13245 ;; hardware stack exceeded
 13246                           ; Regs used in _setXYAxisRange: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13247                           ;setXYAxisRange@xyAxisRange stored from wreg
 13248     09CA  0140               	movlb	0	; select bank0
 13249     09CB  00B8               	movwf	setXYAxisRange@xyAxisRange
 13250     09CC                     l13974:
 13251     09CC                     l13976:
 13252                           
 13253                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1013:     mode = readR
      +                          egister(TMAG5273_REG_SENSOR_CONFIG_2);
 13254     09CC  3003               	movlw	3
 13255     09CD  3190  2072  3189   	fcall	_readRegister
 13256     09D0  0140               	movlb	0	; select bank0
 13257     09D1  00B6               	movwf	??_setXYAxisRange
 13258     09D2  01B7               	clrf	??_setXYAxisRange+1
 13259     09D3  0836               	movf	??_setXYAxisRange,w
 13260     09D4  00B9               	movwf	setXYAxisRange@mode
 13261     09D5  0837               	movf	??_setXYAxisRange+1,w
 13262     09D6  00BA               	movwf	setXYAxisRange@mode+1
 13263     09D7                     l13978:
 13264                           
 13265                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1016:     if (xyAxisRa
      +                          nge == 0X0)
 13266     09D7  0838               	movf	setXYAxisRange@xyAxisRange,w
 13267     09D8  1D03               	btfss	3,2
 13268     09D9  29DB               	goto	u10871
 13269     09DA  29DC               	goto	u10870
 13270     09DB                     u10871:
 13271     09DB  29EE               	goto	l13984
 13272     09DC                     u10870:
 13273     09DC                     l13980:
 13274                           
 13275                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1017:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1019:         bitWrite(mode, 1, 0
      +                          );
 13276     09DC  083A               	movf	setXYAxisRange@mode+1,w
 13277     09DD  00F2               	movwf	bitWrite@reg+1
 13278     09DE  0839               	movf	setXYAxisRange@mode,w
 13279     09DF  00F1               	movwf	bitWrite@reg
 13280     09E0  01F3               	clrf	bitWrite@position
 13281     09E1  0AF3               	incf	bitWrite@position,f
 13282     09E2  01F4               	clrf	bitWrite@value
 13283     09E3  3188  2000  3189   	fcall	_bitWrite
 13284     09E6                     l13982:
 13285                           
 13286                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1021:         writeReg
      +                          ister(TMAG5273_REG_SENSOR_CONFIG_2, mode);
 13287     09E6  0140               	movlb	0	; select bank0
 13288     09E7  0839               	movf	setXYAxisRange@mode,w
 13289     09E8  00A6               	movwf	writeRegister@data
 13290     09E9  3003               	movlw	3
 13291     09EA  3190  200E  3189   	fcall	_writeRegister
 13292                           
 13293                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1022:     } else if (x
      +                          yAxisRange == 0X1)
 13294     09ED  2A05               	goto	l13990
 13295     09EE                     l13984:
 13296     09EE  0338               	decf	setXYAxisRange@xyAxisRange,w
 13297     09EF  1D03               	btfss	3,2
 13298     09F0  29F2               	goto	u10881
 13299     09F1  29F3               	goto	u10880
 13300     09F2                     u10881:
 13301     09F2  2A05               	goto	l13990
 13302     09F3                     u10880:
 13303     09F3                     l13986:
 13304                           
 13305                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1023:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1024:         bitWrite(mode, 1, 1
      +                          );
 13306     09F3  083A               	movf	setXYAxisRange@mode+1,w
 13307     09F4  00F2               	movwf	bitWrite@reg+1
 13308     09F5  0839               	movf	setXYAxisRange@mode,w
 13309     09F6  00F1               	movwf	bitWrite@reg
 13310     09F7  01F3               	clrf	bitWrite@position
 13311     09F8  0AF3               	incf	bitWrite@position,f
 13312     09F9  01F4               	clrf	bitWrite@value
 13313     09FA  0AF4               	incf	bitWrite@value,f
 13314     09FB  3188  2000  3189   	fcall	_bitWrite
 13315     09FE                     l13988:
 13316                           
 13317                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1025:         writeReg
      +                          ister(TMAG5273_REG_SENSOR_CONFIG_2, mode);
 13318     09FE  0140               	movlb	0	; select bank0
 13319     09FF  0839               	movf	setXYAxisRange@mode,w
 13320     0A00  00A6               	movwf	writeRegister@data
 13321     0A01  3003               	movlw	3
 13322     0A02  3190  200E  3189   	fcall	_writeRegister
 13323     0A05                     l13990:
 13324                           
 13325                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1028:     return getEr
      +                          ror();;	Return value of _setXYAxisRange is never used
 13326     0A05  318D  25E7  3189   	fcall	_getError
 13327     0A08                     l2326:
 13328     0A08  0008               	return
 13329     0A09                     __end_of_setXYAxisRange:
 13330                           
 13331                           	psect	text4
 13332     08D4                     __ptext4:	
 13333 ;; *************** function _setTemperatureEn *****************
 13334 ;; Defined at:
 13335 ;;		line 1137 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13336 ;; Parameters:    Size  Location     Type
 13337 ;;  temperatureE    1    wreg     _Bool 
 13338 ;; Auto vars:     Size  Location     Type
 13339 ;;  temperatureE    1   24[BANK0 ] _Bool 
 13340 ;;  mode            2   25[BANK0 ] unsigned short 
 13341 ;; Return value:  Size  Location     Type
 13342 ;;                  1    wreg      char 
 13343 ;; Registers used:
 13344 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13345 ;; Tracked objects:
 13346 ;;		On entry : 0/0
 13347 ;;		On exit  : 0/0
 13348 ;;		Unchanged: 0/0
 13349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13351 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13352 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13353 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13354 ;;Total ram usage:        5 bytes
 13355 ;; Hardware stack levels used: 1
 13356 ;; Hardware stack levels required when called: 17
 13357 ;; This function calls:
 13358 ;;		_bitWrite
 13359 ;;		_getError
 13360 ;;		_readRegister
 13361 ;;		_writeRegister
 13362 ;; This function is called by:
 13363 ;;		_begin
 13364 ;; This function uses a non-reentrant model
 13365 ;;
 13366                           
 13367     08D4                     _setTemperatureEn:	
 13368                           ;psect for function _setTemperatureEn
 13369                           
 13370                           
 13371                           ;incstack = 0
 13372 ;; hardware stack exceeded
 13373                           ; Regs used in _setTemperatureEn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13374                           ;setTemperatureEn@temperatureEnable stored from wreg
 13375     08D4  0140               	movlb	0	; select bank0
 13376     08D5  00B8               	movwf	setTemperatureEn@temperatureEnable
 13377     08D6                     l13922:
 13378     08D6                     l13924:
 13379                           
 13380                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1139:     mode = readR
      +                          egister(TMAG5273_REG_T_CONFIG);
 13381     08D6  3007               	movlw	7
 13382     08D7  3190  2072  3188   	fcall	_readRegister
 13383     08DA  0140               	movlb	0	; select bank0
 13384     08DB  00B6               	movwf	??_setTemperatureEn
 13385     08DC  01B7               	clrf	??_setTemperatureEn+1
 13386     08DD  0836               	movf	??_setTemperatureEn,w
 13387     08DE  00B9               	movwf	setTemperatureEn@mode
 13388     08DF  0837               	movf	??_setTemperatureEn+1,w
 13389     08E0  00BA               	movwf	setTemperatureEn@mode+1
 13390     08E1                     l13926:
 13391                           
 13392                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1142:     if (temperat
      +                          ureEnable == 0)
 13393     08E1  0838               	movf	setTemperatureEn@temperatureEnable,w
 13394     08E2  1D03               	btfss	3,2
 13395     08E3  28E5               	goto	u10811
 13396     08E4  28E6               	goto	u10810
 13397     08E5                     u10811:
 13398     08E5  28F7               	goto	l13932
 13399     08E6                     u10810:
 13400     08E6                     l13928:
 13401                           
 13402                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1143:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1145:         bitWrite(mode, 0, 0
      +                          );
 13403     08E6  083A               	movf	setTemperatureEn@mode+1,w
 13404     08E7  00F2               	movwf	bitWrite@reg+1
 13405     08E8  0839               	movf	setTemperatureEn@mode,w
 13406     08E9  00F1               	movwf	bitWrite@reg
 13407     08EA  01F3               	clrf	bitWrite@position
 13408     08EB  01F4               	clrf	bitWrite@value
 13409     08EC  3188  2000  3188   	fcall	_bitWrite
 13410     08EF                     l13930:
 13411                           
 13412                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1147:         writeReg
      +                          ister(TMAG5273_REG_T_CONFIG, mode);
 13413     08EF  0140               	movlb	0	; select bank0
 13414     08F0  0839               	movf	setTemperatureEn@mode,w
 13415     08F1  00A6               	movwf	writeRegister@data
 13416     08F2  3007               	movlw	7
 13417     08F3  3190  200E  3188   	fcall	_writeRegister
 13418                           
 13419                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1148:     } else if (t
      +                          emperatureEnable == 1)
 13420     08F6  290D               	goto	l13938
 13421     08F7                     l13932:
 13422     08F7  0338               	decf	setTemperatureEn@temperatureEnable,w
 13423     08F8  1D03               	btfss	3,2
 13424     08F9  28FB               	goto	u10821
 13425     08FA  28FC               	goto	u10820
 13426     08FB                     u10821:
 13427     08FB  290D               	goto	l13938
 13428     08FC                     u10820:
 13429     08FC                     l13934:
 13430                           
 13431                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1149:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1150:         bitWrite(mode, 0, 1
      +                          );
 13432     08FC  083A               	movf	setTemperatureEn@mode+1,w
 13433     08FD  00F2               	movwf	bitWrite@reg+1
 13434     08FE  0839               	movf	setTemperatureEn@mode,w
 13435     08FF  00F1               	movwf	bitWrite@reg
 13436     0900  01F3               	clrf	bitWrite@position
 13437     0901  01F4               	clrf	bitWrite@value
 13438     0902  0AF4               	incf	bitWrite@value,f
 13439     0903  3188  2000  3188   	fcall	_bitWrite
 13440     0906                     l13936:
 13441                           
 13442                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1151:         writeReg
      +                          ister(TMAG5273_REG_T_CONFIG, mode);
 13443     0906  0140               	movlb	0	; select bank0
 13444     0907  0839               	movf	setTemperatureEn@mode,w
 13445     0908  00A6               	movwf	writeRegister@data
 13446     0909  3007               	movlw	7
 13447     090A  3190  200E  3188   	fcall	_writeRegister
 13448     090D                     l13938:
 13449                           
 13450                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1154:     return getEr
      +                          ror();;	Return value of _setTemperatureEn is never used
 13451     090D  318D  25E7  3188   	fcall	_getError
 13452     0910                     l2350:
 13453     0910  0008               	return
 13454     0911                     __end_of_setTemperatureEn:
 13455                           
 13456                           	psect	text5
 13457     0706                     __ptext5:	
 13458 ;; *************** function _setOperatingMode *****************
 13459 ;; Defined at:
 13460 ;;		line 530 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13461 ;; Parameters:    Size  Location     Type
 13462 ;;  opMode          1    wreg     unsigned char 
 13463 ;; Auto vars:     Size  Location     Type
 13464 ;;  opMode          1   24[BANK0 ] unsigned char 
 13465 ;;  mode            2   25[BANK0 ] unsigned short 
 13466 ;; Return value:  Size  Location     Type
 13467 ;;                  1    wreg      char 
 13468 ;; Registers used:
 13469 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13470 ;; Tracked objects:
 13471 ;;		On entry : 0/0
 13472 ;;		On exit  : 0/0
 13473 ;;		Unchanged: 0/0
 13474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13476 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13477 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13478 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13479 ;;Total ram usage:        5 bytes
 13480 ;; Hardware stack levels used: 1
 13481 ;; Hardware stack levels required when called: 17
 13482 ;; This function calls:
 13483 ;;		_bitWrite
 13484 ;;		_getError
 13485 ;;		_readRegister
 13486 ;;		_writeRegister
 13487 ;; This function is called by:
 13488 ;;		_begin
 13489 ;; This function uses a non-reentrant model
 13490 ;;
 13491                           
 13492     0706                     _setOperatingMode:	
 13493                           ;psect for function _setOperatingMode
 13494                           
 13495                           
 13496                           ;incstack = 0
 13497 ;; hardware stack exceeded
 13498                           ; Regs used in _setOperatingMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13499                           ;setOperatingMode@opMode stored from wreg
 13500     0706  0140               	movlb	0	; select bank0
 13501     0707  00B8               	movwf	setOperatingMode@opMode
 13502     0708                     l13942:
 13503     0708                     l13944:
 13504                           
 13505                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 532:     mode = readRe
      +                          gister(TMAG5273_REG_DEVICE_CONFIG_2);
 13506     0708  3001               	movlw	1
 13507     0709  3190  2072  3187   	fcall	_readRegister
 13508     070C  0140               	movlb	0	; select bank0
 13509     070D  00B6               	movwf	??_setOperatingMode
 13510     070E  01B7               	clrf	??_setOperatingMode+1
 13511     070F  0836               	movf	??_setOperatingMode,w
 13512     0710  00B9               	movwf	setOperatingMode@mode
 13513     0711  0837               	movf	??_setOperatingMode+1,w
 13514     0712  00BA               	movwf	setOperatingMode@mode+1
 13515     0713                     l13946:
 13516                           
 13517                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 535:     if (opMode ==
      +                           0)
 13518     0713  0838               	movf	setOperatingMode@opMode,w
 13519     0714  1D03               	btfss	3,2
 13520     0715  2F17               	goto	u10831
 13521     0716  2F18               	goto	u10830
 13522     0717                     u10831:
 13523     0717  2F34               	goto	l13952
 13524     0718                     u10830:
 13525     0718                     l13948:
 13526                           
 13527                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 536:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 538:         bitWrite(mode, 0, 0);
 13528     0718  083A               	movf	setOperatingMode@mode+1,w
 13529     0719  00F2               	movwf	bitWrite@reg+1
 13530     071A  0839               	movf	setOperatingMode@mode,w
 13531     071B  00F1               	movwf	bitWrite@reg
 13532     071C  01F3               	clrf	bitWrite@position
 13533     071D  01F4               	clrf	bitWrite@value
 13534     071E  3188  2000  3187   	fcall	_bitWrite
 13535                           
 13536                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 540:         bitWrite(
      +                          mode, 1, 0);
 13537     0721  0140               	movlb	0	; select bank0
 13538     0722  083A               	movf	setOperatingMode@mode+1,w
 13539     0723  00F2               	movwf	bitWrite@reg+1
 13540     0724  0839               	movf	setOperatingMode@mode,w
 13541     0725  00F1               	movwf	bitWrite@reg
 13542     0726  01F3               	clrf	bitWrite@position
 13543     0727  0AF3               	incf	bitWrite@position,f
 13544     0728  01F4               	clrf	bitWrite@value
 13545     0729  3188  2000  3187   	fcall	_bitWrite
 13546     072C                     l13950:
 13547                           
 13548                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 541:         writeRegi
      +                          ster(TMAG5273_REG_DEVICE_CONFIG_2, mode);
 13549     072C  0140               	movlb	0	; select bank0
 13550     072D  0839               	movf	setOperatingMode@mode,w
 13551     072E  00A6               	movwf	writeRegister@data
 13552     072F  3001               	movlw	1
 13553     0730  3190  200E  3187   	fcall	_writeRegister
 13554                           
 13555                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 542:     } else if (op
      +                          Mode == 0X1)
 13556     0733  2F9D               	goto	l13970
 13557     0734                     l13952:
 13558     0734  0338               	decf	setOperatingMode@opMode,w
 13559     0735  1D03               	btfss	3,2
 13560     0736  2F38               	goto	u10841
 13561     0737  2F39               	goto	u10840
 13562     0738                     u10841:
 13563     0738  2F56               	goto	l13958
 13564     0739                     u10840:
 13565     0739                     l13954:
 13566                           
 13567                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 543:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 545:         bitWrite(mode, 0, 1);
 13568     0739  083A               	movf	setOperatingMode@mode+1,w
 13569     073A  00F2               	movwf	bitWrite@reg+1
 13570     073B  0839               	movf	setOperatingMode@mode,w
 13571     073C  00F1               	movwf	bitWrite@reg
 13572     073D  01F3               	clrf	bitWrite@position
 13573     073E  01F4               	clrf	bitWrite@value
 13574     073F  0AF4               	incf	bitWrite@value,f
 13575     0740  3188  2000  3187   	fcall	_bitWrite
 13576                           
 13577                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 547:         bitWrite(
      +                          mode, 1, 0);
 13578     0743  0140               	movlb	0	; select bank0
 13579     0744  083A               	movf	setOperatingMode@mode+1,w
 13580     0745  00F2               	movwf	bitWrite@reg+1
 13581     0746  0839               	movf	setOperatingMode@mode,w
 13582     0747  00F1               	movwf	bitWrite@reg
 13583     0748  01F3               	clrf	bitWrite@position
 13584     0749  0AF3               	incf	bitWrite@position,f
 13585     074A  01F4               	clrf	bitWrite@value
 13586     074B  3188  2000  3187   	fcall	_bitWrite
 13587     074E                     l13956:
 13588                           
 13589                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 548:         writeRegi
      +                          ster(TMAG5273_REG_DEVICE_CONFIG_2, mode);
 13590     074E  0140               	movlb	0	; select bank0
 13591     074F  0839               	movf	setOperatingMode@mode,w
 13592     0750  00A6               	movwf	writeRegister@data
 13593     0751  3001               	movlw	1
 13594     0752  3190  200E  3187   	fcall	_writeRegister
 13595                           
 13596                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 549:     } else if (op
      +                          Mode == 0X2)
 13597     0755  2F9D               	goto	l13970
 13598     0756                     l13958:
 13599     0756  3002               	movlw	2
 13600     0757  0638               	xorwf	setOperatingMode@opMode,w
 13601     0758  1D03               	btfss	3,2
 13602     0759  2F5B               	goto	u10851
 13603     075A  2F5C               	goto	u10850
 13604     075B                     u10851:
 13605     075B  2F79               	goto	l13964
 13606     075C                     u10850:
 13607     075C                     l13960:
 13608                           
 13609                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 550:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 551:         bitWrite(mode, 0, 0);
 13610     075C  083A               	movf	setOperatingMode@mode+1,w
 13611     075D  00F2               	movwf	bitWrite@reg+1
 13612     075E  0839               	movf	setOperatingMode@mode,w
 13613     075F  00F1               	movwf	bitWrite@reg
 13614     0760  01F3               	clrf	bitWrite@position
 13615     0761  01F4               	clrf	bitWrite@value
 13616     0762  3188  2000  3187   	fcall	_bitWrite
 13617                           
 13618                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 552:         bitWrite(
      +                          mode, 1, 1);
 13619     0765  0140               	movlb	0	; select bank0
 13620     0766  083A               	movf	setOperatingMode@mode+1,w
 13621     0767  00F2               	movwf	bitWrite@reg+1
 13622     0768  0839               	movf	setOperatingMode@mode,w
 13623     0769  00F1               	movwf	bitWrite@reg
 13624     076A  01F3               	clrf	bitWrite@position
 13625     076B  0AF3               	incf	bitWrite@position,f
 13626     076C  01F4               	clrf	bitWrite@value
 13627     076D  0AF4               	incf	bitWrite@value,f
 13628     076E  3188  2000  3187   	fcall	_bitWrite
 13629     0771                     l13962:
 13630                           
 13631                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 553:         writeRegi
      +                          ster(TMAG5273_REG_DEVICE_CONFIG_2, mode);
 13632     0771  0140               	movlb	0	; select bank0
 13633     0772  0839               	movf	setOperatingMode@mode,w
 13634     0773  00A6               	movwf	writeRegister@data
 13635     0774  3001               	movlw	1
 13636     0775  3190  200E  3187   	fcall	_writeRegister
 13637                           
 13638                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 554:     } else if (op
      +                          Mode == 0X3)
 13639     0778  2F9D               	goto	l13970
 13640     0779                     l13964:
 13641     0779  3003               	movlw	3
 13642     077A  0638               	xorwf	setOperatingMode@opMode,w
 13643     077B  1D03               	btfss	3,2
 13644     077C  2F7E               	goto	u10861
 13645     077D  2F7F               	goto	u10860
 13646     077E                     u10861:
 13647     077E  2F9D               	goto	l2216
 13648     077F                     u10860:
 13649     077F                     l13966:
 13650                           
 13651                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 555:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 556:         bitWrite(mode, 0, 1);
 13652     077F  083A               	movf	setOperatingMode@mode+1,w
 13653     0780  00F2               	movwf	bitWrite@reg+1
 13654     0781  0839               	movf	setOperatingMode@mode,w
 13655     0782  00F1               	movwf	bitWrite@reg
 13656     0783  01F3               	clrf	bitWrite@position
 13657     0784  01F4               	clrf	bitWrite@value
 13658     0785  0AF4               	incf	bitWrite@value,f
 13659     0786  3188  2000  3187   	fcall	_bitWrite
 13660                           
 13661                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 557:         bitWrite(
      +                          mode, 1, 1);
 13662     0789  0140               	movlb	0	; select bank0
 13663     078A  083A               	movf	setOperatingMode@mode+1,w
 13664     078B  00F2               	movwf	bitWrite@reg+1
 13665     078C  0839               	movf	setOperatingMode@mode,w
 13666     078D  00F1               	movwf	bitWrite@reg
 13667     078E  01F3               	clrf	bitWrite@position
 13668     078F  0AF3               	incf	bitWrite@position,f
 13669     0790  01F4               	clrf	bitWrite@value
 13670     0791  0AF4               	incf	bitWrite@value,f
 13671     0792  3188  2000  3187   	fcall	_bitWrite
 13672     0795                     l13968:
 13673                           
 13674                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 558:         writeRegi
      +                          ster(TMAG5273_REG_DEVICE_CONFIG_2, mode);
 13675     0795  0140               	movlb	0	; select bank0
 13676     0796  0839               	movf	setOperatingMode@mode,w
 13677     0797  00A6               	movwf	writeRegister@data
 13678     0798  3001               	movlw	1
 13679     0799  3190  200E  3187   	fcall	_writeRegister
 13680     079C  2F9D               	goto	l13970
 13681     079D                     l2216:
 13682     079D                     l13970:
 13683                           
 13684                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 561:     return getErr
      +                          or();;	Return value of _setOperatingMode is never used
 13685     079D  318D  25E7  3187   	fcall	_getError
 13686     07A0                     l2220:
 13687     07A0  0008               	return
 13688     07A1                     __end_of_setOperatingMode:
 13689                           
 13690                           	psect	text6
 13691     00A8                     __ptext6:	
 13692 ;; *************** function _setMagneticChannel *****************
 13693 ;; Defined at:
 13694 ;;		line 582 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13695 ;; Parameters:    Size  Location     Type
 13696 ;;  channelMode     1    wreg     unsigned char 
 13697 ;; Auto vars:     Size  Location     Type
 13698 ;;  channelMode     1   24[BANK0 ] unsigned char 
 13699 ;;  mode            2   25[BANK0 ] unsigned short 
 13700 ;; Return value:  Size  Location     Type
 13701 ;;                  1    wreg      char 
 13702 ;; Registers used:
 13703 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13704 ;; Tracked objects:
 13705 ;;		On entry : 0/0
 13706 ;;		On exit  : 0/0
 13707 ;;		Unchanged: 0/0
 13708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13710 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13711 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13712 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13713 ;;Total ram usage:        5 bytes
 13714 ;; Hardware stack levels used: 1
 13715 ;; Hardware stack levels required when called: 17
 13716 ;; This function calls:
 13717 ;;		_bitWrite
 13718 ;;		_getError
 13719 ;;		_readRegister
 13720 ;;		_writeRegister
 13721 ;; This function is called by:
 13722 ;;		_begin
 13723 ;; This function uses a non-reentrant model
 13724 ;;
 13725                           
 13726     00A8                     _setMagneticChannel:	
 13727                           ;psect for function _setMagneticChannel
 13728                           
 13729                           
 13730                           ;incstack = 0
 13731 ;; hardware stack exceeded
 13732                           ; Regs used in _setMagneticChannel: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13733                           ;setMagneticChannel@channelMode stored from wreg
 13734     00A8  0140               	movlb	0	; select bank0
 13735     00A9  00B8               	movwf	setMagneticChannel@channelMode
 13736     00AA                     l13842:
 13737     00AA                     l13844:
 13738                           
 13739                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 584:     mode = readRe
      +                          gister(TMAG5273_REG_SENSOR_CONFIG_1);
 13740     00AA  3002               	movlw	2
 13741     00AB  3190  2072  3180   	fcall	_readRegister
 13742     00AE  0140               	movlb	0	; select bank0
 13743     00AF  00B6               	movwf	??_setMagneticChannel
 13744     00B0  01B7               	clrf	??_setMagneticChannel+1
 13745     00B1  0836               	movf	??_setMagneticChannel,w
 13746     00B2  00B9               	movwf	setMagneticChannel@mode
 13747     00B3  0837               	movf	??_setMagneticChannel+1,w
 13748     00B4  00BA               	movwf	setMagneticChannel@mode+1
 13749     00B5                     l13846:
 13750                           
 13751                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 587:     if (channelMo
      +                          de == 0X0)
 13752     00B5  0838               	movf	setMagneticChannel@channelMode,w
 13753     00B6  1D03               	btfss	3,2
 13754     00B7  28B9               	goto	u10691
 13755     00B8  28BA               	goto	u10690
 13756     00B9                     u10691:
 13757     00B9  28ED               	goto	l13852
 13758     00BA                     u10690:
 13759     00BA                     l13848:
 13760                           
 13761                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 588:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 590:         bitWrite(mode, 4, 0);
 13762     00BA  083A               	movf	setMagneticChannel@mode+1,w
 13763     00BB  00F2               	movwf	bitWrite@reg+1
 13764     00BC  0839               	movf	setMagneticChannel@mode,w
 13765     00BD  00F1               	movwf	bitWrite@reg
 13766     00BE  3004               	movlw	4
 13767     00BF  00F3               	movwf	bitWrite@position
 13768     00C0  01F4               	clrf	bitWrite@value
 13769     00C1  3188  2000  3180   	fcall	_bitWrite
 13770                           
 13771                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 592:         bitWrite(
      +                          mode, 5, 0);
 13772     00C4  0140               	movlb	0	; select bank0
 13773     00C5  083A               	movf	setMagneticChannel@mode+1,w
 13774     00C6  00F2               	movwf	bitWrite@reg+1
 13775     00C7  0839               	movf	setMagneticChannel@mode,w
 13776     00C8  00F1               	movwf	bitWrite@reg
 13777     00C9  3005               	movlw	5
 13778     00CA  00F3               	movwf	bitWrite@position
 13779     00CB  01F4               	clrf	bitWrite@value
 13780     00CC  3188  2000  3180   	fcall	_bitWrite
 13781                           
 13782                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 594:         bitWrite(
      +                          mode, 6, 0);
 13783     00CF  0140               	movlb	0	; select bank0
 13784     00D0  083A               	movf	setMagneticChannel@mode+1,w
 13785     00D1  00F2               	movwf	bitWrite@reg+1
 13786     00D2  0839               	movf	setMagneticChannel@mode,w
 13787     00D3  00F1               	movwf	bitWrite@reg
 13788     00D4  3006               	movlw	6
 13789     00D5  00F3               	movwf	bitWrite@position
 13790     00D6  01F4               	clrf	bitWrite@value
 13791     00D7  3188  2000  3180   	fcall	_bitWrite
 13792                           
 13793                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 596:         bitWrite(
      +                          mode, 7, 0);
 13794     00DA  0140               	movlb	0	; select bank0
 13795     00DB  083A               	movf	setMagneticChannel@mode+1,w
 13796     00DC  00F2               	movwf	bitWrite@reg+1
 13797     00DD  0839               	movf	setMagneticChannel@mode,w
 13798     00DE  00F1               	movwf	bitWrite@reg
 13799     00DF  3007               	movlw	7
 13800     00E0  00F3               	movwf	bitWrite@position
 13801     00E1  01F4               	clrf	bitWrite@value
 13802     00E2  3188  2000  3180   	fcall	_bitWrite
 13803     00E5                     l13850:
 13804                           
 13805                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 598:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 13806     00E5  0140               	movlb	0	; select bank0
 13807     00E6  0839               	movf	setMagneticChannel@mode,w
 13808     00E7  00A6               	movwf	writeRegister@data
 13809     00E8  3002               	movlw	2
 13810     00E9  3190  200E  3180   	fcall	_writeRegister
 13811                           
 13812                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 600:     } else if (ch
      +                          annelMode == 0X1)
 13813     00EC  2B73               	goto	l13918
 13814     00ED                     l13852:
 13815     00ED  0338               	decf	setMagneticChannel@channelMode,w
 13816     00EE  1D03               	btfss	3,2
 13817     00EF  28F1               	goto	u10701
 13818     00F0  28F2               	goto	u10700
 13819     00F1                     u10701:
 13820     00F1  2926               	goto	l13858
 13821     00F2                     u10700:
 13822     00F2                     l13854:
 13823                           
 13824                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 601:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 602:         bitWrite(mode, 4, 1);
 13825     00F2  083A               	movf	setMagneticChannel@mode+1,w
 13826     00F3  00F2               	movwf	bitWrite@reg+1
 13827     00F4  0839               	movf	setMagneticChannel@mode,w
 13828     00F5  00F1               	movwf	bitWrite@reg
 13829     00F6  3004               	movlw	4
 13830     00F7  00F3               	movwf	bitWrite@position
 13831     00F8  01F4               	clrf	bitWrite@value
 13832     00F9  0AF4               	incf	bitWrite@value,f
 13833     00FA  3188  2000  3180   	fcall	_bitWrite
 13834                           
 13835                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 603:         bitWrite(
      +                          mode, 5, 0);
 13836     00FD  0140               	movlb	0	; select bank0
 13837     00FE  083A               	movf	setMagneticChannel@mode+1,w
 13838     00FF  00F2               	movwf	bitWrite@reg+1
 13839     0100  0839               	movf	setMagneticChannel@mode,w
 13840     0101  00F1               	movwf	bitWrite@reg
 13841     0102  3005               	movlw	5
 13842     0103  00F3               	movwf	bitWrite@position
 13843     0104  01F4               	clrf	bitWrite@value
 13844     0105  3188  2000  3180   	fcall	_bitWrite
 13845                           
 13846                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 604:         bitWrite(
      +                          mode, 6, 0);
 13847     0108  0140               	movlb	0	; select bank0
 13848     0109  083A               	movf	setMagneticChannel@mode+1,w
 13849     010A  00F2               	movwf	bitWrite@reg+1
 13850     010B  0839               	movf	setMagneticChannel@mode,w
 13851     010C  00F1               	movwf	bitWrite@reg
 13852     010D  3006               	movlw	6
 13853     010E  00F3               	movwf	bitWrite@position
 13854     010F  01F4               	clrf	bitWrite@value
 13855     0110  3188  2000  3180   	fcall	_bitWrite
 13856                           
 13857                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 605:         bitWrite(
      +                          mode, 7, 0);
 13858     0113  0140               	movlb	0	; select bank0
 13859     0114  083A               	movf	setMagneticChannel@mode+1,w
 13860     0115  00F2               	movwf	bitWrite@reg+1
 13861     0116  0839               	movf	setMagneticChannel@mode,w
 13862     0117  00F1               	movwf	bitWrite@reg
 13863     0118  3007               	movlw	7
 13864     0119  00F3               	movwf	bitWrite@position
 13865     011A  01F4               	clrf	bitWrite@value
 13866     011B  3188  2000  3180   	fcall	_bitWrite
 13867     011E                     l13856:
 13868                           
 13869                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 606:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 13870     011E  0140               	movlb	0	; select bank0
 13871     011F  0839               	movf	setMagneticChannel@mode,w
 13872     0120  00A6               	movwf	writeRegister@data
 13873     0121  3002               	movlw	2
 13874     0122  3190  200E  3180   	fcall	_writeRegister
 13875                           
 13876                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 607:     } else if (ch
      +                          annelMode == 0X2)
 13877     0125  2B73               	goto	l13918
 13878     0126                     l13858:
 13879     0126  3002               	movlw	2
 13880     0127  0638               	xorwf	setMagneticChannel@channelMode,w
 13881     0128  1D03               	btfss	3,2
 13882     0129  292B               	goto	u10711
 13883     012A  292C               	goto	u10710
 13884     012B                     u10711:
 13885     012B  2960               	goto	l13864
 13886     012C                     u10710:
 13887     012C                     l13860:
 13888                           
 13889                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 608:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 609:         bitWrite(mode, 4, 0);
 13890     012C  083A               	movf	setMagneticChannel@mode+1,w
 13891     012D  00F2               	movwf	bitWrite@reg+1
 13892     012E  0839               	movf	setMagneticChannel@mode,w
 13893     012F  00F1               	movwf	bitWrite@reg
 13894     0130  3004               	movlw	4
 13895     0131  00F3               	movwf	bitWrite@position
 13896     0132  01F4               	clrf	bitWrite@value
 13897     0133  3188  2000  3180   	fcall	_bitWrite
 13898                           
 13899                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 610:         bitWrite(
      +                          mode, 5, 1);
 13900     0136  0140               	movlb	0	; select bank0
 13901     0137  083A               	movf	setMagneticChannel@mode+1,w
 13902     0138  00F2               	movwf	bitWrite@reg+1
 13903     0139  0839               	movf	setMagneticChannel@mode,w
 13904     013A  00F1               	movwf	bitWrite@reg
 13905     013B  3005               	movlw	5
 13906     013C  00F3               	movwf	bitWrite@position
 13907     013D  01F4               	clrf	bitWrite@value
 13908     013E  0AF4               	incf	bitWrite@value,f
 13909     013F  3188  2000  3180   	fcall	_bitWrite
 13910                           
 13911                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 611:         bitWrite(
      +                          mode, 6, 0);
 13912     0142  0140               	movlb	0	; select bank0
 13913     0143  083A               	movf	setMagneticChannel@mode+1,w
 13914     0144  00F2               	movwf	bitWrite@reg+1
 13915     0145  0839               	movf	setMagneticChannel@mode,w
 13916     0146  00F1               	movwf	bitWrite@reg
 13917     0147  3006               	movlw	6
 13918     0148  00F3               	movwf	bitWrite@position
 13919     0149  01F4               	clrf	bitWrite@value
 13920     014A  3188  2000  3180   	fcall	_bitWrite
 13921                           
 13922                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 612:         bitWrite(
      +                          mode, 7, 0);
 13923     014D  0140               	movlb	0	; select bank0
 13924     014E  083A               	movf	setMagneticChannel@mode+1,w
 13925     014F  00F2               	movwf	bitWrite@reg+1
 13926     0150  0839               	movf	setMagneticChannel@mode,w
 13927     0151  00F1               	movwf	bitWrite@reg
 13928     0152  3007               	movlw	7
 13929     0153  00F3               	movwf	bitWrite@position
 13930     0154  01F4               	clrf	bitWrite@value
 13931     0155  3188  2000  3180   	fcall	_bitWrite
 13932     0158                     l13862:
 13933                           
 13934                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 613:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 13935     0158  0140               	movlb	0	; select bank0
 13936     0159  0839               	movf	setMagneticChannel@mode,w
 13937     015A  00A6               	movwf	writeRegister@data
 13938     015B  3002               	movlw	2
 13939     015C  3190  200E  3180   	fcall	_writeRegister
 13940                           
 13941                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 614:     } else if (ch
      +                          annelMode == 0X3)
 13942     015F  2B73               	goto	l13918
 13943     0160                     l13864:
 13944     0160  3003               	movlw	3
 13945     0161  0638               	xorwf	setMagneticChannel@channelMode,w
 13946     0162  1D03               	btfss	3,2
 13947     0163  2965               	goto	u10721
 13948     0164  2966               	goto	u10720
 13949     0165                     u10721:
 13950     0165  299B               	goto	l13870
 13951     0166                     u10720:
 13952     0166                     l13866:
 13953                           
 13954                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 615:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 616:         bitWrite(mode, 4, 1);
 13955     0166  083A               	movf	setMagneticChannel@mode+1,w
 13956     0167  00F2               	movwf	bitWrite@reg+1
 13957     0168  0839               	movf	setMagneticChannel@mode,w
 13958     0169  00F1               	movwf	bitWrite@reg
 13959     016A  3004               	movlw	4
 13960     016B  00F3               	movwf	bitWrite@position
 13961     016C  01F4               	clrf	bitWrite@value
 13962     016D  0AF4               	incf	bitWrite@value,f
 13963     016E  3188  2000  3180   	fcall	_bitWrite
 13964                           
 13965                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 617:         bitWrite(
      +                          mode, 5, 1);
 13966     0171  0140               	movlb	0	; select bank0
 13967     0172  083A               	movf	setMagneticChannel@mode+1,w
 13968     0173  00F2               	movwf	bitWrite@reg+1
 13969     0174  0839               	movf	setMagneticChannel@mode,w
 13970     0175  00F1               	movwf	bitWrite@reg
 13971     0176  3005               	movlw	5
 13972     0177  00F3               	movwf	bitWrite@position
 13973     0178  01F4               	clrf	bitWrite@value
 13974     0179  0AF4               	incf	bitWrite@value,f
 13975     017A  3188  2000  3180   	fcall	_bitWrite
 13976                           
 13977                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 618:         bitWrite(
      +                          mode, 6, 0);
 13978     017D  0140               	movlb	0	; select bank0
 13979     017E  083A               	movf	setMagneticChannel@mode+1,w
 13980     017F  00F2               	movwf	bitWrite@reg+1
 13981     0180  0839               	movf	setMagneticChannel@mode,w
 13982     0181  00F1               	movwf	bitWrite@reg
 13983     0182  3006               	movlw	6
 13984     0183  00F3               	movwf	bitWrite@position
 13985     0184  01F4               	clrf	bitWrite@value
 13986     0185  3188  2000  3180   	fcall	_bitWrite
 13987                           
 13988                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 619:         bitWrite(
      +                          mode, 7, 0);
 13989     0188  0140               	movlb	0	; select bank0
 13990     0189  083A               	movf	setMagneticChannel@mode+1,w
 13991     018A  00F2               	movwf	bitWrite@reg+1
 13992     018B  0839               	movf	setMagneticChannel@mode,w
 13993     018C  00F1               	movwf	bitWrite@reg
 13994     018D  3007               	movlw	7
 13995     018E  00F3               	movwf	bitWrite@position
 13996     018F  01F4               	clrf	bitWrite@value
 13997     0190  3188  2000  3180   	fcall	_bitWrite
 13998     0193                     l13868:
 13999                           
 14000                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 620:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14001     0193  0140               	movlb	0	; select bank0
 14002     0194  0839               	movf	setMagneticChannel@mode,w
 14003     0195  00A6               	movwf	writeRegister@data
 14004     0196  3002               	movlw	2
 14005     0197  3190  200E  3180   	fcall	_writeRegister
 14006                           
 14007                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 621:     } else if (ch
      +                          annelMode == 0X4)
 14008     019A  2B73               	goto	l13918
 14009     019B                     l13870:
 14010     019B  3004               	movlw	4
 14011     019C  0638               	xorwf	setMagneticChannel@channelMode,w
 14012     019D  1D03               	btfss	3,2
 14013     019E  29A0               	goto	u10731
 14014     019F  29A1               	goto	u10730
 14015     01A0                     u10731:
 14016     01A0  29D5               	goto	l13876
 14017     01A1                     u10730:
 14018     01A1                     l13872:
 14019                           
 14020                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 622:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 623:         bitWrite(mode, 4, 0);
 14021     01A1  083A               	movf	setMagneticChannel@mode+1,w
 14022     01A2  00F2               	movwf	bitWrite@reg+1
 14023     01A3  0839               	movf	setMagneticChannel@mode,w
 14024     01A4  00F1               	movwf	bitWrite@reg
 14025     01A5  3004               	movlw	4
 14026     01A6  00F3               	movwf	bitWrite@position
 14027     01A7  01F4               	clrf	bitWrite@value
 14028     01A8  3188  2000  3180   	fcall	_bitWrite
 14029                           
 14030                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 624:         bitWrite(
      +                          mode, 5, 0);
 14031     01AB  0140               	movlb	0	; select bank0
 14032     01AC  083A               	movf	setMagneticChannel@mode+1,w
 14033     01AD  00F2               	movwf	bitWrite@reg+1
 14034     01AE  0839               	movf	setMagneticChannel@mode,w
 14035     01AF  00F1               	movwf	bitWrite@reg
 14036     01B0  3005               	movlw	5
 14037     01B1  00F3               	movwf	bitWrite@position
 14038     01B2  01F4               	clrf	bitWrite@value
 14039     01B3  3188  2000  3180   	fcall	_bitWrite
 14040                           
 14041                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 625:         bitWrite(
      +                          mode, 6, 1);
 14042     01B6  0140               	movlb	0	; select bank0
 14043     01B7  083A               	movf	setMagneticChannel@mode+1,w
 14044     01B8  00F2               	movwf	bitWrite@reg+1
 14045     01B9  0839               	movf	setMagneticChannel@mode,w
 14046     01BA  00F1               	movwf	bitWrite@reg
 14047     01BB  3006               	movlw	6
 14048     01BC  00F3               	movwf	bitWrite@position
 14049     01BD  01F4               	clrf	bitWrite@value
 14050     01BE  0AF4               	incf	bitWrite@value,f
 14051     01BF  3188  2000  3180   	fcall	_bitWrite
 14052                           
 14053                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 626:         bitWrite(
      +                          mode, 7, 0);
 14054     01C2  0140               	movlb	0	; select bank0
 14055     01C3  083A               	movf	setMagneticChannel@mode+1,w
 14056     01C4  00F2               	movwf	bitWrite@reg+1
 14057     01C5  0839               	movf	setMagneticChannel@mode,w
 14058     01C6  00F1               	movwf	bitWrite@reg
 14059     01C7  3007               	movlw	7
 14060     01C8  00F3               	movwf	bitWrite@position
 14061     01C9  01F4               	clrf	bitWrite@value
 14062     01CA  3188  2000  3180   	fcall	_bitWrite
 14063     01CD                     l13874:
 14064                           
 14065                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 627:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14066     01CD  0140               	movlb	0	; select bank0
 14067     01CE  0839               	movf	setMagneticChannel@mode,w
 14068     01CF  00A6               	movwf	writeRegister@data
 14069     01D0  3002               	movlw	2
 14070     01D1  3190  200E  3180   	fcall	_writeRegister
 14071                           
 14072                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 628:     } else if (ch
      +                          annelMode == 0X5)
 14073     01D4  2B73               	goto	l13918
 14074     01D5                     l13876:
 14075     01D5  3005               	movlw	5
 14076     01D6  0638               	xorwf	setMagneticChannel@channelMode,w
 14077     01D7  1D03               	btfss	3,2
 14078     01D8  29DA               	goto	u10741
 14079     01D9  29DB               	goto	u10740
 14080     01DA                     u10741:
 14081     01DA  2A10               	goto	l13882
 14082     01DB                     u10740:
 14083     01DB                     l13878:
 14084                           
 14085                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 629:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 630:         bitWrite(mode, 4, 1);
 14086     01DB  083A               	movf	setMagneticChannel@mode+1,w
 14087     01DC  00F2               	movwf	bitWrite@reg+1
 14088     01DD  0839               	movf	setMagneticChannel@mode,w
 14089     01DE  00F1               	movwf	bitWrite@reg
 14090     01DF  3004               	movlw	4
 14091     01E0  00F3               	movwf	bitWrite@position
 14092     01E1  01F4               	clrf	bitWrite@value
 14093     01E2  0AF4               	incf	bitWrite@value,f
 14094     01E3  3188  2000  3180   	fcall	_bitWrite
 14095                           
 14096                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 631:         bitWrite(
      +                          mode, 5, 0);
 14097     01E6  0140               	movlb	0	; select bank0
 14098     01E7  083A               	movf	setMagneticChannel@mode+1,w
 14099     01E8  00F2               	movwf	bitWrite@reg+1
 14100     01E9  0839               	movf	setMagneticChannel@mode,w
 14101     01EA  00F1               	movwf	bitWrite@reg
 14102     01EB  3005               	movlw	5
 14103     01EC  00F3               	movwf	bitWrite@position
 14104     01ED  01F4               	clrf	bitWrite@value
 14105     01EE  3188  2000  3180   	fcall	_bitWrite
 14106                           
 14107                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 632:         bitWrite(
      +                          mode, 6, 1);
 14108     01F1  0140               	movlb	0	; select bank0
 14109     01F2  083A               	movf	setMagneticChannel@mode+1,w
 14110     01F3  00F2               	movwf	bitWrite@reg+1
 14111     01F4  0839               	movf	setMagneticChannel@mode,w
 14112     01F5  00F1               	movwf	bitWrite@reg
 14113     01F6  3006               	movlw	6
 14114     01F7  00F3               	movwf	bitWrite@position
 14115     01F8  01F4               	clrf	bitWrite@value
 14116     01F9  0AF4               	incf	bitWrite@value,f
 14117     01FA  3188  2000  3180   	fcall	_bitWrite
 14118                           
 14119                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 633:         bitWrite(
      +                          mode, 7, 0);
 14120     01FD  0140               	movlb	0	; select bank0
 14121     01FE  083A               	movf	setMagneticChannel@mode+1,w
 14122     01FF  00F2               	movwf	bitWrite@reg+1
 14123     0200  0839               	movf	setMagneticChannel@mode,w
 14124     0201  00F1               	movwf	bitWrite@reg
 14125     0202  3007               	movlw	7
 14126     0203  00F3               	movwf	bitWrite@position
 14127     0204  01F4               	clrf	bitWrite@value
 14128     0205  3188  2000  3180   	fcall	_bitWrite
 14129     0208                     l13880:
 14130                           
 14131                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 634:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14132     0208  0140               	movlb	0	; select bank0
 14133     0209  0839               	movf	setMagneticChannel@mode,w
 14134     020A  00A6               	movwf	writeRegister@data
 14135     020B  3002               	movlw	2
 14136     020C  3190  200E  3180   	fcall	_writeRegister
 14137                           
 14138                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 635:     } else if (ch
      +                          annelMode == 0X6)
 14139     020F  2B73               	goto	l13918
 14140     0210                     l13882:
 14141     0210  3006               	movlw	6
 14142     0211  0638               	xorwf	setMagneticChannel@channelMode,w
 14143     0212  1D03               	btfss	3,2
 14144     0213  2A15               	goto	u10751
 14145     0214  2A16               	goto	u10750
 14146     0215                     u10751:
 14147     0215  2A4B               	goto	l13888
 14148     0216                     u10750:
 14149     0216                     l13884:
 14150                           
 14151                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 636:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 637:         bitWrite(mode, 4, 0);
 14152     0216  083A               	movf	setMagneticChannel@mode+1,w
 14153     0217  00F2               	movwf	bitWrite@reg+1
 14154     0218  0839               	movf	setMagneticChannel@mode,w
 14155     0219  00F1               	movwf	bitWrite@reg
 14156     021A  3004               	movlw	4
 14157     021B  00F3               	movwf	bitWrite@position
 14158     021C  01F4               	clrf	bitWrite@value
 14159     021D  3188  2000  3180   	fcall	_bitWrite
 14160                           
 14161                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 638:         bitWrite(
      +                          mode, 5, 1);
 14162     0220  0140               	movlb	0	; select bank0
 14163     0221  083A               	movf	setMagneticChannel@mode+1,w
 14164     0222  00F2               	movwf	bitWrite@reg+1
 14165     0223  0839               	movf	setMagneticChannel@mode,w
 14166     0224  00F1               	movwf	bitWrite@reg
 14167     0225  3005               	movlw	5
 14168     0226  00F3               	movwf	bitWrite@position
 14169     0227  01F4               	clrf	bitWrite@value
 14170     0228  0AF4               	incf	bitWrite@value,f
 14171     0229  3188  2000  3180   	fcall	_bitWrite
 14172                           
 14173                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 639:         bitWrite(
      +                          mode, 6, 1);
 14174     022C  0140               	movlb	0	; select bank0
 14175     022D  083A               	movf	setMagneticChannel@mode+1,w
 14176     022E  00F2               	movwf	bitWrite@reg+1
 14177     022F  0839               	movf	setMagneticChannel@mode,w
 14178     0230  00F1               	movwf	bitWrite@reg
 14179     0231  3006               	movlw	6
 14180     0232  00F3               	movwf	bitWrite@position
 14181     0233  01F4               	clrf	bitWrite@value
 14182     0234  0AF4               	incf	bitWrite@value,f
 14183     0235  3188  2000  3180   	fcall	_bitWrite
 14184                           
 14185                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 640:         bitWrite(
      +                          mode, 7, 0);
 14186     0238  0140               	movlb	0	; select bank0
 14187     0239  083A               	movf	setMagneticChannel@mode+1,w
 14188     023A  00F2               	movwf	bitWrite@reg+1
 14189     023B  0839               	movf	setMagneticChannel@mode,w
 14190     023C  00F1               	movwf	bitWrite@reg
 14191     023D  3007               	movlw	7
 14192     023E  00F3               	movwf	bitWrite@position
 14193     023F  01F4               	clrf	bitWrite@value
 14194     0240  3188  2000  3180   	fcall	_bitWrite
 14195     0243                     l13886:
 14196                           
 14197                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 641:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14198     0243  0140               	movlb	0	; select bank0
 14199     0244  0839               	movf	setMagneticChannel@mode,w
 14200     0245  00A6               	movwf	writeRegister@data
 14201     0246  3002               	movlw	2
 14202     0247  3190  200E  3180   	fcall	_writeRegister
 14203                           
 14204                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 642:     } else if (ch
      +                          annelMode == 0X7)
 14205     024A  2B73               	goto	l13918
 14206     024B                     l13888:
 14207     024B  3007               	movlw	7
 14208     024C  0638               	xorwf	setMagneticChannel@channelMode,w
 14209     024D  1D03               	btfss	3,2
 14210     024E  2A50               	goto	u10761
 14211     024F  2A51               	goto	u10760
 14212     0250                     u10761:
 14213     0250  2A87               	goto	l13894
 14214     0251                     u10760:
 14215     0251                     l13890:
 14216                           
 14217                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 643:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 644:         bitWrite(mode, 4, 1);
 14218     0251  083A               	movf	setMagneticChannel@mode+1,w
 14219     0252  00F2               	movwf	bitWrite@reg+1
 14220     0253  0839               	movf	setMagneticChannel@mode,w
 14221     0254  00F1               	movwf	bitWrite@reg
 14222     0255  3004               	movlw	4
 14223     0256  00F3               	movwf	bitWrite@position
 14224     0257  01F4               	clrf	bitWrite@value
 14225     0258  0AF4               	incf	bitWrite@value,f
 14226     0259  3188  2000  3180   	fcall	_bitWrite
 14227                           
 14228                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 645:         bitWrite(
      +                          mode, 5, 1);
 14229     025C  0140               	movlb	0	; select bank0
 14230     025D  083A               	movf	setMagneticChannel@mode+1,w
 14231     025E  00F2               	movwf	bitWrite@reg+1
 14232     025F  0839               	movf	setMagneticChannel@mode,w
 14233     0260  00F1               	movwf	bitWrite@reg
 14234     0261  3005               	movlw	5
 14235     0262  00F3               	movwf	bitWrite@position
 14236     0263  01F4               	clrf	bitWrite@value
 14237     0264  0AF4               	incf	bitWrite@value,f
 14238     0265  3188  2000  3180   	fcall	_bitWrite
 14239                           
 14240                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 646:         bitWrite(
      +                          mode, 6, 1);
 14241     0268  0140               	movlb	0	; select bank0
 14242     0269  083A               	movf	setMagneticChannel@mode+1,w
 14243     026A  00F2               	movwf	bitWrite@reg+1
 14244     026B  0839               	movf	setMagneticChannel@mode,w
 14245     026C  00F1               	movwf	bitWrite@reg
 14246     026D  3006               	movlw	6
 14247     026E  00F3               	movwf	bitWrite@position
 14248     026F  01F4               	clrf	bitWrite@value
 14249     0270  0AF4               	incf	bitWrite@value,f
 14250     0271  3188  2000  3180   	fcall	_bitWrite
 14251                           
 14252                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 647:         bitWrite(
      +                          mode, 7, 0);
 14253     0274  0140               	movlb	0	; select bank0
 14254     0275  083A               	movf	setMagneticChannel@mode+1,w
 14255     0276  00F2               	movwf	bitWrite@reg+1
 14256     0277  0839               	movf	setMagneticChannel@mode,w
 14257     0278  00F1               	movwf	bitWrite@reg
 14258     0279  3007               	movlw	7
 14259     027A  00F3               	movwf	bitWrite@position
 14260     027B  01F4               	clrf	bitWrite@value
 14261     027C  3188  2000  3180   	fcall	_bitWrite
 14262     027F                     l13892:
 14263                           
 14264                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 648:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14265     027F  0140               	movlb	0	; select bank0
 14266     0280  0839               	movf	setMagneticChannel@mode,w
 14267     0281  00A6               	movwf	writeRegister@data
 14268     0282  3002               	movlw	2
 14269     0283  3190  200E  3180   	fcall	_writeRegister
 14270                           
 14271                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 649:     } else if (ch
      +                          annelMode == 0X8)
 14272     0286  2B73               	goto	l13918
 14273     0287                     l13894:
 14274     0287  3008               	movlw	8
 14275     0288  0638               	xorwf	setMagneticChannel@channelMode,w
 14276     0289  1D03               	btfss	3,2
 14277     028A  2A8C               	goto	u10771
 14278     028B  2A8D               	goto	u10770
 14279     028C                     u10771:
 14280     028C  2AC1               	goto	l13900
 14281     028D                     u10770:
 14282     028D                     l13896:
 14283                           
 14284                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 650:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 651:         bitWrite(mode, 4, 0);
 14285     028D  083A               	movf	setMagneticChannel@mode+1,w
 14286     028E  00F2               	movwf	bitWrite@reg+1
 14287     028F  0839               	movf	setMagneticChannel@mode,w
 14288     0290  00F1               	movwf	bitWrite@reg
 14289     0291  3004               	movlw	4
 14290     0292  00F3               	movwf	bitWrite@position
 14291     0293  01F4               	clrf	bitWrite@value
 14292     0294  3188  2000  3180   	fcall	_bitWrite
 14293                           
 14294                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 652:         bitWrite(
      +                          mode, 5, 0);
 14295     0297  0140               	movlb	0	; select bank0
 14296     0298  083A               	movf	setMagneticChannel@mode+1,w
 14297     0299  00F2               	movwf	bitWrite@reg+1
 14298     029A  0839               	movf	setMagneticChannel@mode,w
 14299     029B  00F1               	movwf	bitWrite@reg
 14300     029C  3005               	movlw	5
 14301     029D  00F3               	movwf	bitWrite@position
 14302     029E  01F4               	clrf	bitWrite@value
 14303     029F  3188  2000  3180   	fcall	_bitWrite
 14304                           
 14305                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 653:         bitWrite(
      +                          mode, 6, 0);
 14306     02A2  0140               	movlb	0	; select bank0
 14307     02A3  083A               	movf	setMagneticChannel@mode+1,w
 14308     02A4  00F2               	movwf	bitWrite@reg+1
 14309     02A5  0839               	movf	setMagneticChannel@mode,w
 14310     02A6  00F1               	movwf	bitWrite@reg
 14311     02A7  3006               	movlw	6
 14312     02A8  00F3               	movwf	bitWrite@position
 14313     02A9  01F4               	clrf	bitWrite@value
 14314     02AA  3188  2000  3180   	fcall	_bitWrite
 14315                           
 14316                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 654:         bitWrite(
      +                          mode, 7, 1);
 14317     02AD  0140               	movlb	0	; select bank0
 14318     02AE  083A               	movf	setMagneticChannel@mode+1,w
 14319     02AF  00F2               	movwf	bitWrite@reg+1
 14320     02B0  0839               	movf	setMagneticChannel@mode,w
 14321     02B1  00F1               	movwf	bitWrite@reg
 14322     02B2  3007               	movlw	7
 14323     02B3  00F3               	movwf	bitWrite@position
 14324     02B4  01F4               	clrf	bitWrite@value
 14325     02B5  0AF4               	incf	bitWrite@value,f
 14326     02B6  3188  2000  3180   	fcall	_bitWrite
 14327     02B9                     l13898:
 14328                           
 14329                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 655:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14330     02B9  0140               	movlb	0	; select bank0
 14331     02BA  0839               	movf	setMagneticChannel@mode,w
 14332     02BB  00A6               	movwf	writeRegister@data
 14333     02BC  3002               	movlw	2
 14334     02BD  3190  200E  3180   	fcall	_writeRegister
 14335                           
 14336                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 656:     } else if (ch
      +                          annelMode == 0X9)
 14337     02C0  2B73               	goto	l13918
 14338     02C1                     l13900:
 14339     02C1  3009               	movlw	9
 14340     02C2  0638               	xorwf	setMagneticChannel@channelMode,w
 14341     02C3  1D03               	btfss	3,2
 14342     02C4  2AC6               	goto	u10781
 14343     02C5  2AC7               	goto	u10780
 14344     02C6                     u10781:
 14345     02C6  2AFC               	goto	l13906
 14346     02C7                     u10780:
 14347     02C7                     l13902:
 14348                           
 14349                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 657:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 658:         bitWrite(mode, 4, 1);
 14350     02C7  083A               	movf	setMagneticChannel@mode+1,w
 14351     02C8  00F2               	movwf	bitWrite@reg+1
 14352     02C9  0839               	movf	setMagneticChannel@mode,w
 14353     02CA  00F1               	movwf	bitWrite@reg
 14354     02CB  3004               	movlw	4
 14355     02CC  00F3               	movwf	bitWrite@position
 14356     02CD  01F4               	clrf	bitWrite@value
 14357     02CE  0AF4               	incf	bitWrite@value,f
 14358     02CF  3188  2000  3180   	fcall	_bitWrite
 14359                           
 14360                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 659:         bitWrite(
      +                          mode, 5, 0);
 14361     02D2  0140               	movlb	0	; select bank0
 14362     02D3  083A               	movf	setMagneticChannel@mode+1,w
 14363     02D4  00F2               	movwf	bitWrite@reg+1
 14364     02D5  0839               	movf	setMagneticChannel@mode,w
 14365     02D6  00F1               	movwf	bitWrite@reg
 14366     02D7  3005               	movlw	5
 14367     02D8  00F3               	movwf	bitWrite@position
 14368     02D9  01F4               	clrf	bitWrite@value
 14369     02DA  3188  2000  3180   	fcall	_bitWrite
 14370                           
 14371                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 660:         bitWrite(
      +                          mode, 6, 0);
 14372     02DD  0140               	movlb	0	; select bank0
 14373     02DE  083A               	movf	setMagneticChannel@mode+1,w
 14374     02DF  00F2               	movwf	bitWrite@reg+1
 14375     02E0  0839               	movf	setMagneticChannel@mode,w
 14376     02E1  00F1               	movwf	bitWrite@reg
 14377     02E2  3006               	movlw	6
 14378     02E3  00F3               	movwf	bitWrite@position
 14379     02E4  01F4               	clrf	bitWrite@value
 14380     02E5  3188  2000  3180   	fcall	_bitWrite
 14381                           
 14382                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 661:         bitWrite(
      +                          mode, 7, 1);
 14383     02E8  0140               	movlb	0	; select bank0
 14384     02E9  083A               	movf	setMagneticChannel@mode+1,w
 14385     02EA  00F2               	movwf	bitWrite@reg+1
 14386     02EB  0839               	movf	setMagneticChannel@mode,w
 14387     02EC  00F1               	movwf	bitWrite@reg
 14388     02ED  3007               	movlw	7
 14389     02EE  00F3               	movwf	bitWrite@position
 14390     02EF  01F4               	clrf	bitWrite@value
 14391     02F0  0AF4               	incf	bitWrite@value,f
 14392     02F1  3188  2000  3180   	fcall	_bitWrite
 14393     02F4                     l13904:
 14394                           
 14395                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 662:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14396     02F4  0140               	movlb	0	; select bank0
 14397     02F5  0839               	movf	setMagneticChannel@mode,w
 14398     02F6  00A6               	movwf	writeRegister@data
 14399     02F7  3002               	movlw	2
 14400     02F8  3190  200E  3180   	fcall	_writeRegister
 14401                           
 14402                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 663:     } else if (ch
      +                          annelMode == 0XA)
 14403     02FB  2B73               	goto	l13918
 14404     02FC                     l13906:
 14405     02FC  300A               	movlw	10
 14406     02FD  0638               	xorwf	setMagneticChannel@channelMode,w
 14407     02FE  1D03               	btfss	3,2
 14408     02FF  2B01               	goto	u10791
 14409     0300  2B02               	goto	u10790
 14410     0301                     u10791:
 14411     0301  2B37               	goto	l13912
 14412     0302                     u10790:
 14413     0302                     l13908:
 14414                           
 14415                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 664:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 665:         bitWrite(mode, 4, 0);
 14416     0302  083A               	movf	setMagneticChannel@mode+1,w
 14417     0303  00F2               	movwf	bitWrite@reg+1
 14418     0304  0839               	movf	setMagneticChannel@mode,w
 14419     0305  00F1               	movwf	bitWrite@reg
 14420     0306  3004               	movlw	4
 14421     0307  00F3               	movwf	bitWrite@position
 14422     0308  01F4               	clrf	bitWrite@value
 14423     0309  3188  2000  3180   	fcall	_bitWrite
 14424                           
 14425                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 666:         bitWrite(
      +                          mode, 5, 1);
 14426     030C  0140               	movlb	0	; select bank0
 14427     030D  083A               	movf	setMagneticChannel@mode+1,w
 14428     030E  00F2               	movwf	bitWrite@reg+1
 14429     030F  0839               	movf	setMagneticChannel@mode,w
 14430     0310  00F1               	movwf	bitWrite@reg
 14431     0311  3005               	movlw	5
 14432     0312  00F3               	movwf	bitWrite@position
 14433     0313  01F4               	clrf	bitWrite@value
 14434     0314  0AF4               	incf	bitWrite@value,f
 14435     0315  3188  2000  3180   	fcall	_bitWrite
 14436                           
 14437                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 667:         bitWrite(
      +                          mode, 6, 0);
 14438     0318  0140               	movlb	0	; select bank0
 14439     0319  083A               	movf	setMagneticChannel@mode+1,w
 14440     031A  00F2               	movwf	bitWrite@reg+1
 14441     031B  0839               	movf	setMagneticChannel@mode,w
 14442     031C  00F1               	movwf	bitWrite@reg
 14443     031D  3006               	movlw	6
 14444     031E  00F3               	movwf	bitWrite@position
 14445     031F  01F4               	clrf	bitWrite@value
 14446     0320  3188  2000  3180   	fcall	_bitWrite
 14447                           
 14448                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 668:         bitWrite(
      +                          mode, 7, 1);
 14449     0323  0140               	movlb	0	; select bank0
 14450     0324  083A               	movf	setMagneticChannel@mode+1,w
 14451     0325  00F2               	movwf	bitWrite@reg+1
 14452     0326  0839               	movf	setMagneticChannel@mode,w
 14453     0327  00F1               	movwf	bitWrite@reg
 14454     0328  3007               	movlw	7
 14455     0329  00F3               	movwf	bitWrite@position
 14456     032A  01F4               	clrf	bitWrite@value
 14457     032B  0AF4               	incf	bitWrite@value,f
 14458     032C  3188  2000  3180   	fcall	_bitWrite
 14459     032F                     l13910:
 14460                           
 14461                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 669:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14462     032F  0140               	movlb	0	; select bank0
 14463     0330  0839               	movf	setMagneticChannel@mode,w
 14464     0331  00A6               	movwf	writeRegister@data
 14465     0332  3002               	movlw	2
 14466     0333  3190  200E  3180   	fcall	_writeRegister
 14467                           
 14468                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 670:     } else if (ch
      +                          annelMode == 0XB)
 14469     0336  2B73               	goto	l13918
 14470     0337                     l13912:
 14471     0337  300B               	movlw	11
 14472     0338  0638               	xorwf	setMagneticChannel@channelMode,w
 14473     0339  1D03               	btfss	3,2
 14474     033A  2B3C               	goto	u10801
 14475     033B  2B3D               	goto	u10800
 14476     033C                     u10801:
 14477     033C  2B73               	goto	l2240
 14478     033D                     u10800:
 14479     033D                     l13914:
 14480                           
 14481                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 671:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 672:         bitWrite(mode, 4, 1);
 14482     033D  083A               	movf	setMagneticChannel@mode+1,w
 14483     033E  00F2               	movwf	bitWrite@reg+1
 14484     033F  0839               	movf	setMagneticChannel@mode,w
 14485     0340  00F1               	movwf	bitWrite@reg
 14486     0341  3004               	movlw	4
 14487     0342  00F3               	movwf	bitWrite@position
 14488     0343  01F4               	clrf	bitWrite@value
 14489     0344  0AF4               	incf	bitWrite@value,f
 14490     0345  3188  2000  3180   	fcall	_bitWrite
 14491                           
 14492                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 673:         bitWrite(
      +                          mode, 5, 1);
 14493     0348  0140               	movlb	0	; select bank0
 14494     0349  083A               	movf	setMagneticChannel@mode+1,w
 14495     034A  00F2               	movwf	bitWrite@reg+1
 14496     034B  0839               	movf	setMagneticChannel@mode,w
 14497     034C  00F1               	movwf	bitWrite@reg
 14498     034D  3005               	movlw	5
 14499     034E  00F3               	movwf	bitWrite@position
 14500     034F  01F4               	clrf	bitWrite@value
 14501     0350  0AF4               	incf	bitWrite@value,f
 14502     0351  3188  2000  3180   	fcall	_bitWrite
 14503                           
 14504                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 674:         bitWrite(
      +                          mode, 6, 0);
 14505     0354  0140               	movlb	0	; select bank0
 14506     0355  083A               	movf	setMagneticChannel@mode+1,w
 14507     0356  00F2               	movwf	bitWrite@reg+1
 14508     0357  0839               	movf	setMagneticChannel@mode,w
 14509     0358  00F1               	movwf	bitWrite@reg
 14510     0359  3006               	movlw	6
 14511     035A  00F3               	movwf	bitWrite@position
 14512     035B  01F4               	clrf	bitWrite@value
 14513     035C  3188  2000  3180   	fcall	_bitWrite
 14514                           
 14515                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 675:         bitWrite(
      +                          mode, 7, 1);
 14516     035F  0140               	movlb	0	; select bank0
 14517     0360  083A               	movf	setMagneticChannel@mode+1,w
 14518     0361  00F2               	movwf	bitWrite@reg+1
 14519     0362  0839               	movf	setMagneticChannel@mode,w
 14520     0363  00F1               	movwf	bitWrite@reg
 14521     0364  3007               	movlw	7
 14522     0365  00F3               	movwf	bitWrite@position
 14523     0366  01F4               	clrf	bitWrite@value
 14524     0367  0AF4               	incf	bitWrite@value,f
 14525     0368  3188  2000  3180   	fcall	_bitWrite
 14526     036B                     l13916:
 14527                           
 14528                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 676:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14529     036B  0140               	movlb	0	; select bank0
 14530     036C  0839               	movf	setMagneticChannel@mode,w
 14531     036D  00A6               	movwf	writeRegister@data
 14532     036E  3002               	movlw	2
 14533     036F  3190  200E  3180   	fcall	_writeRegister
 14534     0372  2B73               	goto	l13918
 14535     0373                     l2240:
 14536     0373                     l13918:
 14537                           
 14538                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 679:     return getErr
      +                          or();;	Return value of _setMagneticChannel is never used
 14539     0373  318D  25E7  3180   	fcall	_getError
 14540     0376                     l2246:
 14541     0376  0008               	return
 14542     0377                     __end_of_setMagneticChannel:
 14543                           
 14544                           	psect	text7
 14545     100E                     __ptext7:	
 14546 ;; *************** function _writeRegister *****************
 14547 ;; Defined at:
 14548 ;;		line 182 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 14549 ;; Parameters:    Size  Location     Type
 14550 ;;  regAddress      1    wreg     unsigned char 
 14551 ;;  data            1    6[BANK0 ] unsigned char 
 14552 ;; Auto vars:     Size  Location     Type
 14553 ;;  regAddress      1    7[BANK0 ] unsigned char 
 14554 ;; Return value:  Size  Location     Type
 14555 ;;                  1    wreg      unsigned char 
 14556 ;; Registers used:
 14557 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14558 ;; Tracked objects:
 14559 ;;		On entry : 0/0
 14560 ;;		On exit  : 0/0
 14561 ;;		Unchanged: 0/0
 14562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14563 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14564 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14566 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14567 ;;Total ram usage:        2 bytes
 14568 ;; Hardware stack levels used: 1
 14569 ;; Hardware stack levels required when called: 13
 14570 ;; This function calls:
 14571 ;;		_i2c_write1ByteRegister
 14572 ;; This function is called by:
 14573 ;;		_setOperatingMode
 14574 ;;		_setMagneticChannel
 14575 ;;		_setXYAxisRange
 14576 ;;		_setZAxisRange
 14577 ;;		_setTemperatureEn
 14578 ;;		_setupWakeUpAndSleep
 14579 ;;		_setCRCMode
 14580 ;;		_setMagTemp
 14581 ;;		_setConvAvg
 14582 ;;		_setIntThreshold
 14583 ;;		_setLowPower
 14584 ;;		_setGlitchFilter
 14585 ;;		_setTriggerMode
 14586 ;;		_setSleeptime
 14587 ;;		_setMagDir
 14588 ;;		_setMagnitudeGain
 14589 ;;		_setMagneticGain
 14590 ;;		_setMagneticOffset1
 14591 ;;		_setMagneticOffset2
 14592 ;;		_setAngleEn
 14593 ;;		_setXThreshold
 14594 ;;		_setYThreshold
 14595 ;;		_setZThreshold
 14596 ;;		_setTemperatureThreshold
 14597 ;;		_setInterruptResult
 14598 ;;		_setThresholdEn
 14599 ;;		_setIntPinState
 14600 ;;		_setInterruptMode
 14601 ;;		_setMaskInterrupt
 14602 ;;		_setI2CAddress
 14603 ;;		_setI2CAddressEN
 14604 ;; This function uses a non-reentrant model
 14605 ;;
 14606                           
 14607     100E                     _writeRegister:	
 14608                           ;psect for function _writeRegister
 14609                           
 14610                           
 14611                           ;incstack = 0
 14612                           ; Regs used in _writeRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14613                           ;writeRegister@regAddress stored from wreg
 14614     100E  0140               	movlb	0	; select bank0
 14615     100F  00A7               	movwf	writeRegister@regAddress
 14616     1010                     l13550:
 14617                           
 14618                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 185:     i2c_write1Byt
      +                          eRegister(0X22, regAddress, data);
 14619     1010  0827               	movf	writeRegister@regAddress,w
 14620     1011  00A4               	movwf	i2c_write1ByteRegister@reg
 14621     1012  0826               	movf	writeRegister@data,w
 14622     1013  00A5               	movwf	i2c_write1ByteRegister@data
 14623     1014  3022               	movlw	34
 14624     1015  3197  2700  3190   	fcall	_i2c_write1ByteRegister
 14625     1018                     l2139:
 14626     1018  0008               	return
 14627     1019                     __end_of_writeRegister:
 14628                           
 14629                           	psect	text8
 14630     1700                     __ptext8:	
 14631 ;; *************** function _i2c_write1ByteRegister *****************
 14632 ;; Defined at:
 14633 ;;		line 51 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 14634 ;; Parameters:    Size  Location     Type
 14635 ;;  address         1    wreg     unsigned char 
 14636 ;;  reg             1    4[BANK0 ] unsigned char 
 14637 ;;  data            1    5[BANK0 ] unsigned char 
 14638 ;; Auto vars:     Size  Location     Type
 14639 ;;  address         1   11[COMMON] unsigned char 
 14640 ;; Return value:  Size  Location     Type
 14641 ;;                  1    wreg      void 
 14642 ;; Registers used:
 14643 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14644 ;; Tracked objects:
 14645 ;;		On entry : 0/0
 14646 ;;		On exit  : 0/0
 14647 ;;		Unchanged: 0/0
 14648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14649 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14650 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14652 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14653 ;;Total ram usage:        3 bytes
 14654 ;; Hardware stack levels used: 1
 14655 ;; Hardware stack levels required when called: 12
 14656 ;; This function calls:
 14657 ;;		_I2C1_Close
 14658 ;;		_I2C1_MasterWrite
 14659 ;;		_I2C1_Open
 14660 ;;		_I2C1_SetAddressNackCallback
 14661 ;;		_I2C1_SetBuffer
 14662 ;;		_I2C1_SetDataCompleteCallback
 14663 ;; This function is called by:
 14664 ;;		_writeRegister
 14665 ;;		_BMA253_Initialize
 14666 ;; This function uses a non-reentrant model
 14667 ;;
 14668                           
 14669     1700                     _i2c_write1ByteRegister:	
 14670                           ;psect for function _i2c_write1ByteRegister
 14671                           
 14672                           
 14673                           ;incstack = 0
 14674                           ; Regs used in _i2c_write1ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14675                           ;i2c_write1ByteRegister@address stored from wreg
 14676     1700  00FB               	movwf	i2c_write1ByteRegister@address
 14677     1701                     l13318:
 14678     1701                     l13320:	
 14679                           ;mcc_generated_files/drivers/i2c_simple_master.c: 51: void i2c_write1ByteRegister(i2c1_a
      +                          ddress_t address, uint8_t reg, uint8_t data);mcc_generated_files/drivers/i2c_simple_mast
      +                          er.c: 52: {;mcc_generated_files/drivers/i2c_simple_master.c: 53:     while(!I2C1_Open(ad
      +                          dress));
 14680                           
 14681     1701  087B               	movf	i2c_write1ByteRegister@address,w
 14682     1702  3197  27CA  3197   	fcall	_I2C1_Open
 14683     1705  3A00               	xorlw	0
 14684     1706  1903               	skipnz
 14685     1707  2F09               	goto	u10191
 14686     1708  2F0A               	goto	u10190
 14687     1709                     u10191:
 14688     1709  2F01               	goto	l13320
 14689     170A                     u10190:
 14690     170A                     l13322:
 14691                           
 14692                           ;mcc_generated_files/drivers/i2c_simple_master.c: 54:     I2C1_SetDataCompleteCallback(w
      +                          r1RegCompleteHandler,&data);
 14693     170A  30CD               	movlw	low _wr1RegCompleteHandler
 14694     170B  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 14695     170C  3010               	movlw	high _wr1RegCompleteHandler
 14696     170D  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 14697     170E  3025               	movlw	(low (i2c_write1ByteRegister@data| 0))& (0+255)
 14698     170F  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 14699     1710  319F  27DF  3197   	fcall	_I2C1_SetDataCompleteCallback
 14700     1713                     l13324:
 14701                           
 14702                           ;mcc_generated_files/drivers/i2c_simple_master.c: 55:     I2C1_SetBuffer(&reg,1);
 14703     1713  3001               	movlw	1
 14704     1714  00F1               	movwf	I2C1_SetBuffer@bufferSize
 14705     1715  3000               	movlw	0
 14706     1716  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 14707     1717  3024               	movlw	(low (i2c_write1ByteRegister@reg| 0))& (0+255)
 14708     1718  3190  2064  3197   	fcall	_I2C1_SetBuffer
 14709     171B                     l13326:
 14710                           
 14711                           ;mcc_generated_files/drivers/i2c_simple_master.c: 56:     I2C1_SetAddressNackCallback(((
      +                          void*)0),((void*)0));
 14712     171B  3000               	movlw	0
 14713     171C  00F5               	movwf	I2C1_SetAddressNackCallback@cb
 14714     171D  00F6               	movwf	I2C1_SetAddressNackCallback@cb+1
 14715     171E  3000               	movlw	0
 14716     171F  00F7               	movwf	I2C1_SetAddressNackCallback@ptr
 14717     1720  00F8               	movwf	I2C1_SetAddressNackCallback@ptr+1
 14718     1721  319F  27EA  3197   	fcall	_I2C1_SetAddressNackCallback
 14719     1724                     l13328:
 14720                           
 14721                           ;mcc_generated_files/drivers/i2c_simple_master.c: 57:     I2C1_MasterWrite();
 14722     1724  319E  26E1  3197   	fcall	_I2C1_MasterWrite
 14723     1727                     l13330:	
 14724                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58:     while(I2C1_BUSY == I2C1_Close(
      +                          ));
 14725                           
 14726     1727  3192  224D  3197   	fcall	_I2C1_Close
 14727     172A  3A01               	xorlw	1
 14728     172B  1903               	skipnz
 14729     172C  2F2E               	goto	u10201
 14730     172D  2F2F               	goto	u10200
 14731     172E                     u10201:
 14732     172E  2F27               	goto	l13330
 14733     172F                     u10200:
 14734     172F                     l510:
 14735     172F  0008               	return
 14736     1730                     __end_of_i2c_write1ByteRegister:
 14737                           
 14738                           	psect	text9
 14739     0DE7                     __ptext9:	
 14740 ;; *************** function _getError *****************
 14741 ;; Defined at:
 14742 ;;		line 2314 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 14743 ;; Parameters:    Size  Location     Type
 14744 ;;		None
 14745 ;; Auto vars:     Size  Location     Type
 14746 ;;  statusReg       1   21[BANK0 ] unsigned char 
 14747 ;;  oscillatorEr    1   20[BANK0 ] unsigned char 
 14748 ;;  intPinError     1   19[BANK0 ] unsigned char 
 14749 ;;  otpCrcError     1   18[BANK0 ] unsigned char 
 14750 ;;  undervoltage    1   17[BANK0 ] unsigned char 
 14751 ;; Return value:  Size  Location     Type
 14752 ;;                  1    wreg      char 
 14753 ;; Registers used:
 14754 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14755 ;; Tracked objects:
 14756 ;;		On entry : 0/0
 14757 ;;		On exit  : 0/0
 14758 ;;		Unchanged: 0/0
 14759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14761 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14762 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14763 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14764 ;;Total ram usage:        7 bytes
 14765 ;; Hardware stack levels used: 1
 14766 ;; Hardware stack levels required when called: 16
 14767 ;; This function calls:
 14768 ;;		_bitRead
 14769 ;;		_getDeviceStatus
 14770 ;; This function is called by:
 14771 ;;		_begin
 14772 ;;		_setOperatingMode
 14773 ;;		_setMagneticChannel
 14774 ;;		_setXYAxisRange
 14775 ;;		_setZAxisRange
 14776 ;;		_setTemperatureEn
 14777 ;;		_setupWakeUpAndSleep
 14778 ;;		_readWakeUpAndSleepData
 14779 ;;		_setCRCMode
 14780 ;;		_setMagTemp
 14781 ;;		_setConvAvg
 14782 ;;		_setReadMode
 14783 ;;		_setIntThreshold
 14784 ;;		_setLowPower
 14785 ;;		_setGlitchFilter
 14786 ;;		_setTriggerMode
 14787 ;;		_setSleeptime
 14788 ;;		_setMagDir
 14789 ;;		_setMagnitudeGain
 14790 ;;		_setMagneticGain
 14791 ;;		_setMagneticOffset1
 14792 ;;		_setMagneticOffset2
 14793 ;;		_setAngleEn
 14794 ;;		_setXThreshold
 14795 ;;		_setYThreshold
 14796 ;;		_setZThreshold
 14797 ;;		_setTemperatureThreshold
 14798 ;;		_setInterruptResult
 14799 ;;		_setThresholdEn
 14800 ;;		_setIntPinState
 14801 ;;		_setInterruptMode
 14802 ;;		_setMaskInterrupt
 14803 ;;		_setI2CAddress
 14804 ;;		_setI2CAddressEN
 14805 ;;		_setOscillatorError
 14806 ;; This function uses a non-reentrant model
 14807 ;;
 14808                           
 14809     0DE7                     _getError:	
 14810                           ;psect for function _getError
 14811                           
 14812     0DE7                     l13516:	
 14813                           ;incstack = 0
 14814 ;; hardware stack exceeded
 14815                           ; Regs used in _getError: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14816                           
 14817                           
 14818                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2316:     uint8_t stat
      +                          usReg = getDeviceStatus();
 14819     0DE7  319F  2778  318D   	fcall	_getDeviceStatus
 14820     0DEA  0140               	movlb	0	; select bank0
 14821     0DEB  00B5               	movwf	getError@statusReg
 14822     0DEC                     l13518:
 14823                           
 14824                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2317:     uint8_t unde
      +                          rvoltageError = bitRead(statusReg, 0);
 14825     0DEC  0835               	movf	getError@statusReg,w
 14826     0DED  00AF               	movwf	??_getError
 14827     0DEE  01B0               	clrf	??_getError+1
 14828     0DEF  082F               	movf	??_getError,w
 14829     0DF0  00F1               	movwf	bitRead@reg
 14830     0DF1  0830               	movf	??_getError+1,w
 14831     0DF2  00F2               	movwf	bitRead@reg+1
 14832     0DF3  01F3               	clrf	bitRead@position
 14833     0DF4  3194  2468  318D   	fcall	_bitRead
 14834     0DF7  0140               	movlb	0	; select bank0
 14835     0DF8  00B1               	movwf	getError@undervoltageError
 14836     0DF9                     l13520:
 14837                           
 14838                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2318:     uint8_t otpC
      +                          rcError = bitRead(statusReg, 1);
 14839     0DF9  0835               	movf	getError@statusReg,w
 14840     0DFA  00AF               	movwf	??_getError
 14841     0DFB  01B0               	clrf	??_getError+1
 14842     0DFC  082F               	movf	??_getError,w
 14843     0DFD  00F1               	movwf	bitRead@reg
 14844     0DFE  0830               	movf	??_getError+1,w
 14845     0DFF  00F2               	movwf	bitRead@reg+1
 14846     0E00  01F3               	clrf	bitRead@position
 14847     0E01  0AF3               	incf	bitRead@position,f
 14848     0E02  3194  2468  318D   	fcall	_bitRead
 14849     0E05  0140               	movlb	0	; select bank0
 14850     0E06  00B2               	movwf	getError@otpCrcError
 14851     0E07                     l13522:
 14852                           
 14853                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2319:     uint8_t intP
      +                          inError = bitRead(statusReg, 2);
 14854     0E07  0835               	movf	getError@statusReg,w
 14855     0E08  00AF               	movwf	??_getError
 14856     0E09  01B0               	clrf	??_getError+1
 14857     0E0A  082F               	movf	??_getError,w
 14858     0E0B  00F1               	movwf	bitRead@reg
 14859     0E0C  0830               	movf	??_getError+1,w
 14860     0E0D  00F2               	movwf	bitRead@reg+1
 14861     0E0E  3002               	movlw	2
 14862     0E0F  00F3               	movwf	bitRead@position
 14863     0E10  3194  2468  318D   	fcall	_bitRead
 14864     0E13  0140               	movlb	0	; select bank0
 14865     0E14  00B3               	movwf	getError@intPinError
 14866     0E15                     l13524:
 14867                           
 14868                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2320:     uint8_t osci
      +                          llatorError = bitRead(statusReg, 3);
 14869     0E15  0835               	movf	getError@statusReg,w
 14870     0E16  00AF               	movwf	??_getError
 14871     0E17  01B0               	clrf	??_getError+1
 14872     0E18  082F               	movf	??_getError,w
 14873     0E19  00F1               	movwf	bitRead@reg
 14874     0E1A  0830               	movf	??_getError+1,w
 14875     0E1B  00F2               	movwf	bitRead@reg+1
 14876     0E1C  3003               	movlw	3
 14877     0E1D  00F3               	movwf	bitRead@position
 14878     0E1E  3194  2468  318D   	fcall	_bitRead
 14879     0E21  0140               	movlb	0	; select bank0
 14880     0E22  00B4               	movwf	getError@oscillatorError
 14881     0E23                     l13526:
 14882                           
 14883                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2323:     if ((undervo
      +                          ltageError != 0) && (otpCrcError != 0) && (intPinError != 0) && (oscillatorError != 0)) 
      +                          {
 14884     0E23  0831               	movf	getError@undervoltageError,w
 14885     0E24  1903               	btfsc	3,2
 14886     0E25  2E27               	goto	u10461
 14887     0E26  2E28               	goto	u10460
 14888     0E27                     u10461:
 14889     0E27  2E39               	goto	l13540
 14890     0E28                     u10460:
 14891     0E28                     l13528:
 14892     0E28  0832               	movf	getError@otpCrcError,w
 14893     0E29  1903               	btfsc	3,2
 14894     0E2A  2E2C               	goto	u10471
 14895     0E2B  2E2D               	goto	u10470
 14896     0E2C                     u10471:
 14897     0E2C  2E39               	goto	l13540
 14898     0E2D                     u10470:
 14899     0E2D                     l13530:
 14900     0E2D  0833               	movf	getError@intPinError,w
 14901     0E2E  1903               	btfsc	3,2
 14902     0E2F  2E31               	goto	u10481
 14903     0E30  2E32               	goto	u10480
 14904     0E31                     u10481:
 14905     0E31  2E39               	goto	l13540
 14906     0E32                     u10480:
 14907     0E32                     l13532:
 14908     0E32  0834               	movf	getError@oscillatorError,w
 14909     0E33  1903               	btfsc	3,2
 14910     0E34  2E36               	goto	u10491
 14911     0E35  2E37               	goto	u10490
 14912     0E36                     u10491:
 14913     0E36  2E39               	goto	l13540
 14914     0E37                     u10490:
 14915     0E37                     l13534:
 14916                           
 14917                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2324:         return -
      +                          1;
 14918     0E37  30FF               	movlw	255
 14919     0E38  2E3A               	goto	l2640
 14920     0E39                     l13540:
 14921                           
 14922                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2326:         return 0
      +                          ;
 14923     0E39  3000               	movlw	0
 14924     0E3A                     l2640:
 14925     0E3A  0008               	return
 14926     0E3B                     __end_of_getError:
 14927                           
 14928                           	psect	text10
 14929     1F78                     __ptext10:	
 14930 ;; *************** function _getDeviceStatus *****************
 14931 ;; Defined at:
 14932 ;;		line 2300 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 14933 ;; Parameters:    Size  Location     Type
 14934 ;;		None
 14935 ;; Auto vars:     Size  Location     Type
 14936 ;;  deviceStatus    1   14[BANK0 ] unsigned char 
 14937 ;; Return value:  Size  Location     Type
 14938 ;;                  1    wreg      unsigned char 
 14939 ;; Registers used:
 14940 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14941 ;; Tracked objects:
 14942 ;;		On entry : 0/0
 14943 ;;		On exit  : 0/0
 14944 ;;		Unchanged: 0/0
 14945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14947 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14949 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14950 ;;Total ram usage:        1 bytes
 14951 ;; Hardware stack levels used: 1
 14952 ;; Hardware stack levels required when called: 15
 14953 ;; This function calls:
 14954 ;;		_readRegister
 14955 ;; This function is called by:
 14956 ;;		_getError
 14957 ;; This function uses a non-reentrant model
 14958 ;;
 14959                           
 14960     1F78                     _getDeviceStatus:	
 14961                           ;psect for function _getDeviceStatus
 14962                           
 14963     1F78                     l13404:	
 14964                           ;incstack = 0
 14965 ;; hardware stack exceeded
 14966                           ; Regs used in _getDeviceStatus: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14967                           
 14968                           
 14969                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2302:     uint8_t devi
      +                          ceStatusReg = readRegister(TMAG5273_REG_DEVICE_STATUS);
 14970     1F78  301C               	movlw	28
 14971     1F79  3190  2072  319F   	fcall	_readRegister
 14972     1F7C  0140               	movlb	0	; select bank0
 14973     1F7D  00AE               	movwf	getDeviceStatus@deviceStatusReg
 14974     1F7E                     l13406:
 14975                           
 14976                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2304:     return devic
      +                          eStatusReg;
 14977     1F7E  082E               	movf	getDeviceStatus@deviceStatusReg,w
 14978     1F7F                     l2636:
 14979     1F7F  0008               	return
 14980     1F80                     __end_of_getDeviceStatus:
 14981                           
 14982                           	psect	text11
 14983     0800                     __ptext11:	
 14984 ;; *************** function _bitWrite *****************
 14985 ;; Defined at:
 14986 ;;		line 2511 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 14987 ;; Parameters:    Size  Location     Type
 14988 ;;  reg             2    1[COMMON] PTR unsigned short 
 14989 ;;		 -> RAM(8192), 
 14990 ;;  position        1    3[COMMON] unsigned char 
 14991 ;;  value           1    4[COMMON] unsigned char 
 14992 ;; Auto vars:     Size  Location     Type
 14993 ;;  lsb             1    8[COMMON] unsigned char 
 14994 ;;  mask            1    7[COMMON] unsigned char 
 14995 ;;  msb             1    6[COMMON] unsigned char 
 14996 ;; Return value:  Size  Location     Type
 14997 ;;                  1    wreg      void 
 14998 ;; Registers used:
 14999 ;;		wreg, status,2, status,0
 15000 ;; Tracked objects:
 15001 ;;		On entry : 0/0
 15002 ;;		On exit  : 0/0
 15003 ;;		Unchanged: 0/0
 15004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15005 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15006 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15007 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15008 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15009 ;;Total ram usage:        8 bytes
 15010 ;; Hardware stack levels used: 1
 15011 ;; Hardware stack levels required when called: 4
 15012 ;; This function calls:
 15013 ;;		Nothing
 15014 ;; This function is called by:
 15015 ;;		_setOperatingMode
 15016 ;;		_setMagneticChannel
 15017 ;;		_setXYAxisRange
 15018 ;;		_setZAxisRange
 15019 ;;		_setTemperatureEn
 15020 ;;		_setCRCMode
 15021 ;;		_setMagTemp
 15022 ;;		_setConvAvg
 15023 ;;		_setReadMode
 15024 ;;		_setIntThreshold
 15025 ;;		_setLowPower
 15026 ;;		_setGlitchFilter
 15027 ;;		_setTriggerMode
 15028 ;;		_setSleeptime
 15029 ;;		_setMagDir
 15030 ;;		_setMagnitudeGain
 15031 ;;		_setAngleEn
 15032 ;;		_setInterruptResult
 15033 ;;		_setThresholdEn
 15034 ;;		_setIntPinState
 15035 ;;		_setMaskInterrupt
 15036 ;;		_setI2CAddressEN
 15037 ;;		_setOscillatorError
 15038 ;; This function uses a non-reentrant model
 15039 ;;
 15040                           
 15041     0800                     _bitWrite:	
 15042                           ;psect for function _bitWrite
 15043                           
 15044     0800                     l13554:	
 15045                           ;incstack = 0
 15046                           ; Regs used in _bitWrite: [wreg+status,2+status,0]
 15047                           
 15048     0800                     l13556:
 15049                           
 15050                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2513:     uint8_t lsb 
      +                          = (uint8_t) reg | 0xff00;
 15051     0800  0871               	movf	bitWrite@reg,w
 15052     0801  00F8               	movwf	bitWrite@lsb
 15053     0802                     l13558:
 15054                           
 15055                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2514:     uint8_t msb 
      +                          = (uint8_t) reg << 8;
 15056     0802  01F6               	clrf	bitWrite@msb
 15057                           
 15058                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2515:     if (position
      +                           > 7) {
 15059     0803  3008               	movlw	8
 15060     0804  0273               	subwf	bitWrite@position,w
 15061     0805  1C03               	skipc
 15062     0806  2808               	goto	u10501
 15063     0807  2809               	goto	u10500
 15064     0808                     u10501:
 15065     0808  2818               	goto	l13564
 15066     0809                     u10500:
 15067     0809                     l13560:
 15068                           
 15069                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2516:         mask = v
      +                          alue << position - 7;
 15070     0809  0874               	movf	bitWrite@value,w
 15071     080A  00F5               	movwf	??_bitWrite
 15072     080B  0873               	movf	bitWrite@position,w
 15073     080C  3EF9               	addlw	-7
 15074     080D  0A89               	incf	9,f
 15075     080E  2810               	goto	u10514
 15076     080F                     u10515:
 15077     080F  35F5               	lslf	??_bitWrite,f
 15078     0810                     u10514:
 15079     0810  0B89               	decfsz	9,f
 15080     0811  280F               	goto	u10515
 15081     0812  0875               	movf	??_bitWrite,w
 15082     0813  00F7               	movwf	bitWrite@mask
 15083                           
 15084                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2517:         msb = ms
      +                          b | mask;
 15085     0814  0876               	movf	bitWrite@msb,w
 15086     0815  0477               	iorwf	bitWrite@mask,w
 15087     0816  00F6               	movwf	bitWrite@msb
 15088     0817                     l13562:
 15089                           
 15090                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2519:     } else {
 15091     0817  2825               	goto	l2678
 15092     0818                     l13564:
 15093                           
 15094                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2521:             mask
      +                           = value << position;
 15095     0818  0874               	movf	bitWrite@value,w
 15096     0819  00F5               	movwf	??_bitWrite
 15097     081A  0A73               	incf	bitWrite@position,w
 15098     081B  281D               	goto	u10524
 15099     081C                     u10525:
 15100     081C  35F5               	lslf	??_bitWrite,f
 15101     081D                     u10524:
 15102     081D  0B89               	decfsz	9,f
 15103     081E  281C               	goto	u10525
 15104     081F  0875               	movf	??_bitWrite,w
 15105     0820  00F7               	movwf	bitWrite@mask
 15106                           
 15107                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2522:             lsb 
      +                          = lsb | mask;
 15108     0821  0878               	movf	bitWrite@lsb,w
 15109     0822  0477               	iorwf	bitWrite@mask,w
 15110     0823  00F8               	movwf	bitWrite@lsb
 15111     0824  2817               	goto	l13562
 15112     0825                     l2678:
 15113     0825  0008               	return
 15114     0826                     __end_of_bitWrite:
 15115                           
 15116                           	psect	text12
 15117     11C7                     __ptext12:	
 15118 ;; *************** function _isConnected *****************
 15119 ;; Defined at:
 15120 ;;		line 89 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15121 ;; Parameters:    Size  Location     Type
 15122 ;;		None
 15123 ;; Auto vars:     Size  Location     Type
 15124 ;;		None
 15125 ;; Return value:  Size  Location     Type
 15126 ;;                  1    wreg      char 
 15127 ;; Registers used:
 15128 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15129 ;; Tracked objects:
 15130 ;;		On entry : 0/0
 15131 ;;		On exit  : 0/0
 15132 ;;		Unchanged: 0/0
 15133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15138 ;;Total ram usage:        0 bytes
 15139 ;; Hardware stack levels used: 1
 15140 ;; Hardware stack levels required when called: 14
 15141 ;; This function calls:
 15142 ;;		_TMAG5273_GetManufacture
 15143 ;; This function is called by:
 15144 ;;		_begin
 15145 ;; This function uses a non-reentrant model
 15146 ;;
 15147                           
 15148     11C7                     _isConnected:	
 15149                           ;psect for function _isConnected
 15150                           
 15151     11C7                     l13830:	
 15152                           ;incstack = 0
 15153                           ; Regs used in _isConnected: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15154                           
 15155                           
 15156                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 97:     manufactureId 
      +                          = TMAG5273_GetManufacture();
 15157     11C7  3192  22DF  3191   	fcall	_TMAG5273_GetManufacture
 15158     11CA  0140               	movlb	0	; select bank0
 15159     11CB  082E               	movf	?_TMAG5273_GetManufacture+1,w
 15160     11CC  00CB               	movwf	_manufactureId+1
 15161     11CD  082D               	movf	?_TMAG5273_GetManufacture,w
 15162     11CE  00CA               	movwf	_manufactureId
 15163     11CF                     l13832:
 15164                           
 15165                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 99:     if (manufactur
      +                          eId != 0x5449) {
 15166     11CF  3049               	movlw	73
 15167     11D0  064A               	xorwf	_manufactureId,w
 15168     11D1  3054               	movlw	84
 15169     11D2  1903               	skipnz
 15170     11D3  064B               	xorwf	_manufactureId+1,w
 15171     11D4  1903               	btfsc	3,2
 15172     11D5  29D7               	goto	u10681
 15173     11D6  29D8               	goto	u10680
 15174     11D7                     u10681:
 15175     11D7  29DA               	goto	l13838
 15176     11D8                     u10680:
 15177     11D8                     l13834:
 15178                           
 15179                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 100:         return -1
      +                          ;
 15180     11D8  30FF               	movlw	255
 15181     11D9  29DB               	goto	l2127
 15182     11DA                     l13838:
 15183                           
 15184                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 103:     return 0;
 15185     11DA  3000               	movlw	0
 15186     11DB                     l2127:
 15187     11DB  0008               	return
 15188     11DC                     __end_of_isConnected:
 15189                           
 15190                           	psect	text13
 15191     12DF                     __ptext13:	
 15192 ;; *************** function _TMAG5273_GetManufacture *****************
 15193 ;; Defined at:
 15194 ;;		line 2528 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15195 ;; Parameters:    Size  Location     Type
 15196 ;;		None
 15197 ;; Auto vars:     Size  Location     Type
 15198 ;;  read            2   15[BANK0 ] unsigned short 
 15199 ;; Return value:  Size  Location     Type
 15200 ;;                  2   13[BANK0 ] unsigned short 
 15201 ;; Registers used:
 15202 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15203 ;; Tracked objects:
 15204 ;;		On entry : 0/0
 15205 ;;		On exit  : 0/0
 15206 ;;		Unchanged: 0/0
 15207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15208 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15209 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15211 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15212 ;;Total ram usage:        4 bytes
 15213 ;; Hardware stack levels used: 1
 15214 ;; Hardware stack levels required when called: 13
 15215 ;; This function calls:
 15216 ;;		_i2c_read2ByteRegister
 15217 ;;		_swap
 15218 ;; This function is called by:
 15219 ;;		_isConnected
 15220 ;; This function uses a non-reentrant model
 15221 ;;
 15222                           
 15223     12DF                     _TMAG5273_GetManufacture:	
 15224                           ;psect for function _TMAG5273_GetManufacture
 15225                           
 15226     12DF                     l13544:	
 15227                           ;incstack = 0
 15228                           ; Regs used in _TMAG5273_GetManufacture: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15229                           
 15230                           
 15231                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2530:     uint16_t rea
      +                          d= i2c_read2ByteRegister(0X22, TMAG5273_REG_MANUFACTURER_ID_LSB);
 15232     12DF  300E               	movlw	14
 15233     12E0  0140               	movlb	0	; select bank0
 15234     12E1  00A4               	movwf	i2c_read2ByteRegister@reg
 15235     12E2  3022               	movlw	34
 15236     12E3  318A  224C  3192   	fcall	_i2c_read2ByteRegister
 15237     12E6  0140               	movlb	0	; select bank0
 15238     12E7  0825               	movf	?_i2c_read2ByteRegister+1,w
 15239     12E8  00B0               	movwf	TMAG5273_GetManufacture@read+1
 15240     12E9  0824               	movf	?_i2c_read2ByteRegister,w
 15241     12EA  00AF               	movwf	TMAG5273_GetManufacture@read
 15242     12EB                     l13546:
 15243                           
 15244                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2531:     return swap(
      +                          read);
 15245     12EB  0830               	movf	TMAG5273_GetManufacture@read+1,w
 15246     12EC  00F2               	movwf	swap@reg+1
 15247     12ED  082F               	movf	TMAG5273_GetManufacture@read,w
 15248     12EE  00F1               	movwf	swap@reg
 15249     12EF  3191  219E  3192   	fcall	_swap
 15250     12F2  0872               	movf	?_swap+1,w
 15251     12F3  0140               	movlb	0	; select bank0
 15252     12F4  00AE               	movwf	?_TMAG5273_GetManufacture+1
 15253     12F5  0871               	movf	?_swap,w
 15254     12F6  00AD               	movwf	?_TMAG5273_GetManufacture
 15255     12F7                     l2681:
 15256     12F7  0008               	return
 15257     12F8                     __end_of_TMAG5273_GetManufacture:
 15258                           
 15259                           	psect	text14
 15260     119E                     __ptext14:	
 15261 ;; *************** function _swap *****************
 15262 ;; Defined at:
 15263 ;;		line 2534 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15264 ;; Parameters:    Size  Location     Type
 15265 ;;  reg             2    1[COMMON] unsigned short 
 15266 ;; Auto vars:     Size  Location     Type
 15267 ;;  lowerByte       1    9[COMMON] unsigned char 
 15268 ;;  upperByte       1    8[COMMON] unsigned char 
 15269 ;; Return value:  Size  Location     Type
 15270 ;;                  2    1[COMMON] unsigned short 
 15271 ;; Registers used:
 15272 ;;		wreg, status,2
 15273 ;; Tracked objects:
 15274 ;;		On entry : 0/0
 15275 ;;		On exit  : 0/0
 15276 ;;		Unchanged: 0/0
 15277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15278 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15279 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15280 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15281 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15282 ;;Total ram usage:        9 bytes
 15283 ;; Hardware stack levels used: 1
 15284 ;; Hardware stack levels required when called: 4
 15285 ;; This function calls:
 15286 ;;		Nothing
 15287 ;; This function is called by:
 15288 ;;		_TMAG5273_GetManufacture
 15289 ;; This function uses a non-reentrant model
 15290 ;;
 15291                           
 15292     119E                     _swap:	
 15293                           ;psect for function _swap
 15294                           
 15295     119E                     l13410:	
 15296                           ;incstack = 0
 15297                           ; Regs used in _swap: [wreg+status,2]
 15298                           
 15299                           
 15300                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2535:        uint8_t u
      +                          pperByte;;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2536:     uin
      +                          t8_t lowerByte;;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2538:  
      +                             upperByte = ((reg & (0xFF00)) >> 8);
 15301     119E  0872               	movf	swap@reg+1,w
 15302     119F  00F8               	movwf	swap@upperByte
 15303     11A0                     l13412:
 15304                           
 15305                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2539:     lowerByte = 
      +                          (uint8_t) reg;
 15306     11A0  0871               	movf	swap@reg,w
 15307     11A1  00F9               	movwf	swap@lowerByte
 15308     11A2                     l13414:
 15309                           
 15310                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2541:     reg = ((int1
      +                          6_t) (lowerByte << 8) | upperByte);
 15311     11A2  0878               	movf	swap@upperByte,w
 15312     11A3  00F3               	movwf	??_swap
 15313     11A4  01F4               	clrf	??_swap+1
 15314     11A5  0879               	movf	swap@lowerByte,w
 15315     11A6  00F5               	movwf	??_swap+2
 15316     11A7  01F6               	clrf	??_swap+3
 15317     11A8  0875               	movf	??_swap+2,w
 15318     11A9  00F6               	movwf	??_swap+3
 15319     11AA  01F5               	clrf	??_swap+2
 15320     11AB  0873               	movf	??_swap,w
 15321     11AC  0475               	iorwf	??_swap+2,w
 15322     11AD  00F1               	movwf	swap@reg
 15323     11AE  0874               	movf	??_swap+1,w
 15324     11AF  0476               	iorwf	??_swap+3,w
 15325     11B0  00F2               	movwf	swap@reg+1
 15326     11B1                     l13416:
 15327     11B1                     l2684:	
 15328                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2543:     return reg;
 15329                           
 15330     11B1  0008               	return
 15331     11B2                     __end_of_swap:
 15332                           
 15333                           	psect	text15
 15334     11B2                     __ptext15:	
 15335 ;; *************** function _getTemperatureEN *****************
 15336 ;; Defined at:
 15337 ;;		line 2033 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15338 ;; Parameters:    Size  Location     Type
 15339 ;;		None
 15340 ;; Auto vars:     Size  Location     Type
 15341 ;;  tempENreg       1   17[BANK0 ] unsigned char 
 15342 ;;  tempEN          1   16[BANK0 ] unsigned char 
 15343 ;; Return value:  Size  Location     Type
 15344 ;;                  1    wreg      unsigned char 
 15345 ;; Registers used:
 15346 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15347 ;; Tracked objects:
 15348 ;;		On entry : 0/0
 15349 ;;		On exit  : 0/0
 15350 ;;		Unchanged: 0/0
 15351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15353 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15354 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15355 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15356 ;;Total ram usage:        4 bytes
 15357 ;; Hardware stack levels used: 1
 15358 ;; Hardware stack levels required when called: 15
 15359 ;; This function calls:
 15360 ;;		_bitRead
 15361 ;;		_readRegister
 15362 ;; This function is called by:
 15363 ;;		_begin
 15364 ;; This function uses a non-reentrant model
 15365 ;;
 15366                           
 15367     11B2                     _getTemperatureEN:	
 15368                           ;psect for function _getTemperatureEN
 15369                           
 15370     11B2                     l14258:	
 15371                           ;incstack = 0
 15372 ;; hardware stack exceeded
 15373                           ; Regs used in _getTemperatureEN: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15374                           
 15375     11B2                     l14260:
 15376                           
 15377                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2035:     tempENreg = 
      +                          readRegister(TMAG5273_REG_T_CONFIG);
 15378     11B2  3007               	movlw	7
 15379     11B3  3190  2072  3191   	fcall	_readRegister
 15380     11B6  0140               	movlb	0	; select bank0
 15381     11B7  00B1               	movwf	getTemperatureEN@tempENreg
 15382     11B8                     l14262:
 15383                           
 15384                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2037:     uint8_t temp
      +                          EN = bitRead(tempENreg, 0);
 15385     11B8  0831               	movf	getTemperatureEN@tempENreg,w
 15386     11B9  00AE               	movwf	??_getTemperatureEN
 15387     11BA  01AF               	clrf	??_getTemperatureEN+1
 15388     11BB  082E               	movf	??_getTemperatureEN,w
 15389     11BC  00F1               	movwf	bitRead@reg
 15390     11BD  082F               	movf	??_getTemperatureEN+1,w
 15391     11BE  00F2               	movwf	bitRead@reg+1
 15392     11BF  01F3               	clrf	bitRead@position
 15393     11C0  3194  2468  3191   	fcall	_bitRead
 15394     11C3  0140               	movlb	0	; select bank0
 15395     11C4  00B0               	movwf	getTemperatureEN@tempEN
 15396     11C5                     l14264:
 15397                           
 15398                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2039:     return tempE
      +                          N;
 15399     11C5  0830               	movf	getTemperatureEN@tempEN,w
 15400     11C6                     l2580:
 15401     11C6  0008               	return
 15402     11C7                     __end_of_getTemperatureEN:
 15403                           
 15404                           	psect	text16
 15405     0D40                     __ptext16:	
 15406 ;; *************** function _getOperatingMode *****************
 15407 ;; Defined at:
 15408 ;;		line 1579 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15409 ;; Parameters:    Size  Location     Type
 15410 ;;		None
 15411 ;; Auto vars:     Size  Location     Type
 15412 ;;  opMode1         1   18[BANK0 ] unsigned char 
 15413 ;;  opMode0         1   17[BANK0 ] unsigned char 
 15414 ;;  opMode          1   16[BANK0 ] unsigned char 
 15415 ;; Return value:  Size  Location     Type
 15416 ;;                  1    wreg      unsigned char 
 15417 ;; Registers used:
 15418 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15419 ;; Tracked objects:
 15420 ;;		On entry : 0/0
 15421 ;;		On exit  : 0/0
 15422 ;;		Unchanged: 0/0
 15423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15425 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15426 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15427 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15428 ;;Total ram usage:        5 bytes
 15429 ;; Hardware stack levels used: 1
 15430 ;; Hardware stack levels required when called: 15
 15431 ;; This function calls:
 15432 ;;		_bitRead
 15433 ;;		_readRegister
 15434 ;; This function is called by:
 15435 ;;		_begin
 15436 ;; This function uses a non-reentrant model
 15437 ;;
 15438                           
 15439     0D40                     _getOperatingMode:	
 15440                           ;psect for function _getOperatingMode
 15441                           
 15442     0D40                     l14024:	
 15443                           ;incstack = 0
 15444 ;; hardware stack exceeded
 15445                           ; Regs used in _getOperatingMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15446                           
 15447     0D40                     l14026:
 15448                           
 15449                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1581:     opMode = rea
      +                          dRegister(TMAG5273_REG_DEVICE_CONFIG_2);
 15450     0D40  3001               	movlw	1
 15451     0D41  3190  2072  318D   	fcall	_readRegister
 15452     0D44  0140               	movlb	0	; select bank0
 15453     0D45  00B0               	movwf	getOperatingMode@opMode
 15454     0D46                     l14028:
 15455                           
 15456                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1583:     uint8_t opMo
      +                          de0 = bitRead(opMode, 0);
 15457     0D46  0830               	movf	getOperatingMode@opMode,w
 15458     0D47  00AE               	movwf	??_getOperatingMode
 15459     0D48  01AF               	clrf	??_getOperatingMode+1
 15460     0D49  082E               	movf	??_getOperatingMode,w
 15461     0D4A  00F1               	movwf	bitRead@reg
 15462     0D4B  082F               	movf	??_getOperatingMode+1,w
 15463     0D4C  00F2               	movwf	bitRead@reg+1
 15464     0D4D  01F3               	clrf	bitRead@position
 15465     0D4E  3194  2468  318D   	fcall	_bitRead
 15466     0D51  0140               	movlb	0	; select bank0
 15467     0D52  00B1               	movwf	getOperatingMode@opMode0
 15468     0D53                     l14030:
 15469                           
 15470                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1584:     uint8_t opMo
      +                          de1 = bitRead(opMode, 1);
 15471     0D53  0830               	movf	getOperatingMode@opMode,w
 15472     0D54  00AE               	movwf	??_getOperatingMode
 15473     0D55  01AF               	clrf	??_getOperatingMode+1
 15474     0D56  082E               	movf	??_getOperatingMode,w
 15475     0D57  00F1               	movwf	bitRead@reg
 15476     0D58  082F               	movf	??_getOperatingMode+1,w
 15477     0D59  00F2               	movwf	bitRead@reg+1
 15478     0D5A  01F3               	clrf	bitRead@position
 15479     0D5B  0AF3               	incf	bitRead@position,f
 15480     0D5C  3194  2468  318D   	fcall	_bitRead
 15481     0D5F  0140               	movlb	0	; select bank0
 15482     0D60  00B2               	movwf	getOperatingMode@opMode1
 15483     0D61                     l14032:
 15484                           
 15485                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1586:     if ((opMode0
      +                           == 0) && (opMode1 == 0))
 15486     0D61  0831               	movf	getOperatingMode@opMode0,w
 15487     0D62  1D03               	btfss	3,2
 15488     0D63  2D65               	goto	u10911
 15489     0D64  2D66               	goto	u10910
 15490     0D65                     u10911:
 15491     0D65  2D6D               	goto	l14042
 15492     0D66                     u10910:
 15493     0D66                     l14034:
 15494     0D66  0832               	movf	getOperatingMode@opMode1,w
 15495     0D67  1D03               	btfss	3,2
 15496     0D68  2D6A               	goto	u10921
 15497     0D69  2D6B               	goto	u10920
 15498     0D6A                     u10921:
 15499     0D6A  2D6D               	goto	l14042
 15500     0D6B                     u10920:
 15501     0D6B                     l14036:
 15502                           
 15503                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1587:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1589:         return 0;
 15504     0D6B  3000               	movlw	0
 15505     0D6C  2D92               	goto	l2452
 15506     0D6D                     l14042:
 15507     0D6D  0331               	decf	getOperatingMode@opMode0,w
 15508     0D6E  1D03               	btfss	3,2
 15509     0D6F  2D71               	goto	u10931
 15510     0D70  2D72               	goto	u10930
 15511     0D71                     u10931:
 15512     0D71  2D79               	goto	l14052
 15513     0D72                     u10930:
 15514     0D72                     l14044:
 15515     0D72  0832               	movf	getOperatingMode@opMode1,w
 15516     0D73  1D03               	btfss	3,2
 15517     0D74  2D76               	goto	u10941
 15518     0D75  2D77               	goto	u10940
 15519     0D76                     u10941:
 15520     0D76  2D79               	goto	l14052
 15521     0D77                     u10940:
 15522     0D77                     l14046:
 15523                           
 15524                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1591:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1593:         return 1;
 15525     0D77  3001               	movlw	1
 15526     0D78  2D92               	goto	l2452
 15527     0D79                     l14052:
 15528     0D79  0831               	movf	getOperatingMode@opMode0,w
 15529     0D7A  1D03               	btfss	3,2
 15530     0D7B  2D7D               	goto	u10951
 15531     0D7C  2D7E               	goto	u10950
 15532     0D7D                     u10951:
 15533     0D7D  2D85               	goto	l14062
 15534     0D7E                     u10950:
 15535     0D7E                     l14054:
 15536     0D7E  0332               	decf	getOperatingMode@opMode1,w
 15537     0D7F  1D03               	btfss	3,2
 15538     0D80  2D82               	goto	u10961
 15539     0D81  2D83               	goto	u10960
 15540     0D82                     u10961:
 15541     0D82  2D85               	goto	l14062
 15542     0D83                     u10960:
 15543     0D83                     l14056:
 15544                           
 15545                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1595:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1597:         return 2;
 15546     0D83  3002               	movlw	2
 15547     0D84  2D92               	goto	l2452
 15548     0D85                     l14062:
 15549     0D85  0331               	decf	getOperatingMode@opMode0,w
 15550     0D86  1D03               	btfss	3,2
 15551     0D87  2D89               	goto	u10971
 15552     0D88  2D8A               	goto	u10970
 15553     0D89                     u10971:
 15554     0D89  2D91               	goto	l2455
 15555     0D8A                     u10970:
 15556     0D8A                     l14064:
 15557     0D8A  0332               	decf	getOperatingMode@opMode1,w
 15558     0D8B  1D03               	btfss	3,2
 15559     0D8C  2D8E               	goto	u10981
 15560     0D8D  2D8F               	goto	u10980
 15561     0D8E                     u10981:
 15562     0D8E  2D91               	goto	l2455
 15563     0D8F                     u10980:
 15564     0D8F                     l14066:
 15565                           
 15566                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1599:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1601:         return 3;
 15567     0D8F  3003               	movlw	3
 15568     0D90  2D92               	goto	l2452
 15569     0D91                     l2455:
 15570     0D91  2D6B               	goto	l14036
 15571     0D92                     l2452:
 15572     0D92  0008               	return
 15573     0D93                     __end_of_getOperatingMode:
 15574                           
 15575                           	psect	text17
 15576     0377                     __ptext17:	
 15577 ;; *************** function _getMagneticChannel *****************
 15578 ;; Defined at:
 15579 ;;		line 1623 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15580 ;; Parameters:    Size  Location     Type
 15581 ;;		None
 15582 ;; Auto vars:     Size  Location     Type
 15583 ;;  magMode7        1   20[BANK0 ] unsigned char 
 15584 ;;  magMode6        1   19[BANK0 ] unsigned char 
 15585 ;;  magMode5        1   18[BANK0 ] unsigned char 
 15586 ;;  magMode4        1   17[BANK0 ] unsigned char 
 15587 ;;  magChannel      1   16[BANK0 ] unsigned char 
 15588 ;; Return value:  Size  Location     Type
 15589 ;;                  1    wreg      unsigned char 
 15590 ;; Registers used:
 15591 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15592 ;; Tracked objects:
 15593 ;;		On entry : 0/0
 15594 ;;		On exit  : 0/0
 15595 ;;		Unchanged: 0/0
 15596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15598 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15599 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15600 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15601 ;;Total ram usage:        7 bytes
 15602 ;; Hardware stack levels used: 1
 15603 ;; Hardware stack levels required when called: 15
 15604 ;; This function calls:
 15605 ;;		_bitRead
 15606 ;;		_readRegister
 15607 ;; This function is called by:
 15608 ;;		_begin
 15609 ;; This function uses a non-reentrant model
 15610 ;;
 15611                           
 15612     0377                     _getMagneticChannel:	
 15613                           ;psect for function _getMagneticChannel
 15614                           
 15615     0377                     l14074:	
 15616                           ;incstack = 0
 15617 ;; hardware stack exceeded
 15618                           ; Regs used in _getMagneticChannel: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15619                           
 15620     0377                     l14076:
 15621                           
 15622                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1625:     magChannel =
      +                           readRegister(TMAG5273_REG_SENSOR_CONFIG_1);
 15623     0377  3002               	movlw	2
 15624     0378  3190  2072  3183   	fcall	_readRegister
 15625     037B  0140               	movlb	0	; select bank0
 15626     037C  00B0               	movwf	getMagneticChannel@magChannel
 15627     037D                     l14078:
 15628                           
 15629                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1627:     uint8_t magM
      +                          ode4 = bitRead(magChannel, 4);
 15630     037D  0830               	movf	getMagneticChannel@magChannel,w
 15631     037E  00AE               	movwf	??_getMagneticChannel
 15632     037F  01AF               	clrf	??_getMagneticChannel+1
 15633     0380  082E               	movf	??_getMagneticChannel,w
 15634     0381  00F1               	movwf	bitRead@reg
 15635     0382  082F               	movf	??_getMagneticChannel+1,w
 15636     0383  00F2               	movwf	bitRead@reg+1
 15637     0384  3004               	movlw	4
 15638     0385  00F3               	movwf	bitRead@position
 15639     0386  3194  2468  3183   	fcall	_bitRead
 15640     0389  0140               	movlb	0	; select bank0
 15641     038A  00B1               	movwf	getMagneticChannel@magMode4
 15642     038B                     l14080:
 15643                           
 15644                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1628:     uint8_t magM
      +                          ode5 = bitRead(magChannel, 5);
 15645     038B  0830               	movf	getMagneticChannel@magChannel,w
 15646     038C  00AE               	movwf	??_getMagneticChannel
 15647     038D  01AF               	clrf	??_getMagneticChannel+1
 15648     038E  082E               	movf	??_getMagneticChannel,w
 15649     038F  00F1               	movwf	bitRead@reg
 15650     0390  082F               	movf	??_getMagneticChannel+1,w
 15651     0391  00F2               	movwf	bitRead@reg+1
 15652     0392  3005               	movlw	5
 15653     0393  00F3               	movwf	bitRead@position
 15654     0394  3194  2468  3183   	fcall	_bitRead
 15655     0397  0140               	movlb	0	; select bank0
 15656     0398  00B2               	movwf	getMagneticChannel@magMode5
 15657     0399                     l14082:
 15658                           
 15659                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1629:     uint8_t magM
      +                          ode6 = bitRead(magChannel, 6);
 15660     0399  0830               	movf	getMagneticChannel@magChannel,w
 15661     039A  00AE               	movwf	??_getMagneticChannel
 15662     039B  01AF               	clrf	??_getMagneticChannel+1
 15663     039C  082E               	movf	??_getMagneticChannel,w
 15664     039D  00F1               	movwf	bitRead@reg
 15665     039E  082F               	movf	??_getMagneticChannel+1,w
 15666     039F  00F2               	movwf	bitRead@reg+1
 15667     03A0  3006               	movlw	6
 15668     03A1  00F3               	movwf	bitRead@position
 15669     03A2  3194  2468  3183   	fcall	_bitRead
 15670     03A5  0140               	movlb	0	; select bank0
 15671     03A6  00B3               	movwf	getMagneticChannel@magMode6
 15672     03A7                     l14084:
 15673                           
 15674                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1630:     uint8_t magM
      +                          ode7 = bitRead(magChannel, 7);
 15675     03A7  0830               	movf	getMagneticChannel@magChannel,w
 15676     03A8  00AE               	movwf	??_getMagneticChannel
 15677     03A9  01AF               	clrf	??_getMagneticChannel+1
 15678     03AA  082E               	movf	??_getMagneticChannel,w
 15679     03AB  00F1               	movwf	bitRead@reg
 15680     03AC  082F               	movf	??_getMagneticChannel+1,w
 15681     03AD  00F2               	movwf	bitRead@reg+1
 15682     03AE  3007               	movlw	7
 15683     03AF  00F3               	movwf	bitRead@position
 15684     03B0  3194  2468  3183   	fcall	_bitRead
 15685     03B3  0140               	movlb	0	; select bank0
 15686     03B4  00B4               	movwf	getMagneticChannel@magMode7
 15687     03B5                     l14086:
 15688                           
 15689                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1632:     if ((magMode
      +                          4 == 0) && (magMode5 == 0) && (magMode6 == 0) && (magMode7 == 0))
 15690     03B5  0831               	movf	getMagneticChannel@magMode4,w
 15691     03B6  1D03               	btfss	3,2
 15692     03B7  2BB9               	goto	u10991
 15693     03B8  2BBA               	goto	u10990
 15694     03B9                     u10991:
 15695     03B9  2BCB               	goto	l14100
 15696     03BA                     u10990:
 15697     03BA                     l14088:
 15698     03BA  0832               	movf	getMagneticChannel@magMode5,w
 15699     03BB  1D03               	btfss	3,2
 15700     03BC  2BBE               	goto	u11001
 15701     03BD  2BBF               	goto	u11000
 15702     03BE                     u11001:
 15703     03BE  2BCB               	goto	l14100
 15704     03BF                     u11000:
 15705     03BF                     l14090:
 15706     03BF  0833               	movf	getMagneticChannel@magMode6,w
 15707     03C0  1D03               	btfss	3,2
 15708     03C1  2BC3               	goto	u11011
 15709     03C2  2BC4               	goto	u11010
 15710     03C3                     u11011:
 15711     03C3  2BCB               	goto	l14100
 15712     03C4                     u11010:
 15713     03C4                     l14092:
 15714     03C4  0834               	movf	getMagneticChannel@magMode7,w
 15715     03C5  1D03               	btfss	3,2
 15716     03C6  2BC8               	goto	u11021
 15717     03C7  2BC9               	goto	u11020
 15718     03C8                     u11021:
 15719     03C8  2BCB               	goto	l14100
 15720     03C9                     u11020:
 15721     03C9                     l14094:
 15722                           
 15723                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1633:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1634:         return 0;
 15724     03C9  3000               	movlw	0
 15725     03CA  2CBC               	goto	l2462
 15726     03CB                     l14100:
 15727     03CB  0331               	decf	getMagneticChannel@magMode4,w
 15728     03CC  1D03               	btfss	3,2
 15729     03CD  2BCF               	goto	u11031
 15730     03CE  2BD0               	goto	u11030
 15731     03CF                     u11031:
 15732     03CF  2BE1               	goto	l14114
 15733     03D0                     u11030:
 15734     03D0                     l14102:
 15735     03D0  0832               	movf	getMagneticChannel@magMode5,w
 15736     03D1  1D03               	btfss	3,2
 15737     03D2  2BD4               	goto	u11041
 15738     03D3  2BD5               	goto	u11040
 15739     03D4                     u11041:
 15740     03D4  2BE1               	goto	l14114
 15741     03D5                     u11040:
 15742     03D5                     l14104:
 15743     03D5  0833               	movf	getMagneticChannel@magMode6,w
 15744     03D6  1D03               	btfss	3,2
 15745     03D7  2BD9               	goto	u11051
 15746     03D8  2BDA               	goto	u11050
 15747     03D9                     u11051:
 15748     03D9  2BE1               	goto	l14114
 15749     03DA                     u11050:
 15750     03DA                     l14106:
 15751     03DA  0834               	movf	getMagneticChannel@magMode7,w
 15752     03DB  1D03               	btfss	3,2
 15753     03DC  2BDE               	goto	u11061
 15754     03DD  2BDF               	goto	u11060
 15755     03DE                     u11061:
 15756     03DE  2BE1               	goto	l14114
 15757     03DF                     u11060:
 15758     03DF                     l14108:
 15759                           
 15760                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1636:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1637:         return 1;
 15761     03DF  3001               	movlw	1
 15762     03E0  2CBC               	goto	l2462
 15763     03E1                     l14114:
 15764     03E1  0831               	movf	getMagneticChannel@magMode4,w
 15765     03E2  1D03               	btfss	3,2
 15766     03E3  2BE5               	goto	u11071
 15767     03E4  2BE6               	goto	u11070
 15768     03E5                     u11071:
 15769     03E5  2BF7               	goto	l14128
 15770     03E6                     u11070:
 15771     03E6                     l14116:
 15772     03E6  0332               	decf	getMagneticChannel@magMode5,w
 15773     03E7  1D03               	btfss	3,2
 15774     03E8  2BEA               	goto	u11081
 15775     03E9  2BEB               	goto	u11080
 15776     03EA                     u11081:
 15777     03EA  2BF7               	goto	l14128
 15778     03EB                     u11080:
 15779     03EB                     l14118:
 15780     03EB  0833               	movf	getMagneticChannel@magMode6,w
 15781     03EC  1D03               	btfss	3,2
 15782     03ED  2BEF               	goto	u11091
 15783     03EE  2BF0               	goto	u11090
 15784     03EF                     u11091:
 15785     03EF  2BF7               	goto	l14128
 15786     03F0                     u11090:
 15787     03F0                     l14120:
 15788     03F0  0834               	movf	getMagneticChannel@magMode7,w
 15789     03F1  1D03               	btfss	3,2
 15790     03F2  2BF4               	goto	u11101
 15791     03F3  2BF5               	goto	u11100
 15792     03F4                     u11101:
 15793     03F4  2BF7               	goto	l14128
 15794     03F5                     u11100:
 15795     03F5                     l14122:
 15796                           
 15797                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1639:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1640:         return 2;
 15798     03F5  3002               	movlw	2
 15799     03F6  2CBC               	goto	l2462
 15800     03F7                     l14128:
 15801     03F7  0331               	decf	getMagneticChannel@magMode4,w
 15802     03F8  1D03               	btfss	3,2
 15803     03F9  2BFB               	goto	u11111
 15804     03FA  2BFC               	goto	u11110
 15805     03FB                     u11111:
 15806     03FB  2C0D               	goto	l14142
 15807     03FC                     u11110:
 15808     03FC                     l14130:
 15809     03FC  0332               	decf	getMagneticChannel@magMode5,w
 15810     03FD  1D03               	btfss	3,2
 15811     03FE  2C00               	goto	u11121
 15812     03FF  2C01               	goto	u11120
 15813     0400                     u11121:
 15814     0400  2C0D               	goto	l14142
 15815     0401                     u11120:
 15816     0401                     l14132:
 15817     0401  0833               	movf	getMagneticChannel@magMode6,w
 15818     0402  1D03               	btfss	3,2
 15819     0403  2C05               	goto	u11131
 15820     0404  2C06               	goto	u11130
 15821     0405                     u11131:
 15822     0405  2C0D               	goto	l14142
 15823     0406                     u11130:
 15824     0406                     l14134:
 15825     0406  0834               	movf	getMagneticChannel@magMode7,w
 15826     0407  1D03               	btfss	3,2
 15827     0408  2C0A               	goto	u11141
 15828     0409  2C0B               	goto	u11140
 15829     040A                     u11141:
 15830     040A  2C0D               	goto	l14142
 15831     040B                     u11140:
 15832     040B                     l14136:
 15833                           
 15834                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1642:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1643:         return 3;
 15835     040B  3003               	movlw	3
 15836     040C  2CBC               	goto	l2462
 15837     040D                     l14142:
 15838     040D  0831               	movf	getMagneticChannel@magMode4,w
 15839     040E  1D03               	btfss	3,2
 15840     040F  2C11               	goto	u11151
 15841     0410  2C12               	goto	u11150
 15842     0411                     u11151:
 15843     0411  2C23               	goto	l14156
 15844     0412                     u11150:
 15845     0412                     l14144:
 15846     0412  0832               	movf	getMagneticChannel@magMode5,w
 15847     0413  1D03               	btfss	3,2
 15848     0414  2C16               	goto	u11161
 15849     0415  2C17               	goto	u11160
 15850     0416                     u11161:
 15851     0416  2C23               	goto	l14156
 15852     0417                     u11160:
 15853     0417                     l14146:
 15854     0417  0333               	decf	getMagneticChannel@magMode6,w
 15855     0418  1D03               	btfss	3,2
 15856     0419  2C1B               	goto	u11171
 15857     041A  2C1C               	goto	u11170
 15858     041B                     u11171:
 15859     041B  2C23               	goto	l14156
 15860     041C                     u11170:
 15861     041C                     l14148:
 15862     041C  0834               	movf	getMagneticChannel@magMode7,w
 15863     041D  1D03               	btfss	3,2
 15864     041E  2C20               	goto	u11181
 15865     041F  2C21               	goto	u11180
 15866     0420                     u11181:
 15867     0420  2C23               	goto	l14156
 15868     0421                     u11180:
 15869     0421                     l14150:
 15870                           
 15871                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1645:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1646:         return 4;
 15872     0421  3004               	movlw	4
 15873     0422  2CBC               	goto	l2462
 15874     0423                     l14156:
 15875     0423  0331               	decf	getMagneticChannel@magMode4,w
 15876     0424  1D03               	btfss	3,2
 15877     0425  2C27               	goto	u11191
 15878     0426  2C28               	goto	u11190
 15879     0427                     u11191:
 15880     0427  2C39               	goto	l14170
 15881     0428                     u11190:
 15882     0428                     l14158:
 15883     0428  0832               	movf	getMagneticChannel@magMode5,w
 15884     0429  1D03               	btfss	3,2
 15885     042A  2C2C               	goto	u11201
 15886     042B  2C2D               	goto	u11200
 15887     042C                     u11201:
 15888     042C  2C39               	goto	l14170
 15889     042D                     u11200:
 15890     042D                     l14160:
 15891     042D  0333               	decf	getMagneticChannel@magMode6,w
 15892     042E  1D03               	btfss	3,2
 15893     042F  2C31               	goto	u11211
 15894     0430  2C32               	goto	u11210
 15895     0431                     u11211:
 15896     0431  2C39               	goto	l14170
 15897     0432                     u11210:
 15898     0432                     l14162:
 15899     0432  0834               	movf	getMagneticChannel@magMode7,w
 15900     0433  1D03               	btfss	3,2
 15901     0434  2C36               	goto	u11221
 15902     0435  2C37               	goto	u11220
 15903     0436                     u11221:
 15904     0436  2C39               	goto	l14170
 15905     0437                     u11220:
 15906     0437                     l14164:
 15907                           
 15908                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1648:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1649:         return 5;
 15909     0437  3005               	movlw	5
 15910     0438  2CBC               	goto	l2462
 15911     0439                     l14170:
 15912     0439  0831               	movf	getMagneticChannel@magMode4,w
 15913     043A  1D03               	btfss	3,2
 15914     043B  2C3D               	goto	u11231
 15915     043C  2C3E               	goto	u11230
 15916     043D                     u11231:
 15917     043D  2C4F               	goto	l14184
 15918     043E                     u11230:
 15919     043E                     l14172:
 15920     043E  0332               	decf	getMagneticChannel@magMode5,w
 15921     043F  1D03               	btfss	3,2
 15922     0440  2C42               	goto	u11241
 15923     0441  2C43               	goto	u11240
 15924     0442                     u11241:
 15925     0442  2C4F               	goto	l14184
 15926     0443                     u11240:
 15927     0443                     l14174:
 15928     0443  0333               	decf	getMagneticChannel@magMode6,w
 15929     0444  1D03               	btfss	3,2
 15930     0445  2C47               	goto	u11251
 15931     0446  2C48               	goto	u11250
 15932     0447                     u11251:
 15933     0447  2C4F               	goto	l14184
 15934     0448                     u11250:
 15935     0448                     l14176:
 15936     0448  0834               	movf	getMagneticChannel@magMode7,w
 15937     0449  1D03               	btfss	3,2
 15938     044A  2C4C               	goto	u11261
 15939     044B  2C4D               	goto	u11260
 15940     044C                     u11261:
 15941     044C  2C4F               	goto	l14184
 15942     044D                     u11260:
 15943     044D                     l14178:
 15944                           
 15945                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1651:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1652:         return 6;
 15946     044D  3006               	movlw	6
 15947     044E  2CBC               	goto	l2462
 15948     044F                     l14184:
 15949     044F  0331               	decf	getMagneticChannel@magMode4,w
 15950     0450  1D03               	btfss	3,2
 15951     0451  2C53               	goto	u11271
 15952     0452  2C54               	goto	u11270
 15953     0453                     u11271:
 15954     0453  2C65               	goto	l14198
 15955     0454                     u11270:
 15956     0454                     l14186:
 15957     0454  0332               	decf	getMagneticChannel@magMode5,w
 15958     0455  1D03               	btfss	3,2
 15959     0456  2C58               	goto	u11281
 15960     0457  2C59               	goto	u11280
 15961     0458                     u11281:
 15962     0458  2C65               	goto	l14198
 15963     0459                     u11280:
 15964     0459                     l14188:
 15965     0459  0333               	decf	getMagneticChannel@magMode6,w
 15966     045A  1D03               	btfss	3,2
 15967     045B  2C5D               	goto	u11291
 15968     045C  2C5E               	goto	u11290
 15969     045D                     u11291:
 15970     045D  2C65               	goto	l14198
 15971     045E                     u11290:
 15972     045E                     l14190:
 15973     045E  0834               	movf	getMagneticChannel@magMode7,w
 15974     045F  1D03               	btfss	3,2
 15975     0460  2C62               	goto	u11301
 15976     0461  2C63               	goto	u11300
 15977     0462                     u11301:
 15978     0462  2C65               	goto	l14198
 15979     0463                     u11300:
 15980     0463                     l14192:
 15981                           
 15982                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1654:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1655:         return 7;
 15983     0463  3007               	movlw	7
 15984     0464  2CBC               	goto	l2462
 15985     0465                     l14198:
 15986     0465  0831               	movf	getMagneticChannel@magMode4,w
 15987     0466  1D03               	btfss	3,2
 15988     0467  2C69               	goto	u11311
 15989     0468  2C6A               	goto	u11310
 15990     0469                     u11311:
 15991     0469  2C7B               	goto	l14212
 15992     046A                     u11310:
 15993     046A                     l14200:
 15994     046A  0832               	movf	getMagneticChannel@magMode5,w
 15995     046B  1D03               	btfss	3,2
 15996     046C  2C6E               	goto	u11321
 15997     046D  2C6F               	goto	u11320
 15998     046E                     u11321:
 15999     046E  2C7B               	goto	l14212
 16000     046F                     u11320:
 16001     046F                     l14202:
 16002     046F  0833               	movf	getMagneticChannel@magMode6,w
 16003     0470  1D03               	btfss	3,2
 16004     0471  2C73               	goto	u11331
 16005     0472  2C74               	goto	u11330
 16006     0473                     u11331:
 16007     0473  2C7B               	goto	l14212
 16008     0474                     u11330:
 16009     0474                     l14204:
 16010     0474  0334               	decf	getMagneticChannel@magMode7,w
 16011     0475  1D03               	btfss	3,2
 16012     0476  2C78               	goto	u11341
 16013     0477  2C79               	goto	u11340
 16014     0478                     u11341:
 16015     0478  2C7B               	goto	l14212
 16016     0479                     u11340:
 16017     0479                     l14206:
 16018                           
 16019                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1657:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1658:         return 8;
 16020     0479  3008               	movlw	8
 16021     047A  2CBC               	goto	l2462
 16022     047B                     l14212:
 16023     047B  0331               	decf	getMagneticChannel@magMode4,w
 16024     047C  1D03               	btfss	3,2
 16025     047D  2C7F               	goto	u11351
 16026     047E  2C80               	goto	u11350
 16027     047F                     u11351:
 16028     047F  2C91               	goto	l14226
 16029     0480                     u11350:
 16030     0480                     l14214:
 16031     0480  0832               	movf	getMagneticChannel@magMode5,w
 16032     0481  1D03               	btfss	3,2
 16033     0482  2C84               	goto	u11361
 16034     0483  2C85               	goto	u11360
 16035     0484                     u11361:
 16036     0484  2C91               	goto	l14226
 16037     0485                     u11360:
 16038     0485                     l14216:
 16039     0485  0833               	movf	getMagneticChannel@magMode6,w
 16040     0486  1D03               	btfss	3,2
 16041     0487  2C89               	goto	u11371
 16042     0488  2C8A               	goto	u11370
 16043     0489                     u11371:
 16044     0489  2C91               	goto	l14226
 16045     048A                     u11370:
 16046     048A                     l14218:
 16047     048A  0334               	decf	getMagneticChannel@magMode7,w
 16048     048B  1D03               	btfss	3,2
 16049     048C  2C8E               	goto	u11381
 16050     048D  2C8F               	goto	u11380
 16051     048E                     u11381:
 16052     048E  2C91               	goto	l14226
 16053     048F                     u11380:
 16054     048F                     l14220:
 16055                           
 16056                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1660:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1661:         return 9;
 16057     048F  3009               	movlw	9
 16058     0490  2CBC               	goto	l2462
 16059     0491                     l14226:
 16060     0491  0831               	movf	getMagneticChannel@magMode4,w
 16061     0492  1D03               	btfss	3,2
 16062     0493  2C95               	goto	u11391
 16063     0494  2C96               	goto	u11390
 16064     0495                     u11391:
 16065     0495  2CA7               	goto	l14240
 16066     0496                     u11390:
 16067     0496                     l14228:
 16068     0496  0332               	decf	getMagneticChannel@magMode5,w
 16069     0497  1D03               	btfss	3,2
 16070     0498  2C9A               	goto	u11401
 16071     0499  2C9B               	goto	u11400
 16072     049A                     u11401:
 16073     049A  2CA7               	goto	l14240
 16074     049B                     u11400:
 16075     049B                     l14230:
 16076     049B  0833               	movf	getMagneticChannel@magMode6,w
 16077     049C  1D03               	btfss	3,2
 16078     049D  2C9F               	goto	u11411
 16079     049E  2CA0               	goto	u11410
 16080     049F                     u11411:
 16081     049F  2CA7               	goto	l14240
 16082     04A0                     u11410:
 16083     04A0                     l14232:
 16084     04A0  0334               	decf	getMagneticChannel@magMode7,w
 16085     04A1  1D03               	btfss	3,2
 16086     04A2  2CA4               	goto	u11421
 16087     04A3  2CA5               	goto	u11420
 16088     04A4                     u11421:
 16089     04A4  2CA7               	goto	l14240
 16090     04A5                     u11420:
 16091     04A5                     l14234:
 16092                           
 16093                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1663:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1664:         return 10;
 16094     04A5  300A               	movlw	10
 16095     04A6  2CBC               	goto	l2462
 16096     04A7                     l14240:
 16097     04A7  0331               	decf	getMagneticChannel@magMode4,w
 16098     04A8  1D03               	btfss	3,2
 16099     04A9  2CAB               	goto	u11431
 16100     04AA  2CAC               	goto	u11430
 16101     04AB                     u11431:
 16102     04AB  2BC9               	goto	l14094
 16103     04AC                     u11430:
 16104     04AC                     l14242:
 16105     04AC  0332               	decf	getMagneticChannel@magMode5,w
 16106     04AD  1D03               	btfss	3,2
 16107     04AE  2CB0               	goto	u11441
 16108     04AF  2CB1               	goto	u11440
 16109     04B0                     u11441:
 16110     04B0  2BC9               	goto	l14094
 16111     04B1                     u11440:
 16112     04B1                     l14244:
 16113     04B1  0833               	movf	getMagneticChannel@magMode6,w
 16114     04B2  1D03               	btfss	3,2
 16115     04B3  2CB5               	goto	u11451
 16116     04B4  2CB6               	goto	u11450
 16117     04B5                     u11451:
 16118     04B5  2BC9               	goto	l14094
 16119     04B6                     u11450:
 16120     04B6                     l14246:
 16121     04B6  0334               	decf	getMagneticChannel@magMode7,w
 16122     04B7  1D03               	btfss	3,2
 16123     04B8  2CBA               	goto	u11461
 16124     04B9  2CBB               	goto	u11460
 16125     04BA                     u11461:
 16126     04BA  2BC9               	goto	l14094
 16127     04BB                     u11460:
 16128     04BB                     l14248:
 16129                           
 16130                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1666:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1667:         return 11;
 16131     04BB  300B               	movlw	11
 16132     04BC                     l2462:
 16133     04BC  0008               	return
 16134     04BD                     __end_of_getMagneticChannel:
 16135                           
 16136                           	psect	text18
 16137     1208                     __ptext18:	
 16138 ;; *************** function _getLowPower *****************
 16139 ;; Defined at:
 16140 ;;		line 1528 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 16141 ;; Parameters:    Size  Location     Type
 16142 ;;		None
 16143 ;; Auto vars:     Size  Location     Type
 16144 ;;  lowPowerMode    1   17[BANK0 ] unsigned char 
 16145 ;;  lowPowerMode    1   16[BANK0 ] unsigned char 
 16146 ;; Return value:  Size  Location     Type
 16147 ;;                  1    wreg      unsigned char 
 16148 ;; Registers used:
 16149 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16150 ;; Tracked objects:
 16151 ;;		On entry : 0/0
 16152 ;;		On exit  : 0/0
 16153 ;;		Unchanged: 0/0
 16154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16156 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16157 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16158 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16159 ;;Total ram usage:        4 bytes
 16160 ;; Hardware stack levels used: 1
 16161 ;; Hardware stack levels required when called: 15
 16162 ;; This function calls:
 16163 ;;		_bitRead
 16164 ;;		_readRegister
 16165 ;; This function is called by:
 16166 ;;		_begin
 16167 ;; This function uses a non-reentrant model
 16168 ;;
 16169                           
 16170     1208                     _getLowPower:	
 16171                           ;psect for function _getLowPower
 16172                           
 16173     1208                     l14014:	
 16174                           ;incstack = 0
 16175 ;; hardware stack exceeded
 16176                           ; Regs used in _getLowPower: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16177                           
 16178     1208                     l14016:
 16179                           
 16180                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1530:     lowPowerMode
      +                           = readRegister(TMAG5273_REG_DEVICE_CONFIG_2);
 16181     1208  3001               	movlw	1
 16182     1209  3190  2072  3192   	fcall	_readRegister
 16183     120C  0140               	movlb	0	; select bank0
 16184     120D  00B1               	movwf	getLowPower@lowPowerMode
 16185     120E                     l14018:
 16186                           
 16187                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1532:     uint8_t lowP
      +                          owerModeBit = bitRead(lowPowerMode, 4);
 16188     120E  0831               	movf	getLowPower@lowPowerMode,w
 16189     120F  00AE               	movwf	??_getLowPower
 16190     1210  01AF               	clrf	??_getLowPower+1
 16191     1211  082E               	movf	??_getLowPower,w
 16192     1212  00F1               	movwf	bitRead@reg
 16193     1213  082F               	movf	??_getLowPower+1,w
 16194     1214  00F2               	movwf	bitRead@reg+1
 16195     1215  3004               	movlw	4
 16196     1216  00F3               	movwf	bitRead@position
 16197     1217  3194  2468  3192   	fcall	_bitRead
 16198     121A  0140               	movlb	0	; select bank0
 16199     121B  00B0               	movwf	getLowPower@lowPowerModeBit
 16200     121C                     l14020:
 16201                           
 16202                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1534:     return lowPo
      +                          werModeBit;
 16203     121C  0830               	movf	getLowPower@lowPowerModeBit,w
 16204     121D                     l2442:
 16205     121D  0008               	return
 16206     121E                     __end_of_getLowPower:
 16207                           
 16208                           	psect	text19
 16209     0D93                     __ptext19:	
 16210 ;; *************** function _getAngleEn *****************
 16211 ;; Defined at:
 16212 ;;		line 1884 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 16213 ;; Parameters:    Size  Location     Type
 16214 ;;		None
 16215 ;; Auto vars:     Size  Location     Type
 16216 ;;  angleDir3       1   18[BANK0 ] unsigned char 
 16217 ;;  angleDir2       1   17[BANK0 ] unsigned char 
 16218 ;;  angleReg        1   16[BANK0 ] unsigned char 
 16219 ;; Return value:  Size  Location     Type
 16220 ;;                  1    wreg      unsigned char 
 16221 ;; Registers used:
 16222 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16223 ;; Tracked objects:
 16224 ;;		On entry : 0/0
 16225 ;;		On exit  : 0/0
 16226 ;;		Unchanged: 0/0
 16227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16229 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16230 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16231 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16232 ;;Total ram usage:        5 bytes
 16233 ;; Hardware stack levels used: 1
 16234 ;; Hardware stack levels required when called: 15
 16235 ;; This function calls:
 16236 ;;		_bitRead
 16237 ;;		_readRegister
 16238 ;; This function is called by:
 16239 ;;		_begin
 16240 ;;		_setMagneticOffset2
 16241 ;;		_getMagneticOffset2
 16242 ;; This function uses a non-reentrant model
 16243 ;;
 16244                           
 16245     0D93                     _getAngleEn:	
 16246                           ;psect for function _getAngleEn
 16247                           
 16248     0D93                     l14268:	
 16249                           ;incstack = 0
 16250 ;; hardware stack exceeded
 16251                           ; Regs used in _getAngleEn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16252                           
 16253     0D93                     l14270:
 16254                           
 16255                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1886:     angleReg = r
      +                          eadRegister(TMAG5273_REG_SENSOR_CONFIG_2);
 16256     0D93  3003               	movlw	3
 16257     0D94  3190  2072  318D   	fcall	_readRegister
 16258     0D97  0140               	movlb	0	; select bank0
 16259     0D98  00B0               	movwf	getAngleEn@angleReg
 16260     0D99                     l14272:
 16261                           
 16262                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1888:     uint8_t angl
      +                          eDir2 = bitRead(angleReg, 2);
 16263     0D99  0830               	movf	getAngleEn@angleReg,w
 16264     0D9A  00AE               	movwf	??_getAngleEn
 16265     0D9B  01AF               	clrf	??_getAngleEn+1
 16266     0D9C  082E               	movf	??_getAngleEn,w
 16267     0D9D  00F1               	movwf	bitRead@reg
 16268     0D9E  082F               	movf	??_getAngleEn+1,w
 16269     0D9F  00F2               	movwf	bitRead@reg+1
 16270     0DA0  3002               	movlw	2
 16271     0DA1  00F3               	movwf	bitRead@position
 16272     0DA2  3194  2468  318D   	fcall	_bitRead
 16273     0DA5  0140               	movlb	0	; select bank0
 16274     0DA6  00B1               	movwf	getAngleEn@angleDir2
 16275     0DA7                     l14274:
 16276                           
 16277                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1889:     uint8_t angl
      +                          eDir3 = bitRead(angleReg, 3);
 16278     0DA7  0830               	movf	getAngleEn@angleReg,w
 16279     0DA8  00AE               	movwf	??_getAngleEn
 16280     0DA9  01AF               	clrf	??_getAngleEn+1
 16281     0DAA  082E               	movf	??_getAngleEn,w
 16282     0DAB  00F1               	movwf	bitRead@reg
 16283     0DAC  082F               	movf	??_getAngleEn+1,w
 16284     0DAD  00F2               	movwf	bitRead@reg+1
 16285     0DAE  3003               	movlw	3
 16286     0DAF  00F3               	movwf	bitRead@position
 16287     0DB0  3194  2468  318D   	fcall	_bitRead
 16288     0DB3  0140               	movlb	0	; select bank0
 16289     0DB4  00B2               	movwf	getAngleEn@angleDir3
 16290     0DB5                     l14276:
 16291                           
 16292                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1891:     if ((angleDi
      +                          r2 == 0) && (angleDir3 == 0))
 16293     0DB5  0831               	movf	getAngleEn@angleDir2,w
 16294     0DB6  1D03               	btfss	3,2
 16295     0DB7  2DB9               	goto	u11471
 16296     0DB8  2DBA               	goto	u11470
 16297     0DB9                     u11471:
 16298     0DB9  2DC1               	goto	l14286
 16299     0DBA                     u11470:
 16300     0DBA                     l14278:
 16301     0DBA  0832               	movf	getAngleEn@angleDir3,w
 16302     0DBB  1D03               	btfss	3,2
 16303     0DBC  2DBE               	goto	u11481
 16304     0DBD  2DBF               	goto	u11480
 16305     0DBE                     u11481:
 16306     0DBE  2DC1               	goto	l14286
 16307     0DBF                     u11480:
 16308     0DBF                     l14280:
 16309                           
 16310                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1892:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1894:         return 0;
 16311     0DBF  3000               	movlw	0
 16312     0DC0  2DE6               	goto	l2547
 16313     0DC1                     l14286:
 16314     0DC1  0331               	decf	getAngleEn@angleDir2,w
 16315     0DC2  1D03               	btfss	3,2
 16316     0DC3  2DC5               	goto	u11491
 16317     0DC4  2DC6               	goto	u11490
 16318     0DC5                     u11491:
 16319     0DC5  2DCD               	goto	l14296
 16320     0DC6                     u11490:
 16321     0DC6                     l14288:
 16322     0DC6  0832               	movf	getAngleEn@angleDir3,w
 16323     0DC7  1D03               	btfss	3,2
 16324     0DC8  2DCA               	goto	u11501
 16325     0DC9  2DCB               	goto	u11500
 16326     0DCA                     u11501:
 16327     0DCA  2DCD               	goto	l14296
 16328     0DCB                     u11500:
 16329     0DCB                     l14290:
 16330                           
 16331                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1896:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1898:         return 1;
 16332     0DCB  3001               	movlw	1
 16333     0DCC  2DE6               	goto	l2547
 16334     0DCD                     l14296:
 16335     0DCD  0831               	movf	getAngleEn@angleDir2,w
 16336     0DCE  1D03               	btfss	3,2
 16337     0DCF  2DD1               	goto	u11511
 16338     0DD0  2DD2               	goto	u11510
 16339     0DD1                     u11511:
 16340     0DD1  2DD9               	goto	l14306
 16341     0DD2                     u11510:
 16342     0DD2                     l14298:
 16343     0DD2  0332               	decf	getAngleEn@angleDir3,w
 16344     0DD3  1D03               	btfss	3,2
 16345     0DD4  2DD6               	goto	u11521
 16346     0DD5  2DD7               	goto	u11520
 16347     0DD6                     u11521:
 16348     0DD6  2DD9               	goto	l14306
 16349     0DD7                     u11520:
 16350     0DD7                     l14300:
 16351                           
 16352                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1900:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1902:         return 2;
 16353     0DD7  3002               	movlw	2
 16354     0DD8  2DE6               	goto	l2547
 16355     0DD9                     l14306:
 16356     0DD9  0331               	decf	getAngleEn@angleDir2,w
 16357     0DDA  1D03               	btfss	3,2
 16358     0DDB  2DDD               	goto	u11531
 16359     0DDC  2DDE               	goto	u11530
 16360     0DDD                     u11531:
 16361     0DDD  2DE5               	goto	l2550
 16362     0DDE                     u11530:
 16363     0DDE                     l14308:
 16364     0DDE  0332               	decf	getAngleEn@angleDir3,w
 16365     0DDF  1D03               	btfss	3,2
 16366     0DE0  2DE2               	goto	u11541
 16367     0DE1  2DE3               	goto	u11540
 16368     0DE2                     u11541:
 16369     0DE2  2DE5               	goto	l2550
 16370     0DE3                     u11540:
 16371     0DE3                     l14310:
 16372                           
 16373                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1904:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1906:         return 3;
 16374     0DE3  3003               	movlw	3
 16375     0DE4  2DE6               	goto	l2547
 16376     0DE5                     l2550:
 16377     0DE5  2DBF               	goto	l14280
 16378     0DE6                     l2547:
 16379     0DE6  0008               	return
 16380     0DE7                     __end_of_getAngleEn:
 16381                           
 16382                           	psect	text20
 16383     1468                     __ptext20:	
 16384 ;; *************** function _bitRead *****************
 16385 ;; Defined at:
 16386 ;;		line 2504 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 16387 ;; Parameters:    Size  Location     Type
 16388 ;;  reg             2    1[COMMON] unsigned short 
 16389 ;;  position        1    3[COMMON] unsigned char 
 16390 ;; Auto vars:     Size  Location     Type
 16391 ;;		None
 16392 ;; Return value:  Size  Location     Type
 16393 ;;                  1    wreg      unsigned char 
 16394 ;; Registers used:
 16395 ;;		wreg, status,2, status,0
 16396 ;; Tracked objects:
 16397 ;;		On entry : 0/0
 16398 ;;		On exit  : 0/0
 16399 ;;		Unchanged: 0/0
 16400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16401 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16403 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16404 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16405 ;;Total ram usage:        9 bytes
 16406 ;; Hardware stack levels used: 1
 16407 ;; Hardware stack levels required when called: 4
 16408 ;; This function calls:
 16409 ;;		Nothing
 16410 ;; This function is called by:
 16411 ;;		_getLowPower
 16412 ;;		_getOperatingMode
 16413 ;;		_getMagneticChannel
 16414 ;;		_getAngleEn
 16415 ;;		_getTemperatureEN
 16416 ;;		_getError
 16417 ;;		_getCRCMode
 16418 ;;		_getMagTemp
 16419 ;;		_getConvAvg
 16420 ;;		_getReadMode
 16421 ;;		_getIntThreshold
 16422 ;;		_getGlitchFiler
 16423 ;;		_getTriggerMode
 16424 ;;		_getSleeptime
 16425 ;;		_getMagDir
 16426 ;;		_getMagnitudeChannelSelect
 16427 ;;		_getXYAxisRange
 16428 ;;		_getZAxisRange
 16429 ;;		_getInterruptResult
 16430 ;;		_getThresholdEn
 16431 ;;		_getIntPinState
 16432 ;;		_getInterruptMode
 16433 ;;		_getMaskInt
 16434 ;;		_getPOR
 16435 ;;		_getDiagStatus
 16436 ;;		_getResultStatus
 16437 ;;		_getDeviceID
 16438 ;;		_getInterruptPinStatus
 16439 ;; This function uses a non-reentrant model
 16440 ;;
 16441                           
 16442     1468                     _bitRead:	
 16443                           ;psect for function _bitRead
 16444                           
 16445     1468                     l13394:	
 16446                           ;incstack = 0
 16447                           ; Regs used in _bitRead: [wreg+status,2+status,0]
 16448                           
 16449                           
 16450                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2505:     if (reg & (1
      +                           << position) == 0) {
 16451     1468  3001               	movlw	1
 16452     1469  00F4               	movwf	??_bitRead
 16453     146A  3000               	movlw	0
 16454     146B  00F5               	movwf	??_bitRead+1
 16455     146C  0A73               	incf	bitRead@position,w
 16456     146D  2C70               	goto	u10334
 16457     146E                     u10335:
 16458     146E  35F4               	lslf	??_bitRead,f
 16459     146F  0DF5               	rlf	??_bitRead+1,f
 16460     1470                     u10334:
 16461     1470  0B89               	decfsz	9,f
 16462     1471  2C6E               	goto	u10335
 16463     1472  0874               	movf	??_bitRead,w
 16464     1473  0475               	iorwf	??_bitRead+1,w
 16465     1474  1903               	btfsc	3,2
 16466     1475  2C77               	goto	u10341
 16467     1476  2C79               	goto	u10340
 16468     1477                     u10341:
 16469     1477  3001               	movlw	1
 16470     1478  2C7A               	goto	u10350
 16471     1479                     u10340:
 16472     1479  3000               	movlw	0
 16473     147A                     u10350:
 16474     147A  00F6               	movwf	??_bitRead+2
 16475     147B  01F7               	clrf	??_bitRead+3
 16476     147C  0871               	movf	bitRead@reg,w
 16477     147D  0576               	andwf	??_bitRead+2,w
 16478     147E  00F8               	movwf	??_bitRead+4
 16479     147F  0872               	movf	bitRead@reg+1,w
 16480     1480  0577               	andwf	??_bitRead+3,w
 16481     1481  00F9               	movwf	??_bitRead+5
 16482     1482  0878               	movf	??_bitRead+4,w
 16483     1483  0479               	iorwf	??_bitRead+5,w
 16484     1484  1903               	btfsc	3,2
 16485     1485  2C87               	goto	u10361
 16486     1486  2C88               	goto	u10360
 16487     1487                     u10361:
 16488     1487  2C8A               	goto	l13400
 16489     1488                     u10360:
 16490     1488                     l13396:
 16491                           
 16492                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2506:         return 0
      +                          x0;
 16493     1488  3000               	movlw	0
 16494     1489  2C8B               	goto	l2672
 16495     148A                     l13400:
 16496                           
 16497                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2508:     return 0x01;
 16498     148A  3001               	movlw	1
 16499     148B                     l2672:
 16500     148B  0008               	return
 16501     148C                     __end_of_bitRead:
 16502                           
 16503                           	psect	text21
 16504     1EF0                     __ptext21:	
 16505 ;; *************** function _TMR0_HasOverflowOccured *****************
 16506 ;; Defined at:
 16507 ;;		line 127 in file "mcc_generated_files/tmr0.c"
 16508 ;; Parameters:    Size  Location     Type
 16509 ;;		None
 16510 ;; Auto vars:     Size  Location     Type
 16511 ;;		None
 16512 ;; Return value:  Size  Location     Type
 16513 ;;                  1    wreg      _Bool 
 16514 ;; Registers used:
 16515 ;;		wreg, status,2, status,0
 16516 ;; Tracked objects:
 16517 ;;		On entry : 0/0
 16518 ;;		On exit  : 0/0
 16519 ;;		Unchanged: 0/0
 16520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16525 ;;Total ram usage:        0 bytes
 16526 ;; Hardware stack levels used: 1
 16527 ;; Hardware stack levels required when called: 4
 16528 ;; This function calls:
 16529 ;;		Nothing
 16530 ;; This function is called by:
 16531 ;;		_main
 16532 ;; This function uses a non-reentrant model
 16533 ;;
 16534                           
 16535     1EF0                     _TMR0_HasOverflowOccured:	
 16536                           ;psect for function _TMR0_HasOverflowOccured
 16537                           
 16538     1EF0                     l14536:	
 16539                           ;incstack = 0
 16540                           ; Regs used in _TMR0_HasOverflowOccured: [wreg+status,2+status,0]
 16541                           
 16542                           
 16543                           ;mcc_generated_files/tmr0.c: 130:     return(PIR0bits.TMR0IF);
 16544     1EF0  014E               	movlb	14	; select bank14
 16545     1EF1  0E0C               	swapf	12,w	;volatile
 16546     1EF2  0C89               	rrf	9,f
 16547     1EF3  3901               	andlw	1
 16548     1EF4                     l1492:
 16549     1EF4  0008               	return
 16550     1EF5                     __end_of_TMR0_HasOverflowOccured:
 16551                           
 16552                           	psect	text22
 16553     11F2                     __ptext22:	
 16554 ;; *************** function _SYSTEM_Initialize *****************
 16555 ;; Defined at:
 16556 ;;		line 50 in file "mcc_generated_files/mcc.c"
 16557 ;; Parameters:    Size  Location     Type
 16558 ;;		None
 16559 ;; Auto vars:     Size  Location     Type
 16560 ;;		None
 16561 ;; Return value:  Size  Location     Type
 16562 ;;                  1    wreg      void 
 16563 ;; Registers used:
 16564 ;;		wreg, status,2, status,0, pclath, cstack
 16565 ;; Tracked objects:
 16566 ;;		On entry : 0/0
 16567 ;;		On exit  : 0/0
 16568 ;;		Unchanged: 0/0
 16569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16574 ;;Total ram usage:        0 bytes
 16575 ;; Hardware stack levels used: 1
 16576 ;; Hardware stack levels required when called: 6
 16577 ;; This function calls:
 16578 ;;		_EUSART1_Initialize
 16579 ;;		_EUSART2_Initialize
 16580 ;;		_I2C1_Initialize
 16581 ;;		_OSCILLATOR_Initialize
 16582 ;;		_PIN_MANAGER_Initialize
 16583 ;;		_PMD_Initialize
 16584 ;;		_TMR0_Initialize
 16585 ;; This function is called by:
 16586 ;;		_main
 16587 ;; This function uses a non-reentrant model
 16588 ;;
 16589                           
 16590     11F2                     _SYSTEM_Initialize:	
 16591                           ;psect for function _SYSTEM_Initialize
 16592                           
 16593     11F2                     l14522:	
 16594                           ;incstack = 0
 16595                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16596                           
 16597                           
 16598                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 16599     11F2  319F  27D5  3191   	fcall	_PMD_Initialize
 16600     11F5                     l14524:
 16601                           
 16602                           ;mcc_generated_files/mcc.c: 53:     I2C1_Initialize();
 16603     11F5  319F  27A4  3191   	fcall	_I2C1_Initialize
 16604     11F8                     l14526:
 16605                           
 16606                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 16607     11F8  318B  231B  3191   	fcall	_PIN_MANAGER_Initialize
 16608     11FB                     l14528:
 16609                           
 16610                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 16611     11FB  319F  27CB  3191   	fcall	_OSCILLATOR_Initialize
 16612     11FE                     l14530:
 16613                           
 16614                           ;mcc_generated_files/mcc.c: 56:     TMR0_Initialize();
 16615     11FE  3191  218A  3191   	fcall	_TMR0_Initialize
 16616     1201                     l14532:
 16617                           
 16618                           ;mcc_generated_files/mcc.c: 57:     EUSART1_Initialize();
 16619     1201  3189  214E  3191   	fcall	_EUSART1_Initialize
 16620     1204                     l14534:
 16621                           
 16622                           ;mcc_generated_files/mcc.c: 58:     EUSART2_Initialize();
 16623     1204  3189  218C  3191   	fcall	_EUSART2_Initialize
 16624     1207                     l1352:
 16625     1207  0008               	return
 16626     1208                     __end_of_SYSTEM_Initialize:
 16627                           
 16628                           	psect	text23
 16629     118A                     __ptext23:	
 16630 ;; *************** function _TMR0_Initialize *****************
 16631 ;; Defined at:
 16632 ;;		line 65 in file "mcc_generated_files/tmr0.c"
 16633 ;; Parameters:    Size  Location     Type
 16634 ;;		None
 16635 ;; Auto vars:     Size  Location     Type
 16636 ;;		None
 16637 ;; Return value:  Size  Location     Type
 16638 ;;                  1    wreg      void 
 16639 ;; Registers used:
 16640 ;;		wreg
 16641 ;; Tracked objects:
 16642 ;;		On entry : 0/0
 16643 ;;		On exit  : 0/0
 16644 ;;		Unchanged: 0/0
 16645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16650 ;;Total ram usage:        0 bytes
 16651 ;; Hardware stack levels used: 1
 16652 ;; Hardware stack levels required when called: 4
 16653 ;; This function calls:
 16654 ;;		Nothing
 16655 ;; This function is called by:
 16656 ;;		_SYSTEM_Initialize
 16657 ;; This function uses a non-reentrant model
 16658 ;;
 16659                           
 16660     118A                     _TMR0_Initialize:	
 16661                           ;psect for function _TMR0_Initialize
 16662                           
 16663     118A                     l13826:	
 16664                           ;incstack = 0
 16665                           ; Regs used in _TMR0_Initialize: [wreg]
 16666                           
 16667                           
 16668                           ;mcc_generated_files/tmr0.c: 70:     T0CON1 = 0x47;
 16669     118A  3047               	movlw	71
 16670     118B  014B               	movlb	11	; select bank11
 16671     118C  009F               	movwf	31	;volatile
 16672                           
 16673                           ;mcc_generated_files/tmr0.c: 73:     TMR0H = 0x0B;
 16674     118D  300B               	movlw	11
 16675     118E  009D               	movwf	29	;volatile
 16676                           
 16677                           ;mcc_generated_files/tmr0.c: 76:     TMR0L = 0xDC;
 16678     118F  30DC               	movlw	220
 16679     1190  009C               	movwf	28	;volatile
 16680                           
 16681                           ;mcc_generated_files/tmr0.c: 79:     timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
 16682     1191  081D               	movf	29,w	;volatile
 16683     1192  0140               	movlb	0	; select bank0
 16684     1193  00CD               	movwf	_timer0ReloadVal16bit+1	;volatile
 16685     1194  014B               	movlb	11	; select bank11
 16686     1195  081C               	movf	28,w	;volatile
 16687     1196  0140               	movlb	0	; select bank0
 16688     1197  00CC               	movwf	_timer0ReloadVal16bit	;volatile
 16689     1198                     l13828:
 16690                           
 16691                           ;mcc_generated_files/tmr0.c: 82:     PIR0bits.TMR0IF = 0;
 16692     1198  014E               	movlb	14	; select bank14
 16693     1199  128C               	bcf	12,5	;volatile
 16694                           
 16695                           ;mcc_generated_files/tmr0.c: 85:     T0CON0 = 0x90;
 16696     119A  3090               	movlw	144
 16697     119B  014B               	movlb	11	; select bank11
 16698     119C  009E               	movwf	30	;volatile
 16699     119D                     l1474:
 16700     119D  0008               	return
 16701     119E                     __end_of_TMR0_Initialize:
 16702                           
 16703                           	psect	text24
 16704     1FD5                     __ptext24:	
 16705 ;; *************** function _PMD_Initialize *****************
 16706 ;; Defined at:
 16707 ;;		line 77 in file "mcc_generated_files/mcc.c"
 16708 ;; Parameters:    Size  Location     Type
 16709 ;;		None
 16710 ;; Auto vars:     Size  Location     Type
 16711 ;;		None
 16712 ;; Return value:  Size  Location     Type
 16713 ;;                  1    wreg      void 
 16714 ;; Registers used:
 16715 ;;		status,2
 16716 ;; Tracked objects:
 16717 ;;		On entry : 0/0
 16718 ;;		On exit  : 0/0
 16719 ;;		Unchanged: 0/0
 16720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16725 ;;Total ram usage:        0 bytes
 16726 ;; Hardware stack levels used: 1
 16727 ;; Hardware stack levels required when called: 4
 16728 ;; This function calls:
 16729 ;;		Nothing
 16730 ;; This function is called by:
 16731 ;;		_SYSTEM_Initialize
 16732 ;; This function uses a non-reentrant model
 16733 ;;
 16734                           
 16735     1FD5                     _PMD_Initialize:	
 16736                           ;psect for function _PMD_Initialize
 16737                           
 16738     1FD5                     l13740:	
 16739                           ;incstack = 0
 16740                           ; Regs used in _PMD_Initialize: [status,2]
 16741                           
 16742                           
 16743                           ;mcc_generated_files/mcc.c: 80:     PMD0 = 0x00;
 16744     1FD5  014F               	movlb	15	; select bank15
 16745     1FD6  0196               	clrf	22	;volatile
 16746                           
 16747                           ;mcc_generated_files/mcc.c: 82:     PMD1 = 0x00;
 16748     1FD7  0197               	clrf	23	;volatile
 16749                           
 16750                           ;mcc_generated_files/mcc.c: 84:     PMD2 = 0x00;
 16751     1FD8  0198               	clrf	24	;volatile
 16752                           
 16753                           ;mcc_generated_files/mcc.c: 86:     PMD3 = 0x00;
 16754     1FD9  0199               	clrf	25	;volatile
 16755                           
 16756                           ;mcc_generated_files/mcc.c: 88:     PMD4 = 0x00;
 16757     1FDA  019A               	clrf	26	;volatile
 16758                           
 16759                           ;mcc_generated_files/mcc.c: 90:     PMD5 = 0x00;
 16760     1FDB  019B               	clrf	27	;volatile
 16761                           
 16762                           ;mcc_generated_files/mcc.c: 92:     PMD6 = 0x00;
 16763     1FDC  019C               	clrf	28	;volatile
 16764                           
 16765                           ;mcc_generated_files/mcc.c: 94:     PMD7 = 0x00;
 16766     1FDD  019D               	clrf	29	;volatile
 16767     1FDE                     l1358:
 16768     1FDE  0008               	return
 16769     1FDF                     __end_of_PMD_Initialize:
 16770                           
 16771                           	psect	text25
 16772     0B1B                     __ptext25:	
 16773 ;; *************** function _PIN_MANAGER_Initialize *****************
 16774 ;; Defined at:
 16775 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 16776 ;; Parameters:    Size  Location     Type
 16777 ;;		None
 16778 ;; Auto vars:     Size  Location     Type
 16779 ;;		None
 16780 ;; Return value:  Size  Location     Type
 16781 ;;                  1    wreg      void 
 16782 ;; Registers used:
 16783 ;;		wreg, status,2, status,0, pclath, cstack
 16784 ;; Tracked objects:
 16785 ;;		On entry : 0/0
 16786 ;;		On exit  : 0/0
 16787 ;;		Unchanged: 0/0
 16788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16793 ;;Total ram usage:        0 bytes
 16794 ;; Hardware stack levels used: 1
 16795 ;; Hardware stack levels required when called: 5
 16796 ;; This function calls:
 16797 ;;		_IOCAF6_SetInterruptHandler
 16798 ;; This function is called by:
 16799 ;;		_SYSTEM_Initialize
 16800 ;; This function uses a non-reentrant model
 16801 ;;
 16802                           
 16803     0B1B                     _PIN_MANAGER_Initialize:	
 16804                           ;psect for function _PIN_MANAGER_Initialize
 16805                           
 16806     0B1B                     l13750:	
 16807                           ;incstack = 0
 16808                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16809                           
 16810                           
 16811                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x00;
 16812     0B1B  0140               	movlb	0	; select bank0
 16813     0B1C  019C               	clrf	28	;volatile
 16814     0B1D                     l13752:
 16815                           
 16816                           ;mcc_generated_files/pin_manager.c: 63:     LATA = 0x31;
 16817     0B1D  3031               	movlw	49
 16818     0B1E  0098               	movwf	24	;volatile
 16819     0B1F                     l13754:
 16820                           
 16821                           ;mcc_generated_files/pin_manager.c: 64:     LATB = 0x00;
 16822     0B1F  0199               	clrf	25	;volatile
 16823                           
 16824                           ;mcc_generated_files/pin_manager.c: 65:     LATC = 0xC1;
 16825     0B20  30C1               	movlw	193
 16826     0B21  009A               	movwf	26	;volatile
 16827                           
 16828                           ;mcc_generated_files/pin_manager.c: 70:     TRISE = 0x08;
 16829     0B22  3008               	movlw	8
 16830     0B23  0096               	movwf	22	;volatile
 16831                           
 16832                           ;mcc_generated_files/pin_manager.c: 71:     TRISA = 0xDE;
 16833     0B24  30DE               	movlw	222
 16834     0B25  0092               	movwf	18	;volatile
 16835                           
 16836                           ;mcc_generated_files/pin_manager.c: 72:     TRISB = 0xEF;
 16837     0B26  30EF               	movlw	239
 16838     0B27  0093               	movwf	19	;volatile
 16839                           
 16840                           ;mcc_generated_files/pin_manager.c: 73:     TRISC = 0x25;
 16841     0B28  3025               	movlw	37
 16842     0B29  0094               	movwf	20	;volatile
 16843     0B2A                     l13756:
 16844                           
 16845                           ;mcc_generated_files/pin_manager.c: 78:     ANSELC = 0x00;
 16846     0B2A  017E               	movlb	62	; select bank62
 16847     0B2B  01CE               	clrf	78	;volatile
 16848     0B2C                     l13758:
 16849                           
 16850                           ;mcc_generated_files/pin_manager.c: 79:     ANSELB = 0xC9;
 16851     0B2C  30C9               	movlw	201
 16852     0B2D  00C3               	movwf	67	;volatile
 16853     0B2E                     l13760:
 16854                           
 16855                           ;mcc_generated_files/pin_manager.c: 80:     ANSELA = 0x0E;
 16856     0B2E  300E               	movlw	14
 16857     0B2F  00B8               	movwf	56	;volatile
 16858     0B30                     l13762:
 16859                           
 16860                           ;mcc_generated_files/pin_manager.c: 85:     WPUE = 0x00;
 16861     0B30  01E5               	clrf	101	;volatile
 16862     0B31                     l13764:
 16863                           
 16864                           ;mcc_generated_files/pin_manager.c: 86:     WPUB = 0x00;
 16865     0B31  01C4               	clrf	68	;volatile
 16866     0B32                     l13766:
 16867                           
 16868                           ;mcc_generated_files/pin_manager.c: 87:     WPUA = 0x00;
 16869     0B32  01B9               	clrf	57	;volatile
 16870     0B33                     l13768:
 16871                           
 16872                           ;mcc_generated_files/pin_manager.c: 88:     WPUC = 0x00;
 16873     0B33  01CF               	clrf	79	;volatile
 16874     0B34                     l13770:
 16875                           
 16876                           ;mcc_generated_files/pin_manager.c: 93:     ODCONE = 0x00;
 16877     0B34  01E6               	clrf	102	;volatile
 16878     0B35                     l13772:
 16879                           
 16880                           ;mcc_generated_files/pin_manager.c: 94:     ODCONA = 0x00;
 16881     0B35  01BA               	clrf	58	;volatile
 16882     0B36                     l13774:
 16883                           
 16884                           ;mcc_generated_files/pin_manager.c: 95:     ODCONB = 0x00;
 16885     0B36  01C5               	clrf	69	;volatile
 16886     0B37                     l13776:
 16887                           
 16888                           ;mcc_generated_files/pin_manager.c: 96:     ODCONC = 0x00;
 16889     0B37  01D0               	clrf	80	;volatile
 16890     0B38                     l13778:
 16891                           
 16892                           ;mcc_generated_files/pin_manager.c: 101:     SLRCONA = 0xFF;
 16893     0B38  30FF               	movlw	255
 16894     0B39  00BB               	movwf	59	;volatile
 16895     0B3A                     l13780:
 16896                           
 16897                           ;mcc_generated_files/pin_manager.c: 102:     SLRCONB = 0xFF;
 16898     0B3A  30FF               	movlw	255
 16899     0B3B  00C6               	movwf	70	;volatile
 16900     0B3C                     l13782:
 16901                           
 16902                           ;mcc_generated_files/pin_manager.c: 103:     SLRCONC = 0xFF;
 16903     0B3C  30FF               	movlw	255
 16904     0B3D  00D1               	movwf	81	;volatile
 16905     0B3E                     l13784:
 16906                           
 16907                           ;mcc_generated_files/pin_manager.c: 108:     INLVLA = 0x3F;
 16908     0B3E  303F               	movlw	63
 16909     0B3F  00BC               	movwf	60	;volatile
 16910     0B40                     l13786:
 16911                           
 16912                           ;mcc_generated_files/pin_manager.c: 109:     INLVLB = 0x3F;
 16913     0B40  303F               	movlw	63
 16914     0B41  00C7               	movwf	71	;volatile
 16915     0B42                     l13788:
 16916                           
 16917                           ;mcc_generated_files/pin_manager.c: 110:     INLVLC = 0x3F;
 16918     0B42  303F               	movlw	63
 16919     0B43  00D2               	movwf	82	;volatile
 16920     0B44                     l13790:
 16921                           
 16922                           ;mcc_generated_files/pin_manager.c: 117:     IOCAFbits.IOCAF6 = 0;
 16923     0B44  133F               	bcf	63,6	;volatile
 16924     0B45                     l13792:
 16925                           
 16926                           ;mcc_generated_files/pin_manager.c: 119:     IOCANbits.IOCAN6 = 0;
 16927     0B45  133E               	bcf	62,6	;volatile
 16928     0B46                     l13794:
 16929                           
 16930                           ;mcc_generated_files/pin_manager.c: 121:     IOCAPbits.IOCAP6 = 1;
 16931     0B46  173D               	bsf	61,6	;volatile
 16932     0B47                     l13796:
 16933                           
 16934                           ;mcc_generated_files/pin_manager.c: 126:     IOCAF6_SetInterruptHandler(IOCAF6_DefaultIn
      +                          terruptHandler);
 16935     0B47  30FF               	movlw	low _IOCAF6_DefaultInterruptHandler
 16936     0B48  00F1               	movwf	IOCAF6_SetInterruptHandler@InterruptHandler
 16937     0B49  3007               	movlw	high _IOCAF6_DefaultInterruptHandler
 16938     0B4A  00F2               	movwf	IOCAF6_SetInterruptHandler@InterruptHandler+1
 16939     0B4B  319F  274F  318B   	fcall	_IOCAF6_SetInterruptHandler
 16940     0B4E                     l13798:
 16941                           
 16942                           ;mcc_generated_files/pin_manager.c: 129:     PIE0bits.IOCIE = 1;
 16943     0B4E  014E               	movlb	14	; select bank14
 16944     0B4F  1616               	bsf	22,4	;volatile
 16945     0B50                     l13800:
 16946                           
 16947                           ;mcc_generated_files/pin_manager.c: 132:     SSP1CLKPPS = 0x09;
 16948     0B50  3009               	movlw	9
 16949     0B51  017D               	movlb	61	; select bank61
 16950     0B52  00C5               	movwf	69	;volatile
 16951     0B53                     l13802:
 16952                           
 16953                           ;mcc_generated_files/pin_manager.c: 133:     RB1PPS = 0x13;
 16954     0B53  3013               	movlw	19
 16955     0B54  017E               	movlb	62	; select bank62
 16956     0B55  0099               	movwf	25	;volatile
 16957     0B56                     l13804:
 16958                           
 16959                           ;mcc_generated_files/pin_manager.c: 134:     RB2PPS = 0x14;
 16960     0B56  3014               	movlw	20
 16961     0B57  009A               	movwf	26	;volatile
 16962     0B58                     l13806:
 16963                           
 16964                           ;mcc_generated_files/pin_manager.c: 135:     RC4PPS = 0x25;
 16965     0B58  3025               	movlw	37
 16966     0B59  00A4               	movwf	36	;volatile
 16967     0B5A                     l13808:
 16968                           
 16969                           ;mcc_generated_files/pin_manager.c: 136:     RB4PPS = 0x0F;
 16970     0B5A  300F               	movlw	15
 16971     0B5B  009C               	movwf	28	;volatile
 16972     0B5C                     l13810:
 16973                           
 16974                           ;mcc_generated_files/pin_manager.c: 137:     RX2DTPPS = 0x15;
 16975     0B5C  3015               	movlw	21
 16976     0B5D  017D               	movlb	61	; select bank61
 16977     0B5E  00CD               	movwf	77	;volatile
 16978     0B5F                     l13812:
 16979                           
 16980                           ;mcc_generated_files/pin_manager.c: 138:     SSP1DATPPS = 0x0A;
 16981     0B5F  300A               	movlw	10
 16982     0B60  00C6               	movwf	70	;volatile
 16983     0B61                     l13814:
 16984                           
 16985                           ;mcc_generated_files/pin_manager.c: 139:     RX1DTPPS = 0x0D;
 16986     0B61  300D               	movlw	13
 16987     0B62  00CB               	movwf	75	;volatile
 16988     0B63                     l1443:
 16989     0B63  0008               	return
 16990     0B64                     __end_of_PIN_MANAGER_Initialize:
 16991                           
 16992                           	psect	text26
 16993     1F4F                     __ptext26:	
 16994 ;; *************** function _IOCAF6_SetInterruptHandler *****************
 16995 ;; Defined at:
 16996 ;;		line 169 in file "mcc_generated_files/pin_manager.c"
 16997 ;; Parameters:    Size  Location     Type
 16998 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
 16999 ;;		 -> IOCAF6_DefaultInterruptHandler(1), 
 17000 ;; Auto vars:     Size  Location     Type
 17001 ;;		None
 17002 ;; Return value:  Size  Location     Type
 17003 ;;                  1    wreg      void 
 17004 ;; Registers used:
 17005 ;;		wreg
 17006 ;; Tracked objects:
 17007 ;;		On entry : 0/0
 17008 ;;		On exit  : 0/0
 17009 ;;		Unchanged: 0/0
 17010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17011 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17014 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17015 ;;Total ram usage:        2 bytes
 17016 ;; Hardware stack levels used: 1
 17017 ;; Hardware stack levels required when called: 4
 17018 ;; This function calls:
 17019 ;;		Nothing
 17020 ;; This function is called by:
 17021 ;;		_PIN_MANAGER_Initialize
 17022 ;; This function uses a non-reentrant model
 17023 ;;
 17024                           
 17025     1F4F                     _IOCAF6_SetInterruptHandler:	
 17026                           ;psect for function _IOCAF6_SetInterruptHandler
 17027                           
 17028     1F4F                     l13514:	
 17029                           ;incstack = 0
 17030                           ; Regs used in _IOCAF6_SetInterruptHandler: [wreg]
 17031                           
 17032                           
 17033                           ;mcc_generated_files/pin_manager.c: 170:     IOCAF6_InterruptHandler = InterruptHandler;
 17034     1F4F  0872               	movf	IOCAF6_SetInterruptHandler@InterruptHandler+1,w
 17035     1F50  0141               	movlb	1	; select bank1
 17036     1F51  00EA               	movwf	(_IOCAF6_InterruptHandler+1)^(0+128)
 17037     1F52  0871               	movf	IOCAF6_SetInterruptHandler@InterruptHandler,w
 17038     1F53  00E9               	movwf	_IOCAF6_InterruptHandler^(0+128)
 17039     1F54                     l1454:
 17040     1F54  0008               	return
 17041     1F55                     __end_of_IOCAF6_SetInterruptHandler:
 17042                           
 17043                           	psect	text27
 17044     1FCB                     __ptext27:	
 17045 ;; *************** function _OSCILLATOR_Initialize *****************
 17046 ;; Defined at:
 17047 ;;		line 61 in file "mcc_generated_files/mcc.c"
 17048 ;; Parameters:    Size  Location     Type
 17049 ;;		None
 17050 ;; Auto vars:     Size  Location     Type
 17051 ;;		None
 17052 ;; Return value:  Size  Location     Type
 17053 ;;                  1    wreg      void 
 17054 ;; Registers used:
 17055 ;;		wreg, status,2
 17056 ;; Tracked objects:
 17057 ;;		On entry : 0/0
 17058 ;;		On exit  : 0/0
 17059 ;;		Unchanged: 0/0
 17060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17065 ;;Total ram usage:        0 bytes
 17066 ;; Hardware stack levels used: 1
 17067 ;; Hardware stack levels required when called: 4
 17068 ;; This function calls:
 17069 ;;		Nothing
 17070 ;; This function is called by:
 17071 ;;		_SYSTEM_Initialize
 17072 ;; This function uses a non-reentrant model
 17073 ;;
 17074                           
 17075     1FCB                     _OSCILLATOR_Initialize:	
 17076                           ;psect for function _OSCILLATOR_Initialize
 17077                           
 17078     1FCB                     l13816:	
 17079                           ;incstack = 0
 17080                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 17081                           
 17082                           
 17083                           ;mcc_generated_files/mcc.c: 64:     OSCCON1 = 0x60;
 17084     1FCB  3060               	movlw	96
 17085     1FCC  0151               	movlb	17	; select bank17
 17086     1FCD  008D               	movwf	13	;volatile
 17087     1FCE                     l13818:
 17088                           
 17089                           ;mcc_generated_files/mcc.c: 66:     OSCCON3 = 0x00;
 17090     1FCE  018F               	clrf	15	;volatile
 17091     1FCF                     l13820:
 17092                           
 17093                           ;mcc_generated_files/mcc.c: 68:     OSCEN = 0x00;
 17094     1FCF  0191               	clrf	17	;volatile
 17095                           
 17096                           ;mcc_generated_files/mcc.c: 70:     OSCFRQ = 0x06;
 17097     1FD0  3006               	movlw	6
 17098     1FD1  0093               	movwf	19	;volatile
 17099     1FD2                     l13822:
 17100                           
 17101                           ;mcc_generated_files/mcc.c: 72:     OSCSTAT = 0x00;
 17102     1FD2  0190               	clrf	16	;volatile
 17103     1FD3                     l13824:
 17104                           
 17105                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
 17106     1FD3  0192               	clrf	18	;volatile
 17107     1FD4                     l1355:
 17108     1FD4  0008               	return
 17109     1FD5                     __end_of_OSCILLATOR_Initialize:
 17110                           
 17111                           	psect	text28
 17112     1FA4                     __ptext28:	
 17113 ;; *************** function _I2C1_Initialize *****************
 17114 ;; Defined at:
 17115 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 17116 ;; Parameters:    Size  Location     Type
 17117 ;;		None
 17118 ;; Auto vars:     Size  Location     Type
 17119 ;;		None
 17120 ;; Return value:  Size  Location     Type
 17121 ;;                  1    wreg      void 
 17122 ;; Registers used:
 17123 ;;		wreg, status,2
 17124 ;; Tracked objects:
 17125 ;;		On entry : 0/0
 17126 ;;		On exit  : 0/0
 17127 ;;		Unchanged: 0/0
 17128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17133 ;;Total ram usage:        0 bytes
 17134 ;; Hardware stack levels used: 1
 17135 ;; Hardware stack levels required when called: 4
 17136 ;; This function calls:
 17137 ;;		Nothing
 17138 ;; This function is called by:
 17139 ;;		_SYSTEM_Initialize
 17140 ;; This function uses a non-reentrant model
 17141 ;;
 17142                           
 17143     1FA4                     _I2C1_Initialize:	
 17144                           ;psect for function _I2C1_Initialize
 17145                           
 17146     1FA4                     l13742:	
 17147                           ;incstack = 0
 17148                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 17149                           
 17150                           
 17151                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x00;
 17152     1FA4  0143               	movlb	3	; select bank3
 17153     1FA5  018F               	clrf	15	;volatile
 17154     1FA6                     l13744:
 17155                           
 17156                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 17157     1FA6  3008               	movlw	8
 17158     1FA7  0090               	movwf	16	;volatile
 17159     1FA8                     l13746:
 17160                           
 17161                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 17162     1FA8  0191               	clrf	17	;volatile
 17163                           
 17164                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x4F;
 17165     1FA9  304F               	movlw	79
 17166     1FAA  008D               	movwf	13	;volatile
 17167     1FAB                     l13748:
 17168                           
 17169                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 17170     1FAB  1290               	bcf	16,5	;volatile
 17171     1FAC                     l1742:
 17172     1FAC  0008               	return
 17173     1FAD                     __end_of_I2C1_Initialize:
 17174                           
 17175                           	psect	text29
 17176     098C                     __ptext29:	
 17177 ;; *************** function _EUSART2_Initialize *****************
 17178 ;; Defined at:
 17179 ;;		line 88 in file "mcc_generated_files/eusart2.c"
 17180 ;; Parameters:    Size  Location     Type
 17181 ;;		None
 17182 ;; Auto vars:     Size  Location     Type
 17183 ;;		None
 17184 ;; Return value:  Size  Location     Type
 17185 ;;                  1    wreg      void 
 17186 ;; Registers used:
 17187 ;;		wreg, status,2, status,0, pclath, cstack
 17188 ;; Tracked objects:
 17189 ;;		On entry : 0/0
 17190 ;;		On exit  : 0/0
 17191 ;;		Unchanged: 0/0
 17192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17197 ;;Total ram usage:        0 bytes
 17198 ;; Hardware stack levels used: 1
 17199 ;; Hardware stack levels required when called: 5
 17200 ;; This function calls:
 17201 ;;		_EUSART2_SetErrorHandler
 17202 ;;		_EUSART2_SetFramingErrorHandler
 17203 ;;		_EUSART2_SetOverrunErrorHandler
 17204 ;;		_EUSART2_SetRxInterruptHandler
 17205 ;;		_EUSART2_SetTxInterruptHandler
 17206 ;; This function is called by:
 17207 ;;		_SYSTEM_Initialize
 17208 ;; This function uses a non-reentrant model
 17209 ;;
 17210                           
 17211     098C                     _EUSART2_Initialize:	
 17212                           ;psect for function _EUSART2_Initialize
 17213                           
 17214     098C                     l13672:	
 17215                           ;incstack = 0
 17216                           ; Regs used in _EUSART2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17217                           
 17218                           
 17219                           ;mcc_generated_files/eusart2.c: 91:     PIE3bits.RC2IE = 0;
 17220     098C  014E               	movlb	14	; select bank14
 17221     098D  1399               	bcf	25,7	;volatile
 17222     098E                     l13674:
 17223                           
 17224                           ;mcc_generated_files/eusart2.c: 92:     EUSART2_SetRxInterruptHandler(EUSART2_Receive_IS
      +                          R);
 17225     098E  305E               	movlw	low _EUSART2_Receive_ISR
 17226     098F  00F1               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler
 17227     0990  3008               	movlw	high _EUSART2_Receive_ISR
 17228     0991  00F2               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler+1
 17229     0992  319F  2743  3189   	fcall	_EUSART2_SetRxInterruptHandler
 17230     0995                     l13676:
 17231                           
 17232                           ;mcc_generated_files/eusart2.c: 93:     PIE3bits.TX2IE = 0;
 17233     0995  014E               	movlb	14	; select bank14
 17234     0996  1319               	bcf	25,6	;volatile
 17235                           
 17236                           ;mcc_generated_files/eusart2.c: 94:     EUSART2_SetTxInterruptHandler(EUSART2_Transmit_I
      +                          SR);
 17237     0997  30DD               	movlw	low _EUSART2_Transmit_ISR
 17238     0998  00F1               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler
 17239     0999  3013               	movlw	high _EUSART2_Transmit_ISR
 17240     099A  00F2               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler+1
 17241     099B  319F  2749  3189   	fcall	_EUSART2_SetTxInterruptHandler
 17242     099E                     l13678:
 17243                           
 17244                           ;mcc_generated_files/eusart2.c: 98:     BAUD2CON = 0x08;
 17245     099E  3008               	movlw	8
 17246     099F  0154               	movlb	20	; select bank20
 17247     09A0  009F               	movwf	31	;volatile
 17248     09A1                     l13680:
 17249                           
 17250                           ;mcc_generated_files/eusart2.c: 101:     RC2STA = 0x90;
 17251     09A1  3090               	movlw	144
 17252     09A2  009D               	movwf	29	;volatile
 17253     09A3                     l13682:
 17254                           
 17255                           ;mcc_generated_files/eusart2.c: 104:     TX2STA = 0x24;
 17256     09A3  3024               	movlw	36
 17257     09A4  009E               	movwf	30	;volatile
 17258     09A5                     l13684:
 17259                           
 17260                           ;mcc_generated_files/eusart2.c: 107:     SP2BRGL = 0x40;
 17261     09A5  3040               	movlw	64
 17262     09A6  009B               	movwf	27	;volatile
 17263     09A7                     l13686:
 17264                           
 17265                           ;mcc_generated_files/eusart2.c: 110:     SP2BRGH = 0x03;
 17266     09A7  3003               	movlw	3
 17267     09A8  009C               	movwf	28	;volatile
 17268     09A9                     l13688:
 17269                           
 17270                           ;mcc_generated_files/eusart2.c: 113:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultF
      +                          ramingErrorHandler);
 17271     09A9  306F               	movlw	low _EUSART2_DefaultFramingErrorHandler
 17272     09AA  00F1               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler
 17273     09AB  301E               	movlw	high _EUSART2_DefaultFramingErrorHandler
 17274     09AC  00F2               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler+1
 17275     09AD  319F  2737  3189   	fcall	_EUSART2_SetFramingErrorHandler
 17276     09B0                     l13690:
 17277                           
 17278                           ;mcc_generated_files/eusart2.c: 114:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultO
      +                          verrunErrorHandler);
 17279     09B0  309B               	movlw	low _EUSART2_DefaultOverrunErrorHandler
 17280     09B1  00F1               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler
 17281     09B2  301E               	movlw	high _EUSART2_DefaultOverrunErrorHandler
 17282     09B3  00F2               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler+1
 17283     09B4  319F  273D  3189   	fcall	_EUSART2_SetOverrunErrorHandler
 17284     09B7                     l13692:
 17285                           
 17286                           ;mcc_generated_files/eusart2.c: 115:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHan
      +                          dler);
 17287     09B7  3097               	movlw	low _EUSART2_DefaultErrorHandler
 17288     09B8  00F1               	movwf	EUSART2_SetErrorHandler@interruptHandler
 17289     09B9  301E               	movlw	high _EUSART2_DefaultErrorHandler
 17290     09BA  00F2               	movwf	EUSART2_SetErrorHandler@interruptHandler+1
 17291     09BB  319F  2731  3189   	fcall	_EUSART2_SetErrorHandler
 17292     09BE                     l13694:
 17293                           
 17294                           ;mcc_generated_files/eusart2.c: 117:     eusart2RxLastError.status = 0;
 17295     09BE  0140               	movlb	0	; select bank0
 17296     09BF  01DE               	clrf	_eusart2RxLastError	;volatile
 17297     09C0                     l13696:
 17298                           
 17299                           ;mcc_generated_files/eusart2.c: 120:     eusart2TxHead = 0;
 17300     09C0  01E3               	clrf	_eusart2TxHead	;volatile
 17301     09C1                     l13698:
 17302                           
 17303                           ;mcc_generated_files/eusart2.c: 121:     eusart2TxTail = 0;
 17304     09C1  01E2               	clrf	_eusart2TxTail	;volatile
 17305     09C2                     l13700:
 17306                           
 17307                           ;mcc_generated_files/eusart2.c: 122:     eusart2TxBufferRemaining = sizeof(eusart2TxBuff
      +                          er);
 17308     09C2  3008               	movlw	8
 17309     09C3  00E1               	movwf	_eusart2TxBufferRemaining	;volatile
 17310                           
 17311                           ;mcc_generated_files/eusart2.c: 124:     eusart2RxHead = 0;
 17312     09C4  01FC               	clrf	_eusart2RxHead	;volatile
 17313                           
 17314                           ;mcc_generated_files/eusart2.c: 125:     eusart2RxTail = 0;
 17315     09C5  01E0               	clrf	_eusart2RxTail	;volatile
 17316                           
 17317                           ;mcc_generated_files/eusart2.c: 126:     eusart2RxCount = 0;
 17318     09C6  01DF               	clrf	_eusart2RxCount	;volatile
 17319     09C7                     l13702:
 17320                           
 17321                           ;mcc_generated_files/eusart2.c: 129:     PIE3bits.RC2IE = 1;
 17322     09C7  014E               	movlb	14	; select bank14
 17323     09C8  1799               	bsf	25,7	;volatile
 17324     09C9                     l1051:
 17325     09C9  0008               	return
 17326     09CA                     __end_of_EUSART2_Initialize:
 17327                           
 17328                           	psect	text30
 17329     1F49                     __ptext30:	
 17330 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
 17331 ;; Defined at:
 17332 ;;		line 276 in file "mcc_generated_files/eusart2.c"
 17333 ;; Parameters:    Size  Location     Type
 17334 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17335 ;;		 -> EUSART2_Transmit_ISR(1), EUSART1_Transmit_ISR(1), 
 17336 ;; Auto vars:     Size  Location     Type
 17337 ;;		None
 17338 ;; Return value:  Size  Location     Type
 17339 ;;                  1    wreg      void 
 17340 ;; Registers used:
 17341 ;;		wreg
 17342 ;; Tracked objects:
 17343 ;;		On entry : 0/0
 17344 ;;		On exit  : 0/0
 17345 ;;		Unchanged: 0/0
 17346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17347 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17350 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17351 ;;Total ram usage:        2 bytes
 17352 ;; Hardware stack levels used: 1
 17353 ;; Hardware stack levels required when called: 4
 17354 ;; This function calls:
 17355 ;;		Nothing
 17356 ;; This function is called by:
 17357 ;;		_EUSART2_Initialize
 17358 ;; This function uses a non-reentrant model
 17359 ;;
 17360                           
 17361     1F49                     _EUSART2_SetTxInterruptHandler:	
 17362                           ;psect for function _EUSART2_SetTxInterruptHandler
 17363                           
 17364     1F49                     l13486:	
 17365                           ;incstack = 0
 17366                           ; Regs used in _EUSART2_SetTxInterruptHandler: [wreg]
 17367                           
 17368                           
 17369                           ;mcc_generated_files/eusart2.c: 277:     EUSART2_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 17370     1F49  0872               	movf	EUSART2_SetTxInterruptHandler@interruptHandler+1,w
 17371     1F4A  0141               	movlb	1	; select bank1
 17372     1F4B  00EE               	movwf	(_EUSART2_TxDefaultInterruptHandler+1)^(0+128)
 17373     1F4C  0871               	movf	EUSART2_SetTxInterruptHandler@interruptHandler,w
 17374     1F4D  00ED               	movwf	_EUSART2_TxDefaultInterruptHandler^(0+128)
 17375     1F4E                     l1117:
 17376     1F4E  0008               	return
 17377     1F4F                     __end_of_EUSART2_SetTxInterruptHandler:
 17378                           
 17379                           	psect	text31
 17380     1F43                     __ptext31:	
 17381 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
 17382 ;; Defined at:
 17383 ;;		line 280 in file "mcc_generated_files/eusart2.c"
 17384 ;; Parameters:    Size  Location     Type
 17385 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17386 ;;		 -> EUSART2_Receive_ISR(1), EUSART1_Receive_ISR(1), 
 17387 ;; Auto vars:     Size  Location     Type
 17388 ;;		None
 17389 ;; Return value:  Size  Location     Type
 17390 ;;                  1    wreg      void 
 17391 ;; Registers used:
 17392 ;;		wreg
 17393 ;; Tracked objects:
 17394 ;;		On entry : 0/0
 17395 ;;		On exit  : 0/0
 17396 ;;		Unchanged: 0/0
 17397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17398 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17401 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17402 ;;Total ram usage:        2 bytes
 17403 ;; Hardware stack levels used: 1
 17404 ;; Hardware stack levels required when called: 4
 17405 ;; This function calls:
 17406 ;;		Nothing
 17407 ;; This function is called by:
 17408 ;;		_EUSART2_Initialize
 17409 ;; This function uses a non-reentrant model
 17410 ;;
 17411                           
 17412     1F43                     _EUSART2_SetRxInterruptHandler:	
 17413                           ;psect for function _EUSART2_SetRxInterruptHandler
 17414                           
 17415     1F43                     l13484:	
 17416                           ;incstack = 0
 17417                           ; Regs used in _EUSART2_SetRxInterruptHandler: [wreg]
 17418                           
 17419                           
 17420                           ;mcc_generated_files/eusart2.c: 281:     EUSART2_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 17421     1F43  0872               	movf	EUSART2_SetRxInterruptHandler@interruptHandler+1,w
 17422     1F44  0141               	movlb	1	; select bank1
 17423     1F45  00EC               	movwf	(_EUSART2_RxDefaultInterruptHandler+1)^(0+128)
 17424     1F46  0871               	movf	EUSART2_SetRxInterruptHandler@interruptHandler,w
 17425     1F47  00EB               	movwf	_EUSART2_RxDefaultInterruptHandler^(0+128)
 17426     1F48                     l1120:
 17427     1F48  0008               	return
 17428     1F49                     __end_of_EUSART2_SetRxInterruptHandler:
 17429                           
 17430                           	psect	text32
 17431     1F3D                     __ptext32:	
 17432 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
 17433 ;; Defined at:
 17434 ;;		line 268 in file "mcc_generated_files/eusart2.c"
 17435 ;; Parameters:    Size  Location     Type
 17436 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17437 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
 17438 ;; Auto vars:     Size  Location     Type
 17439 ;;		None
 17440 ;; Return value:  Size  Location     Type
 17441 ;;                  1    wreg      void 
 17442 ;; Registers used:
 17443 ;;		wreg
 17444 ;; Tracked objects:
 17445 ;;		On entry : 0/0
 17446 ;;		On exit  : 0/0
 17447 ;;		Unchanged: 0/0
 17448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17449 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17452 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17453 ;;Total ram usage:        2 bytes
 17454 ;; Hardware stack levels used: 1
 17455 ;; Hardware stack levels required when called: 4
 17456 ;; This function calls:
 17457 ;;		Nothing
 17458 ;; This function is called by:
 17459 ;;		_EUSART2_Initialize
 17460 ;; This function uses a non-reentrant model
 17461 ;;
 17462                           
 17463     1F3D                     _EUSART2_SetOverrunErrorHandler:	
 17464                           ;psect for function _EUSART2_SetOverrunErrorHandler
 17465                           
 17466     1F3D                     l13490:	
 17467                           ;incstack = 0
 17468                           ; Regs used in _EUSART2_SetOverrunErrorHandler: [wreg]
 17469                           
 17470                           
 17471                           ;mcc_generated_files/eusart2.c: 269:     EUSART2_OverrunErrorHandler = interruptHandler;
 17472     1F3D  0872               	movf	EUSART2_SetOverrunErrorHandler@interruptHandler+1,w
 17473     1F3E  0142               	movlb	2	; select bank2
 17474     1F3F  00EA               	movwf	(_EUSART2_OverrunErrorHandler+1)^(0+256)
 17475     1F40  0871               	movf	EUSART2_SetOverrunErrorHandler@interruptHandler,w
 17476     1F41  00E9               	movwf	_EUSART2_OverrunErrorHandler^(0+256)
 17477     1F42                     l1111:
 17478     1F42  0008               	return
 17479     1F43                     __end_of_EUSART2_SetOverrunErrorHandler:
 17480                           
 17481                           	psect	text33
 17482     1F37                     __ptext33:	
 17483 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
 17484 ;; Defined at:
 17485 ;;		line 264 in file "mcc_generated_files/eusart2.c"
 17486 ;; Parameters:    Size  Location     Type
 17487 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17488 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
 17489 ;; Auto vars:     Size  Location     Type
 17490 ;;		None
 17491 ;; Return value:  Size  Location     Type
 17492 ;;                  1    wreg      void 
 17493 ;; Registers used:
 17494 ;;		wreg
 17495 ;; Tracked objects:
 17496 ;;		On entry : 0/0
 17497 ;;		On exit  : 0/0
 17498 ;;		Unchanged: 0/0
 17499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17500 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17503 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17504 ;;Total ram usage:        2 bytes
 17505 ;; Hardware stack levels used: 1
 17506 ;; Hardware stack levels required when called: 4
 17507 ;; This function calls:
 17508 ;;		Nothing
 17509 ;; This function is called by:
 17510 ;;		_EUSART2_Initialize
 17511 ;; This function uses a non-reentrant model
 17512 ;;
 17513                           
 17514     1F37                     _EUSART2_SetFramingErrorHandler:	
 17515                           ;psect for function _EUSART2_SetFramingErrorHandler
 17516                           
 17517     1F37                     l13488:	
 17518                           ;incstack = 0
 17519                           ; Regs used in _EUSART2_SetFramingErrorHandler: [wreg]
 17520                           
 17521                           
 17522                           ;mcc_generated_files/eusart2.c: 265:     EUSART2_FramingErrorHandler = interruptHandler;
 17523     1F37  0872               	movf	EUSART2_SetFramingErrorHandler@interruptHandler+1,w
 17524     1F38  0142               	movlb	2	; select bank2
 17525     1F39  00EC               	movwf	(_EUSART2_FramingErrorHandler+1)^(0+256)
 17526     1F3A  0871               	movf	EUSART2_SetFramingErrorHandler@interruptHandler,w
 17527     1F3B  00EB               	movwf	_EUSART2_FramingErrorHandler^(0+256)
 17528     1F3C                     l1108:
 17529     1F3C  0008               	return
 17530     1F3D                     __end_of_EUSART2_SetFramingErrorHandler:
 17531                           
 17532                           	psect	text34
 17533     1F31                     __ptext34:	
 17534 ;; *************** function _EUSART2_SetErrorHandler *****************
 17535 ;; Defined at:
 17536 ;;		line 272 in file "mcc_generated_files/eusart2.c"
 17537 ;; Parameters:    Size  Location     Type
 17538 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17539 ;;		 -> EUSART2_DefaultErrorHandler(1), 
 17540 ;; Auto vars:     Size  Location     Type
 17541 ;;		None
 17542 ;; Return value:  Size  Location     Type
 17543 ;;                  1    wreg      void 
 17544 ;; Registers used:
 17545 ;;		wreg
 17546 ;; Tracked objects:
 17547 ;;		On entry : 0/0
 17548 ;;		On exit  : 0/0
 17549 ;;		Unchanged: 0/0
 17550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17551 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17554 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17555 ;;Total ram usage:        2 bytes
 17556 ;; Hardware stack levels used: 1
 17557 ;; Hardware stack levels required when called: 4
 17558 ;; This function calls:
 17559 ;;		Nothing
 17560 ;; This function is called by:
 17561 ;;		_EUSART2_Initialize
 17562 ;; This function uses a non-reentrant model
 17563 ;;
 17564                           
 17565     1F31                     _EUSART2_SetErrorHandler:	
 17566                           ;psect for function _EUSART2_SetErrorHandler
 17567                           
 17568     1F31                     l13492:	
 17569                           ;incstack = 0
 17570                           ; Regs used in _EUSART2_SetErrorHandler: [wreg]
 17571                           
 17572                           
 17573                           ;mcc_generated_files/eusart2.c: 273:     EUSART2_ErrorHandler = interruptHandler;
 17574     1F31  0872               	movf	EUSART2_SetErrorHandler@interruptHandler+1,w
 17575     1F32  0142               	movlb	2	; select bank2
 17576     1F33  00E8               	movwf	(_EUSART2_ErrorHandler+1)^(0+256)
 17577     1F34  0871               	movf	EUSART2_SetErrorHandler@interruptHandler,w
 17578     1F35  00E7               	movwf	_EUSART2_ErrorHandler^(0+256)
 17579     1F36                     l1114:
 17580     1F36  0008               	return
 17581     1F37                     __end_of_EUSART2_SetErrorHandler:
 17582                           
 17583                           	psect	text35
 17584     094E                     __ptext35:	
 17585 ;; *************** function _EUSART1_Initialize *****************
 17586 ;; Defined at:
 17587 ;;		line 88 in file "mcc_generated_files/eusart1.c"
 17588 ;; Parameters:    Size  Location     Type
 17589 ;;		None
 17590 ;; Auto vars:     Size  Location     Type
 17591 ;;		None
 17592 ;; Return value:  Size  Location     Type
 17593 ;;                  1    wreg      void 
 17594 ;; Registers used:
 17595 ;;		wreg, status,2, status,0, pclath, cstack
 17596 ;; Tracked objects:
 17597 ;;		On entry : 0/0
 17598 ;;		On exit  : 0/0
 17599 ;;		Unchanged: 0/0
 17600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17605 ;;Total ram usage:        0 bytes
 17606 ;; Hardware stack levels used: 1
 17607 ;; Hardware stack levels required when called: 5
 17608 ;; This function calls:
 17609 ;;		_EUSART1_SetErrorHandler
 17610 ;;		_EUSART1_SetFramingErrorHandler
 17611 ;;		_EUSART1_SetOverrunErrorHandler
 17612 ;;		_EUSART1_SetRxInterruptHandler
 17613 ;;		_EUSART1_SetTxInterruptHandler
 17614 ;; This function is called by:
 17615 ;;		_SYSTEM_Initialize
 17616 ;; This function uses a non-reentrant model
 17617 ;;
 17618                           
 17619     094E                     _EUSART1_Initialize:	
 17620                           ;psect for function _EUSART1_Initialize
 17621                           
 17622     094E                     l13708:	
 17623                           ;incstack = 0
 17624                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17625                           
 17626                           
 17627                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
 17628     094E  014E               	movlb	14	; select bank14
 17629     094F  1299               	bcf	25,5	;volatile
 17630     0950                     l13710:
 17631                           
 17632                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 17633     0950  3097               	movlw	low _EUSART1_Receive_ISR
 17634     0951  00F1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 17635     0952  3008               	movlw	high _EUSART1_Receive_ISR
 17636     0953  00F2               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 17637     0954  319F  2725  3189   	fcall	_EUSART1_SetRxInterruptHandler
 17638     0957                     l13712:
 17639                           
 17640                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
 17641     0957  014E               	movlb	14	; select bank14
 17642     0958  1219               	bcf	25,4	;volatile
 17643                           
 17644                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
 17645     0959  30FF               	movlw	low _EUSART1_Transmit_ISR
 17646     095A  00F1               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler
 17647     095B  3013               	movlw	high _EUSART1_Transmit_ISR
 17648     095C  00F2               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1
 17649     095D  319F  272B  3189   	fcall	_EUSART1_SetTxInterruptHandler
 17650     0960                     l13714:
 17651                           
 17652                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
 17653     0960  3008               	movlw	8
 17654     0961  0142               	movlb	2	; select bank2
 17655     0962  009F               	movwf	31	;volatile
 17656     0963                     l13716:
 17657                           
 17658                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
 17659     0963  3090               	movlw	144
 17660     0964  009D               	movwf	29	;volatile
 17661     0965                     l13718:
 17662                           
 17663                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
 17664     0965  3024               	movlw	36
 17665     0966  009E               	movwf	30	;volatile
 17666     0967                     l13720:
 17667                           
 17668                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x40;
 17669     0967  3040               	movlw	64
 17670     0968  009B               	movwf	27	;volatile
 17671     0969                     l13722:
 17672                           
 17673                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x03;
 17674     0969  3003               	movlw	3
 17675     096A  009C               	movwf	28	;volatile
 17676     096B                     l13724:
 17677                           
 17678                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 17679     096B  306E               	movlw	low _EUSART1_DefaultFramingErrorHandler
 17680     096C  00F1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
 17681     096D  301E               	movlw	high _EUSART1_DefaultFramingErrorHandler
 17682     096E  00F2               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
 17683     096F  319F  2719  3189   	fcall	_EUSART1_SetFramingErrorHandler
 17684     0972                     l13726:
 17685                           
 17686                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 17687     0972  3093               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 17688     0973  00F1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
 17689     0974  301E               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 17690     0975  00F2               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
 17691     0976  319F  271F  3189   	fcall	_EUSART1_SetOverrunErrorHandler
 17692     0979                     l13728:
 17693                           
 17694                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 17695     0979  308F               	movlw	low _EUSART1_DefaultErrorHandler
 17696     097A  00F1               	movwf	EUSART1_SetErrorHandler@interruptHandler
 17697     097B  301E               	movlw	high _EUSART1_DefaultErrorHandler
 17698     097C  00F2               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
 17699     097D  319F  2713  3189   	fcall	_EUSART1_SetErrorHandler
 17700     0980                     l13730:
 17701                           
 17702                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
 17703     0980  0140               	movlb	0	; select bank0
 17704     0981  01D7               	clrf	_eusart1RxLastError	;volatile
 17705     0982                     l13732:
 17706                           
 17707                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
 17708     0982  01DD               	clrf	_eusart1TxHead	;volatile
 17709     0983                     l13734:
 17710                           
 17711                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
 17712     0983  01DC               	clrf	_eusart1TxTail	;volatile
 17713     0984                     l13736:
 17714                           
 17715                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
 17716     0984  3008               	movlw	8
 17717     0985  00DB               	movwf	_eusart1TxBufferRemaining	;volatile
 17718                           
 17719                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
 17720     0986  01DA               	clrf	_eusart1RxHead	;volatile
 17721                           
 17722                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
 17723     0987  01D9               	clrf	_eusart1RxTail	;volatile
 17724                           
 17725                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
 17726     0988  01D8               	clrf	_eusart1RxCount	;volatile
 17727     0989                     l13738:
 17728                           
 17729                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
 17730     0989  014E               	movlb	14	; select bank14
 17731     098A  1699               	bsf	25,5	;volatile
 17732     098B                     l1195:
 17733     098B  0008               	return
 17734     098C                     __end_of_EUSART1_Initialize:
 17735                           
 17736                           	psect	text36
 17737     1F2B                     __ptext36:	
 17738 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
 17739 ;; Defined at:
 17740 ;;		line 285 in file "mcc_generated_files/eusart1.c"
 17741 ;; Parameters:    Size  Location     Type
 17742 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17743 ;;		 -> EUSART2_Transmit_ISR(1), EUSART1_Transmit_ISR(1), 
 17744 ;; Auto vars:     Size  Location     Type
 17745 ;;		None
 17746 ;; Return value:  Size  Location     Type
 17747 ;;                  1    wreg      void 
 17748 ;; Registers used:
 17749 ;;		wreg
 17750 ;; Tracked objects:
 17751 ;;		On entry : 0/0
 17752 ;;		On exit  : 0/0
 17753 ;;		Unchanged: 0/0
 17754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17755 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17758 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17759 ;;Total ram usage:        2 bytes
 17760 ;; Hardware stack levels used: 1
 17761 ;; Hardware stack levels required when called: 4
 17762 ;; This function calls:
 17763 ;;		Nothing
 17764 ;; This function is called by:
 17765 ;;		_EUSART1_Initialize
 17766 ;; This function uses a non-reentrant model
 17767 ;;
 17768                           
 17769     1F2B                     _EUSART1_SetTxInterruptHandler:	
 17770                           ;psect for function _EUSART1_SetTxInterruptHandler
 17771                           
 17772     1F2B                     l13506:	
 17773                           ;incstack = 0
 17774                           ; Regs used in _EUSART1_SetTxInterruptHandler: [wreg]
 17775                           
 17776                           
 17777                           ;mcc_generated_files/eusart1.c: 286:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 17778     1F2B  0872               	movf	EUSART1_SetTxInterruptHandler@interruptHandler+1,w
 17779     1F2C  0142               	movlb	2	; select bank2
 17780     1F2D  00E6               	movwf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+256)
 17781     1F2E  0871               	movf	EUSART1_SetTxInterruptHandler@interruptHandler,w
 17782     1F2F  00E5               	movwf	_EUSART1_TxDefaultInterruptHandler^(0+256)
 17783     1F30                     l1267:
 17784     1F30  0008               	return
 17785     1F31                     __end_of_EUSART1_SetTxInterruptHandler:
 17786                           
 17787                           	psect	text37
 17788     1F25                     __ptext37:	
 17789 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 17790 ;; Defined at:
 17791 ;;		line 289 in file "mcc_generated_files/eusart1.c"
 17792 ;; Parameters:    Size  Location     Type
 17793 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17794 ;;		 -> EUSART2_Receive_ISR(1), EUSART1_Receive_ISR(1), 
 17795 ;; Auto vars:     Size  Location     Type
 17796 ;;		None
 17797 ;; Return value:  Size  Location     Type
 17798 ;;                  1    wreg      void 
 17799 ;; Registers used:
 17800 ;;		wreg
 17801 ;; Tracked objects:
 17802 ;;		On entry : 0/0
 17803 ;;		On exit  : 0/0
 17804 ;;		Unchanged: 0/0
 17805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17806 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17809 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17810 ;;Total ram usage:        2 bytes
 17811 ;; Hardware stack levels used: 1
 17812 ;; Hardware stack levels required when called: 4
 17813 ;; This function calls:
 17814 ;;		Nothing
 17815 ;; This function is called by:
 17816 ;;		_EUSART1_Initialize
 17817 ;; This function uses a non-reentrant model
 17818 ;;
 17819                           
 17820     1F25                     _EUSART1_SetRxInterruptHandler:	
 17821                           ;psect for function _EUSART1_SetRxInterruptHandler
 17822                           
 17823     1F25                     l13504:	
 17824                           ;incstack = 0
 17825                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
 17826                           
 17827                           
 17828                           ;mcc_generated_files/eusart1.c: 290:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 17829     1F25  0872               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
 17830     1F26  0142               	movlb	2	; select bank2
 17831     1F27  00E4               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256)
 17832     1F28  0871               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
 17833     1F29  00E3               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+256)
 17834     1F2A                     l1270:
 17835     1F2A  0008               	return
 17836     1F2B                     __end_of_EUSART1_SetRxInterruptHandler:
 17837                           
 17838                           	psect	text38
 17839     1F1F                     __ptext38:	
 17840 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 17841 ;; Defined at:
 17842 ;;		line 277 in file "mcc_generated_files/eusart1.c"
 17843 ;; Parameters:    Size  Location     Type
 17844 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17845 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 17846 ;; Auto vars:     Size  Location     Type
 17847 ;;		None
 17848 ;; Return value:  Size  Location     Type
 17849 ;;                  1    wreg      void 
 17850 ;; Registers used:
 17851 ;;		wreg
 17852 ;; Tracked objects:
 17853 ;;		On entry : 0/0
 17854 ;;		On exit  : 0/0
 17855 ;;		Unchanged: 0/0
 17856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17857 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17860 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17861 ;;Total ram usage:        2 bytes
 17862 ;; Hardware stack levels used: 1
 17863 ;; Hardware stack levels required when called: 4
 17864 ;; This function calls:
 17865 ;;		Nothing
 17866 ;; This function is called by:
 17867 ;;		_EUSART1_Initialize
 17868 ;; This function uses a non-reentrant model
 17869 ;;
 17870                           
 17871     1F1F                     _EUSART1_SetOverrunErrorHandler:	
 17872                           ;psect for function _EUSART1_SetOverrunErrorHandler
 17873                           
 17874     1F1F                     l13510:	
 17875                           ;incstack = 0
 17876                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
 17877                           
 17878                           
 17879                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_OverrunErrorHandler = interruptHandler;
 17880     1F1F  0872               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
 17881     1F20  0142               	movlb	2	; select bank2
 17882     1F21  00E0               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+256)
 17883     1F22  0871               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
 17884     1F23  00DF               	movwf	_EUSART1_OverrunErrorHandler^(0+256)
 17885     1F24                     l1261:
 17886     1F24  0008               	return
 17887     1F25                     __end_of_EUSART1_SetOverrunErrorHandler:
 17888                           
 17889                           	psect	text39
 17890     1F19                     __ptext39:	
 17891 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 17892 ;; Defined at:
 17893 ;;		line 273 in file "mcc_generated_files/eusart1.c"
 17894 ;; Parameters:    Size  Location     Type
 17895 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17896 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 17897 ;; Auto vars:     Size  Location     Type
 17898 ;;		None
 17899 ;; Return value:  Size  Location     Type
 17900 ;;                  1    wreg      void 
 17901 ;; Registers used:
 17902 ;;		wreg
 17903 ;; Tracked objects:
 17904 ;;		On entry : 0/0
 17905 ;;		On exit  : 0/0
 17906 ;;		Unchanged: 0/0
 17907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17908 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17911 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17912 ;;Total ram usage:        2 bytes
 17913 ;; Hardware stack levels used: 1
 17914 ;; Hardware stack levels required when called: 4
 17915 ;; This function calls:
 17916 ;;		Nothing
 17917 ;; This function is called by:
 17918 ;;		_EUSART1_Initialize
 17919 ;; This function uses a non-reentrant model
 17920 ;;
 17921                           
 17922     1F19                     _EUSART1_SetFramingErrorHandler:	
 17923                           ;psect for function _EUSART1_SetFramingErrorHandler
 17924                           
 17925     1F19                     l13508:	
 17926                           ;incstack = 0
 17927                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
 17928                           
 17929                           
 17930                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_FramingErrorHandler = interruptHandler;
 17931     1F19  0872               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
 17932     1F1A  0142               	movlb	2	; select bank2
 17933     1F1B  00E2               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+256)
 17934     1F1C  0871               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
 17935     1F1D  00E1               	movwf	_EUSART1_FramingErrorHandler^(0+256)
 17936     1F1E                     l1258:
 17937     1F1E  0008               	return
 17938     1F1F                     __end_of_EUSART1_SetFramingErrorHandler:
 17939                           
 17940                           	psect	text40
 17941     1F13                     __ptext40:	
 17942 ;; *************** function _EUSART1_SetErrorHandler *****************
 17943 ;; Defined at:
 17944 ;;		line 281 in file "mcc_generated_files/eusart1.c"
 17945 ;; Parameters:    Size  Location     Type
 17946 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17947 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 17948 ;; Auto vars:     Size  Location     Type
 17949 ;;		None
 17950 ;; Return value:  Size  Location     Type
 17951 ;;                  1    wreg      void 
 17952 ;; Registers used:
 17953 ;;		wreg
 17954 ;; Tracked objects:
 17955 ;;		On entry : 0/0
 17956 ;;		On exit  : 0/0
 17957 ;;		Unchanged: 0/0
 17958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17959 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17962 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17963 ;;Total ram usage:        2 bytes
 17964 ;; Hardware stack levels used: 1
 17965 ;; Hardware stack levels required when called: 4
 17966 ;; This function calls:
 17967 ;;		Nothing
 17968 ;; This function is called by:
 17969 ;;		_EUSART1_Initialize
 17970 ;; This function uses a non-reentrant model
 17971 ;;
 17972                           
 17973     1F13                     _EUSART1_SetErrorHandler:	
 17974                           ;psect for function _EUSART1_SetErrorHandler
 17975                           
 17976     1F13                     l13512:	
 17977                           ;incstack = 0
 17978                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
 17979                           
 17980                           
 17981                           ;mcc_generated_files/eusart1.c: 282:     EUSART1_ErrorHandler = interruptHandler;
 17982     1F13  0872               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
 17983     1F14  0142               	movlb	2	; select bank2
 17984     1F15  00DE               	movwf	(_EUSART1_ErrorHandler+1)^(0+256)
 17985     1F16  0871               	movf	EUSART1_SetErrorHandler@interruptHandler,w
 17986     1F17  00DD               	movwf	_EUSART1_ErrorHandler^(0+256)
 17987     1F18                     l1264:
 17988     1F18  0008               	return
 17989     1F19                     __end_of_EUSART1_SetErrorHandler:
 17990                           
 17991                           	psect	text41
 17992     1295                     __ptext41:	
 17993 ;; *************** function _RN487X_SetAsyncMessageHandler *****************
 17994 ;; Defined at:
 17995 ;;		line 328 in file "mcc_generated_files/rn487x/rn487x.c"
 17996 ;; Parameters:    Size  Location     Type
 17997 ;;  pBuffer         2    1[COMMON] PTR unsigned char 
 17998 ;;		 -> statusBuffer@main$F3783(80), statusBuffer(80), 
 17999 ;;  len             1    3[COMMON] unsigned char 
 18000 ;; Auto vars:     Size  Location     Type
 18001 ;;		None
 18002 ;; Return value:  Size  Location     Type
 18003 ;;                  1    wreg      _Bool 
 18004 ;; Registers used:
 18005 ;;		wreg, status,2, status,0
 18006 ;; Tracked objects:
 18007 ;;		On entry : 0/0
 18008 ;;		On exit  : 0/0
 18009 ;;		Unchanged: 0/0
 18010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18011 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18014 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18015 ;;Total ram usage:        3 bytes
 18016 ;; Hardware stack levels used: 1
 18017 ;; Hardware stack levels required when called: 4
 18018 ;; This function calls:
 18019 ;;		Nothing
 18020 ;; This function is called by:
 18021 ;;		_main
 18022 ;;		_RN487X_Example_Initialized
 18023 ;; This function uses a non-reentrant model
 18024 ;;
 18025                           
 18026     1295                     _RN487X_SetAsyncMessageHandler:	
 18027                           ;psect for function _RN487X_SetAsyncMessageHandler
 18028                           
 18029     1295                     l14464:	
 18030                           ;incstack = 0
 18031                           ; Regs used in _RN487X_SetAsyncMessageHandler: [wreg+status,2+status,0]
 18032                           
 18033                           
 18034                           ;mcc_generated_files/rn487x/rn487x.c: 328: _Bool RN487X_SetAsyncMessageHandler(char* pBu
      +                          ffer, uint8_t len);mcc_generated_files/rn487x/rn487x.c: 329: {;mcc_generated_files/rn487
      +                          x/rn487x.c: 330:     if ((pBuffer != ((void*)0)) && (len > 1))
 18035     1295  0871               	movf	RN487X_SetAsyncMessageHandler@pBuffer,w
 18036     1296  0472               	iorwf	RN487X_SetAsyncMessageHandler@pBuffer+1,w
 18037     1297  1903               	btfsc	3,2
 18038     1298  2A9A               	goto	u11671
 18039     1299  2A9B               	goto	u11670
 18040     129A                     u11671:
 18041     129A  2AAB               	goto	l14478
 18042     129B                     u11670:
 18043     129B                     l14466:
 18044     129B  3002               	movlw	2
 18045     129C  0273               	subwf	RN487X_SetAsyncMessageHandler@len,w
 18046     129D  1C03               	skipc
 18047     129E  2AA0               	goto	u11681
 18048     129F  2AA1               	goto	u11680
 18049     12A0                     u11681:
 18050     12A0  2AAB               	goto	l14478
 18051     12A1                     u11680:
 18052     12A1                     l14468:
 18053                           
 18054                           ;mcc_generated_files/rn487x/rn487x.c: 331:     {;mcc_generated_files/rn487x/rn487x.c: 33
      +                          2:       asyncBuffer = pBuffer;
 18055     12A1  0872               	movf	RN487X_SetAsyncMessageHandler@pBuffer+1,w
 18056     12A2  0140               	movlb	0	; select bank0
 18057     12A3  00D1               	movwf	_asyncBuffer+1
 18058     12A4  0871               	movf	RN487X_SetAsyncMessageHandler@pBuffer,w
 18059     12A5  00D0               	movwf	_asyncBuffer
 18060     12A6                     l14470:
 18061                           
 18062                           ;mcc_generated_files/rn487x/rn487x.c: 333:       asyncBufferSize = len - 1;
 18063     12A6  0873               	movf	RN487X_SetAsyncMessageHandler@len,w
 18064     12A7  3EFF               	addlw	255
 18065     12A8  00E7               	movwf	_asyncBufferSize
 18066     12A9                     l14472:
 18067                           
 18068                           ;mcc_generated_files/rn487x/rn487x.c: 334:       return 1;
 18069     12A9  3001               	movlw	1
 18070     12AA  2AAC               	goto	l952
 18071     12AB                     l14478:
 18072                           
 18073                           ;mcc_generated_files/rn487x/rn487x.c: 337:     {;mcc_generated_files/rn487x/rn487x.c: 33
      +                          8:         return 0;
 18074     12AB  3000               	movlw	0
 18075     12AC                     l952:
 18076     12AC  0008               	return
 18077     12AD                     __end_of_RN487X_SetAsyncMessageHandler:
 18078                           
 18079                           	psect	text42
 18080     1031                     __ptext42:	
 18081 ;; *************** function _RN487X_Read *****************
 18082 ;; Defined at:
 18083 ;;		line 356 in file "mcc_generated_files/rn487x/rn487x.c"
 18084 ;; Parameters:    Size  Location     Type
 18085 ;;		None
 18086 ;; Auto vars:     Size  Location     Type
 18087 ;;		None
 18088 ;; Return value:  Size  Location     Type
 18089 ;;                  1    wreg      unsigned char 
 18090 ;; Registers used:
 18091 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18092 ;; Tracked objects:
 18093 ;;		On entry : 0/0
 18094 ;;		On exit  : 0/0
 18095 ;;		Unchanged: 0/0
 18096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18101 ;;Total ram usage:        0 bytes
 18102 ;; Hardware stack levels used: 1
 18103 ;; Hardware stack levels required when called: 9
 18104 ;; This function calls:
 18105 ;;		_RN487X_DataReady
 18106 ;; This function is called by:
 18107 ;;		_main
 18108 ;;		_RN487X_Example_TransparentUart
 18109 ;; This function uses a non-reentrant model
 18110 ;;
 18111                           
 18112     1031                     _RN487X_Read:	
 18113                           ;psect for function _RN487X_Read
 18114                           
 18115     1031                     l14486:	
 18116                           ;incstack = 0
 18117                           ; Regs used in _RN487X_Read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18118                           
 18119     1031                     l14488:	
 18120                           ;mcc_generated_files/rn487x/rn487x.c: 358:     while(RN487X_DataReady() == 0);
 18121                           
 18122     1031  3193  2363  3190   	fcall	_RN487X_DataReady
 18123     1034  3A00               	xorlw	0
 18124     1035  1903               	skipnz
 18125     1036  2838               	goto	u11691
 18126     1037  2839               	goto	u11690
 18127     1038                     u11691:
 18128     1038  2831               	goto	l14488
 18129     1039                     u11690:
 18130     1039                     l14490:
 18131                           
 18132                           ;mcc_generated_files/rn487x/rn487x.c: 359:     dataReady = 0;
 18133     1039  0140               	movlb	0	; select bank0
 18134     103A  01E5               	clrf	_dataReady
 18135     103B                     l14492:
 18136                           
 18137                           ;mcc_generated_files/rn487x/rn487x.c: 360:     return peek;
 18138     103B  0866               	movf	_peek,w
 18139     103C                     l964:
 18140     103C  0008               	return
 18141     103D                     __end_of_RN487X_Read:
 18142                           
 18143                           	psect	text43
 18144     1363                     __ptext43:	
 18145 ;; *************** function _RN487X_DataReady *****************
 18146 ;; Defined at:
 18147 ;;		line 342 in file "mcc_generated_files/rn487x/rn487x.c"
 18148 ;; Parameters:    Size  Location     Type
 18149 ;;		None
 18150 ;; Auto vars:     Size  Location     Type
 18151 ;;		None
 18152 ;; Return value:  Size  Location     Type
 18153 ;;                  1    wreg      _Bool 
 18154 ;; Registers used:
 18155 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18156 ;; Tracked objects:
 18157 ;;		On entry : 0/0
 18158 ;;		On exit  : 0/0
 18159 ;;		Unchanged: 0/0
 18160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18165 ;;Total ram usage:        0 bytes
 18166 ;; Hardware stack levels used: 1
 18167 ;; Hardware stack levels required when called: 8
 18168 ;; This function calls:
 18169 ;;		_RN487X_FilterData
 18170 ;;		_RN487X_is_rx_ready
 18171 ;; This function is called by:
 18172 ;;		_RN487X_Read
 18173 ;;		_main
 18174 ;;		_RN487X_Example_TransparentUart
 18175 ;; This function uses a non-reentrant model
 18176 ;;
 18177                           
 18178     1363                     _RN487X_DataReady:	
 18179                           ;psect for function _RN487X_DataReady
 18180                           
 18181     1363                     l13650:	
 18182                           ;incstack = 0
 18183                           ; Regs used in _RN487X_DataReady: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18184                           
 18185                           
 18186                           ;mcc_generated_files/rn487x/rn487x.c: 344:     if (dataReady)
 18187     1363  0140               	movlb	0	; select bank0
 18188     1364  0865               	movf	_dataReady,w
 18189     1365  1903               	btfsc	3,2
 18190     1366  2B68               	goto	u10631
 18191     1367  2B69               	goto	u10630
 18192     1368                     u10631:
 18193     1368  2B6B               	goto	l13656
 18194     1369                     u10630:
 18195     1369                     l13652:
 18196                           
 18197                           ;mcc_generated_files/rn487x/rn487x.c: 345:     {;mcc_generated_files/rn487x/rn487x.c: 34
      +                          6:         return 1;
 18198     1369  3001               	movlw	1
 18199     136A  2B7E               	goto	l957
 18200     136B                     l13656:
 18201                           
 18202                           ;mcc_generated_files/rn487x/rn487x.c: 349:     if (RN487X.DataReady())
 18203     136B  306E               	movlw	low ((_RN487X+6)| (0+32768))
 18204     136C  0084               	movwf	4
 18205     136D  3098               	movlw	high ((_RN487X+6)| (0+32768))
 18206     136E  0085               	movwf	5
 18207     136F  3F01               	moviw [1]fsr0
 18208     1370  008A               	movwf	10
 18209     1371  3F00               	moviw [0]fsr0
 18210     1372  000A               	callw
 18211     1373  3193               	pagesel	$
 18212     1374  3A00               	xorlw	0
 18213     1375  1903               	skipnz
 18214     1376  2B78               	goto	u10641
 18215     1377  2B79               	goto	u10640
 18216     1378                     u10641:
 18217     1378  2B7D               	goto	l13662
 18218     1379                     u10640:
 18219     1379                     l13658:
 18220                           
 18221                           ;mcc_generated_files/rn487x/rn487x.c: 350:     {;mcc_generated_files/rn487x/rn487x.c: 35
      +                          1:         return RN487X_FilterData();
 18222     1379  318E  2690  3193   	fcall	_RN487X_FilterData
 18223     137C  2B7E               	goto	l957
 18224     137D                     l13662:
 18225                           
 18226                           ;mcc_generated_files/rn487x/rn487x.c: 353:     return 0;
 18227     137D  3000               	movlw	0
 18228     137E                     l957:
 18229     137E  0008               	return
 18230     137F                     __end_of_RN487X_DataReady:
 18231                           
 18232                           	psect	text44
 18233     0E90                     __ptext44:	
 18234 ;; *************** function _RN487X_FilterData *****************
 18235 ;; Defined at:
 18236 ;;		line 363 in file "mcc_generated_files/rn487x/rn487x.c"
 18237 ;; Parameters:    Size  Location     Type
 18238 ;;		None
 18239 ;; Auto vars:     Size  Location     Type
 18240 ;;  readChar        1   40[BANK0 ] unsigned char 
 18241 ;; Return value:  Size  Location     Type
 18242 ;;                  1    wreg      _Bool 
 18243 ;; Registers used:
 18244 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18245 ;; Tracked objects:
 18246 ;;		On entry : 0/0
 18247 ;;		On exit  : 0/0
 18248 ;;		Unchanged: 0/0
 18249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18251 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18252 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18253 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18254 ;;Total ram usage:        5 bytes
 18255 ;; Hardware stack levels used: 1
 18256 ;; Hardware stack levels required when called: 7
 18257 ;; This function calls:
 18258 ;;		_RN487X_MessageHandler
 18259 ;;		_RN487X_Read@rn487x_interface$F1381
 18260 ;; This function is called by:
 18261 ;;		_RN487X_DataReady
 18262 ;; This function uses a non-reentrant model
 18263 ;;
 18264                           
 18265     0E90                     _RN487X_FilterData:	
 18266                           ;psect for function _RN487X_FilterData
 18267                           
 18268     0E90                     l13456:	
 18269                           ;incstack = 0
 18270                           ; Regs used in _RN487X_FilterData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18271                           
 18272                           
 18273                           ;mcc_generated_files/rn487x/rn487x.c: 365:     static _Bool asyncBuffering = 0;;mcc_gene
      +                          rated_files/rn487x/rn487x.c: 367:     uint8_t readChar = RN487X.Read();
 18274     0E90  306A               	movlw	low ((_RN487X+2)| (0+32768))
 18275     0E91  0084               	movwf	4
 18276     0E92  3098               	movlw	high ((_RN487X+2)| (0+32768))
 18277     0E93  0085               	movwf	5
 18278     0E94  3F01               	moviw [1]fsr0
 18279     0E95  008A               	movwf	10
 18280     0E96  3F00               	moviw [0]fsr0
 18281     0E97  000A               	callw
 18282     0E98  318E               	pagesel	$
 18283     0E99  0140               	movlb	0	; select bank0
 18284     0E9A  00C8               	movwf	RN487X_FilterData@readChar
 18285     0E9B                     l13458:
 18286                           
 18287                           ;mcc_generated_files/rn487x/rn487x.c: 369:     if(asyncBuffering == 1)
 18288     0E9B  0364               	decf	RN487X_FilterData@asyncBuffering,w
 18289     0E9C  1D03               	btfss	3,2
 18290     0E9D  2E9F               	goto	u10411
 18291     0E9E  2EA0               	goto	u10410
 18292     0E9F                     u10411:
 18293     0E9F  2ED8               	goto	l13474
 18294     0EA0                     u10410:
 18295     0EA0                     l13460:
 18296                           
 18297                           ;mcc_generated_files/rn487x/rn487x.c: 370:     {;mcc_generated_files/rn487x/rn487x.c: 37
      +                          1:         if(readChar == ('%'))
 18298     0EA0  3025               	movlw	37
 18299     0EA1  0648               	xorwf	RN487X_FilterData@readChar,w
 18300     0EA2  1D03               	btfss	3,2
 18301     0EA3  2EA5               	goto	u10421
 18302     0EA4  2EA6               	goto	u10420
 18303     0EA5                     u10421:
 18304     0EA5  2EBA               	goto	l13468
 18305     0EA6                     u10420:
 18306     0EA6                     l13462:
 18307                           
 18308                           ;mcc_generated_files/rn487x/rn487x.c: 372:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 373:             asyncBuffering = 0;
 18309     0EA6  01E4               	clrf	RN487X_FilterData@asyncBuffering
 18310     0EA7                     l13464:
 18311                           
 18312                           ;mcc_generated_files/rn487x/rn487x.c: 374:             *pHead = '\0';
 18313     0EA7  084E               	movf	_pHead,w
 18314     0EA8  0086               	movwf	6
 18315     0EA9  084F               	movf	_pHead+1,w
 18316     0EAA  0087               	movwf	7
 18317     0EAB  0181               	clrf	1
 18318     0EAC                     l13466:
 18319                           
 18320                           ;mcc_generated_files/rn487x/rn487x.c: 375:             RN487X.AsyncHandler(asyncBuffer);
 18321     0EAC  0851               	movf	_asyncBuffer+1,w
 18322     0EAD  00C2               	movwf	RN487X_MessageHandler@message+1
 18323     0EAE  0850               	movf	_asyncBuffer,w
 18324     0EAF  00C1               	movwf	RN487X_MessageHandler@message
 18325     0EB0  3078               	movlw	low ((_RN487X+16)| (0+32768))
 18326     0EB1  0084               	movwf	4
 18327     0EB2  3098               	movlw	high ((_RN487X+16)| (0+32768))
 18328     0EB3  0085               	movwf	5
 18329     0EB4  3F01               	moviw [1]fsr0
 18330     0EB5  008A               	movwf	10
 18331     0EB6  3F00               	moviw [0]fsr0
 18332     0EB7  000A               	callw
 18333     0EB8  318E               	pagesel	$
 18334                           
 18335                           ;mcc_generated_files/rn487x/rn487x.c: 376:         }
 18336     0EB9  2EE9               	goto	l973
 18337     0EBA                     l13468:
 18338     0EBA  0867               	movf	_asyncBufferSize,w
 18339     0EBB  00C4               	movwf	??_RN487X_FilterData
 18340     0EBC  01C5               	clrf	??_RN487X_FilterData+1
 18341     0EBD  0844               	movf	??_RN487X_FilterData,w
 18342     0EBE  0750               	addwf	_asyncBuffer,w
 18343     0EBF  00C6               	movwf	??_RN487X_FilterData+2
 18344     0EC0  0845               	movf	??_RN487X_FilterData+1,w
 18345     0EC1  3D51               	addwfc	_asyncBuffer+1,w
 18346     0EC2  00C7               	movwf	??_RN487X_FilterData+3
 18347     0EC3  0847               	movf	??_RN487X_FilterData+3,w
 18348     0EC4  024F               	subwf	_pHead+1,w
 18349     0EC5  1D03               	skipz
 18350     0EC6  2EC9               	goto	u10435
 18351     0EC7  0846               	movf	??_RN487X_FilterData+2,w
 18352     0EC8  024E               	subwf	_pHead,w
 18353     0EC9                     u10435:
 18354     0EC9  1803               	skipnc
 18355     0ECA  2ECC               	goto	u10431
 18356     0ECB  2ECD               	goto	u10430
 18357     0ECC                     u10431:
 18358     0ECC  2EE9               	goto	l973
 18359     0ECD                     u10430:
 18360     0ECD                     l13470:
 18361                           
 18362                           ;mcc_generated_files/rn487x/rn487x.c: 378:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 379:             *pHead++ = readChar;
 18363     0ECD  084E               	movf	_pHead,w
 18364     0ECE  0086               	movwf	6
 18365     0ECF  084F               	movf	_pHead+1,w
 18366     0ED0  0087               	movwf	7
 18367     0ED1  0848               	movf	RN487X_FilterData@readChar,w
 18368     0ED2  0081               	movwf	1
 18369     0ED3                     l13472:
 18370     0ED3  3001               	movlw	1
 18371     0ED4  07CE               	addwf	_pHead,f
 18372     0ED5  3000               	movlw	0
 18373     0ED6  3DCF               	addwfc	_pHead+1,f
 18374     0ED7  2EE9               	goto	l973
 18375     0ED8                     l13474:
 18376                           
 18377                           ;mcc_generated_files/rn487x/rn487x.c: 383:     {;mcc_generated_files/rn487x/rn487x.c: 38
      +                          4:         if (readChar == ('%'))
 18378     0ED8  3025               	movlw	37
 18379     0ED9  0648               	xorwf	RN487X_FilterData@readChar,w
 18380     0EDA  1D03               	btfss	3,2
 18381     0EDB  2EDD               	goto	u10441
 18382     0EDC  2EDE               	goto	u10440
 18383     0EDD                     u10441:
 18384     0EDD  2EE5               	goto	l974
 18385     0EDE                     u10440:
 18386     0EDE                     l13476:
 18387                           
 18388                           ;mcc_generated_files/rn487x/rn487x.c: 385:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 386:             asyncBuffering = 1;
 18389     0EDE  01E4               	clrf	RN487X_FilterData@asyncBuffering
 18390     0EDF  0AE4               	incf	RN487X_FilterData@asyncBuffering,f
 18391     0EE0                     l13478:
 18392                           
 18393                           ;mcc_generated_files/rn487x/rn487x.c: 387:             pHead = asyncBuffer;
 18394     0EE0  0851               	movf	_asyncBuffer+1,w
 18395     0EE1  00CF               	movwf	_pHead+1
 18396     0EE2  0850               	movf	_asyncBuffer,w
 18397     0EE3  00CE               	movwf	_pHead
 18398                           
 18399                           ;mcc_generated_files/rn487x/rn487x.c: 388:         }
 18400     0EE4  2EE9               	goto	l973
 18401     0EE5                     l974:	
 18402                           ;mcc_generated_files/rn487x/rn487x.c: 389:         else
 18403                           
 18404                           
 18405                           ;mcc_generated_files/rn487x/rn487x.c: 390:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 391:             dataReady = 1;
 18406     0EE5  01E5               	clrf	_dataReady
 18407     0EE6  0AE5               	incf	_dataReady,f
 18408     0EE7                     l13480:
 18409                           
 18410                           ;mcc_generated_files/rn487x/rn487x.c: 392:             peek = readChar;
 18411     0EE7  0848               	movf	RN487X_FilterData@readChar,w
 18412     0EE8  00E6               	movwf	_peek
 18413     0EE9                     l973:	
 18414                           ;mcc_generated_files/rn487x/rn487x.c: 394:     }
 18415                           
 18416                           
 18417                           ;mcc_generated_files/rn487x/rn487x.c: 395:     return dataReady;
 18418     0EE9  0140               	movlb	0	; select bank0
 18419     0EEA  0865               	movf	_dataReady,w
 18420     0EEB                     l976:
 18421     0EEB  0008               	return
 18422     0EEC                     __end_of_RN487X_FilterData:
 18423                           
 18424                           	psect	text45
 18425     0A8F                     __ptext45:	
 18426 ;; *************** function _RN487X_MessageHandler *****************
 18427 ;; Defined at:
 18428 ;;		line 368 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 18429 ;; Parameters:    Size  Location     Type
 18430 ;;  message         2   33[BANK0 ] PTR unsigned char 
 18431 ;;		 -> statusBuffer@main$F3783(80), statusBuffer(80), NULL(0), 
 18432 ;; Auto vars:     Size  Location     Type
 18433 ;;  messageType     1   35[BANK0 ] enum E12962
 18434 ;; Return value:  Size  Location     Type
 18435 ;;                  1    wreg      void 
 18436 ;; Registers used:
 18437 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18438 ;; Tracked objects:
 18439 ;;		On entry : 0/0
 18440 ;;		On exit  : 0/0
 18441 ;;		Unchanged: 0/0
 18442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18443 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18444 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18446 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18447 ;;Total ram usage:        3 bytes
 18448 ;; Hardware stack levels used: 1
 18449 ;; Hardware stack levels required when called: 6
 18450 ;; This function calls:
 18451 ;;		_rn487x_PrintIndicatorCharacters
 18452 ;;		_rn487x_PrintMessage
 18453 ;;		_rn487x_PrintMessageEnd
 18454 ;;		_rn487x_PrintMessageStart
 18455 ;;		_strstr
 18456 ;; This function is called by:
 18457 ;;		_RN487X_FilterData
 18458 ;; This function uses a non-reentrant model
 18459 ;;
 18460                           
 18461     0A8F                     _RN487X_MessageHandler:	
 18462                           ;psect for function _RN487X_MessageHandler
 18463                           
 18464     0A8F                     l13370:	
 18465                           ;incstack = 0
 18466                           ; Regs used in _RN487X_MessageHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18467                           
 18468                           
 18469                           ;mcc_generated_files/rn487x/rn487x_interface.c: 368: static void RN487X_MessageHandler(c
      +                          har* message);mcc_generated_files/rn487x/rn487x_interface.c: 369: {;mcc_generated_files/
      +                          rn487x/rn487x_interface.c: 370:     RN487X_MESSAGE_TYPE messageType;;mcc_generated_files
      +                          /rn487x/rn487x_interface.c: 371:     rn487x_PrintMessageStart();
 18470     0A8F  3196  261B  318A   	fcall	_rn487x_PrintMessageStart
 18471                           
 18472                           ;mcc_generated_files/rn487x/rn487x_interface.c: 372:     if (strstr(message, "DISCONNECT
      +                          "))
 18473     0A92  0140               	movlb	0	; select bank0
 18474     0A93  0842               	movf	RN487X_MessageHandler@message+1,w
 18475     0A94  00F9               	movwf	strstr@h+1
 18476     0A95  0841               	movf	RN487X_MessageHandler@message,w
 18477     0A96  00F8               	movwf	strstr@h
 18478     0A97  3091               	movlw	low (STR_2| (0+32768))
 18479     0A98  00FA               	movwf	strstr@n
 18480     0A99  3098               	movlw	high (STR_2| (0+32768))
 18481     0A9A  00FB               	movwf	strstr@n+1
 18482     0A9B  318E  263B  318A   	fcall	_strstr
 18483     0A9E  0878               	movf	?_strstr,w
 18484     0A9F  0479               	iorwf	?_strstr+1,w
 18485     0AA0  1903               	btfsc	3,2
 18486     0AA1  2AA3               	goto	u10271
 18487     0AA2  2AA4               	goto	u10270
 18488     0AA3                     u10271:
 18489     0AA3  2AA8               	goto	l13374
 18490     0AA4                     u10270:
 18491     0AA4                     l13372:
 18492                           
 18493                           ;mcc_generated_files/rn487x/rn487x_interface.c: 373:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 374:         messageType = DISCONNECT_MSG;
 18494     0AA4  0140               	movlb	0	; select bank0
 18495     0AA5  01C3               	clrf	RN487X_MessageHandler@messageType
 18496                           
 18497                           ;mcc_generated_files/rn487x/rn487x_interface.c: 375:         connected = 0;
 18498     0AA6  01E8               	clrf	_connected
 18499                           
 18500                           ;mcc_generated_files/rn487x/rn487x_interface.c: 376:     }
 18501     0AA7  2AC3               	goto	l13380
 18502     0AA8                     l13374:
 18503     0AA8  0140               	movlb	0	; select bank0
 18504     0AA9  0842               	movf	RN487X_MessageHandler@message+1,w
 18505     0AAA  00F9               	movwf	strstr@h+1
 18506     0AAB  0841               	movf	RN487X_MessageHandler@message,w
 18507     0AAC  00F8               	movwf	strstr@h
 18508     0AAD  307A               	movlw	low (STR_4| (0+32768))
 18509     0AAE  00FA               	movwf	strstr@n
 18510     0AAF  3098               	movlw	high (STR_4| (0+32768))
 18511     0AB0  00FB               	movwf	strstr@n+1
 18512     0AB1  318E  263B  318A   	fcall	_strstr
 18513     0AB4  0878               	movf	?_strstr,w
 18514     0AB5  0479               	iorwf	?_strstr+1,w
 18515     0AB6  1903               	btfsc	3,2
 18516     0AB7  2AB9               	goto	u10281
 18517     0AB8  2ABA               	goto	u10280
 18518     0AB9                     u10281:
 18519     0AB9  2AC0               	goto	l13378
 18520     0ABA                     u10280:
 18521     0ABA                     l13376:
 18522                           
 18523                           ;mcc_generated_files/rn487x/rn487x_interface.c: 378:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 379:         messageType = STREAM_OPEN_MSG;
 18524     0ABA  0140               	movlb	0	; select bank0
 18525     0ABB  01C3               	clrf	RN487X_MessageHandler@messageType
 18526     0ABC  0AC3               	incf	RN487X_MessageHandler@messageType,f
 18527                           
 18528                           ;mcc_generated_files/rn487x/rn487x_interface.c: 380:         connected = 1;
 18529     0ABD  01E8               	clrf	_connected
 18530     0ABE  0AE8               	incf	_connected,f
 18531                           
 18532                           ;mcc_generated_files/rn487x/rn487x_interface.c: 381:     }
 18533     0ABF  2AC3               	goto	l13380
 18534     0AC0                     l13378:
 18535                           
 18536                           ;mcc_generated_files/rn487x/rn487x_interface.c: 383:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 384:         messageType = GENERAL_MSG;
 18537     0AC0  3002               	movlw	2
 18538     0AC1  0140               	movlb	0	; select bank0
 18539     0AC2  00C3               	movwf	RN487X_MessageHandler@messageType
 18540     0AC3                     l13380:
 18541                           
 18542                           ;mcc_generated_files/rn487x/rn487x_interface.c: 386:     rn487x_PrintMessage(message);
 18543     0AC3  0842               	movf	RN487X_MessageHandler@message+1,w
 18544     0AC4  00F8               	movwf	rn487x_PrintMessage@passedMessage+1
 18545     0AC5  0841               	movf	RN487X_MessageHandler@message,w
 18546     0AC6  00F7               	movwf	rn487x_PrintMessage@passedMessage
 18547     0AC7  3197  2795  318A   	fcall	_rn487x_PrintMessage
 18548     0ACA                     l13382:
 18549                           
 18550                           ;mcc_generated_files/rn487x/rn487x_interface.c: 387:     rn487x_PrintMessageEnd();
 18551     0ACA  318B  23AF  318A   	fcall	_rn487x_PrintMessageEnd
 18552     0ACD                     l13384:
 18553                           
 18554                           ;mcc_generated_files/rn487x/rn487x_interface.c: 388:     rn487x_PrintIndicatorCharacters
      +                          (messageType);
 18555     0ACD  0140               	movlb	0	; select bank0
 18556     0ACE  0843               	movf	RN487X_MessageHandler@messageType,w
 18557     0ACF  3194  2421  318A   	fcall	_rn487x_PrintIndicatorCharacters
 18558     0AD2                     l855:
 18559     0AD2  0008               	return
 18560     0AD3                     __end_of_RN487X_MessageHandler:
 18561                           
 18562                           	psect	text46
 18563     0E3B                     __ptext46:	
 18564 ;; *************** function _strstr *****************
 18565 ;; Defined at:
 18566 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strstr.c"
 18567 ;; Parameters:    Size  Location     Type
 18568 ;;  h               2    8[COMMON] PTR const unsigned char 
 18569 ;;		 -> statusBuffer@main$F3783(80), statusBuffer(80), NULL(0), 
 18570 ;;  n               2   10[COMMON] PTR const unsigned char 
 18571 ;;		 -> STR_5(12), STR_3(11), 
 18572 ;; Auto vars:     Size  Location     Type
 18573 ;;  nl              2    2[BANK0 ] unsigned int 
 18574 ;; Return value:  Size  Location     Type
 18575 ;;                  2    8[COMMON] PTR unsigned char 
 18576 ;; Registers used:
 18577 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18578 ;; Tracked objects:
 18579 ;;		On entry : 0/0
 18580 ;;		On exit  : 0/0
 18581 ;;		Unchanged: 0/0
 18582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18583 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18584 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18585 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18586 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18587 ;;Total ram usage:        8 bytes
 18588 ;; Hardware stack levels used: 1
 18589 ;; Hardware stack levels required when called: 5
 18590 ;; This function calls:
 18591 ;;		_strchr
 18592 ;;		_strlen
 18593 ;;		_strncmp
 18594 ;; This function is called by:
 18595 ;;		_RN487X_MessageHandler
 18596 ;; This function uses a non-reentrant model
 18597 ;;
 18598                           
 18599     0E3B                     _strstr:	
 18600                           ;psect for function _strstr
 18601                           
 18602     0E3B                     l13300:	
 18603                           ;incstack = 0
 18604                           ; Regs used in _strstr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18605                           
 18606     0E3B  087A               	movf	strstr@n,w
 18607     0E3C  047B               	iorwf	strstr@n+1,w
 18608     0E3D  1903               	btfsc	3,2
 18609     0E3E  2E40               	goto	u10151
 18610     0E3F  2E41               	goto	u10150
 18611     0E40                     u10151:
 18612     0E40  2E8D               	goto	l13314
 18613     0E41                     u10150:
 18614     0E41                     l13302:
 18615     0E41  087B               	movf	strstr@n+1,w
 18616     0E42  00F2               	movwf	strlen@s+1
 18617     0E43  087A               	movf	strstr@n,w
 18618     0E44  00F1               	movwf	strlen@s
 18619     0E45  3192  22AD  318E   	fcall	_strlen
 18620     0E48  0872               	movf	?_strlen+1,w
 18621     0E49  0140               	movlb	0	; select bank0
 18622     0E4A  00A3               	movwf	strstr@nl+1
 18623     0E4B  0871               	movf	?_strlen,w
 18624     0E4C  00A2               	movwf	strstr@nl
 18625     0E4D  2E7E               	goto	l13310
 18626     0E4E                     l13304:
 18627     0E4E  0879               	movf	strstr@h+1,w
 18628     0E4F  00F2               	movwf	strncmp@l+1
 18629     0E50  0878               	movf	strstr@h,w
 18630     0E51  00F1               	movwf	strncmp@l
 18631     0E52  087B               	movf	strstr@n+1,w
 18632     0E53  00F4               	movwf	strncmp@r+1
 18633     0E54  087A               	movf	strstr@n,w
 18634     0E55  00F3               	movwf	strncmp@r
 18635     0E56  0140               	movlb	0	; select bank0
 18636     0E57  0823               	movf	strstr@nl+1,w
 18637     0E58  00F6               	movwf	strncmp@n+1
 18638     0E59  0822               	movf	strstr@nl,w
 18639     0E5A  00F5               	movwf	strncmp@n
 18640     0E5B  318C  249B  318E   	fcall	_strncmp
 18641     0E5E  0871               	movf	?_strncmp,w
 18642     0E5F  0472               	iorwf	?_strncmp+1,w
 18643     0E60  1D03               	btfss	3,2
 18644     0E61  2E63               	goto	u10161
 18645     0E62  2E64               	goto	u10160
 18646     0E63                     u10161:
 18647     0E63  2E65               	goto	l13308
 18648     0E64                     u10160:
 18649     0E64                     l13306:
 18650     0E64  2E8F               	goto	l3326
 18651     0E65                     l13308:
 18652     0E65  0878               	movf	strstr@h,w
 18653     0E66  3E01               	addlw	1
 18654     0E67  00F1               	movwf	strchr@s
 18655     0E68  3000               	movlw	0
 18656     0E69  3D79               	addwfc	strstr@h+1,w
 18657     0E6A  00F2               	movwf	strchr@s+1
 18658     0E6B  087A               	movf	strstr@n,w
 18659     0E6C  0084               	movwf	4
 18660     0E6D  087B               	movf	strstr@n+1,w
 18661     0E6E  0085               	movwf	5
 18662     0E6F  0800               	movf	0,w	;code access
 18663     0E70  0140               	movlb	0	; select bank0
 18664     0E71  00A0               	movwf	??_strstr
 18665     0E72  01A1               	clrf	??_strstr+1
 18666     0E73  0820               	movf	??_strstr,w
 18667     0E74  00F3               	movwf	strchr@c
 18668     0E75  0821               	movf	??_strstr+1,w
 18669     0E76  00F4               	movwf	strchr@c+1
 18670     0E77  3193  237F  318E   	fcall	_strchr
 18671     0E7A  0872               	movf	?_strchr+1,w
 18672     0E7B  00F9               	movwf	strstr@h+1
 18673     0E7C  0871               	movf	?_strchr,w
 18674     0E7D  00F8               	movwf	strstr@h
 18675     0E7E                     l13310:
 18676     0E7E  0878               	movf	strstr@h,w
 18677     0E7F  0479               	iorwf	strstr@h+1,w
 18678     0E80  1903               	btfsc	3,2
 18679     0E81  2E83               	goto	u10171
 18680     0E82  2E84               	goto	u10170
 18681     0E83                     u10171:
 18682     0E83  2E8D               	goto	l13314
 18683     0E84                     u10170:
 18684     0E84                     l13312:
 18685     0E84  0878               	movf	strstr@h,w
 18686     0E85  0086               	movwf	6
 18687     0E86  0879               	movf	strstr@h+1,w
 18688     0E87  0087               	movwf	7
 18689     0E88  0801               	movf	1,w
 18690     0E89  1D03               	btfss	3,2
 18691     0E8A  2E8C               	goto	u10181
 18692     0E8B  2E8D               	goto	u10180
 18693     0E8C                     u10181:
 18694     0E8C  2E4E               	goto	l13304
 18695     0E8D                     u10180:
 18696     0E8D                     l13314:
 18697     0E8D  01F8               	clrf	?_strstr
 18698     0E8E  01F9               	clrf	?_strstr+1
 18699     0E8F                     l3326:
 18700     0E8F  0008               	return
 18701     0E90                     __end_of_strstr:
 18702                           
 18703                           	psect	text47
 18704     0C9B                     __ptext47:	
 18705 ;; *************** function _strncmp *****************
 18706 ;; Defined at:
 18707 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strncmp.c"
 18708 ;; Parameters:    Size  Location     Type
 18709 ;;  l               2    1[COMMON] PTR const unsigned char 
 18710 ;;		 -> statusBuffer@main$F3783(80), statusBuffer(80), NULL(0), 
 18711 ;;  r               2    3[COMMON] PTR const unsigned char 
 18712 ;;		 -> STR_5(12), STR_3(11), 
 18713 ;;  n               2    5[COMMON] unsigned int 
 18714 ;; Auto vars:     Size  Location     Type
 18715 ;;		None
 18716 ;; Return value:  Size  Location     Type
 18717 ;;                  2    1[COMMON] int 
 18718 ;; Registers used:
 18719 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 18720 ;; Tracked objects:
 18721 ;;		On entry : 0/0
 18722 ;;		On exit  : 0/0
 18723 ;;		Unchanged: 0/0
 18724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18725 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18727 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18728 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18729 ;;Total ram usage:        7 bytes
 18730 ;; Hardware stack levels used: 1
 18731 ;; Hardware stack levels required when called: 4
 18732 ;; This function calls:
 18733 ;;		Nothing
 18734 ;; This function is called by:
 18735 ;;		_strstr
 18736 ;; This function uses a non-reentrant model
 18737 ;;
 18738                           
 18739     0C9B                     _strncmp:	
 18740                           ;psect for function _strncmp
 18741                           
 18742     0C9B                     l13146:	
 18743                           ;incstack = 0
 18744                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
 18745                           
 18746     0C9B  3001               	movlw	1
 18747     0C9C  02F5               	subwf	strncmp@n,f
 18748     0C9D  3000               	movlw	0
 18749     0C9E  3BF6               	subwfb	strncmp@n+1,f
 18750     0C9F  0A75               	incf	strncmp@n,w
 18751     0CA0  1D03               	skipz
 18752     0CA1  2CA6               	goto	u9991
 18753     0CA2  0A76               	incf	strncmp@n+1,w
 18754     0CA3  1D03               	btfss	3,2
 18755     0CA4  2CA6               	goto	u9991
 18756     0CA5  2CA7               	goto	u9990
 18757     0CA6                     u9991:
 18758     0CA6  2CB6               	goto	l13154
 18759     0CA7                     u9990:
 18760     0CA7                     l13148:
 18761     0CA7  01F1               	clrf	?_strncmp
 18762     0CA8  01F2               	clrf	?_strncmp+1
 18763     0CA9  2CEC               	goto	l3339
 18764     0CAA                     l13152:
 18765     0CAA  3001               	movlw	1
 18766     0CAB  07F1               	addwf	strncmp@l,f
 18767     0CAC  3000               	movlw	0
 18768     0CAD  3DF2               	addwfc	strncmp@l+1,f
 18769     0CAE  3001               	movlw	1
 18770     0CAF  07F3               	addwf	strncmp@r,f
 18771     0CB0  3000               	movlw	0
 18772     0CB1  3DF4               	addwfc	strncmp@r+1,f
 18773     0CB2  3001               	movlw	1
 18774     0CB3  02F5               	subwf	strncmp@n,f
 18775     0CB4  3000               	movlw	0
 18776     0CB5  3BF6               	subwfb	strncmp@n+1,f
 18777     0CB6                     l13154:
 18778     0CB6  0871               	movf	strncmp@l,w
 18779     0CB7  0086               	movwf	6
 18780     0CB8  0872               	movf	strncmp@l+1,w
 18781     0CB9  0087               	movwf	7
 18782     0CBA  0801               	movf	1,w
 18783     0CBB  1903               	btfsc	3,2
 18784     0CBC  2CBE               	goto	u10001
 18785     0CBD  2CBF               	goto	u10000
 18786     0CBE                     u10001:
 18787     0CBE  2CDE               	goto	l13162
 18788     0CBF                     u10000:
 18789     0CBF                     l13156:
 18790     0CBF  0873               	movf	strncmp@r,w
 18791     0CC0  0084               	movwf	4
 18792     0CC1  0874               	movf	strncmp@r+1,w
 18793     0CC2  0085               	movwf	5
 18794     0CC3  0012               	moviw fsr0++
 18795     0CC4  1903               	btfsc	3,2
 18796     0CC5  2CC7               	goto	u10011
 18797     0CC6  2CC8               	goto	u10010
 18798     0CC7                     u10011:
 18799     0CC7  2CDE               	goto	l13162
 18800     0CC8                     u10010:
 18801     0CC8                     l13158:
 18802     0CC8  0875               	movf	strncmp@n,w
 18803     0CC9  0476               	iorwf	strncmp@n+1,w
 18804     0CCA  1903               	btfsc	3,2
 18805     0CCB  2CCD               	goto	u10021
 18806     0CCC  2CCE               	goto	u10020
 18807     0CCD                     u10021:
 18808     0CCD  2CDE               	goto	l13162
 18809     0CCE                     u10020:
 18810     0CCE                     l13160:
 18811     0CCE  0873               	movf	strncmp@r,w
 18812     0CCF  0084               	movwf	4
 18813     0CD0  0874               	movf	strncmp@r+1,w
 18814     0CD1  0085               	movwf	5
 18815     0CD2  0800               	movf	0,w	;code access
 18816     0CD3  00F7               	movwf	??_strncmp
 18817     0CD4  0871               	movf	strncmp@l,w
 18818     0CD5  0086               	movwf	6
 18819     0CD6  0872               	movf	strncmp@l+1,w
 18820     0CD7  0087               	movwf	7
 18821     0CD8  0801               	movf	1,w
 18822     0CD9  0677               	xorwf	??_strncmp,w
 18823     0CDA  1903               	skipnz
 18824     0CDB  2CDD               	goto	u10031
 18825     0CDC  2CDE               	goto	u10030
 18826     0CDD                     u10031:
 18827     0CDD  2CAA               	goto	l13152
 18828     0CDE                     u10030:
 18829     0CDE                     l13162:
 18830     0CDE  0871               	movf	strncmp@l,w
 18831     0CDF  0086               	movwf	6
 18832     0CE0  0872               	movf	strncmp@l+1,w
 18833     0CE1  0087               	movwf	7
 18834     0CE2  0873               	movf	strncmp@r,w
 18835     0CE3  0084               	movwf	4
 18836     0CE4  0874               	movf	strncmp@r+1,w
 18837     0CE5  0085               	movwf	5
 18838     0CE6  0800               	movf	0,w	;code access
 18839     0CE7  0201               	subwf	1,w
 18840     0CE8  00F1               	movwf	?_strncmp
 18841     0CE9  01F2               	clrf	?_strncmp+1
 18842     0CEA  1C03               	skipc
 18843     0CEB  03F2               	decf	?_strncmp+1,f
 18844     0CEC                     l3339:
 18845     0CEC  0008               	return
 18846     0CED                     __end_of_strncmp:
 18847                           
 18848                           	psect	text48
 18849     137F                     __ptext48:	
 18850 ;; *************** function _strchr *****************
 18851 ;; Defined at:
 18852 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strchr.c"
 18853 ;; Parameters:    Size  Location     Type
 18854 ;;  s               2    1[COMMON] PTR const unsigned char 
 18855 ;;		 -> statusBuffer@main$F3783(80), statusBuffer(80), NULL(0), 
 18856 ;;  c               2    3[COMMON] int 
 18857 ;; Auto vars:     Size  Location     Type
 18858 ;;		None
 18859 ;; Return value:  Size  Location     Type
 18860 ;;                  2    1[COMMON] PTR unsigned char 
 18861 ;; Registers used:
 18862 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18863 ;; Tracked objects:
 18864 ;;		On entry : 0/0
 18865 ;;		On exit  : 0/0
 18866 ;;		Unchanged: 0/0
 18867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18868 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18870 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18871 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18872 ;;Total ram usage:        6 bytes
 18873 ;; Hardware stack levels used: 1
 18874 ;; Hardware stack levels required when called: 4
 18875 ;; This function calls:
 18876 ;;		Nothing
 18877 ;; This function is called by:
 18878 ;;		_strstr
 18879 ;; This function uses a non-reentrant model
 18880 ;;
 18881                           
 18882     137F                     _strchr:	
 18883                           ;psect for function _strchr
 18884                           
 18885     137F                     l3332:	
 18886                           ;incstack = 0
 18887                           ; Regs used in _strchr: [wreg+fsr1l+fsr1h+status,2+status,0]
 18888                           
 18889     137F                     l13166:
 18890     137F  0871               	movf	strchr@s,w
 18891     1380  0086               	movwf	6
 18892     1381  0872               	movf	strchr@s+1,w
 18893     1382  0087               	movwf	7
 18894     1383  0801               	movf	1,w
 18895     1384  0673               	xorwf	strchr@c,w
 18896     1385  1D03               	skipz
 18897     1386  2B88               	goto	u10041
 18898     1387  2B89               	goto	u10040
 18899     1388                     u10041:
 18900     1388  2B8A               	goto	l13170
 18901     1389                     u10040:
 18902     1389                     l13168:
 18903     1389  2B9C               	goto	l3334
 18904     138A                     l13170:
 18905     138A  0872               	movf	strchr@s+1,w
 18906     138B  00F6               	movwf	??_strchr+1
 18907     138C  0871               	movf	strchr@s,w
 18908     138D  00F5               	movwf	??_strchr
 18909     138E  0AF1               	incf	strchr@s,f
 18910     138F  1903               	skipnz
 18911     1390  0AF2               	incf	strchr@s+1,f
 18912     1391  0875               	movf	??_strchr,w
 18913     1392  0086               	movwf	6
 18914     1393  0876               	movf	??_strchr+1,w
 18915     1394  0087               	movwf	7
 18916     1395  0801               	movf	1,w
 18917     1396  1D03               	btfss	3,2
 18918     1397  2B99               	goto	u10051
 18919     1398  2B9A               	goto	u10050
 18920     1399                     u10051:
 18921     1399  2B7F               	goto	l3332
 18922     139A                     u10050:
 18923     139A                     l13172:
 18924     139A  01F1               	clrf	?_strchr
 18925     139B  01F2               	clrf	?_strchr+1
 18926     139C                     l3334:
 18927     139C  0008               	return
 18928     139D                     __end_of_strchr:
 18929                           
 18930                           	psect	text49
 18931     161B                     __ptext49:	
 18932 ;; *************** function _rn487x_PrintMessageStart *****************
 18933 ;; Defined at:
 18934 ;;		line 323 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 18935 ;; Parameters:    Size  Location     Type
 18936 ;;		None
 18937 ;; Auto vars:     Size  Location     Type
 18938 ;;		None
 18939 ;; Return value:  Size  Location     Type
 18940 ;;                  1    wreg      void 
 18941 ;; Registers used:
 18942 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18943 ;; Tracked objects:
 18944 ;;		On entry : 0/0
 18945 ;;		On exit  : 0/0
 18946 ;;		Unchanged: 0/0
 18947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18952 ;;Total ram usage:        0 bytes
 18953 ;; Hardware stack levels used: 1
 18954 ;; Hardware stack levels required when called: 5
 18955 ;; This function calls:
 18956 ;;		_EUSART1_Write
 18957 ;;		_EUSART2_Write
 18958 ;; This function is called by:
 18959 ;;		_RN487X_MessageHandler
 18960 ;; This function uses a non-reentrant model
 18961 ;;
 18962                           
 18963     161B                     _rn487x_PrintMessageStart:	
 18964                           ;psect for function _rn487x_PrintMessageStart
 18965                           
 18966     161B                     l13278:	
 18967                           ;incstack = 0
 18968                           ; Regs used in _rn487x_PrintMessageStart: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18969                           
 18970                           
 18971                           ;mcc_generated_files/rn487x/rn487x_interface.c: 325:     uart[UART_CDC].Write('<');
 18972     161B  303C               	movlw	60
 18973     161C  00F1               	movwf	EUSART2_Write@txData
 18974     161D  3002               	movlw	low ((_uart+2)| (0+32768))
 18975     161E  0084               	movwf	4
 18976     161F  3098               	movlw	high ((_uart+2)| (0+32768))
 18977     1620  0085               	movwf	5
 18978     1621  3F01               	moviw [1]fsr0
 18979     1622  008A               	movwf	10
 18980     1623  3F00               	moviw [0]fsr0
 18981     1624  000A               	callw
 18982     1625  3196               	pagesel	$
 18983                           
 18984                           ;mcc_generated_files/rn487x/rn487x_interface.c: 326:     uart[UART_CDC].Write('<');
 18985     1626  303C               	movlw	60
 18986     1627  00F1               	movwf	EUSART2_Write@txData
 18987     1628  3002               	movlw	low ((_uart+2)| (0+32768))
 18988     1629  0084               	movwf	4
 18989     162A  3098               	movlw	high ((_uart+2)| (0+32768))
 18990     162B  0085               	movwf	5
 18991     162C  3F01               	moviw [1]fsr0
 18992     162D  008A               	movwf	10
 18993     162E  3F00               	moviw [0]fsr0
 18994     162F  000A               	callw
 18995     1630  3196               	pagesel	$
 18996                           
 18997                           ;mcc_generated_files/rn487x/rn487x_interface.c: 327:     uart[UART_CDC].Write('<');
 18998     1631  303C               	movlw	60
 18999     1632  00F1               	movwf	EUSART2_Write@txData
 19000     1633  3002               	movlw	low ((_uart+2)| (0+32768))
 19001     1634  0084               	movwf	4
 19002     1635  3098               	movlw	high ((_uart+2)| (0+32768))
 19003     1636  0085               	movwf	5
 19004     1637  3F01               	moviw [1]fsr0
 19005     1638  008A               	movwf	10
 19006     1639  3F00               	moviw [0]fsr0
 19007     163A  000A               	callw
 19008     163B  3196               	pagesel	$
 19009                           
 19010                           ;mcc_generated_files/rn487x/rn487x_interface.c: 328:     uart[UART_CDC].Write(' ');
 19011     163C  3020               	movlw	32
 19012     163D  00F1               	movwf	EUSART2_Write@txData
 19013     163E  3002               	movlw	low ((_uart+2)| (0+32768))
 19014     163F  0084               	movwf	4
 19015     1640  3098               	movlw	high ((_uart+2)| (0+32768))
 19016     1641  0085               	movwf	5
 19017     1642  3F01               	moviw [1]fsr0
 19018     1643  008A               	movwf	10
 19019     1644  3F00               	moviw [0]fsr0
 19020     1645  000A               	callw
 19021     1646  3196               	pagesel	$
 19022     1647                     l832:
 19023     1647  0008               	return
 19024     1648                     __end_of_rn487x_PrintMessageStart:
 19025                           
 19026                           	psect	text50
 19027     0BAF                     __ptext50:	
 19028 ;; *************** function _rn487x_PrintMessageEnd *****************
 19029 ;; Defined at:
 19030 ;;		line 331 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19031 ;; Parameters:    Size  Location     Type
 19032 ;;		None
 19033 ;; Auto vars:     Size  Location     Type
 19034 ;;		None
 19035 ;; Return value:  Size  Location     Type
 19036 ;;                  1    wreg      void 
 19037 ;; Registers used:
 19038 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19039 ;; Tracked objects:
 19040 ;;		On entry : 0/0
 19041 ;;		On exit  : 0/0
 19042 ;;		Unchanged: 0/0
 19043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19048 ;;Total ram usage:        0 bytes
 19049 ;; Hardware stack levels used: 1
 19050 ;; Hardware stack levels required when called: 5
 19051 ;; This function calls:
 19052 ;;		_EUSART1_Write
 19053 ;;		_EUSART2_Write
 19054 ;; This function is called by:
 19055 ;;		_RN487X_MessageHandler
 19056 ;; This function uses a non-reentrant model
 19057 ;;
 19058                           
 19059     0BAF                     _rn487x_PrintMessageEnd:	
 19060                           ;psect for function _rn487x_PrintMessageEnd
 19061                           
 19062     0BAF                     l13280:	
 19063                           ;incstack = 0
 19064                           ; Regs used in _rn487x_PrintMessageEnd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19065                           
 19066                           
 19067                           ;mcc_generated_files/rn487x/rn487x_interface.c: 333:     uart[UART_CDC].Write(' ');
 19068     0BAF  3020               	movlw	32
 19069     0BB0  00F1               	movwf	EUSART2_Write@txData
 19070     0BB1  3002               	movlw	low ((_uart+2)| (0+32768))
 19071     0BB2  0084               	movwf	4
 19072     0BB3  3098               	movlw	high ((_uart+2)| (0+32768))
 19073     0BB4  0085               	movwf	5
 19074     0BB5  3F01               	moviw [1]fsr0
 19075     0BB6  008A               	movwf	10
 19076     0BB7  3F00               	moviw [0]fsr0
 19077     0BB8  000A               	callw
 19078     0BB9  318B               	pagesel	$
 19079                           
 19080                           ;mcc_generated_files/rn487x/rn487x_interface.c: 334:     uart[UART_CDC].Write('>');
 19081     0BBA  303E               	movlw	62
 19082     0BBB  00F1               	movwf	EUSART2_Write@txData
 19083     0BBC  3002               	movlw	low ((_uart+2)| (0+32768))
 19084     0BBD  0084               	movwf	4
 19085     0BBE  3098               	movlw	high ((_uart+2)| (0+32768))
 19086     0BBF  0085               	movwf	5
 19087     0BC0  3F01               	moviw [1]fsr0
 19088     0BC1  008A               	movwf	10
 19089     0BC2  3F00               	moviw [0]fsr0
 19090     0BC3  000A               	callw
 19091     0BC4  318B               	pagesel	$
 19092                           
 19093                           ;mcc_generated_files/rn487x/rn487x_interface.c: 335:     uart[UART_CDC].Write('>');
 19094     0BC5  303E               	movlw	62
 19095     0BC6  00F1               	movwf	EUSART2_Write@txData
 19096     0BC7  3002               	movlw	low ((_uart+2)| (0+32768))
 19097     0BC8  0084               	movwf	4
 19098     0BC9  3098               	movlw	high ((_uart+2)| (0+32768))
 19099     0BCA  0085               	movwf	5
 19100     0BCB  3F01               	moviw [1]fsr0
 19101     0BCC  008A               	movwf	10
 19102     0BCD  3F00               	moviw [0]fsr0
 19103     0BCE  000A               	callw
 19104     0BCF  318B               	pagesel	$
 19105                           
 19106                           ;mcc_generated_files/rn487x/rn487x_interface.c: 336:     uart[UART_CDC].Write('>');
 19107     0BD0  303E               	movlw	62
 19108     0BD1  00F1               	movwf	EUSART2_Write@txData
 19109     0BD2  3002               	movlw	low ((_uart+2)| (0+32768))
 19110     0BD3  0084               	movwf	4
 19111     0BD4  3098               	movlw	high ((_uart+2)| (0+32768))
 19112     0BD5  0085               	movwf	5
 19113     0BD6  3F01               	moviw [1]fsr0
 19114     0BD7  008A               	movwf	10
 19115     0BD8  3F00               	moviw [0]fsr0
 19116     0BD9  000A               	callw
 19117     0BDA  318B               	pagesel	$
 19118                           
 19119                           ;mcc_generated_files/rn487x/rn487x_interface.c: 337:     uart[UART_CDC].Write(' ');
 19120     0BDB  3020               	movlw	32
 19121     0BDC  00F1               	movwf	EUSART2_Write@txData
 19122     0BDD  3002               	movlw	low ((_uart+2)| (0+32768))
 19123     0BDE  0084               	movwf	4
 19124     0BDF  3098               	movlw	high ((_uart+2)| (0+32768))
 19125     0BE0  0085               	movwf	5
 19126     0BE1  3F01               	moviw [1]fsr0
 19127     0BE2  008A               	movwf	10
 19128     0BE3  3F00               	moviw [0]fsr0
 19129     0BE4  000A               	callw
 19130     0BE5  318B               	pagesel	$
 19131                           
 19132                           ;mcc_generated_files/rn487x/rn487x_interface.c: 338:     uart[UART_CDC].Write('\r');
 19133     0BE6  300D               	movlw	13
 19134     0BE7  00F1               	movwf	EUSART2_Write@txData
 19135     0BE8  3002               	movlw	low ((_uart+2)| (0+32768))
 19136     0BE9  0084               	movwf	4
 19137     0BEA  3098               	movlw	high ((_uart+2)| (0+32768))
 19138     0BEB  0085               	movwf	5
 19139     0BEC  3F01               	moviw [1]fsr0
 19140     0BED  008A               	movwf	10
 19141     0BEE  3F00               	moviw [0]fsr0
 19142     0BEF  000A               	callw
 19143     0BF0  318B               	pagesel	$
 19144                           
 19145                           ;mcc_generated_files/rn487x/rn487x_interface.c: 339:     uart[UART_CDC].Write('\n');
 19146     0BF1  300A               	movlw	10
 19147     0BF2  00F1               	movwf	EUSART2_Write@txData
 19148     0BF3  3002               	movlw	low ((_uart+2)| (0+32768))
 19149     0BF4  0084               	movwf	4
 19150     0BF5  3098               	movlw	high ((_uart+2)| (0+32768))
 19151     0BF6  0085               	movwf	5
 19152     0BF7  3F01               	moviw [1]fsr0
 19153     0BF8  008A               	movwf	10
 19154     0BF9  3F00               	moviw [0]fsr0
 19155     0BFA  000A               	callw
 19156     0BFB  318B               	pagesel	$
 19157     0BFC                     l835:
 19158     0BFC  0008               	return
 19159     0BFD                     __end_of_rn487x_PrintMessageEnd:
 19160                           
 19161                           	psect	text51
 19162     1795                     __ptext51:	
 19163 ;; *************** function _rn487x_PrintMessage *****************
 19164 ;; Defined at:
 19165 ;;		line 358 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19166 ;; Parameters:    Size  Location     Type
 19167 ;;  passedMessag    2    7[COMMON] PTR unsigned char 
 19168 ;;		 -> statusBuffer@main$F3783(80), statusBuffer(80), NULL(0), 
 19169 ;; Auto vars:     Size  Location     Type
 19170 ;;  messageIndex    1   32[BANK0 ] unsigned char 
 19171 ;;  printCharact   32    0[BANK0 ] unsigned char [32]
 19172 ;; Return value:  Size  Location     Type
 19173 ;;                  1    wreg      void 
 19174 ;; Registers used:
 19175 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19176 ;; Tracked objects:
 19177 ;;		On entry : 0/0
 19178 ;;		On exit  : 0/0
 19179 ;;		Unchanged: 0/0
 19180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19181 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19182 ;;      Locals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19183 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19184 ;;      Totals:         4      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19185 ;;Total ram usage:       37 bytes
 19186 ;; Hardware stack levels used: 1
 19187 ;; Hardware stack levels required when called: 5
 19188 ;; This function calls:
 19189 ;;		_EUSART1_Write
 19190 ;;		_EUSART2_Write
 19191 ;;		_strcpy
 19192 ;;		_strlen
 19193 ;; This function is called by:
 19194 ;;		_RN487X_MessageHandler
 19195 ;; This function uses a non-reentrant model
 19196 ;;
 19197                           
 19198     1795                     _rn487x_PrintMessage:	
 19199                           ;psect for function _rn487x_PrintMessage
 19200                           
 19201     1795                     l13290:	
 19202                           ;incstack = 0
 19203                           ; Regs used in _rn487x_PrintMessage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19204                           
 19205                           
 19206                           ;mcc_generated_files/rn487x/rn487x_interface.c: 358: static __attribute__((inline)) void
      +                           rn487x_PrintMessage(char* passedMessage);mcc_generated_files/rn487x/rn487x_interface.c:
      +                           359: {;mcc_generated_files/rn487x/rn487x_interface.c: 360:     char printCharacter [(32
      +                          )];;mcc_generated_files/rn487x/rn487x_interface.c: 361:     strcpy(printCharacter, passe
      +                          dMessage);
 19207     1795  0878               	movf	rn487x_PrintMessage@passedMessage+1,w
 19208     1796  00F2               	movwf	strcpy@src+1
 19209     1797  0877               	movf	rn487x_PrintMessage@passedMessage,w
 19210     1798  00F1               	movwf	strcpy@src
 19211     1799  3020               	movlw	(low (rn487x_PrintMessage@printCharacter| 0))& (0+255)
 19212     179A  3193  2312  3197   	fcall	_strcpy
 19213     179D                     l13292:
 19214                           
 19215                           ;mcc_generated_files/rn487x/rn487x_interface.c: 362:     for (uint8_t messageIndex = 0; 
      +                          messageIndex < strlen(passedMessage); messageIndex++)
 19216     179D  0140               	movlb	0	; select bank0
 19217     179E  01C0               	clrf	rn487x_PrintMessage@messageIndex
 19218     179F  2FB4               	goto	l13298
 19219     17A0                     l13294:
 19220                           
 19221                           ;mcc_generated_files/rn487x/rn487x_interface.c: 363:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 364:         uart[UART_CDC].Write(printCharacter[messageIndex]);
 19222     17A0  0840               	movf	rn487x_PrintMessage@messageIndex,w
 19223     17A1  3E20               	addlw	(low (rn487x_PrintMessage@printCharacter| 0))& (0+255)
 19224     17A2  0086               	movwf	6
 19225     17A3  0187               	clrf	7
 19226     17A4  0801               	movf	1,w
 19227     17A5  00F1               	movwf	EUSART2_Write@txData
 19228     17A6  3002               	movlw	low ((_uart+2)| (0+32768))
 19229     17A7  0084               	movwf	4
 19230     17A8  3098               	movlw	high ((_uart+2)| (0+32768))
 19231     17A9  0085               	movwf	5
 19232     17AA  3F01               	moviw [1]fsr0
 19233     17AB  008A               	movwf	10
 19234     17AC  3F00               	moviw [0]fsr0
 19235     17AD  000A               	callw
 19236     17AE  3197               	pagesel	$
 19237     17AF                     l13296:
 19238                           
 19239                           ;mcc_generated_files/rn487x/rn487x_interface.c: 365:     }
 19240     17AF  3001               	movlw	1
 19241     17B0  00F9               	movwf	??_rn487x_PrintMessage
 19242     17B1  0879               	movf	??_rn487x_PrintMessage,w
 19243     17B2  0140               	movlb	0	; select bank0
 19244     17B3  07C0               	addwf	rn487x_PrintMessage@messageIndex,f
 19245     17B4                     l13298:
 19246     17B4  0878               	movf	rn487x_PrintMessage@passedMessage+1,w
 19247     17B5  00F2               	movwf	strlen@s+1
 19248     17B6  0877               	movf	rn487x_PrintMessage@passedMessage,w
 19249     17B7  00F1               	movwf	strlen@s
 19250     17B8  3192  22AD  3197   	fcall	_strlen
 19251     17BB  0140               	movlb	0	; select bank0
 19252     17BC  0840               	movf	rn487x_PrintMessage@messageIndex,w
 19253     17BD  00F9               	movwf	??_rn487x_PrintMessage
 19254     17BE  01FA               	clrf	??_rn487x_PrintMessage+1
 19255     17BF  0872               	movf	?_strlen+1,w
 19256     17C0  027A               	subwf	??_rn487x_PrintMessage+1,w
 19257     17C1  1D03               	skipz
 19258     17C2  2FC5               	goto	u10145
 19259     17C3  0871               	movf	?_strlen,w
 19260     17C4  0279               	subwf	??_rn487x_PrintMessage,w
 19261     17C5                     u10145:
 19262     17C5  1C03               	skipc
 19263     17C6  2FC8               	goto	u10141
 19264     17C7  2FC9               	goto	u10140
 19265     17C8                     u10141:
 19266     17C8  2FA0               	goto	l13294
 19267     17C9                     u10140:
 19268     17C9                     l848:
 19269     17C9  0008               	return
 19270     17CA                     __end_of_rn487x_PrintMessage:
 19271                           
 19272                           	psect	text52
 19273     1312                     __ptext52:	
 19274 ;; *************** function _strcpy *****************
 19275 ;; Defined at:
 19276 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strcpy.c"
 19277 ;; Parameters:    Size  Location     Type
 19278 ;;  dest            1    wreg     PTR unsigned char 
 19279 ;;		 -> rn487x_PrintMessage@printCharacter(32), 
 19280 ;;  src             2    1[COMMON] PTR const unsigned char 
 19281 ;;		 -> statusBuffer@main$F3783(80), statusBuffer(80), NULL(0), 
 19282 ;; Auto vars:     Size  Location     Type
 19283 ;;  dest            1    6[COMMON] PTR unsigned char 
 19284 ;;		 -> rn487x_PrintMessage@printCharacter(32), 
 19285 ;;  d               1    5[COMMON] PTR unsigned char 
 19286 ;;		 -> rn487x_PrintMessage@printCharacter(32), 
 19287 ;; Return value:  Size  Location     Type
 19288 ;;                  1    wreg      PTR unsigned char 
 19289 ;; Registers used:
 19290 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 19291 ;; Tracked objects:
 19292 ;;		On entry : 0/0
 19293 ;;		On exit  : 0/0
 19294 ;;		Unchanged: 0/0
 19295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19296 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19297 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19298 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19299 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19300 ;;Total ram usage:        6 bytes
 19301 ;; Hardware stack levels used: 1
 19302 ;; Hardware stack levels required when called: 4
 19303 ;; This function calls:
 19304 ;;		Nothing
 19305 ;; This function is called by:
 19306 ;;		_rn487x_PrintMessage
 19307 ;; This function uses a non-reentrant model
 19308 ;;
 19309                           
 19310     1312                     _strcpy:	
 19311                           ;psect for function _strcpy
 19312                           
 19313                           
 19314                           ;incstack = 0
 19315                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0]
 19316                           ;strcpy@dest stored from wreg
 19317     1312  00F6               	movwf	strcpy@dest
 19318     1313                     l13076:
 19319     1313  0876               	movf	strcpy@dest,w
 19320     1314  00F5               	movwf	strcpy@d
 19321     1315                     l13078:
 19322     1315  0875               	movf	strcpy@d,w
 19323     1316  0086               	movwf	6
 19324     1317  0187               	clrf	7
 19325     1318  0AF5               	incf	strcpy@d,f
 19326     1319  0872               	movf	strcpy@src+1,w
 19327     131A  00F4               	movwf	??_strcpy+1
 19328     131B  0871               	movf	strcpy@src,w
 19329     131C  00F3               	movwf	??_strcpy
 19330     131D  0AF1               	incf	strcpy@src,f
 19331     131E  1903               	skipnz
 19332     131F  0AF2               	incf	strcpy@src+1,f
 19333     1320  0873               	movf	??_strcpy,w
 19334     1321  0084               	movwf	4
 19335     1322  0874               	movf	??_strcpy+1,w
 19336     1323  0085               	movwf	5
 19337     1324  0800               	movf	0,w
 19338     1325  3FC0               	movwi [0]fsr1
 19339     1326  0889               	movf	9,f
 19340     1327  1D03               	btfss	3,2
 19341     1328  2B2A               	goto	u9901
 19342     1329  2B2B               	goto	u9900
 19343     132A                     u9901:
 19344     132A  2B15               	goto	l13078
 19345     132B                     u9900:
 19346     132B                     l3307:
 19347     132B  0008               	return
 19348     132C                     __end_of_strcpy:
 19349                           
 19350                           	psect	text53
 19351     1421                     __ptext53:	
 19352 ;; *************** function _rn487x_PrintIndicatorCharacters *****************
 19353 ;; Defined at:
 19354 ;;		line 342 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19355 ;; Parameters:    Size  Location     Type
 19356 ;;  messageType     1    wreg     enum E12962
 19357 ;; Auto vars:     Size  Location     Type
 19358 ;;  messageType     1    3[COMMON] enum E12962
 19359 ;; Return value:  Size  Location     Type
 19360 ;;                  1    wreg      void 
 19361 ;; Registers used:
 19362 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19363 ;; Tracked objects:
 19364 ;;		On entry : 0/0
 19365 ;;		On exit  : 0/0
 19366 ;;		Unchanged: 0/0
 19367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19369 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19371 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19372 ;;Total ram usage:        1 bytes
 19373 ;; Hardware stack levels used: 1
 19374 ;; Hardware stack levels required when called: 5
 19375 ;; This function calls:
 19376 ;;		_EUSART1_Write
 19377 ;;		_EUSART2_Write
 19378 ;; This function is called by:
 19379 ;;		_RN487X_MessageHandler
 19380 ;; This function uses a non-reentrant model
 19381 ;;
 19382                           
 19383     1421                     _rn487x_PrintIndicatorCharacters:	
 19384                           ;psect for function _rn487x_PrintIndicatorCharacters
 19385                           
 19386                           
 19387                           ;incstack = 0
 19388                           ; Regs used in _rn487x_PrintIndicatorCharacters: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 19389                           ;rn487x_PrintIndicatorCharacters@messageType stored from wreg
 19390     1421  00F3               	movwf	rn487x_PrintIndicatorCharacters@messageType
 19391     1422                     l13282:
 19392                           
 19393                           ;mcc_generated_files/rn487x/rn487x_interface.c: 342: static __attribute__((inline)) void
      +                           rn487x_PrintIndicatorCharacters(RN487X_MESSAGE_TYPE messageType);mcc_generated_files/rn
      +                          487x/rn487x_interface.c: 343: {;mcc_generated_files/rn487x/rn487x_interface.c: 344:     
      +                          if (DISCONNECT_MSG == messageType)
 19394     1422  0873               	movf	rn487x_PrintIndicatorCharacters@messageType,w
 19395     1423  1D03               	btfss	3,2
 19396     1424  2C26               	goto	u10121
 19397     1425  2C27               	goto	u10120
 19398     1426                     u10121:
 19399     1426  2C33               	goto	l13286
 19400     1427                     u10120:
 19401     1427                     l13284:
 19402                           
 19403                           ;mcc_generated_files/rn487x/rn487x_interface.c: 345:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 346:         uart[UART_CDC].Write('[');
 19404     1427  305B               	movlw	91
 19405     1428  00F1               	movwf	EUSART2_Write@txData
 19406     1429  3002               	movlw	low ((_uart+2)| (0+32768))
 19407     142A  0084               	movwf	4
 19408     142B  3098               	movlw	high ((_uart+2)| (0+32768))
 19409     142C  0085               	movwf	5
 19410     142D  3F01               	moviw [1]fsr0
 19411     142E  008A               	movwf	10
 19412     142F  3F00               	moviw [0]fsr0
 19413     1430  000A               	callw
 19414     1431  3194               	pagesel	$
 19415                           
 19416                           ;mcc_generated_files/rn487x/rn487x_interface.c: 347:     }
 19417     1432  2C43               	goto	l842
 19418     1433                     l13286:
 19419     1433  0373               	decf	rn487x_PrintIndicatorCharacters@messageType,w
 19420     1434  1D03               	btfss	3,2
 19421     1435  2C37               	goto	u10131
 19422     1436  2C38               	goto	u10130
 19423     1437                     u10131:
 19424     1437  2C43               	goto	l842
 19425     1438                     u10130:
 19426     1438                     l13288:
 19427                           
 19428                           ;mcc_generated_files/rn487x/rn487x_interface.c: 349:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 350:         uart[UART_CDC].Write(']');
 19429     1438  305D               	movlw	93
 19430     1439  00F1               	movwf	EUSART2_Write@txData
 19431     143A  3002               	movlw	low ((_uart+2)| (0+32768))
 19432     143B  0084               	movwf	4
 19433     143C  3098               	movlw	high ((_uart+2)| (0+32768))
 19434     143D  0085               	movwf	5
 19435     143E  3F01               	moviw [1]fsr0
 19436     143F  008A               	movwf	10
 19437     1440  3F00               	moviw [0]fsr0
 19438     1441  000A               	callw
 19439     1442  3194               	pagesel	$
 19440     1443                     l842:	
 19441                           ;mcc_generated_files/rn487x/rn487x_interface.c: 351:     }
 19442                           
 19443     1443  0008               	return
 19444     1444                     __end_of_rn487x_PrintIndicatorCharacters:
 19445                           
 19446                           	psect	text54
 19447     1000                     __ptext54:	
 19448 ;; *************** function _RN487X_IsConnected *****************
 19449 ;; Defined at:
 19450 ;;		line 243 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19451 ;; Parameters:    Size  Location     Type
 19452 ;;		None
 19453 ;; Auto vars:     Size  Location     Type
 19454 ;;		None
 19455 ;; Return value:  Size  Location     Type
 19456 ;;                  1    wreg      _Bool 
 19457 ;; Registers used:
 19458 ;;		wreg
 19459 ;; Tracked objects:
 19460 ;;		On entry : 0/0
 19461 ;;		On exit  : 0/0
 19462 ;;		Unchanged: 0/0
 19463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19468 ;;Total ram usage:        0 bytes
 19469 ;; Hardware stack levels used: 1
 19470 ;; Hardware stack levels required when called: 4
 19471 ;; This function calls:
 19472 ;;		Nothing
 19473 ;; This function is called by:
 19474 ;;		_main
 19475 ;;		_RN487X_Example_TransparentUart
 19476 ;; This function uses a non-reentrant model
 19477 ;;
 19478                           
 19479     1000                     _RN487X_IsConnected:	
 19480                           ;psect for function _RN487X_IsConnected
 19481                           
 19482     1000                     l14482:	
 19483                           ;incstack = 0
 19484                           ; Regs used in _RN487X_IsConnected: [wreg]
 19485                           
 19486                           
 19487                           ;mcc_generated_files/rn487x/rn487x_interface.c: 245:     return connected;
 19488     1000  0140               	movlb	0	; select bank0
 19489     1001  0868               	movf	_connected,w
 19490     1002                     l783:
 19491     1002  0008               	return
 19492     1003                     __end_of_RN487X_IsConnected:
 19493                           
 19494                           	psect	text55
 19495     07A1                     __ptext55:	
 19496 ;; *************** function _RN487X_Init *****************
 19497 ;; Defined at:
 19498 ;;		line 54 in file "mcc_generated_files/rn487x/rn487x.c"
 19499 ;; Parameters:    Size  Location     Type
 19500 ;;		None
 19501 ;; Auto vars:     Size  Location     Type
 19502 ;;		None
 19503 ;; Return value:  Size  Location     Type
 19504 ;;                  1    wreg      _Bool 
 19505 ;; Registers used:
 19506 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19507 ;; Tracked objects:
 19508 ;;		On entry : 0/0
 19509 ;;		On exit  : 0/0
 19510 ;;		Unchanged: 0/0
 19511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19516 ;;Total ram usage:        0 bytes
 19517 ;; Hardware stack levels used: 1
 19518 ;; Hardware stack levels required when called: 6
 19519 ;; This function calls:
 19520 ;;		_RN487X_Delay
 19521 ;;		_RN487X_IndicateRx
 19522 ;;		_RN487X_Read@rn487x_interface$F1381
 19523 ;;		_RN487X_Reset
 19524 ;;		_RN487X_SetSystemMode
 19525 ;;		_RN487X_is_rx_ready
 19526 ;; This function is called by:
 19527 ;;		_main
 19528 ;; This function uses a non-reentrant model
 19529 ;;
 19530                           
 19531     07A1                     _RN487X_Init:	
 19532                           ;psect for function _RN487X_Init
 19533                           
 19534     07A1                     l14496:	
 19535                           ;incstack = 0
 19536                           ; Regs used in _RN487X_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19537                           
 19538                           
 19539                           ;mcc_generated_files/rn487x/rn487x.c: 57:     RN487X.SetSystemMode(APPLICATION_MODE);
 19540     07A1  01F1               	clrf	RN487X_SetSystemMode@mode
 19541     07A2  0AF1               	incf	RN487X_SetSystemMode@mode,f
 19542     07A3  3074               	movlw	low ((_RN487X+12)| (0+32768))
 19543     07A4  0084               	movwf	4
 19544     07A5  3098               	movlw	high ((_RN487X+12)| (0+32768))
 19545     07A6  0085               	movwf	5
 19546     07A7  3F01               	moviw [1]fsr0
 19547     07A8  008A               	movwf	10
 19548     07A9  3F00               	moviw [0]fsr0
 19549     07AA  000A               	callw
 19550     07AB  3187               	pagesel	$
 19551                           
 19552                           ;mcc_generated_files/rn487x/rn487x.c: 59:     RN487X.ResetModule(1);
 19553     07AC  01F1               	clrf	RN487X_Reset@value
 19554     07AD  0AF1               	incf	RN487X_Reset@value,f
 19555     07AE  3072               	movlw	low ((_RN487X+10)| (0+32768))
 19556     07AF  0084               	movwf	4
 19557     07B0  3098               	movlw	high ((_RN487X+10)| (0+32768))
 19558     07B1  0085               	movwf	5
 19559     07B2  3F01               	moviw [1]fsr0
 19560     07B3  008A               	movwf	10
 19561     07B4  3F00               	moviw [0]fsr0
 19562     07B5  000A               	callw
 19563     07B6  3187               	pagesel	$
 19564                           
 19565                           ;mcc_generated_files/rn487x/rn487x.c: 61:     RN487X.DelayMs((1));
 19566     07B7  3001               	movlw	1
 19567     07B8  00F4               	movwf	RN487X_Delay@delayCount
 19568     07B9  3000               	movlw	0
 19569     07BA  00F5               	movwf	RN487X_Delay@delayCount+1
 19570     07BB  3076               	movlw	low ((_RN487X+14)| (0+32768))
 19571     07BC  0084               	movwf	4
 19572     07BD  3098               	movlw	high ((_RN487X+14)| (0+32768))
 19573     07BE  0085               	movwf	5
 19574     07BF  3F01               	moviw [1]fsr0
 19575     07C0  008A               	movwf	10
 19576     07C1  3F00               	moviw [0]fsr0
 19577     07C2  000A               	callw
 19578     07C3  3187               	pagesel	$
 19579                           
 19580                           ;mcc_generated_files/rn487x/rn487x.c: 63:     RN487X.ResetModule(0);
 19581     07C4  01F1               	clrf	RN487X_Reset@value
 19582     07C5  3072               	movlw	low ((_RN487X+10)| (0+32768))
 19583     07C6  0084               	movwf	4
 19584     07C7  3098               	movlw	high ((_RN487X+10)| (0+32768))
 19585     07C8  0085               	movwf	5
 19586     07C9  3F01               	moviw [1]fsr0
 19587     07CA  008A               	movwf	10
 19588     07CB  3F00               	moviw [0]fsr0
 19589     07CC  000A               	callw
 19590     07CD  3187               	pagesel	$
 19591                           
 19592                           ;mcc_generated_files/rn487x/rn487x.c: 66:     RN487X.IndicateRx(1);
 19593     07CE  01F1               	clrf	RN487X_IndicateRx@value
 19594     07CF  0AF1               	incf	RN487X_IndicateRx@value,f
 19595     07D0  3070               	movlw	low ((_RN487X+8)| (0+32768))
 19596     07D1  0084               	movwf	4
 19597     07D2  3098               	movlw	high ((_RN487X+8)| (0+32768))
 19598     07D3  0085               	movwf	5
 19599     07D4  3F01               	moviw [1]fsr0
 19600     07D5  008A               	movwf	10
 19601     07D6  3F00               	moviw [0]fsr0
 19602     07D7  000A               	callw
 19603     07D8  3187               	pagesel	$
 19604                           
 19605                           ;mcc_generated_files/rn487x/rn487x.c: 68:     RN487X.DelayMs((200));
 19606     07D9  30C8               	movlw	200
 19607     07DA  00F4               	movwf	RN487X_Delay@delayCount
 19608     07DB  3000               	movlw	0
 19609     07DC  00F5               	movwf	RN487X_Delay@delayCount+1
 19610     07DD  3076               	movlw	low ((_RN487X+14)| (0+32768))
 19611     07DE  0084               	movwf	4
 19612     07DF  3098               	movlw	high ((_RN487X+14)| (0+32768))
 19613     07E0  0085               	movwf	5
 19614     07E1  3F01               	moviw [1]fsr0
 19615     07E2  008A               	movwf	10
 19616     07E3  3F00               	moviw [0]fsr0
 19617     07E4  000A               	callw
 19618     07E5  3187               	pagesel	$
 19619                           
 19620                           ;mcc_generated_files/rn487x/rn487x.c: 71:     while (RN487X.DataReady())
 19621     07E6  2FF0               	goto	l14500
 19622     07E7                     l14498:
 19623                           
 19624                           ;mcc_generated_files/rn487x/rn487x.c: 72:     {;mcc_generated_files/rn487x/rn487x.c: 73:
      +                                   RN487X.Read();
 19625     07E7  306A               	movlw	low ((_RN487X+2)| (0+32768))
 19626     07E8  0084               	movwf	4
 19627     07E9  3098               	movlw	high ((_RN487X+2)| (0+32768))
 19628     07EA  0085               	movwf	5
 19629     07EB  3F01               	moviw [1]fsr0
 19630     07EC  008A               	movwf	10
 19631     07ED  3F00               	moviw [0]fsr0
 19632     07EE  000A               	callw
 19633     07EF  3187               	pagesel	$
 19634     07F0                     l14500:
 19635                           
 19636                           ;mcc_generated_files/rn487x/rn487x.c: 71:     while (RN487X.DataReady())
 19637     07F0  306E               	movlw	low ((_RN487X+6)| (0+32768))
 19638     07F1  0084               	movwf	4
 19639     07F2  3098               	movlw	high ((_RN487X+6)| (0+32768))
 19640     07F3  0085               	movwf	5
 19641     07F4  3F01               	moviw [1]fsr0
 19642     07F5  008A               	movwf	10
 19643     07F6  3F00               	moviw [0]fsr0
 19644     07F7  000A               	callw
 19645     07F8  3187               	pagesel	$
 19646     07F9  3A00               	xorlw	0
 19647     07FA  1D03               	skipz
 19648     07FB  2FFD               	goto	u11701
 19649     07FC  2FFE               	goto	u11700
 19650     07FD                     u11701:
 19651     07FD  2FE7               	goto	l14498
 19652     07FE                     u11700:
 19653     07FE                     l879:
 19654     07FE  0008               	return
 19655     07FF                     __end_of_RN487X_Init:
 19656                           
 19657                           	psect	text56
 19658     1FC1                     __ptext56:	
 19659 ;; *************** function _RN487X_is_rx_ready *****************
 19660 ;; Defined at:
 19661 ;;		line 267 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19662 ;; Parameters:    Size  Location     Type
 19663 ;;		None
 19664 ;; Auto vars:     Size  Location     Type
 19665 ;;		None
 19666 ;; Return value:  Size  Location     Type
 19667 ;;                  1    wreg      _Bool 
 19668 ;; Registers used:
 19669 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 19670 ;; Tracked objects:
 19671 ;;		On entry : 0/0
 19672 ;;		On exit  : 0/0
 19673 ;;		Unchanged: 0/0
 19674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19679 ;;Total ram usage:        0 bytes
 19680 ;; Hardware stack levels used: 1
 19681 ;; Hardware stack levels required when called: 5
 19682 ;; This function calls:
 19683 ;;		_EUSART1_is_rx_ready
 19684 ;;		_EUSART2_is_rx_ready
 19685 ;; This function is called by:
 19686 ;;		_RN487X_DataReady
 19687 ;;		_RN487X_Init
 19688 ;; This function uses a non-reentrant model
 19689 ;;
 19690                           
 19691     1FC1                     _RN487X_is_rx_ready:	
 19692                           ;psect for function _RN487X_is_rx_ready
 19693                           
 19694     1FC1                     l13452:	
 19695                           ;incstack = 0
 19696                           ; Regs used in _RN487X_is_rx_ready: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 19697                           
 19698                           
 19699                           ;mcc_generated_files/rn487x/rn487x_interface.c: 269:     return uart[UART_BLE].DataReady
      +                          ();
 19700     1FC1  301A               	movlw	low ((_uart+26)| (0+32768))
 19701     1FC2  0084               	movwf	4
 19702     1FC3  3098               	movlw	high ((_uart+26)| (0+32768))
 19703     1FC4  0085               	movwf	5
 19704     1FC5  3F01               	moviw [1]fsr0
 19705     1FC6  008A               	movwf	10
 19706     1FC7  3F00               	moviw [0]fsr0
 19707     1FC8  000A               	callw
 19708     1FC9  319F               	pagesel	$
 19709     1FCA                     l795:
 19710     1FCA  0008               	return
 19711     1FCB                     __end_of_RN487X_is_rx_ready:
 19712                           
 19713                           	psect	text57
 19714     1F9B                     __ptext57:	
 19715 ;; *************** function _EUSART1_is_rx_ready *****************
 19716 ;; Defined at:
 19717 ;;		line 137 in file "mcc_generated_files/eusart1.c"
 19718 ;; Parameters:    Size  Location     Type
 19719 ;;		None
 19720 ;; Auto vars:     Size  Location     Type
 19721 ;;		None
 19722 ;; Return value:  Size  Location     Type
 19723 ;;                  1    wreg      _Bool 
 19724 ;; Registers used:
 19725 ;;		wreg, status,2, status,0
 19726 ;; Tracked objects:
 19727 ;;		On entry : 0/0
 19728 ;;		On exit  : 0/0
 19729 ;;		Unchanged: 0/0
 19730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19735 ;;Total ram usage:        0 bytes
 19736 ;; Hardware stack levels used: 1
 19737 ;; Hardware stack levels required when called: 4
 19738 ;; This function calls:
 19739 ;;		Nothing
 19740 ;; This function is called by:
 19741 ;;		_RN487X_is_rx_ready
 19742 ;;		_RN487X_Example_TransparentUart
 19743 ;;		_main
 19744 ;; This function uses a non-reentrant model
 19745 ;;
 19746                           
 19747     1F9B                     _EUSART1_is_rx_ready:	
 19748                           ;psect for function _EUSART1_is_rx_ready
 19749                           
 19750     1F9B                     l13390:	
 19751                           ;incstack = 0
 19752                           ; Regs used in _EUSART1_is_rx_ready: [wreg+status,2+status,0]
 19753                           
 19754                           
 19755                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
 19756     1F9B  0140               	movlb	0	; select bank0
 19757     1F9C  0858               	movf	_eusart1RxCount,w	;volatile
 19758     1F9D  1D03               	btfss	3,2
 19759     1F9E  2FA0               	goto	u10311
 19760     1F9F  2FA2               	goto	u10310
 19761     1FA0                     u10311:
 19762     1FA0  3001               	movlw	1
 19763     1FA1  2FA3               	goto	u10320
 19764     1FA2                     u10310:
 19765     1FA2  3000               	movlw	0
 19766     1FA3                     u10320:
 19767     1FA3                     l1201:
 19768     1FA3  0008               	return
 19769     1FA4                     __end_of_EUSART1_is_rx_ready:
 19770                           
 19771                           	psect	text58
 19772     1F92                     __ptext58:	
 19773 ;; *************** function _EUSART2_is_rx_ready *****************
 19774 ;; Defined at:
 19775 ;;		line 137 in file "mcc_generated_files/eusart2.c"
 19776 ;; Parameters:    Size  Location     Type
 19777 ;;		None
 19778 ;; Auto vars:     Size  Location     Type
 19779 ;;		None
 19780 ;; Return value:  Size  Location     Type
 19781 ;;                  1    wreg      _Bool 
 19782 ;; Registers used:
 19783 ;;		wreg, status,2, status,0
 19784 ;; Tracked objects:
 19785 ;;		On entry : 0/0
 19786 ;;		On exit  : 0/0
 19787 ;;		Unchanged: 0/0
 19788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19793 ;;Total ram usage:        0 bytes
 19794 ;; Hardware stack levels used: 1
 19795 ;; Hardware stack levels required when called: 4
 19796 ;; This function calls:
 19797 ;;		Nothing
 19798 ;; This function is called by:
 19799 ;;		_RN487X_is_rx_ready
 19800 ;;		_RN487X_Example_TransparentUart
 19801 ;;		_main
 19802 ;; This function uses a non-reentrant model
 19803 ;;
 19804                           
 19805     1F92                     _EUSART2_is_rx_ready:	
 19806                           ;psect for function _EUSART2_is_rx_ready
 19807                           
 19808     1F92                     l13386:	
 19809                           ;incstack = 0
 19810                           ; Regs used in _EUSART2_is_rx_ready: [wreg+status,2+status,0]
 19811                           
 19812                           
 19813                           ;mcc_generated_files/eusart2.c: 139:     return (eusart2RxCount ? 1 : 0);
 19814     1F92  0140               	movlb	0	; select bank0
 19815     1F93  085F               	movf	_eusart2RxCount,w	;volatile
 19816     1F94  1D03               	btfss	3,2
 19817     1F95  2F97               	goto	u10291
 19818     1F96  2F99               	goto	u10290
 19819     1F97                     u10291:
 19820     1F97  3001               	movlw	1
 19821     1F98  2F9A               	goto	u10300
 19822     1F99                     u10290:
 19823     1F99  3000               	movlw	0
 19824     1F9A                     u10300:
 19825     1F9A                     l1057:
 19826     1F9A  0008               	return
 19827     1F9B                     __end_of_EUSART2_is_rx_ready:
 19828                           
 19829                           	psect	text59
 19830     1025                     __ptext59:	
 19831 ;; *************** function _RN487X_SetSystemMode *****************
 19832 ;; Defined at:
 19833 ;;		line 301 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19834 ;; Parameters:    Size  Location     Type
 19835 ;;  mode            1    1[COMMON] enum E204
 19836 ;; Auto vars:     Size  Location     Type
 19837 ;;		None
 19838 ;; Return value:  Size  Location     Type
 19839 ;;                  1    wreg      void 
 19840 ;; Registers used:
 19841 ;;		wreg, status,2, status,0
 19842 ;; Tracked objects:
 19843 ;;		On entry : 0/0
 19844 ;;		On exit  : 0/0
 19845 ;;		Unchanged: 0/0
 19846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19847 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19850 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19851 ;;Total ram usage:        1 bytes
 19852 ;; Hardware stack levels used: 1
 19853 ;; Hardware stack levels required when called: 4
 19854 ;; This function calls:
 19855 ;;		Nothing
 19856 ;; This function is called by:
 19857 ;;		_RN487X_Init
 19858 ;; This function uses a non-reentrant model
 19859 ;;
 19860                           
 19861     1025                     _RN487X_SetSystemMode:	
 19862                           ;psect for function _RN487X_SetSystemMode
 19863                           
 19864     1025                     l819:	
 19865                           ;incstack = 0
 19866                           ; Regs used in _RN487X_SetSystemMode: [wreg+status,2+status,0]
 19867                           ;mcc_generated_files/rn487x/rn487x_interface.c: 301: static void RN487X_SetSystemMode(RN
      +                          487X_SYSTEM_MODES_t mode);mcc_generated_files/rn487x/rn487x_interface.c: 302: {;mcc_gene
      +                          rated_files/rn487x/rn487x_interface.c: 304:     do { TRISAbits.TRISA7 = 0; } while(0);
 19868                           
 19869     1025  0140               	movlb	0	; select bank0
 19870     1026  1392               	bcf	18,7	;volatile
 19871     1027                     l13670:
 19872                           
 19873                           ;mcc_generated_files/rn487x/rn487x_interface.c: 306:     if (APPLICATION_MODE == mode)
 19874     1027  0371               	decf	RN487X_SetSystemMode@mode,w
 19875     1028  1D03               	btfss	3,2
 19876     1029  282B               	goto	u10671
 19877     102A  282C               	goto	u10670
 19878     102B                     u10671:
 19879     102B  282E               	goto	l825
 19880     102C                     u10670:
 19881     102C                     l822:	
 19882                           ;mcc_generated_files/rn487x/rn487x_interface.c: 307:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 308:         do { LATAbits.LATA7 = 1; } while(0);
 19883                           
 19884     102C  1798               	bsf	24,7	;volatile
 19885     102D  282F               	goto	l827
 19886     102E                     l825:	
 19887                           ;mcc_generated_files/rn487x/rn487x_interface.c: 311:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 312:         do { LATAbits.LATA7 = 0; } while(0);
 19888                           
 19889     102E  1398               	bcf	24,7	;volatile
 19890     102F                     l827:	
 19891                           ;mcc_generated_files/rn487x/rn487x_interface.c: 316:     do { TRISAbits.TRISA7 = 1; } wh
      +                          ile(0);
 19892                           
 19893     102F  1792               	bsf	18,7	;volatile
 19894     1030                     l829:
 19895     1030  0008               	return
 19896     1031                     __end_of_RN487X_SetSystemMode:
 19897                           
 19898                           	psect	text60
 19899     1003                     __ptext60:	
 19900 ;; *************** function _RN487X_Reset *****************
 19901 ;; Defined at:
 19902 ;;		line 277 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19903 ;; Parameters:    Size  Location     Type
 19904 ;;  value           1    1[COMMON] _Bool 
 19905 ;; Auto vars:     Size  Location     Type
 19906 ;;		None
 19907 ;; Return value:  Size  Location     Type
 19908 ;;                  1    wreg      void 
 19909 ;; Registers used:
 19910 ;;		wreg, status,2, status,0
 19911 ;; Tracked objects:
 19912 ;;		On entry : 0/0
 19913 ;;		On exit  : 0/0
 19914 ;;		Unchanged: 0/0
 19915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19916 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19919 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19920 ;;Total ram usage:        1 bytes
 19921 ;; Hardware stack levels used: 1
 19922 ;; Hardware stack levels required when called: 4
 19923 ;; This function calls:
 19924 ;;		Nothing
 19925 ;; This function is called by:
 19926 ;;		_RN487X_Init
 19927 ;; This function uses a non-reentrant model
 19928 ;;
 19929                           
 19930     1003                     _RN487X_Reset:	
 19931                           ;psect for function _RN487X_Reset
 19932                           
 19933     1003                     l13666:	
 19934                           ;incstack = 0
 19935                           ; Regs used in _RN487X_Reset: [wreg+status,2+status,0]
 19936                           
 19937                           
 19938                           ;mcc_generated_files/rn487x/rn487x_interface.c: 277: static void RN487X_Reset(_Bool valu
      +                          e);mcc_generated_files/rn487x/rn487x_interface.c: 278: {;mcc_generated_files/rn487x/rn48
      +                          7x_interface.c: 279:     if (1 == value)
 19939     1003  0371               	decf	RN487X_Reset@value,w
 19940     1004  1D03               	btfss	3,2
 19941     1005  2807               	goto	u10651
 19942     1006  2808               	goto	u10650
 19943     1007                     u10651:
 19944     1007  280B               	goto	l805
 19945     1008                     u10650:
 19946     1008                     l802:	
 19947                           ;mcc_generated_files/rn487x/rn487x_interface.c: 280:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 281:         do { LATAbits.LATA0 = 0; } while(0);
 19948                           
 19949     1008  0140               	movlb	0	; select bank0
 19950     1009  1018               	bcf	24,0	;volatile
 19951     100A  280D               	goto	l807
 19952     100B                     l805:	
 19953                           ;mcc_generated_files/rn487x/rn487x_interface.c: 284:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 285:         do { LATAbits.LATA0 = 1; } while(0);
 19954                           
 19955     100B  0140               	movlb	0	; select bank0
 19956     100C  1418               	bsf	24,0	;volatile
 19957     100D                     l807:
 19958     100D  0008               	return
 19959     100E                     __end_of_RN487X_Reset:
 19960                           
 19961                           	psect	text61
 19962     1FF5                     __ptext61:	
 19963 ;; *************** function _RN487X_IndicateRx *****************
 19964 ;; Defined at:
 19965 ;;		line 289 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19966 ;; Parameters:    Size  Location     Type
 19967 ;;  value           1    1[COMMON] _Bool 
 19968 ;; Auto vars:     Size  Location     Type
 19969 ;;		None
 19970 ;; Return value:  Size  Location     Type
 19971 ;;                  1    wreg      void 
 19972 ;; Registers used:
 19973 ;;		wreg, status,2, status,0
 19974 ;; Tracked objects:
 19975 ;;		On entry : 0/0
 19976 ;;		On exit  : 0/0
 19977 ;;		Unchanged: 0/0
 19978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19979 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19982 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19983 ;;Total ram usage:        1 bytes
 19984 ;; Hardware stack levels used: 1
 19985 ;; Hardware stack levels required when called: 4
 19986 ;; This function calls:
 19987 ;;		Nothing
 19988 ;; This function is called by:
 19989 ;;		_RN487X_Init
 19990 ;; This function uses a non-reentrant model
 19991 ;;
 19992                           
 19993     1FF5                     _RN487X_IndicateRx:	
 19994                           ;psect for function _RN487X_IndicateRx
 19995                           
 19996     1FF5                     l13668:	
 19997                           ;incstack = 0
 19998                           ; Regs used in _RN487X_IndicateRx: [wreg+status,2+status,0]
 19999                           
 20000                           
 20001                           ;mcc_generated_files/rn487x/rn487x_interface.c: 289: static void RN487X_IndicateRx(_Bool
      +                           value);mcc_generated_files/rn487x/rn487x_interface.c: 290: {;mcc_generated_files/rn487x
      +                          /rn487x_interface.c: 291:     if (1 == value)
 20002     1FF5  0371               	decf	RN487X_IndicateRx@value,w
 20003     1FF6  1D03               	btfss	3,2
 20004     1FF7  2FF9               	goto	u10661
 20005     1FF8  2FFA               	goto	u10660
 20006     1FF9                     u10661:
 20007     1FF9  2FFD               	goto	l814
 20008     1FFA                     u10660:
 20009     1FFA                     l811:	
 20010                           ;mcc_generated_files/rn487x/rn487x_interface.c: 292:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 293:         do { LATCbits.LATC6 = 0; } while(0);
 20011                           
 20012     1FFA  0140               	movlb	0	; select bank0
 20013     1FFB  131A               	bcf	26,6	;volatile
 20014     1FFC  2FFF               	goto	l816
 20015     1FFD                     l814:	
 20016                           ;mcc_generated_files/rn487x/rn487x_interface.c: 296:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 297:         do { LATCbits.LATC6 = 1; } while(0);
 20017                           
 20018     1FFD  0140               	movlb	0	; select bank0
 20019     1FFE  171A               	bsf	26,6	;volatile
 20020     1FFF                     l816:
 20021     1FFF  0008               	return
 20022     2000                     __end_of_RN487X_IndicateRx:
 20023                           
 20024                           	psect	text62
 20025     12C6                     __ptext62:	
 20026 ;; *************** function _LIGHTBLUE_TemperatureSensor *****************
 20027 ;; Defined at:
 20028 ;;		line 311 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20029 ;; Parameters:    Size  Location     Type
 20030 ;;		None
 20031 ;; Auto vars:     Size  Location     Type
 20032 ;;  payload         5   26[BANK0 ] unsigned char [5]
 20033 ;;  temperature     2   31[BANK0 ] short 
 20034 ;; Return value:  Size  Location     Type
 20035 ;;                  1    wreg      void 
 20036 ;; Registers used:
 20037 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20038 ;; Tracked objects:
 20039 ;;		On entry : 0/0
 20040 ;;		On exit  : 0/0
 20041 ;;		Unchanged: 0/0
 20042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20044 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20046 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20047 ;;Total ram usage:        7 bytes
 20048 ;; Hardware stack levels used: 1
 20049 ;; Hardware stack levels required when called: 15
 20050 ;; This function calls:
 20051 ;;		_LIGHTBLUE_SendPacket
 20052 ;;		_LIGHTBLUE_SplitWord
 20053 ;;		_TMAG5273_GetTemperatureValue
 20054 ;; This function is called by:
 20055 ;;		_main
 20056 ;; This function uses a non-reentrant model
 20057 ;;
 20058                           
 20059     12C6                     _LIGHTBLUE_TemperatureSensor:	
 20060                           ;psect for function _LIGHTBLUE_TemperatureSensor
 20061                           
 20062     12C6                     l14320:	
 20063                           ;incstack = 0
 20064                           ; Regs used in _LIGHTBLUE_TemperatureSensor: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 20065                           
 20066                           
 20067                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 312:     char payload[5];;mcc_gene
      +                          rated_files/application/LIGHTBLUE_service.c: 313:     int16_t temperature;;mcc_generated
      +                          _files/application/LIGHTBLUE_service.c: 315:     *payload = '\0';
 20068     12C6  0140               	movlb	0	; select bank0
 20069     12C7  01BA               	clrf	LIGHTBLUE_TemperatureSensor@payload
 20070     12C8                     l14322:
 20071                           
 20072                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 319:     TMAG5273_GetTemperatureVa
      +                          lue(temperature);
 20073     12C8  0840               	movf	LIGHTBLUE_TemperatureSensor@temperature+1,w
 20074     12C9  00B9               	movwf	TMAG5273_GetTemperatureValue@temperature+1
 20075     12CA  083F               	movf	LIGHTBLUE_TemperatureSensor@temperature,w
 20076     12CB  00B8               	movwf	TMAG5273_GetTemperatureValue@temperature
 20077     12CC  3190  2057  3192   	fcall	_TMAG5273_GetTemperatureValue
 20078     12CF                     l14324:
 20079                           
 20080                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 321:     LIGHTBLUE_SplitWord(paylo
      +                          ad, temperature);
 20081     12CF  0140               	movlb	0	; select bank0
 20082     12D0  0840               	movf	LIGHTBLUE_TemperatureSensor@temperature+1,w
 20083     12D1  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 20084     12D2  083F               	movf	LIGHTBLUE_TemperatureSensor@temperature,w
 20085     12D3  00F9               	movwf	LIGHTBLUE_SplitWord@value
 20086     12D4  303A               	movlw	(low (LIGHTBLUE_TemperatureSensor@payload| 0))& (0+255)
 20087     12D5  3190  2080  3192   	fcall	_LIGHTBLUE_SplitWord
 20088     12D8                     l14326:
 20089                           
 20090                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 323:     LIGHTBLUE_SendPacket(TEMP
      +                          ERATURE_DATA_ID, payload);
 20091     12D8  303A               	movlw	(low (LIGHTBLUE_TemperatureSensor@payload| 0))& (0+255)
 20092     12D9  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 20093     12DA  3054               	movlw	84
 20094     12DB  318F  2774  3192   	fcall	_LIGHTBLUE_SendPacket
 20095     12DE                     l124:
 20096     12DE  0008               	return
 20097     12DF                     __end_of_LIGHTBLUE_TemperatureSensor:
 20098                           
 20099                           	psect	text63
 20100     1057                     __ptext63:	
 20101 ;; *************** function _TMAG5273_GetTemperatureValue *****************
 20102 ;; Defined at:
 20103 ;;		line 2550 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 20104 ;; Parameters:    Size  Location     Type
 20105 ;;  temperature     2   24[BANK0 ] PTR short 
 20106 ;;		 -> RAM(8192), 
 20107 ;; Auto vars:     Size  Location     Type
 20108 ;;		None
 20109 ;; Return value:  Size  Location     Type
 20110 ;;                  1    wreg      void 
 20111 ;; Registers used:
 20112 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20113 ;; Tracked objects:
 20114 ;;		On entry : 0/0
 20115 ;;		On exit  : 0/0
 20116 ;;		Unchanged: 0/0
 20117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20118 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20121 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20122 ;;Total ram usage:        2 bytes
 20123 ;; Hardware stack levels used: 1
 20124 ;; Hardware stack levels required when called: 14
 20125 ;; This function calls:
 20126 ;;		_TMAG5273_CalcTemperature
 20127 ;; This function is called by:
 20128 ;;		_LIGHTBLUE_TemperatureSensor
 20129 ;; This function uses a non-reentrant model
 20130 ;;
 20131                           
 20132     1057                     _TMAG5273_GetTemperatureValue:	
 20133                           ;psect for function _TMAG5273_GetTemperatureValue
 20134                           
 20135     1057                     l13602:	
 20136                           ;incstack = 0
 20137                           ; Regs used in _TMAG5273_GetTemperatureValue: [wreg-fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 20138                           
 20139                           
 20140                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2551:     *temperature
      +                           = TMAG5273_CalcTemperature();
 20141     1057  3194  248C  3190   	fcall	_TMAG5273_CalcTemperature
 20142     105A  0140               	movlb	0	; select bank0
 20143     105B  0838               	movf	TMAG5273_GetTemperatureValue@temperature,w
 20144     105C  0086               	movwf	6
 20145     105D  0839               	movf	TMAG5273_GetTemperatureValue@temperature+1,w
 20146     105E  0087               	movwf	7
 20147     105F  082D               	movf	?_TMAG5273_CalcTemperature,w
 20148     1060  3FC0               	movwi [0]fsr1
 20149     1061  082E               	movf	?_TMAG5273_CalcTemperature+1,w
 20150     1062  3FC1               	movwi [1]fsr1
 20151     1063                     l2690:
 20152     1063  0008               	return
 20153     1064                     __end_of_TMAG5273_GetTemperatureValue:
 20154                           
 20155                           	psect	text64
 20156     148C                     __ptext64:	
 20157 ;; *************** function _TMAG5273_CalcTemperature *****************
 20158 ;; Defined at:
 20159 ;;		line 2554 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 20160 ;; Parameters:    Size  Location     Type
 20161 ;;		None
 20162 ;; Auto vars:     Size  Location     Type
 20163 ;;  temperatureD    2   22[BANK0 ] short 
 20164 ;;  lowerByte       1   21[BANK0 ] unsigned char 
 20165 ;;  upperByte       1   20[BANK0 ] unsigned char 
 20166 ;; Return value:  Size  Location     Type
 20167 ;;                  2   13[BANK0 ] short 
 20168 ;; Registers used:
 20169 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20170 ;; Tracked objects:
 20171 ;;		On entry : 0/0
 20172 ;;		On exit  : 0/0
 20173 ;;		Unchanged: 0/0
 20174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20175 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20176 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20177 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20178 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20179 ;;Total ram usage:       11 bytes
 20180 ;; Hardware stack levels used: 1
 20181 ;; Hardware stack levels required when called: 13
 20182 ;; This function calls:
 20183 ;;		_i2c_read2ByteRegister
 20184 ;; This function is called by:
 20185 ;;		_TMAG5273_GetTemperatureValue
 20186 ;; This function uses a non-reentrant model
 20187 ;;
 20188                           
 20189     148C                     _TMAG5273_CalcTemperature:	
 20190                           ;psect for function _TMAG5273_CalcTemperature
 20191                           
 20192     148C                     l13568:	
 20193                           ;incstack = 0
 20194                           ; Regs used in _TMAG5273_CalcTemperature: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20195                           
 20196                           
 20197                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2555:     int16_t temp
      +                          eratureData;;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2556:     
      +                          uint8_t upperByte;;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2557
      +                          :     uint8_t lowerByte;;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c
      +                          : 2559:     temperatureData = i2c_read2ByteRegister(0X22, TMAG5273_REG_T_MSB_RESULT);
 20198     148C  3010               	movlw	16
 20199     148D  0140               	movlb	0	; select bank0
 20200     148E  00A4               	movwf	i2c_read2ByteRegister@reg
 20201     148F  3022               	movlw	34
 20202     1490  318A  224C  3194   	fcall	_i2c_read2ByteRegister
 20203     1493  0140               	movlb	0	; select bank0
 20204     1494  0825               	movf	?_i2c_read2ByteRegister+1,w
 20205     1495  00B7               	movwf	TMAG5273_CalcTemperature@temperatureData+1
 20206     1496  0824               	movf	?_i2c_read2ByteRegister,w
 20207     1497  00B6               	movwf	TMAG5273_CalcTemperature@temperatureData
 20208     1498                     l13570:
 20209                           
 20210                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2560:     upperByte = 
      +                          ((temperatureData & (0xFF00)) >> 8) & (0x1F);
 20211     1498  0837               	movf	TMAG5273_CalcTemperature@temperatureData+1,w
 20212     1499  391F               	andlw	31
 20213     149A  00B4               	movwf	TMAG5273_CalcTemperature@upperByte
 20214     149B                     l13572:
 20215                           
 20216                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2561:     lowerByte = 
      +                          (uint8_t) temperatureData;
 20217     149B  0836               	movf	TMAG5273_CalcTemperature@temperatureData,w
 20218     149C  00B5               	movwf	TMAG5273_CalcTemperature@lowerByte
 20219     149D                     l13574:
 20220                           
 20221                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2563:     temperatureD
      +                          ata = ((int16_t) (upperByte << 8) | lowerByte);
 20222     149D  0835               	movf	TMAG5273_CalcTemperature@lowerByte,w
 20223     149E  00AF               	movwf	??_TMAG5273_CalcTemperature
 20224     149F  01B0               	clrf	??_TMAG5273_CalcTemperature+1
 20225     14A0  0834               	movf	TMAG5273_CalcTemperature@upperByte,w
 20226     14A1  00B1               	movwf	??_TMAG5273_CalcTemperature+2
 20227     14A2  01B2               	clrf	??_TMAG5273_CalcTemperature+3
 20228     14A3  0831               	movf	??_TMAG5273_CalcTemperature+2,w
 20229     14A4  00B2               	movwf	??_TMAG5273_CalcTemperature+3
 20230     14A5  01B1               	clrf	??_TMAG5273_CalcTemperature+2
 20231     14A6  082F               	movf	??_TMAG5273_CalcTemperature,w
 20232     14A7  0431               	iorwf	??_TMAG5273_CalcTemperature+2,w
 20233     14A8  00B6               	movwf	TMAG5273_CalcTemperature@temperatureData
 20234     14A9  0830               	movf	??_TMAG5273_CalcTemperature+1,w
 20235     14AA  0432               	iorwf	??_TMAG5273_CalcTemperature+3,w
 20236     14AB  00B7               	movwf	TMAG5273_CalcTemperature@temperatureData+1
 20237     14AC                     l13576:
 20238                           
 20239                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2565:     return tempe
      +                          ratureData;
 20240     14AC  0837               	movf	TMAG5273_CalcTemperature@temperatureData+1,w
 20241     14AD  00AE               	movwf	?_TMAG5273_CalcTemperature+1
 20242     14AE  0836               	movf	TMAG5273_CalcTemperature@temperatureData,w
 20243     14AF  00AD               	movwf	?_TMAG5273_CalcTemperature
 20244     14B0                     l2693:
 20245     14B0  0008               	return
 20246     14B1                     __end_of_TMAG5273_CalcTemperature:
 20247                           
 20248                           	psect	text65
 20249     0A4C                     __ptext65:	
 20250 ;; *************** function _i2c_read2ByteRegister *****************
 20251 ;; Defined at:
 20252 ;;		line 135 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 20253 ;; Parameters:    Size  Location     Type
 20254 ;;  address         1    wreg     unsigned char 
 20255 ;;  reg             1    4[BANK0 ] unsigned char 
 20256 ;; Auto vars:     Size  Location     Type
 20257 ;;  address         1   10[BANK0 ] unsigned char 
 20258 ;;  result          2   11[BANK0 ] unsigned short 
 20259 ;; Return value:  Size  Location     Type
 20260 ;;                  2    4[BANK0 ] unsigned short 
 20261 ;; Registers used:
 20262 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20263 ;; Tracked objects:
 20264 ;;		On entry : 0/0
 20265 ;;		On exit  : 0/0
 20266 ;;		Unchanged: 0/0
 20267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20268 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20269 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20270 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20271 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20272 ;;Total ram usage:        9 bytes
 20273 ;; Hardware stack levels used: 1
 20274 ;; Hardware stack levels required when called: 12
 20275 ;; This function calls:
 20276 ;;		_I2C1_Close
 20277 ;;		_I2C1_MasterWrite
 20278 ;;		_I2C1_Open
 20279 ;;		_I2C1_SetAddressNackCallback
 20280 ;;		_I2C1_SetBuffer
 20281 ;;		_I2C1_SetDataCompleteCallback
 20282 ;; This function is called by:
 20283 ;;		_TMAG5273_GetManufacture
 20284 ;;		_TMAG5273_CalcTemperature
 20285 ;;		_MCP9844_GetManufacture
 20286 ;;		_MCP9844_GetDevice
 20287 ;;		_MCP9844_CalcTemperature
 20288 ;;		_TMAG5273_GetDevice
 20289 ;; This function uses a non-reentrant model
 20290 ;;
 20291                           
 20292     0A4C                     _i2c_read2ByteRegister:	
 20293                           ;psect for function _i2c_read2ByteRegister
 20294                           
 20295                           
 20296                           ;incstack = 0
 20297                           ; Regs used in _i2c_read2ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20298                           ;i2c_read2ByteRegister@address stored from wreg
 20299     0A4C  0140               	movlb	0	; select bank0
 20300     0A4D  00AA               	movwf	i2c_read2ByteRegister@address
 20301     0A4E                     l13344:
 20302     0A4E                     l13346:	
 20303                           ;mcc_generated_files/drivers/i2c_simple_master.c: 135: uint16_t i2c_read2ByteRegister(i2
      +                          c1_address_t address, uint8_t reg);mcc_generated_files/drivers/i2c_simple_master.c: 136:
      +                           {;mcc_generated_files/drivers/i2c_simple_master.c: 138:     uint16_t result;;mcc_genera
      +                          ted_files/drivers/i2c_simple_master.c: 140:     while(!I2C1_Open(address));
 20304                           
 20305     0A4E  0140               	movlb	0	; select bank0
 20306     0A4F  082A               	movf	i2c_read2ByteRegister@address,w
 20307     0A50  3197  27CA  318A   	fcall	_I2C1_Open
 20308     0A53  3A00               	xorlw	0
 20309     0A54  1903               	skipnz
 20310     0A55  2A57               	goto	u10251
 20311     0A56  2A58               	goto	u10250
 20312     0A57                     u10251:
 20313     0A57  2A4E               	goto	l13346
 20314     0A58                     u10250:
 20315     0A58                     l13348:
 20316                           
 20317                           ;mcc_generated_files/drivers/i2c_simple_master.c: 141:     I2C1_SetDataCompleteCallback(
      +                          rd2RegCompleteHandler,&result);
 20318     0A58  30EF               	movlw	low _rd2RegCompleteHandler
 20319     0A59  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 20320     0A5A  3010               	movlw	high _rd2RegCompleteHandler
 20321     0A5B  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 20322     0A5C  302B               	movlw	(low (i2c_read2ByteRegister@result| 0))& (0+255)
 20323     0A5D  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 20324     0A5E  319F  27DF  318A   	fcall	_I2C1_SetDataCompleteCallback
 20325     0A61                     l13350:
 20326                           
 20327                           ;mcc_generated_files/drivers/i2c_simple_master.c: 142:     I2C1_SetBuffer(&reg,1);
 20328     0A61  3001               	movlw	1
 20329     0A62  00F1               	movwf	I2C1_SetBuffer@bufferSize
 20330     0A63  3000               	movlw	0
 20331     0A64  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 20332     0A65  3024               	movlw	(low (i2c_read2ByteRegister@reg| 0))& (0+255)
 20333     0A66  3190  2064  318A   	fcall	_I2C1_SetBuffer
 20334     0A69                     l13352:
 20335                           
 20336                           ;mcc_generated_files/drivers/i2c_simple_master.c: 143:     I2C1_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
 20337     0A69  3000               	movlw	0
 20338     0A6A  00F5               	movwf	I2C1_SetAddressNackCallback@cb
 20339     0A6B  00F6               	movwf	I2C1_SetAddressNackCallback@cb+1
 20340     0A6C  3000               	movlw	0
 20341     0A6D  00F7               	movwf	I2C1_SetAddressNackCallback@ptr
 20342     0A6E  00F8               	movwf	I2C1_SetAddressNackCallback@ptr+1
 20343     0A6F  319F  27EA  318A   	fcall	_I2C1_SetAddressNackCallback
 20344     0A72                     l13354:
 20345                           
 20346                           ;mcc_generated_files/drivers/i2c_simple_master.c: 144:     I2C1_MasterWrite();
 20347     0A72  319E  26E1  318A   	fcall	_I2C1_MasterWrite
 20348     0A75                     l13356:	
 20349                           ;mcc_generated_files/drivers/i2c_simple_master.c: 145:     while(I2C1_BUSY == I2C1_Close
      +                          ());
 20350                           
 20351     0A75  3192  224D  318A   	fcall	_I2C1_Close
 20352     0A78  3A01               	xorlw	1
 20353     0A79  1903               	skipnz
 20354     0A7A  2A7C               	goto	u10261
 20355     0A7B  2A7D               	goto	u10260
 20356     0A7C                     u10261:
 20357     0A7C  2A75               	goto	l13356
 20358     0A7D                     u10260:
 20359     0A7D                     l13358:
 20360                           
 20361                           ;mcc_generated_files/drivers/i2c_simple_master.c: 147:     return (result << 8 | result 
      +                          >> 8);
 20362     0A7D  0140               	movlb	0	; select bank0
 20363     0A7E  082C               	movf	i2c_read2ByteRegister@result+1,w
 20364     0A7F  00A7               	movwf	??_i2c_read2ByteRegister+1
 20365     0A80  082B               	movf	i2c_read2ByteRegister@result,w
 20366     0A81  00A6               	movwf	??_i2c_read2ByteRegister
 20367     0A82  0827               	movf	??_i2c_read2ByteRegister+1,w
 20368     0A83  00A6               	movwf	??_i2c_read2ByteRegister
 20369     0A84  01A7               	clrf	??_i2c_read2ByteRegister+1
 20370     0A85  082B               	movf	i2c_read2ByteRegister@result,w
 20371     0A86  00A9               	movwf	??_i2c_read2ByteRegister+3
 20372     0A87  01A8               	clrf	??_i2c_read2ByteRegister+2
 20373     0A88  0826               	movf	??_i2c_read2ByteRegister,w
 20374     0A89  0428               	iorwf	??_i2c_read2ByteRegister+2,w
 20375     0A8A  00A4               	movwf	?_i2c_read2ByteRegister
 20376     0A8B  0827               	movf	??_i2c_read2ByteRegister+1,w
 20377     0A8C  0429               	iorwf	??_i2c_read2ByteRegister+3,w
 20378     0A8D  00A5               	movwf	?_i2c_read2ByteRegister+1
 20379     0A8E                     l546:
 20380     0A8E  0008               	return
 20381     0A8F                     __end_of_i2c_read2ByteRegister:
 20382                           
 20383                           	psect	text66
 20384     065C                     __ptext66:	
 20385 ;; *************** function _LIGHTBLUE_SendSerialData *****************
 20386 ;; Defined at:
 20387 ;;		line 385 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20388 ;; Parameters:    Size  Location     Type
 20389 ;;  serialData      1    wreg     PTR unsigned char 
 20390 ;;		 -> lightBlueSerial(80), 
 20391 ;; Auto vars:     Size  Location     Type
 20392 ;;  serialData      1    9[COMMON] PTR unsigned char 
 20393 ;;		 -> lightBlueSerial(80), 
 20394 ;;  length          1    8[COMMON] unsigned char 
 20395 ;; Return value:  Size  Location     Type
 20396 ;;                  1    wreg      void 
 20397 ;; Registers used:
 20398 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20399 ;; Tracked objects:
 20400 ;;		On entry : 0/0
 20401 ;;		On exit  : 0/0
 20402 ;;		Unchanged: 0/0
 20403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20405 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20406 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20407 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20408 ;;Total ram usage:        3 bytes
 20409 ;; Hardware stack levels used: 1
 20410 ;; Hardware stack levels required when called: 6
 20411 ;; This function calls:
 20412 ;;		_RN487X_Write
 20413 ;;		_strlen
 20414 ;; This function is called by:
 20415 ;;		_main
 20416 ;; This function uses a non-reentrant model
 20417 ;;
 20418                           
 20419     065C                     _LIGHTBLUE_SendSerialData:	
 20420                           ;psect for function _LIGHTBLUE_SendSerialData
 20421                           
 20422                           
 20423                           ;incstack = 0
 20424                           ; Regs used in _LIGHTBLUE_SendSerialData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20425                           ;LIGHTBLUE_SendSerialData@serialData stored from wreg
 20426     065C  00F9               	movwf	LIGHTBLUE_SendSerialData@serialData
 20427     065D                     l14374:
 20428                           
 20429                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 386:     uint8_t length = strlen(s
      +                          erialData) * 2;
 20430     065D  0879               	movf	LIGHTBLUE_SendSerialData@serialData,w
 20431     065E  00F1               	movwf	strlen@s
 20432     065F  3002               	movlw	2
 20433     0660  00F2               	movwf	strlen@s+1
 20434     0661  3192  22AD  3186   	fcall	_strlen
 20435     0664  0871               	movf	?_strlen,w
 20436     0665  0709               	addwf	9,w
 20437     0666  00F8               	movwf	LIGHTBLUE_SendSerialData@length
 20438     0667                     l14376:
 20439                           
 20440                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 388:     RN487X.Write(('['));
 20441     0667  305B               	movlw	91
 20442     0668  00F6               	movwf	RN487X_Write@txData
 20443     0669  3068               	movlw	low (_RN487X| (0+32768))
 20444     066A  0084               	movwf	4
 20445     066B  3098               	movlw	high (_RN487X| (0+32768))
 20446     066C  0085               	movwf	5
 20447     066D  3F01               	moviw [1]fsr0
 20448     066E  008A               	movwf	10
 20449     066F  3F00               	moviw [0]fsr0
 20450     0670  000A               	callw
 20451     0671  3186               	pagesel	$
 20452     0672                     l14378:
 20453                           
 20454                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 389:     RN487X.Write((_hex[(seque
      +                          nceNumber++) & 0xF]));
 20455     0672  0140               	movlb	0	; select bank0
 20456     0673  086C               	movf	_sequenceNumber,w
 20457     0674  390F               	andlw	15
 20458     0675  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 20459     0676  0086               	movwf	6
 20460     0677  3001               	movlw	1	; select bank2/3
 20461     0678  0087               	movwf	7
 20462     0679  0801               	movf	1,w
 20463     067A  00F6               	movwf	RN487X_Write@txData
 20464     067B  3068               	movlw	low (_RN487X| (0+32768))
 20465     067C  0084               	movwf	4
 20466     067D  3098               	movlw	high (_RN487X| (0+32768))
 20467     067E  0085               	movwf	5
 20468     067F  3F01               	moviw [1]fsr0
 20469     0680  008A               	movwf	10
 20470     0681  3F00               	moviw [0]fsr0
 20471     0682  000A               	callw
 20472     0683  3186               	pagesel	$
 20473     0684                     l14380:
 20474     0684  3001               	movlw	1
 20475     0685  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 20476     0686  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 20477     0687  0140               	movlb	0	; select bank0
 20478     0688  07EC               	addwf	_sequenceNumber,f
 20479     0689                     l14382:
 20480                           
 20481                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 390:     RN487X.Write(SERIAL_DATA_
      +                          ID);
 20482     0689  3053               	movlw	83
 20483     068A  00F6               	movwf	RN487X_Write@txData
 20484     068B  3068               	movlw	low (_RN487X| (0+32768))
 20485     068C  0084               	movwf	4
 20486     068D  3098               	movlw	high (_RN487X| (0+32768))
 20487     068E  0085               	movwf	5
 20488     068F  3F01               	moviw [1]fsr0
 20489     0690  008A               	movwf	10
 20490     0691  3F00               	moviw [0]fsr0
 20491     0692  000A               	callw
 20492     0693  3186               	pagesel	$
 20493     0694                     l14384:
 20494                           
 20495                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 391:     RN487X.Write((_hex[(lengt
      +                          h >> 4) & 0xF]));
 20496     0694  0878               	movf	LIGHTBLUE_SendSerialData@length,w
 20497     0695  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 20498     0696  3004               	movlw	4
 20499     0697                     u11565:
 20500     0697  36F7               	lsrf	??_LIGHTBLUE_SendSerialData,f
 20501     0698  0B89               	decfsz	9,f
 20502     0699  2E97               	goto	u11565
 20503     069A  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 20504     069B  390F               	andlw	15
 20505     069C  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 20506     069D  0086               	movwf	6
 20507     069E  3001               	movlw	1	; select bank2/3
 20508     069F  0087               	movwf	7
 20509     06A0  0801               	movf	1,w
 20510     06A1  00F6               	movwf	RN487X_Write@txData
 20511     06A2  3068               	movlw	low (_RN487X| (0+32768))
 20512     06A3  0084               	movwf	4
 20513     06A4  3098               	movlw	high (_RN487X| (0+32768))
 20514     06A5  0085               	movwf	5
 20515     06A6  3F01               	moviw [1]fsr0
 20516     06A7  008A               	movwf	10
 20517     06A8  3F00               	moviw [0]fsr0
 20518     06A9  000A               	callw
 20519     06AA  3186               	pagesel	$
 20520     06AB                     l14386:
 20521                           
 20522                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 392:     RN487X.Write((_hex[(lengt
      +                          h) & 0xF]));
 20523     06AB  0878               	movf	LIGHTBLUE_SendSerialData@length,w
 20524     06AC  390F               	andlw	15
 20525     06AD  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 20526     06AE  0086               	movwf	6
 20527     06AF  3001               	movlw	1	; select bank2/3
 20528     06B0  0087               	movwf	7
 20529     06B1  0801               	movf	1,w
 20530     06B2  00F6               	movwf	RN487X_Write@txData
 20531     06B3  3068               	movlw	low (_RN487X| (0+32768))
 20532     06B4  0084               	movwf	4
 20533     06B5  3098               	movlw	high (_RN487X| (0+32768))
 20534     06B6  0085               	movwf	5
 20535     06B7  3F01               	moviw [1]fsr0
 20536     06B8  008A               	movwf	10
 20537     06B9  3F00               	moviw [0]fsr0
 20538     06BA  000A               	callw
 20539     06BB  3186               	pagesel	$
 20540                           
 20541                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 393:     while (*serialData) {
 20542     06BC  2EF1               	goto	l14392
 20543     06BD                     l14388:
 20544                           
 20545                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 394:         RN487X.Write((_hex[(*
      +                          serialData >> 4) & 0xF]));
 20546     06BD  0879               	movf	LIGHTBLUE_SendSerialData@serialData,w
 20547     06BE  0086               	movwf	6
 20548     06BF  3002               	movlw	2	; select bank4/5
 20549     06C0  0087               	movwf	7
 20550     06C1  0801               	movf	1,w
 20551     06C2  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 20552     06C3  3004               	movlw	4
 20553     06C4                     u11575:
 20554     06C4  36F7               	lsrf	??_LIGHTBLUE_SendSerialData,f
 20555     06C5  0B89               	decfsz	9,f
 20556     06C6  2EC4               	goto	u11575
 20557     06C7  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 20558     06C8  390F               	andlw	15
 20559     06C9  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 20560     06CA  0086               	movwf	6
 20561     06CB  3001               	movlw	1	; select bank2/3
 20562     06CC  0087               	movwf	7
 20563     06CD  0801               	movf	1,w
 20564     06CE  00F6               	movwf	RN487X_Write@txData
 20565     06CF  3068               	movlw	low (_RN487X| (0+32768))
 20566     06D0  0084               	movwf	4
 20567     06D1  3098               	movlw	high (_RN487X| (0+32768))
 20568     06D2  0085               	movwf	5
 20569     06D3  3F01               	moviw [1]fsr0
 20570     06D4  008A               	movwf	10
 20571     06D5  3F00               	moviw [0]fsr0
 20572     06D6  000A               	callw
 20573     06D7  3186               	pagesel	$
 20574                           
 20575                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 395:         RN487X.Write((_hex[(*
      +                          serialData++) & 0xF]));
 20576     06D8  0879               	movf	LIGHTBLUE_SendSerialData@serialData,w
 20577     06D9  0086               	movwf	6
 20578     06DA  3002               	movlw	2	; select bank4/5
 20579     06DB  0087               	movwf	7
 20580     06DC  0801               	movf	1,w
 20581     06DD  390F               	andlw	15
 20582     06DE  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 20583     06DF  0086               	movwf	6
 20584     06E0  3001               	movlw	1	; select bank2/3
 20585     06E1  0087               	movwf	7
 20586     06E2  0801               	movf	1,w
 20587     06E3  00F6               	movwf	RN487X_Write@txData
 20588     06E4  3068               	movlw	low (_RN487X| (0+32768))
 20589     06E5  0084               	movwf	4
 20590     06E6  3098               	movlw	high (_RN487X| (0+32768))
 20591     06E7  0085               	movwf	5
 20592     06E8  3F01               	moviw [1]fsr0
 20593     06E9  008A               	movwf	10
 20594     06EA  3F00               	moviw [0]fsr0
 20595     06EB  000A               	callw
 20596     06EC  3186               	pagesel	$
 20597     06ED                     l14390:
 20598     06ED  3001               	movlw	1
 20599     06EE  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 20600     06EF  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 20601     06F0  07F9               	addwf	LIGHTBLUE_SendSerialData@serialData,f
 20602     06F1                     l14392:
 20603                           
 20604                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 393:     while (*serialData) {
 20605     06F1  0879               	movf	LIGHTBLUE_SendSerialData@serialData,w
 20606     06F2  0086               	movwf	6
 20607     06F3  3002               	movlw	2	; select bank4/5
 20608     06F4  0087               	movwf	7
 20609     06F5  0801               	movf	1,w
 20610     06F6  1D03               	btfss	3,2
 20611     06F7  2EF9               	goto	u11581
 20612     06F8  2EFA               	goto	u11580
 20613     06F9                     u11581:
 20614     06F9  2EBD               	goto	l14388
 20615     06FA                     u11580:
 20616     06FA                     l14394:
 20617                           
 20618                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 397:     RN487X.Write((']'));
 20619     06FA  305D               	movlw	93
 20620     06FB  00F6               	movwf	RN487X_Write@txData
 20621     06FC  3068               	movlw	low (_RN487X| (0+32768))
 20622     06FD  0084               	movwf	4
 20623     06FE  3098               	movlw	high (_RN487X| (0+32768))
 20624     06FF  0085               	movwf	5
 20625     0700  3F01               	moviw [1]fsr0
 20626     0701  008A               	movwf	10
 20627     0702  3F00               	moviw [0]fsr0
 20628     0703  000A               	callw
 20629     0704  3186               	pagesel	$
 20630     0705                     l145:
 20631     0705  0008               	return
 20632     0706                     __end_of_LIGHTBLUE_SendSerialData:
 20633                           
 20634                           	psect	text67
 20635     1761                     __ptext67:	
 20636 ;; *************** function _LIGHTBLUE_SendProtocolVersion *****************
 20637 ;; Defined at:
 20638 ;;		line 370 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20639 ;; Parameters:    Size  Location     Type
 20640 ;;		None
 20641 ;; Auto vars:     Size  Location     Type
 20642 ;;  payload        19    2[BANK0 ] unsigned char [19]
 20643 ;;  dataIndex       1   22[BANK0 ] unsigned char 
 20644 ;;  value           1   21[BANK0 ] unsigned char 
 20645 ;; Return value:  Size  Location     Type
 20646 ;;                  1    wreg      void 
 20647 ;; Registers used:
 20648 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20649 ;; Tracked objects:
 20650 ;;		On entry : 0/0
 20651 ;;		On exit  : 0/0
 20652 ;;		Unchanged: 0/0
 20653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20655 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20656 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20657 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20658 ;;Total ram usage:       23 bytes
 20659 ;; Hardware stack levels used: 1
 20660 ;; Hardware stack levels required when called: 7
 20661 ;; This function calls:
 20662 ;;		_LIGHTBLUE_SendPacket
 20663 ;;		_LIGHTBLUE_SplitByte
 20664 ;;		_strlen
 20665 ;; This function is called by:
 20666 ;;		_main
 20667 ;; This function uses a non-reentrant model
 20668 ;;
 20669                           
 20670     1761                     _LIGHTBLUE_SendProtocolVersion:	
 20671                           ;psect for function _LIGHTBLUE_SendProtocolVersion
 20672                           
 20673     1761                     l14362:	
 20674                           ;incstack = 0
 20675                           ; Regs used in _LIGHTBLUE_SendProtocolVersion: [wreg-fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 20676                           
 20677                           
 20678                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 371:     char payload[19];;mcc_gen
      +                          erated_files/application/LIGHTBLUE_service.c: 372:     uint8_t value;;mcc_generated_file
      +                          s/application/LIGHTBLUE_service.c: 373:     uint8_t dataIndex;;mcc_generated_files/appli
      +                          cation/LIGHTBLUE_service.c: 375:     *payload = '\0';
 20679     1761  0140               	movlb	0	; select bank0
 20680     1762  01A2               	clrf	LIGHTBLUE_SendProtocolVersion@payload
 20681                           
 20682                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 377:     for (dataIndex = 0; dataI
      +                          ndex < strlen(protocol_version_number); dataIndex++) {
 20683     1763  01B6               	clrf	LIGHTBLUE_SendProtocolVersion@dataIndex
 20684     1764  2F79               	goto	l14370
 20685     1765                     l14364:
 20686                           
 20687                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 378:         value = protocol_vers
      +                          ion_number[dataIndex];
 20688     1765  0836               	movf	LIGHTBLUE_SendProtocolVersion@dataIndex,w
 20689     1766  3E00               	addlw	low (STR_1| (0+32768))
 20690     1767  0084               	movwf	4
 20691     1768  30A0               	movlw	high (STR_1| (0+32768))
 20692     1769  1803               	skipnc
 20693     176A  3E01               	addlw	1
 20694     176B  0085               	movwf	5
 20695     176C  0800               	movf	0,w	;code access
 20696     176D  00B5               	movwf	LIGHTBLUE_SendProtocolVersion@value
 20697     176E                     l14366:
 20698                           
 20699                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 379:         LIGHTBLUE_SplitByte(p
      +                          ayload, value);
 20700     176E  0835               	movf	LIGHTBLUE_SendProtocolVersion@value,w
 20701     176F  00F6               	movwf	LIGHTBLUE_SplitByte@value
 20702     1770  3022               	movlw	(low (LIGHTBLUE_SendProtocolVersion@payload| 0))& (0+255)
 20703     1771  3197  2730  3197   	fcall	_LIGHTBLUE_SplitByte
 20704     1774                     l14368:
 20705                           
 20706                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 380:     }
 20707     1774  3001               	movlw	1
 20708     1775  0140               	movlb	0	; select bank0
 20709     1776  00A0               	movwf	??_LIGHTBLUE_SendProtocolVersion
 20710     1777  0820               	movf	??_LIGHTBLUE_SendProtocolVersion,w
 20711     1778  07B6               	addwf	LIGHTBLUE_SendProtocolVersion@dataIndex,f
 20712     1779                     l14370:
 20713     1779  3000               	movlw	low (STR_1| (0+32768))
 20714     177A  00F1               	movwf	strlen@s
 20715     177B  30A0               	movlw	high (STR_1| (0+32768))
 20716     177C  00F2               	movwf	strlen@s+1
 20717     177D  3192  22AD  3197   	fcall	_strlen
 20718     1780  0140               	movlb	0	; select bank0
 20719     1781  0836               	movf	LIGHTBLUE_SendProtocolVersion@dataIndex,w
 20720     1782  00A0               	movwf	??_LIGHTBLUE_SendProtocolVersion
 20721     1783  01A1               	clrf	??_LIGHTBLUE_SendProtocolVersion+1
 20722     1784  0872               	movf	?_strlen+1,w
 20723     1785  0221               	subwf	??_LIGHTBLUE_SendProtocolVersion+1,w
 20724     1786  1D03               	skipz
 20725     1787  2F8A               	goto	u11555
 20726     1788  0871               	movf	?_strlen,w
 20727     1789  0220               	subwf	??_LIGHTBLUE_SendProtocolVersion,w
 20728     178A                     u11555:
 20729     178A  1C03               	skipc
 20730     178B  2F8D               	goto	u11551
 20731     178C  2F8E               	goto	u11550
 20732     178D                     u11551:
 20733     178D  2F65               	goto	l14364
 20734     178E                     u11550:
 20735     178E                     l14372:
 20736                           
 20737                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 382:     LIGHTBLUE_SendPacket(PROT
      +                          OCOL_VERSION_ID, payload);
 20738     178E  3022               	movlw	(low (LIGHTBLUE_SendProtocolVersion@payload| 0))& (0+255)
 20739     178F  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 20740     1790  3056               	movlw	86
 20741     1791  318F  2774  3197   	fcall	_LIGHTBLUE_SendPacket
 20742     1794                     l139:
 20743     1794  0008               	return
 20744     1795                     __end_of_LIGHTBLUE_SendProtocolVersion:
 20745                           
 20746                           	psect	text68
 20747     1177                     __ptext68:	
 20748 ;; *************** function _LIGHTBLUE_PushButton *****************
 20749 ;; Defined at:
 20750 ;;		line 342 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20751 ;; Parameters:    Size  Location     Type
 20752 ;;		None
 20753 ;; Auto vars:     Size  Location     Type
 20754 ;;  payload         3    1[BANK0 ] unsigned char [3]
 20755 ;;  button          1    0[BANK0 ] unsigned char 
 20756 ;; Return value:  Size  Location     Type
 20757 ;;                  1    wreg      void 
 20758 ;; Registers used:
 20759 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20760 ;; Tracked objects:
 20761 ;;		On entry : 0/0
 20762 ;;		On exit  : 0/0
 20763 ;;		Unchanged: 0/0
 20764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20766 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20768 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20769 ;;Total ram usage:        4 bytes
 20770 ;; Hardware stack levels used: 1
 20771 ;; Hardware stack levels required when called: 7
 20772 ;; This function calls:
 20773 ;;		_LIGHTBLUE_GetButtonValue
 20774 ;;		_LIGHTBLUE_SendPacket
 20775 ;;		_LIGHTBLUE_SplitByte
 20776 ;; This function is called by:
 20777 ;;		_main
 20778 ;; This function uses a non-reentrant model
 20779 ;;
 20780                           
 20781     1177                     _LIGHTBLUE_PushButton:	
 20782                           ;psect for function _LIGHTBLUE_PushButton
 20783                           
 20784     1177                     l14340:	
 20785                           ;incstack = 0
 20786                           ; Regs used in _LIGHTBLUE_PushButton: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20787                           
 20788                           
 20789                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 343:     char payload[3];;mcc_gene
      +                          rated_files/application/LIGHTBLUE_service.c: 344:     uint8_t button = LIGHTBLUE_GetButt
      +                          onValue();
 20790     1177  319F  270D  3191   	fcall	_LIGHTBLUE_GetButtonValue
 20791     117A  0140               	movlb	0	; select bank0
 20792     117B  00A0               	movwf	LIGHTBLUE_PushButton@button
 20793     117C                     l14342:
 20794                           
 20795                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 346:     *payload = '\0';
 20796     117C  01A1               	clrf	LIGHTBLUE_PushButton@payload
 20797     117D                     l14344:
 20798                           
 20799                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 347:     LIGHTBLUE_SplitByte(paylo
      +                          ad, button);
 20800     117D  0820               	movf	LIGHTBLUE_PushButton@button,w
 20801     117E  00F6               	movwf	LIGHTBLUE_SplitByte@value
 20802     117F  3021               	movlw	(low (LIGHTBLUE_PushButton@payload| 0))& (0+255)
 20803     1180  3197  2730  3191   	fcall	_LIGHTBLUE_SplitByte
 20804     1183                     l14346:
 20805                           
 20806                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 349:     LIGHTBLUE_SendPacket(BUTT
      +                          ON_STATE_ID, payload);
 20807     1183  3021               	movlw	(low (LIGHTBLUE_PushButton@payload| 0))& (0+255)
 20808     1184  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 20809     1185  3050               	movlw	80
 20810     1186  318F  2774  3191   	fcall	_LIGHTBLUE_SendPacket
 20811     1189                     l130:
 20812     1189  0008               	return
 20813     118A                     __end_of_LIGHTBLUE_PushButton:
 20814                           
 20815                           	psect	text69
 20816     1F0D                     __ptext69:	
 20817 ;; *************** function _LIGHTBLUE_GetButtonValue *****************
 20818 ;; Defined at:
 20819 ;;		line 475 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20820 ;; Parameters:    Size  Location     Type
 20821 ;;		None
 20822 ;; Auto vars:     Size  Location     Type
 20823 ;;		None
 20824 ;; Return value:  Size  Location     Type
 20825 ;;                  1    wreg      unsigned char 
 20826 ;; Registers used:
 20827 ;;		wreg, status,2, status,0
 20828 ;; Tracked objects:
 20829 ;;		On entry : 0/0
 20830 ;;		On exit  : 0/0
 20831 ;;		Unchanged: 0/0
 20832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20837 ;;Total ram usage:        0 bytes
 20838 ;; Hardware stack levels used: 1
 20839 ;; Hardware stack levels required when called: 4
 20840 ;; This function calls:
 20841 ;;		Nothing
 20842 ;; This function is called by:
 20843 ;;		_LIGHTBLUE_PushButton
 20844 ;; This function uses a non-reentrant model
 20845 ;;
 20846                           
 20847     1F0D                     _LIGHTBLUE_GetButtonValue:	
 20848                           ;psect for function _LIGHTBLUE_GetButtonValue
 20849                           
 20850     1F0D                     l13624:	
 20851                           ;incstack = 0
 20852                           ; Regs used in _LIGHTBLUE_GetButtonValue: [wreg+status,2+status,0]
 20853                           
 20854                           
 20855                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 476:     return (0x01) - PORTAbits
      +                          .RA7;
 20856     1F0D  0140               	movlb	0	; select bank0
 20857     1F0E  0D0C               	rlf	12,w	;volatile
 20858     1F0F  0D0C               	rlf	12,w	;volatile
 20859     1F10  3901               	andlw	1
 20860     1F11  3C01               	sublw	1
 20861     1F12                     l202:
 20862     1F12  0008               	return
 20863     1F13                     __end_of_LIGHTBLUE_GetButtonValue:
 20864                           
 20865                           	psect	text70
 20866     0590                     __ptext70:	
 20867 ;; *************** function _LIGHTBLUE_ParseIncomingPacket *****************
 20868 ;; Defined at:
 20869 ;;		line 400 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20870 ;; Parameters:    Size  Location     Type
 20871 ;;  receivedByte    1    wreg     unsigned char 
 20872 ;; Auto vars:     Size  Location     Type
 20873 ;;  receivedByte    1   19[BANK0 ] unsigned char 
 20874 ;; Return value:  Size  Location     Type
 20875 ;;                  1    wreg      void 
 20876 ;; Registers used:
 20877 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20878 ;; Tracked objects:
 20879 ;;		On entry : 0/0
 20880 ;;		On exit  : 0/0
 20881 ;;		Unchanged: 0/0
 20882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20884 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20885 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20886 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20887 ;;Total ram usage:        9 bytes
 20888 ;; Hardware stack levels used: 1
 20889 ;; Hardware stack levels required when called: 11
 20890 ;; This function calls:
 20891 ;;		_LIGHTBLUE_PerformAction
 20892 ;; This function is called by:
 20893 ;;		_main
 20894 ;; This function uses a non-reentrant model
 20895 ;;
 20896                           
 20897     0590                     _LIGHTBLUE_ParseIncomingPacket:	
 20898                           ;psect for function _LIGHTBLUE_ParseIncomingPacket
 20899                           
 20900                           
 20901                           ;incstack = 0
 20902                           ; Regs used in _LIGHTBLUE_ParseIncomingPacket: [wreg-fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 20903                           ;LIGHTBLUE_ParseIncomingPacket@receivedByte stored from wreg
 20904     0590  0140               	movlb	0	; select bank0
 20905     0591  00B3               	movwf	LIGHTBLUE_ParseIncomingPacket@receivedByte
 20906     0592                     l14396:
 20907                           
 20908                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 401:     static PACKET_PARSER_STAT
      +                          E_t parserState = IDLE;;mcc_generated_files/application/LIGHTBLUE_service.c: 402:     st
      +                          atic uint8_t length = 0;;mcc_generated_files/application/LIGHTBLUE_service.c: 403:     s
      +                          tatic uint16_t data = 0;;mcc_generated_files/application/LIGHTBLUE_service.c: 404:     s
      +                          tatic char packetID = '\0';;mcc_generated_files/application/LIGHTBLUE_service.c: 406:   
      +                            switch (parserState) {
 20909     0592  2E3C               	goto	l14456
 20910     0593                     l14398:
 20911                           
 20912                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 409:             parserState = PAC
      +                          KET_ID;
 20913     0593  3002               	movlw	2
 20914     0594  00EB               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 20915                           
 20916                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 410:             break;
 20917     0595  2E5B               	goto	l187
 20918     0596                     l14400:
 20919                           
 20920                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 412:             packetID = receiv
      +                          edByte;
 20921     0596  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20922     0597  00E9               	movwf	LIGHTBLUE_ParseIncomingPacket@packetID
 20923                           
 20924                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 413:             parserState = PAY
      +                          LOAD_SIZE_0;
 20925     0598  3003               	movlw	3
 20926     0599  00EB               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 20927                           
 20928                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 414:             break;
 20929     059A  2E5B               	goto	l187
 20930     059B                     l14402:
 20931                           
 20932                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 416:             length = (((recei
      +                          vedByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 10);
 20933     059B  303A               	movlw	58
 20934     059C  0233               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20935     059D  1C03               	skipc
 20936     059E  2DA0               	goto	u11591
 20937     059F  2DA1               	goto	u11590
 20938     05A0                     u11591:
 20939     05A0  2DAA               	goto	l14406
 20940     05A1                     u11590:
 20941     05A1                     l14404:
 20942     05A1  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20943     05A2  395F               	andlw	95
 20944     05A3  3EC9               	addlw	201
 20945     05A4  00AD               	movwf	_LIGHTBLUE_ParseIncomingPacket$463
 20946     05A5  30FF               	movlw	255
 20947     05A6  1803               	skipnc
 20948     05A7  3000               	movlw	0
 20949     05A8  00AE               	movwf	_LIGHTBLUE_ParseIncomingPacket$463+1
 20950     05A9  2DB1               	goto	l164
 20951     05AA                     l14406:
 20952     05AA  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20953     05AB  3ED0               	addlw	208
 20954     05AC  00AD               	movwf	_LIGHTBLUE_ParseIncomingPacket$463
 20955     05AD  30FF               	movlw	255
 20956     05AE  1803               	skipnc
 20957     05AF  3000               	movlw	0
 20958     05B0  00AE               	movwf	_LIGHTBLUE_ParseIncomingPacket$463+1
 20959     05B1                     l164:
 20960     05B1  082D               	movf	_LIGHTBLUE_ParseIncomingPacket$463,w
 20961     05B2  00EA               	movwf	LIGHTBLUE_ParseIncomingPacket@length
 20962                           
 20963                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 417:             parserState = PAY
      +                          LOAD_SIZE_1;
 20964     05B3  3004               	movlw	4
 20965     05B4  00EB               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 20966                           
 20967                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 418:             break;
 20968     05B5  2E5B               	goto	l187
 20969     05B6                     l14408:
 20970                           
 20971                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 420:             length = (length 
      +                          << 4) + (((receivedByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 
      +                          10);
 20972     05B6  303A               	movlw	58
 20973     05B7  0233               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20974     05B8  1C03               	skipc
 20975     05B9  2DBB               	goto	u11601
 20976     05BA  2DBC               	goto	u11600
 20977     05BB                     u11601:
 20978     05BB  2DC5               	goto	l14412
 20979     05BC                     u11600:
 20980     05BC                     l14410:
 20981     05BC  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20982     05BD  395F               	andlw	95
 20983     05BE  3EC9               	addlw	201
 20984     05BF  00AF               	movwf	_LIGHTBLUE_ParseIncomingPacket$464
 20985     05C0  30FF               	movlw	255
 20986     05C1  1803               	skipnc
 20987     05C2  3000               	movlw	0
 20988     05C3  00B0               	movwf	_LIGHTBLUE_ParseIncomingPacket$464+1
 20989     05C4  2DCC               	goto	l14414
 20990     05C5                     l14412:
 20991     05C5  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20992     05C6  3ED0               	addlw	208
 20993     05C7  00AF               	movwf	_LIGHTBLUE_ParseIncomingPacket$464
 20994     05C8  30FF               	movlw	255
 20995     05C9  1803               	skipnc
 20996     05CA  3000               	movlw	0
 20997     05CB  00B0               	movwf	_LIGHTBLUE_ParseIncomingPacket$464+1
 20998     05CC                     l14414:
 20999     05CC  086A               	movf	LIGHTBLUE_ParseIncomingPacket@length,w
 21000     05CD  00AB               	movwf	??_LIGHTBLUE_ParseIncomingPacket
 21001     05CE  3003               	movlw	3
 21002     05CF                     u11615:
 21003     05CF  35AB               	lslf	??_LIGHTBLUE_ParseIncomingPacket,f
 21004     05D0  3EFF               	addlw	-1
 21005     05D1  1D03               	skipz
 21006     05D2  2DCF               	goto	u11615
 21007     05D3  352B               	lslf	??_LIGHTBLUE_ParseIncomingPacket,w
 21008     05D4  072F               	addwf	_LIGHTBLUE_ParseIncomingPacket$464,w
 21009     05D5  00EA               	movwf	LIGHTBLUE_ParseIncomingPacket@length
 21010     05D6                     l14416:
 21011                           
 21012                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 421:             parserState = PAY
      +                          LOAD_0;
 21013     05D6  3005               	movlw	5
 21014     05D7  00EB               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 21015                           
 21016                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 422:             break;
 21017     05D8  2E5B               	goto	l187
 21018     05D9                     l14418:
 21019                           
 21020                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 424:             data = (((receive
      +                          dByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 10);
 21021     05D9  303A               	movlw	58
 21022     05DA  0233               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 21023     05DB  1C03               	skipc
 21024     05DC  2DDE               	goto	u11621
 21025     05DD  2DDF               	goto	u11620
 21026     05DE                     u11621:
 21027     05DE  2DE8               	goto	l14422
 21028     05DF                     u11620:
 21029     05DF                     l14420:
 21030     05DF  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 21031     05E0  395F               	andlw	95
 21032     05E1  3EC9               	addlw	201
 21033     05E2  00D2               	movwf	LIGHTBLUE_ParseIncomingPacket@data
 21034     05E3  30FF               	movlw	255
 21035     05E4  1803               	skipnc
 21036     05E5  3000               	movlw	0
 21037     05E6  00D3               	movwf	LIGHTBLUE_ParseIncomingPacket@data+1
 21038     05E7  2DEF               	goto	l14424
 21039     05E8                     l14422:
 21040     05E8  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 21041     05E9  3ED0               	addlw	208
 21042     05EA  00D2               	movwf	LIGHTBLUE_ParseIncomingPacket@data
 21043     05EB  30FF               	movlw	255
 21044     05EC  1803               	skipnc
 21045     05ED  3000               	movlw	0
 21046     05EE  00D3               	movwf	LIGHTBLUE_ParseIncomingPacket@data+1
 21047     05EF                     l14424:
 21048                           
 21049                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 425:             length--;
 21050     05EF  3001               	movlw	1
 21051     05F0  02EA               	subwf	LIGHTBLUE_ParseIncomingPacket@length,f
 21052     05F1                     l14426:
 21053                           
 21054                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 426:             if (length == 0) 
      +                          {
 21055     05F1  086A               	movf	LIGHTBLUE_ParseIncomingPacket@length,w
 21056     05F2  1D03               	btfss	3,2
 21057     05F3  2DF5               	goto	u11631
 21058     05F4  2DF6               	goto	u11630
 21059     05F5                     u11631:
 21060     05F5  2DF8               	goto	l14430
 21061     05F6                     u11630:
 21062     05F6                     l14428:
 21063                           
 21064                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 427:                 parserState =
      +                           IDLE;
 21065     05F6  01EB               	clrf	LIGHTBLUE_ParseIncomingPacket@parserState
 21066                           
 21067                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 428:             } else {
 21068     05F7  2E5B               	goto	l187
 21069     05F8                     l14430:
 21070                           
 21071                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 429:                 parserState =
      +                           PAYLOAD_1;
 21072     05F8  3006               	movlw	6
 21073     05F9  00EB               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 21074     05FA  2E5B               	goto	l187
 21075     05FB                     l14432:
 21076                           
 21077                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 433:             data = (data << 4
      +                          ) + (((receivedByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 10);
 21078     05FB  303A               	movlw	58
 21079     05FC  0233               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 21080     05FD  1C03               	skipc
 21081     05FE  2E00               	goto	u11641
 21082     05FF  2E01               	goto	u11640
 21083     0600                     u11641:
 21084     0600  2E0A               	goto	l14436
 21085     0601                     u11640:
 21086     0601                     l14434:
 21087     0601  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 21088     0602  395F               	andlw	95
 21089     0603  3EC9               	addlw	201
 21090     0604  00B1               	movwf	_LIGHTBLUE_ParseIncomingPacket$465
 21091     0605  30FF               	movlw	255
 21092     0606  1803               	skipnc
 21093     0607  3000               	movlw	0
 21094     0608  00B2               	movwf	_LIGHTBLUE_ParseIncomingPacket$465+1
 21095     0609  2E11               	goto	l14438
 21096     060A                     l14436:
 21097     060A  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 21098     060B  3ED0               	addlw	208
 21099     060C  00B1               	movwf	_LIGHTBLUE_ParseIncomingPacket$465
 21100     060D  30FF               	movlw	255
 21101     060E  1803               	skipnc
 21102     060F  3000               	movlw	0
 21103     0610  00B2               	movwf	_LIGHTBLUE_ParseIncomingPacket$465+1
 21104     0611                     l14438:
 21105     0611  0853               	movf	LIGHTBLUE_ParseIncomingPacket@data+1,w
 21106     0612  00AC               	movwf	??_LIGHTBLUE_ParseIncomingPacket+1
 21107     0613  0852               	movf	LIGHTBLUE_ParseIncomingPacket@data,w
 21108     0614  00AB               	movwf	??_LIGHTBLUE_ParseIncomingPacket
 21109     0615  0EAB               	swapf	??_LIGHTBLUE_ParseIncomingPacket,f
 21110     0616  0EAC               	swapf	??_LIGHTBLUE_ParseIncomingPacket+1,f
 21111     0617  30F0               	movlw	240
 21112     0618  05AC               	andwf	??_LIGHTBLUE_ParseIncomingPacket+1,f
 21113     0619  082B               	movf	??_LIGHTBLUE_ParseIncomingPacket,w
 21114     061A  390F               	andlw	15
 21115     061B  04AC               	iorwf	??_LIGHTBLUE_ParseIncomingPacket+1,f
 21116     061C  30F0               	movlw	240
 21117     061D  05AB               	andwf	??_LIGHTBLUE_ParseIncomingPacket,f
 21118     061E  0831               	movf	_LIGHTBLUE_ParseIncomingPacket$465,w
 21119     061F  072B               	addwf	??_LIGHTBLUE_ParseIncomingPacket,w
 21120     0620  00D2               	movwf	LIGHTBLUE_ParseIncomingPacket@data
 21121     0621  0832               	movf	_LIGHTBLUE_ParseIncomingPacket$465+1,w
 21122     0622  3D2C               	addwfc	??_LIGHTBLUE_ParseIncomingPacket+1,w
 21123     0623  00D3               	movwf	LIGHTBLUE_ParseIncomingPacket@data+1
 21124     0624                     l14440:
 21125                           
 21126                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 434:             LIGHTBLUE_Perform
      +                          Action(packetID, data);
 21127     0624  0852               	movf	LIGHTBLUE_ParseIncomingPacket@data,w
 21128     0625  00A7               	movwf	LIGHTBLUE_PerformAction@data
 21129     0626  0869               	movf	LIGHTBLUE_ParseIncomingPacket@packetID,w
 21130     0627  3188  2026  3185   	fcall	_LIGHTBLUE_PerformAction
 21131     062A                     l14442:
 21132                           
 21133                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 435:             length--;
 21134     062A  3001               	movlw	1
 21135     062B  0140               	movlb	0	; select bank0
 21136     062C  02EA               	subwf	LIGHTBLUE_ParseIncomingPacket@length,f
 21137     062D                     l14444:
 21138                           
 21139                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 436:             if (length == 0) 
      +                          {
 21140     062D  086A               	movf	LIGHTBLUE_ParseIncomingPacket@length,w
 21141     062E  1D03               	btfss	3,2
 21142     062F  2E31               	goto	u11651
 21143     0630  2E32               	goto	u11650
 21144     0631                     u11651:
 21145     0631  2DD6               	goto	l14416
 21146     0632                     u11650:
 21147     0632  2DF6               	goto	l14428
 21148     0633                     l14450:
 21149                           
 21150                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 444:             if (receivedByte 
      +                          == ('[')) {
 21151     0633  305B               	movlw	91
 21152     0634  0633               	xorwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 21153     0635  1D03               	btfss	3,2
 21154     0636  2E38               	goto	u11661
 21155     0637  2E39               	goto	u11660
 21156     0638                     u11661:
 21157     0638  2E5B               	goto	l187
 21158     0639                     u11660:
 21159     0639                     l14452:
 21160                           
 21161                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 445:                 parserState =
      +                           SEQUENCE_NUMBER;
 21162     0639  01EB               	clrf	LIGHTBLUE_ParseIncomingPacket@parserState
 21163     063A  0AEB               	incf	LIGHTBLUE_ParseIncomingPacket@parserState,f
 21164     063B  2E5B               	goto	l187
 21165     063C                     l14456:
 21166     063C  086B               	movf	LIGHTBLUE_ParseIncomingPacket@parserState,w
 21167     063D  00AB               	movwf	??_LIGHTBLUE_ParseIncomingPacket
 21168     063E  01AC               	clrf	??_LIGHTBLUE_ParseIncomingPacket+1
 21169                           
 21170                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21171                           ; Switch size 1, requested type "simple"
 21172                           ; Number of cases is 1, Range of values is 0 to 0
 21173                           ; switch strategies available:
 21174                           ; Name         Instructions Cycles
 21175                           ; simple_byte            4     3 (average)
 21176                           ; direct_byte            8     6 (fixed)
 21177                           ; jumptable            260     6 (fixed)
 21178                           ;	Chosen strategy is simple_byte
 21179     063F  082C               	movf	??_LIGHTBLUE_ParseIncomingPacket+1,w
 21180     0640  3A00               	xorlw	0	; case 0
 21181     0641  1903               	skipnz
 21182     0642  2E44               	goto	l16626
 21183     0643  2E33               	goto	l14450
 21184     0644                     l16626:
 21185                           
 21186                           ; Switch size 1, requested type "simple"
 21187                           ; Number of cases is 7, Range of values is 0 to 6
 21188                           ; switch strategies available:
 21189                           ; Name         Instructions Cycles
 21190                           ; direct_byte           20     6 (fixed)
 21191                           ; simple_byte           22    12 (average)
 21192                           ; jumptable            260     6 (fixed)
 21193                           ;	Chosen strategy is simple_byte
 21194     0644  082B               	movf	??_LIGHTBLUE_ParseIncomingPacket,w
 21195     0645  3A00               	xorlw	0	; case 0
 21196     0646  1903               	skipnz
 21197     0647  2E33               	goto	l14450
 21198     0648  3A01               	xorlw	1	; case 1
 21199     0649  1903               	skipnz
 21200     064A  2D93               	goto	l14398
 21201     064B  3A03               	xorlw	3	; case 2
 21202     064C  1903               	skipnz
 21203     064D  2D96               	goto	l14400
 21204     064E  3A01               	xorlw	1	; case 3
 21205     064F  1903               	skipnz
 21206     0650  2D9B               	goto	l14402
 21207     0651  3A07               	xorlw	7	; case 4
 21208     0652  1903               	skipnz
 21209     0653  2DB6               	goto	l14408
 21210     0654  3A01               	xorlw	1	; case 5
 21211     0655  1903               	skipnz
 21212     0656  2DD9               	goto	l14418
 21213     0657  3A03               	xorlw	3	; case 6
 21214     0658  1903               	skipnz
 21215     0659  2DFB               	goto	l14432
 21216     065A  2E33               	goto	l14450
 21217     065B                     l187:
 21218     065B  0008               	return
 21219     065C                     __end_of_LIGHTBLUE_ParseIncomingPacket:
 21220                           
 21221                           	psect	text71
 21222     0826                     __ptext71:	
 21223 ;; *************** function _LIGHTBLUE_PerformAction *****************
 21224 ;; Defined at:
 21225 ;;		line 499 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 21226 ;; Parameters:    Size  Location     Type
 21227 ;;  id              1    wreg     unsigned char 
 21228 ;;  data            1    7[BANK0 ] unsigned char 
 21229 ;; Auto vars:     Size  Location     Type
 21230 ;;  id              1    9[BANK0 ] unsigned char 
 21231 ;;  led             1   10[BANK0 ] unsigned char 
 21232 ;; Return value:  Size  Location     Type
 21233 ;;                  1    wreg      void 
 21234 ;; Registers used:
 21235 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21236 ;; Tracked objects:
 21237 ;;		On entry : 0/0
 21238 ;;		On exit  : 0/0
 21239 ;;		Unchanged: 0/0
 21240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21241 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21242 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21243 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21244 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21245 ;;Total ram usage:        4 bytes
 21246 ;; Hardware stack levels used: 1
 21247 ;; Hardware stack levels required when called: 10
 21248 ;; This function calls:
 21249 ;;		_EUSART1_Write
 21250 ;;		_EUSART2_Write
 21251 ;;		_LIGHTBLUE_SetErrorLedValue
 21252 ;; This function is called by:
 21253 ;;		_LIGHTBLUE_ParseIncomingPacket
 21254 ;; This function uses a non-reentrant model
 21255 ;;
 21256                           
 21257     0826                     _LIGHTBLUE_PerformAction:	
 21258                           ;psect for function _LIGHTBLUE_PerformAction
 21259                           
 21260                           
 21261                           ;incstack = 0
 21262                           ; Regs used in _LIGHTBLUE_PerformAction: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21263                           ;LIGHTBLUE_PerformAction@id stored from wreg
 21264     0826  0140               	movlb	0	; select bank0
 21265     0827  00A9               	movwf	LIGHTBLUE_PerformAction@id
 21266     0828                     l13636:
 21267                           
 21268                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 500:     uint8_t led;;mcc_generate
      +                          d_files/application/LIGHTBLUE_service.c: 502:     switch (id) {
 21269     0828  2855               	goto	l13648
 21270     0829                     l13638:
 21271                           
 21272                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 504:             led = (data >> 4)
      +                           & (0x01);
 21273     0829  0827               	movf	LIGHTBLUE_PerformAction@data,w
 21274     082A  00A8               	movwf	??_LIGHTBLUE_PerformAction
 21275     082B  3004               	movlw	4
 21276     082C                     u10585:
 21277     082C  36A8               	lsrf	??_LIGHTBLUE_PerformAction,f
 21278     082D  0B89               	decfsz	9,f
 21279     082E  282C               	goto	u10585
 21280     082F  0828               	movf	??_LIGHTBLUE_PerformAction,w
 21281     0830  3901               	andlw	1
 21282     0831  00AA               	movwf	LIGHTBLUE_PerformAction@led
 21283                           
 21284                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 505:             if (led == (0x00)
      +                          ) {
 21285     0832  082A               	movf	LIGHTBLUE_PerformAction@led,w
 21286     0833  1D03               	btfss	3,2
 21287     0834  2836               	goto	u10591
 21288     0835  2837               	goto	u10590
 21289     0836                     u10591:
 21290     0836  283F               	goto	l13642
 21291     0837                     u10590:
 21292     0837                     l13640:
 21293                           
 21294                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 506:                 if ((data & (
      +                          0x01)) == (0x00)) {
 21295     0837  1827               	btfsc	LIGHTBLUE_PerformAction@data,0
 21296     0838  283A               	goto	u10601
 21297     0839  283B               	goto	u10600
 21298     083A                     u10601:
 21299     083A  283D               	goto	l224
 21300     083B                     u10600:
 21301     083B                     l221:	
 21302                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 507:                     do { LATA
      +                          bits.LATA5 = 1; } while(0);
 21303                           
 21304     083B  1698               	bsf	24,5	;volatile
 21305     083C  285D               	goto	l230
 21306     083D                     l224:	
 21307                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 509:                     do { LATA
      +                          bits.LATA5 = 0; } while(0);
 21308                           
 21309     083D  1298               	bcf	24,5	;volatile
 21310     083E  285D               	goto	l230
 21311     083F                     l13642:
 21312                           
 21313                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 512:                 LIGHTBLUE_Set
      +                          ErrorLedValue(data & (0x01));
 21314     083F  1827               	btfsc	LIGHTBLUE_PerformAction@data,0
 21315     0840  2842               	goto	u10611
 21316     0841  2844               	goto	u10610
 21317     0842                     u10611:
 21318     0842  3001               	movlw	1
 21319     0843  2845               	goto	u10620
 21320     0844                     u10610:
 21321     0844  3000               	movlw	0
 21322     0845                     u10620:
 21323     0845  3190  209D  3188   	fcall	_LIGHTBLUE_SetErrorLedValue
 21324     0848  285D               	goto	l230
 21325     0849                     l13644:
 21326                           
 21327                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 516:             uart[UART_CDC].Wr
      +                          ite(data);
 21328     0849  0827               	movf	LIGHTBLUE_PerformAction@data,w
 21329     084A  00F1               	movwf	EUSART2_Write@txData
 21330     084B  3002               	movlw	low ((_uart+2)| (0+32768))
 21331     084C  0084               	movwf	4
 21332     084D  3098               	movlw	high ((_uart+2)| (0+32768))
 21333     084E  0085               	movwf	5
 21334     084F  3F01               	moviw [1]fsr0
 21335     0850  008A               	movwf	10
 21336     0851  3F00               	moviw [0]fsr0
 21337     0852  000A               	callw
 21338     0853  3188               	pagesel	$
 21339                           
 21340                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 517:             break;
 21341     0854  285D               	goto	l230
 21342     0855                     l13648:
 21343     0855  0829               	movf	LIGHTBLUE_PerformAction@id,w
 21344                           
 21345                           ; Switch size 1, requested type "simple"
 21346                           ; Number of cases is 2, Range of values is 76 to 83
 21347                           ; switch strategies available:
 21348                           ; Name         Instructions Cycles
 21349                           ; simple_byte            7     4 (average)
 21350                           ; direct_byte           25     9 (fixed)
 21351                           ; jumptable            263     9 (fixed)
 21352                           ;	Chosen strategy is simple_byte
 21353     0856  3A4C               	xorlw	76	; case 76
 21354     0857  1903               	skipnz
 21355     0858  2829               	goto	l13638
 21356     0859  3A1F               	xorlw	31	; case 83
 21357     085A  1903               	skipnz
 21358     085B  2849               	goto	l13644
 21359     085C  285D               	goto	l230
 21360     085D                     l230:
 21361     085D  0008               	return
 21362     085E                     __end_of_LIGHTBLUE_PerformAction:
 21363                           
 21364                           	psect	text72
 21365     109D                     __ptext72:	
 21366 ;; *************** function _LIGHTBLUE_SetErrorLedValue *****************
 21367 ;; Defined at:
 21368 ;;		line 487 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 21369 ;; Parameters:    Size  Location     Type
 21370 ;;  value           1    wreg     _Bool 
 21371 ;; Auto vars:     Size  Location     Type
 21372 ;;  value           1    6[BANK0 ] _Bool 
 21373 ;; Return value:  Size  Location     Type
 21374 ;;                  1    wreg      void 
 21375 ;; Registers used:
 21376 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21377 ;; Tracked objects:
 21378 ;;		On entry : 0/0
 21379 ;;		On exit  : 0/0
 21380 ;;		Unchanged: 0/0
 21381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21383 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21384 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21385 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21386 ;;Total ram usage:        2 bytes
 21387 ;; Hardware stack levels used: 1
 21388 ;; Hardware stack levels required when called: 9
 21389 ;; This function calls:
 21390 ;;		_LIGHTBLUE_UpdateErrorLed
 21391 ;; This function is called by:
 21392 ;;		_LIGHTBLUE_PerformAction
 21393 ;; This function uses a non-reentrant model
 21394 ;;
 21395                           
 21396     109D                     _LIGHTBLUE_SetErrorLedValue:	
 21397                           ;psect for function _LIGHTBLUE_SetErrorLedValue
 21398                           
 21399                           
 21400                           ;incstack = 0
 21401                           ; Regs used in _LIGHTBLUE_SetErrorLedValue: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21402                           ;LIGHTBLUE_SetErrorLedValue@value stored from wreg
 21403     109D  0140               	movlb	0	; select bank0
 21404     109E  00A6               	movwf	LIGHTBLUE_SetErrorLedValue@value
 21405     109F                     l13448:
 21406                           
 21407                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 488:     (bitMap.ioStateBitMap.p2_
      +                          2_state) = (0x01) - value;
 21408     109F  3001               	movlw	1
 21409     10A0  00FB               	movwf	??_LIGHTBLUE_SetErrorLedValue
 21410     10A1  0826               	movf	LIGHTBLUE_SetErrorLedValue@value,w
 21411     10A2  02FB               	subwf	??_LIGHTBLUE_SetErrorLedValue,f
 21412     10A3  0855               	movf	_bitMap+1,w	;volatile
 21413     10A4  067B               	xorwf	??_LIGHTBLUE_SetErrorLedValue,w
 21414     10A5  39FE               	andlw	-2
 21415     10A6  067B               	xorwf	??_LIGHTBLUE_SetErrorLedValue,w
 21416     10A7  00D5               	movwf	_bitMap+1	;volatile
 21417     10A8                     l13450:
 21418                           
 21419                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 489:     LIGHTBLUE_UpdateErrorLed(
      +                          );
 21420     10A8  3193  2347  3190   	fcall	_LIGHTBLUE_UpdateErrorLed
 21421     10AB                     l211:
 21422     10AB  0008               	return
 21423     10AC                     __end_of_LIGHTBLUE_SetErrorLedValue:
 21424                           
 21425                           	psect	text73
 21426     1347                     __ptext73:	
 21427 ;; *************** function _LIGHTBLUE_UpdateErrorLed *****************
 21428 ;; Defined at:
 21429 ;;		line 492 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 21430 ;; Parameters:    Size  Location     Type
 21431 ;;		None
 21432 ;; Auto vars:     Size  Location     Type
 21433 ;;		None
 21434 ;; Return value:  Size  Location     Type
 21435 ;;                  1    wreg      void 
 21436 ;; Registers used:
 21437 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21438 ;; Tracked objects:
 21439 ;;		On entry : 0/0
 21440 ;;		On exit  : 0/0
 21441 ;;		Unchanged: 0/0
 21442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21447 ;;Total ram usage:        0 bytes
 21448 ;; Hardware stack levels used: 1
 21449 ;; Hardware stack levels required when called: 8
 21450 ;; This function calls:
 21451 ;;		_RN487X_Delay
 21452 ;;		_RN487X_EnterCmdMode
 21453 ;;		_RN487X_EnterDataMode
 21454 ;;		_RN487X_SetOutputs
 21455 ;; This function is called by:
 21456 ;;		_LIGHTBLUE_SetErrorLedValue
 21457 ;; This function uses a non-reentrant model
 21458 ;;
 21459                           
 21460     1347                     _LIGHTBLUE_UpdateErrorLed:	
 21461                           ;psect for function _LIGHTBLUE_UpdateErrorLed
 21462                           
 21463     1347                     l13362:	
 21464                           ;incstack = 0
 21465                           ; Regs used in _LIGHTBLUE_UpdateErrorLed: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21466                           
 21467                           
 21468                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 493:     RN487X_EnterCmdMode();
 21469     1347  3192  221E  3193   	fcall	_RN487X_EnterCmdMode
 21470     134A                     l13364:
 21471                           
 21472                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 494:     RN487X.DelayMs((20));
 21473     134A  3014               	movlw	20
 21474     134B  00F4               	movwf	RN487X_Delay@delayCount
 21475     134C  3000               	movlw	0
 21476     134D  00F5               	movwf	RN487X_Delay@delayCount+1
 21477     134E  3076               	movlw	low ((_RN487X+14)| (0+32768))
 21478     134F  0084               	movwf	4
 21479     1350  3098               	movlw	high ((_RN487X+14)| (0+32768))
 21480     1351  0085               	movwf	5
 21481     1352  3F01               	moviw [1]fsr0
 21482     1353  008A               	movwf	10
 21483     1354  3F00               	moviw [0]fsr0
 21484     1355  000A               	callw
 21485     1356  3193               	pagesel	$
 21486     1357                     l13366:
 21487                           
 21488                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 495:     RN487X_SetOutputs(bitMap)
      +                          ;
 21489     1357  0140               	movlb	0	; select bank0
 21490     1358  0855               	movf	_bitMap+1,w	;volatile
 21491     1359  00A1               	movwf	RN487X_SetOutputs@bitMap+1
 21492     135A  0854               	movf	_bitMap,w	;volatile
 21493     135B  00A0               	movwf	RN487X_SetOutputs@bitMap
 21494     135C  318A  22D3  3193   	fcall	_RN487X_SetOutputs
 21495     135F                     l13368:
 21496                           
 21497                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 496:     RN487X_EnterDataMode();
 21498     135F  3193  232C  3193   	fcall	_RN487X_EnterDataMode
 21499     1362                     l214:
 21500     1362  0008               	return
 21501     1363                     __end_of_LIGHTBLUE_UpdateErrorLed:
 21502                           
 21503                           	psect	text74
 21504     0AD3                     __ptext74:	
 21505 ;; *************** function _RN487X_SetOutputs *****************
 21506 ;; Defined at:
 21507 ;;		line 223 in file "mcc_generated_files/rn487x/rn487x.c"
 21508 ;; Parameters:    Size  Location     Type
 21509 ;;  bitMap          2    0[BANK0 ] struct .
 21510 ;; Auto vars:     Size  Location     Type
 21511 ;;  stateHighNib    1    5[BANK0 ] unsigned char 
 21512 ;;  ioHighNibble    1    4[BANK0 ] unsigned char 
 21513 ;;  stateLowNibb    1    3[BANK0 ] unsigned char 
 21514 ;;  ioLowNibble     1    2[BANK0 ] unsigned char 
 21515 ;; Return value:  Size  Location     Type
 21516 ;;                  1    wreg      _Bool 
 21517 ;; Registers used:
 21518 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21519 ;; Tracked objects:
 21520 ;;		On entry : 0/0
 21521 ;;		On exit  : 0/0
 21522 ;;		Unchanged: 0/0
 21523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21524 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21525 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21527 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21528 ;;Total ram usage:        6 bytes
 21529 ;; Hardware stack levels used: 1
 21530 ;; Hardware stack levels required when called: 7
 21531 ;; This function calls:
 21532 ;;		_RN487X_ReadDefaultResponse
 21533 ;;		_RN487X_SendCmd
 21534 ;; This function is called by:
 21535 ;;		_LIGHTBLUE_UpdateErrorLed
 21536 ;; This function uses a non-reentrant model
 21537 ;;
 21538                           
 21539     0AD3                     _RN487X_SetOutputs:	
 21540                           ;psect for function _RN487X_SetOutputs
 21541                           
 21542     0AD3                     l13222:	
 21543                           ;incstack = 0
 21544                           ; Regs used in _RN487X_SetOutputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21545                           
 21546                           
 21547                           ;mcc_generated_files/rn487x/rn487x.c: 226:     char ioLowNibble = '0';
 21548     0AD3  3030               	movlw	48
 21549     0AD4  0140               	movlb	0	; select bank0
 21550     0AD5  00A2               	movwf	RN487X_SetOutputs@ioLowNibble
 21551                           
 21552                           ;mcc_generated_files/rn487x/rn487x.c: 227:     char stateHighNibble = '0';
 21553     0AD6  3030               	movlw	48
 21554     0AD7  00A5               	movwf	RN487X_SetOutputs@stateHighNibble
 21555                           
 21556                           ;mcc_generated_files/rn487x/rn487x.c: 228:     char stateLowNibble = '0';
 21557     0AD8  3030               	movlw	48
 21558     0AD9  00A3               	movwf	RN487X_SetOutputs@stateLowNibble
 21559     0ADA                     l13224:
 21560                           
 21561                           ;mcc_generated_files/rn487x/rn487x.c: 231:     if (bitMap.ioBitMap.p1_3)
 21562     0ADA  1E20               	btfss	RN487X_SetOutputs@bitMap,4
 21563     0ADB  2ADD               	goto	u10101
 21564     0ADC  2ADE               	goto	u10100
 21565     0ADD                     u10101:
 21566     0ADD  2AE1               	goto	l13228
 21567     0ADE                     u10100:
 21568     0ADE                     l13226:
 21569                           
 21570                           ;mcc_generated_files/rn487x/rn487x.c: 232:     {;mcc_generated_files/rn487x/rn487x.c: 23
      +                          3:         ioHighNibble = '1';
 21571     0ADE  3031               	movlw	49
 21572     0ADF  00A4               	movwf	RN487X_SetOutputs@ioHighNibble
 21573                           
 21574                           ;mcc_generated_files/rn487x/rn487x.c: 234:     }
 21575     0AE0  2AE3               	goto	l13230
 21576     0AE1                     l13228:
 21577                           
 21578                           ;mcc_generated_files/rn487x/rn487x.c: 236:     {;mcc_generated_files/rn487x/rn487x.c: 23
      +                          7:         ioHighNibble = '0';
 21579     0AE1  3030               	movlw	48
 21580     0AE2  00A4               	movwf	RN487X_SetOutputs@ioHighNibble
 21581     0AE3                     l13230:
 21582                           
 21583                           ;mcc_generated_files/rn487x/rn487x.c: 239:     ioLowNibble = ( (0x0F & bitMap.ioBitMap.g
      +                          pioBitMap) + '0');
 21584     0AE3  0820               	movf	RN487X_SetOutputs@bitMap,w
 21585     0AE4  390F               	andlw	15
 21586     0AE5  3E30               	addlw	48
 21587     0AE6  00A2               	movwf	RN487X_SetOutputs@ioLowNibble
 21588     0AE7                     l13232:
 21589                           
 21590                           ;mcc_generated_files/rn487x/rn487x.c: 242:     if (bitMap.ioStateBitMap.p1_3_state)
 21591     0AE7  1E21               	btfss	RN487X_SetOutputs@bitMap+1,4
 21592     0AE8  2AEA               	goto	u10111
 21593     0AE9  2AEB               	goto	u10110
 21594     0AEA                     u10111:
 21595     0AEA  2AEE               	goto	l13236
 21596     0AEB                     u10110:
 21597     0AEB                     l13234:
 21598                           
 21599                           ;mcc_generated_files/rn487x/rn487x.c: 243:     {;mcc_generated_files/rn487x/rn487x.c: 24
      +                          4:         stateHighNibble = '1';
 21600     0AEB  3031               	movlw	49
 21601     0AEC  00A5               	movwf	RN487X_SetOutputs@stateHighNibble
 21602                           
 21603                           ;mcc_generated_files/rn487x/rn487x.c: 245:     }
 21604     0AED  2AF0               	goto	l13238
 21605     0AEE                     l13236:
 21606                           
 21607                           ;mcc_generated_files/rn487x/rn487x.c: 247:     {;mcc_generated_files/rn487x/rn487x.c: 24
      +                          8:         stateHighNibble = '0';
 21608     0AEE  3030               	movlw	48
 21609     0AEF  00A5               	movwf	RN487X_SetOutputs@stateHighNibble
 21610     0AF0                     l13238:
 21611                           
 21612                           ;mcc_generated_files/rn487x/rn487x.c: 250:     stateLowNibble = ( (0x0F & bitMap.ioState
      +                          BitMap.gpioStateBitMap) + '0');
 21613     0AF0  0821               	movf	RN487X_SetOutputs@bitMap+1,w
 21614     0AF1  390F               	andlw	15
 21615     0AF2  3E30               	addlw	48
 21616     0AF3  00A3               	movwf	RN487X_SetOutputs@stateLowNibble
 21617     0AF4                     l13240:
 21618                           
 21619                           ;mcc_generated_files/rn487x/rn487x.c: 252:     cmdBuf[0] = '|';
 21620     0AF4  307C               	movlw	124
 21621     0AF5  0143               	movlb	3	; select bank3
 21622     0AF6  00A0               	movwf	_cmdBuf^(0+384)
 21623     0AF7                     l13242:
 21624                           
 21625                           ;mcc_generated_files/rn487x/rn487x.c: 253:     cmdBuf[1] = 'O';
 21626     0AF7  304F               	movlw	79
 21627     0AF8  00A1               	movwf	(_cmdBuf^(0+384)+1)
 21628     0AF9                     l13244:
 21629                           
 21630                           ;mcc_generated_files/rn487x/rn487x.c: 254:     cmdBuf[2] = ',';
 21631     0AF9  302C               	movlw	44
 21632     0AFA  00A2               	movwf	(_cmdBuf^(0+384)+2)
 21633     0AFB                     l13246:
 21634                           
 21635                           ;mcc_generated_files/rn487x/rn487x.c: 255:     cmdBuf[3] = ioHighNibble;
 21636     0AFB  0140               	movlb	0	; select bank0
 21637     0AFC  0824               	movf	RN487X_SetOutputs@ioHighNibble,w
 21638     0AFD  0143               	movlb	3	; select bank3
 21639     0AFE  00A3               	movwf	(_cmdBuf^(0+384)+3)
 21640     0AFF                     l13248:
 21641                           
 21642                           ;mcc_generated_files/rn487x/rn487x.c: 256:     cmdBuf[4] = ioLowNibble;
 21643     0AFF  0140               	movlb	0	; select bank0
 21644     0B00  0822               	movf	RN487X_SetOutputs@ioLowNibble,w
 21645     0B01  0143               	movlb	3	; select bank3
 21646     0B02  00A4               	movwf	(_cmdBuf^(0+384)+4)
 21647     0B03                     l13250:
 21648                           
 21649                           ;mcc_generated_files/rn487x/rn487x.c: 257:     cmdBuf[5] = ',';
 21650     0B03  302C               	movlw	44
 21651     0B04  00A5               	movwf	(_cmdBuf^(0+384)+5)
 21652     0B05                     l13252:
 21653                           
 21654                           ;mcc_generated_files/rn487x/rn487x.c: 258:     cmdBuf[6] = stateHighNibble;
 21655     0B05  0140               	movlb	0	; select bank0
 21656     0B06  0825               	movf	RN487X_SetOutputs@stateHighNibble,w
 21657     0B07  0143               	movlb	3	; select bank3
 21658     0B08  00A6               	movwf	(_cmdBuf^(0+384)+6)
 21659     0B09                     l13254:
 21660                           
 21661                           ;mcc_generated_files/rn487x/rn487x.c: 259:     cmdBuf[7] = stateLowNibble;
 21662     0B09  0140               	movlb	0	; select bank0
 21663     0B0A  0823               	movf	RN487X_SetOutputs@stateLowNibble,w
 21664     0B0B  0143               	movlb	3	; select bank3
 21665     0B0C  00A7               	movwf	(_cmdBuf^(0+384)+7)
 21666     0B0D                     l13256:
 21667                           
 21668                           ;mcc_generated_files/rn487x/rn487x.c: 260:     cmdBuf[8] = '\r';
 21669     0B0D  300D               	movlw	13
 21670     0B0E  00A8               	movwf	(_cmdBuf^(0+384)+8)
 21671     0B0F                     l13258:
 21672                           
 21673                           ;mcc_generated_files/rn487x/rn487x.c: 261:     cmdBuf[9] = '\n';
 21674     0B0F  300A               	movlw	10
 21675     0B10  00A9               	movwf	(_cmdBuf^(0+384)+9)
 21676     0B11                     l13260:
 21677                           
 21678                           ;mcc_generated_files/rn487x/rn487x.c: 263:     RN487X_SendCmd(cmdBuf, 10);
 21679     0B11  300A               	movlw	10
 21680     0B12  00F7               	movwf	RN487X_SendCmd@cmdLen
 21681     0B13  30A0               	movlw	(low (_cmdBuf| (0+256)))& (0+255)
 21682     0B14  3196  26D2  318A   	fcall	_RN487X_SendCmd
 21683     0B17                     l13262:
 21684                           
 21685                           ;mcc_generated_files/rn487x/rn487x.c: 264:     return RN487X_ReadDefaultResponse();;	Ret
      +                          urn value of _RN487X_SetOutputs is never used
 21686     0B17  318E  26EC  318A   	fcall	_RN487X_ReadDefaultResponse
 21687     0B1A                     l933:
 21688     0B1A  0008               	return
 21689     0B1B                     __end_of_RN487X_SetOutputs:
 21690                           
 21691                           	psect	text75
 21692     0EEC                     __ptext75:	
 21693 ;; *************** function _RN487X_ReadDefaultResponse *****************
 21694 ;; Defined at:
 21695 ;;		line 125 in file "mcc_generated_files/rn487x/rn487x.c"
 21696 ;; Parameters:    Size  Location     Type
 21697 ;;		None
 21698 ;; Auto vars:     Size  Location     Type
 21699 ;;  resp            3    3[COMMON] unsigned char [3]
 21700 ;;  status          1    6[COMMON] _Bool 
 21701 ;; Return value:  Size  Location     Type
 21702 ;;                  1    wreg      _Bool 
 21703 ;; Registers used:
 21704 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21705 ;; Tracked objects:
 21706 ;;		On entry : 0/0
 21707 ;;		On exit  : 0/0
 21708 ;;		Unchanged: 0/0
 21709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21711 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21713 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21714 ;;Total ram usage:        4 bytes
 21715 ;; Hardware stack levels used: 1
 21716 ;; Hardware stack levels required when called: 6
 21717 ;; This function calls:
 21718 ;;		_RN487X_Read@rn487x_interface$F1381
 21719 ;; This function is called by:
 21720 ;;		_RN487X_SetOutputs
 21721 ;;		_RN487X_Disconnect
 21722 ;; This function uses a non-reentrant model
 21723 ;;
 21724                           
 21725     0EEC                     _RN487X_ReadDefaultResponse:	
 21726                           ;psect for function _RN487X_ReadDefaultResponse
 21727                           
 21728     0EEC                     l13108:	
 21729                           ;incstack = 0
 21730                           ; Regs used in _RN487X_ReadDefaultResponse: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21731                           
 21732                           
 21733                           ;mcc_generated_files/rn487x/rn487x.c: 127:     uint8_t resp[3];;mcc_generated_files/rn48
      +                          7x/rn487x.c: 128:     _Bool status = 0;
 21734     0EEC  01F6               	clrf	RN487X_ReadDefaultResponse@status
 21735     0EED                     l13110:
 21736                           
 21737                           ;mcc_generated_files/rn487x/rn487x.c: 130:     resp[0] = RN487X.Read();
 21738     0EED  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21739     0EEE  0084               	movwf	4
 21740     0EEF  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21741     0EF0  0085               	movwf	5
 21742     0EF1  3F01               	moviw [1]fsr0
 21743     0EF2  008A               	movwf	10
 21744     0EF3  3F00               	moviw [0]fsr0
 21745     0EF4  000A               	callw
 21746     0EF5  318E               	pagesel	$
 21747     0EF6  00F3               	movwf	RN487X_ReadDefaultResponse@resp
 21748     0EF7                     l13112:
 21749                           
 21750                           ;mcc_generated_files/rn487x/rn487x.c: 131:     resp[1] = RN487X.Read();
 21751     0EF7  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21752     0EF8  0084               	movwf	4
 21753     0EF9  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21754     0EFA  0085               	movwf	5
 21755     0EFB  3F01               	moviw [1]fsr0
 21756     0EFC  008A               	movwf	10
 21757     0EFD  3F00               	moviw [0]fsr0
 21758     0EFE  000A               	callw
 21759     0EFF  318E               	pagesel	$
 21760     0F00  00F4               	movwf	RN487X_ReadDefaultResponse@resp+1
 21761     0F01                     l13114:
 21762                           
 21763                           ;mcc_generated_files/rn487x/rn487x.c: 132:     resp[2] = RN487X.Read();
 21764     0F01  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21765     0F02  0084               	movwf	4
 21766     0F03  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21767     0F04  0085               	movwf	5
 21768     0F05  3F01               	moviw [1]fsr0
 21769     0F06  008A               	movwf	10
 21770     0F07  3F00               	moviw [0]fsr0
 21771     0F08  000A               	callw
 21772     0F09  318E               	pagesel	$
 21773     0F0A  00F5               	movwf	RN487X_ReadDefaultResponse@resp+2
 21774                           
 21775                           ;mcc_generated_files/rn487x/rn487x.c: 134:     switch (resp[0])
 21776     0F0B  2F2B               	goto	l13134
 21777     0F0C                     l13116:
 21778                           
 21779                           ;mcc_generated_files/rn487x/rn487x.c: 137:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 138:             if ((resp[1] == 'O') && (resp[2] == 'K'))
 21780     0F0C  304F               	movlw	79
 21781     0F0D  0674               	xorwf	RN487X_ReadDefaultResponse@resp+1,w
 21782     0F0E  1D03               	btfss	3,2
 21783     0F0F  2F11               	goto	u9951
 21784     0F10  2F12               	goto	u9950
 21785     0F11                     u9951:
 21786     0F11  2F33               	goto	l13136
 21787     0F12                     u9950:
 21788     0F12                     l13118:
 21789     0F12  304B               	movlw	75
 21790     0F13  0675               	xorwf	RN487X_ReadDefaultResponse@resp+2,w
 21791     0F14  1D03               	btfss	3,2
 21792     0F15  2F17               	goto	u9961
 21793     0F16  2F18               	goto	u9960
 21794     0F17                     u9961:
 21795     0F17  2F33               	goto	l13136
 21796     0F18                     u9960:
 21797     0F18                     l13120:
 21798                           
 21799                           ;mcc_generated_files/rn487x/rn487x.c: 139:                 status = 1;
 21800     0F18  01F6               	clrf	RN487X_ReadDefaultResponse@status
 21801     0F19  0AF6               	incf	RN487X_ReadDefaultResponse@status,f
 21802     0F1A  2F33               	goto	l13136
 21803     0F1B                     l13122:
 21804                           
 21805                           ;mcc_generated_files/rn487x/rn487x.c: 144:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 145:             if ((resp[1] == 'r') && (resp[2] == 'r'))
 21806     0F1B  3072               	movlw	114
 21807     0F1C  0674               	xorwf	RN487X_ReadDefaultResponse@resp+1,w
 21808     0F1D  1D03               	btfss	3,2
 21809     0F1E  2F20               	goto	u9971
 21810     0F1F  2F21               	goto	u9970
 21811     0F20                     u9971:
 21812     0F20  2F33               	goto	l13136
 21813     0F21                     u9970:
 21814     0F21                     l13124:
 21815     0F21  3072               	movlw	114
 21816     0F22  0675               	xorwf	RN487X_ReadDefaultResponse@resp+2,w
 21817     0F23  1D03               	btfss	3,2
 21818     0F24  2F26               	goto	u9981
 21819     0F25  2F27               	goto	u9980
 21820     0F26                     u9981:
 21821     0F26  2F33               	goto	l13136
 21822     0F27                     u9980:
 21823     0F27                     l13126:
 21824                           
 21825                           ;mcc_generated_files/rn487x/rn487x.c: 146:                 status = 0;
 21826     0F27  01F6               	clrf	RN487X_ReadDefaultResponse@status
 21827     0F28  2F33               	goto	l13136
 21828     0F29                     l13128:
 21829                           
 21830                           ;mcc_generated_files/rn487x/rn487x.c: 151:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 152:             return status;
 21831     0F29  3000               	movlw	0
 21832     0F2A  2F73               	goto	l908
 21833     0F2B                     l13134:
 21834     0F2B  0873               	movf	RN487X_ReadDefaultResponse@resp,w
 21835                           
 21836                           ; Switch size 1, requested type "simple"
 21837                           ; Number of cases is 2, Range of values is 65 to 69
 21838                           ; switch strategies available:
 21839                           ; Name         Instructions Cycles
 21840                           ; simple_byte            7     4 (average)
 21841                           ; direct_byte           19     9 (fixed)
 21842                           ; jumptable            263     9 (fixed)
 21843                           ;	Chosen strategy is simple_byte
 21844     0F2C  3A41               	xorlw	65	; case 65
 21845     0F2D  1903               	skipnz
 21846     0F2E  2F0C               	goto	l13116
 21847     0F2F  3A04               	xorlw	4	; case 69
 21848     0F30  1903               	skipnz
 21849     0F31  2F1B               	goto	l13122
 21850     0F32  2F29               	goto	l13128
 21851     0F33                     l13136:
 21852                           
 21853                           ;mcc_generated_files/rn487x/rn487x.c: 157:     RN487X.Read();
 21854     0F33  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21855     0F34  0084               	movwf	4
 21856     0F35  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21857     0F36  0085               	movwf	5
 21858     0F37  3F01               	moviw [1]fsr0
 21859     0F38  008A               	movwf	10
 21860     0F39  3F00               	moviw [0]fsr0
 21861     0F3A  000A               	callw
 21862     0F3B  318E               	pagesel	$
 21863                           
 21864                           ;mcc_generated_files/rn487x/rn487x.c: 158:     RN487X.Read();
 21865     0F3C  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21866     0F3D  0084               	movwf	4
 21867     0F3E  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21868     0F3F  0085               	movwf	5
 21869     0F40  3F01               	moviw [1]fsr0
 21870     0F41  008A               	movwf	10
 21871     0F42  3F00               	moviw [0]fsr0
 21872     0F43  000A               	callw
 21873     0F44  318E               	pagesel	$
 21874                           
 21875                           ;mcc_generated_files/rn487x/rn487x.c: 161:     RN487X.Read();
 21876     0F45  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21877     0F46  0084               	movwf	4
 21878     0F47  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21879     0F48  0085               	movwf	5
 21880     0F49  3F01               	moviw [1]fsr0
 21881     0F4A  008A               	movwf	10
 21882     0F4B  3F00               	moviw [0]fsr0
 21883     0F4C  000A               	callw
 21884     0F4D  318E               	pagesel	$
 21885                           
 21886                           ;mcc_generated_files/rn487x/rn487x.c: 162:     RN487X.Read();
 21887     0F4E  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21888     0F4F  0084               	movwf	4
 21889     0F50  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21890     0F51  0085               	movwf	5
 21891     0F52  3F01               	moviw [1]fsr0
 21892     0F53  008A               	movwf	10
 21893     0F54  3F00               	moviw [0]fsr0
 21894     0F55  000A               	callw
 21895     0F56  318E               	pagesel	$
 21896                           
 21897                           ;mcc_generated_files/rn487x/rn487x.c: 163:     RN487X.Read();
 21898     0F57  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21899     0F58  0084               	movwf	4
 21900     0F59  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21901     0F5A  0085               	movwf	5
 21902     0F5B  3F01               	moviw [1]fsr0
 21903     0F5C  008A               	movwf	10
 21904     0F5D  3F00               	moviw [0]fsr0
 21905     0F5E  000A               	callw
 21906     0F5F  318E               	pagesel	$
 21907                           
 21908                           ;mcc_generated_files/rn487x/rn487x.c: 164:     RN487X.Read();
 21909     0F60  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21910     0F61  0084               	movwf	4
 21911     0F62  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21912     0F63  0085               	movwf	5
 21913     0F64  3F01               	moviw [1]fsr0
 21914     0F65  008A               	movwf	10
 21915     0F66  3F00               	moviw [0]fsr0
 21916     0F67  000A               	callw
 21917     0F68  318E               	pagesel	$
 21918                           
 21919                           ;mcc_generated_files/rn487x/rn487x.c: 165:     RN487X.Read();
 21920     0F69  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21921     0F6A  0084               	movwf	4
 21922     0F6B  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21923     0F6C  0085               	movwf	5
 21924     0F6D  3F01               	moviw [1]fsr0
 21925     0F6E  008A               	movwf	10
 21926     0F6F  3F00               	moviw [0]fsr0
 21927     0F70  000A               	callw
 21928     0F71  318E               	pagesel	$
 21929     0F72                     l13138:
 21930                           
 21931                           ;mcc_generated_files/rn487x/rn487x.c: 167:     return status;
 21932     0F72  0876               	movf	RN487X_ReadDefaultResponse@status,w
 21933     0F73                     l908:
 21934     0F73  0008               	return
 21935     0F74                     __end_of_RN487X_ReadDefaultResponse:
 21936                           
 21937                           	psect	text76
 21938     132C                     __ptext76:	
 21939 ;; *************** function _RN487X_EnterDataMode *****************
 21940 ;; Defined at:
 21941 ;;		line 208 in file "mcc_generated_files/rn487x/rn487x.c"
 21942 ;; Parameters:    Size  Location     Type
 21943 ;;		None
 21944 ;; Auto vars:     Size  Location     Type
 21945 ;;		None
 21946 ;; Return value:  Size  Location     Type
 21947 ;;                  1    wreg      _Bool 
 21948 ;; Registers used:
 21949 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21950 ;; Tracked objects:
 21951 ;;		On entry : 0/0
 21952 ;;		On exit  : 0/0
 21953 ;;		Unchanged: 0/0
 21954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21959 ;;Total ram usage:        0 bytes
 21960 ;; Hardware stack levels used: 1
 21961 ;; Hardware stack levels required when called: 7
 21962 ;; This function calls:
 21963 ;;		_RN487X_ReadMsg
 21964 ;;		_RN487X_SendCmd
 21965 ;; This function is called by:
 21966 ;;		_LIGHTBLUE_UpdateErrorLed
 21967 ;; This function uses a non-reentrant model
 21968 ;;
 21969                           
 21970     132C                     _RN487X_EnterDataMode:	
 21971                           ;psect for function _RN487X_EnterDataMode
 21972                           
 21973     132C                     l13266:	
 21974                           ;incstack = 0
 21975                           ; Regs used in _RN487X_EnterDataMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21976                           
 21977                           
 21978                           ;mcc_generated_files/rn487x/rn487x.c: 210:     const uint8_t cmdPrompt[] = {'E', 'N', 'D
      +                          ', '\r', '\n'};;mcc_generated_files/rn487x/rn487x.c: 212:     cmdBuf[0] = '-';
 21979     132C  302D               	movlw	45
 21980     132D  0143               	movlb	3	; select bank3
 21981     132E  00A0               	movwf	_cmdBuf^(0+384)
 21982                           
 21983                           ;mcc_generated_files/rn487x/rn487x.c: 213:     cmdBuf[1] = '-';
 21984     132F  302D               	movlw	45
 21985     1330  00A1               	movwf	(_cmdBuf^(0+384)+1)
 21986                           
 21987                           ;mcc_generated_files/rn487x/rn487x.c: 214:     cmdBuf[2] = '-';
 21988     1331  302D               	movlw	45
 21989     1332  00A2               	movwf	(_cmdBuf^(0+384)+2)
 21990                           
 21991                           ;mcc_generated_files/rn487x/rn487x.c: 215:     cmdBuf[3] = '\r';
 21992     1333  300D               	movlw	13
 21993     1334  00A3               	movwf	(_cmdBuf^(0+384)+3)
 21994                           
 21995                           ;mcc_generated_files/rn487x/rn487x.c: 216:     cmdBuf[4] = '\n';
 21996     1335  300A               	movlw	10
 21997     1336  00A4               	movwf	(_cmdBuf^(0+384)+4)
 21998     1337                     l13268:
 21999                           
 22000                           ;mcc_generated_files/rn487x/rn487x.c: 218:     RN487X_SendCmd(cmdBuf, 5);
 22001     1337  3005               	movlw	5
 22002     1338  00F7               	movwf	RN487X_SendCmd@cmdLen
 22003     1339  30A0               	movlw	(low (_cmdBuf| (0+256)))& (0+255)
 22004     133A  3196  26D2  3193   	fcall	_RN487X_SendCmd
 22005     133D                     l13270:
 22006                           
 22007                           ;mcc_generated_files/rn487x/rn487x.c: 220:     return RN487X_ReadMsg(cmdPrompt, sizeof (
      +                          cmdPrompt));;	Return value of _RN487X_EnterDataMode is never used
 22008     133D  3006               	movlw	low (RN487X_EnterDataMode@cmdPrompt| (0+32768))
 22009     133E  00F3               	movwf	RN487X_ReadMsg@expectedMsg
 22010     133F  30A0               	movlw	high (RN487X_EnterDataMode@cmdPrompt| (0+32768))
 22011     1340  00F4               	movwf	RN487X_ReadMsg@expectedMsg+1
 22012     1341  3005               	movlw	5
 22013     1342  00F5               	movwf	RN487X_ReadMsg@msgLen
 22014     1343  3195  25C3  3193   	fcall	_RN487X_ReadMsg
 22015     1346                     l926:
 22016     1346  0008               	return
 22017     1347                     __end_of_RN487X_EnterDataMode:
 22018                           
 22019                           	psect	text77
 22020     121E                     __ptext77:	
 22021 ;; *************** function _RN487X_EnterCmdMode *****************
 22022 ;; Defined at:
 22023 ;;		line 195 in file "mcc_generated_files/rn487x/rn487x.c"
 22024 ;; Parameters:    Size  Location     Type
 22025 ;;		None
 22026 ;; Auto vars:     Size  Location     Type
 22027 ;;		None
 22028 ;; Return value:  Size  Location     Type
 22029 ;;                  1    wreg      _Bool 
 22030 ;; Registers used:
 22031 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22032 ;; Tracked objects:
 22033 ;;		On entry : 0/0
 22034 ;;		On exit  : 0/0
 22035 ;;		Unchanged: 0/0
 22036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22041 ;;Total ram usage:        0 bytes
 22042 ;; Hardware stack levels used: 1
 22043 ;; Hardware stack levels required when called: 7
 22044 ;; This function calls:
 22045 ;;		_RN487X_ReadMsg
 22046 ;;		_RN487X_SendCmd
 22047 ;; This function is called by:
 22048 ;;		_LIGHTBLUE_UpdateErrorLed
 22049 ;; This function uses a non-reentrant model
 22050 ;;
 22051                           
 22052     121E                     _RN487X_EnterCmdMode:	
 22053                           ;psect for function _RN487X_EnterCmdMode
 22054                           
 22055     121E                     l13214:	
 22056                           ;incstack = 0
 22057                           ; Regs used in _RN487X_EnterCmdMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22058                           
 22059                           
 22060                           ;mcc_generated_files/rn487x/rn487x.c: 197:     const uint8_t cmdPrompt[] = {'C', 'M', 'D
      +                          ', '>', ' '};;mcc_generated_files/rn487x/rn487x.c: 199:     cmdBuf[0] = '$';
 22061     121E  3024               	movlw	36
 22062     121F  0143               	movlb	3	; select bank3
 22063     1220  00A0               	movwf	_cmdBuf^(0+384)
 22064                           
 22065                           ;mcc_generated_files/rn487x/rn487x.c: 200:     cmdBuf[1] = '$';
 22066     1221  3024               	movlw	36
 22067     1222  00A1               	movwf	(_cmdBuf^(0+384)+1)
 22068                           
 22069                           ;mcc_generated_files/rn487x/rn487x.c: 201:     cmdBuf[2] = '$';
 22070     1223  3024               	movlw	36
 22071     1224  00A2               	movwf	(_cmdBuf^(0+384)+2)
 22072     1225                     l13216:
 22073                           
 22074                           ;mcc_generated_files/rn487x/rn487x.c: 203:     RN487X_SendCmd(cmdBuf, 3);
 22075     1225  3003               	movlw	3
 22076     1226  00F7               	movwf	RN487X_SendCmd@cmdLen
 22077     1227  30A0               	movlw	(low (_cmdBuf| (0+256)))& (0+255)
 22078     1228  3196  26D2  3192   	fcall	_RN487X_SendCmd
 22079     122B                     l13218:
 22080                           
 22081                           ;mcc_generated_files/rn487x/rn487x.c: 205:     return RN487X_ReadMsg(cmdPrompt, sizeof (
      +                          cmdPrompt));;	Return value of _RN487X_EnterCmdMode is never used
 22082     122B  300B               	movlw	low (RN487X_EnterCmdMode@cmdPrompt| (0+32768))
 22083     122C  00F3               	movwf	RN487X_ReadMsg@expectedMsg
 22084     122D  30A0               	movlw	high (RN487X_EnterCmdMode@cmdPrompt| (0+32768))
 22085     122E  00F4               	movwf	RN487X_ReadMsg@expectedMsg+1
 22086     122F  3005               	movlw	5
 22087     1230  00F5               	movwf	RN487X_ReadMsg@msgLen
 22088     1231  3195  25C3  3192   	fcall	_RN487X_ReadMsg
 22089     1234                     l921:
 22090     1234  0008               	return
 22091     1235                     __end_of_RN487X_EnterCmdMode:
 22092                           
 22093                           	psect	text78
 22094     16D2                     __ptext78:	
 22095 ;; *************** function _RN487X_SendCmd *****************
 22096 ;; Defined at:
 22097 ;;		line 79 in file "mcc_generated_files/rn487x/rn487x.c"
 22098 ;; Parameters:    Size  Location     Type
 22099 ;;  cmd             1    wreg     PTR const unsigned char 
 22100 ;;		 -> cmdBuf(64), 
 22101 ;;  cmdLen          1    7[COMMON] unsigned char 
 22102 ;; Auto vars:     Size  Location     Type
 22103 ;;  cmd             1   10[COMMON] PTR const unsigned char 
 22104 ;;		 -> cmdBuf(64), 
 22105 ;;  index           1    9[COMMON] unsigned char 
 22106 ;; Return value:  Size  Location     Type
 22107 ;;                  1    wreg      void 
 22108 ;; Registers used:
 22109 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22110 ;; Tracked objects:
 22111 ;;		On entry : 0/0
 22112 ;;		On exit  : 0/0
 22113 ;;		Unchanged: 0/0
 22114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22115 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22116 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22117 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22118 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22119 ;;Total ram usage:        4 bytes
 22120 ;; Hardware stack levels used: 1
 22121 ;; Hardware stack levels required when called: 6
 22122 ;; This function calls:
 22123 ;;		_RN487X_Write
 22124 ;;		_RN487X_is_tx_done
 22125 ;; This function is called by:
 22126 ;;		_RN487X_EnterCmdMode
 22127 ;;		_RN487X_EnterDataMode
 22128 ;;		_RN487X_SetOutputs
 22129 ;;		_RN487X_GetCmd
 22130 ;;		_RN487X_GetInputsValues
 22131 ;;		_RN487X_RebootCmd
 22132 ;;		_RN487X_Disconnect
 22133 ;; This function uses a non-reentrant model
 22134 ;;
 22135                           
 22136     16D2                     _RN487X_SendCmd:	
 22137                           ;psect for function _RN487X_SendCmd
 22138                           
 22139                           
 22140                           ;incstack = 0
 22141                           ; Regs used in _RN487X_SendCmd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22142                           ;RN487X_SendCmd@cmd stored from wreg
 22143     16D2  00FA               	movwf	RN487X_SendCmd@cmd
 22144     16D3                     l13080:
 22145                           
 22146                           ;mcc_generated_files/rn487x/rn487x.c: 79: void RN487X_SendCmd(const uint8_t *cmd, uint8_
      +                          t cmdLen);mcc_generated_files/rn487x/rn487x.c: 80: {;mcc_generated_files/rn487x/rn487x.c
      +                          : 81:     uint8_t index = 0;
 22147     16D3  01F9               	clrf	RN487X_SendCmd@index
 22148                           
 22149                           ;mcc_generated_files/rn487x/rn487x.c: 83:     while (index < cmdLen)
 22150     16D4  2EF9               	goto	l13088
 22151     16D5                     l13082:
 22152                           
 22153                           ;mcc_generated_files/rn487x/rn487x.c: 84:     {;mcc_generated_files/rn487x/rn487x.c: 85:
      +                                   if (RN487X.TransmitDone())
 22154     16D5  306C               	movlw	low ((_RN487X+4)| (0+32768))
 22155     16D6  0084               	movwf	4
 22156     16D7  3098               	movlw	high ((_RN487X+4)| (0+32768))
 22157     16D8  0085               	movwf	5
 22158     16D9  3F01               	moviw [1]fsr0
 22159     16DA  008A               	movwf	10
 22160     16DB  3F00               	moviw [0]fsr0
 22161     16DC  000A               	callw
 22162     16DD  3196               	pagesel	$
 22163     16DE  3A00               	xorlw	0
 22164     16DF  1903               	skipnz
 22165     16E0  2EE2               	goto	u9911
 22166     16E1  2EE3               	goto	u9910
 22167     16E2                     u9911:
 22168     16E2  2EF9               	goto	l13088
 22169     16E3                     u9910:
 22170     16E3                     l13084:
 22171                           
 22172                           ;mcc_generated_files/rn487x/rn487x.c: 86:         {;mcc_generated_files/rn487x/rn487x.c:
      +                           87:             RN487X.Write(cmd[index]);
 22173     16E3  0879               	movf	RN487X_SendCmd@index,w
 22174     16E4  077A               	addwf	RN487X_SendCmd@cmd,w
 22175     16E5  00F8               	movwf	??_RN487X_SendCmd
 22176     16E6  0878               	movf	??_RN487X_SendCmd,w
 22177     16E7  0086               	movwf	6
 22178     16E8  3001               	movlw	1	; select bank2/3
 22179     16E9  0087               	movwf	7
 22180     16EA  0801               	movf	1,w
 22181     16EB  00F6               	movwf	RN487X_Write@txData
 22182     16EC  3068               	movlw	low (_RN487X| (0+32768))
 22183     16ED  0084               	movwf	4
 22184     16EE  3098               	movlw	high (_RN487X| (0+32768))
 22185     16EF  0085               	movwf	5
 22186     16F0  3F01               	moviw [1]fsr0
 22187     16F1  008A               	movwf	10
 22188     16F2  3F00               	moviw [0]fsr0
 22189     16F3  000A               	callw
 22190     16F4  3196               	pagesel	$
 22191     16F5                     l13086:
 22192                           
 22193                           ;mcc_generated_files/rn487x/rn487x.c: 88:             index++;
 22194     16F5  3001               	movlw	1
 22195     16F6  00F8               	movwf	??_RN487X_SendCmd
 22196     16F7  0878               	movf	??_RN487X_SendCmd,w
 22197     16F8  07F9               	addwf	RN487X_SendCmd@index,f
 22198     16F9                     l13088:
 22199                           
 22200                           ;mcc_generated_files/rn487x/rn487x.c: 83:     while (index < cmdLen)
 22201     16F9  0877               	movf	RN487X_SendCmd@cmdLen,w
 22202     16FA  0279               	subwf	RN487X_SendCmd@index,w
 22203     16FB  1C03               	skipc
 22204     16FC  2EFE               	goto	u9921
 22205     16FD  2EFF               	goto	u9920
 22206     16FE                     u9921:
 22207     16FE  2ED5               	goto	l13082
 22208     16FF                     u9920:
 22209     16FF                     l886:
 22210     16FF  0008               	return
 22211     1700                     __end_of_RN487X_SendCmd:
 22212                           
 22213                           	psect	text79
 22214     1FB7                     __ptext79:	
 22215 ;; *************** function _RN487X_is_tx_done *****************
 22216 ;; Defined at:
 22217 ;;		line 262 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 22218 ;; Parameters:    Size  Location     Type
 22219 ;;		None
 22220 ;; Auto vars:     Size  Location     Type
 22221 ;;		None
 22222 ;; Return value:  Size  Location     Type
 22223 ;;                  1    wreg      _Bool 
 22224 ;; Registers used:
 22225 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 22226 ;; Tracked objects:
 22227 ;;		On entry : 0/0
 22228 ;;		On exit  : 0/0
 22229 ;;		Unchanged: 0/0
 22230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22235 ;;Total ram usage:        0 bytes
 22236 ;; Hardware stack levels used: 1
 22237 ;; Hardware stack levels required when called: 5
 22238 ;; This function calls:
 22239 ;;		_EUSART1_is_tx_done
 22240 ;;		_EUSART2_is_tx_done
 22241 ;; This function is called by:
 22242 ;;		_RN487X_SendCmd
 22243 ;; This function uses a non-reentrant model
 22244 ;;
 22245                           
 22246     1FB7                     _RN487X_is_tx_done:	
 22247                           ;psect for function _RN487X_is_tx_done
 22248                           
 22249     1FB7                     l13050:	
 22250                           ;incstack = 0
 22251                           ; Regs used in _RN487X_is_tx_done: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 22252                           
 22253                           
 22254                           ;mcc_generated_files/rn487x/rn487x_interface.c: 264:     return uart[UART_BLE].TransmitD
      +                          one();
 22255     1FB7  3022               	movlw	low ((_uart+34)| (0+32768))
 22256     1FB8  0084               	movwf	4
 22257     1FB9  3098               	movlw	high ((_uart+34)| (0+32768))
 22258     1FBA  0085               	movwf	5
 22259     1FBB  3F01               	moviw [1]fsr0
 22260     1FBC  008A               	movwf	10
 22261     1FBD  3F00               	moviw [0]fsr0
 22262     1FBE  000A               	callw
 22263     1FBF  319F               	pagesel	$
 22264     1FC0                     l792:
 22265     1FC0  0008               	return
 22266     1FC1                     __end_of_RN487X_is_tx_done:
 22267                           
 22268                           	psect	text80
 22269     1EAB                     __ptext80:	
 22270 ;; *************** function _EUSART1_is_tx_done *****************
 22271 ;; Defined at:
 22272 ;;		line 142 in file "mcc_generated_files/eusart1.c"
 22273 ;; Parameters:    Size  Location     Type
 22274 ;;		None
 22275 ;; Auto vars:     Size  Location     Type
 22276 ;;		None
 22277 ;; Return value:  Size  Location     Type
 22278 ;;                  1    wreg      _Bool 
 22279 ;; Registers used:
 22280 ;;		wreg, status,2, status,0
 22281 ;; Tracked objects:
 22282 ;;		On entry : 0/0
 22283 ;;		On exit  : 0/0
 22284 ;;		Unchanged: 0/0
 22285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22290 ;;Total ram usage:        0 bytes
 22291 ;; Hardware stack levels used: 1
 22292 ;; Hardware stack levels required when called: 4
 22293 ;; This function calls:
 22294 ;;		Nothing
 22295 ;; This function is called by:
 22296 ;;		_RN487X_is_tx_done
 22297 ;; This function uses a non-reentrant model
 22298 ;;
 22299                           
 22300     1EAB                     _EUSART1_is_tx_done:	
 22301                           ;psect for function _EUSART1_is_tx_done
 22302                           
 22303     1EAB                     l12990:	
 22304                           ;incstack = 0
 22305                           ; Regs used in _EUSART1_is_tx_done: [wreg+status,2+status,0]
 22306                           
 22307                           
 22308                           ;mcc_generated_files/eusart1.c: 144:     return TX1STAbits.TRMT;
 22309     1EAB  0142               	movlb	2	; select bank2
 22310     1EAC  0C1E               	rrf	30,w	;volatile
 22311     1EAD  3901               	andlw	1
 22312     1EAE                     l1204:
 22313     1EAE  0008               	return
 22314     1EAF                     __end_of_EUSART1_is_tx_done:
 22315                           
 22316                           	psect	text81
 22317     1EA7                     __ptext81:	
 22318 ;; *************** function _EUSART2_is_tx_done *****************
 22319 ;; Defined at:
 22320 ;;		line 142 in file "mcc_generated_files/eusart2.c"
 22321 ;; Parameters:    Size  Location     Type
 22322 ;;		None
 22323 ;; Auto vars:     Size  Location     Type
 22324 ;;		None
 22325 ;; Return value:  Size  Location     Type
 22326 ;;                  1    wreg      _Bool 
 22327 ;; Registers used:
 22328 ;;		wreg, status,2, status,0
 22329 ;; Tracked objects:
 22330 ;;		On entry : 0/0
 22331 ;;		On exit  : 0/0
 22332 ;;		Unchanged: 0/0
 22333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22338 ;;Total ram usage:        0 bytes
 22339 ;; Hardware stack levels used: 1
 22340 ;; Hardware stack levels required when called: 4
 22341 ;; This function calls:
 22342 ;;		Nothing
 22343 ;; This function is called by:
 22344 ;;		_RN487X_is_tx_done
 22345 ;; This function uses a non-reentrant model
 22346 ;;
 22347                           
 22348     1EA7                     _EUSART2_is_tx_done:	
 22349                           ;psect for function _EUSART2_is_tx_done
 22350                           
 22351     1EA7                     l12946:	
 22352                           ;incstack = 0
 22353                           ; Regs used in _EUSART2_is_tx_done: [wreg+status,2+status,0]
 22354                           
 22355                           
 22356                           ;mcc_generated_files/eusart2.c: 144:     return TX2STAbits.TRMT;
 22357     1EA7  0154               	movlb	20	; select bank20
 22358     1EA8  0C1E               	rrf	30,w	;volatile
 22359     1EA9  3901               	andlw	1
 22360     1EAA                     l1060:
 22361     1EAA  0008               	return
 22362     1EAB                     __end_of_EUSART2_is_tx_done:
 22363                           
 22364                           	psect	text82
 22365     15C3                     __ptext82:	
 22366 ;; *************** function _RN487X_ReadMsg *****************
 22367 ;; Defined at:
 22368 ;;		line 108 in file "mcc_generated_files/rn487x/rn487x.c"
 22369 ;; Parameters:    Size  Location     Type
 22370 ;;  expectedMsg     2    3[COMMON] PTR const unsigned char 
 22371 ;;		 -> RN487X_RebootCmd@reboot(11), RN487X_GetInputsValues@ioValue(2), RN487X_EnterDataMode@cmdPrompt(5), RN487X_EnterC
      +mdMode@cmdPrompt(5), 
 22372 ;;  msgLen          1    5[COMMON] unsigned char 
 22373 ;; Auto vars:     Size  Location     Type
 22374 ;;  index           1    9[COMMON] unsigned char 
 22375 ;;  resp            1    8[COMMON] unsigned char 
 22376 ;; Return value:  Size  Location     Type
 22377 ;;                  1    wreg      _Bool 
 22378 ;; Registers used:
 22379 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22380 ;; Tracked objects:
 22381 ;;		On entry : 0/0
 22382 ;;		On exit  : 0/0
 22383 ;;		Unchanged: 0/0
 22384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22385 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22386 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22387 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22388 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22389 ;;Total ram usage:        7 bytes
 22390 ;; Hardware stack levels used: 1
 22391 ;; Hardware stack levels required when called: 6
 22392 ;; This function calls:
 22393 ;;		_RN487X_Read@rn487x_interface$F1381
 22394 ;; This function is called by:
 22395 ;;		_RN487X_EnterCmdMode
 22396 ;;		_RN487X_EnterDataMode
 22397 ;;		_RN487X_GetInputsValues
 22398 ;;		_RN487X_RebootCmd
 22399 ;; This function uses a non-reentrant model
 22400 ;;
 22401                           
 22402     15C3                     _RN487X_ReadMsg:	
 22403                           ;psect for function _RN487X_ReadMsg
 22404                           
 22405     15C3                     l13090:	
 22406                           ;incstack = 0
 22407                           ; Regs used in _RN487X_ReadMsg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22408                           
 22409                           
 22410                           ;mcc_generated_files/rn487x/rn487x.c: 108: _Bool RN487X_ReadMsg(const uint8_t *expectedM
      +                          sg, uint8_t msgLen);mcc_generated_files/rn487x/rn487x.c: 109: {;mcc_generated_files/rn48
      +                          7x/rn487x.c: 110:     uint8_t index;;mcc_generated_files/rn487x/rn487x.c: 111:     uint8
      +                          _t resp;;mcc_generated_files/rn487x/rn487x.c: 113:     for (index = 0; index < msgLen; i
      +                          ndex++)
 22411     15C3  01F9               	clrf	RN487X_ReadMsg@index
 22412     15C4  2DE6               	goto	l13102
 22413     15C5                     l13092:
 22414                           
 22415                           ;mcc_generated_files/rn487x/rn487x.c: 114:     {;mcc_generated_files/rn487x/rn487x.c: 11
      +                          5:         resp = RN487X.Read();
 22416     15C5  306A               	movlw	low ((_RN487X+2)| (0+32768))
 22417     15C6  0084               	movwf	4
 22418     15C7  3098               	movlw	high ((_RN487X+2)| (0+32768))
 22419     15C8  0085               	movwf	5
 22420     15C9  3F01               	moviw [1]fsr0
 22421     15CA  008A               	movwf	10
 22422     15CB  3F00               	moviw [0]fsr0
 22423     15CC  000A               	callw
 22424     15CD  3195               	pagesel	$
 22425     15CE  00F8               	movwf	RN487X_ReadMsg@resp
 22426     15CF                     l13094:
 22427                           
 22428                           ;mcc_generated_files/rn487x/rn487x.c: 116:         if (resp != expectedMsg[index])
 22429     15CF  0874               	movf	RN487X_ReadMsg@expectedMsg+1,w
 22430     15D0  00F7               	movwf	??_RN487X_ReadMsg+1
 22431     15D1  0873               	movf	RN487X_ReadMsg@expectedMsg,w
 22432     15D2  00F6               	movwf	??_RN487X_ReadMsg
 22433     15D3  0879               	movf	RN487X_ReadMsg@index,w
 22434     15D4  0776               	addwf	??_RN487X_ReadMsg,w
 22435     15D5  0084               	movwf	4
 22436     15D6  0877               	movf	??_RN487X_ReadMsg+1,w
 22437     15D7  1803               	skipnc
 22438     15D8  0A77               	incf	??_RN487X_ReadMsg+1,w
 22439     15D9  0085               	movwf	5
 22440     15DA  0800               	movf	0,w	;code access
 22441     15DB  0678               	xorwf	RN487X_ReadMsg@resp,w
 22442     15DC  1903               	skipnz
 22443     15DD  2DDF               	goto	u9931
 22444     15DE  2DE0               	goto	u9930
 22445     15DF                     u9931:
 22446     15DF  2DE2               	goto	l13100
 22447     15E0                     u9930:
 22448     15E0                     l13096:
 22449                           
 22450                           ;mcc_generated_files/rn487x/rn487x.c: 117:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 118:             return 0;
 22451     15E0  3000               	movlw	0
 22452     15E1  2DED               	goto	l897
 22453     15E2                     l13100:
 22454                           
 22455                           ;mcc_generated_files/rn487x/rn487x.c: 120:     }
 22456     15E2  3001               	movlw	1
 22457     15E3  00F6               	movwf	??_RN487X_ReadMsg
 22458     15E4  0876               	movf	??_RN487X_ReadMsg,w
 22459     15E5  07F9               	addwf	RN487X_ReadMsg@index,f
 22460     15E6                     l13102:
 22461     15E6  0875               	movf	RN487X_ReadMsg@msgLen,w
 22462     15E7  0279               	subwf	RN487X_ReadMsg@index,w
 22463     15E8  1C03               	skipc
 22464     15E9  2DEB               	goto	u9941
 22465     15EA  2DEC               	goto	u9940
 22466     15EB                     u9941:
 22467     15EB  2DC5               	goto	l13092
 22468     15EC                     u9940:
 22469     15EC                     l13104:
 22470                           
 22471                           ;mcc_generated_files/rn487x/rn487x.c: 122:     return 1;
 22472     15EC  3001               	movlw	1
 22473     15ED                     l897:
 22474     15ED  0008               	return
 22475     15EE                     __end_of_RN487X_ReadMsg:
 22476                           
 22477                           	psect	text83
 22478     1FAD                     __ptext83:	
 22479 ;; *************** function _RN487X_Read@rn487x_interface$F1381 *****************
 22480 ;; Defined at:
 22481 ;;		line 257 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 22482 ;; Parameters:    Size  Location     Type
 22483 ;;		None
 22484 ;; Auto vars:     Size  Location     Type
 22485 ;;		None
 22486 ;; Return value:  Size  Location     Type
 22487 ;;                  1    wreg      unsigned char 
 22488 ;; Registers used:
 22489 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22490 ;; Tracked objects:
 22491 ;;		On entry : 0/0
 22492 ;;		On exit  : 0/0
 22493 ;;		Unchanged: 0/0
 22494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22499 ;;Total ram usage:        0 bytes
 22500 ;; Hardware stack levels used: 1
 22501 ;; Hardware stack levels required when called: 5
 22502 ;; This function calls:
 22503 ;;		_EUSART1_Read
 22504 ;;		_EUSART2_Read
 22505 ;; This function is called by:
 22506 ;;		_RN487X_ReadMsg
 22507 ;;		_RN487X_ReadDefaultResponse
 22508 ;;		_RN487X_FilterData
 22509 ;;		_RN487X_Init
 22510 ;;		_RN487X_GetCmd
 22511 ;;		_RN487X_WaitForMsg
 22512 ;; This function uses a non-reentrant model
 22513 ;;
 22514                           
 22515     1FAD                     _RN487X_Read@rn487x_interface$F1381:	
 22516                           ;psect for function _RN487X_Read@rn487x_interface$F1381
 22517                           
 22518     1FAD                     l13046:	
 22519                           ;incstack = 0
 22520                           ; Regs used in _RN487X_Read@rn487x_interface$F1381: [wreg-fsr1h+status,2+status,0+pclath
      +                          +cstack]
 22521                           
 22522                           
 22523                           ;mcc_generated_files/rn487x/rn487x_interface.c: 259:     return uart[UART_BLE].Read();
 22524     1FAD  3014               	movlw	low ((_uart+20)| (0+32768))
 22525     1FAE  0084               	movwf	4
 22526     1FAF  3098               	movlw	high ((_uart+20)| (0+32768))
 22527     1FB0  0085               	movwf	5
 22528     1FB1  3F01               	moviw [1]fsr0
 22529     1FB2  008A               	movwf	10
 22530     1FB3  3F00               	moviw [0]fsr0
 22531     1FB4  000A               	callw
 22532     1FB5  319F               	pagesel	$
 22533     1FB6                     l789:
 22534     1FB6  0008               	return
 22535     1FB7                     __end_of_RN487X_Read@rn487x_interface$F1381:
 22536                           
 22537                           	psect	text84
 22538     154B                     __ptext84:	
 22539 ;; *************** function _EUSART1_Read *****************
 22540 ;; Defined at:
 22541 ;;		line 151 in file "mcc_generated_files/eusart1.c"
 22542 ;; Parameters:    Size  Location     Type
 22543 ;;		None
 22544 ;; Auto vars:     Size  Location     Type
 22545 ;;  readValue       1    2[COMMON] unsigned char 
 22546 ;; Return value:  Size  Location     Type
 22547 ;;                  1    wreg      unsigned char 
 22548 ;; Registers used:
 22549 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 22550 ;; Tracked objects:
 22551 ;;		On entry : 0/0
 22552 ;;		On exit  : 0/0
 22553 ;;		Unchanged: 0/0
 22554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22556 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22557 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22558 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22559 ;;Total ram usage:        2 bytes
 22560 ;; Hardware stack levels used: 1
 22561 ;; Hardware stack levels required when called: 4
 22562 ;; This function calls:
 22563 ;;		Nothing
 22564 ;; This function is called by:
 22565 ;;		_getch
 22566 ;;		_RN487X_Read@rn487x_interface$F1381
 22567 ;;		_RN487X_Example_TransparentUart
 22568 ;;		_main
 22569 ;; This function uses a non-reentrant model
 22570 ;;
 22571                           
 22572     154B                     _EUSART1_Read:	
 22573                           ;psect for function _EUSART1_Read
 22574                           
 22575     154B                     l12994:	
 22576                           ;incstack = 0
 22577                           ; Regs used in _EUSART1_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 22578                           
 22579     154B                     l12996:	
 22580                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 22581                           
 22582                           
 22583                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 22584     154B  0140               	movlb	0	; select bank0
 22585     154C  0858               	movf	_eusart1RxCount,w	;volatile
 22586     154D  1903               	btfsc	3,2
 22587     154E  2D50               	goto	u9811
 22588     154F  2D51               	goto	u9810
 22589     1550                     u9811:
 22590     1550  2D4B               	goto	l12996
 22591     1551                     u9810:
 22592     1551                     l12998:
 22593                           
 22594                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 22595     1551  0859               	movf	_eusart1RxTail,w	;volatile
 22596     1552  3EBD               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 22597     1553  0086               	movwf	6
 22598     1554  0187               	clrf	7
 22599     1555  0801               	movf	1,w
 22600     1556  00D7               	movwf	_eusart1RxLastError	;volatile
 22601                           
 22602                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
 22603     1557  0859               	movf	_eusart1RxTail,w
 22604     1558  3E44               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 22605     1559  0086               	movwf	6
 22606     155A  3001               	movlw	1	; select bank2/3
 22607     155B  0087               	movwf	7
 22608     155C  0801               	movf	1,w
 22609     155D  00F2               	movwf	EUSART1_Read@readValue
 22610     155E                     l13000:
 22611     155E  3001               	movlw	1
 22612     155F  00F1               	movwf	??_EUSART1_Read
 22613     1560  0871               	movf	??_EUSART1_Read,w
 22614     1561  07D9               	addwf	_eusart1RxTail,f	;volatile
 22615     1562                     l13002:
 22616                           
 22617                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 22618     1562  3008               	movlw	8
 22619     1563  0259               	subwf	_eusart1RxTail,w	;volatile
 22620     1564  1C03               	skipc
 22621     1565  2D67               	goto	u9821
 22622     1566  2D68               	goto	u9820
 22623     1567                     u9821:
 22624     1567  2D69               	goto	l13006
 22625     1568                     u9820:
 22626     1568                     l13004:
 22627                           
 22628                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
 22629     1568  01D9               	clrf	_eusart1RxTail	;volatile
 22630     1569                     l13006:
 22631                           
 22632                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
 22633     1569  014E               	movlb	14	; select bank14
 22634     156A  1299               	bcf	25,5	;volatile
 22635     156B                     l13008:
 22636                           
 22637                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
 22638     156B  3001               	movlw	1
 22639     156C  0140               	movlb	0	; select bank0
 22640     156D  02D8               	subwf	_eusart1RxCount,f	;volatile
 22641     156E                     l13010:
 22642                           
 22643                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
 22644     156E  014E               	movlb	14	; select bank14
 22645     156F  1699               	bsf	25,5	;volatile
 22646     1570                     l13012:
 22647                           
 22648                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
 22649     1570  0872               	movf	EUSART1_Read@readValue,w
 22650     1571                     l1214:
 22651     1571  0008               	return
 22652     1572                     __end_of_EUSART1_Read:
 22653                           
 22654                           	psect	text85
 22655     14D7                     __ptext85:	
 22656 ;; *************** function _EUSART2_Read *****************
 22657 ;; Defined at:
 22658 ;;		line 151 in file "mcc_generated_files/eusart2.c"
 22659 ;; Parameters:    Size  Location     Type
 22660 ;;		None
 22661 ;; Auto vars:     Size  Location     Type
 22662 ;;  readValue       1    2[COMMON] unsigned char 
 22663 ;; Return value:  Size  Location     Type
 22664 ;;                  1    wreg      unsigned char 
 22665 ;; Registers used:
 22666 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 22667 ;; Tracked objects:
 22668 ;;		On entry : 0/0
 22669 ;;		On exit  : 0/0
 22670 ;;		Unchanged: 0/0
 22671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22673 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22674 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22675 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22676 ;;Total ram usage:        2 bytes
 22677 ;; Hardware stack levels used: 1
 22678 ;; Hardware stack levels required when called: 4
 22679 ;; This function calls:
 22680 ;;		Nothing
 22681 ;; This function is called by:
 22682 ;;		_RN487X_Read@rn487x_interface$F1381
 22683 ;;		_RN487X_Example_TransparentUart
 22684 ;;		_main
 22685 ;; This function uses a non-reentrant model
 22686 ;;
 22687                           
 22688     14D7                     _EUSART2_Read:	
 22689                           ;psect for function _EUSART2_Read
 22690                           
 22691     14D7                     l12950:	
 22692                           ;incstack = 0
 22693                           ; Regs used in _EUSART2_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 22694                           
 22695     14D7                     l12952:	
 22696                           ;mcc_generated_files/eusart2.c: 155:     while(0 == eusart2RxCount)
 22697                           
 22698                           
 22699                           ;mcc_generated_files/eusart2.c: 155:     while(0 == eusart2RxCount)
 22700     14D7  0140               	movlb	0	; select bank0
 22701     14D8  085F               	movf	_eusart2RxCount,w	;volatile
 22702     14D9  1903               	btfsc	3,2
 22703     14DA  2CDC               	goto	u9761
 22704     14DB  2CDD               	goto	u9760
 22705     14DC                     u9761:
 22706     14DC  2CD7               	goto	l12952
 22707     14DD                     u9760:
 22708     14DD                     l12954:
 22709                           
 22710                           ;mcc_generated_files/eusart2.c: 159:     eusart2RxLastError = eusart2RxStatusBuffer[eusa
      +                          rt2RxTail];
 22711     14DD  0860               	movf	_eusart2RxTail,w	;volatile
 22712     14DE  3ECD               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 22713     14DF  0086               	movwf	6
 22714     14E0  0187               	clrf	7
 22715     14E1  0801               	movf	1,w
 22716     14E2  00DE               	movwf	_eusart2RxLastError	;volatile
 22717                           
 22718                           ;mcc_generated_files/eusart2.c: 161:     readValue = eusart2RxBuffer[eusart2RxTail++];
 22719     14E3  0860               	movf	_eusart2RxTail,w
 22720     14E4  3ED5               	addlw	(low (_eusart2RxBuffer| 0))& (0+255)
 22721     14E5  0086               	movwf	6
 22722     14E6  0187               	clrf	7
 22723     14E7  0801               	movf	1,w
 22724     14E8  00F2               	movwf	EUSART2_Read@readValue
 22725     14E9                     l12956:
 22726     14E9  3001               	movlw	1
 22727     14EA  00F1               	movwf	??_EUSART2_Read
 22728     14EB  0871               	movf	??_EUSART2_Read,w
 22729     14EC  07E0               	addwf	_eusart2RxTail,f	;volatile
 22730     14ED                     l12958:
 22731                           
 22732                           ;mcc_generated_files/eusart2.c: 162:     if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
 22733     14ED  3008               	movlw	8
 22734     14EE  0260               	subwf	_eusart2RxTail,w	;volatile
 22735     14EF  1C03               	skipc
 22736     14F0  2CF2               	goto	u9771
 22737     14F1  2CF3               	goto	u9770
 22738     14F2                     u9771:
 22739     14F2  2CF4               	goto	l12962
 22740     14F3                     u9770:
 22741     14F3                     l12960:
 22742                           
 22743                           ;mcc_generated_files/eusart2.c: 163:     {;mcc_generated_files/eusart2.c: 164:         e
      +                          usart2RxTail = 0;
 22744     14F3  01E0               	clrf	_eusart2RxTail	;volatile
 22745     14F4                     l12962:
 22746                           
 22747                           ;mcc_generated_files/eusart2.c: 166:     PIE3bits.RC2IE = 0;
 22748     14F4  014E               	movlb	14	; select bank14
 22749     14F5  1399               	bcf	25,7	;volatile
 22750     14F6                     l12964:
 22751                           
 22752                           ;mcc_generated_files/eusart2.c: 167:     eusart2RxCount--;
 22753     14F6  3001               	movlw	1
 22754     14F7  0140               	movlb	0	; select bank0
 22755     14F8  02DF               	subwf	_eusart2RxCount,f	;volatile
 22756     14F9                     l12966:
 22757                           
 22758                           ;mcc_generated_files/eusart2.c: 168:     PIE3bits.RC2IE = 1;
 22759     14F9  014E               	movlb	14	; select bank14
 22760     14FA  1799               	bsf	25,7	;volatile
 22761     14FB                     l12968:
 22762                           
 22763                           ;mcc_generated_files/eusart2.c: 170:     return readValue;
 22764     14FB  0872               	movf	EUSART2_Read@readValue,w
 22765     14FC                     l1070:
 22766     14FC  0008               	return
 22767     14FD                     __end_of_EUSART2_Read:
 22768                           
 22769                           	psect	text86
 22770     1F70                     __ptext86:	
 22771 ;; *************** function _RN487X_Delay *****************
 22772 ;; Defined at:
 22773 ;;		line 272 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 22774 ;; Parameters:    Size  Location     Type
 22775 ;;  delayCount      2    4[COMMON] unsigned short 
 22776 ;; Auto vars:     Size  Location     Type
 22777 ;;		None
 22778 ;; Return value:  Size  Location     Type
 22779 ;;                  1    wreg      void 
 22780 ;; Registers used:
 22781 ;;		wreg, status,2, status,0, pclath, cstack
 22782 ;; Tracked objects:
 22783 ;;		On entry : 0/0
 22784 ;;		On exit  : 0/0
 22785 ;;		Unchanged: 0/0
 22786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22787 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22790 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22791 ;;Total ram usage:        2 bytes
 22792 ;; Hardware stack levels used: 1
 22793 ;; Hardware stack levels required when called: 5
 22794 ;; This function calls:
 22795 ;;		_DELAY_milliseconds
 22796 ;; This function is called by:
 22797 ;;		_LIGHTBLUE_UpdateErrorLed
 22798 ;;		_RN487X_Init
 22799 ;; This function uses a non-reentrant model
 22800 ;;
 22801                           
 22802     1F70                     _RN487X_Delay:	
 22803                           ;psect for function _RN487X_Delay
 22804                           
 22805     1F70                     l13274:	
 22806                           ;incstack = 0
 22807                           ; Regs used in _RN487X_Delay: [wreg+status,2+status,0+pclath+cstack]
 22808                           
 22809                           
 22810                           ;mcc_generated_files/rn487x/rn487x_interface.c: 272: static __attribute__((inline)) void
      +                           RN487X_Delay(uint16_t delayCount);mcc_generated_files/rn487x/rn487x_interface.c: 273: {
      +                          ;mcc_generated_files/rn487x/rn487x_interface.c: 274:     return DELAY_milliseconds(delay
      +                          Count);;	Return value of _RN487X_Delay is never used
 22811     1F70  0875               	movf	RN487X_Delay@delayCount+1,w
 22812     1F71  00F2               	movwf	DELAY_milliseconds@milliseconds+1
 22813     1F72  0874               	movf	RN487X_Delay@delayCount,w
 22814     1F73  00F1               	movwf	DELAY_milliseconds@milliseconds
 22815     1F74  3191  21DC  319F   	fcall	_DELAY_milliseconds
 22816     1F77                     l798:
 22817     1F77  0008               	return
 22818     1F78                     __end_of_RN487X_Delay:
 22819                           
 22820                           	psect	text87
 22821     11DC                     __ptext87:	
 22822 ;; *************** function _DELAY_milliseconds *****************
 22823 ;; Defined at:
 22824 ;;		line 38 in file "mcc_generated_files/delay.c"
 22825 ;; Parameters:    Size  Location     Type
 22826 ;;  milliseconds    2    1[COMMON] unsigned short 
 22827 ;; Auto vars:     Size  Location     Type
 22828 ;;		None
 22829 ;; Return value:  Size  Location     Type
 22830 ;;                  1    wreg      void 
 22831 ;; Registers used:
 22832 ;;		wreg, status,2, status,0
 22833 ;; Tracked objects:
 22834 ;;		On entry : 0/0
 22835 ;;		On exit  : 0/0
 22836 ;;		Unchanged: 0/0
 22837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22838 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22840 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22841 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22842 ;;Total ram usage:        3 bytes
 22843 ;; Hardware stack levels used: 1
 22844 ;; Hardware stack levels required when called: 4
 22845 ;; This function calls:
 22846 ;;		Nothing
 22847 ;; This function is called by:
 22848 ;;		_RN487X_Delay
 22849 ;; This function uses a non-reentrant model
 22850 ;;
 22851                           
 22852     11DC                     _DELAY_milliseconds:	
 22853                           ;psect for function _DELAY_milliseconds
 22854                           
 22855     11DC                     l13070:	
 22856                           ;incstack = 0
 22857                           ; Regs used in _DELAY_milliseconds: [wreg+status,2+status,0]
 22858                           
 22859                           
 22860                           ;mcc_generated_files/delay.c: 39:     while(milliseconds--){
 22861     11DC  29E5               	goto	l13074
 22862     11DD                     l13072:
 22863                           
 22864                           ;mcc_generated_files/delay.c: 40:         _delay((unsigned long)((1)*(32000000/4000.0)))
      +                          ;
 22865     11DD  300B               	movlw	11
 22866     11DE  00F3               	movwf	??_DELAY_milliseconds
 22867     11DF  3062               	movlw	98
 22868     11E0                     u14167:
 22869     11E0  0B89               	decfsz	9,f
 22870     11E1  29E0               	goto	u14167
 22871     11E2  0BF3               	decfsz	??_DELAY_milliseconds,f
 22872     11E3  29E0               	goto	u14167
 22873     11E4  3200               	nop2
 22874     11E5                     l13074:
 22875                           
 22876                           ;mcc_generated_files/delay.c: 39:     while(milliseconds--){
 22877     11E5  3001               	movlw	1
 22878     11E6  02F1               	subwf	DELAY_milliseconds@milliseconds,f
 22879     11E7  3000               	movlw	0
 22880     11E8  3BF2               	subwfb	DELAY_milliseconds@milliseconds+1,f
 22881     11E9  0A71               	incf	DELAY_milliseconds@milliseconds,w
 22882     11EA  1D03               	skipz
 22883     11EB  29F0               	goto	u9891
 22884     11EC  0A72               	incf	DELAY_milliseconds@milliseconds+1,w
 22885     11ED  1D03               	btfss	3,2
 22886     11EE  29F0               	goto	u9891
 22887     11EF  29F1               	goto	u9890
 22888     11F0                     u9891:
 22889     11F0  29DD               	goto	l13072
 22890     11F1                     u9890:
 22891     11F1                     l1980:
 22892     11F1  0008               	return
 22893     11F2                     __end_of_DELAY_milliseconds:
 22894                           
 22895                           	psect	text88
 22896     14B1                     __ptext88:	
 22897 ;; *************** function _LIGHTBLUE_LedState *****************
 22898 ;; Defined at:
 22899 ;;		line 352 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 22900 ;; Parameters:    Size  Location     Type
 22901 ;;		None
 22902 ;; Auto vars:     Size  Location     Type
 22903 ;;  payload         3    0[BANK0 ] unsigned char [3]
 22904 ;;  led             1    3[BANK0 ] unsigned char 
 22905 ;; Return value:  Size  Location     Type
 22906 ;;                  1    wreg      void 
 22907 ;; Registers used:
 22908 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22909 ;; Tracked objects:
 22910 ;;		On entry : 0/0
 22911 ;;		On exit  : 0/0
 22912 ;;		Unchanged: 0/0
 22913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22915 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22917 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22918 ;;Total ram usage:        4 bytes
 22919 ;; Hardware stack levels used: 1
 22920 ;; Hardware stack levels required when called: 7
 22921 ;; This function calls:
 22922 ;;		_LIGHTBLUE_GetDataLedValue
 22923 ;;		_LIGHTBLUE_GetErrorLedValue
 22924 ;;		_LIGHTBLUE_SendPacket
 22925 ;;		_LIGHTBLUE_SplitByte
 22926 ;; This function is called by:
 22927 ;;		_main
 22928 ;; This function uses a non-reentrant model
 22929 ;;
 22930                           
 22931     14B1                     _LIGHTBLUE_LedState:	
 22932                           ;psect for function _LIGHTBLUE_LedState
 22933                           
 22934     14B1                     l14348:	
 22935                           ;incstack = 0
 22936                           ; Regs used in _LIGHTBLUE_LedState: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22937                           
 22938                           
 22939                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 353:     char payload[3];;mcc_gene
      +                          rated_files/application/LIGHTBLUE_service.c: 354:     uint8_t led;;mcc_generated_files/a
      +                          pplication/LIGHTBLUE_service.c: 356:     led = (0x00) + LIGHTBLUE_GetDataLedValue();
 22940     14B1  319F  2707  3194   	fcall	_LIGHTBLUE_GetDataLedValue
 22941     14B4  0140               	movlb	0	; select bank0
 22942     14B5  00A3               	movwf	LIGHTBLUE_LedState@led
 22943     14B6                     l14350:
 22944                           
 22945                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 358:     *payload = '\0';
 22946     14B6  01A0               	clrf	LIGHTBLUE_LedState@payload
 22947     14B7                     l14352:
 22948                           
 22949                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 359:     LIGHTBLUE_SplitByte(paylo
      +                          ad, led);
 22950     14B7  0823               	movf	LIGHTBLUE_LedState@led,w
 22951     14B8  00F6               	movwf	LIGHTBLUE_SplitByte@value
 22952     14B9  3020               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 22953     14BA  3197  2730  3194   	fcall	_LIGHTBLUE_SplitByte
 22954     14BD                     l14354:
 22955                           
 22956                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 361:     LIGHTBLUE_SendPacket(LED_
      +                          STATE_ID, payload);
 22957     14BD  3020               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 22958     14BE  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 22959     14BF  304C               	movlw	76
 22960     14C0  318F  2774  3194   	fcall	_LIGHTBLUE_SendPacket
 22961     14C3                     l14356:
 22962                           
 22963                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 363:     led = (0x10) + LIGHTBLUE_
      +                          GetErrorLedValue();
 22964     14C3  319E  26EB  3194   	fcall	_LIGHTBLUE_GetErrorLedValue
 22965     14C6  3E10               	addlw	16
 22966     14C7  0140               	movlb	0	; select bank0
 22967     14C8  00A3               	movwf	LIGHTBLUE_LedState@led
 22968                           
 22969                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 364:     *payload = '\0';
 22970     14C9  01A0               	clrf	LIGHTBLUE_LedState@payload
 22971     14CA                     l14358:
 22972                           
 22973                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 365:     LIGHTBLUE_SplitByte(paylo
      +                          ad, led);
 22974     14CA  0823               	movf	LIGHTBLUE_LedState@led,w
 22975     14CB  00F6               	movwf	LIGHTBLUE_SplitByte@value
 22976     14CC  3020               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 22977     14CD  3197  2730  3194   	fcall	_LIGHTBLUE_SplitByte
 22978     14D0                     l14360:
 22979                           
 22980                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 367:     LIGHTBLUE_SendPacket(LED_
      +                          STATE_ID, payload);
 22981     14D0  3020               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 22982     14D1  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 22983     14D2  304C               	movlw	76
 22984     14D3  318F  2774  3194   	fcall	_LIGHTBLUE_SendPacket
 22985     14D6                     l133:
 22986     14D6  0008               	return
 22987     14D7                     __end_of_LIGHTBLUE_LedState:
 22988                           
 22989                           	psect	text89
 22990     1EEB                     __ptext89:	
 22991 ;; *************** function _LIGHTBLUE_GetErrorLedValue *****************
 22992 ;; Defined at:
 22993 ;;		line 483 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 22994 ;; Parameters:    Size  Location     Type
 22995 ;;		None
 22996 ;; Auto vars:     Size  Location     Type
 22997 ;;		None
 22998 ;; Return value:  Size  Location     Type
 22999 ;;                  1    wreg      unsigned char 
 23000 ;; Registers used:
 23001 ;;		wreg, status,2, status,0
 23002 ;; Tracked objects:
 23003 ;;		On entry : 0/0
 23004 ;;		On exit  : 0/0
 23005 ;;		Unchanged: 0/0
 23006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23011 ;;Total ram usage:        0 bytes
 23012 ;; Hardware stack levels used: 1
 23013 ;; Hardware stack levels required when called: 4
 23014 ;; This function calls:
 23015 ;;		Nothing
 23016 ;; This function is called by:
 23017 ;;		_LIGHTBLUE_LedState
 23018 ;; This function uses a non-reentrant model
 23019 ;;
 23020                           
 23021     1EEB                     _LIGHTBLUE_GetErrorLedValue:	
 23022                           ;psect for function _LIGHTBLUE_GetErrorLedValue
 23023                           
 23024     1EEB                     l13632:	
 23025                           ;incstack = 0
 23026                           ; Regs used in _LIGHTBLUE_GetErrorLedValue: [wreg+status,2+status,0]
 23027                           
 23028                           
 23029                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 484:     return (0x01) - (bitMap.i
      +                          oStateBitMap.p2_2_state);
 23030     1EEB  0140               	movlb	0	; select bank0
 23031     1EEC  0855               	movf	_bitMap+1,w	;volatile
 23032     1EED  3901               	andlw	1
 23033     1EEE  3C01               	sublw	1
 23034     1EEF                     l208:
 23035     1EEF  0008               	return
 23036     1EF0                     __end_of_LIGHTBLUE_GetErrorLedValue:
 23037                           
 23038                           	psect	text90
 23039     1F07                     __ptext90:	
 23040 ;; *************** function _LIGHTBLUE_GetDataLedValue *****************
 23041 ;; Defined at:
 23042 ;;		line 479 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 23043 ;; Parameters:    Size  Location     Type
 23044 ;;		None
 23045 ;; Auto vars:     Size  Location     Type
 23046 ;;		None
 23047 ;; Return value:  Size  Location     Type
 23048 ;;                  1    wreg      unsigned char 
 23049 ;; Registers used:
 23050 ;;		wreg, status,2, status,0
 23051 ;; Tracked objects:
 23052 ;;		On entry : 0/0
 23053 ;;		On exit  : 0/0
 23054 ;;		Unchanged: 0/0
 23055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23060 ;;Total ram usage:        0 bytes
 23061 ;; Hardware stack levels used: 1
 23062 ;; Hardware stack levels required when called: 4
 23063 ;; This function calls:
 23064 ;;		Nothing
 23065 ;; This function is called by:
 23066 ;;		_LIGHTBLUE_LedState
 23067 ;; This function uses a non-reentrant model
 23068 ;;
 23069                           
 23070     1F07                     _LIGHTBLUE_GetDataLedValue:	
 23071                           ;psect for function _LIGHTBLUE_GetDataLedValue
 23072                           
 23073     1F07                     l13628:	
 23074                           ;incstack = 0
 23075                           ; Regs used in _LIGHTBLUE_GetDataLedValue: [wreg+status,2+status,0]
 23076                           
 23077                           
 23078                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 480:     return (0x01) - PORTAbits
      +                          .RA5;
 23079     1F07  0140               	movlb	0	; select bank0
 23080     1F08  0E0C               	swapf	12,w	;volatile
 23081     1F09  0C89               	rrf	9,f
 23082     1F0A  3901               	andlw	1
 23083     1F0B  3C01               	sublw	1
 23084     1F0C                     l205:
 23085     1F0C  0008               	return
 23086     1F0D                     __end_of_LIGHTBLUE_GetDataLedValue:
 23087                           
 23088                           	psect	text91
 23089     1F01                     __ptext91:	
 23090 ;; *************** function _LIGHTBLUE_Initialize *****************
 23091 ;; Defined at:
 23092 ;;		line 306 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 23093 ;; Parameters:    Size  Location     Type
 23094 ;;		None
 23095 ;; Auto vars:     Size  Location     Type
 23096 ;;		None
 23097 ;; Return value:  Size  Location     Type
 23098 ;;                  1    wreg      void 
 23099 ;; Registers used:
 23100 ;;		wreg
 23101 ;; Tracked objects:
 23102 ;;		On entry : 0/0
 23103 ;;		On exit  : 0/0
 23104 ;;		Unchanged: 0/0
 23105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23110 ;;Total ram usage:        0 bytes
 23111 ;; Hardware stack levels used: 1
 23112 ;; Hardware stack levels required when called: 4
 23113 ;; This function calls:
 23114 ;;		Nothing
 23115 ;; This function is called by:
 23116 ;;		_main
 23117 ;; This function uses a non-reentrant model
 23118 ;;
 23119                           
 23120     1F01                     _LIGHTBLUE_Initialize:	
 23121                           ;psect for function _LIGHTBLUE_Initialize
 23122                           
 23123     1F01                     l14318:	
 23124                           ;incstack = 0
 23125                           ; Regs used in _LIGHTBLUE_Initialize: [wreg]
 23126                           
 23127                           
 23128                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 307:     bitMap.ioBitMap.gpioBitMa
      +                          p = 0x01;
 23129     1F01  3001               	movlw	1
 23130     1F02  0140               	movlb	0	; select bank0
 23131     1F03  00D4               	movwf	_bitMap	;volatile
 23132                           
 23133                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 308:     bitMap.ioStateBitMap.gpio
      +                          StateBitMap = 0x01;
 23134     1F04  3001               	movlw	1
 23135     1F05  00D5               	movwf	_bitMap+1	;volatile
 23136     1F06                     l121:
 23137     1F06  0008               	return
 23138     1F07                     __end_of_LIGHTBLUE_Initialize:
 23139                           
 23140                           	psect	text92
 23141     16A4                     __ptext92:	
 23142 ;; *************** function _LIGHTBLUE_AccelSensor *****************
 23143 ;; Defined at:
 23144 ;;		line 326 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 23145 ;; Parameters:    Size  Location     Type
 23146 ;;		None
 23147 ;; Auto vars:     Size  Location     Type
 23148 ;;  payload        13   22[BANK0 ] unsigned char [13]
 23149 ;;  accelData       6   35[BANK0 ] struct .
 23150 ;; Return value:  Size  Location     Type
 23151 ;;                  1    wreg      void 
 23152 ;; Registers used:
 23153 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23154 ;; Tracked objects:
 23155 ;;		On entry : 0/0
 23156 ;;		On exit  : 0/0
 23157 ;;		Unchanged: 0/0
 23158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23160 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23162 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23163 ;;Total ram usage:       19 bytes
 23164 ;; Hardware stack levels used: 1
 23165 ;; Hardware stack levels required when called: 16
 23166 ;; This function calls:
 23167 ;;		_BMA253_GetAccelDataXYZ
 23168 ;;		_LIGHTBLUE_SendPacket
 23169 ;;		_LIGHTBLUE_SplitWord
 23170 ;; This function is called by:
 23171 ;;		_main
 23172 ;; This function uses a non-reentrant model
 23173 ;;
 23174                           
 23175     16A4                     _LIGHTBLUE_AccelSensor:	
 23176                           ;psect for function _LIGHTBLUE_AccelSensor
 23177                           
 23178     16A4                     l14328:	
 23179                           ;incstack = 0
 23180 ;; hardware stack exceeded
 23181                           ; Regs used in _LIGHTBLUE_AccelSensor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23182                           
 23183                           
 23184                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 327:     char payload[13];;mcc_gen
      +                          erated_files/application/LIGHTBLUE_service.c: 328:     BMA253_ACCEL_DATA_t accelData;;mc
      +                          c_generated_files/application/LIGHTBLUE_service.c: 331:     *payload = '\0';
 23185     16A4  0140               	movlb	0	; select bank0
 23186     16A5  01B6               	clrf	LIGHTBLUE_AccelSensor@payload
 23187     16A6                     l14330:
 23188                           
 23189                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 332:     BMA253_GetAccelDataXYZ(&a
      +                          ccelData);
 23190     16A6  3043               	movlw	(low (LIGHTBLUE_AccelSensor@accelData| 0))& (0+255)
 23191     16A7  318C  244B  3196   	fcall	_BMA253_GetAccelDataXYZ
 23192     16AA                     l14332:
 23193                           
 23194                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 335:     LIGHTBLUE_SplitWord(paylo
      +                          ad, (accelData.x & 0x0FFF));
 23195     16AA  30FF               	movlw	255
 23196     16AB  0140               	movlb	0	; select bank0
 23197     16AC  0543               	andwf	LIGHTBLUE_AccelSensor@accelData,w
 23198     16AD  00F9               	movwf	LIGHTBLUE_SplitWord@value
 23199     16AE  300F               	movlw	15
 23200     16AF  0544               	andwf	LIGHTBLUE_AccelSensor@accelData+1,w
 23201     16B0  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 23202     16B1  3036               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 23203     16B2  3190  2080  3196   	fcall	_LIGHTBLUE_SplitWord
 23204     16B5                     l14334:
 23205                           
 23206                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 336:     LIGHTBLUE_SplitWord(paylo
      +                          ad, (accelData.y & 0x0FFF));
 23207     16B5  30FF               	movlw	255
 23208     16B6  0140               	movlb	0	; select bank0
 23209     16B7  0545               	andwf	LIGHTBLUE_AccelSensor@accelData+2,w
 23210     16B8  00F9               	movwf	LIGHTBLUE_SplitWord@value
 23211     16B9  300F               	movlw	15
 23212     16BA  0546               	andwf	LIGHTBLUE_AccelSensor@accelData+3,w
 23213     16BB  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 23214     16BC  3036               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 23215     16BD  3190  2080  3196   	fcall	_LIGHTBLUE_SplitWord
 23216     16C0                     l14336:
 23217                           
 23218                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 337:     LIGHTBLUE_SplitWord(paylo
      +                          ad, (accelData.z & 0x0FFF));
 23219     16C0  30FF               	movlw	255
 23220     16C1  0140               	movlb	0	; select bank0
 23221     16C2  0547               	andwf	LIGHTBLUE_AccelSensor@accelData+4,w
 23222     16C3  00F9               	movwf	LIGHTBLUE_SplitWord@value
 23223     16C4  300F               	movlw	15
 23224     16C5  0548               	andwf	LIGHTBLUE_AccelSensor@accelData+5,w
 23225     16C6  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 23226     16C7  3036               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 23227     16C8  3190  2080  3196   	fcall	_LIGHTBLUE_SplitWord
 23228     16CB                     l14338:
 23229                           
 23230                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 339:     LIGHTBLUE_SendPacket(ACCE
      +                          L_DATA_ID, payload);
 23231     16CB  3036               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 23232     16CC  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 23233     16CD  3058               	movlw	88
 23234     16CE  318F  2774  3196   	fcall	_LIGHTBLUE_SendPacket
 23235     16D1                     l127:
 23236     16D1  0008               	return
 23237     16D2                     __end_of_LIGHTBLUE_AccelSensor:
 23238                           
 23239                           	psect	text93
 23240     1080                     __ptext93:	
 23241 ;; *************** function _LIGHTBLUE_SplitWord *****************
 23242 ;; Defined at:
 23243 ;;		line 463 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 23244 ;; Parameters:    Size  Location     Type
 23245 ;;  payload         1    wreg     PTR unsigned char 
 23246 ;;		 -> LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), 
 23247 ;;  value           2    9[COMMON] short 
 23248 ;; Auto vars:     Size  Location     Type
 23249 ;;  payload         1   11[COMMON] PTR unsigned char 
 23250 ;;		 -> LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), 
 23251 ;; Return value:  Size  Location     Type
 23252 ;;                  1    wreg      void 
 23253 ;; Registers used:
 23254 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23255 ;; Tracked objects:
 23256 ;;		On entry : 0/0
 23257 ;;		On exit  : 0/0
 23258 ;;		Unchanged: 0/0
 23259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23260 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23261 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23263 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23264 ;;Total ram usage:        3 bytes
 23265 ;; Hardware stack levels used: 1
 23266 ;; Hardware stack levels required when called: 6
 23267 ;; This function calls:
 23268 ;;		_LIGHTBLUE_SplitByte
 23269 ;; This function is called by:
 23270 ;;		_LIGHTBLUE_TemperatureSensor
 23271 ;;		_LIGHTBLUE_AccelSensor
 23272 ;; This function uses a non-reentrant model
 23273 ;;
 23274                           
 23275     1080                     _LIGHTBLUE_SplitWord:	
 23276                           ;psect for function _LIGHTBLUE_SplitWord
 23277                           
 23278                           
 23279                           ;incstack = 0
 23280                           ; Regs used in _LIGHTBLUE_SplitWord: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23281                           ;LIGHTBLUE_SplitWord@payload stored from wreg
 23282     1080  00FB               	movwf	LIGHTBLUE_SplitWord@payload
 23283     1081                     l13604:
 23284                           
 23285                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 464:     LIGHTBLUE_SplitByte(paylo
      +                          ad, value);
 23286     1081  0879               	movf	LIGHTBLUE_SplitWord@value,w
 23287     1082  00F6               	movwf	LIGHTBLUE_SplitByte@value
 23288     1083  087B               	movf	LIGHTBLUE_SplitWord@payload,w
 23289     1084  3197  2730  3190   	fcall	_LIGHTBLUE_SplitByte
 23290                           
 23291                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 465:     LIGHTBLUE_SplitByte(paylo
      +                          ad, value >> 8);
 23292     1087  087A               	movf	LIGHTBLUE_SplitWord@value+1,w
 23293     1088  00F6               	movwf	LIGHTBLUE_SplitByte@value
 23294     1089  087B               	movf	LIGHTBLUE_SplitWord@payload,w
 23295     108A  3197  2730  3190   	fcall	_LIGHTBLUE_SplitByte
 23296     108D                     l196:
 23297     108D  0008               	return
 23298     108E                     __end_of_LIGHTBLUE_SplitWord:
 23299                           
 23300                           	psect	text94
 23301     1730                     __ptext94:	
 23302 ;; *************** function _LIGHTBLUE_SplitByte *****************
 23303 ;; Defined at:
 23304 ;;		line 468 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 23305 ;; Parameters:    Size  Location     Type
 23306 ;;  payload         1    wreg     PTR unsigned char 
 23307 ;;		 -> LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), LIGHTBLUE_PushButton@payload(3), LIGHT
      +BLUE_AccelSensor@payload(13), 
 23308 ;;		 -> LIGHTBLUE_TemperatureSensor@payload(5), 
 23309 ;;  value           1    6[COMMON] char 
 23310 ;; Auto vars:     Size  Location     Type
 23311 ;;  payload         1    8[COMMON] PTR unsigned char 
 23312 ;;		 -> LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), LIGHTBLUE_PushButton@payload(3), LIGHT
      +BLUE_AccelSensor@payload(13), 
 23313 ;;		 -> LIGHTBLUE_TemperatureSensor@payload(5), 
 23314 ;; Return value:  Size  Location     Type
 23315 ;;                  1    wreg      void 
 23316 ;; Registers used:
 23317 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23318 ;; Tracked objects:
 23319 ;;		On entry : 0/0
 23320 ;;		On exit  : 0/0
 23321 ;;		Unchanged: 0/0
 23322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23323 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23324 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23325 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23326 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23327 ;;Total ram usage:        3 bytes
 23328 ;; Hardware stack levels used: 1
 23329 ;; Hardware stack levels required when called: 5
 23330 ;; This function calls:
 23331 ;;		_strlen
 23332 ;; This function is called by:
 23333 ;;		_LIGHTBLUE_PushButton
 23334 ;;		_LIGHTBLUE_LedState
 23335 ;;		_LIGHTBLUE_SendProtocolVersion
 23336 ;;		_LIGHTBLUE_SplitWord
 23337 ;; This function uses a non-reentrant model
 23338 ;;
 23339                           
 23340     1730                     _LIGHTBLUE_SplitByte:	
 23341                           ;psect for function _LIGHTBLUE_SplitByte
 23342                           
 23343                           
 23344                           ;incstack = 0
 23345                           ; Regs used in _LIGHTBLUE_SplitByte: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23346                           ;LIGHTBLUE_SplitByte@payload stored from wreg
 23347     1730  00F8               	movwf	LIGHTBLUE_SplitByte@payload
 23348     1731                     l13436:
 23349                           
 23350                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 469:     payload += strlen(payload
      +                          );
 23351     1731  0878               	movf	LIGHTBLUE_SplitByte@payload,w
 23352     1732  00F1               	movwf	strlen@s
 23353     1733  01F2               	clrf	strlen@s+1
 23354     1734  3192  22AD  3197   	fcall	_strlen
 23355     1737  0871               	movf	?_strlen,w
 23356     1738  00F7               	movwf	??_LIGHTBLUE_SplitByte
 23357     1739  0877               	movf	??_LIGHTBLUE_SplitByte,w
 23358     173A  07F8               	addwf	LIGHTBLUE_SplitByte@payload,f
 23359     173B                     l13438:
 23360                           
 23361                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 470:     *payload++ = (_hex[(value
      +                           >> 4) & 0xF]);
 23362     173B  0878               	movf	LIGHTBLUE_SplitByte@payload,w
 23363     173C  0086               	movwf	6
 23364     173D  0187               	clrf	7
 23365     173E  0E76               	swapf	LIGHTBLUE_SplitByte@value,w
 23366     173F  390F               	andlw	15
 23367     1740  1989               	btfsc	9,3
 23368     1741  38F0               	iorlw	240
 23369     1742  390F               	andlw	15
 23370     1743  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 23371     1744  0084               	movwf	4
 23372     1745  3001               	movlw	1	; select bank2/3
 23373     1746  0085               	movwf	5
 23374     1747  0800               	movf	0,w
 23375     1748  0081               	movwf	1
 23376     1749                     l13440:
 23377     1749  3001               	movlw	1
 23378     174A  00F7               	movwf	??_LIGHTBLUE_SplitByte
 23379     174B  0877               	movf	??_LIGHTBLUE_SplitByte,w
 23380     174C  07F8               	addwf	LIGHTBLUE_SplitByte@payload,f
 23381     174D                     l13442:
 23382                           
 23383                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 471:     *payload++ = (_hex[(value
      +                          ) & 0xF]);
 23384     174D  0878               	movf	LIGHTBLUE_SplitByte@payload,w
 23385     174E  0086               	movwf	6
 23386     174F  0187               	clrf	7
 23387     1750  0876               	movf	LIGHTBLUE_SplitByte@value,w
 23388     1751  390F               	andlw	15
 23389     1752  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 23390     1753  0084               	movwf	4
 23391     1754  3001               	movlw	1	; select bank2/3
 23392     1755  0085               	movwf	5
 23393     1756  0800               	movf	0,w
 23394     1757  0081               	movwf	1
 23395     1758                     l13444:
 23396     1758  3001               	movlw	1
 23397     1759  00F7               	movwf	??_LIGHTBLUE_SplitByte
 23398     175A  0877               	movf	??_LIGHTBLUE_SplitByte,w
 23399     175B  07F8               	addwf	LIGHTBLUE_SplitByte@payload,f
 23400     175C                     l13446:
 23401                           
 23402                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 472:     *payload = '\0';
 23403     175C  0878               	movf	LIGHTBLUE_SplitByte@payload,w
 23404     175D  0086               	movwf	6
 23405     175E  0187               	clrf	7
 23406     175F  0181               	clrf	1
 23407     1760                     l199:
 23408     1760  0008               	return
 23409     1761                     __end_of_LIGHTBLUE_SplitByte:
 23410                           
 23411                           	psect	text95
 23412     0F74                     __ptext95:	
 23413 ;; *************** function _LIGHTBLUE_SendPacket *****************
 23414 ;; Defined at:
 23415 ;;		line 451 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 23416 ;; Parameters:    Size  Location     Type
 23417 ;;  packetID        1    wreg     unsigned char 
 23418 ;;  payload         1    7[COMMON] PTR unsigned char 
 23419 ;;		 -> LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), LIGHTBLUE_PushButton@payload(3), LIGHT
      +BLUE_AccelSensor@payload(13), 
 23420 ;;		 -> LIGHTBLUE_TemperatureSensor@payload(5), 
 23421 ;; Auto vars:     Size  Location     Type
 23422 ;;  packetID        1   10[COMMON] unsigned char 
 23423 ;; Return value:  Size  Location     Type
 23424 ;;                  1    wreg      void 
 23425 ;; Registers used:
 23426 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23427 ;; Tracked objects:
 23428 ;;		On entry : 0/0
 23429 ;;		On exit  : 0/0
 23430 ;;		Unchanged: 0/0
 23431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23432 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23433 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23434 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23435 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23436 ;;Total ram usage:        4 bytes
 23437 ;; Hardware stack levels used: 1
 23438 ;; Hardware stack levels required when called: 6
 23439 ;; This function calls:
 23440 ;;		_RN487X_Write
 23441 ;;		_strlen
 23442 ;; This function is called by:
 23443 ;;		_LIGHTBLUE_TemperatureSensor
 23444 ;;		_LIGHTBLUE_AccelSensor
 23445 ;;		_LIGHTBLUE_PushButton
 23446 ;;		_LIGHTBLUE_LedState
 23447 ;;		_LIGHTBLUE_SendProtocolVersion
 23448 ;; This function uses a non-reentrant model
 23449 ;;
 23450                           
 23451     0F74                     _LIGHTBLUE_SendPacket:	
 23452                           ;psect for function _LIGHTBLUE_SendPacket
 23453                           
 23454                           
 23455                           ;incstack = 0
 23456                           ; Regs used in _LIGHTBLUE_SendPacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23457                           ;LIGHTBLUE_SendPacket@packetID stored from wreg
 23458     0F74  00FA               	movwf	LIGHTBLUE_SendPacket@packetID
 23459     0F75                     l13606:
 23460                           
 23461                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 452:     RN487X.Write(('['));
 23462     0F75  305B               	movlw	91
 23463     0F76  00F6               	movwf	RN487X_Write@txData
 23464     0F77  3068               	movlw	low (_RN487X| (0+32768))
 23465     0F78  0084               	movwf	4
 23466     0F79  3098               	movlw	high (_RN487X| (0+32768))
 23467     0F7A  0085               	movwf	5
 23468     0F7B  3F01               	moviw [1]fsr0
 23469     0F7C  008A               	movwf	10
 23470     0F7D  3F00               	moviw [0]fsr0
 23471     0F7E  000A               	callw
 23472     0F7F  318F               	pagesel	$
 23473                           
 23474                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 453:     RN487X.Write((_hex[(seque
      +                          nceNumber++) & 0xF]));
 23475     0F80  0140               	movlb	0	; select bank0
 23476     0F81  086C               	movf	_sequenceNumber,w
 23477     0F82  390F               	andlw	15
 23478     0F83  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 23479     0F84  0086               	movwf	6
 23480     0F85  3001               	movlw	1	; select bank2/3
 23481     0F86  0087               	movwf	7
 23482     0F87  0801               	movf	1,w
 23483     0F88  00F6               	movwf	RN487X_Write@txData
 23484     0F89  3068               	movlw	low (_RN487X| (0+32768))
 23485     0F8A  0084               	movwf	4
 23486     0F8B  3098               	movlw	high (_RN487X| (0+32768))
 23487     0F8C  0085               	movwf	5
 23488     0F8D  3F01               	moviw [1]fsr0
 23489     0F8E  008A               	movwf	10
 23490     0F8F  3F00               	moviw [0]fsr0
 23491     0F90  000A               	callw
 23492     0F91  318F               	pagesel	$
 23493     0F92                     l13608:
 23494     0F92  3001               	movlw	1
 23495     0F93  00F8               	movwf	??_LIGHTBLUE_SendPacket
 23496     0F94  0878               	movf	??_LIGHTBLUE_SendPacket,w
 23497     0F95  0140               	movlb	0	; select bank0
 23498     0F96  07EC               	addwf	_sequenceNumber,f
 23499     0F97                     l13610:
 23500                           
 23501                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 454:     RN487X.Write(packetID);
 23502     0F97  087A               	movf	LIGHTBLUE_SendPacket@packetID,w
 23503     0F98  00F6               	movwf	RN487X_Write@txData
 23504     0F99  3068               	movlw	low (_RN487X| (0+32768))
 23505     0F9A  0084               	movwf	4
 23506     0F9B  3098               	movlw	high (_RN487X| (0+32768))
 23507     0F9C  0085               	movwf	5
 23508     0F9D  3F01               	moviw [1]fsr0
 23509     0F9E  008A               	movwf	10
 23510     0F9F  3F00               	moviw [0]fsr0
 23511     0FA0  000A               	callw
 23512     0FA1  318F               	pagesel	$
 23513     0FA2                     l13612:
 23514                           
 23515                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 455:     RN487X.Write((_hex[(strle
      +                          n(payload) >> 4) & 0xF]));
 23516     0FA2  0877               	movf	LIGHTBLUE_SendPacket@payload,w
 23517     0FA3  00F1               	movwf	strlen@s
 23518     0FA4  01F2               	clrf	strlen@s+1
 23519     0FA5  3192  22AD  318F   	fcall	_strlen
 23520     0FA8  0871               	movf	?_strlen,w
 23521     0FA9  00F8               	movwf	??_LIGHTBLUE_SendPacket
 23522     0FAA  0872               	movf	?_strlen+1,w
 23523     0FAB  00F9               	movwf	??_LIGHTBLUE_SendPacket+1
 23524     0FAC  3004               	movlw	4
 23525     0FAD                     u10565:
 23526     0FAD  36F9               	lsrf	??_LIGHTBLUE_SendPacket+1,f
 23527     0FAE  0CF8               	rrf	??_LIGHTBLUE_SendPacket,f
 23528     0FAF  0B89               	decfsz	9,f
 23529     0FB0  2FAD               	goto	u10565
 23530     0FB1  0878               	movf	??_LIGHTBLUE_SendPacket,w
 23531     0FB2  390F               	andlw	15
 23532     0FB3  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 23533     0FB4  0086               	movwf	6
 23534     0FB5  3001               	movlw	1	; select bank2/3
 23535     0FB6  0087               	movwf	7
 23536     0FB7  0801               	movf	1,w
 23537     0FB8  00F6               	movwf	RN487X_Write@txData
 23538     0FB9  3068               	movlw	low (_RN487X| (0+32768))
 23539     0FBA  0084               	movwf	4
 23540     0FBB  3098               	movlw	high (_RN487X| (0+32768))
 23541     0FBC  0085               	movwf	5
 23542     0FBD  3F01               	moviw [1]fsr0
 23543     0FBE  008A               	movwf	10
 23544     0FBF  3F00               	moviw [0]fsr0
 23545     0FC0  000A               	callw
 23546     0FC1  318F               	pagesel	$
 23547     0FC2                     l13614:
 23548                           
 23549                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 456:     RN487X.Write((_hex[(strle
      +                          n(payload)) & 0xF]));
 23550     0FC2  0877               	movf	LIGHTBLUE_SendPacket@payload,w
 23551     0FC3  00F1               	movwf	strlen@s
 23552     0FC4  01F2               	clrf	strlen@s+1
 23553     0FC5  3192  22AD  318F   	fcall	_strlen
 23554     0FC8  0871               	movf	?_strlen,w
 23555     0FC9  390F               	andlw	15
 23556     0FCA  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 23557     0FCB  0086               	movwf	6
 23558     0FCC  3001               	movlw	1	; select bank2/3
 23559     0FCD  0087               	movwf	7
 23560     0FCE  0801               	movf	1,w
 23561     0FCF  00F6               	movwf	RN487X_Write@txData
 23562     0FD0  3068               	movlw	low (_RN487X| (0+32768))
 23563     0FD1  0084               	movwf	4
 23564     0FD2  3098               	movlw	high (_RN487X| (0+32768))
 23565     0FD3  0085               	movwf	5
 23566     0FD4  3F01               	moviw [1]fsr0
 23567     0FD5  008A               	movwf	10
 23568     0FD6  3F00               	moviw [0]fsr0
 23569     0FD7  000A               	callw
 23570     0FD8  318F               	pagesel	$
 23571                           
 23572                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 457:     while (*payload) {
 23573     0FD9  2FEC               	goto	l13620
 23574     0FDA                     l13616:
 23575                           
 23576                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 458:         RN487X.Write((*(uint8
      +                          _t *) payload++));
 23577     0FDA  0877               	movf	LIGHTBLUE_SendPacket@payload,w
 23578     0FDB  0086               	movwf	6
 23579     0FDC  0187               	clrf	7
 23580     0FDD  0801               	movf	1,w
 23581     0FDE  00F6               	movwf	RN487X_Write@txData
 23582     0FDF  3068               	movlw	low (_RN487X| (0+32768))
 23583     0FE0  0084               	movwf	4
 23584     0FE1  3098               	movlw	high (_RN487X| (0+32768))
 23585     0FE2  0085               	movwf	5
 23586     0FE3  3F01               	moviw [1]fsr0
 23587     0FE4  008A               	movwf	10
 23588     0FE5  3F00               	moviw [0]fsr0
 23589     0FE6  000A               	callw
 23590     0FE7  318F               	pagesel	$
 23591     0FE8                     l13618:
 23592     0FE8  3001               	movlw	1
 23593     0FE9  00F8               	movwf	??_LIGHTBLUE_SendPacket
 23594     0FEA  0878               	movf	??_LIGHTBLUE_SendPacket,w
 23595     0FEB  07F7               	addwf	LIGHTBLUE_SendPacket@payload,f
 23596     0FEC                     l13620:
 23597                           
 23598                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 457:     while (*payload) {
 23599     0FEC  0877               	movf	LIGHTBLUE_SendPacket@payload,w
 23600     0FED  0086               	movwf	6
 23601     0FEE  0187               	clrf	7
 23602     0FEF  0801               	movf	1,w
 23603     0FF0  1D03               	btfss	3,2
 23604     0FF1  2FF3               	goto	u10571
 23605     0FF2  2FF4               	goto	u10570
 23606     0FF3                     u10571:
 23607     0FF3  2FDA               	goto	l13616
 23608     0FF4                     u10570:
 23609     0FF4                     l13622:
 23610                           
 23611                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 460:     RN487X.Write((']'));
 23612     0FF4  305D               	movlw	93
 23613     0FF5  00F6               	movwf	RN487X_Write@txData
 23614     0FF6  3068               	movlw	low (_RN487X| (0+32768))
 23615     0FF7  0084               	movwf	4
 23616     0FF8  3098               	movlw	high (_RN487X| (0+32768))
 23617     0FF9  0085               	movwf	5
 23618     0FFA  3F01               	moviw [1]fsr0
 23619     0FFB  008A               	movwf	10
 23620     0FFC  3F00               	moviw [0]fsr0
 23621     0FFD  000A               	callw
 23622     0FFE  318F               	pagesel	$
 23623     0FFF                     l193:
 23624     0FFF  0008               	return
 23625     1000                     __end_of_LIGHTBLUE_SendPacket:
 23626                           
 23627                           	psect	text96
 23628     12AD                     __ptext96:	
 23629 ;; *************** function _strlen *****************
 23630 ;; Defined at:
 23631 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strlen.c"
 23632 ;; Parameters:    Size  Location     Type
 23633 ;;  s               2    1[COMMON] PTR const unsigned char 
 23634 ;;		 -> lightBlueSerial(80), statusBuffer@main$F3783(80), STR_5(12), STR_3(11), 
 23635 ;;		 -> statusBuffer(80), NULL(0), LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), 
 23636 ;;		 -> LIGHTBLUE_PushButton@payload(3), LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), STR_
      +1(6), 
 23637 ;; Auto vars:     Size  Location     Type
 23638 ;;  a               2    4[COMMON] PTR const unsigned char 
 23639 ;;		 -> lightBlueSerial(80), statusBuffer@main$F3783(80), STR_5(12), STR_3(11), 
 23640 ;;		 -> statusBuffer(80), NULL(0), LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), 
 23641 ;;		 -> LIGHTBLUE_PushButton@payload(3), LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), STR_
      +1(6), 
 23642 ;; Return value:  Size  Location     Type
 23643 ;;                  2    1[COMMON] unsigned int 
 23644 ;; Registers used:
 23645 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 23646 ;; Tracked objects:
 23647 ;;		On entry : 0/0
 23648 ;;		On exit  : 0/0
 23649 ;;		Unchanged: 0/0
 23650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23651 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23652 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23653 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23654 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23655 ;;Total ram usage:        5 bytes
 23656 ;; Hardware stack levels used: 1
 23657 ;; Hardware stack levels required when called: 4
 23658 ;; This function calls:
 23659 ;;		Nothing
 23660 ;; This function is called by:
 23661 ;;		_LIGHTBLUE_SendProtocolVersion
 23662 ;;		_LIGHTBLUE_SendSerialData
 23663 ;;		_LIGHTBLUE_SendPacket
 23664 ;;		_LIGHTBLUE_SplitByte
 23665 ;;		_rn487x_PrintMessage
 23666 ;;		_strstr
 23667 ;; This function uses a non-reentrant model
 23668 ;;
 23669                           
 23670     12AD                     _strlen:	
 23671                           ;psect for function _strlen
 23672                           
 23673     12AD                     l13054:	
 23674                           ;incstack = 0
 23675                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 23676                           
 23677     12AD  0872               	movf	strlen@s+1,w
 23678     12AE  00F5               	movwf	strlen@a+1
 23679     12AF  0871               	movf	strlen@s,w
 23680     12B0  00F4               	movwf	strlen@a
 23681     12B1  2AB6               	goto	l13058
 23682     12B2                     l13056:
 23683     12B2  3001               	movlw	1
 23684     12B3  07F1               	addwf	strlen@s,f
 23685     12B4  3000               	movlw	0
 23686     12B5  3DF2               	addwfc	strlen@s+1,f
 23687     12B6                     l13058:
 23688     12B6  0871               	movf	strlen@s,w
 23689     12B7  0084               	movwf	4
 23690     12B8  0872               	movf	strlen@s+1,w
 23691     12B9  0085               	movwf	5
 23692     12BA  0012               	moviw fsr0++
 23693     12BB  1D03               	btfss	3,2
 23694     12BC  2ABE               	goto	u9881
 23695     12BD  2ABF               	goto	u9880
 23696     12BE                     u9881:
 23697     12BE  2AB2               	goto	l13056
 23698     12BF                     u9880:
 23699     12BF                     l13060:
 23700     12BF  0874               	movf	strlen@a,w
 23701     12C0  0271               	subwf	strlen@s,w
 23702     12C1  00F1               	movwf	?_strlen
 23703     12C2  0875               	movf	strlen@a+1,w
 23704     12C3  3B72               	subwfb	strlen@s+1,w
 23705     12C4  00F2               	movwf	?_strlen+1
 23706     12C5                     l3313:
 23707     12C5  0008               	return
 23708     12C6                     __end_of_strlen:
 23709                           
 23710                           	psect	text97
 23711     1019                     __ptext97:	
 23712 ;; *************** function _RN487X_Write *****************
 23713 ;; Defined at:
 23714 ;;		line 252 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 23715 ;; Parameters:    Size  Location     Type
 23716 ;;  txData          1    6[COMMON] unsigned char 
 23717 ;; Auto vars:     Size  Location     Type
 23718 ;;		None
 23719 ;; Return value:  Size  Location     Type
 23720 ;;                  1    wreg      void 
 23721 ;; Registers used:
 23722 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23723 ;; Tracked objects:
 23724 ;;		On entry : 0/0
 23725 ;;		On exit  : 0/0
 23726 ;;		Unchanged: 0/0
 23727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23728 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23731 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23732 ;;Total ram usage:        1 bytes
 23733 ;; Hardware stack levels used: 1
 23734 ;; Hardware stack levels required when called: 5
 23735 ;; This function calls:
 23736 ;;		_EUSART1_Write
 23737 ;;		_EUSART2_Write
 23738 ;; This function is called by:
 23739 ;;		_RN487X_SendCmd
 23740 ;;		_LIGHTBLUE_SendPacket
 23741 ;;		_LIGHTBLUE_SendSerialData
 23742 ;;		_RN487X_Example_TransparentUart
 23743 ;;		_main
 23744 ;; This function uses a non-reentrant model
 23745 ;;
 23746                           
 23747     1019                     _RN487X_Write:	
 23748                           ;psect for function _RN487X_Write
 23749                           
 23750     1019                     l13044:	
 23751                           ;incstack = 0
 23752                           ; Regs used in _RN487X_Write: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23753                           
 23754                           
 23755                           ;mcc_generated_files/rn487x/rn487x_interface.c: 252: static __attribute__((inline)) void
      +                           RN487X_Write(uint8_t txData);mcc_generated_files/rn487x/rn487x_interface.c: 253: {;mcc_
      +                          generated_files/rn487x/rn487x_interface.c: 254:     uart[UART_BLE].Write(txData);
 23756     1019  0876               	movf	RN487X_Write@txData,w
 23757     101A  00F1               	movwf	EUSART2_Write@txData
 23758     101B  3016               	movlw	low ((_uart+22)| (0+32768))
 23759     101C  0084               	movwf	4
 23760     101D  3098               	movlw	high ((_uart+22)| (0+32768))
 23761     101E  0085               	movwf	5
 23762     101F  3F01               	moviw [1]fsr0
 23763     1020  008A               	movwf	10
 23764     1021  3F00               	moviw [0]fsr0
 23765     1022  000A               	callw
 23766     1023  3190               	pagesel	$
 23767     1024                     l786:
 23768     1024  0008               	return
 23769     1025                     __end_of_RN487X_Write:
 23770                           
 23771                           	psect	text98
 23772     1524                     __ptext98:	
 23773 ;; *************** function _EUSART1_Write *****************
 23774 ;; Defined at:
 23775 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 23776 ;; Parameters:    Size  Location     Type
 23777 ;;  txData          1    1[COMMON] unsigned char 
 23778 ;; Auto vars:     Size  Location     Type
 23779 ;;		None
 23780 ;; Return value:  Size  Location     Type
 23781 ;;                  1    wreg      void 
 23782 ;; Registers used:
 23783 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23784 ;; Tracked objects:
 23785 ;;		On entry : 0/0
 23786 ;;		On exit  : 0/0
 23787 ;;		Unchanged: 0/0
 23788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23789 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23791 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23792 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23793 ;;Total ram usage:        2 bytes
 23794 ;; Hardware stack levels used: 1
 23795 ;; Hardware stack levels required when called: 4
 23796 ;; This function calls:
 23797 ;;		Nothing
 23798 ;; This function is called by:
 23799 ;;		_putch
 23800 ;;		_RN487X_Write
 23801 ;;		_rn487x_PrintMessageStart
 23802 ;;		_rn487x_PrintMessageEnd
 23803 ;;		_rn487x_PrintIndicatorCharacters
 23804 ;;		_rn487x_PrintMessage
 23805 ;;		_LIGHTBLUE_PerformAction
 23806 ;;		_RN487X_Example_TransparentUart
 23807 ;;		_main
 23808 ;; This function uses a non-reentrant model
 23809 ;;
 23810                           
 23811     1524                     _EUSART1_Write:	
 23812                           ;psect for function _EUSART1_Write
 23813                           
 23814     1524                     l13016:	
 23815                           ;incstack = 0
 23816                           ; Regs used in _EUSART1_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 23817                           
 23818     1524                     l13018:	
 23819                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 23820                           
 23821                           
 23822                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 23823     1524  0140               	movlb	0	; select bank0
 23824     1525  085B               	movf	_eusart1TxBufferRemaining,w	;volatile
 23825     1526  1903               	btfsc	3,2
 23826     1527  2D29               	goto	u9831
 23827     1528  2D2A               	goto	u9830
 23828     1529                     u9831:
 23829     1529  2D24               	goto	l13018
 23830     152A                     u9830:
 23831     152A                     l1219:
 23832                           
 23833                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
 23834     152A  014E               	movlb	14	; select bank14
 23835     152B  1A19               	btfsc	25,4	;volatile
 23836     152C  2D2E               	goto	u9841
 23837     152D  2D2F               	goto	u9840
 23838     152E                     u9841:
 23839     152E  2D33               	goto	l1220
 23840     152F                     u9840:
 23841     152F                     l13020:
 23842                           
 23843                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
 23844     152F  0871               	movf	EUSART1_Write@txData,w
 23845     1530  0142               	movlb	2	; select bank2
 23846     1531  009A               	movwf	26	;volatile
 23847                           
 23848                           ;mcc_generated_files/eusart1.c: 182:     }
 23849     1532  2D48               	goto	l13032
 23850     1533                     l1220:	
 23851                           ;mcc_generated_files/eusart1.c: 183:     else
 23852                           
 23853                           
 23854                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
 23855     1533  1219               	bcf	25,4	;volatile
 23856     1534                     l13022:
 23857                           
 23858                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 23859     1534  0140               	movlb	0	; select bank0
 23860     1535  085D               	movf	_eusart1TxHead,w
 23861     1536  3EC5               	addlw	(low (_eusart1TxBuffer| 0))& (0+255)
 23862     1537  0086               	movwf	6
 23863     1538  0187               	clrf	7
 23864     1539  0871               	movf	EUSART1_Write@txData,w
 23865     153A  0081               	movwf	1
 23866     153B                     l13024:
 23867     153B  3001               	movlw	1
 23868     153C  00F2               	movwf	??_EUSART1_Write
 23869     153D  0872               	movf	??_EUSART1_Write,w
 23870     153E  07DD               	addwf	_eusart1TxHead,f	;volatile
 23871     153F                     l13026:
 23872                           
 23873                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 23874     153F  3008               	movlw	8
 23875     1540  025D               	subwf	_eusart1TxHead,w	;volatile
 23876     1541  1C03               	skipc
 23877     1542  2D44               	goto	u9851
 23878     1543  2D45               	goto	u9850
 23879     1544                     u9851:
 23880     1544  2D46               	goto	l13030
 23881     1545                     u9850:
 23882     1545                     l13028:
 23883                           
 23884                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 23885     1545  01DD               	clrf	_eusart1TxHead	;volatile
 23886     1546                     l13030:
 23887                           
 23888                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 23889     1546  3001               	movlw	1
 23890     1547  02DB               	subwf	_eusart1TxBufferRemaining,f	;volatile
 23891     1548                     l13032:
 23892                           
 23893                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
 23894     1548  014E               	movlb	14	; select bank14
 23895     1549  1619               	bsf	25,4	;volatile
 23896     154A                     l1223:
 23897     154A  0008               	return
 23898     154B                     __end_of_EUSART1_Write:
 23899                           
 23900                           	psect	text99
 23901     14FD                     __ptext99:	
 23902 ;; *************** function _EUSART2_Write *****************
 23903 ;; Defined at:
 23904 ;;		line 173 in file "mcc_generated_files/eusart2.c"
 23905 ;; Parameters:    Size  Location     Type
 23906 ;;  txData          1    1[COMMON] unsigned char 
 23907 ;; Auto vars:     Size  Location     Type
 23908 ;;		None
 23909 ;; Return value:  Size  Location     Type
 23910 ;;                  1    wreg      void 
 23911 ;; Registers used:
 23912 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23913 ;; Tracked objects:
 23914 ;;		On entry : 0/0
 23915 ;;		On exit  : 0/0
 23916 ;;		Unchanged: 0/0
 23917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23918 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23920 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23921 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23922 ;;Total ram usage:        2 bytes
 23923 ;; Hardware stack levels used: 1
 23924 ;; Hardware stack levels required when called: 4
 23925 ;; This function calls:
 23926 ;;		Nothing
 23927 ;; This function is called by:
 23928 ;;		_RN487X_Write
 23929 ;;		_rn487x_PrintMessageStart
 23930 ;;		_rn487x_PrintMessageEnd
 23931 ;;		_rn487x_PrintIndicatorCharacters
 23932 ;;		_rn487x_PrintMessage
 23933 ;;		_LIGHTBLUE_PerformAction
 23934 ;;		_RN487X_Example_TransparentUart
 23935 ;;		_main
 23936 ;; This function uses a non-reentrant model
 23937 ;;
 23938                           
 23939     14FD                     _EUSART2_Write:	
 23940                           ;psect for function _EUSART2_Write
 23941                           
 23942     14FD                     l12972:	
 23943                           ;incstack = 0
 23944                           ; Regs used in _EUSART2_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 23945                           
 23946     14FD                     l12974:	
 23947                           ;mcc_generated_files/eusart2.c: 173: void EUSART2_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart2.c: 174: {;mcc_generated_files/eusart2.c: 175:     while(0 == eusart2TxBuffer
      +                          Remaining)
 23948                           
 23949                           
 23950                           ;mcc_generated_files/eusart2.c: 175:     while(0 == eusart2TxBufferRemaining)
 23951     14FD  0140               	movlb	0	; select bank0
 23952     14FE  0861               	movf	_eusart2TxBufferRemaining,w	;volatile
 23953     14FF  1903               	btfsc	3,2
 23954     1500  2D02               	goto	u9781
 23955     1501  2D03               	goto	u9780
 23956     1502                     u9781:
 23957     1502  2CFD               	goto	l12974
 23958     1503                     u9780:
 23959     1503                     l1075:
 23960                           
 23961                           ;mcc_generated_files/eusart2.c: 179:     if(0 == PIE3bits.TX2IE)
 23962     1503  014E               	movlb	14	; select bank14
 23963     1504  1B19               	btfsc	25,6	;volatile
 23964     1505  2D07               	goto	u9791
 23965     1506  2D08               	goto	u9790
 23966     1507                     u9791:
 23967     1507  2D0C               	goto	l1076
 23968     1508                     u9790:
 23969     1508                     l12976:
 23970                           
 23971                           ;mcc_generated_files/eusart2.c: 180:     {;mcc_generated_files/eusart2.c: 181:         T
      +                          X2REG = txData;
 23972     1508  0871               	movf	EUSART2_Write@txData,w
 23973     1509  0154               	movlb	20	; select bank20
 23974     150A  009A               	movwf	26	;volatile
 23975                           
 23976                           ;mcc_generated_files/eusart2.c: 182:     }
 23977     150B  2D21               	goto	l12988
 23978     150C                     l1076:	
 23979                           ;mcc_generated_files/eusart2.c: 183:     else
 23980                           
 23981                           
 23982                           ;mcc_generated_files/eusart2.c: 184:     {;mcc_generated_files/eusart2.c: 185:         P
      +                          IE3bits.TX2IE = 0;
 23983     150C  1319               	bcf	25,6	;volatile
 23984     150D                     l12978:
 23985                           
 23986                           ;mcc_generated_files/eusart2.c: 186:         eusart2TxBuffer[eusart2TxHead++] = txData;
 23987     150D  0140               	movlb	0	; select bank0
 23988     150E  0863               	movf	_eusart2TxHead,w
 23989     150F  3EDD               	addlw	(low (_eusart2TxBuffer| 0))& (0+255)
 23990     1510  0086               	movwf	6
 23991     1511  0187               	clrf	7
 23992     1512  0871               	movf	EUSART2_Write@txData,w
 23993     1513  0081               	movwf	1
 23994     1514                     l12980:
 23995     1514  3001               	movlw	1
 23996     1515  00F2               	movwf	??_EUSART2_Write
 23997     1516  0872               	movf	??_EUSART2_Write,w
 23998     1517  07E3               	addwf	_eusart2TxHead,f	;volatile
 23999     1518                     l12982:
 24000                           
 24001                           ;mcc_generated_files/eusart2.c: 187:         if(sizeof(eusart2TxBuffer) <= eusart2TxHead
      +                          )
 24002     1518  3008               	movlw	8
 24003     1519  0263               	subwf	_eusart2TxHead,w	;volatile
 24004     151A  1C03               	skipc
 24005     151B  2D1D               	goto	u9801
 24006     151C  2D1E               	goto	u9800
 24007     151D                     u9801:
 24008     151D  2D1F               	goto	l12986
 24009     151E                     u9800:
 24010     151E                     l12984:
 24011                           
 24012                           ;mcc_generated_files/eusart2.c: 188:         {;mcc_generated_files/eusart2.c: 189:      
      +                                 eusart2TxHead = 0;
 24013     151E  01E3               	clrf	_eusart2TxHead	;volatile
 24014     151F                     l12986:
 24015                           
 24016                           ;mcc_generated_files/eusart2.c: 191:         eusart2TxBufferRemaining--;
 24017     151F  3001               	movlw	1
 24018     1520  02E1               	subwf	_eusart2TxBufferRemaining,f	;volatile
 24019     1521                     l12988:
 24020                           
 24021                           ;mcc_generated_files/eusart2.c: 193:     PIE3bits.TX2IE = 1;
 24022     1521  014E               	movlb	14	; select bank14
 24023     1522  1719               	bsf	25,6	;volatile
 24024     1523                     l1079:
 24025     1523  0008               	return
 24026     1524                     __end_of_EUSART2_Write:
 24027                           
 24028                           	psect	text100
 24029     0C4B                     __ptext100:	
 24030 ;; *************** function _BMA253_GetAccelDataXYZ *****************
 24031 ;; Defined at:
 24032 ;;		line 118 in file "mcc_generated_files/application/BMA253_accel.c"
 24033 ;; Parameters:    Size  Location     Type
 24034 ;;  accelData       1    wreg     PTR struct .
 24035 ;;		 -> LIGHTBLUE_AccelSensor@accelData(6), 
 24036 ;; Auto vars:     Size  Location     Type
 24037 ;;  accelData       1   19[BANK0 ] PTR struct .
 24038 ;;		 -> LIGHTBLUE_AccelSensor@accelData(6), 
 24039 ;;  sensorValue     2   20[BANK0 ] short 
 24040 ;;  mSB             1   18[BANK0 ] char 
 24041 ;;  lSB             1   17[BANK0 ] char 
 24042 ;; Return value:  Size  Location     Type
 24043 ;;                  1    wreg      void 
 24044 ;; Registers used:
 24045 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24046 ;; Tracked objects:
 24047 ;;		On entry : 0/0
 24048 ;;		On exit  : 0/0
 24049 ;;		Unchanged: 0/0
 24050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24052 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24053 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24054 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24055 ;;Total ram usage:        6 bytes
 24056 ;; Hardware stack levels used: 1
 24057 ;; Hardware stack levels required when called: 15
 24058 ;; This function calls:
 24059 ;;		_BMA253_GetAccelDataY
 24060 ;;		_BMA253_GetAccelDataZ
 24061 ;;		_BMA253_NewAccelDataRdyY
 24062 ;;		_BMA253_NewAccelDataRdyZ
 24063 ;;		_readRegister
 24064 ;; This function is called by:
 24065 ;;		_LIGHTBLUE_AccelSensor
 24066 ;; This function uses a non-reentrant model
 24067 ;;
 24068                           
 24069     0C4B                     _BMA253_GetAccelDataXYZ:	
 24070                           ;psect for function _BMA253_GetAccelDataXYZ
 24071                           
 24072                           
 24073                           ;incstack = 0
 24074 ;; hardware stack exceeded
 24075                           ; Regs used in _BMA253_GetAccelDataXYZ: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24076                           ;BMA253_GetAccelDataXYZ@accelData stored from wreg
 24077     0C4B  0140               	movlb	0	; select bank0
 24078     0C4C  00B3               	movwf	BMA253_GetAccelDataXYZ@accelData
 24079     0C4D                     l13580:
 24080                           
 24081                           ;mcc_generated_files/application/BMA253_accel.c: 121:     int8_t mSB = 0;
 24082     0C4D  01B2               	clrf	BMA253_GetAccelDataXYZ@mSB
 24083     0C4E                     l13582:
 24084                           
 24085                           ;mcc_generated_files/application/BMA253_accel.c: 123:     lSB = readRegister(TMAG5273_RE
      +                          G_X_LSB_RESULT);
 24086     0C4E  3013               	movlw	19
 24087     0C4F  3190  2072  318C   	fcall	_readRegister
 24088     0C52  0140               	movlb	0	; select bank0
 24089     0C53  00B1               	movwf	BMA253_GetAccelDataXYZ@lSB
 24090     0C54                     l13584:
 24091                           
 24092                           ;mcc_generated_files/application/BMA253_accel.c: 124:     mSB = readRegister(TMAG5273_RE
      +                          G_X_MSB_RESULT);
 24093     0C54  3012               	movlw	18
 24094     0C55  3190  2072  318C   	fcall	_readRegister
 24095     0C58  0140               	movlb	0	; select bank0
 24096     0C59  00B2               	movwf	BMA253_GetAccelDataXYZ@mSB
 24097     0C5A                     l13586:
 24098                           
 24099                           ;mcc_generated_files/application/BMA253_accel.c: 126:     int16_t sensorValue;;mcc_gener
      +                          ated_files/application/BMA253_accel.c: 128:     sensorValue = mSB >> 8 | lSB;
 24100     0C5A  0832               	movf	BMA253_GetAccelDataXYZ@mSB,w
 24101     0C5B  00B0               	movwf	??_BMA253_GetAccelDataXYZ
 24102     0C5C  3008               	movlw	8
 24103     0C5D                     u10535:
 24104     0C5D  1003               	clrc
 24105     0C5E  1BB0               	btfsc	??_BMA253_GetAccelDataXYZ,7
 24106     0C5F  1403               	setc
 24107     0C60  0CB0               	rrf	??_BMA253_GetAccelDataXYZ,f
 24108     0C61  0B89               	decfsz	9,f
 24109     0C62  2C5D               	goto	u10535
 24110     0C63  0830               	movf	??_BMA253_GetAccelDataXYZ,w
 24111     0C64  0431               	iorwf	BMA253_GetAccelDataXYZ@lSB,w
 24112     0C65  00B4               	movwf	BMA253_GetAccelDataXYZ@sensorValue
 24113     0C66  01B5               	clrf	BMA253_GetAccelDataXYZ@sensorValue+1
 24114     0C67  1BB4               	btfsc	BMA253_GetAccelDataXYZ@sensorValue,7
 24115     0C68  03B5               	decf	BMA253_GetAccelDataXYZ@sensorValue+1,f
 24116     0C69                     l13588:
 24117                           
 24118                           ;mcc_generated_files/application/BMA253_accel.c: 130:     accelData->x = sensorValue;
 24119     0C69  0833               	movf	BMA253_GetAccelDataXYZ@accelData,w
 24120     0C6A  0086               	movwf	6
 24121     0C6B  0187               	clrf	7
 24122     0C6C  0834               	movf	BMA253_GetAccelDataXYZ@sensorValue,w
 24123     0C6D  3FC0               	movwi [0]fsr1
 24124     0C6E  0835               	movf	BMA253_GetAccelDataXYZ@sensorValue+1,w
 24125     0C6F  3FC1               	movwi [1]fsr1
 24126     0C70                     l13590:	
 24127                           ;mcc_generated_files/application/BMA253_accel.c: 132:     while (!BMA253_NewAccelDataRdy
      +                          Y())
 24128                           
 24129                           
 24130                           ;mcc_generated_files/application/BMA253_accel.c: 132:     while (!BMA253_NewAccelDataRdy
      +                          Y())
 24131     0C70  3191  2144  318C   	fcall	_BMA253_NewAccelDataRdyY
 24132     0C73  3A00               	xorlw	0
 24133     0C74  1903               	skipnz
 24134     0C75  2C77               	goto	u10541
 24135     0C76  2C78               	goto	u10540
 24136     0C77                     u10541:
 24137     0C77  2C70               	goto	l13590
 24138     0C78                     u10540:
 24139     0C78                     l13592:
 24140                           
 24141                           ;mcc_generated_files/application/BMA253_accel.c: 137:     BMA253_GetAccelDataY(&sensorVa
      +                          lue);
 24142     0C78  3034               	movlw	(low (BMA253_GetAccelDataXYZ@sensorValue| 0))& (0+255)
 24143     0C79  3196  2648  318C   	fcall	_BMA253_GetAccelDataY
 24144     0C7C                     l13594:
 24145                           
 24146                           ;mcc_generated_files/application/BMA253_accel.c: 138:     accelData->y = sensorValue;
 24147     0C7C  0140               	movlb	0	; select bank0
 24148     0C7D  0833               	movf	BMA253_GetAccelDataXYZ@accelData,w
 24149     0C7E  3E02               	addlw	2
 24150     0C7F  0086               	movwf	6
 24151     0C80  0187               	clrf	7
 24152     0C81  0834               	movf	BMA253_GetAccelDataXYZ@sensorValue,w
 24153     0C82  3FC0               	movwi [0]fsr1
 24154     0C83  0835               	movf	BMA253_GetAccelDataXYZ@sensorValue+1,w
 24155     0C84  3FC1               	movwi [1]fsr1
 24156     0C85                     l13596:	
 24157                           ;mcc_generated_files/application/BMA253_accel.c: 140:      while (!BMA253_NewAccelDataRd
      +                          yZ())
 24158                           
 24159                           
 24160                           ;mcc_generated_files/application/BMA253_accel.c: 140:      while (!BMA253_NewAccelDataRd
      +                          yZ())
 24161     0C85  3191  2155  318C   	fcall	_BMA253_NewAccelDataRdyZ
 24162     0C88  3A00               	xorlw	0
 24163     0C89  1903               	skipnz
 24164     0C8A  2C8C               	goto	u10551
 24165     0C8B  2C8D               	goto	u10550
 24166     0C8C                     u10551:
 24167     0C8C  2C85               	goto	l13596
 24168     0C8D                     u10550:
 24169     0C8D                     l13598:
 24170                           
 24171                           ;mcc_generated_files/application/BMA253_accel.c: 145:     BMA253_GetAccelDataZ(&sensorVa
      +                          lue);
 24172     0C8D  3034               	movlw	(low (BMA253_GetAccelDataXYZ@sensorValue| 0))& (0+255)
 24173     0C8E  3196  2676  318C   	fcall	_BMA253_GetAccelDataZ
 24174     0C91                     l13600:
 24175                           
 24176                           ;mcc_generated_files/application/BMA253_accel.c: 146:     accelData->z = sensorValue;
 24177     0C91  0140               	movlb	0	; select bank0
 24178     0C92  0833               	movf	BMA253_GetAccelDataXYZ@accelData,w
 24179     0C93  3E04               	addlw	4
 24180     0C94  0086               	movwf	6
 24181     0C95  0187               	clrf	7
 24182     0C96  0834               	movf	BMA253_GetAccelDataXYZ@sensorValue,w
 24183     0C97  3FC0               	movwi [0]fsr1
 24184     0C98  0835               	movf	BMA253_GetAccelDataXYZ@sensorValue+1,w
 24185     0C99  3FC1               	movwi [1]fsr1
 24186     0C9A                     l44:
 24187     0C9A  0008               	return
 24188     0C9B                     __end_of_BMA253_GetAccelDataXYZ:
 24189                           
 24190                           	psect	text101
 24191     1072                     __ptext101:	
 24192 ;; *************** function _readRegister *****************
 24193 ;; Defined at:
 24194 ;;		line 169 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 24195 ;; Parameters:    Size  Location     Type
 24196 ;;  regAddress      1    wreg     unsigned char 
 24197 ;; Auto vars:     Size  Location     Type
 24198 ;;  regAddress      1   12[BANK0 ] unsigned char 
 24199 ;;  regVal          1   13[BANK0 ] unsigned char 
 24200 ;; Return value:  Size  Location     Type
 24201 ;;                  1    wreg      unsigned char 
 24202 ;; Registers used:
 24203 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24204 ;; Tracked objects:
 24205 ;;		On entry : 0/0
 24206 ;;		On exit  : 0/0
 24207 ;;		Unchanged: 0/0
 24208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24210 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24212 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24213 ;;Total ram usage:        2 bytes
 24214 ;; Hardware stack levels used: 1
 24215 ;; Hardware stack levels required when called: 14
 24216 ;; This function calls:
 24217 ;;		_readRegisters
 24218 ;; This function is called by:
 24219 ;;		_BMA253_GetAccelDataXYZ
 24220 ;;		_setOperatingMode
 24221 ;;		_setMagneticChannel
 24222 ;;		_setXYAxisRange
 24223 ;;		_setZAxisRange
 24224 ;;		_setTemperatureEn
 24225 ;;		_getLowPower
 24226 ;;		_getOperatingMode
 24227 ;;		_getMagneticChannel
 24228 ;;		_getAngleEn
 24229 ;;		_getTemperatureEN
 24230 ;;		_getDeviceStatus
 24231 ;;		_setCRCMode
 24232 ;;		_setMagTemp
 24233 ;;		_setConvAvg
 24234 ;;		_setReadMode
 24235 ;;		_setIntThreshold
 24236 ;;		_setLowPower
 24237 ;;		_setGlitchFilter
 24238 ;;		_setTriggerMode
 24239 ;;		_setSleeptime
 24240 ;;		_setMagDir
 24241 ;;		_setMagnitudeGain
 24242 ;;		_setAngleEn
 24243 ;;		_setInterruptResult
 24244 ;;		_setThresholdEn
 24245 ;;		_setIntPinState
 24246 ;;		_setInterruptMode
 24247 ;;		_setMaskInterrupt
 24248 ;;		_setI2CAddressEN
 24249 ;;		_setOscillatorError
 24250 ;;		_getCRCMode
 24251 ;;		_getMagTemp
 24252 ;;		_getConvAvg
 24253 ;;		_getReadMode
 24254 ;;		_getIntThreshold
 24255 ;;		_getGlitchFiler
 24256 ;;		_getTriggerMode
 24257 ;;		_getSleeptime
 24258 ;;		_getMagDir
 24259 ;;		_getMagnitudeChannelSelect
 24260 ;;		_getMagneticGain
 24261 ;;		_getMagneticOffset1
 24262 ;;		_getMagneticOffset2
 24263 ;;		_getXYAxisRange
 24264 ;;		_getZAxisRange
 24265 ;;		_getXThreshold
 24266 ;;		_getYThreshold
 24267 ;;		_getZThreshold
 24268 ;;		_getTemperatureThreshold
 24269 ;;		_getInterruptResult
 24270 ;;		_getThresholdEn
 24271 ;;		_getIntPinState
 24272 ;;		_getInterruptMode
 24273 ;;		_getMaskInt
 24274 ;;		_getSetCount
 24275 ;;		_getPOR
 24276 ;;		_getDiagStatus
 24277 ;;		_getResultStatus
 24278 ;;		_getI2CAddress
 24279 ;;		_getDeviceID
 24280 ;;		_getInterruptPinStatus
 24281 ;;		_getXData
 24282 ;;		_getYData
 24283 ;;		_getZData
 24284 ;;		_getAngleResult
 24285 ;;		_getMagnitudeResult
 24286 ;; This function uses a non-reentrant model
 24287 ;;
 24288                           
 24289     1072                     _readRegister:	
 24290                           ;psect for function _readRegister
 24291                           
 24292                           
 24293                           ;incstack = 0
 24294 ;; hardware stack exceeded
 24295                           ; Regs used in _readRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24296                           ;readRegister@regAddress stored from wreg
 24297     1072  0140               	movlb	0	; select bank0
 24298     1073  00AC               	movwf	readRegister@regAddress
 24299     1074                     l13206:
 24300                           
 24301                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 170:     uint8_t regVa
      +                          l = 0;
 24302     1074  01AD               	clrf	readRegister@regVal
 24303     1075                     l13208:
 24304                           
 24305                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 171:     readRegisters
      +                          (regAddress, &regVal, 1);
 24306     1075  302D               	movlw	(low (readRegister@regVal| 0))& (0+255)
 24307     1076  00A7               	movwf	readRegisters@dataBuffer
 24308     1077  01A8               	clrf	readRegisters@numBytes
 24309     1078  0AA8               	incf	readRegisters@numBytes,f
 24310     1079  082C               	movf	readRegister@regAddress,w
 24311     107A  3190  20AC  3190   	fcall	_readRegisters
 24312     107D                     l13210:
 24313                           
 24314                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 174:     return regVal
      +                          ;
 24315     107D  0140               	movlb	0	; select bank0
 24316     107E  082D               	movf	readRegister@regVal,w
 24317     107F                     l2136:
 24318     107F  0008               	return
 24319     1080                     __end_of_readRegister:
 24320                           
 24321                           	psect	text102
 24322     10AC                     __ptext102:	
 24323 ;; *************** function _readRegisters *****************
 24324 ;; Defined at:
 24325 ;;		line 113 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 24326 ;; Parameters:    Size  Location     Type
 24327 ;;  regAddress      1    wreg     unsigned char 
 24328 ;;  dataBuffer      1    7[BANK0 ] PTR unsigned char 
 24329 ;;		 -> getTemp@databuffer(2), getManufacturerID@databuffer(2), readWakeUpAndSleepData@wakeupRegisterRead(8), readRegist
      +er@regVal(1), 
 24330 ;;  numBytes        1    8[BANK0 ] unsigned char 
 24331 ;; Auto vars:     Size  Location     Type
 24332 ;;  regAddress      1   11[BANK0 ] unsigned char 
 24333 ;; Return value:  Size  Location     Type
 24334 ;;                  1    wreg      char 
 24335 ;; Registers used:
 24336 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24337 ;; Tracked objects:
 24338 ;;		On entry : 0/0
 24339 ;;		On exit  : 0/0
 24340 ;;		Unchanged: 0/0
 24341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24342 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24343 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24344 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24345 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24346 ;;Total ram usage:        5 bytes
 24347 ;; Hardware stack levels used: 1
 24348 ;; Hardware stack levels required when called: 13
 24349 ;; This function calls:
 24350 ;;		_i2c_readNBytes
 24351 ;; This function is called by:
 24352 ;;		_readRegister
 24353 ;;		_readWakeUpAndSleepData
 24354 ;;		_getManufacturerID
 24355 ;;		_getTemp
 24356 ;; This function uses a non-reentrant model
 24357 ;;
 24358                           
 24359     10AC                     _readRegisters:	
 24360                           ;psect for function _readRegisters
 24361                           
 24362                           
 24363                           ;incstack = 0
 24364 ;; hardware stack exceeded
 24365                           ; Regs used in _readRegisters: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24366                           ;readRegisters@regAddress stored from wreg
 24367     10AC  0140               	movlb	0	; select bank0
 24368     10AD  00AB               	movwf	readRegisters@regAddress
 24369     10AE                     l13142:
 24370                           
 24371                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 132:     i2c_readNByte
      +                          s(regAddress, &dataBuffer, numBytes);
 24372     10AE  3027               	movlw	(low (readRegisters@dataBuffer| 0))& (0+255)
 24373     10AF  00A4               	movwf	i2c_readNBytes@data
 24374     10B0  0828               	movf	readRegisters@numBytes,w
 24375     10B1  00A9               	movwf	??_readRegisters
 24376     10B2  01AA               	clrf	??_readRegisters+1
 24377     10B3  0829               	movf	??_readRegisters,w
 24378     10B4  00A5               	movwf	i2c_readNBytes@len
 24379     10B5  082A               	movf	??_readRegisters+1,w
 24380     10B6  00A6               	movwf	i2c_readNBytes@len+1
 24381     10B7  082B               	movf	readRegisters@regAddress,w
 24382     10B8  3193  239D  3190   	fcall	_i2c_readNBytes
 24383     10BB                     l2130:
 24384     10BB  0008               	return
 24385     10BC                     __end_of_readRegisters:
 24386                           
 24387                           	psect	text103
 24388     139D                     __ptext103:	
 24389 ;; *************** function _i2c_readNBytes *****************
 24390 ;; Defined at:
 24391 ;;		line 228 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 24392 ;; Parameters:    Size  Location     Type
 24393 ;;  address         1    wreg     unsigned char 
 24394 ;;  data            1    4[BANK0 ] PTR void 
 24395 ;;		 -> readRegisters@dataBuffer(1), 
 24396 ;;  len             2    5[BANK0 ] unsigned int 
 24397 ;; Auto vars:     Size  Location     Type
 24398 ;;  address         1   11[COMMON] unsigned char 
 24399 ;; Return value:  Size  Location     Type
 24400 ;;                  1    wreg      void 
 24401 ;; Registers used:
 24402 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24403 ;; Tracked objects:
 24404 ;;		On entry : 0/0
 24405 ;;		On exit  : 0/0
 24406 ;;		Unchanged: 0/0
 24407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24408 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24409 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24411 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24412 ;;Total ram usage:        4 bytes
 24413 ;; Hardware stack levels used: 1
 24414 ;; Hardware stack levels required when called: 12
 24415 ;; This function calls:
 24416 ;;		_I2C1_Close
 24417 ;;		_I2C1_MasterRead
 24418 ;;		_I2C1_Open
 24419 ;;		_I2C1_SetBuffer
 24420 ;; This function is called by:
 24421 ;;		_readRegisters
 24422 ;; This function uses a non-reentrant model
 24423 ;;
 24424                           
 24425     139D                     _i2c_readNBytes:	
 24426                           ;psect for function _i2c_readNBytes
 24427                           
 24428                           
 24429                           ;incstack = 0
 24430 ;; hardware stack exceeded
 24431                           ; Regs used in _i2c_readNBytes: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24432                           ;i2c_readNBytes@address stored from wreg
 24433     139D  00FB               	movwf	i2c_readNBytes@address
 24434     139E                     l13034:
 24435     139E                     l13036:	
 24436                           ;mcc_generated_files/drivers/i2c_simple_master.c: 228: void i2c_readNBytes(i2c1_address_
      +                          t address, void *data, size_t len);mcc_generated_files/drivers/i2c_simple_master.c: 229:
      +                           {;mcc_generated_files/drivers/i2c_simple_master.c: 230:     while(!I2C1_Open(address));
 24437                           
 24438     139E  087B               	movf	i2c_readNBytes@address,w
 24439     139F  3197  27CA  3193   	fcall	_I2C1_Open
 24440     13A2  3A00               	xorlw	0
 24441     13A3  1903               	skipnz
 24442     13A4  2BA6               	goto	u9861
 24443     13A5  2BA7               	goto	u9860
 24444     13A6                     u9861:
 24445     13A6  2B9E               	goto	l13036
 24446     13A7                     u9860:
 24447     13A7                     l13038:
 24448                           
 24449                           ;mcc_generated_files/drivers/i2c_simple_master.c: 231:     I2C1_SetBuffer(data,len);
 24450     13A7  0140               	movlb	0	; select bank0
 24451     13A8  0826               	movf	i2c_readNBytes@len+1,w
 24452     13A9  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 24453     13AA  0825               	movf	i2c_readNBytes@len,w
 24454     13AB  00F1               	movwf	I2C1_SetBuffer@bufferSize
 24455     13AC  0824               	movf	i2c_readNBytes@data,w
 24456     13AD  3190  2064  3193   	fcall	_I2C1_SetBuffer
 24457     13B0                     l13040:
 24458                           
 24459                           ;mcc_generated_files/drivers/i2c_simple_master.c: 232:     I2C1_MasterRead();
 24460     13B0  319E  26E6  3193   	fcall	_I2C1_MasterRead
 24461     13B3                     l13042:	
 24462                           ;mcc_generated_files/drivers/i2c_simple_master.c: 233:     while(I2C1_BUSY == I2C1_Close
      +                          ());
 24463                           
 24464     13B3  3192  224D  3193   	fcall	_I2C1_Close
 24465     13B6  3A01               	xorlw	1
 24466     13B7  1903               	skipnz
 24467     13B8  2BBA               	goto	u9871
 24468     13B9  2BBB               	goto	u9870
 24469     13BA                     u9871:
 24470     13BA  2BB3               	goto	l13042
 24471     13BB                     u9870:
 24472     13BB                     l579:
 24473     13BB  0008               	return
 24474     13BC                     __end_of_i2c_readNBytes:
 24475                           
 24476                           	psect	text104
 24477     1EE6                     __ptext104:	
 24478 ;; *************** function _I2C1_MasterRead *****************
 24479 ;; Defined at:
 24480 ;;		line 246 in file "mcc_generated_files/i2c1_master.c"
 24481 ;; Parameters:    Size  Location     Type
 24482 ;;		None
 24483 ;; Auto vars:     Size  Location     Type
 24484 ;;		None
 24485 ;; Return value:  Size  Location     Type
 24486 ;;                  1    wreg      enum E358
 24487 ;; Registers used:
 24488 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24489 ;; Tracked objects:
 24490 ;;		On entry : 0/0
 24491 ;;		On exit  : 0/0
 24492 ;;		Unchanged: 0/0
 24493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24498 ;;Total ram usage:        0 bytes
 24499 ;; Hardware stack levels used: 1
 24500 ;; Hardware stack levels required when called: 11
 24501 ;; This function calls:
 24502 ;;		_I2C1_MasterOperation
 24503 ;; This function is called by:
 24504 ;;		_i2c_readNBytes
 24505 ;;		_I2C1_ReadNBytes
 24506 ;; This function uses a non-reentrant model
 24507 ;;
 24508                           
 24509     1EE6                     _I2C1_MasterRead:	
 24510                           ;psect for function _I2C1_MasterRead
 24511                           
 24512     1EE6                     l12942:	
 24513                           ;incstack = 0
 24514 ;; hardware stack exceeded
 24515                           ; Regs used in _I2C1_MasterRead: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24516                           
 24517                           
 24518                           ;mcc_generated_files/i2c1_master.c: 248:     return I2C1_MasterOperation(1);;	Return val
      +                          ue of _I2C1_MasterRead is never used
 24519     1EE6  3001               	movlw	1
 24520     1EE7  3193  23BC  319E   	fcall	_I2C1_MasterOperation
 24521     1EEA                     l1759:
 24522     1EEA  0008               	return
 24523     1EEB                     __end_of_I2C1_MasterRead:
 24524                           
 24525                           	psect	text105
 24526     1676                     __ptext105:	
 24527 ;; *************** function _BMA253_GetAccelDataZ *****************
 24528 ;; Defined at:
 24529 ;;		line 104 in file "mcc_generated_files/application/BMA253_accel.c"
 24530 ;; Parameters:    Size  Location     Type
 24531 ;;  zAccelData      1    wreg     PTR short 
 24532 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 24533 ;; Auto vars:     Size  Location     Type
 24534 ;;  zAccelData      1   13[BANK0 ] PTR short 
 24535 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 24536 ;;  msbData         1   15[BANK0 ] unsigned char 
 24537 ;;  lsbData         1   14[BANK0 ] unsigned char 
 24538 ;; Return value:  Size  Location     Type
 24539 ;;                  1    wreg      void 
 24540 ;; Registers used:
 24541 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24542 ;; Tracked objects:
 24543 ;;		On entry : 0/0
 24544 ;;		On exit  : 0/0
 24545 ;;		Unchanged: 0/0
 24546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24548 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24549 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24550 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24551 ;;Total ram usage:        6 bytes
 24552 ;; Hardware stack levels used: 1
 24553 ;; Hardware stack levels required when called: 14
 24554 ;; This function calls:
 24555 ;;		_BMA253_NewAccelDataRdyZ
 24556 ;;		_i2c_read1ByteRegister
 24557 ;; This function is called by:
 24558 ;;		_BMA253_GetAccelDataXYZ
 24559 ;; This function uses a non-reentrant model
 24560 ;;
 24561                           
 24562     1676                     _BMA253_GetAccelDataZ:	
 24563                           ;psect for function _BMA253_GetAccelDataZ
 24564                           
 24565                           
 24566                           ;incstack = 0
 24567 ;; hardware stack exceeded
 24568                           ; Regs used in _BMA253_GetAccelDataZ: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24569                           ;BMA253_GetAccelDataZ@zAccelData stored from wreg
 24570     1676  0140               	movlb	0	; select bank0
 24571     1677  00AD               	movwf	BMA253_GetAccelDataZ@zAccelData
 24572     1678                     l13428:
 24573     1678                     l13430:	
 24574                           ;mcc_generated_files/application/BMA253_accel.c: 104: void BMA253_GetAccelDataZ(int16_t 
      +                          *zAccelData);mcc_generated_files/application/BMA253_accel.c: 105: {;mcc_generated_files/
      +                          application/BMA253_accel.c: 106:     uint8_t lsbData;;mcc_generated_files/application/BM
      +                          A253_accel.c: 107:     uint8_t msbData;;mcc_generated_files/application/BMA253_accel.c: 
      +                          108:     while(!BMA253_NewAccelDataRdyZ())
 24575                           
 24576                           
 24577                           ;mcc_generated_files/application/BMA253_accel.c: 108:     while(!BMA253_NewAccelDataRdyZ
      +                          ())
 24578     1678  3191  2155  3196   	fcall	_BMA253_NewAccelDataRdyZ
 24579     167B  3A00               	xorlw	0
 24580     167C  1903               	skipnz
 24581     167D  2E7F               	goto	u10391
 24582     167E  2E80               	goto	u10390
 24583     167F                     u10391:
 24584     167F  2E78               	goto	l13430
 24585     1680                     u10390:
 24586     1680                     l13432:
 24587                           
 24588                           ;mcc_generated_files/application/BMA253_accel.c: 113:     lsbData = i2c_read1ByteRegiste
      +                          r((0x19), (0x06));
 24589     1680  3006               	movlw	6
 24590     1681  0140               	movlb	0	; select bank0
 24591     1682  00A4               	movwf	i2c_read1ByteRegister@reg
 24592     1683  3019               	movlw	25
 24593     1684  318B  2364  3196   	fcall	_i2c_read1ByteRegister
 24594     1687  0140               	movlb	0	; select bank0
 24595     1688  00AE               	movwf	BMA253_GetAccelDataZ@lsbData
 24596                           
 24597                           ;mcc_generated_files/application/BMA253_accel.c: 114:     msbData = i2c_read1ByteRegiste
      +                          r((0x19), (0x07));
 24598     1689  3007               	movlw	7
 24599     168A  00A4               	movwf	i2c_read1ByteRegister@reg
 24600     168B  3019               	movlw	25
 24601     168C  318B  2364  3196   	fcall	_i2c_read1ByteRegister
 24602     168F  0140               	movlb	0	; select bank0
 24603     1690  00AF               	movwf	BMA253_GetAccelDataZ@msbData
 24604     1691                     l13434:
 24605                           
 24606                           ;mcc_generated_files/application/BMA253_accel.c: 115:     *zAccelData = ( (((int16_t)msb
      +                          Data) << 8) | (lsbData) ) >> 4;
 24607     1691  082F               	movf	BMA253_GetAccelDataZ@msbData,w
 24608     1692  00AB               	movwf	??_BMA253_GetAccelDataZ+1
 24609     1693  082E               	movf	BMA253_GetAccelDataZ@lsbData,w
 24610     1694  00AA               	movwf	??_BMA253_GetAccelDataZ
 24611     1695  3004               	movlw	4
 24612     1696  00AC               	movwf	??_BMA253_GetAccelDataZ+2
 24613     1697                     u10405:
 24614     1697  0D2B               	rlf	??_BMA253_GetAccelDataZ+1,w
 24615     1698  0CAB               	rrf	??_BMA253_GetAccelDataZ+1,f
 24616     1699  0CAA               	rrf	??_BMA253_GetAccelDataZ,f
 24617     169A  0BAC               	decfsz	??_BMA253_GetAccelDataZ+2,f
 24618     169B  2E97               	goto	u10405
 24619     169C  082D               	movf	BMA253_GetAccelDataZ@zAccelData,w
 24620     169D  0086               	movwf	6
 24621     169E  0187               	clrf	7
 24622     169F  082A               	movf	??_BMA253_GetAccelDataZ,w
 24623     16A0  3FC0               	movwi [0]fsr1
 24624     16A1  082B               	movf	??_BMA253_GetAccelDataZ+1,w
 24625     16A2  3FC1               	movwi [1]fsr1
 24626     16A3                     l35:
 24627     16A3  0008               	return
 24628     16A4                     __end_of_BMA253_GetAccelDataZ:
 24629                           
 24630                           	psect	text106
 24631     1155                     __ptext106:	
 24632 ;; *************** function _BMA253_NewAccelDataRdyZ *****************
 24633 ;; Defined at:
 24634 ;;		line 172 in file "mcc_generated_files/application/BMA253_accel.c"
 24635 ;; Parameters:    Size  Location     Type
 24636 ;;		None
 24637 ;; Auto vars:     Size  Location     Type
 24638 ;;  zNewData        1   11[COMMON] _Bool 
 24639 ;; Return value:  Size  Location     Type
 24640 ;;                  1    wreg      _Bool 
 24641 ;; Registers used:
 24642 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24643 ;; Tracked objects:
 24644 ;;		On entry : 0/0
 24645 ;;		On exit  : 0/0
 24646 ;;		Unchanged: 0/0
 24647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24649 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24651 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24652 ;;Total ram usage:        1 bytes
 24653 ;; Hardware stack levels used: 1
 24654 ;; Hardware stack levels required when called: 13
 24655 ;; This function calls:
 24656 ;;		_i2c_read1ByteRegister
 24657 ;; This function is called by:
 24658 ;;		_BMA253_GetAccelDataZ
 24659 ;;		_BMA253_GetAccelDataXYZ
 24660 ;; This function uses a non-reentrant model
 24661 ;;
 24662                           
 24663     1155                     _BMA253_NewAccelDataRdyZ:	
 24664                           ;psect for function _BMA253_NewAccelDataRdyZ
 24665                           
 24666     1155                     l13338:	
 24667                           ;incstack = 0
 24668                           ; Regs used in _BMA253_NewAccelDataRdyZ: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24669                           
 24670                           
 24671                           ;mcc_generated_files/application/BMA253_accel.c: 174:     _Bool zNewData;;mcc_generated_
      +                          files/application/BMA253_accel.c: 176:     zNewData = (i2c_read1ByteRegister((0x19), (0x
      +                          06)) & (0x01));
 24672     1155  3006               	movlw	6
 24673     1156  0140               	movlb	0	; select bank0
 24674     1157  00A4               	movwf	i2c_read1ByteRegister@reg
 24675     1158  3019               	movlw	25
 24676     1159  318B  2364  3191   	fcall	_i2c_read1ByteRegister
 24677     115C  3901               	andlw	1
 24678     115D  1D03               	btfss	3,2
 24679     115E  2960               	goto	u10231
 24680     115F  2962               	goto	u10230
 24681     1160                     u10231:
 24682     1160  3001               	movlw	1
 24683     1161  2963               	goto	u10240
 24684     1162                     u10230:
 24685     1162  3000               	movlw	0
 24686     1163                     u10240:
 24687     1163  00FB               	movwf	BMA253_NewAccelDataRdyZ@zNewData
 24688     1164                     l13340:
 24689                           
 24690                           ;mcc_generated_files/application/BMA253_accel.c: 178:     return zNewData;
 24691     1164  087B               	movf	BMA253_NewAccelDataRdyZ@zNewData,w
 24692     1165                     l56:
 24693     1165  0008               	return
 24694     1166                     __end_of_BMA253_NewAccelDataRdyZ:
 24695                           
 24696                           	psect	text107
 24697     1648                     __ptext107:	
 24698 ;; *************** function _BMA253_GetAccelDataY *****************
 24699 ;; Defined at:
 24700 ;;		line 90 in file "mcc_generated_files/application/BMA253_accel.c"
 24701 ;; Parameters:    Size  Location     Type
 24702 ;;  yAccelData      1    wreg     PTR short 
 24703 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 24704 ;; Auto vars:     Size  Location     Type
 24705 ;;  yAccelData      1   13[BANK0 ] PTR short 
 24706 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 24707 ;;  msbData         1   15[BANK0 ] unsigned char 
 24708 ;;  lsbData         1   14[BANK0 ] unsigned char 
 24709 ;; Return value:  Size  Location     Type
 24710 ;;                  1    wreg      void 
 24711 ;; Registers used:
 24712 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24713 ;; Tracked objects:
 24714 ;;		On entry : 0/0
 24715 ;;		On exit  : 0/0
 24716 ;;		Unchanged: 0/0
 24717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24719 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24720 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24721 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24722 ;;Total ram usage:        6 bytes
 24723 ;; Hardware stack levels used: 1
 24724 ;; Hardware stack levels required when called: 14
 24725 ;; This function calls:
 24726 ;;		_BMA253_NewAccelDataRdyY
 24727 ;;		_i2c_read1ByteRegister
 24728 ;; This function is called by:
 24729 ;;		_BMA253_GetAccelDataXYZ
 24730 ;; This function uses a non-reentrant model
 24731 ;;
 24732                           
 24733     1648                     _BMA253_GetAccelDataY:	
 24734                           ;psect for function _BMA253_GetAccelDataY
 24735                           
 24736                           
 24737                           ;incstack = 0
 24738 ;; hardware stack exceeded
 24739                           ; Regs used in _BMA253_GetAccelDataY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24740                           ;BMA253_GetAccelDataY@yAccelData stored from wreg
 24741     1648  0140               	movlb	0	; select bank0
 24742     1649  00AD               	movwf	BMA253_GetAccelDataY@yAccelData
 24743     164A                     l13420:
 24744     164A                     l13422:	
 24745                           ;mcc_generated_files/application/BMA253_accel.c: 90: void BMA253_GetAccelDataY(int16_t *
      +                          yAccelData);mcc_generated_files/application/BMA253_accel.c: 91: {;mcc_generated_files/ap
      +                          plication/BMA253_accel.c: 92:     uint8_t lsbData;;mcc_generated_files/application/BMA25
      +                          3_accel.c: 93:     uint8_t msbData;;mcc_generated_files/application/BMA253_accel.c: 94: 
      +                              while(!BMA253_NewAccelDataRdyY())
 24746                           
 24747                           
 24748                           ;mcc_generated_files/application/BMA253_accel.c: 94:     while(!BMA253_NewAccelDataRdyY(
      +                          ))
 24749     164A  3191  2144  3196   	fcall	_BMA253_NewAccelDataRdyY
 24750     164D  3A00               	xorlw	0
 24751     164E  1903               	skipnz
 24752     164F  2E51               	goto	u10371
 24753     1650  2E52               	goto	u10370
 24754     1651                     u10371:
 24755     1651  2E4A               	goto	l13422
 24756     1652                     u10370:
 24757     1652                     l13424:
 24758                           
 24759                           ;mcc_generated_files/application/BMA253_accel.c: 99:     lsbData = i2c_read1ByteRegister
      +                          ((0x19), (0x04));
 24760     1652  3004               	movlw	4
 24761     1653  0140               	movlb	0	; select bank0
 24762     1654  00A4               	movwf	i2c_read1ByteRegister@reg
 24763     1655  3019               	movlw	25
 24764     1656  318B  2364  3196   	fcall	_i2c_read1ByteRegister
 24765     1659  0140               	movlb	0	; select bank0
 24766     165A  00AE               	movwf	BMA253_GetAccelDataY@lsbData
 24767                           
 24768                           ;mcc_generated_files/application/BMA253_accel.c: 100:     msbData = i2c_read1ByteRegiste
      +                          r((0x19), (0x05));
 24769     165B  3005               	movlw	5
 24770     165C  00A4               	movwf	i2c_read1ByteRegister@reg
 24771     165D  3019               	movlw	25
 24772     165E  318B  2364  3196   	fcall	_i2c_read1ByteRegister
 24773     1661  0140               	movlb	0	; select bank0
 24774     1662  00AF               	movwf	BMA253_GetAccelDataY@msbData
 24775     1663                     l13426:
 24776                           
 24777                           ;mcc_generated_files/application/BMA253_accel.c: 101:     *yAccelData = ( (((int16_t)msb
      +                          Data) << 8) | (lsbData) ) >> 4;
 24778     1663  082F               	movf	BMA253_GetAccelDataY@msbData,w
 24779     1664  00AB               	movwf	??_BMA253_GetAccelDataY+1
 24780     1665  082E               	movf	BMA253_GetAccelDataY@lsbData,w
 24781     1666  00AA               	movwf	??_BMA253_GetAccelDataY
 24782     1667  3004               	movlw	4
 24783     1668  00AC               	movwf	??_BMA253_GetAccelDataY+2
 24784     1669                     u10385:
 24785     1669  0D2B               	rlf	??_BMA253_GetAccelDataY+1,w
 24786     166A  0CAB               	rrf	??_BMA253_GetAccelDataY+1,f
 24787     166B  0CAA               	rrf	??_BMA253_GetAccelDataY,f
 24788     166C  0BAC               	decfsz	??_BMA253_GetAccelDataY+2,f
 24789     166D  2E69               	goto	u10385
 24790     166E  082D               	movf	BMA253_GetAccelDataY@yAccelData,w
 24791     166F  0086               	movwf	6
 24792     1670  0187               	clrf	7
 24793     1671  082A               	movf	??_BMA253_GetAccelDataY,w
 24794     1672  3FC0               	movwi [0]fsr1
 24795     1673  082B               	movf	??_BMA253_GetAccelDataY+1,w
 24796     1674  3FC1               	movwi [1]fsr1
 24797     1675                     l29:
 24798     1675  0008               	return
 24799     1676                     __end_of_BMA253_GetAccelDataY:
 24800                           
 24801                           	psect	text108
 24802     1144                     __ptext108:	
 24803 ;; *************** function _BMA253_NewAccelDataRdyY *****************
 24804 ;; Defined at:
 24805 ;;		line 163 in file "mcc_generated_files/application/BMA253_accel.c"
 24806 ;; Parameters:    Size  Location     Type
 24807 ;;		None
 24808 ;; Auto vars:     Size  Location     Type
 24809 ;;  yNewData        1   11[COMMON] _Bool 
 24810 ;; Return value:  Size  Location     Type
 24811 ;;                  1    wreg      _Bool 
 24812 ;; Registers used:
 24813 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24814 ;; Tracked objects:
 24815 ;;		On entry : 0/0
 24816 ;;		On exit  : 0/0
 24817 ;;		Unchanged: 0/0
 24818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24820 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24822 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24823 ;;Total ram usage:        1 bytes
 24824 ;; Hardware stack levels used: 1
 24825 ;; Hardware stack levels required when called: 13
 24826 ;; This function calls:
 24827 ;;		_i2c_read1ByteRegister
 24828 ;; This function is called by:
 24829 ;;		_BMA253_GetAccelDataY
 24830 ;;		_BMA253_GetAccelDataXYZ
 24831 ;; This function uses a non-reentrant model
 24832 ;;
 24833                           
 24834     1144                     _BMA253_NewAccelDataRdyY:	
 24835                           ;psect for function _BMA253_NewAccelDataRdyY
 24836                           
 24837     1144                     l13332:	
 24838                           ;incstack = 0
 24839                           ; Regs used in _BMA253_NewAccelDataRdyY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24840                           
 24841                           
 24842                           ;mcc_generated_files/application/BMA253_accel.c: 165:     _Bool yNewData;;mcc_generated_
      +                          files/application/BMA253_accel.c: 167:     yNewData = (i2c_read1ByteRegister((0x19), (0x
      +                          04)) & (0x01));
 24843     1144  3004               	movlw	4
 24844     1145  0140               	movlb	0	; select bank0
 24845     1146  00A4               	movwf	i2c_read1ByteRegister@reg
 24846     1147  3019               	movlw	25
 24847     1148  318B  2364  3191   	fcall	_i2c_read1ByteRegister
 24848     114B  3901               	andlw	1
 24849     114C  1D03               	btfss	3,2
 24850     114D  294F               	goto	u10211
 24851     114E  2951               	goto	u10210
 24852     114F                     u10211:
 24853     114F  3001               	movlw	1
 24854     1150  2952               	goto	u10220
 24855     1151                     u10210:
 24856     1151  3000               	movlw	0
 24857     1152                     u10220:
 24858     1152  00FB               	movwf	BMA253_NewAccelDataRdyY@yNewData
 24859     1153                     l13334:
 24860                           
 24861                           ;mcc_generated_files/application/BMA253_accel.c: 169:     return yNewData;
 24862     1153  087B               	movf	BMA253_NewAccelDataRdyY@yNewData,w
 24863     1154                     l53:
 24864     1154  0008               	return
 24865     1155                     __end_of_BMA253_NewAccelDataRdyY:
 24866                           
 24867                           	psect	text109
 24868     0B64                     __ptext109:	
 24869 ;; *************** function _i2c_read1ByteRegister *****************
 24870 ;; Defined at:
 24871 ;;		line 97 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 24872 ;; Parameters:    Size  Location     Type
 24873 ;;  address         1    wreg     unsigned char 
 24874 ;;  reg             1    4[BANK0 ] unsigned char 
 24875 ;; Auto vars:     Size  Location     Type
 24876 ;;  address         1    5[BANK0 ] unsigned char 
 24877 ;;  x               2    7[BANK0 ] int 
 24878 ;;  d2              1    9[BANK0 ] unsigned char 
 24879 ;;  e               1    6[BANK0 ] enum E358
 24880 ;; Return value:  Size  Location     Type
 24881 ;;                  1    wreg      unsigned char 
 24882 ;; Registers used:
 24883 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24884 ;; Tracked objects:
 24885 ;;		On entry : 0/0
 24886 ;;		On exit  : 0/0
 24887 ;;		Unchanged: 0/0
 24888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24889 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24890 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24892 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24893 ;;Total ram usage:        6 bytes
 24894 ;; Hardware stack levels used: 1
 24895 ;; Hardware stack levels required when called: 12
 24896 ;; This function calls:
 24897 ;;		_I2C1_Close
 24898 ;;		_I2C1_MasterWrite
 24899 ;;		_I2C1_Open
 24900 ;;		_I2C1_SetAddressNackCallback
 24901 ;;		_I2C1_SetBuffer
 24902 ;;		_I2C1_SetDataCompleteCallback
 24903 ;; This function is called by:
 24904 ;;		_BMA253_GetAccelDataY
 24905 ;;		_BMA253_GetAccelDataZ
 24906 ;;		_BMA253_NewAccelDataRdyY
 24907 ;;		_BMA253_NewAccelDataRdyZ
 24908 ;;		_BMA253_GetAccelDataX
 24909 ;;		_BMA253_GetAccelChipId
 24910 ;;		_BMA253_NewAccelDataRdyX
 24911 ;; This function uses a non-reentrant model
 24912 ;;
 24913                           
 24914     0B64                     _i2c_read1ByteRegister:	
 24915                           ;psect for function _i2c_read1ByteRegister
 24916                           
 24917                           
 24918                           ;incstack = 0
 24919                           ; Regs used in _i2c_read1ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24920                           ;i2c_read1ByteRegister@address stored from wreg
 24921     0B64  0140               	movlb	0	; select bank0
 24922     0B65  00A5               	movwf	i2c_read1ByteRegister@address
 24923     0B66                     l13176:
 24924                           
 24925                           ;mcc_generated_files/drivers/i2c_simple_master.c: 97: uint8_t i2c_read1ByteRegister(i2c1
      +                          _address_t address, uint8_t reg);mcc_generated_files/drivers/i2c_simple_master.c: 98: {;
      +                          mcc_generated_files/drivers/i2c_simple_master.c: 99:     uint8_t d2=42;
 24926     0B66  302A               	movlw	42
 24927     0B67  00A9               	movwf	i2c_read1ByteRegister@d2
 24928                           
 24929                           ;mcc_generated_files/drivers/i2c_simple_master.c: 100:     i2c1_error_t e;;mcc_generated
      +                          _files/drivers/i2c_simple_master.c: 101:     int x;;mcc_generated_files/drivers/i2c_simp
      +                          le_master.c: 103:     for(x = 2; x != 0; x--)
 24930     0B68  3002               	movlw	2
 24931     0B69  00A7               	movwf	i2c_read1ByteRegister@x
 24932     0B6A  3000               	movlw	0
 24933     0B6B  00A8               	movwf	i2c_read1ByteRegister@x+1
 24934     0B6C                     l13182:
 24935     0B6C  0140               	movlb	0	; select bank0
 24936     0B6D  0825               	movf	i2c_read1ByteRegister@address,w
 24937     0B6E  3197  27CA  318B   	fcall	_I2C1_Open
 24938     0B71  3A00               	xorlw	0
 24939     0B72  1903               	skipnz
 24940     0B73  2B75               	goto	u10061
 24941     0B74  2B76               	goto	u10060
 24942     0B75                     u10061:
 24943     0B75  2B6C               	goto	l13182
 24944     0B76                     u10060:
 24945     0B76                     l13184:
 24946                           
 24947                           ;mcc_generated_files/drivers/i2c_simple_master.c: 106:         I2C1_SetDataCompleteCallb
      +                          ack(rd1RegCompleteHandler,&d2);
 24948     0B76  30DE               	movlw	low _rd1RegCompleteHandler
 24949     0B77  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 24950     0B78  3010               	movlw	high _rd1RegCompleteHandler
 24951     0B79  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 24952     0B7A  3029               	movlw	(low (i2c_read1ByteRegister@d2| 0))& (0+255)
 24953     0B7B  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 24954     0B7C  319F  27DF  318B   	fcall	_I2C1_SetDataCompleteCallback
 24955     0B7F                     l13186:
 24956                           
 24957                           ;mcc_generated_files/drivers/i2c_simple_master.c: 107:         I2C1_SetBuffer(&reg,1);
 24958     0B7F  3001               	movlw	1
 24959     0B80  00F1               	movwf	I2C1_SetBuffer@bufferSize
 24960     0B81  3000               	movlw	0
 24961     0B82  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 24962     0B83  3024               	movlw	(low (i2c_read1ByteRegister@reg| 0))& (0+255)
 24963     0B84  3190  2064  318B   	fcall	_I2C1_SetBuffer
 24964     0B87                     l13188:
 24965                           
 24966                           ;mcc_generated_files/drivers/i2c_simple_master.c: 108:         I2C1_SetAddressNackCallba
      +                          ck(((void*)0),((void*)0));
 24967     0B87  3000               	movlw	0
 24968     0B88  00F5               	movwf	I2C1_SetAddressNackCallback@cb
 24969     0B89  00F6               	movwf	I2C1_SetAddressNackCallback@cb+1
 24970     0B8A  3000               	movlw	0
 24971     0B8B  00F7               	movwf	I2C1_SetAddressNackCallback@ptr
 24972     0B8C  00F8               	movwf	I2C1_SetAddressNackCallback@ptr+1
 24973     0B8D  319F  27EA  318B   	fcall	_I2C1_SetAddressNackCallback
 24974     0B90                     l13190:
 24975                           
 24976                           ;mcc_generated_files/drivers/i2c_simple_master.c: 109:         I2C1_MasterWrite();
 24977     0B90  319E  26E1  318B   	fcall	_I2C1_MasterWrite
 24978     0B93                     l13192:	
 24979                           ;mcc_generated_files/drivers/i2c_simple_master.c: 110:         while(I2C1_BUSY == (e = I
      +                          2C1_Close()));
 24980                           
 24981     0B93  3192  224D  318B   	fcall	_I2C1_Close
 24982     0B96  0140               	movlb	0	; select bank0
 24983     0B97  00A6               	movwf	i2c_read1ByteRegister@e
 24984     0B98  0326               	decf	i2c_read1ByteRegister@e,w
 24985     0B99  1903               	btfsc	3,2
 24986     0B9A  2B9C               	goto	u10071
 24987     0B9B  2B9D               	goto	u10070
 24988     0B9C                     u10071:
 24989     0B9C  2B93               	goto	l13192
 24990     0B9D                     u10070:
 24991     0B9D                     l13194:
 24992                           
 24993                           ;mcc_generated_files/drivers/i2c_simple_master.c: 111:         if(e==I2C1_NOERR) break;
 24994     0B9D  0826               	movf	i2c_read1ByteRegister@e,w
 24995     0B9E  1D03               	btfss	3,2
 24996     0B9F  2BA1               	goto	u10081
 24997     0BA0  2BA2               	goto	u10080
 24998     0BA1                     u10081:
 24999     0BA1  2BA3               	goto	l13198
 25000     0BA2                     u10080:
 25001     0BA2  2BAD               	goto	l13202
 25002     0BA3                     l13198:
 25003                           
 25004                           ;mcc_generated_files/drivers/i2c_simple_master.c: 112:     }
 25005     0BA3  30FF               	movlw	255
 25006     0BA4  07A7               	addwf	i2c_read1ByteRegister@x,f
 25007     0BA5  30FF               	movlw	255
 25008     0BA6  3DA8               	addwfc	i2c_read1ByteRegister@x+1,f
 25009     0BA7                     l13200:
 25010     0BA7  0827               	movf	i2c_read1ByteRegister@x,w
 25011     0BA8  0428               	iorwf	i2c_read1ByteRegister@x+1,w
 25012     0BA9  1D03               	btfss	3,2
 25013     0BAA  2BAC               	goto	u10091
 25014     0BAB  2BAD               	goto	u10090
 25015     0BAC                     u10091:
 25016     0BAC  2B6C               	goto	l13182
 25017     0BAD                     u10090:
 25018     0BAD                     l13202:
 25019                           
 25020                           ;mcc_generated_files/drivers/i2c_simple_master.c: 115:     return d2;
 25021     0BAD  0829               	movf	i2c_read1ByteRegister@d2,w
 25022     0BAE                     l534:
 25023     0BAE  0008               	return
 25024     0BAF                     __end_of_i2c_read1ByteRegister:
 25025                           
 25026                           	psect	text110
 25027     1FEA                     __ptext110:	
 25028 ;; *************** function _I2C1_SetAddressNackCallback *****************
 25029 ;; Defined at:
 25030 ;;		line 283 in file "mcc_generated_files/i2c1_master.c"
 25031 ;; Parameters:    Size  Location     Type
 25032 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 25033 ;;		 -> NULL(1), 
 25034 ;;  ptr             2    7[COMMON] PTR void 
 25035 ;;		 -> NULL(0), 
 25036 ;; Auto vars:     Size  Location     Type
 25037 ;;		None
 25038 ;; Return value:  Size  Location     Type
 25039 ;;                  1    wreg      void 
 25040 ;; Registers used:
 25041 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25042 ;; Tracked objects:
 25043 ;;		On entry : 0/0
 25044 ;;		On exit  : 0/0
 25045 ;;		Unchanged: 0/0
 25046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25047 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25050 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25051 ;;Total ram usage:        4 bytes
 25052 ;; Hardware stack levels used: 1
 25053 ;; Hardware stack levels required when called: 5
 25054 ;; This function calls:
 25055 ;;		_I2C1_SetCallback
 25056 ;; This function is called by:
 25057 ;;		_i2c_write1ByteRegister
 25058 ;;		_i2c_read1ByteRegister
 25059 ;;		_i2c_read2ByteRegister
 25060 ;;		_i2c_writeNBytes
 25061 ;;		_i2c_write2ByteRegister
 25062 ;;		_i2c_readDataBlock
 25063 ;;		_I2C1_Read1ByteRegister
 25064 ;;		_I2C1_Read2ByteRegister
 25065 ;;		_I2C1_Write1ByteRegister
 25066 ;;		_I2C1_Write2ByteRegister
 25067 ;;		_I2C1_WriteNBytes
 25068 ;;		_I2C1_ReadDataBlock
 25069 ;; This function uses a non-reentrant model
 25070 ;;
 25071                           
 25072     1FEA                     _I2C1_SetAddressNackCallback:	
 25073                           ;psect for function _I2C1_SetAddressNackCallback
 25074                           
 25075     1FEA                     l13064:	
 25076                           ;incstack = 0
 25077                           ; Regs used in _I2C1_SetAddressNackCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 25078                           
 25079                           
 25080                           ;mcc_generated_files/i2c1_master.c: 283: void I2C1_SetAddressNackCallback(i2c1_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c1_master.c: 284: {;mcc_generated_files/i2c1_mast
      +                          er.c: 285:     I2C1_SetCallback(I2C1_ADDR_NACK, cb, ptr);
 25081     1FEA  0876               	movf	I2C1_SetAddressNackCallback@cb+1,w
 25082     1FEB  00F2               	movwf	I2C1_SetCallback@cb+1
 25083     1FEC  0875               	movf	I2C1_SetAddressNackCallback@cb,w
 25084     1FED  00F1               	movwf	I2C1_SetCallback@cb
 25085     1FEE  0877               	movf	I2C1_SetAddressNackCallback@ptr,w
 25086     1FEF  00F3               	movwf	I2C1_SetCallback@ptr
 25087     1FF0  3002               	movlw	2
 25088     1FF1  3194  2444  319F   	fcall	_I2C1_SetCallback
 25089     1FF4                     l1778:
 25090     1FF4  0008               	return
 25091     1FF5                     __end_of_I2C1_SetAddressNackCallback:
 25092                           
 25093                           	psect	text111
 25094     17CA                     __ptext111:	
 25095 ;; *************** function _I2C1_Open *****************
 25096 ;; Defined at:
 25097 ;;		line 176 in file "mcc_generated_files/i2c1_master.c"
 25098 ;; Parameters:    Size  Location     Type
 25099 ;;  address         1    wreg     unsigned char 
 25100 ;; Auto vars:     Size  Location     Type
 25101 ;;  address         1    1[COMMON] unsigned char 
 25102 ;;  returnValue     1    2[COMMON] enum E358
 25103 ;; Return value:  Size  Location     Type
 25104 ;;                  1    wreg      enum E358
 25105 ;; Registers used:
 25106 ;;		wreg, status,2, status,0, pclath, cstack
 25107 ;; Tracked objects:
 25108 ;;		On entry : 0/0
 25109 ;;		On exit  : 0/0
 25110 ;;		Unchanged: 0/0
 25111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25113 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25115 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25116 ;;Total ram usage:        2 bytes
 25117 ;; Hardware stack levels used: 1
 25118 ;; Hardware stack levels required when called: 5
 25119 ;; This function calls:
 25120 ;;		_I2C1_MasterClearIrq
 25121 ;;		_I2C1_MasterOpen
 25122 ;; This function is called by:
 25123 ;;		_i2c_write1ByteRegister
 25124 ;;		_i2c_read1ByteRegister
 25125 ;;		_i2c_read2ByteRegister
 25126 ;;		_i2c_readNBytes
 25127 ;;		_i2c_writeNBytes
 25128 ;;		_i2c_write2ByteRegister
 25129 ;;		_i2c_readDataBlock
 25130 ;;		_I2C1_Read1ByteRegister
 25131 ;;		_I2C1_Read2ByteRegister
 25132 ;;		_I2C1_Write1ByteRegister
 25133 ;;		_I2C1_Write2ByteRegister
 25134 ;;		_I2C1_WriteNBytes
 25135 ;;		_I2C1_ReadNBytes
 25136 ;;		_I2C1_ReadDataBlock
 25137 ;; This function uses a non-reentrant model
 25138 ;;
 25139                           
 25140     17CA                     _I2C1_Open:	
 25141                           ;psect for function _I2C1_Open
 25142                           
 25143                           
 25144                           ;incstack = 0
 25145                           ; Regs used in _I2C1_Open: [wreg+status,2+status,0+pclath+cstack]
 25146                           ;I2C1_Open@address stored from wreg
 25147     17CA  00F1               	movwf	I2C1_Open@address
 25148     17CB                     l12892:
 25149                           
 25150                           ;mcc_generated_files/i2c1_master.c: 176: i2c1_error_t I2C1_Open(i2c1_address_t address);
      +                          mcc_generated_files/i2c1_master.c: 177: {;mcc_generated_files/i2c1_master.c: 178:     i2
      +                          c1_error_t returnValue = I2C1_BUSY;
 25151     17CB  01F2               	clrf	I2C1_Open@returnValue
 25152     17CC  0AF2               	incf	I2C1_Open@returnValue,f
 25153                           
 25154                           ;mcc_generated_files/i2c1_master.c: 180:     if(!I2C1_Status.inUse)
 25155     17CD  0141               	movlb	1	; select bank1
 25156     17CE  193C               	btfsc	(_I2C1_Status^(0+128)+28),2
 25157     17CF  2FD1               	goto	u9741
 25158     17D0  2FD2               	goto	u9740
 25159     17D1                     u9741:
 25160     17D1  2FFE               	goto	l1745
 25161     17D2                     u9740:
 25162     17D2                     l12894:
 25163                           
 25164                           ;mcc_generated_files/i2c1_master.c: 181:     {;mcc_generated_files/i2c1_master.c: 182:  
      +                                 I2C1_Status.address = address;
 25165     17D2  0871               	movf	I2C1_Open@address,w
 25166     17D3  00B6               	movwf	(_I2C1_Status^(0+128)+22)
 25167     17D4                     l12896:
 25168                           
 25169                           ;mcc_generated_files/i2c1_master.c: 183:         I2C1_Status.busy = 0;
 25170     17D4  10BC               	bcf	(_I2C1_Status^(0+128)+28),1
 25171     17D5                     l12898:
 25172                           
 25173                           ;mcc_generated_files/i2c1_master.c: 184:         I2C1_Status.inUse = 1;
 25174     17D5  153C               	bsf	(_I2C1_Status^(0+128)+28),2
 25175     17D6                     l12900:
 25176                           
 25177                           ;mcc_generated_files/i2c1_master.c: 185:         I2C1_Status.addressNackCheck = 0;
 25178     17D6  103C               	bcf	(_I2C1_Status^(0+128)+28),0
 25179                           
 25180                           ;mcc_generated_files/i2c1_master.c: 186:         I2C1_Status.state = I2C1_RESET;
 25181     17D7  300E               	movlw	14
 25182     17D8  00BA               	movwf	(_I2C1_Status^(0+128)+26)
 25183                           
 25184                           ;mcc_generated_files/i2c1_master.c: 187:         I2C1_Status.time_out_value = 500;
 25185     17D9  30F4               	movlw	244
 25186     17DA  00B4               	movwf	(_I2C1_Status^(0+128)+20)
 25187     17DB  3001               	movlw	1
 25188     17DC  00B5               	movwf	(_I2C1_Status^(0+128)+21)
 25189     17DD                     l12902:
 25190                           
 25191                           ;mcc_generated_files/i2c1_master.c: 188:         I2C1_Status.bufferFree = 1;
 25192     17DD  15BC               	bsf	(_I2C1_Status^(0+128)+28),3
 25193                           
 25194                           ;mcc_generated_files/i2c1_master.c: 191:         I2C1_Status.callbackTable[I2C1_DATA_COM
      +                          PLETE]=I2C1_CallbackReturnStop;
 25195     17DE  3070               	movlw	low _I2C1_CallbackReturnStop
 25196     17DF  00A0               	movwf	_I2C1_Status^(0+128)
 25197     17E0  301E               	movlw	high _I2C1_CallbackReturnStop
 25198     17E1  00A1               	movwf	(_I2C1_Status^(0+128)+1)
 25199     17E2                     l12904:
 25200                           
 25201                           ;mcc_generated_files/i2c1_master.c: 192:         I2C1_Status.callbackPayload[I2C1_DATA_C
      +                          OMPLETE] = ((void*)0);
 25202     17E2  01AC               	clrf	(low ((_I2C1_Status| 0+12)))^(0+128)
 25203     17E3                     l12906:
 25204                           
 25205                           ;mcc_generated_files/i2c1_master.c: 193:         I2C1_Status.callbackTable[I2C1_WRITE_CO
      +                          LLISION]=I2C1_CallbackReturnStop;
 25206     17E3  3070               	movlw	low _I2C1_CallbackReturnStop
 25207     17E4  00A2               	movwf	(low ((_I2C1_Status| 0+2)))^(0+128)
 25208     17E5  301E               	movlw	high _I2C1_CallbackReturnStop
 25209     17E6  00A3               	movwf	((low ((_I2C1_Status| 0+2)))^(0+128)+1)
 25210                           
 25211                           ;mcc_generated_files/i2c1_master.c: 194:         I2C1_Status.callbackPayload[I2C1_WRITE_
      +                          COLLISION] = ((void*)0);
 25212     17E7  01AD               	clrf	(low ((_I2C1_Status| 0+13)))^(0+128)
 25213     17E8                     l12908:
 25214                           
 25215                           ;mcc_generated_files/i2c1_master.c: 195:         I2C1_Status.callbackTable[I2C1_ADDR_NAC
      +                          K]=I2C1_CallbackReturnStop;
 25216     17E8  3070               	movlw	low _I2C1_CallbackReturnStop
 25217     17E9  00A4               	movwf	(low ((_I2C1_Status| 0+4)))^(0+128)
 25218     17EA  301E               	movlw	high _I2C1_CallbackReturnStop
 25219     17EB  00A5               	movwf	((low ((_I2C1_Status| 0+4)))^(0+128)+1)
 25220     17EC                     l12910:
 25221                           
 25222                           ;mcc_generated_files/i2c1_master.c: 196:         I2C1_Status.callbackPayload[I2C1_ADDR_N
      +                          ACK] = ((void*)0);
 25223     17EC  01AE               	clrf	(low ((_I2C1_Status| 0+14)))^(0+128)
 25224                           
 25225                           ;mcc_generated_files/i2c1_master.c: 197:         I2C1_Status.callbackTable[I2C1_DATA_NAC
      +                          K]=I2C1_CallbackReturnStop;
 25226     17ED  3070               	movlw	low _I2C1_CallbackReturnStop
 25227     17EE  00A6               	movwf	(low ((_I2C1_Status| 0+6)))^(0+128)
 25228     17EF  301E               	movlw	high _I2C1_CallbackReturnStop
 25229     17F0  00A7               	movwf	((low ((_I2C1_Status| 0+6)))^(0+128)+1)
 25230     17F1                     l12912:
 25231                           
 25232                           ;mcc_generated_files/i2c1_master.c: 198:         I2C1_Status.callbackPayload[I2C1_DATA_N
      +                          ACK] = ((void*)0);
 25233     17F1  01AF               	clrf	(low ((_I2C1_Status| 0+15)))^(0+128)
 25234     17F2                     l12914:
 25235                           
 25236                           ;mcc_generated_files/i2c1_master.c: 199:         I2C1_Status.callbackTable[I2C1_TIMEOUT]
      +                          =I2C1_CallbackReturnReset;
 25237     17F2  3072               	movlw	low _I2C1_CallbackReturnReset
 25238     17F3  00A8               	movwf	(low ((_I2C1_Status| 0+8)))^(0+128)
 25239     17F4  301E               	movlw	high _I2C1_CallbackReturnReset
 25240     17F5  00A9               	movwf	((low ((_I2C1_Status| 0+8)))^(0+128)+1)
 25241                           
 25242                           ;mcc_generated_files/i2c1_master.c: 200:         I2C1_Status.callbackPayload[I2C1_TIMEOU
      +                          T] = ((void*)0);
 25243     17F6  01B0               	clrf	(low ((_I2C1_Status| 0+16)))^(0+128)
 25244     17F7                     l12916:
 25245                           
 25246                           ;mcc_generated_files/i2c1_master.c: 202:         I2C1_MasterClearIrq();
 25247     17F7  319E  2674  3197   	fcall	_I2C1_MasterClearIrq
 25248     17FA                     l12918:
 25249                           
 25250                           ;mcc_generated_files/i2c1_master.c: 203:         I2C1_MasterOpen();
 25251     17FA  3190  204A  3197   	fcall	_I2C1_MasterOpen
 25252     17FD                     l12920:
 25253                           
 25254                           ;mcc_generated_files/i2c1_master.c: 204:         returnValue = I2C1_NOERR;
 25255     17FD  01F2               	clrf	I2C1_Open@returnValue
 25256     17FE                     l1745:	
 25257                           ;mcc_generated_files/i2c1_master.c: 205:     }
 25258                           
 25259                           
 25260                           ;mcc_generated_files/i2c1_master.c: 206:     return returnValue;
 25261     17FE  0872               	movf	I2C1_Open@returnValue,w
 25262     17FF                     l1746:
 25263     17FF  0008               	return
 25264     1800                     __end_of_I2C1_Open:
 25265                           
 25266                           	psect	text112
 25267     104A                     __ptext112:	
 25268 ;; *************** function _I2C1_MasterOpen *****************
 25269 ;; Defined at:
 25270 ;;		line 543 in file "mcc_generated_files/i2c1_master.c"
 25271 ;; Parameters:    Size  Location     Type
 25272 ;;		None
 25273 ;; Auto vars:     Size  Location     Type
 25274 ;;		None
 25275 ;; Return value:  Size  Location     Type
 25276 ;;                  1    wreg      _Bool 
 25277 ;; Registers used:
 25278 ;;		wreg, status,2
 25279 ;; Tracked objects:
 25280 ;;		On entry : 0/0
 25281 ;;		On exit  : 0/0
 25282 ;;		Unchanged: 0/0
 25283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25288 ;;Total ram usage:        0 bytes
 25289 ;; Hardware stack levels used: 1
 25290 ;; Hardware stack levels required when called: 4
 25291 ;; This function calls:
 25292 ;;		Nothing
 25293 ;; This function is called by:
 25294 ;;		_I2C1_Open
 25295 ;; This function uses a non-reentrant model
 25296 ;;
 25297                           
 25298     104A                     _I2C1_MasterOpen:	
 25299                           ;psect for function _I2C1_MasterOpen
 25300                           
 25301     104A                     l12856:	
 25302                           ;incstack = 0
 25303                           ; Regs used in _I2C1_MasterOpen: [wreg+status,2]
 25304                           
 25305                           
 25306                           ;mcc_generated_files/i2c1_master.c: 545:     if(!SSP1CON1bits.SSPEN)
 25307     104A  0143               	movlb	3	; select bank3
 25308     104B  1A90               	btfsc	16,5	;volatile
 25309     104C  284E               	goto	u9711
 25310     104D  284F               	goto	u9710
 25311     104E                     u9711:
 25312     104E  2856               	goto	l1911
 25313     104F                     u9710:
 25314     104F                     l12858:
 25315                           
 25316                           ;mcc_generated_files/i2c1_master.c: 546:     {;mcc_generated_files/i2c1_master.c: 547:  
      +                                 SSP1STAT = 0x00;
 25317     104F  018F               	clrf	15	;volatile
 25318     1050                     l12860:
 25319                           
 25320                           ;mcc_generated_files/i2c1_master.c: 548:         SSP1CON1 = 0x08;
 25321     1050  3008               	movlw	8
 25322     1051  0090               	movwf	16	;volatile
 25323     1052                     l12862:
 25324                           
 25325                           ;mcc_generated_files/i2c1_master.c: 549:         SSP1CON2 = 0x00;
 25326     1052  0191               	clrf	17	;volatile
 25327                           
 25328                           ;mcc_generated_files/i2c1_master.c: 550:         SSP1ADD = 0x4F;
 25329     1053  304F               	movlw	79
 25330     1054  008D               	movwf	13	;volatile
 25331     1055                     l12864:
 25332                           
 25333                           ;mcc_generated_files/i2c1_master.c: 551:         SSP1CON1bits.SSPEN = 1;
 25334     1055  1690               	bsf	16,5	;volatile
 25335     1056                     l1911:
 25336     1056  0008               	return
 25337     1057                     __end_of_I2C1_MasterOpen:
 25338                           
 25339                           	psect	text113
 25340     1EE1                     __ptext113:	
 25341 ;; *************** function _I2C1_MasterWrite *****************
 25342 ;; Defined at:
 25343 ;;		line 251 in file "mcc_generated_files/i2c1_master.c"
 25344 ;; Parameters:    Size  Location     Type
 25345 ;;		None
 25346 ;; Auto vars:     Size  Location     Type
 25347 ;;		None
 25348 ;; Return value:  Size  Location     Type
 25349 ;;                  1    wreg      enum E358
 25350 ;; Registers used:
 25351 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25352 ;; Tracked objects:
 25353 ;;		On entry : 0/0
 25354 ;;		On exit  : 0/0
 25355 ;;		Unchanged: 0/0
 25356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25361 ;;Total ram usage:        0 bytes
 25362 ;; Hardware stack levels used: 1
 25363 ;; Hardware stack levels required when called: 11
 25364 ;; This function calls:
 25365 ;;		_I2C1_MasterOperation
 25366 ;; This function is called by:
 25367 ;;		_i2c_write1ByteRegister
 25368 ;;		_i2c_read1ByteRegister
 25369 ;;		_i2c_read2ByteRegister
 25370 ;;		_i2c_writeNBytes
 25371 ;;		_i2c_write2ByteRegister
 25372 ;;		_i2c_readDataBlock
 25373 ;;		_I2C1_Read1ByteRegister
 25374 ;;		_I2C1_Read2ByteRegister
 25375 ;;		_I2C1_Write1ByteRegister
 25376 ;;		_I2C1_Write2ByteRegister
 25377 ;;		_I2C1_WriteNBytes
 25378 ;;		_I2C1_ReadDataBlock
 25379 ;; This function uses a non-reentrant model
 25380 ;;
 25381                           
 25382     1EE1                     _I2C1_MasterWrite:	
 25383                           ;psect for function _I2C1_MasterWrite
 25384                           
 25385     1EE1                     l13066:	
 25386                           ;incstack = 0
 25387                           ; Regs used in _I2C1_MasterWrite: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25388                           
 25389                           
 25390                           ;mcc_generated_files/i2c1_master.c: 253:     return I2C1_MasterOperation(0);;	Return val
      +                          ue of _I2C1_MasterWrite is never used
 25391     1EE1  3000               	movlw	0
 25392     1EE2  3193  23BC  319E   	fcall	_I2C1_MasterOperation
 25393     1EE5                     l1762:
 25394     1EE5  0008               	return
 25395     1EE6                     __end_of_I2C1_MasterWrite:
 25396                           
 25397                           	psect	text114
 25398     13BC                     __ptext114:	
 25399 ;; *************** function _I2C1_MasterOperation *****************
 25400 ;; Defined at:
 25401 ;;		line 224 in file "mcc_generated_files/i2c1_master.c"
 25402 ;; Parameters:    Size  Location     Type
 25403 ;;  read            1    wreg     _Bool 
 25404 ;; Auto vars:     Size  Location     Type
 25405 ;;  read            1    2[BANK0 ] _Bool 
 25406 ;;  returnValue     1    3[BANK0 ] enum E358
 25407 ;; Return value:  Size  Location     Type
 25408 ;;                  1    wreg      enum E358
 25409 ;; Registers used:
 25410 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25411 ;; Tracked objects:
 25412 ;;		On entry : 0/0
 25413 ;;		On exit  : 0/0
 25414 ;;		Unchanged: 0/0
 25415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25417 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25419 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25420 ;;Total ram usage:        2 bytes
 25421 ;; Hardware stack levels used: 1
 25422 ;; Hardware stack levels required when called: 10
 25423 ;; This function calls:
 25424 ;;		_I2C1_MasterStart
 25425 ;;		_I2C1_Poller
 25426 ;; This function is called by:
 25427 ;;		_I2C1_MasterRead
 25428 ;;		_I2C1_MasterWrite
 25429 ;; This function uses a non-reentrant model
 25430 ;;
 25431                           
 25432     13BC                     _I2C1_MasterOperation:	
 25433                           ;psect for function _I2C1_MasterOperation
 25434                           
 25435                           
 25436                           ;incstack = 0
 25437                           ; Regs used in _I2C1_MasterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25438                           ;I2C1_MasterOperation@read stored from wreg
 25439     13BC  0140               	movlb	0	; select bank0
 25440     13BD  00A2               	movwf	I2C1_MasterOperation@read
 25441     13BE                     l12872:
 25442                           
 25443                           ;mcc_generated_files/i2c1_master.c: 224: i2c1_error_t I2C1_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c1_master.c: 225: {;mcc_generated_files/i2c1_master.c: 226:     i2c
      +                          1_error_t returnValue = I2C1_BUSY;
 25444     13BE  01A3               	clrf	I2C1_MasterOperation@returnValue
 25445     13BF  0AA3               	incf	I2C1_MasterOperation@returnValue,f
 25446                           
 25447                           ;mcc_generated_files/i2c1_master.c: 227:     if(!I2C1_Status.busy)
 25448     13C0  0141               	movlb	1	; select bank1
 25449     13C1  18BC               	btfsc	(_I2C1_Status^(0+128)+28),1
 25450     13C2  2BC4               	goto	u9721
 25451     13C3  2BC5               	goto	u9720
 25452     13C4                     u9721:
 25453     13C4  2BDA               	goto	l12888
 25454     13C5                     u9720:
 25455     13C5                     l12874:
 25456                           
 25457                           ;mcc_generated_files/i2c1_master.c: 228:     {;mcc_generated_files/i2c1_master.c: 229:  
      +                                 I2C1_Status.busy = 1;
 25458     13C5  14BC               	bsf	(_I2C1_Status^(0+128)+28),1
 25459     13C6                     l12876:
 25460                           
 25461                           ;mcc_generated_files/i2c1_master.c: 230:         returnValue = I2C1_NOERR;
 25462     13C6  0140               	movlb	0	; select bank0
 25463     13C7  01A3               	clrf	I2C1_MasterOperation@returnValue
 25464     13C8                     l12878:
 25465                           
 25466                           ;mcc_generated_files/i2c1_master.c: 232:         if(read)
 25467     13C8  0822               	movf	I2C1_MasterOperation@read,w
 25468     13C9  1903               	btfsc	3,2
 25469     13CA  2BCC               	goto	u9731
 25470     13CB  2BCD               	goto	u9730
 25471     13CC                     u9731:
 25472     13CC  2BD1               	goto	l12882
 25473     13CD                     u9730:
 25474     13CD                     l12880:
 25475                           
 25476                           ;mcc_generated_files/i2c1_master.c: 233:         {;mcc_generated_files/i2c1_master.c: 23
      +                          4:             I2C1_Status.state = I2C1_SEND_ADR_READ;
 25477     13CD  0141               	movlb	1	; select bank1
 25478     13CE  01BA               	clrf	(_I2C1_Status^(0+128)+26)
 25479     13CF  0ABA               	incf	(_I2C1_Status^(0+128)+26),f
 25480                           
 25481                           ;mcc_generated_files/i2c1_master.c: 235:         }
 25482     13D0  2BD4               	goto	l12884
 25483     13D1                     l12882:
 25484                           
 25485                           ;mcc_generated_files/i2c1_master.c: 237:         {;mcc_generated_files/i2c1_master.c: 23
      +                          8:             I2C1_Status.state = I2C1_SEND_ADR_WRITE;
 25486     13D1  3002               	movlw	2
 25487     13D2  0141               	movlb	1	; select bank1
 25488     13D3  00BA               	movwf	(_I2C1_Status^(0+128)+26)
 25489     13D4                     l12884:
 25490                           
 25491                           ;mcc_generated_files/i2c1_master.c: 240:         I2C1_MasterStart();
 25492     13D4  319E  267D  3193   	fcall	_I2C1_MasterStart
 25493     13D7                     l12886:
 25494                           
 25495                           ;mcc_generated_files/i2c1_master.c: 241:         I2C1_Poller();
 25496     13D7  3190  203D  3193   	fcall	_I2C1_Poller
 25497     13DA                     l12888:
 25498                           
 25499                           ;mcc_generated_files/i2c1_master.c: 243:     return returnValue;
 25500     13DA  0140               	movlb	0	; select bank0
 25501     13DB  0823               	movf	I2C1_MasterOperation@returnValue,w
 25502     13DC                     l1756:
 25503     13DC  0008               	return
 25504     13DD                     __end_of_I2C1_MasterOperation:
 25505                           
 25506                           	psect	text115
 25507     103D                     __ptext115:	
 25508 ;; *************** function _I2C1_Poller *****************
 25509 ;; Defined at:
 25510 ;;		line 312 in file "mcc_generated_files/i2c1_master.c"
 25511 ;; Parameters:    Size  Location     Type
 25512 ;;		None
 25513 ;; Auto vars:     Size  Location     Type
 25514 ;;		None
 25515 ;; Return value:  Size  Location     Type
 25516 ;;                  1    wreg      void 
 25517 ;; Registers used:
 25518 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25519 ;; Tracked objects:
 25520 ;;		On entry : 0/0
 25521 ;;		On exit  : 0/0
 25522 ;;		Unchanged: 0/0
 25523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25528 ;;Total ram usage:        0 bytes
 25529 ;; Hardware stack levels used: 1
 25530 ;; Hardware stack levels required when called: 9
 25531 ;; This function calls:
 25532 ;;		_I2C1_MasterFsm
 25533 ;;		_I2C1_MasterWaitForEvent
 25534 ;; This function is called by:
 25535 ;;		_I2C1_MasterOperation
 25536 ;; This function uses a non-reentrant model
 25537 ;;
 25538                           
 25539     103D                     _I2C1_Poller:	
 25540                           ;psect for function _I2C1_Poller
 25541                           
 25542     103D                     l12848:	
 25543                           ;incstack = 0
 25544                           ; Regs used in _I2C1_Poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25545                           
 25546                           
 25547                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 25548     103D  2844               	goto	l12854
 25549     103E                     l12850:
 25550                           
 25551                           ;mcc_generated_files/i2c1_master.c: 315:     {;mcc_generated_files/i2c1_master.c: 316:  
      +                                 I2C1_MasterWaitForEvent();
 25552     103E  319E  26FB  3190   	fcall	_I2C1_MasterWaitForEvent
 25553     1041                     l12852:
 25554                           
 25555                           ;mcc_generated_files/i2c1_master.c: 317:         I2C1_MasterFsm();
 25556     1041  3195  259A  3190   	fcall	_I2C1_MasterFsm
 25557     1044                     l12854:
 25558                           
 25559                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 25560     1044  0141               	movlb	1	; select bank1
 25561     1045  18BC               	btfsc	(_I2C1_Status^(0+128)+28),1
 25562     1046  2848               	goto	u9701
 25563     1047  2849               	goto	u9700
 25564     1048                     u9701:
 25565     1048  283E               	goto	l12850
 25566     1049                     u9700:
 25567     1049                     l1795:
 25568     1049  0008               	return
 25569     104A                     __end_of_I2C1_Poller:
 25570                           
 25571                           	psect	text116
 25572     1EFB                     __ptext116:	
 25573 ;; *************** function _I2C1_MasterWaitForEvent *****************
 25574 ;; Defined at:
 25575 ;;		line 650 in file "mcc_generated_files/i2c1_master.c"
 25576 ;; Parameters:    Size  Location     Type
 25577 ;;		None
 25578 ;; Auto vars:     Size  Location     Type
 25579 ;;		None
 25580 ;; Return value:  Size  Location     Type
 25581 ;;                  1    wreg      void 
 25582 ;; Registers used:
 25583 ;;		None
 25584 ;; Tracked objects:
 25585 ;;		On entry : 0/0
 25586 ;;		On exit  : 0/0
 25587 ;;		Unchanged: 0/0
 25588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25593 ;;Total ram usage:        0 bytes
 25594 ;; Hardware stack levels used: 1
 25595 ;; Hardware stack levels required when called: 4
 25596 ;; This function calls:
 25597 ;;		Nothing
 25598 ;; This function is called by:
 25599 ;;		_I2C1_Poller
 25600 ;; This function uses a non-reentrant model
 25601 ;;
 25602                           
 25603     1EFB                     _I2C1_MasterWaitForEvent:	
 25604                           ;psect for function _I2C1_MasterWaitForEvent
 25605                           
 25606     1EFB                     l1968:	
 25607                           ;incstack = 0
 25608                           ; Regs used in _I2C1_MasterWaitForEvent: []
 25609                           ;mcc_generated_files/i2c1_master.c: 652:     while(1)
 25610                           
 25611                           
 25612                           ;mcc_generated_files/i2c1_master.c: 653:     {;mcc_generated_files/i2c1_master.c: 654:  
      +                                 if(PIR3bits.SSP1IF)
 25613     1EFB  014E               	movlb	14	; select bank14
 25614     1EFC  1C0F               	btfss	15,0	;volatile
 25615     1EFD  2EFF               	goto	u9671
 25616     1EFE  2F00               	goto	u9670
 25617     1EFF                     u9671:
 25618     1EFF  2EFB               	goto	l1968
 25619     1F00                     u9670:
 25620     1F00                     l1972:
 25621     1F00  0008               	return
 25622     1F01                     __end_of_I2C1_MasterWaitForEvent:
 25623                           
 25624                           	psect	text117
 25625     159A                     __ptext117:	
 25626 ;; *************** function _I2C1_MasterFsm *****************
 25627 ;; Defined at:
 25628 ;;		line 321 in file "mcc_generated_files/i2c1_master.c"
 25629 ;; Parameters:    Size  Location     Type
 25630 ;;		None
 25631 ;; Auto vars:     Size  Location     Type
 25632 ;;		None
 25633 ;; Return value:  Size  Location     Type
 25634 ;;                  1    wreg      void 
 25635 ;; Registers used:
 25636 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25637 ;; Tracked objects:
 25638 ;;		On entry : 0/0
 25639 ;;		On exit  : 0/0
 25640 ;;		Unchanged: 0/0
 25641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25644 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25645 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25646 ;;Total ram usage:        2 bytes
 25647 ;; Hardware stack levels used: 1
 25648 ;; Hardware stack levels required when called: 8
 25649 ;; This function calls:
 25650 ;;		_I2C1_DO_ADDRESS_NACK
 25651 ;;		_I2C1_DO_IDLE
 25652 ;;		_I2C1_DO_RCEN
 25653 ;;		_I2C1_DO_RESET
 25654 ;;		_I2C1_DO_RX
 25655 ;;		_I2C1_DO_RX_ACK
 25656 ;;		_I2C1_DO_RX_NACK_RESTART
 25657 ;;		_I2C1_DO_RX_NACK_STOP
 25658 ;;		_I2C1_DO_SEND_ADR_READ
 25659 ;;		_I2C1_DO_SEND_ADR_WRITE
 25660 ;;		_I2C1_DO_SEND_RESTART
 25661 ;;		_I2C1_DO_SEND_RESTART_READ
 25662 ;;		_I2C1_DO_SEND_RESTART_WRITE
 25663 ;;		_I2C1_DO_SEND_STOP
 25664 ;;		_I2C1_DO_TX
 25665 ;;		_I2C1_DO_TX_EMPTY
 25666 ;;		_I2C1_MasterClearIrq
 25667 ;;		_I2C1_MasterIsNack
 25668 ;; This function is called by:
 25669 ;;		_I2C1_Poller
 25670 ;; This function uses a non-reentrant model
 25671 ;;
 25672                           
 25673     159A                     _I2C1_MasterFsm:	
 25674                           ;psect for function _I2C1_MasterFsm
 25675                           
 25676     159A                     l12836:	
 25677                           ;incstack = 0
 25678                           ; Regs used in _I2C1_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25679                           
 25680                           
 25681                           ;mcc_generated_files/i2c1_master.c: 323:     I2C1_MasterClearIrq();
 25682     159A  319E  2674  3195   	fcall	_I2C1_MasterClearIrq
 25683     159D                     l12838:
 25684                           
 25685                           ;mcc_generated_files/i2c1_master.c: 325:     if(I2C1_Status.addressNackCheck && I2C1_Mas
      +                          terIsNack())
 25686     159D  0141               	movlb	1	; select bank1
 25687     159E  1C3C               	btfss	(_I2C1_Status^(0+128)+28),0
 25688     159F  2DA1               	goto	u9681
 25689     15A0  2DA2               	goto	u9680
 25690     15A1                     u9681:
 25691     15A1  2DAD               	goto	l12844
 25692     15A2                     u9680:
 25693     15A2                     l12840:
 25694     15A2  319E  26F5  3195   	fcall	_I2C1_MasterIsNack
 25695     15A5  3A00               	xorlw	0
 25696     15A6  1903               	skipnz
 25697     15A7  2DA9               	goto	u9691
 25698     15A8  2DAA               	goto	u9690
 25699     15A9                     u9691:
 25700     15A9  2DAD               	goto	l12844
 25701     15AA                     u9690:
 25702     15AA                     l12842:
 25703                           
 25704                           ;mcc_generated_files/i2c1_master.c: 326:     {;mcc_generated_files/i2c1_master.c: 327:  
      +                                 I2C1_Status.state = I2C1_ADDRESS_NACK;
 25705     15AA  300F               	movlw	15
 25706     15AB  0141               	movlb	1	; select bank1
 25707     15AC  00BA               	movwf	(_I2C1_Status^(0+128)+26)
 25708     15AD                     l12844:
 25709                           
 25710                           ;mcc_generated_files/i2c1_master.c: 329:     I2C1_Status.state = i2c1_fsmStateTable[I2C1
      +                          _Status.state]();
 25711     15AD  0141               	movlb	1	; select bank1
 25712     15AE  083A               	movf	(_I2C1_Status^(0+128)+26),w
 25713     15AF  0140               	movlb	0	; select bank0
 25714     15B0  00A0               	movwf	??_I2C1_MasterFsm
 25715     15B1  01A1               	clrf	??_I2C1_MasterFsm+1
 25716     15B2  35A0               	lslf	??_I2C1_MasterFsm,f
 25717     15B3  0DA1               	rlf	??_I2C1_MasterFsm+1,f
 25718     15B4  3028               	movlw	low _i2c1_fsmStateTable
 25719     15B5  0720               	addwf	??_I2C1_MasterFsm,w
 25720     15B6  0084               	movwf	4
 25721     15B7  3018               	movlw	high _i2c1_fsmStateTable
 25722     15B8  3D21               	addwfc	??_I2C1_MasterFsm+1,w
 25723     15B9  3880               	iorlw	128
 25724     15BA  0085               	movwf	5
 25725     15BB  3F01               	moviw [1]fsr0
 25726     15BC  008A               	movwf	10
 25727     15BD  3F00               	moviw [0]fsr0
 25728     15BE  000A               	callw
 25729     15BF  3195               	pagesel	$
 25730     15C0  0141               	movlb	1	; select bank1
 25731     15C1  00BA               	movwf	(_I2C1_Status^(0+128)+26)
 25732     15C2                     l1799:
 25733     15C2  0008               	return
 25734     15C3                     __end_of_I2C1_MasterFsm:
 25735                           
 25736                           	psect	text118
 25737     1572                     __ptext118:	
 25738 ;; *************** function _I2C1_DO_ADDRESS_NACK *****************
 25739 ;; Defined at:
 25740 ;;		line 500 in file "mcc_generated_files/i2c1_master.c"
 25741 ;; Parameters:    Size  Location     Type
 25742 ;;		None
 25743 ;; Auto vars:     Size  Location     Type
 25744 ;;		None
 25745 ;; Return value:  Size  Location     Type
 25746 ;;                  1    wreg      enum E12565
 25747 ;; Registers used:
 25748 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25749 ;; Tracked objects:
 25750 ;;		On entry : 0/0
 25751 ;;		On exit  : 0/0
 25752 ;;		Unchanged: 0/0
 25753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25756 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25757 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25758 ;;Total ram usage:        2 bytes
 25759 ;; Hardware stack levels used: 1
 25760 ;; Hardware stack levels required when called: 7
 25761 ;; This function calls:
 25762 ;;		NULL
 25763 ;;		_I2C1_CallbackReturnReset
 25764 ;;		_I2C1_CallbackReturnStop
 25765 ;;		_I2C1_DO_SEND_RESTART
 25766 ;;		_I2C1_DO_SEND_STOP
 25767 ;;		_rd1RegCompleteHandler
 25768 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1239
 25769 ;;		_rd2RegCompleteHandler
 25770 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1250
 25771 ;;		_rdBlkRegCompleteHandler
 25772 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1273
 25773 ;;		_wr1RegCompleteHandler
 25774 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1256
 25775 ;;		_wr2RegCompleteHandler
 25776 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1262
 25777 ;; This function is called by:
 25778 ;;		_I2C1_MasterFsm
 25779 ;; This function uses a non-reentrant model
 25780 ;;
 25781                           
 25782     1572                     _I2C1_DO_ADDRESS_NACK:	
 25783                           ;psect for function _I2C1_DO_ADDRESS_NACK
 25784                           
 25785     1572                     l12812:	
 25786                           ;incstack = 0
 25787                           ; Regs used in _I2C1_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25788                           
 25789                           
 25790                           ;mcc_generated_files/i2c1_master.c: 502:     I2C1_Status.addressNackCheck = 0;
 25791     1572  0141               	movlb	1	; select bank1
 25792     1573  103C               	bcf	(_I2C1_Status^(0+128)+28),0
 25793     1574                     l12814:
 25794                           
 25795                           ;mcc_generated_files/i2c1_master.c: 503:     I2C1_Status.error = I2C1_FAIL;
 25796     1574  3002               	movlw	2
 25797     1575  00BB               	movwf	(_I2C1_Status^(0+128)+27)
 25798                           
 25799                           ;mcc_generated_files/i2c1_master.c: 504:     switch(I2C1_Status.callbackTable[I2C1_ADDR_
      +                          NACK](I2C1_Status.callbackPayload[I2C1_ADDR_NACK]))
 25800     1576  2D7F               	goto	l12826
 25801     1577                     l12816:
 25802                           
 25803                           ;mcc_generated_files/i2c1_master.c: 508:             return I2C1_DO_SEND_RESTART();
 25804     1577  319E  26C3  3195   	fcall	_I2C1_DO_SEND_RESTART
 25805     157A  2D99               	goto	l1890
 25806     157B                     l12820:
 25807                           
 25808                           ;mcc_generated_files/i2c1_master.c: 510:             return I2C1_DO_SEND_STOP();
 25809     157B  319E  26C8  3195   	fcall	_I2C1_DO_SEND_STOP
 25810     157E  2D99               	goto	l1890
 25811     157F                     l12826:
 25812     157F  082E               	movf	(low ((_I2C1_Status| 0+14)))^(0+128),w
 25813     1580  00F8               	movwf	I2C1_CallbackReturnReset@funPtr
 25814     1581  3004               	movlw	4
 25815     1582  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 25816     1583  0086               	movwf	6
 25817     1584  0187               	clrf	7
 25818     1585  3F41               	moviw [1]fsr1
 25819     1586  008A               	movwf	10
 25820     1587  3F40               	moviw [0]fsr1
 25821     1588  000A               	callw
 25822     1589  3195               	pagesel	$
 25823     158A  00F9               	movwf	??_I2C1_DO_ADDRESS_NACK
 25824     158B  01FA               	clrf	??_I2C1_DO_ADDRESS_NACK+1
 25825                           
 25826                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25827                           ; Switch size 1, requested type "simple"
 25828                           ; Number of cases is 1, Range of values is 0 to 0
 25829                           ; switch strategies available:
 25830                           ; Name         Instructions Cycles
 25831                           ; simple_byte            4     3 (average)
 25832                           ; direct_byte            8     6 (fixed)
 25833                           ; jumptable            260     6 (fixed)
 25834                           ;	Chosen strategy is simple_byte
 25835     158C  087A               	movf	??_I2C1_DO_ADDRESS_NACK+1,w
 25836     158D  3A00               	xorlw	0	; case 0
 25837     158E  1903               	skipnz
 25838     158F  2D91               	goto	l16628
 25839     1590  2D7B               	goto	l12820
 25840     1591                     l16628:
 25841                           
 25842                           ; Switch size 1, requested type "simple"
 25843                           ; Number of cases is 2, Range of values is 2 to 3
 25844                           ; switch strategies available:
 25845                           ; Name         Instructions Cycles
 25846                           ; simple_byte            7     4 (average)
 25847                           ; direct_byte           13     9 (fixed)
 25848                           ; jumptable            263     9 (fixed)
 25849                           ;	Chosen strategy is simple_byte
 25850     1591  0879               	movf	??_I2C1_DO_ADDRESS_NACK,w
 25851     1592  3A02               	xorlw	2	; case 2
 25852     1593  1903               	skipnz
 25853     1594  2D77               	goto	l12816
 25854     1595  3A01               	xorlw	1	; case 3
 25855     1596  1903               	skipnz
 25856     1597  2D77               	goto	l12816
 25857     1598  2D7B               	goto	l12820
 25858     1599                     l1890:
 25859     1599  0008               	return
 25860     159A                     __end_of_I2C1_DO_ADDRESS_NACK:
 25861                           
 25862                           	psect	text119
 25863     1EDC                     __ptext119:	
 25864 ;; *************** function _I2C1_DO_RESET *****************
 25865 ;; Defined at:
 25866 ;;		line 494 in file "mcc_generated_files/i2c1_master.c"
 25867 ;; Parameters:    Size  Location     Type
 25868 ;;		None
 25869 ;; Auto vars:     Size  Location     Type
 25870 ;;		None
 25871 ;; Return value:  Size  Location     Type
 25872 ;;                  1    wreg      enum E12565
 25873 ;; Registers used:
 25874 ;;		wreg, status,2
 25875 ;; Tracked objects:
 25876 ;;		On entry : 0/0
 25877 ;;		On exit  : 0/0
 25878 ;;		Unchanged: 0/0
 25879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25884 ;;Total ram usage:        0 bytes
 25885 ;; Hardware stack levels used: 1
 25886 ;; Hardware stack levels required when called: 4
 25887 ;; This function calls:
 25888 ;;		Nothing
 25889 ;; This function is called by:
 25890 ;;		_I2C1_MasterFsm
 25891 ;; This function uses a non-reentrant model
 25892 ;;
 25893                           
 25894     1EDC                     _I2C1_DO_RESET:	
 25895                           ;psect for function _I2C1_DO_RESET
 25896                           
 25897     1EDC                     l12804:	
 25898                           ;incstack = 0
 25899                           ; Regs used in _I2C1_DO_RESET: [wreg+status,2]
 25900                           
 25901                           
 25902                           ;mcc_generated_files/i2c1_master.c: 496:     I2C1_Status.busy = 0;
 25903     1EDC  0141               	movlb	1	; select bank1
 25904     1EDD  10BC               	bcf	(_I2C1_Status^(0+128)+28),1
 25905     1EDE                     l12806:
 25906                           
 25907                           ;mcc_generated_files/i2c1_master.c: 497:     I2C1_Status.error = I2C1_NOERR;
 25908     1EDE  01BB               	clrf	(_I2C1_Status^(0+128)+27)
 25909     1EDF                     l12808:
 25910                           
 25911                           ;mcc_generated_files/i2c1_master.c: 498:     return I2C1_RESET;
 25912     1EDF  300E               	movlw	14
 25913     1EE0                     l1884:
 25914     1EE0  0008               	return
 25915     1EE1                     __end_of_I2C1_DO_RESET:
 25916                           
 25917                           	psect	text120
 25918     1ED7                     __ptext120:	
 25919 ;; *************** function _I2C1_DO_RX_NACK_RESTART *****************
 25920 ;; Defined at:
 25921 ;;		line 488 in file "mcc_generated_files/i2c1_master.c"
 25922 ;; Parameters:    Size  Location     Type
 25923 ;;		None
 25924 ;; Auto vars:     Size  Location     Type
 25925 ;;		None
 25926 ;; Return value:  Size  Location     Type
 25927 ;;                  1    wreg      enum E12565
 25928 ;; Registers used:
 25929 ;;		wreg, status,2, status,0, pclath, cstack
 25930 ;; Tracked objects:
 25931 ;;		On entry : 0/0
 25932 ;;		On exit  : 0/0
 25933 ;;		Unchanged: 0/0
 25934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25939 ;;Total ram usage:        0 bytes
 25940 ;; Hardware stack levels used: 1
 25941 ;; Hardware stack levels required when called: 5
 25942 ;; This function calls:
 25943 ;;		_I2C1_MasterSendNack
 25944 ;; This function is called by:
 25945 ;;		_I2C1_DO_RX
 25946 ;;		_I2C1_MasterFsm
 25947 ;; This function uses a non-reentrant model
 25948 ;;
 25949                           
 25950     1ED7                     _I2C1_DO_RX_NACK_RESTART:	
 25951                           ;psect for function _I2C1_DO_RX_NACK_RESTART
 25952                           
 25953     1ED7                     l12642:	
 25954                           ;incstack = 0
 25955                           ; Regs used in _I2C1_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 25956                           
 25957                           
 25958                           ;mcc_generated_files/i2c1_master.c: 490:     I2C1_MasterSendNack();
 25959     1ED7  319E  269F  319E   	fcall	_I2C1_MasterSendNack
 25960     1EDA                     l12644:
 25961                           
 25962                           ;mcc_generated_files/i2c1_master.c: 491:     return I2C1_SEND_RESTART;
 25963     1EDA  3009               	movlw	9
 25964     1EDB                     l1881:
 25965     1EDB  0008               	return
 25966     1EDC                     __end_of_I2C1_DO_RX_NACK_RESTART:
 25967                           
 25968                           	psect	text121
 25969     1ED2                     __ptext121:	
 25970 ;; *************** function _I2C1_DO_RX_NACK_STOP *****************
 25971 ;; Defined at:
 25972 ;;		line 482 in file "mcc_generated_files/i2c1_master.c"
 25973 ;; Parameters:    Size  Location     Type
 25974 ;;		None
 25975 ;; Auto vars:     Size  Location     Type
 25976 ;;		None
 25977 ;; Return value:  Size  Location     Type
 25978 ;;                  1    wreg      enum E12565
 25979 ;; Registers used:
 25980 ;;		wreg, status,2, status,0, pclath, cstack
 25981 ;; Tracked objects:
 25982 ;;		On entry : 0/0
 25983 ;;		On exit  : 0/0
 25984 ;;		Unchanged: 0/0
 25985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25990 ;;Total ram usage:        0 bytes
 25991 ;; Hardware stack levels used: 1
 25992 ;; Hardware stack levels required when called: 5
 25993 ;; This function calls:
 25994 ;;		_I2C1_MasterSendNack
 25995 ;; This function is called by:
 25996 ;;		_I2C1_DO_RX
 25997 ;;		_I2C1_MasterFsm
 25998 ;; This function uses a non-reentrant model
 25999 ;;
 26000                           
 26001     1ED2                     _I2C1_DO_RX_NACK_STOP:	
 26002                           ;psect for function _I2C1_DO_RX_NACK_STOP
 26003                           
 26004     1ED2                     l12648:	
 26005                           ;incstack = 0
 26006                           ; Regs used in _I2C1_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 26007                           
 26008                           
 26009                           ;mcc_generated_files/i2c1_master.c: 484:     I2C1_MasterSendNack();
 26010     1ED2  319E  269F  319E   	fcall	_I2C1_MasterSendNack
 26011     1ED5                     l12650:
 26012                           
 26013                           ;mcc_generated_files/i2c1_master.c: 485:     return I2C1_SEND_STOP;
 26014     1ED5  300A               	movlw	10
 26015     1ED6                     l1878:
 26016     1ED6  0008               	return
 26017     1ED7                     __end_of_I2C1_DO_RX_NACK_STOP:
 26018                           
 26019                           	psect	text122
 26020     1ECD                     __ptext122:	
 26021 ;; *************** function _I2C1_DO_RX_ACK *****************
 26022 ;; Defined at:
 26023 ;;		line 475 in file "mcc_generated_files/i2c1_master.c"
 26024 ;; Parameters:    Size  Location     Type
 26025 ;;		None
 26026 ;; Auto vars:     Size  Location     Type
 26027 ;;		None
 26028 ;; Return value:  Size  Location     Type
 26029 ;;                  1    wreg      enum E12565
 26030 ;; Registers used:
 26031 ;;		wreg, status,2, status,0, pclath, cstack
 26032 ;; Tracked objects:
 26033 ;;		On entry : 0/0
 26034 ;;		On exit  : 0/0
 26035 ;;		Unchanged: 0/0
 26036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26041 ;;Total ram usage:        0 bytes
 26042 ;; Hardware stack levels used: 1
 26043 ;; Hardware stack levels required when called: 5
 26044 ;; This function calls:
 26045 ;;		_I2C1_MasterSendAck
 26046 ;; This function is called by:
 26047 ;;		_I2C1_MasterFsm
 26048 ;; This function uses a non-reentrant model
 26049 ;;
 26050                           
 26051     1ECD                     _I2C1_DO_RX_ACK:	
 26052                           ;psect for function _I2C1_DO_RX_ACK
 26053                           
 26054     1ECD                     l12798:	
 26055                           ;incstack = 0
 26056                           ; Regs used in _I2C1_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
 26057                           
 26058                           
 26059                           ;mcc_generated_files/i2c1_master.c: 477:     I2C1_MasterSendAck();
 26060     1ECD  319E  26A3  319E   	fcall	_I2C1_MasterSendAck
 26061     1ED0                     l12800:
 26062                           
 26063                           ;mcc_generated_files/i2c1_master.c: 478:     return I2C1_RCEN;
 26064     1ED0  3005               	movlw	5
 26065     1ED1                     l1875:
 26066     1ED1  0008               	return
 26067     1ED2                     __end_of_I2C1_DO_RX_ACK:
 26068                           
 26069                           	psect	text123
 26070     1EC8                     __ptext123:	
 26071 ;; *************** function _I2C1_DO_SEND_STOP *****************
 26072 ;; Defined at:
 26073 ;;		line 469 in file "mcc_generated_files/i2c1_master.c"
 26074 ;; Parameters:    Size  Location     Type
 26075 ;;		None
 26076 ;; Auto vars:     Size  Location     Type
 26077 ;;		None
 26078 ;; Return value:  Size  Location     Type
 26079 ;;                  1    wreg      enum E12565
 26080 ;; Registers used:
 26081 ;;		wreg, status,2, status,0, pclath, cstack
 26082 ;; Tracked objects:
 26083 ;;		On entry : 0/0
 26084 ;;		On exit  : 0/0
 26085 ;;		Unchanged: 0/0
 26086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26091 ;;Total ram usage:        0 bytes
 26092 ;; Hardware stack levels used: 1
 26093 ;; Hardware stack levels required when called: 5
 26094 ;; This function calls:
 26095 ;;		_I2C1_MasterStop
 26096 ;; This function is called by:
 26097 ;;		_I2C1_DO_TX
 26098 ;;		_I2C1_DO_TX_EMPTY
 26099 ;;		_I2C1_DO_ADDRESS_NACK
 26100 ;;		_I2C1_MasterFsm
 26101 ;; This function uses a non-reentrant model
 26102 ;;
 26103                           
 26104     1EC8                     _I2C1_DO_SEND_STOP:	
 26105                           ;psect for function _I2C1_DO_SEND_STOP
 26106                           
 26107     1EC8                     l12630:	
 26108                           ;incstack = 0
 26109                           ; Regs used in _I2C1_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 26110                           
 26111                           
 26112                           ;mcc_generated_files/i2c1_master.c: 471:     I2C1_MasterStop();
 26113     1EC8  319E  2683  319E   	fcall	_I2C1_MasterStop
 26114     1ECB                     l12632:
 26115                           
 26116                           ;mcc_generated_files/i2c1_master.c: 472:     return I2C1_IDLE;
 26117     1ECB  3000               	movlw	0
 26118     1ECC                     l1872:
 26119     1ECC  0008               	return
 26120     1ECD                     __end_of_I2C1_DO_SEND_STOP:
 26121                           
 26122                           	psect	text124
 26123     1EC3                     __ptext124:	
 26124 ;; *************** function _I2C1_DO_SEND_RESTART *****************
 26125 ;; Defined at:
 26126 ;;		line 463 in file "mcc_generated_files/i2c1_master.c"
 26127 ;; Parameters:    Size  Location     Type
 26128 ;;		None
 26129 ;; Auto vars:     Size  Location     Type
 26130 ;;		None
 26131 ;; Return value:  Size  Location     Type
 26132 ;;                  1    wreg      enum E12565
 26133 ;; Registers used:
 26134 ;;		wreg, status,2, status,0, pclath, cstack
 26135 ;; Tracked objects:
 26136 ;;		On entry : 0/0
 26137 ;;		On exit  : 0/0
 26138 ;;		Unchanged: 0/0
 26139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26144 ;;Total ram usage:        0 bytes
 26145 ;; Hardware stack levels used: 1
 26146 ;; Hardware stack levels required when called: 5
 26147 ;; This function calls:
 26148 ;;		_I2C1_MasterEnableRestart
 26149 ;; This function is called by:
 26150 ;;		_I2C1_DO_TX_EMPTY
 26151 ;;		_I2C1_DO_ADDRESS_NACK
 26152 ;;		_I2C1_MasterFsm
 26153 ;; This function uses a non-reentrant model
 26154 ;;
 26155                           
 26156     1EC3                     _I2C1_DO_SEND_RESTART:	
 26157                           ;psect for function _I2C1_DO_SEND_RESTART
 26158                           
 26159     1EC3                     l12656:	
 26160                           ;incstack = 0
 26161                           ; Regs used in _I2C1_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 26162                           
 26163                           
 26164                           ;mcc_generated_files/i2c1_master.c: 465:     I2C1_MasterEnableRestart();
 26165     1EC3  319E  2680  319E   	fcall	_I2C1_MasterEnableRestart
 26166     1EC6                     l12658:
 26167                           
 26168                           ;mcc_generated_files/i2c1_master.c: 466:     return I2C1_SEND_ADR_READ;
 26169     1EC6  3001               	movlw	1
 26170     1EC7                     l1869:
 26171     1EC7  0008               	return
 26172     1EC8                     __end_of_I2C1_DO_SEND_RESTART:
 26173                           
 26174                           	psect	text125
 26175     1EBE                     __ptext125:	
 26176 ;; *************** function _I2C1_DO_SEND_RESTART_WRITE *****************
 26177 ;; Defined at:
 26178 ;;		line 456 in file "mcc_generated_files/i2c1_master.c"
 26179 ;; Parameters:    Size  Location     Type
 26180 ;;		None
 26181 ;; Auto vars:     Size  Location     Type
 26182 ;;		None
 26183 ;; Return value:  Size  Location     Type
 26184 ;;                  1    wreg      enum E12565
 26185 ;; Registers used:
 26186 ;;		wreg, status,2, status,0, pclath, cstack
 26187 ;; Tracked objects:
 26188 ;;		On entry : 0/0
 26189 ;;		On exit  : 0/0
 26190 ;;		Unchanged: 0/0
 26191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26196 ;;Total ram usage:        0 bytes
 26197 ;; Hardware stack levels used: 1
 26198 ;; Hardware stack levels required when called: 5
 26199 ;; This function calls:
 26200 ;;		_I2C1_MasterEnableRestart
 26201 ;; This function is called by:
 26202 ;;		_I2C1_DO_TX
 26203 ;;		_I2C1_MasterFsm
 26204 ;; This function uses a non-reentrant model
 26205 ;;
 26206                           
 26207     1EBE                     _I2C1_DO_SEND_RESTART_WRITE:	
 26208                           ;psect for function _I2C1_DO_SEND_RESTART_WRITE
 26209                           
 26210     1EBE                     l12624:	
 26211                           ;incstack = 0
 26212                           ; Regs used in _I2C1_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 26213                           
 26214                           
 26215                           ;mcc_generated_files/i2c1_master.c: 458:     I2C1_MasterEnableRestart();
 26216     1EBE  319E  2680  319E   	fcall	_I2C1_MasterEnableRestart
 26217     1EC1                     l12626:
 26218                           
 26219                           ;mcc_generated_files/i2c1_master.c: 459:     return I2C1_SEND_ADR_WRITE;
 26220     1EC1  3002               	movlw	2
 26221     1EC2                     l1866:
 26222     1EC2  0008               	return
 26223     1EC3                     __end_of_I2C1_DO_SEND_RESTART_WRITE:
 26224                           
 26225                           	psect	text126
 26226     1EB9                     __ptext126:	
 26227 ;; *************** function _I2C1_DO_SEND_RESTART_READ *****************
 26228 ;; Defined at:
 26229 ;;		line 450 in file "mcc_generated_files/i2c1_master.c"
 26230 ;; Parameters:    Size  Location     Type
 26231 ;;		None
 26232 ;; Auto vars:     Size  Location     Type
 26233 ;;		None
 26234 ;; Return value:  Size  Location     Type
 26235 ;;                  1    wreg      enum E12565
 26236 ;; Registers used:
 26237 ;;		wreg, status,2, status,0, pclath, cstack
 26238 ;; Tracked objects:
 26239 ;;		On entry : 0/0
 26240 ;;		On exit  : 0/0
 26241 ;;		Unchanged: 0/0
 26242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26247 ;;Total ram usage:        0 bytes
 26248 ;; Hardware stack levels used: 1
 26249 ;; Hardware stack levels required when called: 5
 26250 ;; This function calls:
 26251 ;;		_I2C1_MasterEnableRestart
 26252 ;; This function is called by:
 26253 ;;		_I2C1_DO_TX
 26254 ;;		_I2C1_MasterFsm
 26255 ;; This function uses a non-reentrant model
 26256 ;;
 26257                           
 26258     1EB9                     _I2C1_DO_SEND_RESTART_READ:	
 26259                           ;psect for function _I2C1_DO_SEND_RESTART_READ
 26260                           
 26261     1EB9                     l12618:	
 26262                           ;incstack = 0
 26263                           ; Regs used in _I2C1_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 26264                           
 26265                           
 26266                           ;mcc_generated_files/i2c1_master.c: 452:     I2C1_MasterEnableRestart();
 26267     1EB9  319E  2680  319E   	fcall	_I2C1_MasterEnableRestart
 26268     1EBC                     l12620:
 26269                           
 26270                           ;mcc_generated_files/i2c1_master.c: 453:     return I2C1_SEND_ADR_READ;
 26271     1EBC  3001               	movlw	1
 26272     1EBD                     l1863:
 26273     1EBD  0008               	return
 26274     1EBE                     __end_of_I2C1_DO_SEND_RESTART_READ:
 26275                           
 26276                           	psect	text127
 26277     1F61                     __ptext127:	
 26278 ;; *************** function _I2C1_DO_RCEN *****************
 26279 ;; Defined at:
 26280 ;;		line 402 in file "mcc_generated_files/i2c1_master.c"
 26281 ;; Parameters:    Size  Location     Type
 26282 ;;		None
 26283 ;; Auto vars:     Size  Location     Type
 26284 ;;		None
 26285 ;; Return value:  Size  Location     Type
 26286 ;;                  1    wreg      enum E12565
 26287 ;; Registers used:
 26288 ;;		wreg, status,2, status,0, pclath, cstack
 26289 ;; Tracked objects:
 26290 ;;		On entry : 0/0
 26291 ;;		On exit  : 0/0
 26292 ;;		Unchanged: 0/0
 26293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26298 ;;Total ram usage:        0 bytes
 26299 ;; Hardware stack levels used: 1
 26300 ;; Hardware stack levels required when called: 5
 26301 ;; This function calls:
 26302 ;;		_I2C1_MasterStartRx
 26303 ;; This function is called by:
 26304 ;;		_I2C1_MasterFsm
 26305 ;; This function uses a non-reentrant model
 26306 ;;
 26307                           
 26308     1F61                     _I2C1_DO_RCEN:	
 26309                           ;psect for function _I2C1_DO_RCEN
 26310                           
 26311     1F61                     l12764:	
 26312                           ;incstack = 0
 26313                           ; Regs used in _I2C1_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
 26314                           
 26315                           
 26316                           ;mcc_generated_files/i2c1_master.c: 404:     I2C1_Status.addressNackCheck = 0;
 26317     1F61  0141               	movlb	1	; select bank1
 26318     1F62  103C               	bcf	(_I2C1_Status^(0+128)+28),0
 26319     1F63                     l12766:
 26320                           
 26321                           ;mcc_generated_files/i2c1_master.c: 405:     I2C1_MasterStartRx();
 26322     1F63  319E  2686  319F   	fcall	_I2C1_MasterStartRx
 26323     1F66                     l12768:
 26324                           
 26325                           ;mcc_generated_files/i2c1_master.c: 406:     return I2C1_RX;
 26326     1F66  3004               	movlw	4
 26327     1F67                     l1839:
 26328     1F67  0008               	return
 26329     1F68                     __end_of_I2C1_DO_RCEN:
 26330                           
 26331                           	psect	text128
 26332     0A09                     __ptext128:	
 26333 ;; *************** function _I2C1_DO_RX *****************
 26334 ;; Defined at:
 26335 ;;		line 378 in file "mcc_generated_files/i2c1_master.c"
 26336 ;; Parameters:    Size  Location     Type
 26337 ;;		None
 26338 ;; Auto vars:     Size  Location     Type
 26339 ;;		None
 26340 ;; Return value:  Size  Location     Type
 26341 ;;                  1    wreg      enum E12565
 26342 ;; Registers used:
 26343 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 26344 ;; Tracked objects:
 26345 ;;		On entry : 0/0
 26346 ;;		On exit  : 0/0
 26347 ;;		Unchanged: 0/0
 26348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26351 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26352 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26353 ;;Total ram usage:        2 bytes
 26354 ;; Hardware stack levels used: 1
 26355 ;; Hardware stack levels required when called: 7
 26356 ;; This function calls:
 26357 ;;		NULL
 26358 ;;		_I2C1_CallbackReturnReset
 26359 ;;		_I2C1_CallbackReturnStop
 26360 ;;		_I2C1_DO_RX_NACK_RESTART
 26361 ;;		_I2C1_DO_RX_NACK_STOP
 26362 ;;		_I2C1_MasterGetRxData
 26363 ;;		_I2C1_MasterSendAck
 26364 ;;		_rd1RegCompleteHandler
 26365 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1239
 26366 ;;		_rd2RegCompleteHandler
 26367 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1250
 26368 ;;		_rdBlkRegCompleteHandler
 26369 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1273
 26370 ;;		_wr1RegCompleteHandler
 26371 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1256
 26372 ;;		_wr2RegCompleteHandler
 26373 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1262
 26374 ;; This function is called by:
 26375 ;;		_I2C1_MasterFsm
 26376 ;; This function uses a non-reentrant model
 26377 ;;
 26378                           
 26379     0A09                     _I2C1_DO_RX:	
 26380                           ;psect for function _I2C1_DO_RX
 26381                           
 26382     0A09                     l12732:	
 26383                           ;incstack = 0
 26384                           ; Regs used in _I2C1_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 26385                           
 26386                           
 26387                           ;mcc_generated_files/i2c1_master.c: 380:     *I2C1_Status.data_ptr++ = I2C1_MasterGetRxD
      +                          ata();
 26388     0A09  0141               	movlb	1	; select bank1
 26389     0A0A  0837               	movf	(low ((_I2C1_Status| 0+23)))^(0+128),w
 26390     0A0B  0086               	movwf	6
 26391     0A0C  0187               	clrf	7
 26392     0A0D  319E  2689  318A   	fcall	_I2C1_MasterGetRxData
 26393     0A10  0081               	movwf	1
 26394     0A11                     l12734:
 26395     0A11  3001               	movlw	1
 26396     0A12  00F9               	movwf	??_I2C1_DO_RX
 26397     0A13  0879               	movf	??_I2C1_DO_RX,w
 26398     0A14  0141               	movlb	1	; select bank1
 26399     0A15  07B7               	addwf	(low ((_I2C1_Status| 0+23)))^(0+128),f
 26400     0A16                     l12736:
 26401                           
 26402                           ;mcc_generated_files/i2c1_master.c: 381:     if(--I2C1_Status.data_length)
 26403     0A16  3001               	movlw	1
 26404     0A17  02B8               	subwf	(_I2C1_Status^(0+128)+24),f
 26405     0A18  3000               	movlw	0
 26406     0A19  3BB9               	subwfb	((_I2C1_Status+1)^(0+128)+24),f
 26407     0A1A  0838               	movf	(_I2C1_Status^(0+128)+24),w
 26408     0A1B  0439               	iorwf	((_I2C1_Status+1)^(0+128)+24),w
 26409     0A1C  1903               	btfsc	3,2
 26410     0A1D  2A1F               	goto	u9661
 26411     0A1E  2A20               	goto	u9660
 26412     0A1F                     u9661:
 26413     0A1F  2A25               	goto	l1827
 26414     0A20                     u9660:
 26415     0A20                     l12738:
 26416                           
 26417                           ;mcc_generated_files/i2c1_master.c: 382:     {;mcc_generated_files/i2c1_master.c: 383:  
      +                                 I2C1_MasterSendAck();
 26418     0A20  319E  26A3  318A   	fcall	_I2C1_MasterSendAck
 26419     0A23                     l12740:
 26420                           
 26421                           ;mcc_generated_files/i2c1_master.c: 384:         return I2C1_RCEN;
 26422     0A23  3005               	movlw	5
 26423     0A24  2A4B               	goto	l1828
 26424     0A25                     l1827:	
 26425                           ;mcc_generated_files/i2c1_master.c: 386:     else
 26426                           
 26427                           
 26428                           ;mcc_generated_files/i2c1_master.c: 387:     {;mcc_generated_files/i2c1_master.c: 388:  
      +                                 I2C1_Status.bufferFree = 1;
 26429     0A25  15BC               	bsf	(_I2C1_Status^(0+128)+28),3
 26430                           
 26431                           ;mcc_generated_files/i2c1_master.c: 389:         switch(I2C1_Status.callbackTable[I2C1_D
      +                          ATA_COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 26432     0A26  2A2F               	goto	l12756
 26433     0A27                     l12746:
 26434                           
 26435                           ;mcc_generated_files/i2c1_master.c: 393:                 return I2C1_DO_RX_NACK_RESTART(
      +                          );
 26436     0A27  319E  26D7  318A   	fcall	_I2C1_DO_RX_NACK_RESTART
 26437     0A2A  2A4B               	goto	l1828
 26438     0A2B                     l12750:
 26439                           
 26440                           ;mcc_generated_files/i2c1_master.c: 397:                 return I2C1_DO_RX_NACK_STOP();
 26441     0A2B  319E  26D2  318A   	fcall	_I2C1_DO_RX_NACK_STOP
 26442     0A2E  2A4B               	goto	l1828
 26443     0A2F                     l12756:
 26444     0A2F  082C               	movf	(low ((_I2C1_Status| 0+12)))^(0+128),w
 26445     0A30  00F8               	movwf	I2C1_CallbackReturnReset@funPtr
 26446     0A31  0821               	movf	(_I2C1_Status+1)^(0+128),w
 26447     0A32  008A               	movwf	10
 26448     0A33  0820               	movf	_I2C1_Status^(0+128),w
 26449     0A34  000A               	callw
 26450     0A35  318A               	pagesel	$
 26451     0A36  00F9               	movwf	??_I2C1_DO_RX
 26452     0A37  01FA               	clrf	??_I2C1_DO_RX+1
 26453                           
 26454                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26455                           ; Switch size 1, requested type "simple"
 26456                           ; Number of cases is 1, Range of values is 0 to 0
 26457                           ; switch strategies available:
 26458                           ; Name         Instructions Cycles
 26459                           ; simple_byte            4     3 (average)
 26460                           ; direct_byte            8     6 (fixed)
 26461                           ; jumptable            260     6 (fixed)
 26462                           ;	Chosen strategy is simple_byte
 26463     0A38  087A               	movf	??_I2C1_DO_RX+1,w
 26464     0A39  3A00               	xorlw	0	; case 0
 26465     0A3A  1903               	skipnz
 26466     0A3B  2A3D               	goto	l16630
 26467     0A3C  2A2B               	goto	l12750
 26468     0A3D                     l16630:
 26469                           
 26470                           ; Switch size 1, requested type "simple"
 26471                           ; Number of cases is 4, Range of values is 1 to 4
 26472                           ; switch strategies available:
 26473                           ; Name         Instructions Cycles
 26474                           ; simple_byte           13     7 (average)
 26475                           ; direct_byte           17     9 (fixed)
 26476                           ; jumptable            263     9 (fixed)
 26477                           ;	Chosen strategy is simple_byte
 26478     0A3D  0879               	movf	??_I2C1_DO_RX,w
 26479     0A3E  3A01               	xorlw	1	; case 1
 26480     0A3F  1903               	skipnz
 26481     0A40  2A2B               	goto	l12750
 26482     0A41  3A03               	xorlw	3	; case 2
 26483     0A42  1903               	skipnz
 26484     0A43  2A27               	goto	l12746
 26485     0A44  3A01               	xorlw	1	; case 3
 26486     0A45  1903               	skipnz
 26487     0A46  2A27               	goto	l12746
 26488     0A47  3A07               	xorlw	7	; case 4
 26489     0A48  1903               	skipnz
 26490     0A49  2A2B               	goto	l12750
 26491     0A4A  2A2B               	goto	l12750
 26492     0A4B                     l1828:
 26493     0A4B  0008               	return
 26494     0A4C                     __end_of_I2C1_DO_RX:
 26495                           
 26496                           	psect	text129
 26497     0CED                     __ptext129:	
 26498 ;; *************** function _I2C1_DO_TX *****************
 26499 ;; Defined at:
 26500 ;;		line 354 in file "mcc_generated_files/i2c1_master.c"
 26501 ;; Parameters:    Size  Location     Type
 26502 ;;		None
 26503 ;; Auto vars:     Size  Location     Type
 26504 ;;		None
 26505 ;; Return value:  Size  Location     Type
 26506 ;;                  1    wreg      enum E12565
 26507 ;; Registers used:
 26508 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 26509 ;; Tracked objects:
 26510 ;;		On entry : 0/0
 26511 ;;		On exit  : 0/0
 26512 ;;		Unchanged: 0/0
 26513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26516 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26517 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26518 ;;Total ram usage:        2 bytes
 26519 ;; Hardware stack levels used: 1
 26520 ;; Hardware stack levels required when called: 7
 26521 ;; This function calls:
 26522 ;;		NULL
 26523 ;;		_I2C1_CallbackReturnReset
 26524 ;;		_I2C1_CallbackReturnStop
 26525 ;;		_I2C1_DO_SEND_RESTART_READ
 26526 ;;		_I2C1_DO_SEND_RESTART_WRITE
 26527 ;;		_I2C1_DO_SEND_STOP
 26528 ;;		_I2C1_MasterIsNack
 26529 ;;		_I2C1_MasterSendTxData
 26530 ;;		_rd1RegCompleteHandler
 26531 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1239
 26532 ;;		_rd2RegCompleteHandler
 26533 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1250
 26534 ;;		_rdBlkRegCompleteHandler
 26535 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1273
 26536 ;;		_wr1RegCompleteHandler
 26537 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1256
 26538 ;;		_wr2RegCompleteHandler
 26539 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1262
 26540 ;; This function is called by:
 26541 ;;		_I2C1_MasterFsm
 26542 ;; This function uses a non-reentrant model
 26543 ;;
 26544                           
 26545     0CED                     _I2C1_DO_TX:	
 26546                           ;psect for function _I2C1_DO_TX
 26547                           
 26548     0CED                     l12698:	
 26549                           ;incstack = 0
 26550                           ; Regs used in _I2C1_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 26551                           
 26552                           
 26553                           ;mcc_generated_files/i2c1_master.c: 356:     if(I2C1_MasterIsNack())
 26554     0CED  319E  26F5  318C   	fcall	_I2C1_MasterIsNack
 26555     0CF0  3A00               	xorlw	0
 26556     0CF1  1903               	skipnz
 26557     0CF2  2CF4               	goto	u9641
 26558     0CF3  2CF5               	goto	u9640
 26559     0CF4                     u9641:
 26560     0CF4  2D23               	goto	l1811
 26561     0CF5                     u9640:
 26562     0CF5  2D02               	goto	l12716
 26563     0CF6                     l12702:
 26564                           
 26565                           ;mcc_generated_files/i2c1_master.c: 361:                 return I2C1_DO_SEND_RESTART_REA
      +                          D();
 26566     0CF6  319E  26B9  318C   	fcall	_I2C1_DO_SEND_RESTART_READ
 26567     0CF9  2D3F               	goto	l1814
 26568     0CFA                     l12706:
 26569                           
 26570                           ;mcc_generated_files/i2c1_master.c: 363:                   return I2C1_DO_SEND_RESTART_W
      +                          RITE();
 26571     0CFA  319E  26BE  318C   	fcall	_I2C1_DO_SEND_RESTART_WRITE
 26572     0CFD  2D3F               	goto	l1814
 26573     0CFE                     l12710:
 26574                           
 26575                           ;mcc_generated_files/i2c1_master.c: 367:                 return I2C1_DO_SEND_STOP();
 26576     0CFE  319E  26C8  318C   	fcall	_I2C1_DO_SEND_STOP
 26577     0D01  2D3F               	goto	l1814
 26578     0D02                     l12716:
 26579     0D02  0141               	movlb	1	; select bank1
 26580     0D03  082F               	movf	(low ((_I2C1_Status| 0+15)))^(0+128),w
 26581     0D04  00F8               	movwf	I2C1_CallbackReturnReset@funPtr
 26582     0D05  3006               	movlw	6
 26583     0D06  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 26584     0D07  0086               	movwf	6
 26585     0D08  0187               	clrf	7
 26586     0D09  3F41               	moviw [1]fsr1
 26587     0D0A  008A               	movwf	10
 26588     0D0B  3F40               	moviw [0]fsr1
 26589     0D0C  000A               	callw
 26590     0D0D  318C               	pagesel	$
 26591     0D0E  00F9               	movwf	??_I2C1_DO_TX
 26592     0D0F  01FA               	clrf	??_I2C1_DO_TX+1
 26593                           
 26594                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26595                           ; Switch size 1, requested type "simple"
 26596                           ; Number of cases is 1, Range of values is 0 to 0
 26597                           ; switch strategies available:
 26598                           ; Name         Instructions Cycles
 26599                           ; simple_byte            4     3 (average)
 26600                           ; direct_byte            8     6 (fixed)
 26601                           ; jumptable            260     6 (fixed)
 26602                           ;	Chosen strategy is simple_byte
 26603     0D10  087A               	movf	??_I2C1_DO_TX+1,w
 26604     0D11  3A00               	xorlw	0	; case 0
 26605     0D12  1903               	skipnz
 26606     0D13  2D15               	goto	l16632
 26607     0D14  2CFE               	goto	l12710
 26608     0D15                     l16632:
 26609                           
 26610                           ; Switch size 1, requested type "simple"
 26611                           ; Number of cases is 4, Range of values is 1 to 4
 26612                           ; switch strategies available:
 26613                           ; Name         Instructions Cycles
 26614                           ; simple_byte           13     7 (average)
 26615                           ; direct_byte           17     9 (fixed)
 26616                           ; jumptable            263     9 (fixed)
 26617                           ;	Chosen strategy is simple_byte
 26618     0D15  0879               	movf	??_I2C1_DO_TX,w
 26619     0D16  3A01               	xorlw	1	; case 1
 26620     0D17  1903               	skipnz
 26621     0D18  2CFE               	goto	l12710
 26622     0D19  3A03               	xorlw	3	; case 2
 26623     0D1A  1903               	skipnz
 26624     0D1B  2CF6               	goto	l12702
 26625     0D1C  3A01               	xorlw	1	; case 3
 26626     0D1D  1903               	skipnz
 26627     0D1E  2CFA               	goto	l12706
 26628     0D1F  3A07               	xorlw	7	; case 4
 26629     0D20  1903               	skipnz
 26630     0D21  2CFE               	goto	l12710
 26631     0D22  2CFE               	goto	l12710
 26632     0D23                     l1811:	
 26633                           ;mcc_generated_files/i2c1_master.c: 370:     else
 26634                           
 26635                           
 26636                           ;mcc_generated_files/i2c1_master.c: 371:     {;mcc_generated_files/i2c1_master.c: 372:  
      +                                 I2C1_Status.addressNackCheck = 0;
 26637     0D23  0141               	movlb	1	; select bank1
 26638     0D24  103C               	bcf	(_I2C1_Status^(0+128)+28),0
 26639     0D25                     l12718:
 26640                           
 26641                           ;mcc_generated_files/i2c1_master.c: 373:         I2C1_MasterSendTxData(*I2C1_Status.data
      +                          _ptr++);
 26642     0D25  3017               	movlw	23
 26643     0D26  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 26644     0D27  0086               	movwf	6
 26645     0D28  0187               	clrf	7
 26646     0D29  3F40               	moviw [0]fsr1
 26647     0D2A  0084               	movwf	4
 26648     0D2B  0185               	clrf	5
 26649     0D2C  0A81               	incf	1,f
 26650     0D2D  0800               	movf	0,w
 26651     0D2E  319E  26AF  318C   	fcall	_I2C1_MasterSendTxData
 26652     0D31                     l12720:
 26653                           
 26654                           ;mcc_generated_files/i2c1_master.c: 374:         return (--I2C1_Status.data_length)?I2C1
      +                          _TX:I2C1_TX_EMPTY;
 26655     0D31  3001               	movlw	1
 26656     0D32  0141               	movlb	1	; select bank1
 26657     0D33  02B8               	subwf	(_I2C1_Status^(0+128)+24),f
 26658     0D34  3000               	movlw	0
 26659     0D35  3BB9               	subwfb	((_I2C1_Status+1)^(0+128)+24),f
 26660     0D36  0838               	movf	(_I2C1_Status^(0+128)+24),w
 26661     0D37  0439               	iorwf	((_I2C1_Status+1)^(0+128)+24),w
 26662     0D38  1D03               	btfss	3,2
 26663     0D39  2D3B               	goto	u9651
 26664     0D3A  2D3C               	goto	u9650
 26665     0D3B                     u9651:
 26666     0D3B  2D3E               	goto	l12724
 26667     0D3C                     u9650:
 26668     0D3C                     l12722:
 26669     0D3C  3006               	movlw	6
 26670     0D3D  2D3F               	goto	l1814
 26671     0D3E                     l12724:
 26672     0D3E  3003               	movlw	3
 26673     0D3F                     l1814:
 26674     0D3F  0008               	return
 26675     0D40                     __end_of_I2C1_DO_TX:
 26676                           
 26677                           	psect	text130
 26678     1F68                     __ptext130:	
 26679 ;; *************** function _I2C1_DO_SEND_ADR_WRITE *****************
 26680 ;; Defined at:
 26681 ;;		line 347 in file "mcc_generated_files/i2c1_master.c"
 26682 ;; Parameters:    Size  Location     Type
 26683 ;;		None
 26684 ;; Auto vars:     Size  Location     Type
 26685 ;;		None
 26686 ;; Return value:  Size  Location     Type
 26687 ;;                  1    wreg      enum E12565
 26688 ;; Registers used:
 26689 ;;		wreg, status,2, status,0, pclath, cstack
 26690 ;; Tracked objects:
 26691 ;;		On entry : 0/0
 26692 ;;		On exit  : 0/0
 26693 ;;		Unchanged: 0/0
 26694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26699 ;;Total ram usage:        0 bytes
 26700 ;; Hardware stack levels used: 1
 26701 ;; Hardware stack levels required when called: 5
 26702 ;; This function calls:
 26703 ;;		_I2C1_MasterSendTxData
 26704 ;; This function is called by:
 26705 ;;		_I2C1_MasterFsm
 26706 ;; This function uses a non-reentrant model
 26707 ;;
 26708                           
 26709     1F68                     _I2C1_DO_SEND_ADR_WRITE:	
 26710                           ;psect for function _I2C1_DO_SEND_ADR_WRITE
 26711                           
 26712     1F68                     l12690:	
 26713                           ;incstack = 0
 26714                           ; Regs used in _I2C1_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 26715                           
 26716                           
 26717                           ;mcc_generated_files/i2c1_master.c: 349:     I2C1_Status.addressNackCheck = 1;
 26718     1F68  0141               	movlb	1	; select bank1
 26719     1F69  143C               	bsf	(_I2C1_Status^(0+128)+28),0
 26720     1F6A                     l12692:
 26721                           
 26722                           ;mcc_generated_files/i2c1_master.c: 350:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1));
 26723     1F6A  3536               	lslf	(_I2C1_Status^(0+128)+22),w
 26724     1F6B  319E  26AF  319F   	fcall	_I2C1_MasterSendTxData
 26725     1F6E                     l12694:
 26726                           
 26727                           ;mcc_generated_files/i2c1_master.c: 351:     return I2C1_TX;
 26728     1F6E  3003               	movlw	3
 26729     1F6F                     l1808:
 26730     1F6F  0008               	return
 26731     1F70                     __end_of_I2C1_DO_SEND_ADR_WRITE:
 26732                           
 26733                           	psect	text131
 26734     1F89                     __ptext131:	
 26735 ;; *************** function _I2C1_DO_SEND_ADR_READ *****************
 26736 ;; Defined at:
 26737 ;;		line 340 in file "mcc_generated_files/i2c1_master.c"
 26738 ;; Parameters:    Size  Location     Type
 26739 ;;		None
 26740 ;; Auto vars:     Size  Location     Type
 26741 ;;		None
 26742 ;; Return value:  Size  Location     Type
 26743 ;;                  1    wreg      enum E12565
 26744 ;; Registers used:
 26745 ;;		wreg, status,2, status,0, pclath, cstack
 26746 ;; Tracked objects:
 26747 ;;		On entry : 0/0
 26748 ;;		On exit  : 0/0
 26749 ;;		Unchanged: 0/0
 26750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26755 ;;Total ram usage:        0 bytes
 26756 ;; Hardware stack levels used: 1
 26757 ;; Hardware stack levels required when called: 5
 26758 ;; This function calls:
 26759 ;;		_I2C1_MasterSendTxData
 26760 ;; This function is called by:
 26761 ;;		_I2C1_MasterFsm
 26762 ;; This function uses a non-reentrant model
 26763 ;;
 26764                           
 26765     1F89                     _I2C1_DO_SEND_ADR_READ:	
 26766                           ;psect for function _I2C1_DO_SEND_ADR_READ
 26767                           
 26768     1F89                     l12682:	
 26769                           ;incstack = 0
 26770                           ; Regs used in _I2C1_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 26771                           
 26772                           
 26773                           ;mcc_generated_files/i2c1_master.c: 342:     I2C1_Status.addressNackCheck = 1;
 26774     1F89  0141               	movlb	1	; select bank1
 26775     1F8A  143C               	bsf	(_I2C1_Status^(0+128)+28),0
 26776     1F8B                     l12684:
 26777                           
 26778                           ;mcc_generated_files/i2c1_master.c: 343:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1 | 1));
 26779     1F8B  1403               	setc
 26780     1F8C  0D36               	rlf	(_I2C1_Status^(0+128)+22),w
 26781     1F8D  319E  26AF  319F   	fcall	_I2C1_MasterSendTxData
 26782     1F90                     l12686:
 26783                           
 26784                           ;mcc_generated_files/i2c1_master.c: 344:     return I2C1_RCEN;
 26785     1F90  3005               	movlw	5
 26786     1F91                     l1805:
 26787     1F91  0008               	return
 26788     1F92                     __end_of_I2C1_DO_SEND_ADR_READ:
 26789                           
 26790                           	psect	text132
 26791     1EB4                     __ptext132:	
 26792 ;; *************** function _I2C1_DO_IDLE *****************
 26793 ;; Defined at:
 26794 ;;		line 333 in file "mcc_generated_files/i2c1_master.c"
 26795 ;; Parameters:    Size  Location     Type
 26796 ;;		None
 26797 ;; Auto vars:     Size  Location     Type
 26798 ;;		None
 26799 ;; Return value:  Size  Location     Type
 26800 ;;                  1    wreg      enum E12565
 26801 ;; Registers used:
 26802 ;;		wreg, status,2
 26803 ;; Tracked objects:
 26804 ;;		On entry : 0/0
 26805 ;;		On exit  : 0/0
 26806 ;;		Unchanged: 0/0
 26807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26812 ;;Total ram usage:        0 bytes
 26813 ;; Hardware stack levels used: 1
 26814 ;; Hardware stack levels required when called: 4
 26815 ;; This function calls:
 26816 ;;		Nothing
 26817 ;; This function is called by:
 26818 ;;		_I2C1_MasterFsm
 26819 ;; This function uses a non-reentrant model
 26820 ;;
 26821                           
 26822     1EB4                     _I2C1_DO_IDLE:	
 26823                           ;psect for function _I2C1_DO_IDLE
 26824                           
 26825     1EB4                     l12674:	
 26826                           ;incstack = 0
 26827                           ; Regs used in _I2C1_DO_IDLE: [wreg+status,2]
 26828                           
 26829                           
 26830                           ;mcc_generated_files/i2c1_master.c: 335:     I2C1_Status.busy = 0;
 26831     1EB4  0141               	movlb	1	; select bank1
 26832     1EB5  10BC               	bcf	(_I2C1_Status^(0+128)+28),1
 26833     1EB6                     l12676:
 26834                           
 26835                           ;mcc_generated_files/i2c1_master.c: 336:     I2C1_Status.error = I2C1_NOERR;
 26836     1EB6  01BB               	clrf	(_I2C1_Status^(0+128)+27)
 26837     1EB7                     l12678:
 26838                           
 26839                           ;mcc_generated_files/i2c1_master.c: 337:     return I2C1_RESET;
 26840     1EB7  300E               	movlw	14
 26841     1EB8                     l1802:
 26842     1EB8  0008               	return
 26843     1EB9                     __end_of_I2C1_DO_IDLE:
 26844                           
 26845                           	psect	text133
 26846     15EE                     __ptext133:	
 26847 ;; *************** function _I2C1_DO_TX_EMPTY *****************
 26848 ;; Defined at:
 26849 ;;		line 409 in file "mcc_generated_files/i2c1_master.c"
 26850 ;; Parameters:    Size  Location     Type
 26851 ;;		None
 26852 ;; Auto vars:     Size  Location     Type
 26853 ;;		None
 26854 ;; Return value:  Size  Location     Type
 26855 ;;                  1    wreg      enum E12565
 26856 ;; Registers used:
 26857 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 26858 ;; Tracked objects:
 26859 ;;		On entry : 0/0
 26860 ;;		On exit  : 0/0
 26861 ;;		Unchanged: 0/0
 26862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26865 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26866 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26867 ;;Total ram usage:        2 bytes
 26868 ;; Hardware stack levels used: 1
 26869 ;; Hardware stack levels required when called: 7
 26870 ;; This function calls:
 26871 ;;		NULL
 26872 ;;		_I2C1_CallbackReturnReset
 26873 ;;		_I2C1_CallbackReturnStop
 26874 ;;		_I2C1_DO_SEND_RESTART
 26875 ;;		_I2C1_DO_SEND_STOP
 26876 ;;		_I2C1_MasterSetIrq
 26877 ;;		_rd1RegCompleteHandler
 26878 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1239
 26879 ;;		_rd2RegCompleteHandler
 26880 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1250
 26881 ;;		_rdBlkRegCompleteHandler
 26882 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1273
 26883 ;;		_wr1RegCompleteHandler
 26884 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1256
 26885 ;;		_wr2RegCompleteHandler
 26886 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1262
 26887 ;; This function is called by:
 26888 ;;		_I2C1_MasterFsm
 26889 ;; This function uses a non-reentrant model
 26890 ;;
 26891                           
 26892     15EE                     _I2C1_DO_TX_EMPTY:	
 26893                           ;psect for function _I2C1_DO_TX_EMPTY
 26894                           
 26895     15EE                     l12772:	
 26896                           ;incstack = 0
 26897                           ; Regs used in _I2C1_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 26898                           
 26899                           
 26900                           ;mcc_generated_files/i2c1_master.c: 411:     I2C1_Status.bufferFree = 1;
 26901     15EE  0141               	movlb	1	; select bank1
 26902     15EF  15BC               	bsf	(_I2C1_Status^(0+128)+28),3
 26903                           
 26904                           ;mcc_generated_files/i2c1_master.c: 412:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 26905     15F0  2DFE               	goto	l12790
 26906     15F1                     l12774:
 26907                           
 26908                           ;mcc_generated_files/i2c1_master.c: 416:             return I2C1_DO_SEND_RESTART();
 26909     15F1  319E  26C3  3195   	fcall	_I2C1_DO_SEND_RESTART
 26910     15F4  2E1A               	goto	l1845
 26911     15F5                     l12778:
 26912                           
 26913                           ;mcc_generated_files/i2c1_master.c: 418:             I2C1_MasterSetIrq();
 26914     15F5  319E  268C  3195   	fcall	_I2C1_MasterSetIrq
 26915     15F8                     l12780:
 26916                           
 26917                           ;mcc_generated_files/i2c1_master.c: 419:             return I2C1_TX;
 26918     15F8  3003               	movlw	3
 26919     15F9  2E1A               	goto	l1845
 26920     15FA                     l12784:
 26921                           
 26922                           ;mcc_generated_files/i2c1_master.c: 422:             return I2C1_DO_SEND_STOP();
 26923     15FA  319E  26C8  3195   	fcall	_I2C1_DO_SEND_STOP
 26924     15FD  2E1A               	goto	l1845
 26925     15FE                     l12790:
 26926     15FE  082C               	movf	(low ((_I2C1_Status| 0+12)))^(0+128),w
 26927     15FF  00F8               	movwf	I2C1_CallbackReturnReset@funPtr
 26928     1600  0821               	movf	(_I2C1_Status+1)^(0+128),w
 26929     1601  008A               	movwf	10
 26930     1602  0820               	movf	_I2C1_Status^(0+128),w
 26931     1603  000A               	callw
 26932     1604  3195               	pagesel	$
 26933     1605  00F9               	movwf	??_I2C1_DO_TX_EMPTY
 26934     1606  01FA               	clrf	??_I2C1_DO_TX_EMPTY+1
 26935                           
 26936                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26937                           ; Switch size 1, requested type "simple"
 26938                           ; Number of cases is 1, Range of values is 0 to 0
 26939                           ; switch strategies available:
 26940                           ; Name         Instructions Cycles
 26941                           ; simple_byte            4     3 (average)
 26942                           ; direct_byte            8     6 (fixed)
 26943                           ; jumptable            260     6 (fixed)
 26944                           ;	Chosen strategy is simple_byte
 26945     1607  087A               	movf	??_I2C1_DO_TX_EMPTY+1,w
 26946     1608  3A00               	xorlw	0	; case 0
 26947     1609  1903               	skipnz
 26948     160A  2E0C               	goto	l16634
 26949     160B  2DFA               	goto	l12784
 26950     160C                     l16634:
 26951                           
 26952                           ; Switch size 1, requested type "simple"
 26953                           ; Number of cases is 4, Range of values is 1 to 4
 26954                           ; switch strategies available:
 26955                           ; Name         Instructions Cycles
 26956                           ; simple_byte           13     7 (average)
 26957                           ; direct_byte           17     9 (fixed)
 26958                           ; jumptable            263     9 (fixed)
 26959                           ;	Chosen strategy is simple_byte
 26960     160C  0879               	movf	??_I2C1_DO_TX_EMPTY,w
 26961     160D  3A01               	xorlw	1	; case 1
 26962     160E  1903               	skipnz
 26963     160F  2DFA               	goto	l12784
 26964     1610  3A03               	xorlw	3	; case 2
 26965     1611  1903               	skipnz
 26966     1612  2DF1               	goto	l12774
 26967     1613  3A01               	xorlw	1	; case 3
 26968     1614  1903               	skipnz
 26969     1615  2DF1               	goto	l12774
 26970     1616  3A07               	xorlw	7	; case 4
 26971     1617  1903               	skipnz
 26972     1618  2DF5               	goto	l12778
 26973     1619  2DFA               	goto	l12784
 26974     161A                     l1845:
 26975     161A  0008               	return
 26976     161B                     __end_of_I2C1_DO_TX_EMPTY:
 26977                           
 26978                           	psect	text134
 26979     1E8C                     __ptext134:	
 26980 ;; *************** function _I2C1_MasterSetIrq *****************
 26981 ;; Defined at:
 26982 ;;		line 645 in file "mcc_generated_files/i2c1_master.c"
 26983 ;; Parameters:    Size  Location     Type
 26984 ;;		None
 26985 ;; Auto vars:     Size  Location     Type
 26986 ;;		None
 26987 ;; Return value:  Size  Location     Type
 26988 ;;                  1    wreg      void 
 26989 ;; Registers used:
 26990 ;;		None
 26991 ;; Tracked objects:
 26992 ;;		On entry : 0/0
 26993 ;;		On exit  : 0/0
 26994 ;;		Unchanged: 0/0
 26995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27000 ;;Total ram usage:        0 bytes
 27001 ;; Hardware stack levels used: 1
 27002 ;; Hardware stack levels required when called: 4
 27003 ;; This function calls:
 27004 ;;		Nothing
 27005 ;; This function is called by:
 27006 ;;		_I2C1_DO_TX_EMPTY
 27007 ;; This function uses a non-reentrant model
 27008 ;;
 27009                           
 27010     1E8C                     _I2C1_MasterSetIrq:	
 27011                           ;psect for function _I2C1_MasterSetIrq
 27012                           
 27013     1E8C                     l12662:	
 27014                           ;incstack = 0
 27015                           ; Regs used in _I2C1_MasterSetIrq: []
 27016                           
 27017                           
 27018                           ;mcc_generated_files/i2c1_master.c: 647:     PIR3bits.SSP1IF = 1;
 27019     1E8C  014E               	movlb	14	; select bank14
 27020     1E8D  140F               	bsf	15,0	;volatile
 27021     1E8E                     l1965:
 27022     1E8E  0008               	return
 27023     1E8F                     __end_of_I2C1_MasterSetIrq:
 27024                           
 27025                           	psect	text135
 27026     1EF5                     __ptext135:	
 27027 ;; *************** function _I2C1_MasterIsNack *****************
 27028 ;; Defined at:
 27029 ;;		line 598 in file "mcc_generated_files/i2c1_master.c"
 27030 ;; Parameters:    Size  Location     Type
 27031 ;;		None
 27032 ;; Auto vars:     Size  Location     Type
 27033 ;;		None
 27034 ;; Return value:  Size  Location     Type
 27035 ;;                  1    wreg      _Bool 
 27036 ;; Registers used:
 27037 ;;		wreg, status,2, status,0
 27038 ;; Tracked objects:
 27039 ;;		On entry : 0/0
 27040 ;;		On exit  : 0/0
 27041 ;;		Unchanged: 0/0
 27042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27047 ;;Total ram usage:        0 bytes
 27048 ;; Hardware stack levels used: 1
 27049 ;; Hardware stack levels required when called: 4
 27050 ;; This function calls:
 27051 ;;		Nothing
 27052 ;; This function is called by:
 27053 ;;		_I2C1_MasterFsm
 27054 ;;		_I2C1_DO_TX
 27055 ;; This function uses a non-reentrant model
 27056 ;;
 27057                           
 27058     1EF5                     _I2C1_MasterIsNack:	
 27059                           ;psect for function _I2C1_MasterIsNack
 27060                           
 27061     1EF5                     l12612:	
 27062                           ;incstack = 0
 27063                           ; Regs used in _I2C1_MasterIsNack: [wreg+status,2+status,0]
 27064                           
 27065                           
 27066                           ;mcc_generated_files/i2c1_master.c: 600:     return SSP1CON2bits.ACKSTAT;
 27067     1EF5  0143               	movlb	3	; select bank3
 27068     1EF6  0E11               	swapf	17,w	;volatile
 27069     1EF7  0C89               	rrf	9,f
 27070     1EF8  0C89               	rrf	9,f
 27071     1EF9  3901               	andlw	1
 27072     1EFA                     l1938:
 27073     1EFA  0008               	return
 27074     1EFB                     __end_of_I2C1_MasterIsNack:
 27075                           
 27076                           	psect	text136
 27077     1EAF                     __ptext136:	
 27078 ;; *************** function _I2C1_MasterSendTxData *****************
 27079 ;; Defined at:
 27080 ;;		line 568 in file "mcc_generated_files/i2c1_master.c"
 27081 ;; Parameters:    Size  Location     Type
 27082 ;;  data            1    wreg     unsigned char 
 27083 ;; Auto vars:     Size  Location     Type
 27084 ;;  data            1    1[COMMON] unsigned char 
 27085 ;; Return value:  Size  Location     Type
 27086 ;;                  1    wreg      void 
 27087 ;; Registers used:
 27088 ;;		wreg
 27089 ;; Tracked objects:
 27090 ;;		On entry : 0/0
 27091 ;;		On exit  : 0/0
 27092 ;;		Unchanged: 0/0
 27093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27095 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27097 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27098 ;;Total ram usage:        1 bytes
 27099 ;; Hardware stack levels used: 1
 27100 ;; Hardware stack levels required when called: 4
 27101 ;; This function calls:
 27102 ;;		Nothing
 27103 ;; This function is called by:
 27104 ;;		_I2C1_DO_SEND_ADR_READ
 27105 ;;		_I2C1_DO_SEND_ADR_WRITE
 27106 ;;		_I2C1_DO_TX
 27107 ;; This function uses a non-reentrant model
 27108 ;;
 27109                           
 27110     1EAF                     _I2C1_MasterSendTxData:	
 27111                           ;psect for function _I2C1_MasterSendTxData
 27112                           
 27113                           
 27114                           ;incstack = 0
 27115                           ; Regs used in _I2C1_MasterSendTxData: [wreg]
 27116                           ;I2C1_MasterSendTxData@data stored from wreg
 27117     1EAF  00F1               	movwf	I2C1_MasterSendTxData@data
 27118     1EB0                     l12616:
 27119                           
 27120                           ;mcc_generated_files/i2c1_master.c: 568: static __attribute__((inline)) void I2C1_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c1_master.c: 569: {;mcc_generated_files/i
      +                          2c1_master.c: 570:     SSP1BUF = data;
 27121     1EB0  0871               	movf	I2C1_MasterSendTxData@data,w
 27122     1EB1  0143               	movlb	3	; select bank3
 27123     1EB2  008C               	movwf	12	;volatile
 27124     1EB3                     l1920:
 27125     1EB3  0008               	return
 27126     1EB4                     __end_of_I2C1_MasterSendTxData:
 27127                           
 27128                           	psect	text137
 27129     1EA3                     __ptext137:	
 27130 ;; *************** function _I2C1_MasterSendAck *****************
 27131 ;; Defined at:
 27132 ;;		line 603 in file "mcc_generated_files/i2c1_master.c"
 27133 ;; Parameters:    Size  Location     Type
 27134 ;;		None
 27135 ;; Auto vars:     Size  Location     Type
 27136 ;;		None
 27137 ;; Return value:  Size  Location     Type
 27138 ;;                  1    wreg      void 
 27139 ;; Registers used:
 27140 ;;		None
 27141 ;; Tracked objects:
 27142 ;;		On entry : 0/0
 27143 ;;		On exit  : 0/0
 27144 ;;		Unchanged: 0/0
 27145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27150 ;;Total ram usage:        0 bytes
 27151 ;; Hardware stack levels used: 1
 27152 ;; Hardware stack levels required when called: 4
 27153 ;; This function calls:
 27154 ;;		Nothing
 27155 ;; This function is called by:
 27156 ;;		_I2C1_DO_RX
 27157 ;;		_I2C1_DO_RX_ACK
 27158 ;; This function uses a non-reentrant model
 27159 ;;
 27160                           
 27161     1EA3                     _I2C1_MasterSendAck:	
 27162                           ;psect for function _I2C1_MasterSendAck
 27163                           
 27164     1EA3                     l12640:	
 27165                           ;incstack = 0
 27166                           ; Regs used in _I2C1_MasterSendAck: []
 27167                           
 27168                           
 27169                           ;mcc_generated_files/i2c1_master.c: 605:     SSP1CON2bits.ACKDT = 0;
 27170     1EA3  0143               	movlb	3	; select bank3
 27171     1EA4  1291               	bcf	17,5	;volatile
 27172                           
 27173                           ;mcc_generated_files/i2c1_master.c: 606:     SSP1CON2bits.ACKEN = 1;
 27174     1EA5  1611               	bsf	17,4	;volatile
 27175     1EA6                     l1941:
 27176     1EA6  0008               	return
 27177     1EA7                     __end_of_I2C1_MasterSendAck:
 27178                           
 27179                           	psect	text138
 27180     1E89                     __ptext138:	
 27181 ;; *************** function _I2C1_MasterGetRxData *****************
 27182 ;; Defined at:
 27183 ;;		line 563 in file "mcc_generated_files/i2c1_master.c"
 27184 ;; Parameters:    Size  Location     Type
 27185 ;;		None
 27186 ;; Auto vars:     Size  Location     Type
 27187 ;;		None
 27188 ;; Return value:  Size  Location     Type
 27189 ;;                  1    wreg      unsigned char 
 27190 ;; Registers used:
 27191 ;;		wreg
 27192 ;; Tracked objects:
 27193 ;;		On entry : 0/0
 27194 ;;		On exit  : 0/0
 27195 ;;		Unchanged: 0/0
 27196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27201 ;;Total ram usage:        0 bytes
 27202 ;; Hardware stack levels used: 1
 27203 ;; Hardware stack levels required when called: 4
 27204 ;; This function calls:
 27205 ;;		Nothing
 27206 ;; This function is called by:
 27207 ;;		_I2C1_DO_RX
 27208 ;; This function uses a non-reentrant model
 27209 ;;
 27210                           
 27211     1E89                     _I2C1_MasterGetRxData:	
 27212                           ;psect for function _I2C1_MasterGetRxData
 27213                           
 27214     1E89                     l12636:	
 27215                           ;incstack = 0
 27216                           ; Regs used in _I2C1_MasterGetRxData: [wreg]
 27217                           
 27218                           
 27219                           ;mcc_generated_files/i2c1_master.c: 565:     return SSP1BUF;
 27220     1E89  0143               	movlb	3	; select bank3
 27221     1E8A  080C               	movf	12,w	;volatile
 27222     1E8B                     l1917:
 27223     1E8B  0008               	return
 27224     1E8C                     __end_of_I2C1_MasterGetRxData:
 27225                           
 27226                           	psect	text139
 27227     1E9F                     __ptext139:	
 27228 ;; *************** function _I2C1_MasterSendNack *****************
 27229 ;; Defined at:
 27230 ;;		line 609 in file "mcc_generated_files/i2c1_master.c"
 27231 ;; Parameters:    Size  Location     Type
 27232 ;;		None
 27233 ;; Auto vars:     Size  Location     Type
 27234 ;;		None
 27235 ;; Return value:  Size  Location     Type
 27236 ;;                  1    wreg      void 
 27237 ;; Registers used:
 27238 ;;		None
 27239 ;; Tracked objects:
 27240 ;;		On entry : 0/0
 27241 ;;		On exit  : 0/0
 27242 ;;		Unchanged: 0/0
 27243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27248 ;;Total ram usage:        0 bytes
 27249 ;; Hardware stack levels used: 1
 27250 ;; Hardware stack levels required when called: 4
 27251 ;; This function calls:
 27252 ;;		Nothing
 27253 ;; This function is called by:
 27254 ;;		_I2C1_DO_RX_NACK_STOP
 27255 ;;		_I2C1_DO_RX_NACK_RESTART
 27256 ;; This function uses a non-reentrant model
 27257 ;;
 27258                           
 27259     1E9F                     _I2C1_MasterSendNack:	
 27260                           ;psect for function _I2C1_MasterSendNack
 27261                           
 27262     1E9F                     l12534:	
 27263                           ;incstack = 0
 27264                           ; Regs used in _I2C1_MasterSendNack: []
 27265                           
 27266                           
 27267                           ;mcc_generated_files/i2c1_master.c: 611:     SSP1CON2bits.ACKDT = 1;
 27268     1E9F  0143               	movlb	3	; select bank3
 27269     1EA0  1691               	bsf	17,5	;volatile
 27270                           
 27271                           ;mcc_generated_files/i2c1_master.c: 612:     SSP1CON2bits.ACKEN = 1;
 27272     1EA1  1611               	bsf	17,4	;volatile
 27273     1EA2                     l1944:
 27274     1EA2  0008               	return
 27275     1EA3                     __end_of_I2C1_MasterSendNack:
 27276                           
 27277                           	psect	text140
 27278     1E86                     __ptext140:	
 27279 ;; *************** function _I2C1_MasterStartRx *****************
 27280 ;; Defined at:
 27281 ;;		line 583 in file "mcc_generated_files/i2c1_master.c"
 27282 ;; Parameters:    Size  Location     Type
 27283 ;;		None
 27284 ;; Auto vars:     Size  Location     Type
 27285 ;;		None
 27286 ;; Return value:  Size  Location     Type
 27287 ;;                  1    wreg      void 
 27288 ;; Registers used:
 27289 ;;		None
 27290 ;; Tracked objects:
 27291 ;;		On entry : 0/0
 27292 ;;		On exit  : 0/0
 27293 ;;		Unchanged: 0/0
 27294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27299 ;;Total ram usage:        0 bytes
 27300 ;; Hardware stack levels used: 1
 27301 ;; Hardware stack levels required when called: 4
 27302 ;; This function calls:
 27303 ;;		Nothing
 27304 ;; This function is called by:
 27305 ;;		_I2C1_DO_RCEN
 27306 ;; This function uses a non-reentrant model
 27307 ;;
 27308                           
 27309     1E86                     _I2C1_MasterStartRx:	
 27310                           ;psect for function _I2C1_MasterStartRx
 27311                           
 27312     1E86                     l12654:	
 27313                           ;incstack = 0
 27314                           ; Regs used in _I2C1_MasterStartRx: []
 27315                           
 27316                           
 27317                           ;mcc_generated_files/i2c1_master.c: 585:     SSP1CON2bits.RCEN = 1;
 27318     1E86  0143               	movlb	3	; select bank3
 27319     1E87  1591               	bsf	17,3	;volatile
 27320     1E88                     l1929:
 27321     1E88  0008               	return
 27322     1E89                     __end_of_I2C1_MasterStartRx:
 27323                           
 27324                           	psect	text141
 27325     1E72                     __ptext141:	
 27326 ;; *************** function _I2C1_CallbackReturnReset *****************
 27327 ;; Defined at:
 27328 ;;		line 525 in file "mcc_generated_files/i2c1_master.c"
 27329 ;; Parameters:    Size  Location     Type
 27330 ;;  funPtr          1    8[COMMON] PTR void 
 27331 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27332 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27333 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27334 ;; Auto vars:     Size  Location     Type
 27335 ;;		None
 27336 ;; Return value:  Size  Location     Type
 27337 ;;                  1    wreg      enum E363
 27338 ;; Registers used:
 27339 ;;		wreg
 27340 ;; Tracked objects:
 27341 ;;		On entry : 0/0
 27342 ;;		On exit  : 0/0
 27343 ;;		Unchanged: 0/0
 27344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27345 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27348 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27349 ;;Total ram usage:        1 bytes
 27350 ;; Hardware stack levels used: 1
 27351 ;; Hardware stack levels required when called: 4
 27352 ;; This function calls:
 27353 ;;		Nothing
 27354 ;; This function is called by:
 27355 ;;		_I2C1_Open
 27356 ;;		_I2C1_DO_TX
 27357 ;;		_I2C1_DO_RX
 27358 ;;		_I2C1_DO_TX_EMPTY
 27359 ;;		_I2C1_DO_ADDRESS_NACK
 27360 ;;		_I2C1_DO_RX_EMPTY
 27361 ;; This function uses a non-reentrant model
 27362 ;;
 27363                           
 27364     1E72                     _I2C1_CallbackReturnReset:	
 27365                           ;psect for function _I2C1_CallbackReturnReset
 27366                           
 27367     1E72                     l12668:	
 27368                           ;incstack = 0
 27369                           ; Regs used in _I2C1_CallbackReturnReset: [wreg]
 27370                           
 27371                           
 27372                           ;mcc_generated_files/i2c1_master.c: 525: i2c1_operations_t I2C1_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c1_master.c: 526: {;mcc_generated_files/i2c1_master.c: 5
      +                          27:     return I2C1_RESET_LINK;
 27373     1E72  3005               	movlw	5
 27374     1E73                     l1901:
 27375     1E73  0008               	return
 27376     1E74                     __end_of_I2C1_CallbackReturnReset:
 27377                           
 27378                           	psect	text142
 27379     1E70                     __ptext142:	
 27380 ;; *************** function _I2C1_CallbackReturnStop *****************
 27381 ;; Defined at:
 27382 ;;		line 520 in file "mcc_generated_files/i2c1_master.c"
 27383 ;; Parameters:    Size  Location     Type
 27384 ;;  funPtr          1    8[COMMON] PTR void 
 27385 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27386 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27387 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27388 ;; Auto vars:     Size  Location     Type
 27389 ;;		None
 27390 ;; Return value:  Size  Location     Type
 27391 ;;                  1    wreg      enum E363
 27392 ;; Registers used:
 27393 ;;		wreg
 27394 ;; Tracked objects:
 27395 ;;		On entry : 0/0
 27396 ;;		On exit  : 0/0
 27397 ;;		Unchanged: 0/0
 27398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27399 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27402 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27403 ;;Total ram usage:        1 bytes
 27404 ;; Hardware stack levels used: 1
 27405 ;; Hardware stack levels required when called: 4
 27406 ;; This function calls:
 27407 ;;		Nothing
 27408 ;; This function is called by:
 27409 ;;		_I2C1_Open
 27410 ;;		_I2C1_SetCallback
 27411 ;;		_I2C1_DO_TX
 27412 ;;		_I2C1_DO_RX
 27413 ;;		_I2C1_DO_TX_EMPTY
 27414 ;;		_I2C1_DO_ADDRESS_NACK
 27415 ;;		_I2C1_DO_RX_EMPTY
 27416 ;; This function uses a non-reentrant model
 27417 ;;
 27418                           
 27419     1E70                     _I2C1_CallbackReturnStop:	
 27420                           ;psect for function _I2C1_CallbackReturnStop
 27421                           
 27422     1E70                     l12664:	
 27423                           ;incstack = 0
 27424                           ; Regs used in _I2C1_CallbackReturnStop: [wreg]
 27425                           
 27426                           
 27427                           ;mcc_generated_files/i2c1_master.c: 520: i2c1_operations_t I2C1_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c1_master.c: 521: {;mcc_generated_files/i2c1_master.c: 52
      +                          2:     return I2C1_STOP;
 27428     1E70  3001               	movlw	1
 27429     1E71                     l1898:
 27430     1E71  0008               	return
 27431     1E72                     __end_of_I2C1_CallbackReturnStop:
 27432                           
 27433                           	psect	text143
 27434     127D                     __ptext143:	
 27435 ;; *************** function _rdBlkRegCompleteHandler@i2c1_master_example$F1273 *****************
 27436 ;; Defined at:
 27437 ;;		line 170 in file "mcc_generated_files/examples/i2c1_master_example.c"
 27438 ;; Parameters:    Size  Location     Type
 27439 ;;  ptr             1    8[COMMON] PTR void 
 27440 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27441 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27442 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27443 ;; Auto vars:     Size  Location     Type
 27444 ;;		None
 27445 ;; Return value:  Size  Location     Type
 27446 ;;                  1    wreg      enum E363
 27447 ;; Registers used:
 27448 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27449 ;; Tracked objects:
 27450 ;;		On entry : 0/0
 27451 ;;		On exit  : 0/0
 27452 ;;		Unchanged: 0/0
 27453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27454 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27457 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27458 ;;Total ram usage:        1 bytes
 27459 ;; Hardware stack levels used: 1
 27460 ;; Hardware stack levels required when called: 6
 27461 ;; This function calls:
 27462 ;;		_I2C1_SetBuffer
 27463 ;;		_I2C1_SetDataCompleteCallback
 27464 ;; This function is called by:
 27465 ;;		_I2C1_ReadDataBlock
 27466 ;;		_I2C1_DO_TX
 27467 ;;		_I2C1_DO_RX
 27468 ;;		_I2C1_DO_TX_EMPTY
 27469 ;;		_I2C1_DO_ADDRESS_NACK
 27470 ;;		_I2C1_DO_RX_EMPTY
 27471 ;; This function uses a non-reentrant model
 27472 ;;
 27473                           
 27474     127D                     _rdBlkRegCompleteHandler@i2c1_master_example$F1273:	
 27475                           ;psect for function _rdBlkRegCompleteHandler@i2c1_master_example$F1273
 27476                           
 27477     127D                     l12606:	
 27478                           ;incstack = 0
 27479                           ; Regs used in _rdBlkRegCompleteHandler@i2c1_master_example$F1273: [wreg+fsr1l+fsr1h+sta
      +                          tus,2+status,0+pclath+cstack]
 27480                           
 27481                           
 27482                           ;mcc_generated_files/examples/i2c1_master_example.c: 170: static i2c1_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 171: {
      +                          ;mcc_generated_files/examples/i2c1_master_example.c: 172:     I2C1_SetBuffer(((i2c1_buff
      +                          er_t *)ptr)->data,((i2c1_buffer_t*)ptr)->len);
 27483     127D  0878               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F1273@ptr,w
 27484     127E  0086               	movwf	6
 27485     127F  0187               	clrf	7
 27486     1280  3F40               	moviw [0]fsr1
 27487     1281  00F1               	movwf	I2C1_SetBuffer@bufferSize
 27488     1282  3F41               	moviw [1]fsr1
 27489     1283  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 27490     1284  0878               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F1273@ptr,w
 27491     1285  3E02               	addlw	2
 27492     1286  0086               	movwf	6
 27493     1287  0187               	clrf	7
 27494     1288  0801               	movf	1,w
 27495     1289  3190  2064  3192   	fcall	_I2C1_SetBuffer
 27496                           
 27497                           ;mcc_generated_files/examples/i2c1_master_example.c: 173:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 27498     128C  3000               	movlw	0
 27499     128D  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27500     128E  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27501     128F  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27502     1290  319F  27DF  3192   	fcall	_I2C1_SetDataCompleteCallback
 27503     1293                     l12608:
 27504                           
 27505                           ;mcc_generated_files/examples/i2c1_master_example.c: 174:     return I2C1_RESTART_READ;
 27506     1293  3002               	movlw	2
 27507     1294                     l742:
 27508     1294  0008               	return
 27509     1295                     __end_of_rdBlkRegCompleteHandler@i2c1_master_example$F1273:
 27510                           
 27511                           	psect	text144
 27512     1133                     __ptext144:	
 27513 ;; *************** function _wr1RegCompleteHandler@i2c1_master_example$F1256 *****************
 27514 ;; Defined at:
 27515 ;;		line 156 in file "mcc_generated_files/examples/i2c1_master_example.c"
 27516 ;; Parameters:    Size  Location     Type
 27517 ;;  ptr             1    8[COMMON] PTR void 
 27518 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27519 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27520 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27521 ;; Auto vars:     Size  Location     Type
 27522 ;;		None
 27523 ;; Return value:  Size  Location     Type
 27524 ;;                  1    wreg      enum E363
 27525 ;; Registers used:
 27526 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27527 ;; Tracked objects:
 27528 ;;		On entry : 0/0
 27529 ;;		On exit  : 0/0
 27530 ;;		Unchanged: 0/0
 27531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27532 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27535 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27536 ;;Total ram usage:        1 bytes
 27537 ;; Hardware stack levels used: 1
 27538 ;; Hardware stack levels required when called: 6
 27539 ;; This function calls:
 27540 ;;		_I2C1_SetBuffer
 27541 ;;		_I2C1_SetDataCompleteCallback
 27542 ;; This function is called by:
 27543 ;;		_I2C1_Write1ByteRegister
 27544 ;;		_I2C1_DO_TX
 27545 ;;		_I2C1_DO_RX
 27546 ;;		_I2C1_DO_TX_EMPTY
 27547 ;;		_I2C1_DO_ADDRESS_NACK
 27548 ;;		_I2C1_DO_RX_EMPTY
 27549 ;; This function uses a non-reentrant model
 27550 ;;
 27551                           
 27552     1133                     _wr1RegCompleteHandler@i2c1_master_example$F1256:	
 27553                           ;psect for function _wr1RegCompleteHandler@i2c1_master_example$F1256
 27554                           
 27555     1133                     l12590:	
 27556                           ;incstack = 0
 27557                           ; Regs used in _wr1RegCompleteHandler@i2c1_master_example$F1256: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 27558                           
 27559                           
 27560                           ;mcc_generated_files/examples/i2c1_master_example.c: 156: static i2c1_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 157: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 158:     I2C1_SetBuffer(ptr,1);
 27561     1133  3001               	movlw	1
 27562     1134  00F1               	movwf	I2C1_SetBuffer@bufferSize
 27563     1135  3000               	movlw	0
 27564     1136  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 27565     1137  0878               	movf	wr1RegCompleteHandler@i2c1_master_example$F1256@ptr,w
 27566     1138  3190  2064  3191   	fcall	_I2C1_SetBuffer
 27567     113B                     l12592:
 27568                           
 27569                           ;mcc_generated_files/examples/i2c1_master_example.c: 159:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 27570     113B  3000               	movlw	0
 27571     113C  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27572     113D  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27573     113E  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27574     113F  319F  27DF  3191   	fcall	_I2C1_SetDataCompleteCallback
 27575     1142                     l12594:
 27576                           
 27577                           ;mcc_generated_files/examples/i2c1_master_example.c: 160:     return I2C1_CONTINUE;
 27578     1142  3004               	movlw	4
 27579     1143                     l736:
 27580     1143  0008               	return
 27581     1144                     __end_of_wr1RegCompleteHandler@i2c1_master_example$F1256:
 27582                           
 27583                           	psect	text145
 27584     1122                     __ptext145:	
 27585 ;; *************** function _rd2RegCompleteHandler@i2c1_master_example$F1250 *****************
 27586 ;; Defined at:
 27587 ;;		line 149 in file "mcc_generated_files/examples/i2c1_master_example.c"
 27588 ;; Parameters:    Size  Location     Type
 27589 ;;  ptr             1    8[COMMON] PTR void 
 27590 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27591 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27592 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27593 ;; Auto vars:     Size  Location     Type
 27594 ;;		None
 27595 ;; Return value:  Size  Location     Type
 27596 ;;                  1    wreg      enum E363
 27597 ;; Registers used:
 27598 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27599 ;; Tracked objects:
 27600 ;;		On entry : 0/0
 27601 ;;		On exit  : 0/0
 27602 ;;		Unchanged: 0/0
 27603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27604 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27607 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27608 ;;Total ram usage:        1 bytes
 27609 ;; Hardware stack levels used: 1
 27610 ;; Hardware stack levels required when called: 6
 27611 ;; This function calls:
 27612 ;;		_I2C1_SetBuffer
 27613 ;;		_I2C1_SetDataCompleteCallback
 27614 ;; This function is called by:
 27615 ;;		_I2C1_Read2ByteRegister
 27616 ;;		_I2C1_DO_TX
 27617 ;;		_I2C1_DO_RX
 27618 ;;		_I2C1_DO_TX_EMPTY
 27619 ;;		_I2C1_DO_ADDRESS_NACK
 27620 ;;		_I2C1_DO_RX_EMPTY
 27621 ;; This function uses a non-reentrant model
 27622 ;;
 27623                           
 27624     1122                     _rd2RegCompleteHandler@i2c1_master_example$F1250:	
 27625                           ;psect for function _rd2RegCompleteHandler@i2c1_master_example$F1250
 27626                           
 27627     1122                     l12582:	
 27628                           ;incstack = 0
 27629                           ; Regs used in _rd2RegCompleteHandler@i2c1_master_example$F1250: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 27630                           
 27631                           
 27632                           ;mcc_generated_files/examples/i2c1_master_example.c: 149: static i2c1_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 150: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 151:     I2C1_SetBuffer(ptr,2);
 27633     1122  3002               	movlw	2
 27634     1123  00F1               	movwf	I2C1_SetBuffer@bufferSize
 27635     1124  3000               	movlw	0
 27636     1125  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 27637     1126  0878               	movf	rd2RegCompleteHandler@i2c1_master_example$F1250@ptr,w
 27638     1127  3190  2064  3191   	fcall	_I2C1_SetBuffer
 27639     112A                     l12584:
 27640                           
 27641                           ;mcc_generated_files/examples/i2c1_master_example.c: 152:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 27642     112A  3000               	movlw	0
 27643     112B  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27644     112C  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27645     112D  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27646     112E  319F  27DF  3191   	fcall	_I2C1_SetDataCompleteCallback
 27647     1131                     l12586:
 27648                           
 27649                           ;mcc_generated_files/examples/i2c1_master_example.c: 153:     return I2C1_RESTART_READ;
 27650     1131  3002               	movlw	2
 27651     1132                     l733:
 27652     1132  0008               	return
 27653     1133                     __end_of_rd2RegCompleteHandler@i2c1_master_example$F1250:
 27654                           
 27655                           	psect	text146
 27656     1111                     __ptext146:	
 27657 ;; *************** function _rd1RegCompleteHandler@i2c1_master_example$F1239 *****************
 27658 ;; Defined at:
 27659 ;;		line 142 in file "mcc_generated_files/examples/i2c1_master_example.c"
 27660 ;; Parameters:    Size  Location     Type
 27661 ;;  ptr             1    8[COMMON] PTR void 
 27662 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27663 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27664 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27665 ;; Auto vars:     Size  Location     Type
 27666 ;;		None
 27667 ;; Return value:  Size  Location     Type
 27668 ;;                  1    wreg      enum E363
 27669 ;; Registers used:
 27670 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27671 ;; Tracked objects:
 27672 ;;		On entry : 0/0
 27673 ;;		On exit  : 0/0
 27674 ;;		Unchanged: 0/0
 27675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27676 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27679 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27680 ;;Total ram usage:        1 bytes
 27681 ;; Hardware stack levels used: 1
 27682 ;; Hardware stack levels required when called: 6
 27683 ;; This function calls:
 27684 ;;		_I2C1_SetBuffer
 27685 ;;		_I2C1_SetDataCompleteCallback
 27686 ;; This function is called by:
 27687 ;;		_I2C1_Read1ByteRegister
 27688 ;;		_I2C1_DO_TX
 27689 ;;		_I2C1_DO_RX
 27690 ;;		_I2C1_DO_TX_EMPTY
 27691 ;;		_I2C1_DO_ADDRESS_NACK
 27692 ;;		_I2C1_DO_RX_EMPTY
 27693 ;; This function uses a non-reentrant model
 27694 ;;
 27695                           
 27696     1111                     _rd1RegCompleteHandler@i2c1_master_example$F1239:	
 27697                           ;psect for function _rd1RegCompleteHandler@i2c1_master_example$F1239
 27698                           
 27699     1111                     l12574:	
 27700                           ;incstack = 0
 27701                           ; Regs used in _rd1RegCompleteHandler@i2c1_master_example$F1239: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 27702                           
 27703                           
 27704                           ;mcc_generated_files/examples/i2c1_master_example.c: 142: static i2c1_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 143: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 144:     I2C1_SetBuffer(ptr,1);
 27705     1111  3001               	movlw	1
 27706     1112  00F1               	movwf	I2C1_SetBuffer@bufferSize
 27707     1113  3000               	movlw	0
 27708     1114  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 27709     1115  0878               	movf	rd1RegCompleteHandler@i2c1_master_example$F1239@ptr,w
 27710     1116  3190  2064  3191   	fcall	_I2C1_SetBuffer
 27711     1119                     l12576:
 27712                           
 27713                           ;mcc_generated_files/examples/i2c1_master_example.c: 145:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 27714     1119  3000               	movlw	0
 27715     111A  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27716     111B  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27717     111C  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27718     111D  319F  27DF  3191   	fcall	_I2C1_SetDataCompleteCallback
 27719     1120                     l12578:
 27720                           
 27721                           ;mcc_generated_files/examples/i2c1_master_example.c: 146:     return I2C1_RESTART_READ;
 27722     1120  3002               	movlw	2
 27723     1121                     l730:
 27724     1121  0008               	return
 27725     1122                     __end_of_rd1RegCompleteHandler@i2c1_master_example$F1239:
 27726                           
 27727                           	psect	text147
 27728     1265                     __ptext147:	
 27729 ;; *************** function _rdBlkRegCompleteHandler *****************
 27730 ;; Defined at:
 27731 ;;		line 185 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 27732 ;; Parameters:    Size  Location     Type
 27733 ;;  p               1    8[COMMON] PTR void 
 27734 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27735 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27736 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27737 ;; Auto vars:     Size  Location     Type
 27738 ;;		None
 27739 ;; Return value:  Size  Location     Type
 27740 ;;                  1    wreg      enum E363
 27741 ;; Registers used:
 27742 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27743 ;; Tracked objects:
 27744 ;;		On entry : 0/0
 27745 ;;		On exit  : 0/0
 27746 ;;		Unchanged: 0/0
 27747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27748 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27751 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27752 ;;Total ram usage:        1 bytes
 27753 ;; Hardware stack levels used: 1
 27754 ;; Hardware stack levels required when called: 6
 27755 ;; This function calls:
 27756 ;;		_I2C1_SetBuffer
 27757 ;;		_I2C1_SetDataCompleteCallback
 27758 ;; This function is called by:
 27759 ;;		_i2c_readDataBlock
 27760 ;;		_I2C1_DO_TX
 27761 ;;		_I2C1_DO_RX
 27762 ;;		_I2C1_DO_TX_EMPTY
 27763 ;;		_I2C1_DO_ADDRESS_NACK
 27764 ;;		_I2C1_DO_RX_EMPTY
 27765 ;; This function uses a non-reentrant model
 27766 ;;
 27767                           
 27768     1265                     _rdBlkRegCompleteHandler:	
 27769                           ;psect for function _rdBlkRegCompleteHandler
 27770                           
 27771     1265                     l12568:	
 27772                           ;incstack = 0
 27773                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 27774                           
 27775                           
 27776                           ;mcc_generated_files/drivers/i2c_simple_master.c: 185: static i2c1_operations_t rdBlkReg
      +                          CompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 186: {;mcc_gen
      +                          erated_files/drivers/i2c_simple_master.c: 187:     I2C1_SetBuffer(((buf_t *)p)->data,((b
      +                          uf_t*)p)->len);
 27777     1265  0878               	movf	rdBlkRegCompleteHandler@p,w
 27778     1266  0086               	movwf	6
 27779     1267  0187               	clrf	7
 27780     1268  3F40               	moviw [0]fsr1
 27781     1269  00F1               	movwf	I2C1_SetBuffer@bufferSize
 27782     126A  3F41               	moviw [1]fsr1
 27783     126B  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 27784     126C  0878               	movf	rdBlkRegCompleteHandler@p,w
 27785     126D  3E02               	addlw	2
 27786     126E  0086               	movwf	6
 27787     126F  0187               	clrf	7
 27788     1270  0801               	movf	1,w
 27789     1271  3190  2064  3192   	fcall	_I2C1_SetBuffer
 27790                           
 27791                           ;mcc_generated_files/drivers/i2c_simple_master.c: 188:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 27792     1274  3000               	movlw	0
 27793     1275  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27794     1276  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27795     1277  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27796     1278  319F  27DF  3192   	fcall	_I2C1_SetDataCompleteCallback
 27797     127B                     l12570:
 27798                           
 27799                           ;mcc_generated_files/drivers/i2c_simple_master.c: 189:     return I2C1_RESTART_READ;
 27800     127B  3002               	movlw	2
 27801     127C                     l561:
 27802     127C  0008               	return
 27803     127D                     __end_of_rdBlkRegCompleteHandler:
 27804                           
 27805                           	psect	text148
 27806     1100                     __ptext148:	
 27807 ;; *************** function _wr2RegCompleteHandler *****************
 27808 ;; Defined at:
 27809 ;;		line 151 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 27810 ;; Parameters:    Size  Location     Type
 27811 ;;  p               1    8[COMMON] PTR void 
 27812 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27813 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27814 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27815 ;; Auto vars:     Size  Location     Type
 27816 ;;		None
 27817 ;; Return value:  Size  Location     Type
 27818 ;;                  1    wreg      enum E363
 27819 ;; Registers used:
 27820 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27821 ;; Tracked objects:
 27822 ;;		On entry : 0/0
 27823 ;;		On exit  : 0/0
 27824 ;;		Unchanged: 0/0
 27825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27826 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27829 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27830 ;;Total ram usage:        1 bytes
 27831 ;; Hardware stack levels used: 1
 27832 ;; Hardware stack levels required when called: 6
 27833 ;; This function calls:
 27834 ;;		_I2C1_SetBuffer
 27835 ;;		_I2C1_SetDataCompleteCallback
 27836 ;; This function is called by:
 27837 ;;		_i2c_write2ByteRegister
 27838 ;;		_I2C1_DO_TX
 27839 ;;		_I2C1_DO_RX
 27840 ;;		_I2C1_DO_TX_EMPTY
 27841 ;;		_I2C1_DO_ADDRESS_NACK
 27842 ;;		_I2C1_DO_RX_EMPTY
 27843 ;; This function uses a non-reentrant model
 27844 ;;
 27845                           
 27846     1100                     _wr2RegCompleteHandler:	
 27847                           ;psect for function _wr2RegCompleteHandler
 27848                           
 27849     1100                     l12560:	
 27850                           ;incstack = 0
 27851                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 27852                           
 27853                           
 27854                           ;mcc_generated_files/drivers/i2c_simple_master.c: 151: static i2c1_operations_t wr2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 152: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 153:     I2C1_SetBuffer(p,2);
 27855     1100  3002               	movlw	2
 27856     1101  00F1               	movwf	I2C1_SetBuffer@bufferSize
 27857     1102  3000               	movlw	0
 27858     1103  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 27859     1104  0878               	movf	wr2RegCompleteHandler@p,w
 27860     1105  3190  2064  3191   	fcall	_I2C1_SetBuffer
 27861     1108                     l12562:
 27862                           
 27863                           ;mcc_generated_files/drivers/i2c_simple_master.c: 154:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 27864     1108  3000               	movlw	0
 27865     1109  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27866     110A  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27867     110B  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27868     110C  319F  27DF  3191   	fcall	_I2C1_SetDataCompleteCallback
 27869     110F                     l12564:
 27870                           
 27871                           ;mcc_generated_files/drivers/i2c_simple_master.c: 155:     return I2C1_CONTINUE;
 27872     110F  3004               	movlw	4
 27873     1110                     l549:
 27874     1110  0008               	return
 27875     1111                     __end_of_wr2RegCompleteHandler:
 27876                           
 27877                           	psect	text149
 27878     10EF                     __ptext149:	
 27879 ;; *************** function _rd2RegCompleteHandler *****************
 27880 ;; Defined at:
 27881 ;;		line 119 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 27882 ;; Parameters:    Size  Location     Type
 27883 ;;  p               1    8[COMMON] PTR void 
 27884 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27885 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27886 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27887 ;; Auto vars:     Size  Location     Type
 27888 ;;		None
 27889 ;; Return value:  Size  Location     Type
 27890 ;;                  1    wreg      enum E363
 27891 ;; Registers used:
 27892 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27893 ;; Tracked objects:
 27894 ;;		On entry : 0/0
 27895 ;;		On exit  : 0/0
 27896 ;;		Unchanged: 0/0
 27897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27898 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27901 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27902 ;;Total ram usage:        1 bytes
 27903 ;; Hardware stack levels used: 1
 27904 ;; Hardware stack levels required when called: 6
 27905 ;; This function calls:
 27906 ;;		_I2C1_SetBuffer
 27907 ;;		_I2C1_SetDataCompleteCallback
 27908 ;; This function is called by:
 27909 ;;		_i2c_read2ByteRegister
 27910 ;;		_I2C1_DO_TX
 27911 ;;		_I2C1_DO_RX
 27912 ;;		_I2C1_DO_TX_EMPTY
 27913 ;;		_I2C1_DO_ADDRESS_NACK
 27914 ;;		_I2C1_DO_RX_EMPTY
 27915 ;; This function uses a non-reentrant model
 27916 ;;
 27917                           
 27918     10EF                     _rd2RegCompleteHandler:	
 27919                           ;psect for function _rd2RegCompleteHandler
 27920                           
 27921     10EF                     l12552:	
 27922                           ;incstack = 0
 27923                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 27924                           
 27925                           
 27926                           ;mcc_generated_files/drivers/i2c_simple_master.c: 119: static i2c1_operations_t rd2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 120: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 121:     I2C1_SetBuffer(p,2);
 27927     10EF  3002               	movlw	2
 27928     10F0  00F1               	movwf	I2C1_SetBuffer@bufferSize
 27929     10F1  3000               	movlw	0
 27930     10F2  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 27931     10F3  0878               	movf	rd2RegCompleteHandler@p,w
 27932     10F4  3190  2064  3190   	fcall	_I2C1_SetBuffer
 27933     10F7                     l12554:
 27934                           
 27935                           ;mcc_generated_files/drivers/i2c_simple_master.c: 122:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 27936     10F7  3000               	movlw	0
 27937     10F8  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27938     10F9  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27939     10FA  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27940     10FB  319F  27DF  3190   	fcall	_I2C1_SetDataCompleteCallback
 27941     10FE                     l12556:
 27942                           
 27943                           ;mcc_generated_files/drivers/i2c_simple_master.c: 123:     return I2C1_RESTART_READ;
 27944     10FE  3002               	movlw	2
 27945     10FF                     l537:
 27946     10FF  0008               	return
 27947     1100                     __end_of_rd2RegCompleteHandler:
 27948                           
 27949                           	psect	text150
 27950     10DE                     __ptext150:	
 27951 ;; *************** function _rd1RegCompleteHandler *****************
 27952 ;; Defined at:
 27953 ;;		line 81 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 27954 ;; Parameters:    Size  Location     Type
 27955 ;;  p               1    8[COMMON] PTR void 
 27956 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27957 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27958 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27959 ;; Auto vars:     Size  Location     Type
 27960 ;;		None
 27961 ;; Return value:  Size  Location     Type
 27962 ;;                  1    wreg      enum E363
 27963 ;; Registers used:
 27964 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27965 ;; Tracked objects:
 27966 ;;		On entry : 0/0
 27967 ;;		On exit  : 0/0
 27968 ;;		Unchanged: 0/0
 27969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27970 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27973 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27974 ;;Total ram usage:        1 bytes
 27975 ;; Hardware stack levels used: 1
 27976 ;; Hardware stack levels required when called: 6
 27977 ;; This function calls:
 27978 ;;		_I2C1_SetBuffer
 27979 ;;		_I2C1_SetDataCompleteCallback
 27980 ;; This function is called by:
 27981 ;;		_i2c_read1ByteRegister
 27982 ;;		_I2C1_DO_TX
 27983 ;;		_I2C1_DO_RX
 27984 ;;		_I2C1_DO_TX_EMPTY
 27985 ;;		_I2C1_DO_ADDRESS_NACK
 27986 ;;		_I2C1_DO_RX_EMPTY
 27987 ;; This function uses a non-reentrant model
 27988 ;;
 27989                           
 27990     10DE                     _rd1RegCompleteHandler:	
 27991                           ;psect for function _rd1RegCompleteHandler
 27992                           
 27993     10DE                     l12544:	
 27994                           ;incstack = 0
 27995                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 27996                           
 27997                           
 27998                           ;mcc_generated_files/drivers/i2c_simple_master.c: 81: static i2c1_operations_t rd1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 82: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 83:     I2C1_SetBuffer(p,1);
 27999     10DE  3001               	movlw	1
 28000     10DF  00F1               	movwf	I2C1_SetBuffer@bufferSize
 28001     10E0  3000               	movlw	0
 28002     10E1  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 28003     10E2  0878               	movf	rd1RegCompleteHandler@p,w
 28004     10E3  3190  2064  3190   	fcall	_I2C1_SetBuffer
 28005     10E6                     l12546:
 28006                           
 28007                           ;mcc_generated_files/drivers/i2c_simple_master.c: 84:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 28008     10E6  3000               	movlw	0
 28009     10E7  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 28010     10E8  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 28011     10E9  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 28012     10EA  319F  27DF  3190   	fcall	_I2C1_SetDataCompleteCallback
 28013     10ED                     l12548:
 28014                           
 28015                           ;mcc_generated_files/drivers/i2c_simple_master.c: 85:     return I2C1_RESTART_READ;
 28016     10ED  3002               	movlw	2
 28017     10EE                     l522:
 28018     10EE  0008               	return
 28019     10EF                     __end_of_rd1RegCompleteHandler:
 28020                           
 28021                           	psect	text151
 28022     10CD                     __ptext151:	
 28023 ;; *************** function _wr1RegCompleteHandler *****************
 28024 ;; Defined at:
 28025 ;;		line 34 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 28026 ;; Parameters:    Size  Location     Type
 28027 ;;  p               1    8[COMMON] PTR void 
 28028 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 28029 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 28030 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 28031 ;; Auto vars:     Size  Location     Type
 28032 ;;		None
 28033 ;; Return value:  Size  Location     Type
 28034 ;;                  1    wreg      enum E363
 28035 ;; Registers used:
 28036 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 28037 ;; Tracked objects:
 28038 ;;		On entry : 0/0
 28039 ;;		On exit  : 0/0
 28040 ;;		Unchanged: 0/0
 28041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28042 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28045 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28046 ;;Total ram usage:        1 bytes
 28047 ;; Hardware stack levels used: 1
 28048 ;; Hardware stack levels required when called: 6
 28049 ;; This function calls:
 28050 ;;		_I2C1_SetBuffer
 28051 ;;		_I2C1_SetDataCompleteCallback
 28052 ;; This function is called by:
 28053 ;;		_i2c_write1ByteRegister
 28054 ;;		_I2C1_DO_TX
 28055 ;;		_I2C1_DO_RX
 28056 ;;		_I2C1_DO_TX_EMPTY
 28057 ;;		_I2C1_DO_ADDRESS_NACK
 28058 ;;		_I2C1_DO_RX_EMPTY
 28059 ;; This function uses a non-reentrant model
 28060 ;;
 28061                           
 28062     10CD                     _wr1RegCompleteHandler:	
 28063                           ;psect for function _wr1RegCompleteHandler
 28064                           
 28065     10CD                     l12536:	
 28066                           ;incstack = 0
 28067                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 28068                           
 28069                           
 28070                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34: static i2c1_operations_t wr1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 35: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 36:     I2C1_SetBuffer(p,1);
 28071     10CD  3001               	movlw	1
 28072     10CE  00F1               	movwf	I2C1_SetBuffer@bufferSize
 28073     10CF  3000               	movlw	0
 28074     10D0  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 28075     10D1  0878               	movf	wr1RegCompleteHandler@p,w
 28076     10D2  3190  2064  3190   	fcall	_I2C1_SetBuffer
 28077     10D5                     l12538:
 28078                           
 28079                           ;mcc_generated_files/drivers/i2c_simple_master.c: 37:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 28080     10D5  3000               	movlw	0
 28081     10D6  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 28082     10D7  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 28083     10D8  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 28084     10D9  319F  27DF  3190   	fcall	_I2C1_SetDataCompleteCallback
 28085     10DC                     l12540:
 28086                           
 28087                           ;mcc_generated_files/drivers/i2c_simple_master.c: 38:     return I2C1_CONTINUE;
 28088     10DC  3004               	movlw	4
 28089     10DD                     l501:
 28090     10DD  0008               	return
 28091     10DE                     __end_of_wr1RegCompleteHandler:
 28092                           
 28093                           	psect	text152
 28094     10BC                     __ptext152:	
 28095 ;; *************** function _wr2RegCompleteHandler@i2c1_master_example$F1262 *****************
 28096 ;; Defined at:
 28097 ;;		line 163 in file "mcc_generated_files/examples/i2c1_master_example.c"
 28098 ;; Parameters:    Size  Location     Type
 28099 ;;  ptr             1    8[COMMON] PTR void 
 28100 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 28101 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 28102 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 28103 ;; Auto vars:     Size  Location     Type
 28104 ;;		None
 28105 ;; Return value:  Size  Location     Type
 28106 ;;                  1    wreg      enum E363
 28107 ;; Registers used:
 28108 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 28109 ;; Tracked objects:
 28110 ;;		On entry : 0/0
 28111 ;;		On exit  : 0/0
 28112 ;;		Unchanged: 0/0
 28113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28114 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28117 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28118 ;;Total ram usage:        1 bytes
 28119 ;; Hardware stack levels used: 1
 28120 ;; Hardware stack levels required when called: 6
 28121 ;; This function calls:
 28122 ;;		_I2C1_SetBuffer
 28123 ;;		_I2C1_SetDataCompleteCallback
 28124 ;; This function is called by:
 28125 ;;		_I2C1_Write2ByteRegister
 28126 ;;		_I2C1_DO_TX
 28127 ;;		_I2C1_DO_RX
 28128 ;;		_I2C1_DO_TX_EMPTY
 28129 ;;		_I2C1_DO_ADDRESS_NACK
 28130 ;;		_I2C1_DO_RX_EMPTY
 28131 ;; This function uses a non-reentrant model
 28132 ;;
 28133                           
 28134     10BC                     _wr2RegCompleteHandler@i2c1_master_example$F1262:	
 28135                           ;psect for function _wr2RegCompleteHandler@i2c1_master_example$F1262
 28136                           
 28137     10BC                     l12598:	
 28138                           ;incstack = 0
 28139                           ; Regs used in _wr2RegCompleteHandler@i2c1_master_example$F1262: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 28140                           
 28141                           
 28142                           ;mcc_generated_files/examples/i2c1_master_example.c: 163: static i2c1_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 164: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 165:     I2C1_SetBuffer(ptr,2);
 28143     10BC  3002               	movlw	2
 28144     10BD  00F1               	movwf	I2C1_SetBuffer@bufferSize
 28145     10BE  3000               	movlw	0
 28146     10BF  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 28147     10C0  0878               	movf	wr2RegCompleteHandler@i2c1_master_example$F1262@ptr,w
 28148     10C1  3190  2064  3190   	fcall	_I2C1_SetBuffer
 28149     10C4                     l12600:
 28150                           
 28151                           ;mcc_generated_files/examples/i2c1_master_example.c: 166:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 28152     10C4  3000               	movlw	0
 28153     10C5  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 28154     10C6  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 28155     10C7  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 28156     10C8  319F  27DF  3190   	fcall	_I2C1_SetDataCompleteCallback
 28157     10CB                     l12602:
 28158                           
 28159                           ;mcc_generated_files/examples/i2c1_master_example.c: 167:     return I2C1_CONTINUE;
 28160     10CB  3004               	movlw	4
 28161     10CC                     l739:
 28162     10CC  0008               	return
 28163     10CD                     __end_of_wr2RegCompleteHandler@i2c1_master_example$F1262:
 28164                           
 28165                           	psect	text153
 28166     1FDF                     __ptext153:	
 28167 ;; *************** function _I2C1_SetDataCompleteCallback *****************
 28168 ;; Defined at:
 28169 ;;		line 273 in file "mcc_generated_files/i2c1_master.c"
 28170 ;; Parameters:    Size  Location     Type
 28171 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 28172 ;;		 -> rdBlkRegCompleteHandler@i2c1_master_example$F1273(1), wr2RegCompleteHandler@i2c1_master_example$F1262(1), wr1Reg
      +CompleteHandler@i2c1_master_example$F1256(1), rd2RegCompleteHandler@i2c1_master_example$F1250(1), 
 28173 ;;		 -> rd1RegCompleteHandler@i2c1_master_example$F1239(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2Reg
      +CompleteHandler(1), 
 28174 ;;		 -> rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), NULL(1), 
 28175 ;;  ptr             1    7[COMMON] PTR void 
 28176 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 28177 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 28178 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 28179 ;; Auto vars:     Size  Location     Type
 28180 ;;		None
 28181 ;; Return value:  Size  Location     Type
 28182 ;;                  1    wreg      void 
 28183 ;; Registers used:
 28184 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 28185 ;; Tracked objects:
 28186 ;;		On entry : 0/0
 28187 ;;		On exit  : 0/0
 28188 ;;		Unchanged: 0/0
 28189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28190 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28193 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28194 ;;Total ram usage:        3 bytes
 28195 ;; Hardware stack levels used: 1
 28196 ;; Hardware stack levels required when called: 5
 28197 ;; This function calls:
 28198 ;;		_I2C1_SetCallback
 28199 ;; This function is called by:
 28200 ;;		_wr1RegCompleteHandler
 28201 ;;		_i2c_write1ByteRegister
 28202 ;;		_rd1RegCompleteHandler
 28203 ;;		_i2c_read1ByteRegister
 28204 ;;		_rd2RegCompleteHandler
 28205 ;;		_i2c_read2ByteRegister
 28206 ;;		_wr2RegCompleteHandler
 28207 ;;		_rdBlkRegCompleteHandler
 28208 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1239
 28209 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1250
 28210 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1256
 28211 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1262
 28212 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1273
 28213 ;;		_i2c_write2ByteRegister
 28214 ;;		_i2c_readDataBlock
 28215 ;;		_I2C1_Read1ByteRegister
 28216 ;;		_I2C1_Read2ByteRegister
 28217 ;;		_I2C1_Write1ByteRegister
 28218 ;;		_I2C1_Write2ByteRegister
 28219 ;;		_I2C1_ReadDataBlock
 28220 ;; This function uses a non-reentrant model
 28221 ;;
 28222                           
 28223     1FDF                     _I2C1_SetDataCompleteCallback:	
 28224                           ;psect for function _I2C1_SetDataCompleteCallback
 28225                           
 28226     1FDF                     l12528:	
 28227                           ;incstack = 0
 28228                           ; Regs used in _I2C1_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 28229                           
 28230                           
 28231                           ;mcc_generated_files/i2c1_master.c: 273: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 274: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 275:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 28232     1FDF  0876               	movf	I2C1_SetDataCompleteCallback@cb+1,w
 28233     1FE0  00F2               	movwf	I2C1_SetCallback@cb+1
 28234     1FE1  0875               	movf	I2C1_SetDataCompleteCallback@cb,w
 28235     1FE2  00F1               	movwf	I2C1_SetCallback@cb
 28236     1FE3  0877               	movf	I2C1_SetDataCompleteCallback@ptr,w
 28237     1FE4  00F3               	movwf	I2C1_SetCallback@ptr
 28238     1FE5  3000               	movlw	0
 28239     1FE6  3194  2444  319F   	fcall	_I2C1_SetCallback
 28240     1FE9                     l1772:
 28241     1FE9  0008               	return
 28242     1FEA                     __end_of_I2C1_SetDataCompleteCallback:
 28243                           
 28244                           	psect	text154
 28245     1444                     __ptext154:	
 28246 ;; *************** function _I2C1_SetCallback *****************
 28247 ;; Defined at:
 28248 ;;		line 298 in file "mcc_generated_files/i2c1_master.c"
 28249 ;; Parameters:    Size  Location     Type
 28250 ;;  idx             1    wreg     enum E12583
 28251 ;;  cb              2    1[COMMON] PTR FTN(PTR void ,)enum 
 28252 ;;		 -> rdBlkRegCompleteHandler@i2c1_master_example$F1273(1), wr2RegCompleteHandler@i2c1_master_example$F1262(1), wr1Reg
      +CompleteHandler@i2c1_master_example$F1256(1), rd2RegCompleteHandler@i2c1_master_example$F1250(1), 
 28253 ;;		 -> rd1RegCompleteHandler@i2c1_master_example$F1239(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2Reg
      +CompleteHandler(1), 
 28254 ;;		 -> rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), NULL(1), 
 28255 ;;  ptr             1    3[COMMON] PTR void 
 28256 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 28257 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 28258 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 28259 ;; Auto vars:     Size  Location     Type
 28260 ;;  idx             1    4[COMMON] enum E12583
 28261 ;; Return value:  Size  Location     Type
 28262 ;;                  1    wreg      void 
 28263 ;; Registers used:
 28264 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 28265 ;; Tracked objects:
 28266 ;;		On entry : 0/0
 28267 ;;		On exit  : 0/0
 28268 ;;		Unchanged: 0/0
 28269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28270 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28271 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28273 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28274 ;;Total ram usage:        4 bytes
 28275 ;; Hardware stack levels used: 1
 28276 ;; Hardware stack levels required when called: 4
 28277 ;; This function calls:
 28278 ;;		Nothing
 28279 ;; This function is called by:
 28280 ;;		_I2C1_SetDataCompleteCallback
 28281 ;;		_I2C1_SetAddressNackCallback
 28282 ;;		_I2C1_SetWriteCollisionCallback
 28283 ;;		_I2C1_SetDataNackCallback
 28284 ;;		_I2C1_SetTimeoutCallback
 28285 ;; This function uses a non-reentrant model
 28286 ;;
 28287                           
 28288     1444                     _I2C1_SetCallback:	
 28289                           ;psect for function _I2C1_SetCallback
 28290                           
 28291                           
 28292                           ;incstack = 0
 28293                           ; Regs used in _I2C1_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
 28294                           ;I2C1_SetCallback@idx stored from wreg
 28295     1444  00F4               	movwf	I2C1_SetCallback@idx
 28296     1445                     l12516:
 28297                           
 28298                           ;mcc_generated_files/i2c1_master.c: 298: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 299: {;mcc_gen
      +                          erated_files/i2c1_master.c: 300:     if(cb)
 28299     1445  0871               	movf	I2C1_SetCallback@cb,w
 28300     1446  0472               	iorwf	I2C1_SetCallback@cb+1,w
 28301     1447  1903               	btfsc	3,2
 28302     1448  2C4A               	goto	u9621
 28303     1449  2C4B               	goto	u9620
 28304     144A                     u9621:
 28305     144A  2C5A               	goto	l12520
 28306     144B                     u9620:
 28307     144B                     l12518:
 28308                           
 28309                           ;mcc_generated_files/i2c1_master.c: 301:     {;mcc_generated_files/i2c1_master.c: 302:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 28310     144B  3574               	lslf	I2C1_SetCallback@idx,w
 28311     144C  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 28312     144D  0086               	movwf	6
 28313     144E  0187               	clrf	7
 28314     144F  0871               	movf	I2C1_SetCallback@cb,w
 28315     1450  3FC0               	movwi [0]fsr1
 28316     1451  0872               	movf	I2C1_SetCallback@cb+1,w
 28317     1452  3FC1               	movwi [1]fsr1
 28318                           
 28319                           ;mcc_generated_files/i2c1_master.c: 303:         I2C1_Status.callbackPayload[idx] = ptr;
 28320     1453  0874               	movf	I2C1_SetCallback@idx,w
 28321     1454  3EAC               	addlw	(low ((_I2C1_Status| 0+12)))& (0+255)
 28322     1455  0086               	movwf	6
 28323     1456  0187               	clrf	7
 28324     1457  0873               	movf	I2C1_SetCallback@ptr,w
 28325     1458  0081               	movwf	1
 28326                           
 28327                           ;mcc_generated_files/i2c1_master.c: 304:     }
 28328     1459  2C67               	goto	l1789
 28329     145A                     l12520:
 28330                           
 28331                           ;mcc_generated_files/i2c1_master.c: 306:     {;mcc_generated_files/i2c1_master.c: 307:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 28332     145A  3574               	lslf	I2C1_SetCallback@idx,w
 28333     145B  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 28334     145C  0086               	movwf	6
 28335     145D  0187               	clrf	7
 28336     145E  3070               	movlw	low _I2C1_CallbackReturnStop
 28337     145F  3FC0               	movwi [0]fsr1
 28338     1460  301E               	movlw	high _I2C1_CallbackReturnStop
 28339     1461  3FC1               	movwi [1]fsr1
 28340                           
 28341                           ;mcc_generated_files/i2c1_master.c: 308:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 28342     1462  0874               	movf	I2C1_SetCallback@idx,w
 28343     1463  3EAC               	addlw	(low ((_I2C1_Status| 0+12)))& (0+255)
 28344     1464  0086               	movwf	6
 28345     1465  0187               	clrf	7
 28346     1466  0181               	clrf	1
 28347     1467                     l1789:
 28348     1467  0008               	return
 28349     1468                     __end_of_I2C1_SetCallback:
 28350                           
 28351                           	psect	text155
 28352     1064                     __ptext155:	
 28353 ;; *************** function _I2C1_SetBuffer *****************
 28354 ;; Defined at:
 28355 ;;		line 263 in file "mcc_generated_files/i2c1_master.c"
 28356 ;; Parameters:    Size  Location     Type
 28357 ;;  buffer          1    wreg     PTR void 
 28358 ;;		 -> i2c_write1ByteRegister@data$data(2), i2c_read1ByteRegister@d2$data(2), i2c_read2ByteRegister@result$data(2), i2c
      +_write2ByteRegister@data$data(2), 
 28359 ;;		 -> I2C1_Read1ByteRegister@returnValue$data(2), I2C1_Read2ByteRegister@returnValue$data(2), I2C1_Write1ByteRegister@
      +data$data(2), I2C1_Write2ByteRegister@data$data(2), 
 28360 ;;		 -> readRegisters@dataBuffer(1), I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(4), bufferBlock$data(2), 
 28361 ;;		 -> I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@reg(1), I2C1_Write1Byte
      +Register@data(1), 
 28362 ;;		 -> I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRegister@returnValue(2), I2C1_Read1ByteRegister@reg(1), I2C1_Read1B
      +yteRegister@returnValue(1), 
 28363 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(4), d$data(2), i2c_write2ByteRegister@reg(1), 
 28364 ;;		 -> i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegi
      +ster@reg(1), 
 28365 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 28366 ;;  bufferSize      2    1[COMMON] unsigned int 
 28367 ;; Auto vars:     Size  Location     Type
 28368 ;;  buffer          1    3[COMMON] PTR void 
 28369 ;;		 -> i2c_write1ByteRegister@data$data(2), i2c_read1ByteRegister@d2$data(2), i2c_read2ByteRegister@result$data(2), i2c
      +_write2ByteRegister@data$data(2), 
 28370 ;;		 -> I2C1_Read1ByteRegister@returnValue$data(2), I2C1_Read2ByteRegister@returnValue$data(2), I2C1_Write1ByteRegister@
      +data$data(2), I2C1_Write2ByteRegister@data$data(2), 
 28371 ;;		 -> readRegisters@dataBuffer(1), I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(4), bufferBlock$data(2), 
 28372 ;;		 -> I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@reg(1), I2C1_Write1Byte
      +Register@data(1), 
 28373 ;;		 -> I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRegister@returnValue(2), I2C1_Read1ByteRegister@reg(1), I2C1_Read1B
      +yteRegister@returnValue(1), 
 28374 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(4), d$data(2), i2c_write2ByteRegister@reg(1), 
 28375 ;;		 -> i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegi
      +ster@reg(1), 
 28376 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 28377 ;; Return value:  Size  Location     Type
 28378 ;;                  1    wreg      void 
 28379 ;; Registers used:
 28380 ;;		wreg
 28381 ;; Tracked objects:
 28382 ;;		On entry : 0/0
 28383 ;;		On exit  : 0/0
 28384 ;;		Unchanged: 0/0
 28385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28386 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28387 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28389 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28390 ;;Total ram usage:        3 bytes
 28391 ;; Hardware stack levels used: 1
 28392 ;; Hardware stack levels required when called: 4
 28393 ;; This function calls:
 28394 ;;		Nothing
 28395 ;; This function is called by:
 28396 ;;		_wr1RegCompleteHandler
 28397 ;;		_i2c_write1ByteRegister
 28398 ;;		_rd1RegCompleteHandler
 28399 ;;		_i2c_read1ByteRegister
 28400 ;;		_rd2RegCompleteHandler
 28401 ;;		_i2c_read2ByteRegister
 28402 ;;		_wr2RegCompleteHandler
 28403 ;;		_rdBlkRegCompleteHandler
 28404 ;;		_i2c_readNBytes
 28405 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1239
 28406 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1250
 28407 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1256
 28408 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1262
 28409 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1273
 28410 ;;		_i2c_writeNBytes
 28411 ;;		_i2c_write2ByteRegister
 28412 ;;		_i2c_readDataBlock
 28413 ;;		_I2C1_Read1ByteRegister
 28414 ;;		_I2C1_Read2ByteRegister
 28415 ;;		_I2C1_Write1ByteRegister
 28416 ;;		_I2C1_Write2ByteRegister
 28417 ;;		_I2C1_WriteNBytes
 28418 ;;		_I2C1_ReadNBytes
 28419 ;;		_I2C1_ReadDataBlock
 28420 ;; This function uses a non-reentrant model
 28421 ;;
 28422                           
 28423     1064                     _I2C1_SetBuffer:	
 28424                           ;psect for function _I2C1_SetBuffer
 28425                           
 28426                           
 28427                           ;incstack = 0
 28428                           ; Regs used in _I2C1_SetBuffer: [wreg]
 28429                           ;I2C1_SetBuffer@buffer stored from wreg
 28430     1064  00F3               	movwf	I2C1_SetBuffer@buffer
 28431     1065                     l12522:
 28432                           
 28433                           ;mcc_generated_files/i2c1_master.c: 263: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 264: {;mcc_generated_files/i2c1_master.c: 265: 
      +                              if(I2C1_Status.bufferFree)
 28434     1065  0141               	movlb	1	; select bank1
 28435     1066  1DBC               	btfss	(_I2C1_Status^(0+128)+28),3
 28436     1067  2869               	goto	u9631
 28437     1068  286A               	goto	u9630
 28438     1069                     u9631:
 28439     1069  2871               	goto	l1769
 28440     106A                     u9630:
 28441     106A                     l12524:
 28442                           
 28443                           ;mcc_generated_files/i2c1_master.c: 266:     {;mcc_generated_files/i2c1_master.c: 267:  
      +                                 I2C1_Status.data_ptr = buffer;
 28444     106A  0873               	movf	I2C1_SetBuffer@buffer,w
 28445     106B  00B7               	movwf	(low ((_I2C1_Status| 0+23)))^(0+128)
 28446                           
 28447                           ;mcc_generated_files/i2c1_master.c: 268:         I2C1_Status.data_length = bufferSize;
 28448     106C  0872               	movf	I2C1_SetBuffer@bufferSize+1,w
 28449     106D  00B9               	movwf	((_I2C1_Status+1)^(0+128)+24)
 28450     106E  0871               	movf	I2C1_SetBuffer@bufferSize,w
 28451     106F  00B8               	movwf	(_I2C1_Status^(0+128)+24)
 28452     1070                     l12526:
 28453                           
 28454                           ;mcc_generated_files/i2c1_master.c: 269:         I2C1_Status.bufferFree = 0;
 28455     1070  11BC               	bcf	(_I2C1_Status^(0+128)+28),3
 28456     1071                     l1769:
 28457     1071  0008               	return
 28458     1072                     __end_of_I2C1_SetBuffer:
 28459                           
 28460                           	psect	text156
 28461     1E83                     __ptext156:	
 28462 ;; *************** function _I2C1_MasterStop *****************
 28463 ;; Defined at:
 28464 ;;		line 593 in file "mcc_generated_files/i2c1_master.c"
 28465 ;; Parameters:    Size  Location     Type
 28466 ;;		None
 28467 ;; Auto vars:     Size  Location     Type
 28468 ;;		None
 28469 ;; Return value:  Size  Location     Type
 28470 ;;                  1    wreg      void 
 28471 ;; Registers used:
 28472 ;;		None
 28473 ;; Tracked objects:
 28474 ;;		On entry : 0/0
 28475 ;;		On exit  : 0/0
 28476 ;;		Unchanged: 0/0
 28477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28482 ;;Total ram usage:        0 bytes
 28483 ;; Hardware stack levels used: 1
 28484 ;; Hardware stack levels required when called: 4
 28485 ;; This function calls:
 28486 ;;		Nothing
 28487 ;; This function is called by:
 28488 ;;		_I2C1_DO_SEND_STOP
 28489 ;; This function uses a non-reentrant model
 28490 ;;
 28491                           
 28492     1E83                     _I2C1_MasterStop:	
 28493                           ;psect for function _I2C1_MasterStop
 28494                           
 28495     1E83                     l12532:	
 28496                           ;incstack = 0
 28497                           ; Regs used in _I2C1_MasterStop: []
 28498                           
 28499                           
 28500                           ;mcc_generated_files/i2c1_master.c: 595:     SSP1CON2bits.PEN = 1;
 28501     1E83  0143               	movlb	3	; select bank3
 28502     1E84  1511               	bsf	17,2	;volatile
 28503     1E85                     l1935:
 28504     1E85  0008               	return
 28505     1E86                     __end_of_I2C1_MasterStop:
 28506                           
 28507                           	psect	text157
 28508     1E80                     __ptext157:	
 28509 ;; *************** function _I2C1_MasterEnableRestart *****************
 28510 ;; Defined at:
 28511 ;;		line 573 in file "mcc_generated_files/i2c1_master.c"
 28512 ;; Parameters:    Size  Location     Type
 28513 ;;		None
 28514 ;; Auto vars:     Size  Location     Type
 28515 ;;		None
 28516 ;; Return value:  Size  Location     Type
 28517 ;;                  1    wreg      void 
 28518 ;; Registers used:
 28519 ;;		None
 28520 ;; Tracked objects:
 28521 ;;		On entry : 0/0
 28522 ;;		On exit  : 0/0
 28523 ;;		Unchanged: 0/0
 28524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28529 ;;Total ram usage:        0 bytes
 28530 ;; Hardware stack levels used: 1
 28531 ;; Hardware stack levels required when called: 4
 28532 ;; This function calls:
 28533 ;;		Nothing
 28534 ;; This function is called by:
 28535 ;;		_I2C1_DO_SEND_RESTART_READ
 28536 ;;		_I2C1_DO_SEND_RESTART_WRITE
 28537 ;;		_I2C1_DO_SEND_RESTART
 28538 ;;		_I2C1_DO_RX_EMPTY
 28539 ;; This function uses a non-reentrant model
 28540 ;;
 28541                           
 28542     1E80                     _I2C1_MasterEnableRestart:	
 28543                           ;psect for function _I2C1_MasterEnableRestart
 28544                           
 28545     1E80                     l12530:	
 28546                           ;incstack = 0
 28547                           ; Regs used in _I2C1_MasterEnableRestart: []
 28548                           
 28549                           
 28550                           ;mcc_generated_files/i2c1_master.c: 575:     SSP1CON2bits.RSEN = 1;
 28551     1E80  0143               	movlb	3	; select bank3
 28552     1E81  1491               	bsf	17,1	;volatile
 28553     1E82                     l1923:
 28554     1E82  0008               	return
 28555     1E83                     __end_of_I2C1_MasterEnableRestart:
 28556                           
 28557                           	psect	text158
 28558     1E7D                     __ptext158:	
 28559 ;; *************** function _I2C1_MasterStart *****************
 28560 ;; Defined at:
 28561 ;;		line 588 in file "mcc_generated_files/i2c1_master.c"
 28562 ;; Parameters:    Size  Location     Type
 28563 ;;		None
 28564 ;; Auto vars:     Size  Location     Type
 28565 ;;		None
 28566 ;; Return value:  Size  Location     Type
 28567 ;;                  1    wreg      void 
 28568 ;; Registers used:
 28569 ;;		None
 28570 ;; Tracked objects:
 28571 ;;		On entry : 0/0
 28572 ;;		On exit  : 0/0
 28573 ;;		Unchanged: 0/0
 28574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28579 ;;Total ram usage:        0 bytes
 28580 ;; Hardware stack levels used: 1
 28581 ;; Hardware stack levels required when called: 4
 28582 ;; This function calls:
 28583 ;;		Nothing
 28584 ;; This function is called by:
 28585 ;;		_I2C1_MasterOperation
 28586 ;; This function uses a non-reentrant model
 28587 ;;
 28588                           
 28589     1E7D                     _I2C1_MasterStart:	
 28590                           ;psect for function _I2C1_MasterStart
 28591                           
 28592     1E7D                     l12846:	
 28593                           ;incstack = 0
 28594                           ; Regs used in _I2C1_MasterStart: []
 28595                           
 28596                           
 28597                           ;mcc_generated_files/i2c1_master.c: 590:     SSP1CON2bits.SEN = 1;
 28598     1E7D  0143               	movlb	3	; select bank3
 28599     1E7E  1411               	bsf	17,0	;volatile
 28600     1E7F                     l1932:
 28601     1E7F  0008               	return
 28602     1E80                     __end_of_I2C1_MasterStart:
 28603                           
 28604                           	psect	text159
 28605     124D                     __ptext159:	
 28606 ;; *************** function _I2C1_Close *****************
 28607 ;; Defined at:
 28608 ;;		line 209 in file "mcc_generated_files/i2c1_master.c"
 28609 ;; Parameters:    Size  Location     Type
 28610 ;;		None
 28611 ;; Auto vars:     Size  Location     Type
 28612 ;;  returnValue     1    1[COMMON] enum E358
 28613 ;; Return value:  Size  Location     Type
 28614 ;;                  1    wreg      enum E358
 28615 ;; Registers used:
 28616 ;;		wreg, status,2, status,0, pclath, cstack
 28617 ;; Tracked objects:
 28618 ;;		On entry : 0/0
 28619 ;;		On exit  : 0/0
 28620 ;;		Unchanged: 0/0
 28621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28623 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28625 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28626 ;;Total ram usage:        1 bytes
 28627 ;; Hardware stack levels used: 1
 28628 ;; Hardware stack levels required when called: 5
 28629 ;; This function calls:
 28630 ;;		_I2C1_MasterClearIrq
 28631 ;;		_I2C1_MasterClose
 28632 ;;		_I2C1_MasterDisableIrq
 28633 ;; This function is called by:
 28634 ;;		_i2c_write1ByteRegister
 28635 ;;		_i2c_read1ByteRegister
 28636 ;;		_i2c_read2ByteRegister
 28637 ;;		_i2c_readNBytes
 28638 ;;		_i2c_writeNBytes
 28639 ;;		_i2c_write2ByteRegister
 28640 ;;		_i2c_readDataBlock
 28641 ;;		_I2C1_Read1ByteRegister
 28642 ;;		_I2C1_Read2ByteRegister
 28643 ;;		_I2C1_Write1ByteRegister
 28644 ;;		_I2C1_Write2ByteRegister
 28645 ;;		_I2C1_WriteNBytes
 28646 ;;		_I2C1_ReadNBytes
 28647 ;;		_I2C1_ReadDataBlock
 28648 ;; This function uses a non-reentrant model
 28649 ;;
 28650                           
 28651     124D                     _I2C1_Close:	
 28652                           ;psect for function _I2C1_Close
 28653                           
 28654     124D                     l12924:	
 28655                           ;incstack = 0
 28656                           ; Regs used in _I2C1_Close: [wreg+status,2+status,0+pclath+cstack]
 28657                           
 28658                           
 28659                           ;mcc_generated_files/i2c1_master.c: 211:     i2c1_error_t returnValue = I2C1_BUSY;
 28660     124D  01F1               	clrf	I2C1_Close@returnValue
 28661     124E  0AF1               	incf	I2C1_Close@returnValue,f
 28662                           
 28663                           ;mcc_generated_files/i2c1_master.c: 212:     if(!I2C1_Status.busy)
 28664     124F  0141               	movlb	1	; select bank1
 28665     1250  18BC               	btfsc	(_I2C1_Status^(0+128)+28),1
 28666     1251  2A53               	goto	u9751
 28667     1252  2A54               	goto	u9750
 28668     1253                     u9751:
 28669     1253  2A63               	goto	l12938
 28670     1254                     u9750:
 28671     1254                     l12926:
 28672                           
 28673                           ;mcc_generated_files/i2c1_master.c: 213:     {;mcc_generated_files/i2c1_master.c: 214:  
      +                                 I2C1_Status.inUse = 0;
 28674     1254  113C               	bcf	(_I2C1_Status^(0+128)+28),2
 28675     1255                     l12928:
 28676                           
 28677                           ;mcc_generated_files/i2c1_master.c: 215:         I2C1_Status.address = 0xff;
 28678     1255  30FF               	movlw	255
 28679     1256  00B6               	movwf	(_I2C1_Status^(0+128)+22)
 28680     1257                     l12930:
 28681                           
 28682                           ;mcc_generated_files/i2c1_master.c: 216:         I2C1_MasterClearIrq();
 28683     1257  319E  2674  3192   	fcall	_I2C1_MasterClearIrq
 28684     125A                     l12932:
 28685                           
 28686                           ;mcc_generated_files/i2c1_master.c: 217:         I2C1_MasterDisableIrq();
 28687     125A  319E  267A  3192   	fcall	_I2C1_MasterDisableIrq
 28688     125D                     l12934:
 28689                           
 28690                           ;mcc_generated_files/i2c1_master.c: 218:         I2C1_MasterClose();
 28691     125D  319E  2677  3192   	fcall	_I2C1_MasterClose
 28692     1260                     l12936:
 28693                           
 28694                           ;mcc_generated_files/i2c1_master.c: 219:         returnValue = I2C1_Status.error;
 28695     1260  0141               	movlb	1	; select bank1
 28696     1261  083B               	movf	(_I2C1_Status^(0+128)+27),w
 28697     1262  00F1               	movwf	I2C1_Close@returnValue
 28698     1263                     l12938:
 28699                           
 28700                           ;mcc_generated_files/i2c1_master.c: 221:     return returnValue;
 28701     1263  0871               	movf	I2C1_Close@returnValue,w
 28702     1264                     l1750:
 28703     1264  0008               	return
 28704     1265                     __end_of_I2C1_Close:
 28705                           
 28706                           	psect	text160
 28707     1E7A                     __ptext160:	
 28708 ;; *************** function _I2C1_MasterDisableIrq *****************
 28709 ;; Defined at:
 28710 ;;		line 635 in file "mcc_generated_files/i2c1_master.c"
 28711 ;; Parameters:    Size  Location     Type
 28712 ;;		None
 28713 ;; Auto vars:     Size  Location     Type
 28714 ;;		None
 28715 ;; Return value:  Size  Location     Type
 28716 ;;                  1    wreg      void 
 28717 ;; Registers used:
 28718 ;;		None
 28719 ;; Tracked objects:
 28720 ;;		On entry : 0/0
 28721 ;;		On exit  : 0/0
 28722 ;;		Unchanged: 0/0
 28723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28728 ;;Total ram usage:        0 bytes
 28729 ;; Hardware stack levels used: 1
 28730 ;; Hardware stack levels required when called: 4
 28731 ;; This function calls:
 28732 ;;		Nothing
 28733 ;; This function is called by:
 28734 ;;		_I2C1_Close
 28735 ;;		_I2C1_SetTimeOut
 28736 ;; This function uses a non-reentrant model
 28737 ;;
 28738                           
 28739     1E7A                     _I2C1_MasterDisableIrq:	
 28740                           ;psect for function _I2C1_MasterDisableIrq
 28741                           
 28742     1E7A                     l12868:	
 28743                           ;incstack = 0
 28744                           ; Regs used in _I2C1_MasterDisableIrq: []
 28745                           
 28746                           
 28747                           ;mcc_generated_files/i2c1_master.c: 637:     PIE3bits.SSP1IE = 0;
 28748     1E7A  014E               	movlb	14	; select bank14
 28749     1E7B  1019               	bcf	25,0	;volatile
 28750     1E7C                     l1959:
 28751     1E7C  0008               	return
 28752     1E7D                     __end_of_I2C1_MasterDisableIrq:
 28753                           
 28754                           	psect	text161
 28755     1E77                     __ptext161:	
 28756 ;; *************** function _I2C1_MasterClose *****************
 28757 ;; Defined at:
 28758 ;;		line 557 in file "mcc_generated_files/i2c1_master.c"
 28759 ;; Parameters:    Size  Location     Type
 28760 ;;		None
 28761 ;; Auto vars:     Size  Location     Type
 28762 ;;		None
 28763 ;; Return value:  Size  Location     Type
 28764 ;;                  1    wreg      void 
 28765 ;; Registers used:
 28766 ;;		None
 28767 ;; Tracked objects:
 28768 ;;		On entry : 0/0
 28769 ;;		On exit  : 0/0
 28770 ;;		Unchanged: 0/0
 28771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28776 ;;Total ram usage:        0 bytes
 28777 ;; Hardware stack levels used: 1
 28778 ;; Hardware stack levels required when called: 4
 28779 ;; This function calls:
 28780 ;;		Nothing
 28781 ;; This function is called by:
 28782 ;;		_I2C1_Close
 28783 ;; This function uses a non-reentrant model
 28784 ;;
 28785                           
 28786     1E77                     _I2C1_MasterClose:	
 28787                           ;psect for function _I2C1_MasterClose
 28788                           
 28789     1E77                     l12870:	
 28790                           ;incstack = 0
 28791                           ; Regs used in _I2C1_MasterClose: []
 28792                           
 28793                           
 28794                           ;mcc_generated_files/i2c1_master.c: 560:     SSP1CON1bits.SSPEN = 0;
 28795     1E77  0143               	movlb	3	; select bank3
 28796     1E78  1290               	bcf	16,5	;volatile
 28797     1E79                     l1914:
 28798     1E79  0008               	return
 28799     1E7A                     __end_of_I2C1_MasterClose:
 28800                           
 28801                           	psect	text162
 28802     1E74                     __ptext162:	
 28803 ;; *************** function _I2C1_MasterClearIrq *****************
 28804 ;; Defined at:
 28805 ;;		line 640 in file "mcc_generated_files/i2c1_master.c"
 28806 ;; Parameters:    Size  Location     Type
 28807 ;;		None
 28808 ;; Auto vars:     Size  Location     Type
 28809 ;;		None
 28810 ;; Return value:  Size  Location     Type
 28811 ;;                  1    wreg      void 
 28812 ;; Registers used:
 28813 ;;		None
 28814 ;; Tracked objects:
 28815 ;;		On entry : 0/0
 28816 ;;		On exit  : 0/0
 28817 ;;		Unchanged: 0/0
 28818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28823 ;;Total ram usage:        0 bytes
 28824 ;; Hardware stack levels used: 1
 28825 ;; Hardware stack levels required when called: 4
 28826 ;; This function calls:
 28827 ;;		Nothing
 28828 ;; This function is called by:
 28829 ;;		_I2C1_Open
 28830 ;;		_I2C1_Close
 28831 ;;		_I2C1_MasterFsm
 28832 ;; This function uses a non-reentrant model
 28833 ;;
 28834                           
 28835     1E74                     _I2C1_MasterClearIrq:	
 28836                           ;psect for function _I2C1_MasterClearIrq
 28837                           
 28838     1E74                     l12672:	
 28839                           ;incstack = 0
 28840                           ; Regs used in _I2C1_MasterClearIrq: []
 28841                           
 28842                           
 28843                           ;mcc_generated_files/i2c1_master.c: 642:     PIR3bits.SSP1IF = 0;
 28844     1E74  014E               	movlb	14	; select bank14
 28845     1E75  100F               	bcf	15,0	;volatile
 28846     1E76                     l1962:
 28847     1E76  0008               	return
 28848     1E77                     __end_of_I2C1_MasterClearIrq:
 28849                           
 28850                           	psect	intentry
 28851     0004                     __pintentry:	
 28852 ;; *************** function _INTERRUPT_InterruptManager *****************
 28853 ;; Defined at:
 28854 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 28855 ;; Parameters:    Size  Location     Type
 28856 ;;		None
 28857 ;; Auto vars:     Size  Location     Type
 28858 ;;		None
 28859 ;; Return value:  Size  Location     Type
 28860 ;;                  1    wreg      void 
 28861 ;; Registers used:
 28862 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 28863 ;; Tracked objects:
 28864 ;;		On entry : 0/0
 28865 ;;		On exit  : 0/0
 28866 ;;		Unchanged: 0/0
 28867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28872 ;;Total ram usage:        0 bytes
 28873 ;; Hardware stack levels used: 1
 28874 ;; Hardware stack levels required when called: 3
 28875 ;; This function calls:
 28876 ;;		NULL
 28877 ;;		_EUSART1_Receive_ISR
 28878 ;;		_EUSART1_Transmit_ISR
 28879 ;;		_EUSART2_Receive_ISR
 28880 ;;		_EUSART2_Transmit_ISR
 28881 ;;		_PIN_MANAGER_IOC
 28882 ;; This function is called by:
 28883 ;;		Interrupt level 1
 28884 ;; This function uses a non-reentrant model
 28885 ;;
 28886                           
 28887     0004                     _INTERRUPT_InterruptManager:
 28888                           
 28889                           ;incstack = 0
 28890 ;; hardware stack exceeded
 28891     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 28892                           
 28893                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 28894     0005  3180               	pagesel	$
 28895     0006                     i1l14948:
 28896                           
 28897                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.IOCIE == 1 && PIR0bits.IOC
      +                          IF == 1)
 28898     0006  014E               	movlb	14	; select bank14
 28899     0007  1E16               	btfss	22,4	;volatile
 28900     0008  280A               	goto	u1220_21
 28901     0009  280B               	goto	u1220_20
 28902     000A                     u1220_21:
 28903     000A  2813               	goto	i1l1295
 28904     000B                     u1220_20:
 28905     000B                     i1l14950:
 28906     000B  1E0C               	btfss	12,4	;volatile
 28907     000C  280E               	goto	u1221_21
 28908     000D  280F               	goto	u1221_20
 28909     000E                     u1221_21:
 28910     000E  2813               	goto	i1l1295
 28911     000F                     u1221_20:
 28912     000F                     i1l14952:
 28913                           
 28914                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
 28915     000F  319F  2780  3180   	fcall	_PIN_MANAGER_IOC
 28916                           
 28917                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 28918     0012  2853               	goto	i1l1307
 28919     0013                     i1l1295:	
 28920                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 28921                           
 28922     0013  1F0B               	btfss	11,6	;volatile
 28923     0014  2816               	goto	u1222_21
 28924     0015  2817               	goto	u1222_20
 28925     0016                     u1222_21:
 28926     0016  2853               	goto	i1l1307
 28927     0017                     u1222_20:
 28928     0017                     i1l14954:
 28929                           
 28930                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 28931     0017  1F19               	btfss	25,6	;volatile
 28932     0018  281A               	goto	u1223_21
 28933     0019  281B               	goto	u1223_20
 28934     001A                     u1223_21:
 28935     001A  2826               	goto	i1l1298
 28936     001B                     u1223_20:
 28937     001B                     i1l14956:
 28938     001B  1F0F               	btfss	15,6	;volatile
 28939     001C  281E               	goto	u1224_21
 28940     001D  281F               	goto	u1224_20
 28941     001E                     u1224_21:
 28942     001E  2826               	goto	i1l1298
 28943     001F                     u1224_20:
 28944     001F                     i1l14958:
 28945                           
 28946                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART2_TxDefaultInterruptHandler();
 28947     001F  0141               	movlb	1	; select bank1
 28948     0020  086E               	movf	(_EUSART2_TxDefaultInterruptHandler+1)^(0+128),w
 28949     0021  008A               	movwf	10
 28950     0022  086D               	movf	_EUSART2_TxDefaultInterruptHandler^(0+128),w
 28951     0023  000A               	callw
 28952     0024  3180               	pagesel	$
 28953                           
 28954                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 28955     0025  2853               	goto	i1l1307
 28956     0026                     i1l1298:	
 28957                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.RC2IE == 1 && PIR
      +                          3bits.RC2IF == 1)
 28958                           
 28959     0026  1F99               	btfss	25,7	;volatile
 28960     0027  2829               	goto	u1225_21
 28961     0028  282A               	goto	u1225_20
 28962     0029                     u1225_21:
 28963     0029  2835               	goto	i1l1300
 28964     002A                     u1225_20:
 28965     002A                     i1l14960:
 28966     002A  1F8F               	btfss	15,7	;volatile
 28967     002B  282D               	goto	u1226_21
 28968     002C  282E               	goto	u1226_20
 28969     002D                     u1226_21:
 28970     002D  2835               	goto	i1l1300
 28971     002E                     u1226_20:
 28972     002E                     i1l14962:
 28973                           
 28974                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             EUSART2_RxDefaultInterruptHandler();
 28975     002E  0141               	movlb	1	; select bank1
 28976     002F  086C               	movf	(_EUSART2_RxDefaultInterruptHandler+1)^(0+128),w
 28977     0030  008A               	movwf	10
 28978     0031  086B               	movf	_EUSART2_RxDefaultInterruptHandler^(0+128),w
 28979     0032  000A               	callw
 28980     0033  3180               	pagesel	$
 28981                           
 28982                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 28983     0034  2853               	goto	i1l1307
 28984     0035                     i1l1300:	
 28985                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.TX1IE == 1 && PIR
      +                          3bits.TX1IF == 1)
 28986                           
 28987     0035  1E19               	btfss	25,4	;volatile
 28988     0036  2838               	goto	u1227_21
 28989     0037  2839               	goto	u1227_20
 28990     0038                     u1227_21:
 28991     0038  2844               	goto	i1l1302
 28992     0039                     u1227_20:
 28993     0039                     i1l14964:
 28994     0039  1E0F               	btfss	15,4	;volatile
 28995     003A  283C               	goto	u1228_21
 28996     003B  283D               	goto	u1228_20
 28997     003C                     u1228_21:
 28998     003C  2844               	goto	i1l1302
 28999     003D                     u1228_20:
 29000     003D                     i1l14966:
 29001                           
 29002                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             EUSART1_TxDefaultInterruptHandler();
 29003     003D  0142               	movlb	2	; select bank2
 29004     003E  0866               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+256),w
 29005     003F  008A               	movwf	10
 29006     0040  0865               	movf	_EUSART1_TxDefaultInterruptHandler^(0+256),w
 29007     0041  000A               	callw
 29008     0042  3180               	pagesel	$
 29009                           
 29010                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 29011     0043  2853               	goto	i1l1307
 29012     0044                     i1l1302:	
 29013                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 29014                           
 29015     0044  1E99               	btfss	25,5	;volatile
 29016     0045  2847               	goto	u1229_21
 29017     0046  2848               	goto	u1229_20
 29018     0047                     u1229_21:
 29019     0047  2853               	goto	i1l1301
 29020     0048                     u1229_20:
 29021     0048                     i1l14968:
 29022     0048  1E8F               	btfss	15,5	;volatile
 29023     0049  284B               	goto	u1230_21
 29024     004A  284C               	goto	u1230_20
 29025     004B                     u1230_21:
 29026     004B  2853               	goto	i1l1301
 29027     004C                     u1230_20:
 29028     004C                     i1l14970:
 29029                           
 29030                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART1_RxDefaultInterruptHandler();
 29031     004C  0142               	movlb	2	; select bank2
 29032     004D  0864               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256),w
 29033     004E  008A               	movwf	10
 29034     004F  0863               	movf	_EUSART1_RxDefaultInterruptHandler^(0+256),w
 29035     0050  000A               	callw
 29036     0051  3180               	pagesel	$
 29037                           
 29038                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 29039     0052  2853               	goto	i1l1307
 29040     0053                     i1l1301:
 29041     0053                     i1l1307:
 29042     0053  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 29043     0054  0009               	retfie
 29044     0055                     __end_of_INTERRUPT_InterruptManager:
 29045                           
 29046                           	psect	text164
 29047     1F80                     __ptext164:	
 29048 ;; *************** function _PIN_MANAGER_IOC *****************
 29049 ;; Defined at:
 29050 ;;		line 142 in file "mcc_generated_files/pin_manager.c"
 29051 ;; Parameters:    Size  Location     Type
 29052 ;;		None
 29053 ;; Auto vars:     Size  Location     Type
 29054 ;;		None
 29055 ;; Return value:  Size  Location     Type
 29056 ;;                  1    wreg      void 
 29057 ;; Registers used:
 29058 ;;		wreg, status,2, status,0, pclath, cstack
 29059 ;; Tracked objects:
 29060 ;;		On entry : 0/0
 29061 ;;		On exit  : 0/0
 29062 ;;		Unchanged: 0/0
 29063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29068 ;;Total ram usage:        0 bytes
 29069 ;; Hardware stack levels used: 1
 29070 ;; Hardware stack levels required when called: 2
 29071 ;; This function calls:
 29072 ;;		_IOCAF6_ISR
 29073 ;; This function is called by:
 29074 ;;		_INTERRUPT_InterruptManager
 29075 ;; This function uses a non-reentrant model
 29076 ;;
 29077                           
 29078     1F80                     _PIN_MANAGER_IOC:	
 29079                           ;psect for function _PIN_MANAGER_IOC
 29080                           
 29081     1F80                     i1l10264:	
 29082                           ;incstack = 0
 29083 ;; hardware stack exceeded
 29084                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
 29085                           
 29086                           
 29087                           ;mcc_generated_files/pin_manager.c: 145:     if(IOCAFbits.IOCAF6 == 1)
 29088     1F80  017E               	movlb	62	; select bank62
 29089     1F81  1F3F               	btfss	63,6	;volatile
 29090     1F82  2F84               	goto	u710_21
 29091     1F83  2F85               	goto	u710_20
 29092     1F84                     u710_21:
 29093     1F84  2F88               	goto	i1l1447
 29094     1F85                     u710_20:
 29095     1F85                     i1l10266:
 29096                           
 29097                           ;mcc_generated_files/pin_manager.c: 146:     {;mcc_generated_files/pin_manager.c: 147:  
      +                                 IOCAF6_ISR();
 29098     1F85  3190  208E  319F   	fcall	_IOCAF6_ISR
 29099     1F88                     i1l1447:
 29100     1F88  0008               	return
 29101     1F89                     __end_of_PIN_MANAGER_IOC:
 29102                           
 29103                           	psect	text165
 29104     108E                     __ptext165:	
 29105 ;; *************** function _IOCAF6_ISR *****************
 29106 ;; Defined at:
 29107 ;;		line 154 in file "mcc_generated_files/pin_manager.c"
 29108 ;; Parameters:    Size  Location     Type
 29109 ;;		None
 29110 ;; Auto vars:     Size  Location     Type
 29111 ;;		None
 29112 ;; Return value:  Size  Location     Type
 29113 ;;                  1    wreg      void 
 29114 ;; Registers used:
 29115 ;;		wreg, status,2, status,0, pclath, cstack
 29116 ;; Tracked objects:
 29117 ;;		On entry : 0/0
 29118 ;;		On exit  : 0/0
 29119 ;;		Unchanged: 0/0
 29120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29125 ;;Total ram usage:        0 bytes
 29126 ;; Hardware stack levels used: 1
 29127 ;; Hardware stack levels required when called: 1
 29128 ;; This function calls:
 29129 ;;		NULL
 29130 ;;		_IOCAF6_DefaultInterruptHandler
 29131 ;; This function is called by:
 29132 ;;		_PIN_MANAGER_IOC
 29133 ;; This function uses a non-reentrant model
 29134 ;;
 29135                           
 29136     108E                     _IOCAF6_ISR:	
 29137                           ;psect for function _IOCAF6_ISR
 29138                           
 29139     108E                     i1l9340:	
 29140                           ;incstack = 0
 29141 ;; hardware stack exceeded
 29142                           ; Regs used in _IOCAF6_ISR: [wreg+status,2+status,0+pclath+cstack]
 29143                           
 29144                           
 29145                           ;mcc_generated_files/pin_manager.c: 159:     if(IOCAF6_InterruptHandler)
 29146     108E  0141               	movlb	1	; select bank1
 29147     108F  0869               	movf	_IOCAF6_InterruptHandler^(0+128),w
 29148     1090  046A               	iorwf	(_IOCAF6_InterruptHandler+1)^(0+128),w
 29149     1091  1903               	btfsc	3,2
 29150     1092  2894               	goto	u590_21
 29151     1093  2895               	goto	u590_20
 29152     1094                     u590_21:
 29153     1094  289A               	goto	i1l9344
 29154     1095                     u590_20:
 29155     1095                     i1l9342:
 29156                           
 29157                           ;mcc_generated_files/pin_manager.c: 160:     {;mcc_generated_files/pin_manager.c: 161:  
      +                                 IOCAF6_InterruptHandler();
 29158     1095  086A               	movf	(_IOCAF6_InterruptHandler+1)^(0+128),w
 29159     1096  008A               	movwf	10
 29160     1097  0869               	movf	_IOCAF6_InterruptHandler^(0+128),w
 29161     1098  000A               	callw
 29162     1099  3190               	pagesel	$
 29163     109A                     i1l9344:
 29164                           
 29165                           ;mcc_generated_files/pin_manager.c: 163:     IOCAFbits.IOCAF6 = 0;
 29166     109A  017E               	movlb	62	; select bank62
 29167     109B  133F               	bcf	63,6	;volatile
 29168     109C                     i1l1451:
 29169     109C  0008               	return
 29170     109D                     __end_of_IOCAF6_ISR:
 29171                           
 29172                           	psect	text166
 29173     07FF                     __ptext166:	
 29174 ;; *************** function _IOCAF6_DefaultInterruptHandler *****************
 29175 ;; Defined at:
 29176 ;;		line 176 in file "mcc_generated_files/pin_manager.c"
 29177 ;; Parameters:    Size  Location     Type
 29178 ;;		None
 29179 ;; Auto vars:     Size  Location     Type
 29180 ;;		None
 29181 ;; Return value:  Size  Location     Type
 29182 ;;                  1    wreg      void 
 29183 ;; Registers used:
 29184 ;;		None
 29185 ;; Tracked objects:
 29186 ;;		On entry : 0/0
 29187 ;;		On exit  : 0/0
 29188 ;;		Unchanged: 0/0
 29189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29194 ;;Total ram usage:        0 bytes
 29195 ;; Hardware stack levels used: 1
 29196 ;; This function calls:
 29197 ;;		Nothing
 29198 ;; This function is called by:
 29199 ;;		_PIN_MANAGER_Initialize
 29200 ;;		_IOCAF6_ISR
 29201 ;; This function uses a non-reentrant model
 29202 ;;
 29203                           
 29204     07FF                     _IOCAF6_DefaultInterruptHandler:	
 29205                           ;psect for function _IOCAF6_DefaultInterruptHandler
 29206                           
 29207     07FF                     i1l1457:	
 29208                           ;incstack = 0
 29209 ;; hardware stack exceeded
 29210                           ; Regs used in _IOCAF6_DefaultInterruptHandler: []
 29211                           
 29212     07FF  0008               	return
 29213     0800                     __end_of_IOCAF6_DefaultInterruptHandler:
 29214                           
 29215                           	psect	text167
 29216     13FF                     __ptext167:	
 29217 ;; *************** function _EUSART1_Transmit_ISR *****************
 29218 ;; Defined at:
 29219 ;;		line 206 in file "mcc_generated_files/eusart1.c"
 29220 ;; Parameters:    Size  Location     Type
 29221 ;;		None
 29222 ;; Auto vars:     Size  Location     Type
 29223 ;;		None
 29224 ;; Return value:  Size  Location     Type
 29225 ;;                  1    wreg      void 
 29226 ;; Registers used:
 29227 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 29228 ;; Tracked objects:
 29229 ;;		On entry : 0/0
 29230 ;;		On exit  : 0/0
 29231 ;;		Unchanged: 0/0
 29232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29235 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29236 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29237 ;;Total ram usage:        1 bytes
 29238 ;; Hardware stack levels used: 1
 29239 ;; This function calls:
 29240 ;;		Nothing
 29241 ;; This function is called by:
 29242 ;;		_EUSART1_Initialize
 29243 ;;		_INTERRUPT_InterruptManager
 29244 ;; This function uses a non-reentrant model
 29245 ;;
 29246                           
 29247     13FF                     _EUSART1_Transmit_ISR:	
 29248                           ;psect for function _EUSART1_Transmit_ISR
 29249                           
 29250     13FF                     i1l10232:	
 29251                           ;incstack = 0
 29252 ;; hardware stack exceeded
 29253                           ; Regs used in _EUSART1_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 29254                           
 29255                           
 29256                           ;mcc_generated_files/eusart1.c: 210:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 29257     13FF  3008               	movlw	8
 29258     1400  0140               	movlb	0	; select bank0
 29259     1401  025B               	subwf	_eusart1TxBufferRemaining,w	;volatile
 29260     1402  1803               	skipnc
 29261     1403  2C05               	goto	u705_21
 29262     1404  2C06               	goto	u705_20
 29263     1405                     u705_21:
 29264     1405  2C1E               	goto	i1l1232
 29265     1406                     u705_20:
 29266     1406                     i1l10234:
 29267                           
 29268                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 29269     1406  085C               	movf	_eusart1TxTail,w
 29270     1407  3EC5               	addlw	(low (_eusart1TxBuffer| 0))& (0+255)
 29271     1408  0086               	movwf	6
 29272     1409  0187               	clrf	7
 29273     140A  0801               	movf	1,w
 29274     140B  0142               	movlb	2	; select bank2
 29275     140C  009A               	movwf	26	;volatile
 29276     140D                     i1l10236:
 29277     140D  3001               	movlw	1
 29278     140E  00F0               	movwf	??_EUSART1_Transmit_ISR
 29279     140F  0870               	movf	??_EUSART1_Transmit_ISR,w
 29280     1410  0140               	movlb	0	; select bank0
 29281     1411  07DC               	addwf	_eusart1TxTail,f	;volatile
 29282     1412                     i1l10238:
 29283                           
 29284                           ;mcc_generated_files/eusart1.c: 213:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 29285     1412  3008               	movlw	8
 29286     1413  025C               	subwf	_eusart1TxTail,w	;volatile
 29287     1414  1C03               	skipc
 29288     1415  2C17               	goto	u706_21
 29289     1416  2C18               	goto	u706_20
 29290     1417                     u706_21:
 29291     1417  2C19               	goto	i1l10242
 29292     1418                     u706_20:
 29293     1418                     i1l10240:
 29294                           
 29295                           ;mcc_generated_files/eusart1.c: 214:         {;mcc_generated_files/eusart1.c: 215:      
      +                                 eusart1TxTail = 0;
 29296     1418  01DC               	clrf	_eusart1TxTail	;volatile
 29297     1419                     i1l10242:
 29298                           
 29299                           ;mcc_generated_files/eusart1.c: 217:         eusart1TxBufferRemaining++;
 29300     1419  3001               	movlw	1
 29301     141A  00F0               	movwf	??_EUSART1_Transmit_ISR
 29302     141B  0870               	movf	??_EUSART1_Transmit_ISR,w
 29303     141C  07DB               	addwf	_eusart1TxBufferRemaining,f	;volatile
 29304                           
 29305                           ;mcc_generated_files/eusart1.c: 218:     }
 29306     141D  2C20               	goto	i1l1235
 29307     141E                     i1l1232:	
 29308                           ;mcc_generated_files/eusart1.c: 219:     else
 29309                           
 29310                           
 29311                           ;mcc_generated_files/eusart1.c: 220:     {;mcc_generated_files/eusart1.c: 221:         P
      +                          IE3bits.TX1IE = 0;
 29312     141E  014E               	movlb	14	; select bank14
 29313     141F  1219               	bcf	25,4	;volatile
 29314     1420                     i1l1235:
 29315     1420  0008               	return
 29316     1421                     __end_of_EUSART1_Transmit_ISR:
 29317                           
 29318                           	psect	text168
 29319     13DD                     __ptext168:	
 29320 ;; *************** function _EUSART2_Transmit_ISR *****************
 29321 ;; Defined at:
 29322 ;;		line 197 in file "mcc_generated_files/eusart2.c"
 29323 ;; Parameters:    Size  Location     Type
 29324 ;;		None
 29325 ;; Auto vars:     Size  Location     Type
 29326 ;;		None
 29327 ;; Return value:  Size  Location     Type
 29328 ;;                  1    wreg      void 
 29329 ;; Registers used:
 29330 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 29331 ;; Tracked objects:
 29332 ;;		On entry : 0/0
 29333 ;;		On exit  : 0/0
 29334 ;;		Unchanged: 0/0
 29335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29338 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29339 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29340 ;;Total ram usage:        1 bytes
 29341 ;; Hardware stack levels used: 1
 29342 ;; This function calls:
 29343 ;;		Nothing
 29344 ;; This function is called by:
 29345 ;;		_EUSART2_Initialize
 29346 ;;		_INTERRUPT_InterruptManager
 29347 ;; This function uses a non-reentrant model
 29348 ;;
 29349                           
 29350     13DD                     _EUSART2_Transmit_ISR:	
 29351                           ;psect for function _EUSART2_Transmit_ISR
 29352                           
 29353     13DD                     i1l10200:	
 29354                           ;incstack = 0
 29355 ;; hardware stack exceeded
 29356                           ; Regs used in _EUSART2_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 29357                           
 29358                           
 29359                           ;mcc_generated_files/eusart2.c: 201:     if(sizeof(eusart2TxBuffer) > eusart2TxBufferRem
      +                          aining)
 29360     13DD  3008               	movlw	8
 29361     13DE  0140               	movlb	0	; select bank0
 29362     13DF  0261               	subwf	_eusart2TxBufferRemaining,w	;volatile
 29363     13E0  1803               	skipnc
 29364     13E1  2BE3               	goto	u700_21
 29365     13E2  2BE4               	goto	u700_20
 29366     13E3                     u700_21:
 29367     13E3  2BFC               	goto	i1l1082
 29368     13E4                     u700_20:
 29369     13E4                     i1l10202:
 29370                           
 29371                           ;mcc_generated_files/eusart2.c: 202:     {;mcc_generated_files/eusart2.c: 203:         T
      +                          X2REG = eusart2TxBuffer[eusart2TxTail++];
 29372     13E4  0862               	movf	_eusart2TxTail,w
 29373     13E5  3EDD               	addlw	(low (_eusart2TxBuffer| 0))& (0+255)
 29374     13E6  0086               	movwf	6
 29375     13E7  0187               	clrf	7
 29376     13E8  0801               	movf	1,w
 29377     13E9  0154               	movlb	20	; select bank20
 29378     13EA  009A               	movwf	26	;volatile
 29379     13EB                     i1l10204:
 29380     13EB  3001               	movlw	1
 29381     13EC  00F0               	movwf	??_EUSART2_Transmit_ISR
 29382     13ED  0870               	movf	??_EUSART2_Transmit_ISR,w
 29383     13EE  0140               	movlb	0	; select bank0
 29384     13EF  07E2               	addwf	_eusart2TxTail,f	;volatile
 29385     13F0                     i1l10206:
 29386                           
 29387                           ;mcc_generated_files/eusart2.c: 204:         if(sizeof(eusart2TxBuffer) <= eusart2TxTail
      +                          )
 29388     13F0  3008               	movlw	8
 29389     13F1  0262               	subwf	_eusart2TxTail,w	;volatile
 29390     13F2  1C03               	skipc
 29391     13F3  2BF5               	goto	u701_21
 29392     13F4  2BF6               	goto	u701_20
 29393     13F5                     u701_21:
 29394     13F5  2BF7               	goto	i1l10210
 29395     13F6                     u701_20:
 29396     13F6                     i1l10208:
 29397                           
 29398                           ;mcc_generated_files/eusart2.c: 205:         {;mcc_generated_files/eusart2.c: 206:      
      +                                 eusart2TxTail = 0;
 29399     13F6  01E2               	clrf	_eusart2TxTail	;volatile
 29400     13F7                     i1l10210:
 29401                           
 29402                           ;mcc_generated_files/eusart2.c: 208:         eusart2TxBufferRemaining++;
 29403     13F7  3001               	movlw	1
 29404     13F8  00F0               	movwf	??_EUSART2_Transmit_ISR
 29405     13F9  0870               	movf	??_EUSART2_Transmit_ISR,w
 29406     13FA  07E1               	addwf	_eusart2TxBufferRemaining,f	;volatile
 29407                           
 29408                           ;mcc_generated_files/eusart2.c: 209:     }
 29409     13FB  2BFE               	goto	i1l1085
 29410     13FC                     i1l1082:	
 29411                           ;mcc_generated_files/eusart2.c: 210:     else
 29412                           
 29413                           
 29414                           ;mcc_generated_files/eusart2.c: 211:     {;mcc_generated_files/eusart2.c: 212:         P
      +                          IE3bits.TX2IE = 0;
 29415     13FC  014E               	movlb	14	; select bank14
 29416     13FD  1319               	bcf	25,6	;volatile
 29417     13FE                     i1l1085:
 29418     13FE  0008               	return
 29419     13FF                     __end_of_EUSART2_Transmit_ISR:
 29420                           
 29421                           	psect	text169
 29422     0897                     __ptext169:	
 29423 ;; *************** function _EUSART1_Receive_ISR *****************
 29424 ;; Defined at:
 29425 ;;		line 225 in file "mcc_generated_files/eusart1.c"
 29426 ;; Parameters:    Size  Location     Type
 29427 ;;		None
 29428 ;; Auto vars:     Size  Location     Type
 29429 ;;		None
 29430 ;; Return value:  Size  Location     Type
 29431 ;;                  1    wreg      void 
 29432 ;; Registers used:
 29433 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 29434 ;; Tracked objects:
 29435 ;;		On entry : 0/0
 29436 ;;		On exit  : 0/0
 29437 ;;		Unchanged: 0/0
 29438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29443 ;;Total ram usage:        0 bytes
 29444 ;; Hardware stack levels used: 1
 29445 ;; Hardware stack levels required when called: 2
 29446 ;; This function calls:
 29447 ;;		NULL
 29448 ;;		_EUSART1_DefaultErrorHandler
 29449 ;;		_EUSART1_DefaultFramingErrorHandler
 29450 ;;		_EUSART1_DefaultOverrunErrorHandler
 29451 ;;		_EUSART1_RxDataHandler
 29452 ;; This function is called by:
 29453 ;;		_EUSART1_Initialize
 29454 ;;		_INTERRUPT_InterruptManager
 29455 ;; This function uses a non-reentrant model
 29456 ;;
 29457                           
 29458     0897                     _EUSART1_Receive_ISR:	
 29459                           ;psect for function _EUSART1_Receive_ISR
 29460                           
 29461     0897                     i1l10244:	
 29462                           ;incstack = 0
 29463 ;; hardware stack exceeded
 29464                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 29465                           
 29466                           
 29467                           ;mcc_generated_files/eusart1.c: 228:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 29468     0897  0140               	movlb	0	; select bank0
 29469     0898  085A               	movf	_eusart1RxHead,w	;volatile
 29470     0899  3EBD               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 29471     089A  0086               	movwf	6
 29472     089B  0187               	clrf	7
 29473     089C  0181               	clrf	1
 29474     089D                     i1l10246:
 29475                           
 29476                           ;mcc_generated_files/eusart1.c: 230:     if(RC1STAbits.FERR){
 29477     089D  0142               	movlb	2	; select bank2
 29478     089E  1D1D               	btfss	29,2	;volatile
 29479     089F  28A1               	goto	u707_21
 29480     08A0  28A2               	goto	u707_20
 29481     08A1                     u707_21:
 29482     08A1  28AE               	goto	i1l10252
 29483     08A2                     u707_20:
 29484     08A2                     i1l10248:
 29485                           
 29486                           ;mcc_generated_files/eusart1.c: 231:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 29487     08A2  0140               	movlb	0	; select bank0
 29488     08A3  085A               	movf	_eusart1RxHead,w	;volatile
 29489     08A4  3EBD               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 29490     08A5  0086               	movwf	6
 29491     08A6  0187               	clrf	7
 29492     08A7  1481               	bsf	1,1
 29493     08A8                     i1l10250:
 29494                           
 29495                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_FramingErrorHandler();
 29496     08A8  0142               	movlb	2	; select bank2
 29497     08A9  0862               	movf	(_EUSART1_FramingErrorHandler+1)^(0+256),w
 29498     08AA  008A               	movwf	10
 29499     08AB  0861               	movf	_EUSART1_FramingErrorHandler^(0+256),w
 29500     08AC  000A               	callw
 29501     08AD  3188               	pagesel	$
 29502     08AE                     i1l10252:
 29503                           
 29504                           ;mcc_generated_files/eusart1.c: 235:     if(RC1STAbits.OERR){
 29505     08AE  0142               	movlb	2	; select bank2
 29506     08AF  1C9D               	btfss	29,1	;volatile
 29507     08B0  28B2               	goto	u708_21
 29508     08B1  28B3               	goto	u708_20
 29509     08B2                     u708_21:
 29510     08B2  28BF               	goto	i1l10258
 29511     08B3                     u708_20:
 29512     08B3                     i1l10254:
 29513                           
 29514                           ;mcc_generated_files/eusart1.c: 236:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 29515     08B3  0140               	movlb	0	; select bank0
 29516     08B4  085A               	movf	_eusart1RxHead,w	;volatile
 29517     08B5  3EBD               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 29518     08B6  0086               	movwf	6
 29519     08B7  0187               	clrf	7
 29520     08B8  1501               	bsf	1,2
 29521     08B9                     i1l10256:
 29522                           
 29523                           ;mcc_generated_files/eusart1.c: 237:         EUSART1_OverrunErrorHandler();
 29524     08B9  0142               	movlb	2	; select bank2
 29525     08BA  0860               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+256),w
 29526     08BB  008A               	movwf	10
 29527     08BC  085F               	movf	_EUSART1_OverrunErrorHandler^(0+256),w
 29528     08BD  000A               	callw
 29529     08BE  3188               	pagesel	$
 29530     08BF                     i1l10258:
 29531                           
 29532                           ;mcc_generated_files/eusart1.c: 240:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 29533     08BF  0140               	movlb	0	; select bank0
 29534     08C0  085A               	movf	_eusart1RxHead,w	;volatile
 29535     08C1  3EBD               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 29536     08C2  0086               	movwf	6
 29537     08C3  0187               	clrf	7
 29538     08C4  0801               	movf	1,w
 29539     08C5  1903               	btfsc	3,2
 29540     08C6  28C8               	goto	u709_21
 29541     08C7  28C9               	goto	u709_20
 29542     08C8                     u709_21:
 29543     08C8  28D0               	goto	i1l10262
 29544     08C9                     u709_20:
 29545     08C9                     i1l10260:
 29546                           
 29547                           ;mcc_generated_files/eusart1.c: 241:         EUSART1_ErrorHandler();
 29548     08C9  0142               	movlb	2	; select bank2
 29549     08CA  085E               	movf	(_EUSART1_ErrorHandler+1)^(0+256),w
 29550     08CB  008A               	movwf	10
 29551     08CC  085D               	movf	_EUSART1_ErrorHandler^(0+256),w
 29552     08CD  000A               	callw
 29553     08CE  3188               	pagesel	$
 29554                           
 29555                           ;mcc_generated_files/eusart1.c: 242:     } else {
 29556     08CF  28D3               	goto	i1l1242
 29557     08D0                     i1l10262:
 29558                           
 29559                           ;mcc_generated_files/eusart1.c: 243:         EUSART1_RxDataHandler();
 29560     08D0  3192  22F8  3188   	fcall	_EUSART1_RxDataHandler
 29561     08D3                     i1l1242:
 29562     08D3  0008               	return
 29563     08D4                     __end_of_EUSART1_Receive_ISR:
 29564                           
 29565                           	psect	text170
 29566     085E                     __ptext170:	
 29567 ;; *************** function _EUSART2_Receive_ISR *****************
 29568 ;; Defined at:
 29569 ;;		line 216 in file "mcc_generated_files/eusart2.c"
 29570 ;; Parameters:    Size  Location     Type
 29571 ;;		None
 29572 ;; Auto vars:     Size  Location     Type
 29573 ;;		None
 29574 ;; Return value:  Size  Location     Type
 29575 ;;                  1    wreg      void 
 29576 ;; Registers used:
 29577 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 29578 ;; Tracked objects:
 29579 ;;		On entry : 0/0
 29580 ;;		On exit  : 0/0
 29581 ;;		Unchanged: 0/0
 29582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29587 ;;Total ram usage:        0 bytes
 29588 ;; Hardware stack levels used: 1
 29589 ;; Hardware stack levels required when called: 2
 29590 ;; This function calls:
 29591 ;;		NULL
 29592 ;;		_EUSART2_DefaultErrorHandler
 29593 ;;		_EUSART2_DefaultFramingErrorHandler
 29594 ;;		_EUSART2_DefaultOverrunErrorHandler
 29595 ;;		_EUSART2_RxDataHandler
 29596 ;; This function is called by:
 29597 ;;		_EUSART2_Initialize
 29598 ;;		_INTERRUPT_InterruptManager
 29599 ;; This function uses a non-reentrant model
 29600 ;;
 29601                           
 29602     085E                     _EUSART2_Receive_ISR:	
 29603                           ;psect for function _EUSART2_Receive_ISR
 29604                           
 29605     085E                     i1l14502:	
 29606                           ;incstack = 0
 29607 ;; hardware stack exceeded
 29608                           ; Regs used in _EUSART2_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 29609                           
 29610                           
 29611                           ;mcc_generated_files/eusart2.c: 219:     eusart2RxStatusBuffer[eusart2RxHead].status = 0
      +                          ;
 29612     085E  087C               	movf	_eusart2RxHead,w	;volatile
 29613     085F  3ECD               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 29614     0860  0086               	movwf	6
 29615     0861  0187               	clrf	7
 29616     0862  0181               	clrf	1
 29617     0863                     i1l14504:
 29618                           
 29619                           ;mcc_generated_files/eusart2.c: 221:     if(RC2STAbits.FERR){
 29620     0863  0154               	movlb	20	; select bank20
 29621     0864  1D1D               	btfss	29,2	;volatile
 29622     0865  2867               	goto	u1171_21
 29623     0866  2868               	goto	u1171_20
 29624     0867                     u1171_21:
 29625     0867  2873               	goto	i1l14510
 29626     0868                     u1171_20:
 29627     0868                     i1l14506:
 29628                           
 29629                           ;mcc_generated_files/eusart2.c: 222:         eusart2RxStatusBuffer[eusart2RxHead].ferr =
      +                           1;
 29630     0868  087C               	movf	_eusart2RxHead,w	;volatile
 29631     0869  3ECD               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 29632     086A  0086               	movwf	6
 29633     086B  0187               	clrf	7
 29634     086C  1481               	bsf	1,1
 29635     086D                     i1l14508:
 29636                           
 29637                           ;mcc_generated_files/eusart2.c: 223:         EUSART2_FramingErrorHandler();
 29638     086D  0142               	movlb	2	; select bank2
 29639     086E  086C               	movf	(_EUSART2_FramingErrorHandler+1)^(0+256),w
 29640     086F  008A               	movwf	10
 29641     0870  086B               	movf	_EUSART2_FramingErrorHandler^(0+256),w
 29642     0871  000A               	callw
 29643     0872  3188               	pagesel	$
 29644     0873                     i1l14510:
 29645                           
 29646                           ;mcc_generated_files/eusart2.c: 226:     if(RC2STAbits.OERR){
 29647     0873  0154               	movlb	20	; select bank20
 29648     0874  1C9D               	btfss	29,1	;volatile
 29649     0875  2877               	goto	u1172_21
 29650     0876  2878               	goto	u1172_20
 29651     0877                     u1172_21:
 29652     0877  2883               	goto	i1l14516
 29653     0878                     u1172_20:
 29654     0878                     i1l14512:
 29655                           
 29656                           ;mcc_generated_files/eusart2.c: 227:         eusart2RxStatusBuffer[eusart2RxHead].oerr =
      +                           1;
 29657     0878  087C               	movf	_eusart2RxHead,w	;volatile
 29658     0879  3ECD               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 29659     087A  0086               	movwf	6
 29660     087B  0187               	clrf	7
 29661     087C  1501               	bsf	1,2
 29662     087D                     i1l14514:
 29663                           
 29664                           ;mcc_generated_files/eusart2.c: 228:         EUSART2_OverrunErrorHandler();
 29665     087D  0142               	movlb	2	; select bank2
 29666     087E  086A               	movf	(_EUSART2_OverrunErrorHandler+1)^(0+256),w
 29667     087F  008A               	movwf	10
 29668     0880  0869               	movf	_EUSART2_OverrunErrorHandler^(0+256),w
 29669     0881  000A               	callw
 29670     0882  3188               	pagesel	$
 29671     0883                     i1l14516:
 29672                           
 29673                           ;mcc_generated_files/eusart2.c: 231:     if(eusart2RxStatusBuffer[eusart2RxHead].status)
      +                          {
 29674     0883  087C               	movf	_eusart2RxHead,w	;volatile
 29675     0884  3ECD               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 29676     0885  0086               	movwf	6
 29677     0886  0187               	clrf	7
 29678     0887  0801               	movf	1,w
 29679     0888  1903               	btfsc	3,2
 29680     0889  288B               	goto	u1173_21
 29681     088A  288C               	goto	u1173_20
 29682     088B                     u1173_21:
 29683     088B  2893               	goto	i1l14520
 29684     088C                     u1173_20:
 29685     088C                     i1l14518:
 29686                           
 29687                           ;mcc_generated_files/eusart2.c: 232:         EUSART2_ErrorHandler();
 29688     088C  0142               	movlb	2	; select bank2
 29689     088D  0868               	movf	(_EUSART2_ErrorHandler+1)^(0+256),w
 29690     088E  008A               	movwf	10
 29691     088F  0867               	movf	_EUSART2_ErrorHandler^(0+256),w
 29692     0890  000A               	callw
 29693     0891  3188               	pagesel	$
 29694                           
 29695                           ;mcc_generated_files/eusart2.c: 233:     } else {
 29696     0892  2896               	goto	i1l1092
 29697     0893                     i1l14520:
 29698                           
 29699                           ;mcc_generated_files/eusart2.c: 234:         EUSART2_RxDataHandler();
 29700     0893  3192  2235  3188   	fcall	_EUSART2_RxDataHandler
 29701     0896                     i1l1092:
 29702     0896  0008               	return
 29703     0897                     __end_of_EUSART2_Receive_ISR:
 29704                           
 29705                           	psect	text171
 29706     1E9B                     __ptext171:	
 29707 ;; *************** function _EUSART2_DefaultOverrunErrorHandler *****************
 29708 ;; Defined at:
 29709 ;;		line 252 in file "mcc_generated_files/eusart2.c"
 29710 ;; Parameters:    Size  Location     Type
 29711 ;;		None
 29712 ;; Auto vars:     Size  Location     Type
 29713 ;;		None
 29714 ;; Return value:  Size  Location     Type
 29715 ;;                  1    wreg      void 
 29716 ;; Registers used:
 29717 ;;		None
 29718 ;; Tracked objects:
 29719 ;;		On entry : 0/0
 29720 ;;		On exit  : 0/0
 29721 ;;		Unchanged: 0/0
 29722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29727 ;;Total ram usage:        0 bytes
 29728 ;; Hardware stack levels used: 1
 29729 ;; This function calls:
 29730 ;;		Nothing
 29731 ;; This function is called by:
 29732 ;;		_EUSART2_Initialize
 29733 ;;		_EUSART2_Receive_ISR
 29734 ;; This function uses a non-reentrant model
 29735 ;;
 29736                           
 29737     1E9B                     _EUSART2_DefaultOverrunErrorHandler:	
 29738                           ;psect for function _EUSART2_DefaultOverrunErrorHandler
 29739                           
 29740     1E9B                     i1l13704:	
 29741                           ;incstack = 0
 29742 ;; hardware stack exceeded
 29743                           ; Regs used in _EUSART2_DefaultOverrunErrorHandler: []
 29744                           
 29745                           
 29746                           ;mcc_generated_files/eusart2.c: 255:     RC2STAbits.CREN = 0;
 29747     1E9B  0154               	movlb	20	; select bank20
 29748     1E9C  121D               	bcf	29,4	;volatile
 29749                           
 29750                           ;mcc_generated_files/eusart2.c: 256:     RC2STAbits.CREN = 1;
 29751     1E9D  161D               	bsf	29,4	;volatile
 29752     1E9E                     i1l1102:
 29753     1E9E  0008               	return
 29754     1E9F                     __end_of_EUSART2_DefaultOverrunErrorHandler:
 29755                           
 29756                           	psect	text172
 29757     1E6F                     __ptext172:	
 29758 ;; *************** function _EUSART2_DefaultFramingErrorHandler *****************
 29759 ;; Defined at:
 29760 ;;		line 250 in file "mcc_generated_files/eusart2.c"
 29761 ;; Parameters:    Size  Location     Type
 29762 ;;		None
 29763 ;; Auto vars:     Size  Location     Type
 29764 ;;		None
 29765 ;; Return value:  Size  Location     Type
 29766 ;;                  1    wreg      void 
 29767 ;; Registers used:
 29768 ;;		None
 29769 ;; Tracked objects:
 29770 ;;		On entry : 0/0
 29771 ;;		On exit  : 0/0
 29772 ;;		Unchanged: 0/0
 29773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29778 ;;Total ram usage:        0 bytes
 29779 ;; Hardware stack levels used: 1
 29780 ;; This function calls:
 29781 ;;		Nothing
 29782 ;; This function is called by:
 29783 ;;		_EUSART2_Initialize
 29784 ;;		_EUSART2_Receive_ISR
 29785 ;; This function uses a non-reentrant model
 29786 ;;
 29787                           
 29788     1E6F                     _EUSART2_DefaultFramingErrorHandler:	
 29789                           ;psect for function _EUSART2_DefaultFramingErrorHandler
 29790                           
 29791     1E6F                     i1l1099:	
 29792                           ;incstack = 0
 29793 ;; hardware stack exceeded
 29794                           ; Regs used in _EUSART2_DefaultFramingErrorHandler: []
 29795                           
 29796     1E6F  0008               	return
 29797     1E70                     __end_of_EUSART2_DefaultFramingErrorHandler:
 29798                           
 29799                           	psect	text173
 29800     1E97                     __ptext173:	
 29801 ;; *************** function _EUSART2_DefaultErrorHandler *****************
 29802 ;; Defined at:
 29803 ;;		line 260 in file "mcc_generated_files/eusart2.c"
 29804 ;; Parameters:    Size  Location     Type
 29805 ;;		None
 29806 ;; Auto vars:     Size  Location     Type
 29807 ;;		None
 29808 ;; Return value:  Size  Location     Type
 29809 ;;                  1    wreg      void 
 29810 ;; Registers used:
 29811 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 29812 ;; Tracked objects:
 29813 ;;		On entry : 0/0
 29814 ;;		On exit  : 0/0
 29815 ;;		Unchanged: 0/0
 29816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29821 ;;Total ram usage:        0 bytes
 29822 ;; Hardware stack levels used: 1
 29823 ;; Hardware stack levels required when called: 1
 29824 ;; This function calls:
 29825 ;;		_EUSART2_RxDataHandler
 29826 ;; This function is called by:
 29827 ;;		_EUSART2_Initialize
 29828 ;;		_EUSART2_Receive_ISR
 29829 ;; This function uses a non-reentrant model
 29830 ;;
 29831                           
 29832     1E97                     _EUSART2_DefaultErrorHandler:	
 29833                           ;psect for function _EUSART2_DefaultErrorHandler
 29834                           
 29835     1E97                     i1l13706:	
 29836                           ;incstack = 0
 29837 ;; hardware stack exceeded
 29838                           ; Regs used in _EUSART2_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 29839                           
 29840                           
 29841                           ;mcc_generated_files/eusart2.c: 261:     EUSART2_RxDataHandler();
 29842     1E97  3192  2235  319E   	fcall	_EUSART2_RxDataHandler
 29843     1E9A                     i1l1105:
 29844     1E9A  0008               	return
 29845     1E9B                     __end_of_EUSART2_DefaultErrorHandler:
 29846                           
 29847                           	psect	text174
 29848     1235                     __ptext174:	
 29849 ;; *************** function _EUSART2_RxDataHandler *****************
 29850 ;; Defined at:
 29851 ;;		line 240 in file "mcc_generated_files/eusart2.c"
 29852 ;; Parameters:    Size  Location     Type
 29853 ;;		None
 29854 ;; Auto vars:     Size  Location     Type
 29855 ;;		None
 29856 ;; Return value:  Size  Location     Type
 29857 ;;                  1    wreg      void 
 29858 ;; Registers used:
 29859 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 29860 ;; Tracked objects:
 29861 ;;		On entry : 0/0
 29862 ;;		On exit  : 0/0
 29863 ;;		Unchanged: 0/0
 29864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29867 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29868 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29869 ;;Total ram usage:        1 bytes
 29870 ;; Hardware stack levels used: 1
 29871 ;; This function calls:
 29872 ;;		Nothing
 29873 ;; This function is called by:
 29874 ;;		_EUSART2_Receive_ISR
 29875 ;;		_EUSART2_DefaultErrorHandler
 29876 ;; This function uses a non-reentrant model
 29877 ;;
 29878                           
 29879     1235                     _EUSART2_RxDataHandler:	
 29880                           ;psect for function _EUSART2_RxDataHandler
 29881                           
 29882     1235                     i1l13494:	
 29883                           ;incstack = 0
 29884 ;; hardware stack exceeded
 29885                           ; Regs used in _EUSART2_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 29886                           
 29887                           
 29888                           ;mcc_generated_files/eusart2.c: 242:     eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 29889     1235  087C               	movf	_eusart2RxHead,w
 29890     1236  3ED5               	addlw	(low (_eusart2RxBuffer| 0))& (0+255)
 29891     1237  0086               	movwf	6
 29892     1238  0187               	clrf	7
 29893     1239  0154               	movlb	20	; select bank20
 29894     123A  0819               	movf	25,w	;volatile
 29895     123B  0081               	movwf	1
 29896     123C                     i1l13496:
 29897     123C  3001               	movlw	1
 29898     123D  00F0               	movwf	??_EUSART2_RxDataHandler
 29899     123E  0870               	movf	??_EUSART2_RxDataHandler,w
 29900     123F  07FC               	addwf	_eusart2RxHead,f	;volatile
 29901     1240                     i1l13498:
 29902                           
 29903                           ;mcc_generated_files/eusart2.c: 243:     if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 29904     1240  3008               	movlw	8
 29905     1241  027C               	subwf	_eusart2RxHead,w	;volatile
 29906     1242  1C03               	skipc
 29907     1243  2A45               	goto	u1045_21
 29908     1244  2A46               	goto	u1045_20
 29909     1245                     u1045_21:
 29910     1245  2A47               	goto	i1l13502
 29911     1246                     u1045_20:
 29912     1246                     i1l13500:
 29913                           
 29914                           ;mcc_generated_files/eusart2.c: 244:     {;mcc_generated_files/eusart2.c: 245:         e
      +                          usart2RxHead = 0;
 29915     1246  01FC               	clrf	_eusart2RxHead	;volatile
 29916     1247                     i1l13502:
 29917                           
 29918                           ;mcc_generated_files/eusart2.c: 247:     eusart2RxCount++;
 29919     1247  3001               	movlw	1
 29920     1248  00F0               	movwf	??_EUSART2_RxDataHandler
 29921     1249  0870               	movf	??_EUSART2_RxDataHandler,w
 29922     124A  0140               	movlb	0	; select bank0
 29923     124B  07DF               	addwf	_eusart2RxCount,f	;volatile
 29924     124C                     i1l1096:
 29925     124C  0008               	return
 29926     124D                     __end_of_EUSART2_RxDataHandler:
 29927                           
 29928                           	psect	text175
 29929     1E93                     __ptext175:	
 29930 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 29931 ;; Defined at:
 29932 ;;		line 261 in file "mcc_generated_files/eusart1.c"
 29933 ;; Parameters:    Size  Location     Type
 29934 ;;		None
 29935 ;; Auto vars:     Size  Location     Type
 29936 ;;		None
 29937 ;; Return value:  Size  Location     Type
 29938 ;;                  1    wreg      void 
 29939 ;; Registers used:
 29940 ;;		None
 29941 ;; Tracked objects:
 29942 ;;		On entry : 0/0
 29943 ;;		On exit  : 0/0
 29944 ;;		Unchanged: 0/0
 29945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29950 ;;Total ram usage:        0 bytes
 29951 ;; Hardware stack levels used: 1
 29952 ;; This function calls:
 29953 ;;		Nothing
 29954 ;; This function is called by:
 29955 ;;		_EUSART1_Initialize
 29956 ;;		_EUSART1_Receive_ISR
 29957 ;; This function uses a non-reentrant model
 29958 ;;
 29959                           
 29960     1E93                     _EUSART1_DefaultOverrunErrorHandler:	
 29961                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 29962                           
 29963     1E93                     i1l9246:	
 29964                           ;incstack = 0
 29965 ;; hardware stack exceeded
 29966                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 29967                           
 29968                           
 29969                           ;mcc_generated_files/eusart1.c: 264:     RC1STAbits.CREN = 0;
 29970     1E93  0142               	movlb	2	; select bank2
 29971     1E94  121D               	bcf	29,4	;volatile
 29972                           
 29973                           ;mcc_generated_files/eusart1.c: 265:     RC1STAbits.CREN = 1;
 29974     1E95  161D               	bsf	29,4	;volatile
 29975     1E96                     i1l1252:
 29976     1E96  0008               	return
 29977     1E97                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 29978                           
 29979                           	psect	text176
 29980     1E6E                     __ptext176:	
 29981 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 29982 ;; Defined at:
 29983 ;;		line 259 in file "mcc_generated_files/eusart1.c"
 29984 ;; Parameters:    Size  Location     Type
 29985 ;;		None
 29986 ;; Auto vars:     Size  Location     Type
 29987 ;;		None
 29988 ;; Return value:  Size  Location     Type
 29989 ;;                  1    wreg      void 
 29990 ;; Registers used:
 29991 ;;		None
 29992 ;; Tracked objects:
 29993 ;;		On entry : 0/0
 29994 ;;		On exit  : 0/0
 29995 ;;		Unchanged: 0/0
 29996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30001 ;;Total ram usage:        0 bytes
 30002 ;; Hardware stack levels used: 1
 30003 ;; This function calls:
 30004 ;;		Nothing
 30005 ;; This function is called by:
 30006 ;;		_EUSART1_Initialize
 30007 ;;		_EUSART1_Receive_ISR
 30008 ;; This function uses a non-reentrant model
 30009 ;;
 30010                           
 30011     1E6E                     _EUSART1_DefaultFramingErrorHandler:	
 30012                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 30013                           
 30014     1E6E                     i1l1249:	
 30015                           ;incstack = 0
 30016 ;; hardware stack exceeded
 30017                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 30018                           
 30019     1E6E  0008               	return
 30020     1E6F                     __end_of_EUSART1_DefaultFramingErrorHandler:
 30021                           
 30022                           	psect	text177
 30023     1E8F                     __ptext177:	
 30024 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 30025 ;; Defined at:
 30026 ;;		line 269 in file "mcc_generated_files/eusart1.c"
 30027 ;; Parameters:    Size  Location     Type
 30028 ;;		None
 30029 ;; Auto vars:     Size  Location     Type
 30030 ;;		None
 30031 ;; Return value:  Size  Location     Type
 30032 ;;                  1    wreg      void 
 30033 ;; Registers used:
 30034 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 30035 ;; Tracked objects:
 30036 ;;		On entry : 0/0
 30037 ;;		On exit  : 0/0
 30038 ;;		Unchanged: 0/0
 30039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 30040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30044 ;;Total ram usage:        0 bytes
 30045 ;; Hardware stack levels used: 1
 30046 ;; Hardware stack levels required when called: 1
 30047 ;; This function calls:
 30048 ;;		_EUSART1_RxDataHandler
 30049 ;; This function is called by:
 30050 ;;		_EUSART1_Initialize
 30051 ;;		_EUSART1_Receive_ISR
 30052 ;; This function uses a non-reentrant model
 30053 ;;
 30054                           
 30055     1E8F                     _EUSART1_DefaultErrorHandler:	
 30056                           ;psect for function _EUSART1_DefaultErrorHandler
 30057                           
 30058     1E8F                     i1l9248:	
 30059                           ;incstack = 0
 30060 ;; hardware stack exceeded
 30061                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 30062                           
 30063                           
 30064                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_RxDataHandler();
 30065     1E8F  3192  22F8  319E   	fcall	_EUSART1_RxDataHandler
 30066     1E92                     i1l1255:
 30067     1E92  0008               	return
 30068     1E93                     __end_of_EUSART1_DefaultErrorHandler:
 30069                           
 30070                           	psect	text178
 30071     12F8                     __ptext178:	
 30072 ;; *************** function _EUSART1_RxDataHandler *****************
 30073 ;; Defined at:
 30074 ;;		line 249 in file "mcc_generated_files/eusart1.c"
 30075 ;; Parameters:    Size  Location     Type
 30076 ;;		None
 30077 ;; Auto vars:     Size  Location     Type
 30078 ;;		None
 30079 ;; Return value:  Size  Location     Type
 30080 ;;                  1    wreg      void 
 30081 ;; Registers used:
 30082 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 30083 ;; Tracked objects:
 30084 ;;		On entry : 0/0
 30085 ;;		On exit  : 0/0
 30086 ;;		Unchanged: 0/0
 30087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 30088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30090 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30091 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30092 ;;Total ram usage:        1 bytes
 30093 ;; Hardware stack levels used: 1
 30094 ;; This function calls:
 30095 ;;		Nothing
 30096 ;; This function is called by:
 30097 ;;		_EUSART1_Receive_ISR
 30098 ;;		_EUSART1_DefaultErrorHandler
 30099 ;; This function uses a non-reentrant model
 30100 ;;
 30101                           
 30102     12F8                     _EUSART1_RxDataHandler:	
 30103                           ;psect for function _EUSART1_RxDataHandler
 30104                           
 30105     12F8                     i1l8974:	
 30106                           ;incstack = 0
 30107 ;; hardware stack exceeded
 30108                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 30109                           
 30110                           
 30111                           ;mcc_generated_files/eusart1.c: 251:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 30112     12F8  0140               	movlb	0	; select bank0
 30113     12F9  085A               	movf	_eusart1RxHead,w
 30114     12FA  3E44               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 30115     12FB  0086               	movwf	6
 30116     12FC  3001               	movlw	1	; select bank2/3
 30117     12FD  0087               	movwf	7
 30118     12FE  0142               	movlb	2	; select bank2
 30119     12FF  0819               	movf	25,w	;volatile
 30120     1300  0081               	movwf	1
 30121     1301                     i1l8976:
 30122     1301  3001               	movlw	1
 30123     1302  00F0               	movwf	??_EUSART1_RxDataHandler
 30124     1303  0870               	movf	??_EUSART1_RxDataHandler,w
 30125     1304  0140               	movlb	0	; select bank0
 30126     1305  07DA               	addwf	_eusart1RxHead,f	;volatile
 30127     1306                     i1l8978:
 30128                           
 30129                           ;mcc_generated_files/eusart1.c: 252:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 30130     1306  3008               	movlw	8
 30131     1307  025A               	subwf	_eusart1RxHead,w	;volatile
 30132     1308  1C03               	skipc
 30133     1309  2B0B               	goto	u567_21
 30134     130A  2B0C               	goto	u567_20
 30135     130B                     u567_21:
 30136     130B  2B0D               	goto	i1l8982
 30137     130C                     u567_20:
 30138     130C                     i1l8980:
 30139                           
 30140                           ;mcc_generated_files/eusart1.c: 253:     {;mcc_generated_files/eusart1.c: 254:         e
      +                          usart1RxHead = 0;
 30141     130C  01DA               	clrf	_eusart1RxHead	;volatile
 30142     130D                     i1l8982:
 30143                           
 30144                           ;mcc_generated_files/eusart1.c: 256:     eusart1RxCount++;
 30145     130D  3001               	movlw	1
 30146     130E  00F0               	movwf	??_EUSART1_RxDataHandler
 30147     130F  0870               	movf	??_EUSART1_RxDataHandler,w
 30148     1310  07D8               	addwf	_eusart1RxCount,f	;volatile
 30149     1311                     i1l1246:
 30150     1311  0008               	return
 30151     1312                     __end_of_EUSART1_RxDataHandler:
 30152     007E                     btemp	set	126	;btemp
 30153     007E                     int$flags	set	126
 30154     007E                     wtemp0	set	126
 30155                           
 30156                           	psect	idloc
 30157                           
 30158                           ;Config register IDLOC0 @ 0x8000
 30159                           ;	unspecified, using default values
 30160     8000                     	org	32768
 30161     8000  3FFF               	dw	16383
 30162                           
 30163                           ;Config register IDLOC1 @ 0x8001
 30164                           ;	unspecified, using default values
 30165     8001                     	org	32769
 30166     8001  3FFF               	dw	16383
 30167                           
 30168                           ;Config register IDLOC2 @ 0x8002
 30169                           ;	unspecified, using default values
 30170     8002                     	org	32770
 30171     8002  3FFF               	dw	16383
 30172                           
 30173                           ;Config register IDLOC3 @ 0x8003
 30174                           ;	unspecified, using default values
 30175     8003                     	org	32771
 30176     8003  3FFF               	dw	16383
 30177                           
 30178                           	psect	config
 30179                           
 30180                           ;Config register CONFIG1 @ 0x8007
 30181                           ;	External Oscillator mode selection bits
 30182                           ;	FEXTOSC = OFF, Oscillator not enabled
 30183                           ;	Power-up default value for COSC bits
 30184                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 30185                           ;	Clock Out Enable bit
 30186                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 30187                           ;	Clock Switch Enable bit
 30188                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 30189                           ;	Fail-Safe Clock Monitor Enable bit
 30190                           ;	FCMEN = ON, FSCM timer enabled
 30191     8007                     	org	32775
 30192     8007  3FEC               	dw	16364
 30193                           
 30194                           ;Config register CONFIG2 @ 0x8008
 30195                           ;	Master Clear Enable bit
 30196                           ;	MCLRE = ON, MCLR pin is Master Clear function
 30197                           ;	Power-up Timer Enable bit
 30198                           ;	PWRTS = OFF, PWRT disabled
 30199                           ;	Low-Power BOR enable bit
 30200                           ;	LPBOREN = OFF, ULPBOR disabled
 30201                           ;	Brown-out reset enable bits
 30202                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 30203                           ;	Brown-out Reset Voltage Selection
 30204                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
 30205                           ;	Zero-cross detect disable
 30206                           ;	ZCDDIS = OFF, Zero-cross detect circuit is disabled at POR.
 30207                           ;	Peripheral Pin Select one-way control
 30208                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 30209                           ;	Stack Overflow/Underflow Reset Enable bit
 30210                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 30211     8008                     	org	32776
 30212     8008  3FFF               	dw	16383
 30213                           
 30214                           ;Config register CONFIG3 @ 0x8009
 30215                           ;	WDT Period Select bits
 30216                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 30217                           ;	WDT operating mode
 30218                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 30219                           ;	WDT Window Select bits
 30220                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 30221                           ;	WDT input clock selector
 30222                           ;	WDTCCS = SC, Software Control
 30223     8009                     	org	32777
 30224     8009  3F9F               	dw	16287
 30225                           
 30226                           ;Config register CONFIG4 @ 0x800A
 30227                           ;	Boot Block Size Selection bits
 30228                           ;	BBSIZE = BB512, 512 words boot block size
 30229                           ;	Boot Block Enable bit
 30230                           ;	BBEN = OFF, Boot Block disabled
 30231                           ;	SAF Enable bit
 30232                           ;	SAFEN = OFF, SAF disabled
 30233                           ;	Application Block Write Protection bit
 30234                           ;	WRTAPP = OFF, Application Block not write protected
 30235                           ;	Boot Block Write Protection bit
 30236                           ;	WRTB = OFF, Boot Block not write protected
 30237                           ;	Configuration Register Write Protection bit
 30238                           ;	WRTC = OFF, Configuration Register not write protected
 30239                           ;	Data EEPROM write protection bit
 30240                           ;	WRTD = OFF, Data EEPROM NOT write protected
 30241                           ;	Storage Area Flash Write Protection bit
 30242                           ;	WRTSAF = OFF, SAF not write protected
 30243                           ;	Low Voltage Programming Enable bit
 30244                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 30245     800A                     	org	32778
 30246     800A  3FFF               	dw	16383
 30247                           
 30248                           ;Config register CONFIG5 @ 0x800B
 30249                           ;	UserNVM Program memory code protection bit
 30250                           ;	CP = OFF, UserNVM code protection disabled
 30251     800B                     	org	32779
 30252     800B  3FFF               	dw	16383

Data Sizes:
    Strings     29
    Constant    147
    Data        19
    BSS         458
    Persistent  54
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     42      80
    BANK1            80      1      80
    BANK2            80      0      77
    BANK3            80      0      64
    BANK4            80      0      80
    BANK5            80      0      80
    BANK6            80      0      80
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    asyncBuffer	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), NULL(NULL[0]), 

    bitWrite@reg	PTR unsigned short  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    BMA253_GetAccelDataXYZ@accelData	PTR struct . size(1) Largest target is 6
		 -> LIGHTBLUE_AccelSensor@accelData(BANK0[6]), 

    BMA253_GetAccelDataY@yAccelData	PTR short  size(1) Largest target is 2
		 -> BMA253_GetAccelDataXYZ@sensorValue(BANK0[2]), 

    BMA253_GetAccelDataZ@zAccelData	PTR short  size(1) Largest target is 2
		 -> BMA253_GetAccelDataXYZ@sensorValue(BANK0[2]), 

    bufferBlock$data	PTR unsigned char  size(2) Largest target is 0

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    d$data	PTR unsigned char  size(2) Largest target is 0

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), NULL(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), NULL(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), NULL(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), NULL(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), NULL(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), NULL(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), NULL(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), NULL(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), NULL(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), NULL(), 

    fsmStateTable	const PTR FTN()enum E12652[16] size(2) Largest target is 1
		 -> do_I2C_DO_ACK(), do_I2C_DO_ADDRESS_NACK(), do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), 
		 -> do_I2C_IDLE(), do_I2C_RCEN(), do_I2C_RESET(), do_I2C_RX(), 
		 -> do_I2C_SEND_ADR_READ(), do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_RESTART(), do_I2C_SEND_RESTART_READ(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_STOP(), do_I2C_TX(), do_I2C_TX_EMPTY(), 

    I2C1_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_DO_TX$5433	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1239(), 
		 -> rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1250(), rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1273(), 
		 -> wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1256(), wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1262(), 
		 -> NULL(), 

    I2C1_DO_TX$5433$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_DO_TX$5438	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_busCollisionISR(), NULL(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_ISR(), NULL(), 

    i2c1_fsmStateTable	const PTR FTN()enum E12565[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_IDLE(), I2C1_DO_RCEN(), I2C1_DO_RESET(), 
		 -> I2C1_DO_RX(), I2C1_DO_RX_ACK(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_SEND_ADR_READ(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_READ(), 
		 -> I2C1_DO_SEND_RESTART_WRITE(), I2C1_DO_SEND_STOP(), I2C1_DO_TX(), I2C1_DO_TX_EMPTY(), 

    I2C1_MasterFsm$5432	const PTR FTN()enum E12565 size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_IDLE(), I2C1_DO_RCEN(), I2C1_DO_RESET(), 
		 -> I2C1_DO_RX(), I2C1_DO_RX_ACK(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_SEND_ADR_READ(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_READ(), 
		 -> I2C1_DO_SEND_RESTART_WRITE(), I2C1_DO_SEND_STOP(), I2C1_DO_TX(), I2C1_DO_TX_EMPTY(), 

    I2C1_Read1ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_Read2ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), 

    I2C1_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_SetBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> bufferBlock$data(COMMON[2]), d$data(COMMON[2]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 
		 -> I2C1_Read1ByteRegister@returnValue$data(COMMON[2]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read2ByteRegister@returnValue$data(COMMON[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@data$data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@data$data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_read1ByteRegister@d2$data(COMMON[2]), i2c_read1ByteRegister@reg(BANK0[1]), i2c_read2ByteRegister@reg(BANK0[1]), 
		 -> i2c_read2ByteRegister@result(BANK0[2]), i2c_read2ByteRegister@result$data(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), i2c_readDataBlock@reg(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write1ByteRegister@data$data(COMMON[2]), i2c_write1ByteRegister@reg(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_write2ByteRegister@data$data(COMMON[2]), i2c_write2ByteRegister@reg(COMMON[1]), readRegisters@dataBuffer(BANK0[1]), NULL(NULL[0]), 

    I2C1_SetCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1239(), rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1250(), 
		 -> rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1273(), wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1256(), 
		 -> wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1262(), NULL(), 

    I2C1_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1239(), rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1250(), 
		 -> rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1273(), wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1256(), 
		 -> wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1262(), NULL(), 

    I2C1_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_Status$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_Status$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1239(), 
		 -> rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1250(), rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1273(), 
		 -> wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1256(), wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1262(), 
		 -> NULL(), 

    I2C1_Status$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> bufferBlock$data(COMMON[2]), d$data(COMMON[2]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 
		 -> I2C1_Read1ByteRegister@returnValue$data(COMMON[2]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read2ByteRegister@returnValue$data(COMMON[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@data$data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@data$data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_read1ByteRegister@d2$data(COMMON[2]), i2c_read1ByteRegister@reg(BANK0[1]), i2c_read2ByteRegister@reg(BANK0[1]), 
		 -> i2c_read2ByteRegister@result(BANK0[2]), i2c_read2ByteRegister@result$data(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), i2c_readDataBlock@reg(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write1ByteRegister@data$data(COMMON[2]), i2c_write1ByteRegister@reg(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_write2ByteRegister@data$data(COMMON[2]), i2c_write2ByteRegister@reg(COMMON[1]), readRegisters@dataBuffer(BANK0[1]), NULL(NULL[0]), 

    I2C1_Write1ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_Write2ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    i2c_read1ByteRegister@d2$data	PTR unsigned char  size(2) Largest target is 0

    i2c_read2ByteRegister@result$data	PTR unsigned char  size(2) Largest target is 0

    i2c_readNBytes@data	PTR void  size(1) Largest target is 1
		 -> readRegisters@dataBuffer(BANK0[1]), 

    i2c_status$callbackPayload	PTR void [6] size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c_status$callbackTable	PTR FTN(PTR void ,)enum E12498[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    i2c_status$data_ptr	PTR unsigned char  size(2) Largest target is 0

    i2c_write1ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    i2c_write2ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    IOCAF6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF6_DefaultInterruptHandler(), NULL(), 

    IOCAF6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF6_DefaultInterruptHandler(), 

    LIGHTBLUE_SendPacket@payload	PTR unsigned char  size(1) Largest target is 19
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_LedState@payload(BANK0[3]), LIGHTBLUE_PushButton@payload(BANK0[3]), LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), 
		 -> LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), 

    LIGHTBLUE_SendSerialData@serialData	PTR unsigned char  size(1) Largest target is 80
		 -> lightBlueSerial(BANK4[80]), 

    LIGHTBLUE_SplitByte@payload	PTR unsigned char  size(1) Largest target is 19
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_LedState@payload(BANK0[3]), LIGHTBLUE_PushButton@payload(BANK0[3]), LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), 
		 -> LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), 

    LIGHTBLUE_SplitWord@payload	PTR unsigned char  size(1) Largest target is 13
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), 

    NULL$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    pHead	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), NULL(NULL[0]), 

    protocol_version_number	const PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    rd1RegCompleteHandler@i2c1_master_example$F1239@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rd2RegCompleteHandler@i2c1_master_example$F1250@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@i2c1_master_example$F1273@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@i2c1_master_example$F1273@ptr$data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@p$data	PTR unsigned char  size(2) Largest target is 0

    readRegisters@dataBuffer	PTR unsigned char  size(1) Largest target is 8
		 -> getManufacturerID@databuffer(COMMON[2]), getTemp@databuffer(COMMON[2]), readRegister@regVal(BANK0[1]), readWakeUpAndSleepData@wakeupRegisterRead(COMMON[8]), 

    RN487X$AsyncHandler	PTR FTN(PTR unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_MessageHandler(), 

    RN487X$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_rx_ready(), 

    RN487X$DelayMs	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> RN487X_Delay(), 

    RN487X$IndicateRx	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_IndicateRx(), 

    RN487X$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> RN487X_Read@rn487x_interface$F1381(), 

    RN487X$ResetModule	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_Reset(), 

    RN487X$SetSystemMode	PTR FTN(enum E271,)void  size(2) Largest target is 1
		 -> RN487X_SetSystemMode(), 

    RN487X$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_tx_done(), 

    RN487X$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_Write(), 

    rn487x_driver_version	const PTR const unsigned char  size(2) Largest target is 6
		 -> STR_6(CODE[6]), 

    RN487X_MessageHandler@message	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), NULL(NULL[0]), 

    rn487x_PrintMessage@passedMessage	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), NULL(NULL[0]), 

    RN487X_ReadMsg@expectedMsg	PTR const unsigned char  size(2) Largest target is 11
		 -> RN487X_EnterCmdMode@cmdPrompt(CODE[5]), RN487X_EnterDataMode@cmdPrompt(CODE[5]), RN487X_GetInputsValues@ioValue(COMMON[2]), RN487X_RebootCmd@reboot(CODE[11]), 

    RN487X_SendCmd@cmd	PTR const unsigned char  size(1) Largest target is 64
		 -> cmdBuf(BANK3[64]), 

    RN487X_SetAsyncMessageHandler@pBuffer	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), 

    S1020$data	PTR unsigned char  size(2) Largest target is 0

    S231$8$0	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), NULL(NULL[0]), 

    S231$AsyncHandler	PTR FTN(PTR unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_MessageHandler(), 

    S231$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_rx_ready(), 

    S231$DelayMs	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> RN487X_Delay(), 

    S231$IndicateRx	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_IndicateRx(), 

    S231$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> RN487X_Read@rn487x_interface$F1381(), 

    S231$ResetModule	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_Reset(), 

    S231$SetSystemMode	PTR FTN(enum E271,)void  size(2) Largest target is 1
		 -> RN487X_SetSystemMode(), 

    S231$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_tx_done(), 

    S231$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_Write(), 

    S3148$0$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    S3148$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    S3148$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1239(), 
		 -> rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1250(), rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1273(), 
		 -> wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1256(), wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1262(), 
		 -> NULL(), 

    S3148$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read1ByteRegister@reg(BANK0[1]), 
		 -> i2c_read2ByteRegister@reg(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), i2c_readDataBlock@reg(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write1ByteRegister@reg(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), i2c_write2ByteRegister@reg(COMMON[1]), 
		 -> readRegisters@dataBuffer(BANK0[1]), NULL(NULL[0]), 

    S360$4$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    S360$6$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    S360$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_rx_ready(), EUSART2_is_rx_ready(), 

    S360$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Initialize(), EUSART2_Initialize(), 

    S360$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_Read(), EUSART2_Read(), 

    S360$RxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    S360$SetRxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetRxInterruptHandler(), EUSART2_SetRxInterruptHandler(), 

    S360$SetTxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetTxInterruptHandler(), EUSART2_SetTxInterruptHandler(), 

    S360$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_done(), EUSART2_is_tx_done(), 

    S360$TransmitReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_ready(), EUSART2_is_tx_ready(), 

    S360$TxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    S360$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART1_Write(), EUSART2_Write(), 

    S674$11$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S674$callbackPayload	PTR void [6] size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S674$callbackTable	PTR FTN(PTR void ,)enum E12498[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    S674$data_ptr	PTR unsigned char  size(2) Largest target is 0

    sp__strchr	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 32
		 -> rn487x_PrintMessage@printCharacter(BANK0[32]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), NULL(NULL[0]), 

    strchr@s	PTR const unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), NULL(NULL[0]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 32
		 -> rn487x_PrintMessage@printCharacter(BANK0[32]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 32
		 -> rn487x_PrintMessage@printCharacter(BANK0[32]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), NULL(NULL[0]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_LedState@payload(BANK0[3]), LIGHTBLUE_PushButton@payload(BANK0[3]), LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), 
		 -> LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), lightBlueSerial(BANK4[80]), statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), 
		 -> STR_1(CODE[6]), STR_3(CODE[11]), STR_5(CODE[12]), NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_LedState@payload(BANK0[3]), LIGHTBLUE_PushButton@payload(BANK0[3]), LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), 
		 -> LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), lightBlueSerial(BANK4[80]), statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), 
		 -> STR_1(CODE[6]), STR_3(CODE[11]), STR_5(CODE[12]), NULL(NULL[0]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), NULL(NULL[0]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[11]), STR_5(CODE[12]), 

    strstr@h	PTR const unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), NULL(NULL[0]), 

    strstr@n	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[11]), STR_5(CODE[12]), 

    TMAG5273_GetTemperatureValue@temperature	PTR short  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    uart$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_rx_ready(), EUSART2_is_rx_ready(), 

    uart$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Initialize(), EUSART2_Initialize(), 

    uart$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_Read(), EUSART2_Read(), 

    uart$RxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    uart$SetRxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetRxInterruptHandler(), EUSART2_SetRxInterruptHandler(), 

    uart$SetTxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetTxInterruptHandler(), EUSART2_SetTxInterruptHandler(), 

    uart$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_done(), EUSART2_is_tx_done(), 

    uart$TransmitReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_ready(), EUSART2_is_tx_ready(), 

    uart$TxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    uart$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART1_Write(), EUSART2_Write(), 

    wr1RegCompleteHandler@i2c1_master_example$F1256@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    wr2RegCompleteHandler@i2c1_master_example$F1262@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    _writeRegister->_i2c_write1ByteRegister
    _PIN_MANAGER_Initialize->_IOCAF6_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _RN487X_MessageHandler->_strstr
    _strstr->_strncmp
    _rn487x_PrintMessageStart->_EUSART1_Write
    _rn487x_PrintMessageStart->_EUSART2_Write
    _rn487x_PrintMessageEnd->_EUSART1_Write
    _rn487x_PrintMessageEnd->_EUSART2_Write
    _rn487x_PrintMessage->_strcpy
    _rn487x_PrintIndicatorCharacters->_EUSART1_Write
    _rn487x_PrintIndicatorCharacters->_EUSART2_Write
    _RN487X_Init->_RN487X_Delay
    _LIGHTBLUE_TemperatureSensor->_LIGHTBLUE_SplitWord
    _LIGHTBLUE_SendSerialData->_RN487X_Write
    _LIGHTBLUE_SendProtocolVersion->_LIGHTBLUE_SendPacket
    _LIGHTBLUE_PushButton->_LIGHTBLUE_SendPacket
    _LIGHTBLUE_PerformAction->_LIGHTBLUE_SetErrorLedValue
    _RN487X_SetOutputs->_RN487X_SendCmd
    _RN487X_EnterDataMode->_RN487X_SendCmd
    _RN487X_EnterCmdMode->_RN487X_SendCmd
    _RN487X_SendCmd->_RN487X_Write
    _RN487X_Read@rn487x_interface$F1381->_EUSART1_Read
    _RN487X_Read@rn487x_interface$F1381->_EUSART2_Read
    _RN487X_Delay->_DELAY_milliseconds
    _LIGHTBLUE_LedState->_LIGHTBLUE_SendPacket
    _LIGHTBLUE_AccelSensor->_LIGHTBLUE_SplitWord
    _LIGHTBLUE_SplitWord->_LIGHTBLUE_SplitByte
    _LIGHTBLUE_SplitByte->_strlen
    _LIGHTBLUE_SendPacket->_RN487X_Write
    _RN487X_Write->_strlen
    _BMA253_GetAccelDataXYZ->_BMA253_NewAccelDataRdyY
    _BMA253_GetAccelDataXYZ->_BMA253_NewAccelDataRdyZ
    _readRegisters->_i2c_readNBytes
    _BMA253_GetAccelDataZ->_BMA253_NewAccelDataRdyZ
    _BMA253_GetAccelDataY->_BMA253_NewAccelDataRdyY
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_MasterFsm->_I2C1_DO_ADDRESS_NACK
    _I2C1_MasterFsm->_I2C1_DO_RX
    _I2C1_MasterFsm->_I2C1_DO_TX
    _I2C1_MasterFsm->_I2C1_DO_TX_EMPTY
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnReset
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnStop
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler@i2c1_master_example$F1239
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler@i2c1_master_example$F1250
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler@i2c1_master_example$F1273
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler@i2c1_master_example$F1256
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler@i2c1_master_example$F1262
    _I2C1_DO_TX->_I2C1_CallbackReturnReset
    _I2C1_DO_TX->_I2C1_CallbackReturnStop
    _I2C1_DO_TX->_rd1RegCompleteHandler
    _I2C1_DO_TX->_rd1RegCompleteHandler@i2c1_master_example$F1239
    _I2C1_DO_TX->_rd2RegCompleteHandler
    _I2C1_DO_TX->_rd2RegCompleteHandler@i2c1_master_example$F1250
    _I2C1_DO_TX->_rdBlkRegCompleteHandler
    _I2C1_DO_TX->_rdBlkRegCompleteHandler@i2c1_master_example$F1273
    _I2C1_DO_TX->_wr1RegCompleteHandler
    _I2C1_DO_TX->_wr1RegCompleteHandler@i2c1_master_example$F1256
    _I2C1_DO_TX->_wr2RegCompleteHandler
    _I2C1_DO_TX->_wr2RegCompleteHandler@i2c1_master_example$F1262
    _I2C1_DO_SEND_ADR_WRITE->_I2C1_MasterSendTxData
    _I2C1_DO_RX->_I2C1_CallbackReturnReset
    _I2C1_DO_RX->_I2C1_CallbackReturnStop
    _I2C1_DO_RX->_rd1RegCompleteHandler
    _I2C1_DO_RX->_rd1RegCompleteHandler@i2c1_master_example$F1239
    _I2C1_DO_RX->_rd2RegCompleteHandler
    _I2C1_DO_RX->_rd2RegCompleteHandler@i2c1_master_example$F1250
    _I2C1_DO_RX->_rdBlkRegCompleteHandler
    _I2C1_DO_RX->_rdBlkRegCompleteHandler@i2c1_master_example$F1273
    _I2C1_DO_RX->_wr1RegCompleteHandler
    _I2C1_DO_RX->_wr1RegCompleteHandler@i2c1_master_example$F1256
    _I2C1_DO_RX->_wr2RegCompleteHandler
    _I2C1_DO_RX->_wr2RegCompleteHandler@i2c1_master_example$F1262
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnReset
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnStop
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler@i2c1_master_example$F1239
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler@i2c1_master_example$F1250
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler@i2c1_master_example$F1273
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler@i2c1_master_example$F1256
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler@i2c1_master_example$F1262
    _wr2RegCompleteHandler@i2c1_master_example$F1262->_I2C1_SetDataCompleteCallback
    _wr2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler@i2c1_master_example$F1256->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler@i2c1_master_example$F1273->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler@i2c1_master_example$F1250->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler@i2c1_master_example$F1239->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _I2C1_SetDataCompleteCallback->_I2C1_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART1_Transmit_ISR
    _INTERRUPT_InterruptManager->_EUSART2_Transmit_ISR
    _EUSART2_Receive_ISR->_EUSART2_RxDataHandler
    _EUSART2_DefaultErrorHandler->_EUSART2_RxDataHandler
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _main->_LIGHTBLUE_AccelSensor
    _begin->_setMagneticChannel
    _begin->_setOperatingMode
    _begin->_setTemperatureEn
    _begin->_setXYAxisRange
    _begin->_setZAxisRange
    _setZAxisRange->_getError
    _setXYAxisRange->_getError
    _setTemperatureEn->_getError
    _setOperatingMode->_getError
    _setMagneticChannel->_getError
    _writeRegister->_i2c_write1ByteRegister
    _getError->_getDeviceStatus
    _getDeviceStatus->_readRegister
    _isConnected->_TMAG5273_GetManufacture
    _TMAG5273_GetManufacture->_i2c_read2ByteRegister
    _getTemperatureEN->_readRegister
    _getOperatingMode->_readRegister
    _getMagneticChannel->_readRegister
    _getLowPower->_readRegister
    _getAngleEn->_readRegister
    _RN487X_DataReady->_RN487X_FilterData
    _RN487X_FilterData->_RN487X_MessageHandler
    _RN487X_MessageHandler->_rn487x_PrintMessage
    _LIGHTBLUE_TemperatureSensor->_TMAG5273_GetTemperatureValue
    _TMAG5273_GetTemperatureValue->_TMAG5273_CalcTemperature
    _TMAG5273_CalcTemperature->_i2c_read2ByteRegister
    _LIGHTBLUE_ParseIncomingPacket->_LIGHTBLUE_PerformAction
    _LIGHTBLUE_PerformAction->_LIGHTBLUE_SetErrorLedValue
    _LIGHTBLUE_UpdateErrorLed->_RN487X_SetOutputs
    _LIGHTBLUE_AccelSensor->_BMA253_GetAccelDataXYZ
    _BMA253_GetAccelDataXYZ->_BMA253_GetAccelDataY
    _BMA253_GetAccelDataXYZ->_BMA253_GetAccelDataZ
    _readRegister->_readRegisters
    _readRegisters->_i2c_readNBytes
    _I2C1_MasterRead->_I2C1_MasterOperation
    _BMA253_GetAccelDataZ->_i2c_read1ByteRegister
    _BMA253_NewAccelDataRdyZ->_i2c_read1ByteRegister
    _BMA253_GetAccelDataY->_i2c_read1ByteRegister
    _BMA253_NewAccelDataRdyY->_i2c_read1ByteRegister
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _I2C1_Poller->_I2C1_MasterFsm

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0 11669348
                                             41 BANK0      1     1      0
                                              0 BANK1      1     1      0
                       _EUSART1_Read *
                      _EUSART1_Write *
                _EUSART1_is_rx_ready *
                       _EUSART2_Read *
                      _EUSART2_Write *
                _EUSART2_is_rx_ready *
              _LIGHTBLUE_AccelSensor
               _LIGHTBLUE_Initialize
                 _LIGHTBLUE_LedState
      _LIGHTBLUE_ParseIncomingPacket
               _LIGHTBLUE_PushButton
      _LIGHTBLUE_SendProtocolVersion
           _LIGHTBLUE_SendSerialData
        _LIGHTBLUE_TemperatureSensor
                   _RN487X_DataReady
                        _RN487X_Init
                 _RN487X_IsConnected
                        _RN487X_Read
      _RN487X_SetAsyncMessageHandler
                       _RN487X_Write *
                  _SYSTEM_Initialize
            _TMR0_HasOverflowOccured
                              _begin
 ---------------------------------------------------------------------------------
 (1) _begin                                                0     0      0 8578042
                         _getAngleEn
                           _getError
                        _getLowPower
                 _getMagneticChannel
                   _getOperatingMode
                   _getTemperatureEN
                        _isConnected
                 _setMagneticChannel
                   _setOperatingMode
                   _setTemperatureEn
                     _setXYAxisRange
                      _setZAxisRange
 ---------------------------------------------------------------------------------
 (2) _setZAxisRange                                        5     5      0 1186870
                                             22 BANK0      5     5      0
                           _bitWrite
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (2) _setXYAxisRange                                       5     5      0 1186870
                                             22 BANK0      5     5      0
                           _bitWrite
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (2) _setTemperatureEn                                     5     5      0 1186870
                                             22 BANK0      5     5      0
                           _bitWrite
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (2) _setOperatingMode                                     5     5      0 1187180
                                             22 BANK0      5     5      0
                           _bitWrite
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (2) _setMagneticChannel                                   5     5      0 1188916
                                             22 BANK0      5     5      0
                           _bitWrite
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (3) _writeRegister                                        2     1      1  384762
                                              6 BANK0      2     1      1
             _i2c_write1ByteRegister
 ---------------------------------------------------------------------------------
 (4) _i2c_write1ByteRegister                               3     1      2  375957
                                             11 COMMON     1     1      0
                                              4 BANK0      2     0      2
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _getError                                             7     7      0  377382
                                             15 BANK0      7     7      0
                            _bitRead
                    _getDeviceStatus
 ---------------------------------------------------------------------------------
 (4) _getDeviceStatus                                      1     1      0  367073
                                             14 BANK0      1     1      0
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _bitWrite                                             8     4      4   57495
                                              1 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _isConnected                                          0     0      0  376113
            _TMAG5273_GetManufacture
 ---------------------------------------------------------------------------------
 (3) _TMAG5273_GetManufacture                              4     2      2  376113
                                             13 BANK0      4     2      2
              _i2c_read2ByteRegister
                               _swap
 ---------------------------------------------------------------------------------
 (4) _swap                                                 9     7      2     268
                                              1 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) _getTemperatureEN                                     4     4      0  377156
                                             14 BANK0      4     4      0
                            _bitRead
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _getOperatingMode                                     5     5      0  377407
                                             14 BANK0      5     5      0
                            _bitRead
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _getMagneticChannel                                   7     7      0  378715
                                             14 BANK0      7     7      0
                            _bitRead
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _getLowPower                                          4     4      0  377156
                                             14 BANK0      4     4      0
                            _bitRead
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _getAngleEn                                           5     5      0  377407
                                             14 BANK0      5     5      0
                            _bitRead
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) _bitRead                                              9     6      3   10046
                                              1 COMMON     9     6      3
 ---------------------------------------------------------------------------------
 (1) _TMR0_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1485
                 _EUSART1_Initialize
                 _EUSART2_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     135
         _IOCAF6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCAF6_SetInterruptHandler                           2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     675
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     675
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _RN487X_SetAsyncMessageHandler                        3     0      3     418
                                              1 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (1) _RN487X_Read                                          0     0      0   10887
                   _RN487X_DataReady
 ---------------------------------------------------------------------------------
 (2) _RN487X_DataReady                                     0     0      0   10887
                  _RN487X_FilterData
                 _RN487X_is_rx_ready *
 ---------------------------------------------------------------------------------
 (3) _RN487X_FilterData                                    5     5      0   10887
                                             36 BANK0      5     5      0
              _RN487X_MessageHandler *
 _RN487X_Read@rn487x_interface$F1381 *
 ---------------------------------------------------------------------------------
 (4) _RN487X_MessageHandler                                3     1      2   10686
                                             33 BANK0      3     1      2
    _rn487x_PrintIndicatorCharacters
                _rn487x_PrintMessage
             _rn487x_PrintMessageEnd
           _rn487x_PrintMessageStart
                             _strstr
 ---------------------------------------------------------------------------------
 (5) _strstr                                               8     4      4    2291
                                              8 COMMON     4     0      4
                                              0 BANK0      4     4      0
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (6) _strncmp                                              7     1      6     519
                                              1 COMMON     7     1      6
 ---------------------------------------------------------------------------------
 (6) _strchr                                               6     2      4     282
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintMessageStart                             0     0      0    1691
                      _EUSART1_Write *
                      _EUSART2_Write *
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintMessageEnd                               0     0      0    1691
                      _EUSART1_Write *
                      _EUSART2_Write *
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintMessage                                 37    35      2    3050
                                              7 COMMON     4     2      2
                                              0 BANK0     33    33      0
                      _EUSART1_Write *
                      _EUSART2_Write *
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               6     4      2     246
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintIndicatorCharacters                      1     1      0    1753
                                              3 COMMON     1     1      0
                      _EUSART1_Write *
                      _EUSART2_Write *
 ---------------------------------------------------------------------------------
 (1) _RN487X_IsConnected                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RN487X_Init                                          0     0      0     872
                       _RN487X_Delay *
                  _RN487X_IndicateRx *
 _RN487X_Read@rn487x_interface$F1381 *
                       _RN487X_Reset *
               _RN487X_SetSystemMode *
                 _RN487X_is_rx_ready *
 ---------------------------------------------------------------------------------
 (3) _RN487X_is_rx_ready                                   0     0      0       0
                _EUSART1_is_rx_ready *
                _EUSART2_is_rx_ready *
 ---------------------------------------------------------------------------------
 (4) _EUSART2_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RN487X_SetSystemMode                                 1     0      1     108
                                              1 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (2) _RN487X_Reset                                         1     0      1     185
                                              1 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (2) _RN487X_IndicateRx                                    1     0      1     108
                                              1 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_TemperatureSensor                          7     7      0  383699
                                             26 BANK0      7     7      0
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitWord
       _TMAG5273_GetTemperatureValue
 ---------------------------------------------------------------------------------
 (2) _TMAG5273_GetTemperatureValue                         2     0      2  376113
                                             24 BANK0      2     0      2
           _TMAG5273_CalcTemperature
 ---------------------------------------------------------------------------------
 (3) _TMAG5273_CalcTemperature                            11     9      2  375978
                                             13 BANK0     11     9      2
              _i2c_read2ByteRegister
 ---------------------------------------------------------------------------------
 (4) _i2c_read2ByteRegister                                9     7      2  375811
                                              4 BANK0      9     7      2
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_SendSerialData                             3     3      0    4274
                                              7 COMMON     3     3      0
                       _RN487X_Write *
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_SendProtocolVersion                       23    23      0    7788
                                              0 BANK0     23    23      0
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitByte
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_PushButton                                 4     4      0    6862
                                              0 BANK0      4     4      0
           _LIGHTBLUE_GetButtonValue
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitByte
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_GetButtonValue                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_ParseIncomingPacket                        9     9      0   18822
                                             11 BANK0      9     9      0
            _LIGHTBLUE_PerformAction
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_PerformAction                              4     3      1   18277
                                              7 BANK0      4     3      1
                      _EUSART1_Write *
                      _EUSART2_Write *
         _LIGHTBLUE_SetErrorLedValue
 ---------------------------------------------------------------------------------
 (3) _LIGHTBLUE_SetErrorLedValue                           2     2      0   16293
                                             11 COMMON     1     1      0
                                              6 BANK0      1     1      0
           _LIGHTBLUE_UpdateErrorLed
 ---------------------------------------------------------------------------------
 (4) _LIGHTBLUE_UpdateErrorLed                             0     0      0   16262
                       _RN487X_Delay *
                _RN487X_EnterCmdMode
               _RN487X_EnterDataMode
                  _RN487X_SetOutputs
 ---------------------------------------------------------------------------------
 (5) _RN487X_SetOutputs                                    6     4      2    5093
                                              0 BANK0      6     4      2
         _RN487X_ReadDefaultResponse
                     _RN487X_SendCmd
 ---------------------------------------------------------------------------------
 (6) _RN487X_ReadDefaultResponse                           4     4      0     389
                                              3 COMMON     4     4      0
 _RN487X_Read@rn487x_interface$F1381 *
 ---------------------------------------------------------------------------------
 (5) _RN487X_EnterDataMode                                 0     0      0    5386
                     _RN487X_ReadMsg
                     _RN487X_SendCmd
 ---------------------------------------------------------------------------------
 (5) _RN487X_EnterCmdMode                                  0     0      0    5386
                     _RN487X_ReadMsg
                     _RN487X_SendCmd
 ---------------------------------------------------------------------------------
 (6) _RN487X_SendCmd                                       4     3      1    4316
                                              7 COMMON     4     3      1
                       _RN487X_Write *
                  _RN487X_is_tx_done *
 ---------------------------------------------------------------------------------
 (7) _RN487X_is_tx_done                                    0     0      0       0
                 _EUSART1_is_tx_done *
                 _EUSART2_is_tx_done *
 ---------------------------------------------------------------------------------
 (8) _EUSART2_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RN487X_ReadMsg                                       7     4      3    1070
                                              3 COMMON     7     4      3
 _RN487X_Read@rn487x_interface$F1381 *
 ---------------------------------------------------------------------------------
 (4) _RN487X_Read@rn487x_interface$F1381                   0     0      0      74
                       _EUSART1_Read *
                       _EUSART2_Read *
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Read                                         2     2      0      37
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Read                                         2     2      0      37
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _RN487X_Delay                                         2     0      2     397
                                              4 COMMON     2     0      2
                 _DELAY_milliseconds
 ---------------------------------------------------------------------------------
 (3) _DELAY_milliseconds                                   3     1      2     135
                                              1 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_LedState                                   4     4      0    6961
                                              0 BANK0      4     4      0
          _LIGHTBLUE_GetDataLedValue
         _LIGHTBLUE_GetErrorLedValue
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitByte
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_GetErrorLedValue                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_GetDataLedValue                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_AccelSensor                               19    19      0 2633367
                                             22 BANK0     19    19      0
             _BMA253_GetAccelDataXYZ
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitWord
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_SplitWord                                  3     1      2    2607
                                              9 COMMON     3     1      2
                _LIGHTBLUE_SplitByte
 ---------------------------------------------------------------------------------
 (3) _LIGHTBLUE_SplitByte                                  3     2      1    1911
                                              6 COMMON     3     2      1
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_SendPacket                                 4     3      1    4825
                                              7 COMMON     4     3      1
                       _RN487X_Write *
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     858
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _RN487X_Write                                         1     0      1    3185
                                              6 COMMON     1     0      1
                       _EUSART1_Read (ARG) *
                      _EUSART1_Write *
                       _EUSART2_Read (ARG) *
                      _EUSART2_Write *
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Write                                        2     1      1    1525
                                              1 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        2     1      1     166
                                              1 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (2) _BMA253_GetAccelDataXYZ                               6     6      0 2625633
                                             16 BANK0      6     6      0
               _BMA253_GetAccelDataY
               _BMA253_GetAccelDataZ
            _BMA253_NewAccelDataRdyY
            _BMA253_NewAccelDataRdyZ
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _readRegister                                         2     2      0  367039
                                             12 BANK0      2     2      0
                      _readRegisters
 ---------------------------------------------------------------------------------
 (4) _readRegisters                                        5     3      2  366943
                                              7 BANK0      5     3      2
                     _i2c_readNBytes
 ---------------------------------------------------------------------------------
 (5) _i2c_readNBytes                                       4     1      3  366009
                                             11 COMMON     1     1      0
                                              4 BANK0      3     0      3
                         _I2C1_Close
                    _I2C1_MasterRead
                          _I2C1_Open
                     _I2C1_SetBuffer
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterRead                                      0     0      0  362109
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (3) _BMA253_GetAccelDataZ                                 6     6      0  752774
                                             10 BANK0      6     6      0
            _BMA253_NewAccelDataRdyZ
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_NewAccelDataRdyZ                              1     1      0  376335
                                             11 COMMON     1     1      0
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_GetAccelDataY                                 6     6      0  752774
                                             10 BANK0      6     6      0
            _BMA253_NewAccelDataRdyY
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_NewAccelDataRdyY                              1     1      0  376335
                                             11 COMMON     1     1      0
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (4) _i2c_read1ByteRegister                                6     5      1  376301
                                              4 BANK0      6     5      1
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetAddressNackCallback                          4     0      4    3815
                                              5 COMMON     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (5) _I2C1_Open                                            2     2      0      68
                                              1 COMMON     2     2      0
                _I2C1_MasterClearIrq
                    _I2C1_MasterOpen
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterWrite                                     0     0      0  362109
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterOperation                                 2     2      0  362109
                                              2 BANK0      2     2      0
                   _I2C1_MasterStart
                        _I2C1_Poller
 ---------------------------------------------------------------------------------
 (7) _I2C1_Poller                                          0     0      0  362041
                     _I2C1_MasterFsm
            _I2C1_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterWaitForEvent                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterFsm                                       2     2      0  362041
                                              0 BANK0      2     2      0
               _I2C1_DO_ADDRESS_NACK *
                       _I2C1_DO_IDLE *
                       _I2C1_DO_RCEN *
                      _I2C1_DO_RESET *
                         _I2C1_DO_RX *
                     _I2C1_DO_RX_ACK *
            _I2C1_DO_RX_NACK_RESTART *
               _I2C1_DO_RX_NACK_STOP *
              _I2C1_DO_SEND_ADR_READ *
             _I2C1_DO_SEND_ADR_WRITE *
               _I2C1_DO_SEND_RESTART *
          _I2C1_DO_SEND_RESTART_READ *
         _I2C1_DO_SEND_RESTART_WRITE *
                  _I2C1_DO_SEND_STOP *
                         _I2C1_DO_TX *
                   _I2C1_DO_TX_EMPTY *
                _I2C1_MasterClearIrq
                  _I2C1_MasterIsNack
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_TX_EMPTY                                     2     2      0   90487
                                              9 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterSetIrq
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSetIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_TX                                           2     2      0   90518
                                              9 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterIsNack                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART_WRITE                          0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART_READ                           0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_SEND_ADR_WRITE                               0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_SEND_ADR_READ                                0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendTxData                               1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_ACK                                       0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX                                           2     2      0   90487
                                              9 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
            _I2C1_DO_RX_NACK_RESTART
               _I2C1_DO_RX_NACK_STOP
               _I2C1_MasterGetRxData
                 _I2C1_MasterSendAck
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendAck                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterGetRxData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_NACK_STOP                                 0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_NACK_RESTART                              0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendNack                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RESET                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RCEN                                         0     0      0       0
                 _I2C1_MasterStartRx
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterStartRx                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_IDLE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_ADDRESS_NACK                                 2     2      0   90487
                                              9 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _wr2RegCompleteHandler@i2c1_master_example$F1262     1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr2RegCompleteHandler                               1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr1RegCompleteHandler@i2c1_master_example$F1256     1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr1RegCompleteHandler                               1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rdBlkRegCompleteHandler@i2c1_master_example$F1273   1     0      1    9035
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rdBlkRegCompleteHandler                             1     0      1    9035
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd2RegCompleteHandler@i2c1_master_example$F1250     1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd2RegCompleteHandler                               1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd1RegCompleteHandler@i2c1_master_example$F1239     1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd1RegCompleteHandler                               1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetDataCompleteCallback                         3     0      3    5479
                                              5 COMMON     3     0      3
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetCallback                                     4     1      3    1257
                                              1 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetBuffer                                       3     1      2    3494
                                              1 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_STOP                                   0     0      0       0
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterStop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART                                0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterEnableRestart                            0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_CallbackReturnStop                             1     0      1       0
                                              8 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (10) _I2C1_CallbackReturnReset                            1     0      1     385
                                              8 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (19) NULL(Fake)                                           1     0      1       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_Close                                           1     1      0      37
                                              1 COMMON     1     1      0
                _I2C1_MasterClearIrq
                   _I2C1_MasterClose
              _I2C1_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _INTERRUPT_InterruptManager                          0     0      0       0
                                NULL *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (17) _PIN_MANAGER_IOC                                     0     0      0       0
                         _IOCAF6_ISR
 ---------------------------------------------------------------------------------
 (18) _IOCAF6_ISR                                          0     0      0       0
                                NULL *
     _IOCAF6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _IOCAF6_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART2_Transmit_ISR                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (17) _EUSART2_Receive_ISR                                 0     0      0       0
                                NULL *
        _EUSART2_DefaultErrorHandler *
 _EUSART2_DefaultFramingErrorHandler *
 _EUSART2_DefaultOverrunErrorHandler *
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (18) _EUSART2_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _EUSART2_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _EUSART2_DefaultErrorHandler                         0     0      0       0
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (18) _EUSART2_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (17) _EUSART1_Transmit_ISR                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (17) _EUSART1_Receive_ISR                                 0     0      0       0
                                NULL *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (18) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (18) _EUSART1_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (19) NULL(Fake)                                           1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read *
   _EUSART1_Write *
   _EUSART1_is_rx_ready *
   _EUSART2_Read *
   _EUSART2_Write *
   _EUSART2_is_rx_ready *
   _LIGHTBLUE_AccelSensor *
     _BMA253_GetAccelDataXYZ
       _BMA253_GetAccelDataY
         _BMA253_NewAccelDataRdyY
           _i2c_read1ByteRegister
             _I2C1_Close
               _I2C1_MasterClearIrq
               _I2C1_MasterClose
               _I2C1_MasterDisableIrq
             _I2C1_MasterWrite
               _I2C1_MasterOperation
                 _I2C1_MasterStart
                 _I2C1_Poller
                   _I2C1_MasterFsm
                     _I2C1_DO_ADDRESS_NACK *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_SEND_RESTART *
                         _I2C1_MasterEnableRestart
                       _I2C1_DO_SEND_STOP *
                         _I2C1_MasterStop
                       _rd1RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                           _I2C1_SetCallback
                       _rd1RegCompleteHandler@i2c1_master_example$F1239 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rd2RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rd2RegCompleteHandler@i2c1_master_example$F1250 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rdBlkRegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1273 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr1RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr1RegCompleteHandler@i2c1_master_example$F1256 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr2RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr2RegCompleteHandler@i2c1_master_example$F1262 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                     _I2C1_DO_IDLE *
                     _I2C1_DO_RCEN *
                       _I2C1_MasterStartRx
                     _I2C1_DO_RESET *
                     _I2C1_DO_RX *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_RX_NACK_RESTART *
                         _I2C1_MasterSendNack
                       _I2C1_DO_RX_NACK_STOP *
                         _I2C1_MasterSendNack
                       _I2C1_MasterGetRxData *
                       _I2C1_MasterSendAck *
                       _rd1RegCompleteHandler *
                       _rd1RegCompleteHandler@i2c1_master_example$F1239 *
                       _rd2RegCompleteHandler *
                       _rd2RegCompleteHandler@i2c1_master_example$F1250 *
                       _rdBlkRegCompleteHandler *
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1273 *
                       _wr1RegCompleteHandler *
                       _wr1RegCompleteHandler@i2c1_master_example$F1256 *
                       _wr2RegCompleteHandler *
                       _wr2RegCompleteHandler@i2c1_master_example$F1262 *
                     _I2C1_DO_RX_ACK *
                       _I2C1_MasterSendAck
                     _I2C1_DO_RX_NACK_RESTART *
                     _I2C1_DO_RX_NACK_STOP *
                     _I2C1_DO_SEND_ADR_READ *
                       _I2C1_MasterSendTxData
                     _I2C1_DO_SEND_ADR_WRITE *
                       _I2C1_MasterSendTxData
                     _I2C1_DO_SEND_RESTART *
                     _I2C1_DO_SEND_RESTART_READ *
                       _I2C1_MasterEnableRestart
                     _I2C1_DO_SEND_RESTART_WRITE *
                       _I2C1_MasterEnableRestart
                     _I2C1_DO_SEND_STOP *
                     _I2C1_DO_TX *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_SEND_RESTART_READ *
                       _I2C1_DO_SEND_RESTART_WRITE *
                       _I2C1_DO_SEND_STOP *
                       _I2C1_MasterIsNack *
                       _I2C1_MasterSendTxData *
                       _rd1RegCompleteHandler *
                       _rd1RegCompleteHandler@i2c1_master_example$F1239 *
                       _rd2RegCompleteHandler *
                       _rd2RegCompleteHandler@i2c1_master_example$F1250 *
                       _rdBlkRegCompleteHandler *
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1273 *
                       _wr1RegCompleteHandler *
                       _wr1RegCompleteHandler@i2c1_master_example$F1256 *
                       _wr2RegCompleteHandler *
                       _wr2RegCompleteHandler@i2c1_master_example$F1262 *
                     _I2C1_DO_TX_EMPTY *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_SEND_RESTART *
                       _I2C1_DO_SEND_STOP *
                       _I2C1_MasterSetIrq *
                       _rd1RegCompleteHandler *
                       _rd1RegCompleteHandler@i2c1_master_example$F1239 *
                       _rd2RegCompleteHandler *
                       _rd2RegCompleteHandler@i2c1_master_example$F1250 *
                       _rdBlkRegCompleteHandler *
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1273 *
                       _wr1RegCompleteHandler *
                       _wr1RegCompleteHandler@i2c1_master_example$F1256 *
                       _wr2RegCompleteHandler *
                       _wr2RegCompleteHandler@i2c1_master_example$F1262 *
                     _I2C1_MasterClearIrq *
                     _I2C1_MasterIsNack *
                   _I2C1_MasterWaitForEvent
             _I2C1_Open
               _I2C1_MasterClearIrq
               _I2C1_MasterOpen
             _I2C1_SetAddressNackCallback
               _I2C1_SetCallback
             _I2C1_SetBuffer
             _I2C1_SetDataCompleteCallback
         _i2c_read1ByteRegister
       _BMA253_GetAccelDataZ
         _BMA253_NewAccelDataRdyZ
           _i2c_read1ByteRegister
         _i2c_read1ByteRegister
       _BMA253_NewAccelDataRdyY
       _BMA253_NewAccelDataRdyZ
       _readRegister
         _readRegisters
           _i2c_readNBytes
             _I2C1_Close
             _I2C1_MasterRead
               _I2C1_MasterOperation
             _I2C1_Open
             _I2C1_SetBuffer
     _LIGHTBLUE_SendPacket
       _RN487X_Write *
         _EUSART1_Read (ARG) *
         _EUSART1_Write (ARG) *
         _EUSART2_Read (ARG) *
         _EUSART2_Write (ARG) *
         _strlen (ARG) *
       _strlen *
     _LIGHTBLUE_SplitWord
       _LIGHTBLUE_SplitByte
         _strlen
   _LIGHTBLUE_Initialize *
   _LIGHTBLUE_LedState *
     _LIGHTBLUE_GetDataLedValue
     _LIGHTBLUE_GetErrorLedValue
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitByte
   _LIGHTBLUE_ParseIncomingPacket *
     _LIGHTBLUE_PerformAction
       _EUSART1_Write *
       _EUSART2_Write *
       _LIGHTBLUE_SetErrorLedValue *
         _LIGHTBLUE_UpdateErrorLed
           _RN487X_Delay *
             _DELAY_milliseconds
           _RN487X_EnterCmdMode *
             _RN487X_ReadMsg
               _RN487X_Read@rn487x_interface$F1381 *
                 _EUSART1_Read *
                 _EUSART2_Read *
             _RN487X_SendCmd
               _RN487X_Write *
               _RN487X_is_tx_done *
                 _EUSART1_is_tx_done *
                 _EUSART2_is_tx_done *
           _RN487X_EnterDataMode *
             _RN487X_ReadMsg
             _RN487X_SendCmd
           _RN487X_SetOutputs *
             _RN487X_ReadDefaultResponse
               _RN487X_Read@rn487x_interface$F1381 *
             _RN487X_SendCmd
   _LIGHTBLUE_PushButton *
     _LIGHTBLUE_GetButtonValue
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitByte
   _LIGHTBLUE_SendProtocolVersion *
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitByte
     _strlen
   _LIGHTBLUE_SendSerialData *
     _RN487X_Write *
     _strlen *
   _LIGHTBLUE_TemperatureSensor *
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitWord
     _TMAG5273_GetTemperatureValue
       _TMAG5273_CalcTemperature
         _i2c_read2ByteRegister
           _I2C1_Close
           _I2C1_MasterWrite
           _I2C1_Open
           _I2C1_SetAddressNackCallback
           _I2C1_SetBuffer
           _I2C1_SetDataCompleteCallback
   _RN487X_DataReady *
     _RN487X_FilterData
       _RN487X_MessageHandler *
         _rn487x_PrintIndicatorCharacters
           _EUSART1_Write *
           _EUSART2_Write *
         _rn487x_PrintMessage
           _EUSART1_Write *
           _EUSART2_Write *
           _strcpy *
           _strlen *
         _rn487x_PrintMessageEnd
           _EUSART1_Write *
           _EUSART2_Write *
         _rn487x_PrintMessageStart
           _EUSART1_Write *
           _EUSART2_Write *
         _strstr
           _strchr
           _strlen
           _strncmp
       _RN487X_Read@rn487x_interface$F1381 *
     _RN487X_is_rx_ready *
       _EUSART1_is_rx_ready *
       _EUSART2_is_rx_ready *
   _RN487X_Init *
     _RN487X_Delay *
     _RN487X_IndicateRx *
     _RN487X_Read@rn487x_interface$F1381 *
     _RN487X_Reset *
     _RN487X_SetSystemMode *
     _RN487X_is_rx_ready *
   _RN487X_IsConnected *
   _RN487X_Read *
     _RN487X_DataReady
   _RN487X_SetAsyncMessageHandler *
   _RN487X_Write *
   _SYSTEM_Initialize *
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCAF6_SetInterruptHandler
     _PMD_Initialize
     _TMR0_Initialize
   _TMR0_HasOverflowOccured *
   _begin *
     _getAngleEn
       _bitRead
       _readRegister
     _getError
       _bitRead
       _getDeviceStatus
         _readRegister
     _getLowPower
       _bitRead
       _readRegister
     _getMagneticChannel
       _bitRead
       _readRegister
     _getOperatingMode
       _bitRead
       _readRegister
     _getTemperatureEN
       _bitRead
       _readRegister
     _isConnected
       _TMAG5273_GetManufacture
         _i2c_read2ByteRegister
         _swap
     _setMagneticChannel
       _bitWrite
       _getError
       _readRegister
       _writeRegister
         _i2c_write1ByteRegister
           _I2C1_Close
           _I2C1_MasterWrite
           _I2C1_Open
           _I2C1_SetAddressNackCallback
           _I2C1_SetBuffer
           _I2C1_SetDataCompleteCallback
     _setOperatingMode
       _bitWrite
       _getError
       _readRegister
       _writeRegister
     _setTemperatureEn
       _bitWrite
       _getError
       _readRegister
       _writeRegister
     _setXYAxisRange
       _bitWrite
       _getError
       _readRegister
       _writeRegister
     _setZAxisRange
       _bitWrite
       _getError
       _readRegister
       _writeRegister

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART1_Receive_ISR *
     NULL(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _EUSART2_Receive_ISR *
     NULL(Fake) *
     _EUSART2_DefaultErrorHandler *
       _EUSART2_RxDataHandler
     _EUSART2_DefaultFramingErrorHandler *
     _EUSART2_DefaultOverrunErrorHandler *
     _EUSART2_RxDataHandler *
   _EUSART2_Transmit_ISR *
   _PIN_MANAGER_IOC *
     _IOCAF6_ISR
       NULL(Fake) *
       _IOCAF6_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2A      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     22A       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      1      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      4D      10       96.2%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      40      12       80.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      50      14      100.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      50      16      100.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0      50      18      100.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              50      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BANK23              50      0       0      52        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BANK24              50      0       0      54        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BANK25              20      0       0      56        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     22A      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Dec 20 11:38:03 2024

                                 _eusart1TxBufferRemaining 005B  
                                   ?_EUSART2_RxDataHandler 0070  
                          __end_of_TMR0_HasOverflowOccured 1EF5  
                                                       l35 16A3  
                                                       l44 0C9A  
                                                       l53 1154  
                                                       l29 1675  
                                                       l56 1165  
                                      _do_I2C_SEND_RESTART 0000  
                                         ?_getDeviceStatus 0070  
                                  getLowPower@lowPowerMode 0031  
                                                      l121 1F06  
                                                      l202 1F12  
                                                      l130 1189  
                                                      l211 10AB  
                                                      l124 12DE  
                                                      l205 1F0C  
                                                      l133 14D6  
                                                      l221 083B  
                                                      l214 1362  
                                                      l230 085D  
                                                      l127 16D1  
                                                      l208 1EEF  
                                                      l224 083D  
                                                      l145 0705  
                                                      l139 1794  
                                                      l164 05B1  
                                                      l501 10DD  
                                                      l510 172F  
                                                      l193 0FFF  
                                                      l522 10EE  
                                                      l187 065B  
                                                      l196 108D  
                                                      l534 0BAE  
                                                      l199 1760  
                                                      l537 10FF  
                                                      l561 127C  
                                                      l730 1121  
                                                      l546 0A8E  
                                                      l802 1008  
                                                      l811 1FFA  
                                                      l549 1110  
                                                      l733 1132  
                                                      l805 100B  
                                                      l742 1294  
                                                      l814 1FFD  
                                                      l822 102C  
                                                      l807 100D  
                                                      l736 1143  
                                                      l816 1FFF  
                                                      l832 1647  
                                                      l921 1234  
                                                      l825 102E  
                                                      l842 1443  
                                                      l739 10CC  
                                                      l579 13BB  
                                                      l827 102F  
                                                      l819 1025  
                                                      l835 0BFC  
                                                      l908 0F73  
                                                      l933 0B1A  
                                                      l829 1030  
                                                      l926 1346  
                                                      l783 1002  
                                                      l855 0AD2  
                                                      l792 1FC0  
                                                      l848 17C9  
                                                      l952 12AC  
                                                      l786 1024  
                                                      l795 1FCA  
                                                      l964 103C  
                                                      l789 1FB6  
                                                      l973 0EE9  
                                                      l957 137E  
                                                      l798 1F77  
                                                      l886 16FF  
                                                      l974 0EE5  
                                                      l879 07FE  
                                                      l976 0EEB  
                                                      l897 15ED  
                                             ?_RN487X_Init 0070  
                                             ?_RN487X_Read 0070  
                               __end_of_DELAY_milliseconds 11F2  
                             LIGHTBLUE_SendPacket@packetID 007A  
                                    ?_I2C1_MasterOperation 0070  
                   __end_of_EUSART2_SetFramingErrorHandler 1F3D  
                           _EUSART2_SetFramingErrorHandler 1F37  
                               __end_of_getMagneticChannel 04BD  
                               __end_of_setMagneticChannel 0377  
                                                      wreg 0009  
                                   ?_I2C1_MasterSendTxData 0070  
                                     _I2C1_DO_RX_NACK_STOP 1ED2  
                                ?_I2C1_MasterEnableRestart 0070  
                          BMA253_NewAccelDataRdyY@yNewData 007B  
                                     I2C1_SetBuffer@buffer 0073  
                                                     l1111 1F42  
                                                     l1120 1F48  
                                                     l1201 1FA3  
                                                     l1114 1F36  
                                                     l1051 09C9  
                                                     l1220 1533  
                                                     l1060 1EAA  
                                                     l1204 1EAE  
                                                     l1108 1F3C  
                                  ??_rd2RegCompleteHandler 0079  
                                                     l1117 1F4E  
                                                     l1070 14FC  
                                                     l1214 1571  
                                                     l1223 154A  
                                                     l1057 1F9A  
                                                     l2130 10BB  
                                                     l1075 1503  
                                                     l1219 152A  
                                                     l1076 150C  
                                                     l2220 07A0  
                                                     l1261 1F24  
                                                     l2117 0C4A  
                                                     l1270 1F2A  
                                                     l2046 04FC  
                                                     l1079 1523  
                                                     l2127 11DB  
                                            ?_RN487X_Delay 0074  
                                                     l2136 107F  
                                                     l1264 1F18  
                                                     l1352 1207  
                                                     l2240 0373  
                                                     l2216 079D  
                                                     l2057 0563  
                                                     l1258 1F1E  
                                                     l1267 1F30  
                                                     l1195 098B  
                                                     l1355 1FD4  
                                                     l1443 0B63  
                                                     l2139 1018  
                                                     l2332 094D  
                                                     l1454 1F54  
                                                     l1358 1FDE  
                                                     l2246 0376  
                                                     l2350 0910  
                                                     l2326 0A08  
                                                     l3313 12C5  
                                                     l1802 1EB8  
                                                     l1474 119D  
                                                     l2442 121D  
                                                     l1811 0D23  
                                                     l3307 132B  
                                                     l3332 137F  
                                                     l1492 1EF4  
                                                     l2452 0D92  
                                                     l1901 1E73  
                                                     l1805 1F91  
                                                     l1750 1264  
                                                     l1814 0D3F  
                                                     l3334 139C  
                                                     l3326 0E8F  
                                                     l1742 1FAC  
                                                     l2550 0DE5  
                                                     l2462 04BC  
                                                     l1911 1056  
                                                     l2455 0D91  
                                                     l1920 1EB3  
                                                     l1808 1F6F  
                                                     l2640 0E3A  
                                                     l1745 17FE  
                                                     l1914 1E79  
                                                     l1762 1EE5  
                                                     l1746 17FF  
                                                     l1923 1E82  
                                                     l1827 0A25  
                                                     l3339 0CEC  
                                                     l2547 0DE6  
                                                     l1932 1E7F  
                                                     l1772 1FE9  
                                                     l1828 0A4B  
                                                     l1756 13DC  
                                                     l2580 11C6  
                                                     l2636 1F7F  
                                                     l1917 1E8B  
                                                     l1941 1EA6  
                                                     l1845 161A  
                                                     l1935 1E85  
                                                     l1839 1F67  
                                                     l1863 1EBD  
                                                     l1759 1EEA  
                                                     l1944 1EA2  
                                                     l1872 1ECC  
                                                     l2672 148B  
                                                     l1769 1071  
                                                     l1929 1E88  
                                                     l1881 1EDB  
                                                     l2681 12F7  
                                                     l1962 1E76  
                                                     l1938 1EFA  
                                                     l1866 1EC2  
                                                     l1890 1599  
                                                     l1778 1FF4  
                                                     l2690 1063  
                                                     l1875 1ED1  
                                                     l1795 1049  
                                                     l1884 1EE0  
                                                     l1972 1F00  
                                                     l1980 11F1  
                                                     l2684 11B1  
                                                     l1789 1467  
                                                     l1965 1E8E  
                                                     l1869 1EC7  
                                                     l2693 14B0  
                                                     l1878 1ED6  
                                                     l2678 0825  
                                                     l1959 1E7C  
                                                     l1799 15C2  
                                                     l1968 1EFB  
                                                     l1898 1E71  
                          BMA253_NewAccelDataRdyZ@zNewData 007B  
                                                     STR_1 2000  
                                                     STR_2 1891  
                                                     STR_3 1891  
                                                     STR_4 187A  
                                                     STR_5 187A  
                                                     STR_6 2000  
                                                     _LATA 0018  
                                                     _LATB 0019  
                                                     _LATC 001A  
                                                     _LATE 001C  
                               LIGHTBLUE_PushButton@button 0020  
                                                     _PMD0 0796  
                                                     _PMD1 0797  
                                                     _PMD2 0798  
                                                     _PMD3 0799  
                                                     _PMD4 079A  
                                                     _PMD5 079B  
                                                     _PMD6 079C  
                                                     _PMD7 079D  
                                                     u9620 144B  
                                                     u9700 1049  
                                                     u9621 144A  
                                                     u9701 1048  
                                                     u9630 106A  
                                                     u9710 104F  
                                                     u9631 1069  
                                                     u9711 104E  
                                                     u9640 0CF5  
                                                     u9720 13C5  
                                                     u9800 151E  
                                                     u9641 0CF4  
                                                     u9721 13C4  
                                                     u9801 151D  
                                                     u9650 0D3C  
                                                     u9730 13CD  
                                                     u9810 1551  
                                                     u9651 0D3B  
                                                     u9731 13CC  
                                                     u9811 1550  
                                                     u9660 0A20  
                                                     u9740 17D2  
                                                     u9820 1568  
                                                     u9900 132B  
                                                     u9661 0A1F  
                                                     u9741 17D1  
                                                     u9821 1567  
                                                     u9901 132A  
                                                     u9750 1254  
                                                     u9670 1F00  
                                                     u9830 152A  
                                                     u9910 16E3  
                                                     u9751 1253  
                                                     u9671 1EFF  
                                                     u9831 1529  
                                                     u9911 16E2  
                                                     u9680 15A2  
                                                     u9840 152F  
                                                     u9760 14DD  
                                                     u9920 16FF  
                                                     u9681 15A1  
                                                     u9841 152E  
                                                     u9761 14DC  
                                                     u9921 16FE  
                                                     u9690 15AA  
                                                     u9850 1545  
                                                     u9770 14F3  
                                                     u9930 15E0  
                                                     u9691 15A9  
                                                     u9851 1544  
                                                     u9771 14F2  
                                                     u9931 15DF  
                                                     u9860 13A7  
                                                     u9780 1503  
                                                     u9940 15EC  
                                                     u9861 13A6  
                                                     u9781 1502  
                                                     u9941 15EB  
                                                     u9870 13BB  
                                                     u9790 1508  
                                                     u9950 0F12  
                                                     u9871 13BA  
                                                     u9791 1507  
                                                     u9951 0F11  
                                                     u9880 12BF  
                                                     u9960 0F18  
                                                     u9881 12BE  
                                                     u9961 0F17  
                                                     u9890 11F1  
                                                     u9970 0F21  
                                                     u9891 11F0  
                                                     u9971 0F20  
                                                     u9980 0F27  
                                                     u9981 0F26  
                                                     u9990 0CA7  
                                                     u9991 0CA6  
                                            ?_RN487X_Reset 0071  
                          BMA253_GetAccelDataXYZ@accelData 0033  
                                                     _WPUA 1F39  
                                                     _WPUB 1F44  
                                                     _WPUC 1F4F  
                                                     _WPUE 1F65  
                                    ??_EUSART2_Receive_ISR 0071  
                                  ??_wr2RegCompleteHandler 0079  
                                         ??_I2C1_MasterFsm 0020  
                                            _EUSART1_Write 1524  
                                            ?_RN487X_Write 0076  
                                            _EUSART2_Write 14FD  
                                ??_I2C1_CallbackReturnStop 0079  
                                BMA253_GetAccelDataXYZ@lSB 0031  
                                BMA253_GetAccelDataXYZ@mSB 0032  
                                                     __hex 014C  
                                                     _main 04BD  
                                                     _peek 0066  
                                            ?_EUSART1_Read 0070  
                                                     _uart 1800  
                                            ?_EUSART2_Read 0070  
                                           _RN487X_ReadMsg 15C3  
                                                     fsr0h 0005  
                                                     fsr1h 0007  
                                                     indf0 0000  
                                                     fsr0l 0004  
                                                     indf1 0001  
                                                     fsr1l 0006  
                                                     _swap 119E  
                                                     btemp 007E  
                            ??_LIGHTBLUE_TemperatureSensor 007C  
                                           _RN487X_SendCmd 16D2  
                         RN487X_SetOutputs@stateHighNibble 0025  
                                                     start 0055  
                                           _setXYAxisRange 09CA  
                                         ??_I2C1_SetBuffer 0073  
                             __end_of_EUSART2_Transmit_ISR 13FF  
                              __end_of_RN487X_EnterCmdMode 1235  
                                             _statusBuffer 02A0  
                                         _setTemperatureEn 08D4  
                                        ?_getTemperatureEN 0070  
                                  ??_LIGHTBLUE_AccelSensor 007C  
                            I2C1_CallbackReturnStop@funPtr 0078  
                                    __end_of_setZAxisRange 094E  
                    __end_of_LIGHTBLUE_ParseIncomingPacket 065C  
                            _LIGHTBLUE_ParseIncomingPacket 0590  
                                  __end_of_TMR0_Initialize 119E  
                                             _do_I2C_RESET 0000  
                                       ??_getTemperatureEN 002E  
                                   _i2c_write1ByteRegister 1700  
                                         bitWrite@position 0073  
                            __end_of_OSCILLATOR_Initialize 1FD5  
                                                    l13000 155E  
                                                    l13010 156E  
                                                    l13002 1562  
                                                    l13020 152F  
                                                    l13012 1570  
                                                    l13004 1568  
                                                    l13100 15E2  
                                                    l13030 1546  
                                                    l13022 1534  
                                                    l13006 1569  
                                                    l13102 15E6  
                                                    l13110 0EED  
                                                    l13200 0BA7  
                                                    l13040 13B0  
                                                    l13024 153B  
                                                    l13032 1548  
                                                    l13016 1524  
                                                    l13008 156B  
                                                    l13104 15EC  
                                                    l13120 0F18  
                                                    l13112 0EF7  
                                                    l14000 0923  
                                                    l13202 0BAD  
                                                    l13042 13B3  
                                                    l13034 139E  
                                                    l13210 107D  
                                                    l13026 153F  
                                                    l13018 1524  
                                                    l13050 1FB7  
                                                    l13122 0F1B  
                                                    l13114 0F01  
                                                    l14010 094A  
                                                    l14002 092C  
                                                    l13036 139E  
                                                    l13028 1545  
                                                    l13044 1019  
                                                    l13060 12BF  
                                                    l13124 0F21  
                                                    l13116 0F0C  
                                                    l13108 0EEC  
                                                    l13300 0E3B  
                                                    l14020 121C  
                                                    l14100 03CB  
                                                    l14004 0934  
                                                    l13038 13A7  
                                                    l13142 10AE  
                                                    l13206 1074  
                                                    l13054 12AD  
                                                    l13070 11DC  
                                                    l13046 1FAD  
                                                    l13214 121E  
                                                    l13126 0F27  
                                                    l13118 0F12  
                                                    l13134 0F2B  
                                                    l13230 0AE3  
                                                    l13222 0AD3  
                                                    l13310 0E7E  
                                                    l13302 0E41  
                                                    l14014 1208  
                                                    l14102 03D0  
                                                    l14030 0D53  
                                                    l14006 0939  
                                                    l12520 145A  
                                                    l12600 10C4  
                                                    l13064 1FEA  
                                                    l13208 1075  
                                                    l13056 12B2  
                                                    l13072 11DD  
                                                    l13080 16D3  
                                                    l13216 1225  
                                                    l13128 0F29  
                                                    l13136 0F33  
                                                    l13240 0AF4  
                                                    l13232 0AE7  
                                                    l13224 0ADA  
                                                    l13160 0CCE  
                                                    l13152 0CAA  
                                                    l13312 0E84  
                                                    l13304 0E4E  
                                                    l13400 148A  
                                                    l14016 1208  
                                                    l14200 046A  
                                                    l14120 03F0  
                                                    l14104 03D5  
                                                    l14032 0D61  
                                                    l14024 0D40  
                                                    l13320 1701  
                                                    l14008 0943  
                                                    l12530 1E80  
                                                    l12522 1065  
                                                    l12602 10CB  
                                                    l13066 1EE1  
                                                    l13058 12B6  
                                                    l13074 11E5  
                                                    l13090 15C3  
                                                    l13082 16D5  
                                                    l13218 122B  
                                                    l13138 0F72  
                                                    l13250 0B03  
                                                    l13242 0AF7  
                                                    l13234 0AEB  
                                                    l13226 0ADE  
                                                    l13170 138A  
                                                    l13162 0CDE  
                                                    l13154 0CB6  
                                                    l13146 0C9B  
                                                    l13306 0E64  
                                                    l13314 0E8D  
                                                    l14018 120E  
                                                    l14202 046F  
                                                    l14130 03FC  
                                                    l14122 03F5  
                                                    l14106 03DA  
                                                    l14114 03E1  
                                                    l14034 0D66  
                                                    l14042 0D6D  
                                                    l14026 0D40  
                                                    l13410 119E  
                                                    l13330 1727  
                                                    l13322 170A  
                                                    l15010 04BD  
                                                    l12532 1E83  
                                                    l12524 106A  
                                                    l12516 1445  
                                                    l12540 10DC  
                                                    l12612 1EF5  
                                                    l12620 1EBC  
                                                    l13332 1144  
                                                    l13420 164A  
                                                    l13340 1164  
                                                    l13092 15C5  
                                                    l13084 16E3  
                                                    l13260 0B11  
                                                    l13252 0B05  
                                                    l13244 0AF9  
                                                    l13236 0AEE  
                                                    l13228 0AE1  
                                                    l13076 1313  
                                                    l13172 139A  
                                                    l13156 0CBF  
                                                    l13148 0CA7  
                                                    l13308 0E65  
                                                    l14300 0DD7  
                                                    l14220 048F  
                                                    l14204 0474  
                                                    l14212 047B  
                                                    l14132 0401  
                                                    l14116 03E6  
                                                    l14108 03DF  
                                                    l14044 0D72  
                                                    l14052 0D79  
                                                    l14036 0D6B  
                                                    l14028 0D46  
                                                    l13412 11A0  
                                                    l13404 1F78  
                                                    l13324 1713  
                                                    l15020 04D4  
                                                    l15012 04C9  
                                                    l12526 1070  
                                                    l12518 144B  
                                                    l12606 127D  
                                                    l12534 1E9F  
                                                    l12710 0CFE  
                                                    l12702 0CF6  
                                                    l12630 1EC8  
                                                    l13190 0B90  
                                                    l13182 0B6C  
                                                    l13334 1153  
                                                    l13422 164A  
                                                    l13430 1678  
                                                    l13094 15CF  
                                                    l13086 16F5  
                                                    l13270 133D  
                                                    l13262 0B17  
                                                    l13254 0B09  
                                                    l13246 0AFB  
                                                    l13238 0AF0  
                                                    l13350 0A61  
                                                    l13078 1315  
                                                    l13166 137F  
                                                    l13158 0CC8  
                                                    l13510 1F1F  
                                                    l14310 0DE3  
                                                    l14230 049B  
                                                    l14214 0480  
                                                    l14206 0479  
                                                    l14150 0421  
                                                    l14134 0406  
                                                    l14142 040D  
                                                    l14118 03EB  
                                                    l14054 0D7E  
                                                    l14062 0D85  
                                                    l14046 0D77  
                                                    l13414 11A2  
                                                    l13406 1F7E  
                                                    l13326 171B  
                                                    l13318 1701  
                                                    l15030 0505  
                                                    l15022 04DC  
                                                    l15014 04CA  
                                                    l12528 1FDF  
                                                    l12536 10CD  
                                                    l12544 10DE  
                                                    l12552 10EF  
                                                    l12560 1100  
                                                    l12608 1293  
                                                    l12640 1EA3  
                                                    l12616 1EB0  
                                                    l12720 0D31  
                                                    l12624 1EBE  
                                                    l12632 1ECB  
                                                    l12800 1ED0  
                                                    l13192 0B93  
                                                    l13184 0B76  
                                                    l13176 0B66  
                                                    l13424 1652  
                                                    l13432 1680  
                                                    l13600 0C91  
                                                    l13440 1749  
                                                    l13096 15E0  
                                                    l13088 16F9  
                                                    l13256 0B0D  
                                                    l13248 0AFF  
                                                    l14400 0596  
                                                    l13352 0A69  
                                                    l13344 0A4E  
                                                    l14320 12C6  
                                                    l13280 0BAF  
                                                    l13168 1389  
                                                    l13512 1F13  
                                                    l13504 1F25  
                                                    l14232 04A0  
                                                    l14240 04A7  
                                                    l14216 0485  
                                                    l14160 042D  
                                                    l14144 0412  
                                                    l14136 040B  
                                                    l14128 03F7  
                                                    l14080 038B  
                                                    l14064 0D8A  
                                                    l14056 0D83  
                                                    l13416 11B1  
                                                    l13520 0DF9  
                                                    l13328 1724  
                                                    l15040 0539  
                                                    l15032 0517  
                                                    l15024 04E4  
                                                    l15016 04CB  
                                                    l12538 10D5  
                                                    l12546 10E6  
                                                    l12554 10F7  
                                                    l12562 1108  
                                                    l12570 127B  
                                                    l12722 0D3C  
                                                    l12706 0CFA  
                                                    l12618 1EB9  
                                                    l12626 1EC1  
                                                    l12650 1ED5  
                                                    l12642 1ED7  
                                                    l13194 0B9D  
                                                    l13186 0B7F  
                                                    l13426 1663  
                                                    l13338 1155  
                                                    l13434 1691  
                                                    l13610 0F97  
                                                    l13442 174D  
                                                    l14330 16A6  
                                                    l13274 1F70  
                                                    l13266 132C  
                                                    l13258 0B0F  
                                                    l13362 1347  
                                                    l13450 10A8  
                                                    l14410 05BC  
                                                    l14402 059B  
                                                    l13354 0A72  
                                                    l13346 0A4E  
                                                    l13602 1057  
                                                    l14322 12C8  
                                                    l13282 1422  
                                                    l13290 1795  
                                                    l13370 0A8F  
                                                    l13506 1F2B  
                                                    l13514 1F4F  
                                                    l14306 0DD9  
                                                    l14242 04AC  
                                                    l14234 04A5  
                                                    l14218 048A  
                                                    l14226 0491  
                                                    l14162 0432  
                                                    l14170 0439  
                                                    l14146 0417  
                                                    l14090 03BF  
                                                    l14082 0399  
                                                    l14074 0377  
                                                    l14066 0D8F  
                                                    l13530 0E2D  
                                                    l13522 0E07  
                                                    l15050 056C  
                                                    l15042 053D  
                                                    l15034 0522  
                                                    l15026 04E6  
                                                    l15018 04CE  
                                                    l12548 10ED  
                                                    l12556 10FE  
                                                    l12564 110F  
                                                    l12636 1E89  
                                                    l12724 0D3E  
                                                    l12716 0D02  
                                                    l12740 0A23  
                                                    l12732 0A09  
                                                    l12644 1EDA  
                                                    l12804 1EDC  
                                                    l12820 157B  
                                                    l12812 1572  
                                                    l12900 17D6  
                                                    l13188 0B87  
                                                    l13428 1678  
                                                    l13620 0FEC  
                                                    l13612 0FA2  
                                                    l13444 1758  
                                                    l13436 1731  
                                                    l13604 1081  
                                                    l14332 16AA  
                                                    l13268 1337  
                                                    l13364 134A  
                                                    l14420 05DF  
                                                    l14412 05C5  
                                                    l14404 05A1  
                                                    l14340 1177  
                                                    l13356 0A75  
                                                    l13348 0A58  
                                                    l14324 12CF  
                                                    l13452 1FC1  
                                                    l14500 07F0  
                                                    l13284 1427  
                                                    l13292 179D  
                                                    l13380 0AC3  
                                                    l13372 0AA4  
                                                    l13460 0EA0  
                                                    l13508 1F19  
                                                    l13700 09C2  
                                                    l14308 0DDE  
                                                    l14244 04B1  
                                                    l14228 0496  
                                                    l14172 043E  
                                                    l14164 0437  
                                                    l14148 041C  
                                                    l14156 0423  
                                                    l14092 03C4  
                                                    l14084 03A7  
                                                    l14076 0377  
                                                    l14260 11B2  
                                                    l13532 0E32  
                                                    l13540 0E39  
                                                    l13524 0E15  
                                                    l13516 0DE7  
                                                    l15052 057F  
                                                    l15044 0540  
                                                    l15036 052D  
                                                    l15028 04F6  
                                                    l12574 1111  
                                                    l12582 1122  
                                                    l12590 1133  
                                                    l12654 1E86  
                                                    l12662 1E8C  
                                                    l12718 0D25  
                                                    l12750 0A2B  
                                                    l12734 0A11  
                                                    l12806 1EDE  
                                                    l12814 1574  
                                                    l12910 17EC  
                                                    l12902 17DD  
                                                    l13198 0BA3  
                                                    l13622 0FF4  
                                                    l13614 0FC2  
                                                    l13606 0F75  
                                                    l13446 175C  
                                                    l13438 173B  
                                                    l14334 16B5  
                                                    l14318 1F01  
                                                    l14350 14B6  
                                                    l13366 1357  
                                                    l14430 05F8  
                                                    l14422 05E8  
                                                    l14414 05CC  
                                                    l14406 05AA  
                                                    l14342 117C  
                                                    l13358 0A7D  
                                                    l14326 12D8  
                                                    l13390 1F9B  
                                                    l13286 1433  
                                                    l13294 17A0  
                                                    l13278 161B  
                                                    l13382 0ACA  
                                                    l13374 0AA8  
                                                    l13470 0ECD  
                                                    l13462 0EA6  
                                                    l13710 0950  
                                                    l13702 09C7  
                                                    l14270 0D93  
                                                    l14246 04B6  
                                                    l14190 045E  
                                                    l14174 0443  
                                                    l14158 0428  
                                                    l14094 03C9  
                                                    l14086 03B5  
                                                    l14078 037D  
                                                    l14262 11B8  
                                                    l13534 0E37  
                                                    l13526 0E23  
                                                    l13518 0DEC  
                                                    l13550 1010  
                                                    l15038 0533  
                                                    l15046 0544  
                                                    l12672 1E74  
                                                    l12568 1265  
                                                    l12576 1119  
                                                    l12584 112A  
                                                    l12592 113B  
                                                    l12664 1E70  
                                                    l12736 0A16  
                                                    l12656 1EC3  
                                                    l12648 1ED2  
                                                    l12808 1EDF  
                                                    l12816 1577  
                                                    l12840 15A2  
                                                    l12920 17FD  
                                                    l12912 17F1  
                                                    l12904 17E2  
                                                    l13616 0FDA  
                                                    l13608 0F92  
                                                    l14336 16C0  
                                                    l14328 16A4  
                                                    l13632 1EEB  
                                                    l14360 14D0  
                                                    l14352 14B7  
                                                    l13368 135F  
                                                    l13448 109F  
                                                    l13640 0837  
                                                    l14440 0624  
                                                    l14432 05FB  
                                                    l14424 05EF  
                                                    l14416 05D6  
                                                    l14408 05B6  
                                                    l13624 1F0D  
                                                    l14344 117D  
                                                    l13288 1438  
                                                    l13296 17AF  
                                                    l13384 0ACD  
                                                    l13376 0ABA  
                                                    l13480 0EE7  
                                                    l13472 0ED3  
                                                    l13464 0EA7  
                                                    l13456 0E90  
                                                    l13720 0967  
                                                    l13712 0957  
                                                    l13800 0B50  
                                                    l14280 0DBF  
                                                    l14272 0D99  
                                                    l14248 04BB  
                                                    l14192 0463  
                                                    l14176 0448  
                                                    l14184 044F  
                                                    l14088 03BA  
                                                    l14264 11C5  
                                                    l13544 12DF  
                                                    l13560 0809  
                                                    l13528 0E28  
                                                    l15048 0553  
                                                    l12930 1257  
                                                    l12578 1120  
                                                    l12586 1131  
                                                    l12594 1142  
                                                    l12674 1EB4  
                                                    l12682 1F89  
                                                    l12690 1F68  
                                                    l12746 0A27  
                                                    l12738 0A20  
                                                    l12658 1EC6  
                                                    l12826 157F  
                                                    l12842 15AA  
                                                    l12850 103E  
                                                    l12914 17F2  
                                                    l12906 17E3  
                                                    l13618 0FE8  
                                                    l14338 16CB  
                                                    l14354 14BD  
                                                    l13642 083F  
                                                    l14450 0633  
                                                    l14442 062A  
                                                    l14434 0601  
                                                    l14426 05F1  
                                                    l14418 05D9  
                                                    l14346 1183  
                                                    l14370 1779  
                                                    l14362 1761  
                                                    l13570 1498  
                                                    l13386 1F92  
                                                    l13298 17B4  
                                                    l13378 0AC0  
                                                    l13466 0EAC  
                                                    l13474 0ED8  
                                                    l13458 0E9B  
                                                    l13650 1363  
                                                    l13730 0980  
                                                    l13722 0969  
                                                    l13714 0960  
                                                    l13490 1F3D  
                                                    l13810 0B5C  
                                                    l13802 0B53  
                                                    l14530 11FE  
                                                    l14522 11F2  
                                                    l13394 1468  
                                                    l14290 0DCB  
                                                    l14274 0DA7  
                                                    l14186 0454  
                                                    l14178 044D  
                                                    l14258 11B2  
                                                    l13546 12EB  
                                                    l13562 0817  
                                                    l13554 0800  
                                                    l12932 125A  
                                                    l12924 124D  
                                                    l12668 1E72  
                                                    l12780 15F8  
                                                    l12772 15EE  
                                                    l12676 1EB6  
                                                    l12684 1F8B  
                                                    l12692 1F6A  
                                                    l12756 0A2F  
                                                    l12764 1F61  
                                                    l12844 15AD  
                                                    l12836 159A  
                                                    l12852 1041  
                                                    l12860 1050  
                                                    l12916 17F7  
                                                    l12908 17E8  
                                                    l13580 0C4D  
                                                    l13628 1F07  
                                                    l14356 14C3  
                                                    l14348 14B1  
                                                    l13644 0849  
                                                    l13636 0828  
                                                    l14452 0639  
                                                    l14444 062D  
                                                    l14436 060A  
                                                    l14428 05F6  
                                                    l14372 178E  
                                                    l14364 1765  
                                                    l14380 0684  
                                                    l13572 149B  
                                                    l13476 0EDE  
                                                    l13468 0EBA  
                                                    l13652 1369  
                                                    l13732 0982  
                                                    l13724 096B  
                                                    l13716 0963  
                                                    l13708 094E  
                                                    l13492 1F31  
                                                    l13484 1F43  
                                                    l13820 1FCF  
                                                    l13812 0B5F  
                                                    l13804 0B56  
                                                    l13740 1FD5  
                                                    l14532 1201  
                                                    l14524 11F5  
                                                    l13396 1488  
                                                    l14276 0DB5  
                                                    l14268 0D93  
                                                    l14188 0459  
                                                    l13564 0818  
                                                    l13556 0800  
                                                    l13900 02C1  
                                                    l14540 0BFD  
                     __end_of_TMAG5273_GetTemperatureValue 1064  
                             _TMAG5273_GetTemperatureValue 1057  
                                                    l12870 1E77  
                                                    l12934 125D  
                                                    l12926 1254  
                                                    l12846 1E7D  
                                                    l12598 10BC  
                                                    l12774 15F1  
                                                    l12790 15FE  
                                                    l12678 1EB7  
                                                    l12686 1F90  
                                                    l12694 1F6E  
                                                    l12766 1F63  
                                                    l12838 159D  
                                                    l12854 1044  
                                                    l12862 1052  
                                                    l12918 17FA  
                                                    l12942 1EE6  
                                                    l13590 0C70  
                                                    l13582 0C4E  
                                                    l14358 14CA  
                                                    l12950 14D7  
                                                    l13638 0829  
                                                    l14438 0611  
                                                    l14366 176E  
                                                    l14390 06ED  
                                                    l14382 0689  
                                                    l14374 065D  
                                                    l13574 149D  
                                                    l13670 1027  
                                                    l13478 0EE0  
                                                    l13662 137D  
                                                    l14470 12A6  
                                                    l13734 0983  
                                                    l13726 0972  
                                                    l13718 0965  
                                                    l13486 1F49  
                                                    l13742 1FA4  
                                                    l13822 1FD2  
                                                    l13814 0B61  
                                                    l13806 0B58  
                                                    l13750 0B1B  
                                                    l14534 1204  
                                                    l14526 11F8  
                                                    l14278 0DBA  
                                                    l14286 0DC1  
                                                    l14198 0465  
                                                    l13830 11C7  
                                                    l13558 0802  
                                                    l13910 032F  
                                                    l13902 02C7  
                                                    l12936 1260  
                                                    l12928 1255  
                                                    l12784 15FA  
                                                    l12768 1F66  
                                                    l12848 103D  
                                                    l12880 13CD  
                                                    l12872 13BE  
                                                    l12864 1055  
                                                    l12856 104A  
                                                    l13592 0C78  
                                                    l13584 0C54  
                                                    l12960 14F3  
                                                    l12952 14D7  
                                                    l13648 0855  
                                                    l14456 063C  
                                                    l14368 1774  
                                                    l14392 06F1  
                                                    l14384 0694  
                                                    l14376 0667  
                                                    l13576 14AC  
                                                    l13568 148C  
                                                    l13656 136B  
                                                    l14472 12A9  
                                                    l14464 1295  
                                                    l13736 0984  
                                                    l13728 0979  
                                                    l13488 1F37  
                                                    l13680 09A1  
                                                    l13672 098C  
                                                    l13744 1FA6  
                                                    l13824 1FD3  
                                                    l13816 1FCB  
                                                    l13808 0B5A  
                                                    l13760 0B2E  
                                                    l13752 0B1D  
                                                    l14528 11FB  
                                                    l14536 1EF0  
                                                    l14288 0DC6  
                                                    l14296 0DCD  
                                                    l13832 11CF  
                                                    l13912 0337  
                                                    l13904 02F4  
                                                    l14560 0C3E  
                                                    l14552 0C2C  
                                                    l14544 0C06  
                                                    l12938 1263  
                                                    l12778 15F5  
                                                    l12698 0CED  
                                                    l12882 13D1  
                                                    l12874 13C5  
                                                    l12858 104F  
                                                    l13594 0C7C  
                                                    l13586 0C5A  
                                                    l12962 14F4  
                                                    l12954 14DD  
                                                    l12946 1EA7  
                                                    l14394 06FA  
                                                    l14386 06AB  
                                                    l14378 0672  
                                                    l13666 1003  
                                                    l14482 1000  
                                                    l13658 1379  
                                                    l14490 1039  
                                                    l14466 129B  
                                                    l13738 0989  
                                                    l13690 09B0  
                                                    l13682 09A3  
                                                    l13674 098E  
                                                    l13746 1FA8  
                                                    l13818 1FCE  
                                                    l13770 0B34  
                                                    l13762 0B30  
                                                    l13754 0B1F  
                                                    l13826 118A  
                                                    l14298 0DD2  
                                                    l13834 11D8  
                                                    l13914 033D  
                                                    l13906 02FC  
                                                    l13850 00E5  
                                                    l13842 00AA  
                                                    l13930 08EF  
                                                    l13922 08D6  
                                                    l12868 1E7A  
                                                    l12884 13D4  
                                                    l12876 13C6  
                                                    l12892 17CB  
                                                    l13596 0C85  
                                                    l13588 0C69  
                                                    l12980 1514  
                                                    l12972 14FD  
                                                    l12964 14F6  
                                                    l12956 14E9  
                                                    l14396 0592  
                                                    l14388 06BD  
                                                    l13668 1FF5  
                                                    l14492 103B  
                                                    l14468 12A1  
                                                    l13692 09B7  
                                                    l13684 09A5  
                                                    l13676 0995  
                                                    l13748 1FAB  
                                                    l13780 0B3A  
                                                    l13772 0B35  
                                                    l13764 0B31  
                                                    l13756 0B2A  
                                                    l13828 1198  
                                                    l13916 036B  
                                                    l13908 0302  
                                                    l13860 012C  
                                                    l13852 00ED  
                                                    l13844 00AA  
                                                    l13932 08F7  
                                                    l13924 08D6  
                                                    l14564 0C47  
                                                    l14556 0C35  
                                                    l14548 0C23  
                                                    l12798 1ECD  
                                                    l12886 13D7  
                                                    l12878 13C8  
                                                    l12894 17D2  
                                                    l13598 0C8D  
                                                    l12982 1518  
                                                    l12974 14FD  
                                                    l12966 14F9  
                                                    l12958 14ED  
                                                    l12990 1EAB  
                                                    l14398 0593  
                                                    l14486 1031  
                                                    l14478 12AB  
                                                    l13694 09BE  
                                                    l13686 09A7  
                                                    l13678 099E  
                                                    l13790 0B44  
                                                    l13782 0B3C  
                                                    l13774 0B36  
                                                    l13766 0B32  
                                                    l13758 0B2C  
                                                    l13838 11DA  
                                                    l13870 019B  
                                                    l13862 0158  
                                                    l13854 00F2  
                                                    l13918 0373  
                                                    l13846 00B5  
                                                    l13950 072C  
                                                    l13942 0708  
                                                    l13934 08FC  
                                                    l13926 08E1  
                                                    l12888 13DA  
                                                    l12896 17D4  
                                                    l12984 151E  
                                                    l12976 1508  
                                                    l12968 14FB  
                                                    l14496 07A1  
                                                    l14488 1031  
                                                    l13696 09C0  
                                                    l13688 09A9  
                                                    l13792 0B45  
                                                    l13784 0B3E  
                                                    l13776 0B37  
                                                    l13768 0B33  
                                                    l13880 0208  
                                                    l13872 01A1  
                                                    l13864 0160  
                                                    l13856 011E  
                                                    l13848 00BA  
                                                    l13960 075C  
                                                    l13952 0734  
                                                    l13944 0708  
                                                    l13936 0906  
                                                    l13928 08E6  
                                                    l12898 17D5  
                                                    l12986 151F  
                                                    l12978 150D  
                                                    l12994 154B  
                                                    l14498 07E7  
                                                    l13698 09C1  
                                                    l13794 0B46  
                                                    l13786 0B40  
                                                    l13778 0B38  
                                                    l13890 0251  
                                                    l13882 0210  
                                                    l13874 01CD  
                                                    l13866 0166  
                                                    l13858 0126  
                                                    l13962 0771  
                                                    l13954 0739  
                                                    l13970 079D  
                                                    l13946 0713  
                                                    l13938 090D  
                                                    l12988 1521  
                                                    l12996 154B  
                                                    l13796 0B47  
                                                    l13788 0B42  
                                                    l13892 027F  
                                                    l13884 0216  
                                                    l13876 01D5  
                                                    l13868 0193  
                                                    l13964 0779  
                                                    l13956 074E  
                                                    l13948 0718  
                                                    l13980 09DC  
                                                    l16630 0A3D  
                                                    l12998 1551  
                                                    l13798 0B4E  
                                                    l13894 0287  
                                                    l13886 0243  
                                                    l13878 01DB  
                                                    l13966 077F  
                                                    l13958 0756  
                                                    l13990 0A05  
                                                    l13982 09E6  
                                                    l13974 09CC  
                                                    l16632 0D15  
                                                    l13896 028D  
                                                    l13888 024B  
                                                    l13968 0795  
                                                    l13984 09EE  
                                                    l13976 09CC  
                                                    l16634 160C  
                                                    l16626 0644  
                                                    l13898 02B9  
                                                    l13986 09F3  
                                                    l13978 09D7  
                                                    l13994 0913  
                                                    l16628 1591  
                                                    l13988 09FE  
                                                    l13996 0913  
                                                    l13998 091E  
                                    _eusart1RxStatusBuffer 00BD  
                                        __end_of_I2C1_Open 1800  
                                                    ?_main 0070  
                                           _i2c_readNBytes 139D  
                           ?_RN487X_SetAsyncMessageHandler 0071  
                                                    ?_swap 0071  
                                                    u10000 0CBF  
                                                    u10001 0CBE  
                                                    u10010 0CC8  
                                                    u10011 0CC7  
                                                    u10100 0ADE  
                                                    u10020 0CCE  
                                                    u10101 0ADD  
                                                    u10021 0CCD  
                                                    u10110 0AEB  
                                                    u10030 0CDE  
                                                    u10111 0AEA  
                                                    u10031 0CDD  
                                                    u10120 1427  
                                                    u10040 1389  
                                                    u11000 03BF  
                                                    u10200 172F  
                                                    u10121 1426  
                                                    u10041 1388  
                                                    u11001 03BE  
                                                    u10201 172E  
                                                    u10210 1151  
                                                    u10130 1438  
                                                    u10050 139A  
                                                    u11010 03C4  
                                                    u10211 114F  
                                                    u10131 1437  
                                                    u10051 1399  
                                                    u11011 03C3  
                                                    u10060 0B76  
                                                    u10220 1152  
                                                    u10300 1F9A  
                                                    u10140 17C9  
                                                    u11100 03F5  
                                                    u11020 03C9  
                                                    u10061 0B75  
                                                    u10141 17C8  
                                                    u11101 03F4  
                                                    u11021 03C8  
                                                    u10070 0B9D  
                                                    u10230 1162  
                                                    u10310 1FA2  
                                                    u10150 0E41  
                                                    u11110 03FC  
                                                    u11030 03D0  
                                                    u10071 0B9C  
                                                    u10231 1160  
                                                    u10311 1FA0  
                                                    u10151 0E40  
                                                    u11111 03FB  
                                                    u11031 03CF  
                                                    u10080 0BA2  
                                                    u10240 1163  
                                                    u10320 1FA3  
                                                    u10160 0E64  
                                                    u11200 042D  
                                                    u11120 0401  
                                                    u11040 03D5  
                                                    u10081 0BA1  
                                                    u10145 17C5  
                                                    u10161 0E63  
                                                    u11201 042C  
                                                    u11121 0400  
                                                    u11041 03D4  
                                                    u10090 0BAD  
                                                    u10250 0A58  
                                                    u10170 0E84  
                                                    u10410 0EA0  
                                                    u11210 0432  
                                                    u11130 0406  
                                                    u11050 03DA  
                                                    u10091 0BAC  
                                                    u10251 0A57  
                                                    u10171 0E83  
                                                    u10411 0E9F  
                                                    u11211 0431  
                                                    u11131 0405  
                                                    u11051 03D9  
                                                    u10260 0A7D  
                                                    u10180 0E8D  
                                                    u10420 0EA6  
                                                    u10340 1479  
                                                    u11300 0463  
                                                    u11220 0437  
                                                    u11140 040B  
                                                    u11060 03DF  
                                                    u10500 0809  
                                                    u10405 1697  
                                                    u10261 0A7C  
                                                    u10181 0E8C  
                                                    u10421 0EA5  
                                                    u10341 1477  
                                                    u11301 0462  
                                                    u11221 0436  
                                                    u11141 040A  
                                                    u11061 03DE  
                                                    u10501 0808  
                                                    u10270 0AA4  
                                                    u10430 0ECD  
                                                    u10350 147A  
                                                    u10334 1470  
                                                    u11310 046A  
                                                    u11230 043E  
                                                    u11150 0412  
                                                    u11070 03E6  
                                                    u10190 170A  
                                                    u10271 0AA3  
                                                    u10431 0ECC  
                                                    u10335 146E  
                                                    u11311 0469  
                                                    u11231 043D  
                                                    u11151 0411  
                                                    u11071 03E5  
                                                    u10191 1709  
                                                    u10600 083B  
                                                    u10280 0ABA  
                                                    u10440 0EDE  
                                                    u10360 1488  
                                                    u11400 049B  
                                                    u11320 046F  
                                                    u11240 0443  
                                                    u11160 0417  
                                                    u11080 03EB  
                                                    u10601 083A  
                                                    u10281 0AB9  
                                                    u10441 0EDD  
                                                    u10361 1487  
                                                    u11401 049A  
                                                    u11321 046E  
                                                    u11241 0442  
                                                    u11161 0416  
                                                    u11081 03EA  
                                                    u10370 1652  
                                                    u10610 0844  
                                                    u10290 1F99  
                                                    u11410 04A0  
                                                    u11330 0474  
                                                    u11250 0448  
                                                    u11170 041C  
                                                    u11090 03F0  
                                                    u10514 0810  
                                                    u10371 1651  
                                                    u10611 0842  
                                                    u10291 1F97  
                                                    u10435 0EC9  
                                                    u11411 049F  
                                                    u11331 0473  
                                                    u11251 0447  
                                                    u11171 041B  
                                                    u11091 03EF  
                                                    u10515 080F  
                                                    u10540 0C78  
                                                    u10620 0845  
                                                    u11500 0DCB  
                                                    u11420 04A5  
                                                    u11340 0479  
                                                    u11260 044D  
                                                    u11180 0421  
                                                    u10524 081D  
                                                    u10460 0E28  
                                                    u10700 00F2  
                                                    u10541 0C77  
                                                    u11501 0DCA  
                                                    u11421 04A4  
                                                    u11341 0478  
                                                    u11261 044C  
                                                    u11181 0420  
                                                    u10525 081C  
                                                    u10461 0E27  
                                                    u10701 00F1  
                                                    u10390 1680  
                                                    u10550 0C8D  
                                                    u10630 1369  
                                                    u11510 0DD2  
                                                    u11430 04AC  
                                                    u11350 0480  
                                                    u11270 0454  
                                                    u11190 0428  
                                                    u10470 0E2D  
                                                    u10710 012C  
                                                    u10391 167F  
                                                    u10551 0C8C  
                                                    u10535 0C5D  
                                                    u10631 1368  
                                                    u11511 0DD1  
                                                    u11431 04AB  
                                                    u11351 047F  
                                                    u11271 0453  
                                                    u11191 0427  
                                                    u10471 0E2C  
                                                    u10711 012B  
                                                    u11600 05BC  
                                                    u10640 1379  
                                                    u11520 0DD7  
                                                    u11440 04B1  
                                                    u11360 0485  
                                                    u11280 0459  
                                                    u10480 0E32  
                                                    u10800 033D  
                                                    u10720 0166  
                                                    u12400 058D  
                                                    u12320 04DC  
                                                    u10385 1669  
                                                    u11601 05BB  
                                                    u10641 1378  
                                                    u11521 0DD6  
                                                    u11441 04B0  
                                                    u11361 0484  
                                                    u11281 0458  
                                                    u10481 0E31  
                                                    u10801 033C  
                                                    u10721 0165  
                                                    u12401 058C  
                                                    u12321 04DB  
                                                    u10570 0FF4  
                                                    u10650 1008  
                                                    u11530 0DDE  
                                                    u11450 04B6  
                                                    u11370 048A  
                                                    u11290 045E  
                                                    u10490 0E37  
                                                    u10730 01A1  
                                                    u10810 08E6  
                                                    u12330 04E4  
                                                    u10571 0FF3  
                                                    u10651 1007  
                                                    u11531 0DDD  
                                                    u11451 04B5  
                                                    u11371 0489  
                                                    u11291 045D  
                                                    u10491 0E36  
                                                    u10731 01A0  
                                                    u10811 08E5  
                                                    u12331 04E3  
                                                    u11620 05DF  
                                                    u10660 1FFA  
                                                    u11700 07FE  
                                                    u11540 0DE3  
                                                    u11460 04BB  
                                                    u11380 048F  
                                                    u10740 01DB  
                                                    u10820 08FC  
                                                    u10900 0939  
                                                    u12340 0504  
                                                    u10565 0FAD  
                                                    u11621 05DE  
                                                    u10661 1FF9  
                                                    u11701 07FD  
                                                    u11541 0DE2  
                                                    u11461 04BA  
                                                    u11381 048E  
                                                    u10741 01DA  
                                                    u10821 08FB  
                                                    u10901 0938  
                                                    u12341 0503  
                                                    u10590 0837  
                                                    u11630 05F6  
                                                    u11550 178E  
                                                    u10670 102C  
                                                    u11470 0DBA  
                                                    u11390 0496  
                                                    u10910 0D66  
                                                    u10750 0216  
                                                    u10830 0718  
                                                    u12350 0522  
                                                    u10591 0836  
                                                    u11631 05F5  
                                                    u11615 05CF  
                                                    u11551 178D  
                                                    u10671 102B  
                                                    u11471 0DB9  
                                                    u11391 0495  
                                                    u10911 0D65  
                                                    u10751 0215  
                                                    u10831 0717  
                                                    u12351 0521  
                                                    u11640 0601  
                                                    u11480 0DBF  
                                                    u10920 0D6B  
                                                    u10680 11D8  
                                                    u10760 0251  
                                                    u10840 0739  
                                                    u12360 052D  
                                                    u10585 082C  
                                                    u11641 0600  
                                                    u11481 0DBE  
                                                    u10921 0D6A  
                                                    u10681 11D7  
                                                    u10761 0250  
                                                    u10841 0738  
                                                    u12361 052C  
                                                    u11650 0632  
                                                    u11490 0DC6  
                                                    u10930 0D72  
                                                    u10770 028D  
                                                    u10690 00BA  
                                                    u10850 075C  
                                                    u12370 0533  
                                                    u11651 0631  
                                                    u11555 178A  
                                                    u11491 0DC5  
                                                    u10931 0D71  
                                                    u10771 028C  
                                                    u10691 00B9  
                                                    u10851 075B  
                                                    u12371 0532  
                                                    u11660 0639  
                                                    u11580 06FA  
                                                    u10940 0D77  
                                                    u10780 02C7  
                                                    u10860 077F  
                                                    u11740 0C05  
                                                    u12380 0552  
                                                    u11661 0638  
                                                    u11581 06F9  
                                                    u11565 0697  
                                                    u10941 0D76  
                                                    u10781 02C6  
                                                    u10861 077E  
                                                    u11741 0C04  
                                                    u12381 0551  
                                                    u11590 05A1  
                                                    u11670 129B  
                                                    u10950 0D7E  
                                                    u10790 0302  
                                                    u10870 09DC  
                                                    u11750 0C22  
                                                    u12390 056B  
                                                    u11591 05A0  
                                                    u11575 06C4  
                                                    u11671 129A  
                                                    u10951 0D7D  
                                                    u10791 0301  
                                                    u10871 09DB  
                                                    u11751 0C21  
                                                    u12391 056A  
                                                    u11680 12A1  
                                                    u10960 0D83  
                                                    u10880 09F3  
                                                    u11760 0C2B  
                                                    u11681 12A0  
                                                    u10961 0D82  
                                                    u10881 09F2  
                                                    u11761 0C2A  
                                                    u11690 1039  
                                                    u10970 0D8A  
                                                    u10890 0923  
                                                    u11770 0C34  
                                                    u11691 1038  
                                                    u10971 0D89  
                                                    u10891 0922  
                                                    u11771 0C33  
                                                    u10980 0D8F  
                                                    u11780 0C3D  
                                                    u10981 0D8E  
                                                    u11781 0C3C  
                                                    u10990 03BA  
                                                    u11790 0C46  
                                                    u14167 11E0  
                                                    u10991 03B9  
                                                    u11791 0C45  
                            __end_of_rn487x_driver_version 2012  
                               __end_of_i2c1_fsmStateTable 1848  
                                                    _OSCEN 0891  
                                                    _TMR0H 059D  
                                                    _TMR0L 059C  
                                                    _TRISA 0012  
                                                    _TRISB 0013  
                                                    _TRISC 0014  
                                                    _TRISE 0016  
                                   ??_I2C1_MasterGetRxData 0071  
                              LIGHTBLUE_PushButton@payload 0021  
                                          __end_of_bitRead 148C  
                                    ?_I2C1_DO_RX_NACK_STOP 0070  
                                        ??_I2C1_MasterRead 007B  
                               ??_I2C1_CallbackReturnReset 0079  
                                        ??_I2C1_MasterOpen 0071  
                                     _EUSART1_Transmit_ISR 13FF  
                                        ??_I2C1_MasterStop 0071  
                                        ??_I2C1_Initialize 0071  
                                                    _pHead 004E  
                                                    _begin 0BFD  
                                  __end_of_PIN_MANAGER_IOC 1F89  
                                           ??_RN487X_Delay 0076  
                           BMA253_GetAccelDataY@yAccelData 002D  
                                           ??_RN487X_Reset 0072  
                                    _i2c_read1ByteRegister 0B64  
                                           ?_EUSART1_Write 0071  
                                           ??_RN487X_Write 0077  
                                           ?_EUSART2_Write 0071  
                                   __end_of_RN487X_ReadMsg 15EE  
                                                    pclath 000A  
                                i2c_write1ByteRegister@reg 0024  
                                   __end_of_RN487X_SendCmd 1700  
                                           ??_EUSART1_Read 0071  
                                LIGHTBLUE_PerformAction@id 0029  
                                           ??_EUSART2_Read 0071  
                                                    status 0003  
                                   __end_of_setXYAxisRange 0A09  
                                                    wtemp0 007E  
                                             ??_I2C1_DO_RX 0079  
                                             ??_I2C1_DO_TX 0079  
                                          __end_of_strncmp 0CED  
                                   ??_RN487X_SetSystemMode 0072  
               __end_of_EUSART1_DefaultFramingErrorHandler 1E6F  
                     ??_EUSART1_DefaultFramingErrorHandler 0070  
                      ?_EUSART1_DefaultFramingErrorHandler 0070  
                       _EUSART1_DefaultFramingErrorHandler 1E6E  
                                   ??_I2C1_DO_ADDRESS_NACK 0079  
                             __end_of_RN487X_EnterDataMode 1347  
                                             ??_I2C1_Close 0071  
                    __end_of_EUSART2_SetTxInterruptHandler 1F4F  
                            _EUSART2_SetTxInterruptHandler 1F49  
                                            _fsmStateTable 1848  
                                          __initialization 0057  
                                   _rn487x_PrintMessageEnd 0BAF  
                                               _i2c_status 0120  
                               __end_of_EUSART1_Initialize 098C  
                                             __end_of_main 0590  
                                             __end_of_uart 1828  
                              ?_LIGHTBLUE_GetErrorLedValue 0070  
                                             __end_of_swap 11B2  
                                 _LIGHTBLUE_UpdateErrorLed 1347  
                                   __end_of_i2c_readNBytes 13BC  
                               __end_of_RN487X_is_rx_ready 1FCB  
                              ?_INTERRUPT_InterruptManager 0070  
                               ?_LIGHTBLUE_GetDataLedValue 0070  
                           BMA253_GetAccelDataZ@zAccelData 002D  
                                            _do_I2C_DO_ACK 0000  
                                   ??_I2C1_MasterOperation 007B  
                                                   ??_main 0049  
                                                   ??_swap 0073  
                                ?_rn487x_PrintMessageStart 0070  
                            ?_TMAG5273_GetTemperatureValue 0038  
                      __end_of_EUSART2_DefaultErrorHandler 1E9B  
                              _EUSART2_DefaultErrorHandler 1E97  
                                  _LIGHTBLUE_PerformAction 0826  
                         RN487X_MessageHandler@messageType 0043  
                         __end_of_LIGHTBLUE_SendSerialData 0706  
                                    ?_EUSART1_Transmit_ISR 0070  
                                       __end_of_I2C1_DO_RX 0A4C  
                                       __end_of_I2C1_DO_TX 0D40  
                                         _RN487X_DataReady 1363  
                                       __end_of_I2C1_Close 1265  
                                            ?_readRegister 0070  
                                                   ?_begin 0070  
                               __end_of_EUSART2_Initialize 09CA  
                             ??_IOCAF6_SetInterruptHandler 0073  
                                 _eusart2TxBufferRemaining 0061  
                                                   _ANSELA 1F38  
                                                   _ANSELB 1F43  
                                                   _ANSELC 1F4E  
                             ??_LIGHTBLUE_SetErrorLedValue 007B  
                                                   _T0CON0 059E  
                                                   _T0CON1 059F  
                                    _i2c_read2ByteRegister 0A4C  
                                                   _RC1REG 0119  
                                                   _RC2REG 0A19  
                                                   _RB1PPS 1F19  
                                                   _RB2PPS 1F1A  
                                                   _RC1STA 011D  
                                                   _RB4PPS 1F1C  
                                                   _RC2STA 0A1D  
                                                   i1l1102 1E9E  
                                                   i1l1105 1E9A  
                                                   _RC4PPS 1F24  
                                                   i1l1300 0035  
                                                   i1l1301 0053  
                                                   i1l1302 0044  
                                                   i1l1232 141E  
                                                   i1l1242 08D3  
                                                   i1l1082 13FC  
                                                   i1l1235 1420  
                                                   i1l1307 0053  
                                                   i1l1252 1E96  
                                                   i1l1092 0896  
                                                   i1l1085 13FE  
                                                   i1l1246 1311  
                                                   i1l1255 1E92  
                                                   i1l1096 124C  
                                                   i1l1249 1E6E  
                                                   _ODCONA 1F3A  
                                                   _ODCONB 1F45  
                                                   i1l1099 1E6F  
                                                   i1l1451 109C  
                                                   _ODCONC 1F50  
                                                   _ODCONE 1F66  
                                                   i1l1447 1F88  
                                                   i1l1295 0013  
                                                   i1l1457 07FF  
                                                   i1l1298 0026  
                                                   _RN487X 1868  
                                          ?_RN487X_ReadMsg 0073  
                                                   i1l9340 108E  
                                                   i1l9246 1E93  
                                                   i1l9342 1095  
                                                   i1l9248 1E8F  
                                                   i1l9344 109A  
                                                   _INLVLA 1F3C  
                                                   _INLVLB 1F47  
                                                   _INLVLC 1F52  
                                                   i1l8980 130C  
                                                   i1l8982 130D  
                                                   i1l8974 12F8  
                                                   i1l8976 1301  
                                                   i1l8978 1306  
                                                   u700_20 13E4  
                                                   u700_21 13E3  
                                                   u701_20 13F6  
                                                   u701_21 13F5  
                                                   u710_20 1F85  
                                                   u710_21 1F84  
                                                   u705_20 1406  
                                                   u705_21 1405  
                       __end_of_RN487X_ReadDefaultResponse 0F74  
                               _RN487X_ReadDefaultResponse 0EEC  
                                                   u706_20 1418  
                                                   u706_21 1417  
                                                   u707_20 08A2  
                                                   u707_21 08A1  
                                                   u708_20 08B3  
                                                   u708_21 08B2  
                                                   _OSCFRQ 0893  
                                                   u709_20 08C9  
                                                   u709_21 08C8  
                                                   u590_20 1095  
                                                   u590_21 1094  
                                                   u567_20 130C  
                                                   u567_21 130B  
                                          ?_RN487X_SendCmd 0077  
                                                   _TX1REG 011A  
                                                   _TX2REG 0A1A  
                                                   _TX1STA 011E  
                                                   _TX2STA 0A1E  
                                        ?_I2C1_MasterClose 0070  
                                 rdBlkRegCompleteHandler@p 0078  
                                          ?_setXYAxisRange 0070  
                                  ??_I2C1_MasterDisableIrq 0071  
                                        ?_I2C1_MasterStart 0070  
                                        ?_I2C1_MasterWrite 0070  
                                 ?_I2C1_MasterWaitForEvent 0070  
                                       ??_I2C1_MasterClose 0071  
                                         _I2C1_DO_TX_EMPTY 15EE  
                                         __end_of_bitWrite 0826  
                                setXYAxisRange@xyAxisRange 0038  
                                         __end_of_getError 0E3B  
                    __end_ofRN487X_EnterDataMode@cmdPrompt 200B  
                            RN487X_EnterDataMode@cmdPrompt 2006  
                                       ??_I2C1_MasterStart 0071  
                              BMA253_GetAccelDataY@lsbData 002E  
                        BMA253_GetAccelDataXYZ@sensorValue 0034  
                                       ??_I2C1_MasterWrite 007B  
                              BMA253_GetAccelDataY@msbData 002F  
                   LIGHTBLUE_TemperatureSensor@temperature 003F  
                              BMA253_GetAccelDataZ@lsbData 002E  
                                 __end_of_setOperatingMode 07A1  
                              BMA253_GetAccelDataZ@msbData 002F  
                                                   _cmdBuf 01A0  
                                                   _bitMap 0054  
                             __end_of_BMA253_GetAccelDataY 1676  
                             __end_of_BMA253_GetAccelDataZ 16A4  
                                RN487X_FilterData@readChar 0048  
                                 ?_EUSART1_SetErrorHandler 0071  
                                          ?_i2c_readNBytes 0024  
                                         ?_TMR0_Initialize 0070  
                                                ??_bitRead 0074  
                              _EUSART2_FramingErrorHandler 016B  
                         ??_EUSART1_SetOverrunErrorHandler 0073  
                          ?_EUSART1_SetOverrunErrorHandler 0071  
                        __end_of_LIGHTBLUE_GetDataLedValue 1F0D  
                                                   _strchr 137F  
                                 ??_I2C1_DO_SEND_ADR_WRITE 0072  
                                                   _strcpy 1312  
                                                   _strlen 12AD  
                                                   _strstr 0E3B  
                                        ?_I2C1_SetCallback 0071  
                                   ??_I2C1_DO_RX_NACK_STOP 0071  
                              LIGHTBLUE_SendPacket@payload 0077  
                                    _I2C1_DO_SEND_ADR_READ 1F89  
                                           _PMD_Initialize 1FD5  
                                  _BMA253_NewAccelDataRdyY 1144  
                                  _BMA253_NewAccelDataRdyZ 1155  
                            ?_I2C1_SetDataCompleteCallback 0075  
                               i2c_write1ByteRegister@data 0025  
                                       ??_I2C1_SetCallback 0074  
                                           ??_readRegister 007C  
                                     _EUSART2_Transmit_ISR 13DD  
                               LIGHTBLUE_PerformAction@led 002A  
                           __end_ofRN487X_RebootCmd@reboot 1891  
                                   ?_i2c_read1ByteRegister 0024  
                                          ??_EUSART1_Write 0072  
                                          ??_EUSART2_Write 0072  
               IOCAF6_SetInterruptHandler@InterruptHandler 0071  
                                         ?_PIN_MANAGER_IOC 0070  
                                          _eusart1RxBuffer 0144  
                                                ??_strncmp 0077  
                                            _manufactureId 004A  
                                  _I2C1_DO_RX_NACK_RESTART 1ED7  
                                             ??_IOCAF6_ISR 0070  
                                    _RN487X_MessageHandler 0A8F  
                                        RN487X_SendCmd@cmd 007A  
                                          _eusart2RxBuffer 00D5  
                                          _eusart1TxBuffer 00C5  
                                 ?_TMAG5273_GetManufacture 002D  
                                        _SYSTEM_Initialize 11F2  
                           I2C1_SetDataCompleteCallback@cb 0075  
                                          _eusart2TxBuffer 00DD  
                                  __end_of__initialization 00A4  
                                  _protocol_version_number 2012  
                                         _do_I2C_SEND_STOP 0000  
                                   getOperatingMode@opMode 0030  
                          I2C1_MasterOperation@returnValue 0023  
                                       ?_SYSTEM_Initialize 0070  
                                            ??_I2C1_Poller 007B  
                                  ??_EUSART2_RxDataHandler 0070  
                     __end_ofRN487X_EnterCmdMode@cmdPrompt 2010  
                             RN487X_EnterCmdMode@cmdPrompt 200B  
                            __end_of_EUSART1_RxDataHandler 1312  
                                  _rdBlkRegCompleteHandler 1265  
                                           __pcstackCOMMON 0070  
                                             __pidataBANK0 0002  
                                             __pidataBANK2 1166  
                                      ??_SYSTEM_Initialize 0073  
                         __end_of_I2C1_MasterEnableRestart 1E83  
                                            __end_of_begin 0C4B  
                                     __end_of_RN487X_Delay 1F78  
                                            _readRegisters 10AC  
                                            swap@lowerByte 0079  
                           ?_EUSART2_SetTxInterruptHandler 0071  
                                 ??_BMA253_GetAccelDataXYZ 0030  
                                     __end_of_RN487X_Reset 100E  
                                   setOperatingMode@opMode 0038  
                                     __end_of_RN487X_Write 1025  
                                ??_LIGHTBLUE_PerformAction 0028  
                                   __end_of_PMD_Initialize 1FDF  
                             ??_I2C1_DO_SEND_RESTART_WRITE 0071  
                           ?_LIGHTBLUE_SendProtocolVersion 0070  
                                  ??_I2C1_MasterSendTxData 0071  
                                       __end_of_IOCAF6_ISR 109D  
                                     __end_of_EUSART1_Read 1572  
                                     __end_of_EUSART2_Read 14FD  
                                      _LIGHTBLUE_SplitByte 1730  
                                        RN487X_Reset@value 0071  
                                   ??_EUSART1_Transmit_ISR 0070  
                                      _LIGHTBLUE_SplitWord 1080  
                                ?_LIGHTBLUE_GetButtonValue 0070  
                                 ?_EUSART2_SetErrorHandler 0071  
                                     _RN487X_EnterDataMode 132C  
                                    ?_EUSART2_Transmit_ISR 0070  
                              __end_of_EUSART1_Receive_ISR 08D4  
                                    __end_of_I2C1_DO_RESET 1EE1  
                                       readRegister@regVal 002D  
                                 __end_of_setTemperatureEn 0911  
                                                  ??_begin 007C  
                                   ?_i2c_read2ByteRegister 0024  
                           ??_TMAG5273_GetTemperatureValue 007B  
                                   _do_I2C_DO_NACK_RESTART 0000  
                                __end_of_SYSTEM_Initialize 1208  
                                 _LIGHTBLUE_SendSerialData 065C  
                                  writeRegister@regAddress 0027  
                                            _eusart1RxHead 005A  
                                            swap@upperByte 0078  
                                            _eusart1TxHead 005D  
                                            _eusart2RxHead 007C  
                                            _eusart1RxTail 0059  
                                            _eusart2TxHead 0063  
                                               __pbssBANK0 004A  
                                               __pbssBANK1 00A0  
                                               __pbssBANK2 0120  
                                               __pbssBANK3 01A0  
                                               __pbssBANK4 0220  
                                               __pbssBANK5 02A0  
                                               __pbssBANK6 0320  
                                            _eusart2RxTail 0060  
                                            _eusart1TxTail 005C  
                          __end_of_I2C1_MasterWaitForEvent 1F01  
                        _EUSART1_TxDefaultInterruptHandler 0165  
                                            _eusart2TxTail 0062  
                          ??_EUSART1_SetRxInterruptHandler 0073  
                               __end_of_LIGHTBLUE_LedState 14D7  
                            __end_of_rd2RegCompleteHandler 1100  
                                       _DELAY_milliseconds 11DC  
                             __end_of_LIGHTBLUE_Initialize 1F07  
                                     I2C1_Open@returnValue 0072  
                         ??_EUSART2_SetFramingErrorHandler 0073  
                          ?_EUSART2_SetFramingErrorHandler 0071  
                                     ?_LIGHTBLUE_SplitByte 0076  
                                       _getMagneticChannel 0377  
                                       _setMagneticChannel 00A8  
                                     ?_LIGHTBLUE_SplitWord 0079  
                            __end_of_wr2RegCompleteHandler 1111  
                        TMAG5273_CalcTemperature@lowerByte 0035  
                                    _rd1RegCompleteHandler 10DE  
                                    EUSART2_Read@readValue 0072  
                                        _I2C1_DO_SEND_STOP 1EC8  
                                    _wr1RegCompleteHandler 10CD  
                          __end_of_EUSART1_SetErrorHandler 1F19  
                                      ?_DELAY_milliseconds 0071  
                                               __pmaintext 04BD  
                                               _getAngleEn 0D93  
                                  ?_i2c_write1ByteRegister 0024  
                           LIGHTBLUE_SendSerialData@length 0078  
                                    i2c_readNBytes@address 007B  
                                      ?_getMagneticChannel 0070  
                                      ?_setMagneticChannel 0070  
                                       ?_I2C1_DO_SEND_STOP 0070  
                                       getAngleEn@angleReg 0030  
                         rn487x_PrintMessage@passedMessage 0077  
                          rn487x_PrintMessage@messageIndex 0040  
                                           ?_readRegisters 0027  
                                          _I2C1_MasterRead 1EE6  
                                          _I2C1_MasterOpen 104A  
                                               __pintentry 0004  
                                          _I2C1_MasterStop 1E83  
                                          _I2C1_Initialize 1FA4  
                             __end_of_LIGHTBLUE_SendPacket 1000  
                                      __end_of_I2C1_Poller 104A  
                            __end_of_LIGHTBLUE_AccelSensor 16D2  
                                ??_BMA253_NewAccelDataRdyY 007B  
                                ??_BMA253_NewAccelDataRdyZ 007B  
                                          ?_PMD_Initialize 0070  
                                   ?_I2C1_DO_SEND_ADR_READ 0070  
                                                  ?_strchr 0071  
                                      ??_I2C1_DO_SEND_STOP 0071  
                                                  ?_strcpy 0071  
                                                  ?_strlen 0071  
                   __end_of_EUSART1_SetFramingErrorHandler 1F1F  
                           _EUSART1_SetFramingErrorHandler 1F19  
                                                  ?_strstr 0078  
                                                  u1220_20 000B  
                                                  u1220_21 000A  
                                                  u1045_20 1246  
                                                  u1221_20 000F  
                                                  u1045_21 1245  
                                                  u1221_21 000E  
                                                  u1230_20 004C  
                                                  u1222_20 0017  
                                                  u1230_21 004B  
                                                  u1222_21 0016  
                                    _eusart2RxStatusBuffer 00CD  
                                                  u1223_20 001B  
                                                  u1223_21 001A  
                                                  u1224_20 001F  
                                                  u1224_21 001E  
                                                  u1225_20 002A  
                                                  u1225_21 0029  
                                                  u1226_20 002E  
                                                  u1226_21 002D  
                                                  u1171_20 0868  
                                                  u1227_20 0039  
                                                  u1171_21 0867  
                                                  u1227_21 0038  
                                                  u1172_20 0878  
                                                  u1228_20 003D  
                                                  u1172_21 0877  
                                                  u1228_21 003C  
                                                  u1173_20 088C  
                                                  u1229_20 0048  
                                                  u1173_21 088B  
                                                  u1229_21 0047  
                        TMAG5273_CalcTemperature@upperByte 0034  
                                                  i1l10200 13DD  
                                                  i1l10210 13F7  
                                                  i1l10202 13E4  
                                                  i1l10204 13EB  
                                                  i1l10206 13F0  
                                                  i1l10208 13F6  
                                                  i1l10240 1418  
                                                  i1l10232 13FF  
                                                  i1l10250 08A8  
                                                  i1l10242 1419  
                                                  i1l10234 1406  
                                                  i1l10260 08C9  
                                                  i1l10252 08AE  
                                                  i1l10244 0897  
                                                  i1l10236 140D  
                                                  i1l10262 08D0  
                                                  i1l10254 08B3  
                                                  i1l10246 089D  
                                                  i1l10238 1412  
                                                  i1l10256 08B9  
                                                  i1l10248 08A2  
                                                  i1l10264 1F80  
                                                  i1l10258 08BF  
                                                  i1l10266 1F85  
                                                  i1l13500 1246  
                                                  i1l13502 1247  
                                                  i1l14510 0873  
                                                  i1l14502 085E  
                                                  i1l13704 1E9B  
                                                  i1l14520 0893  
                                                  i1l14512 0878  
                                                  i1l14504 0863  
                                                  i1l13706 1E97  
                                                  i1l14514 087D  
                                                  i1l14506 0868  
                                                  i1l14516 0883  
                                                  i1l14508 086D  
                                                  i1l13494 1235  
                                                  i1l14518 088C  
                                                  i1l13496 123C  
                                                  i1l13498 1240  
                                                  i1l14950 000B  
                                                  i1l14960 002A  
                                                  i1l14952 000F  
                                                  i1l14970 004C  
                                                  i1l14962 002E  
                                                  i1l14954 0017  
                                                  i1l14964 0039  
                                                  i1l14956 001B  
                                                  i1l14948 0006  
                                                  i1l14966 003D  
                                                  i1l14958 001F  
                                                  i1l14968 0048  
                             getMagneticChannel@magChannel 0030  
                                    ?_RN487X_EnterDataMode 0070  
                                ?_TMAG5273_CalcTemperature 002D  
                                            _writeRegister 100E  
                             ?_EUSART1_DefaultErrorHandler 0070  
                                        _I2C1_MasterIsNack 1EF5  
                                                  _SP1BRGH 011C  
                                                  _SP1BRGL 011B  
                                                  _SP2BRGH 0A1C  
                                                  _SP2BRGL 0A1B  
                                     ??_DELAY_milliseconds 0073  
                                                  _OSCCON1 088D  
                                                  _OSCCON3 088F  
                                                _I2C1_Open 17CA  
  __end_of_rd2RegCompleteHandler@i2c1_master_example$F1250 1133  
          _rd2RegCompleteHandler@i2c1_master_example$F1250 1122  
  __end_of_wr2RegCompleteHandler@i2c1_master_example$F1262 10CD  
          _wr2RegCompleteHandler@i2c1_master_example$F1262 10BC  
  __end_of_rd1RegCompleteHandler@i2c1_master_example$F1239 1122  
          _rd1RegCompleteHandler@i2c1_master_example$F1239 1111  
  __end_of_wr1RegCompleteHandler@i2c1_master_example$F1256 1144  
          _wr1RegCompleteHandler@i2c1_master_example$F1256 1133  
__end_of_rdBlkRegCompleteHandler@i2c1_master_example$F1273 1295  
        _rdBlkRegCompleteHandler@i2c1_master_example$F1273 127D  
                              __end_of_EUSART2_Receive_ISR 0897  
                       __end_of_IOCAF6_SetInterruptHandler 1F55  
                               _IOCAF6_SetInterruptHandler 1F4F  
                                ??_I2C1_DO_RX_NACK_RESTART 0071  
                          __end_of_TMAG5273_GetManufacture 12F8  
                                                ?_bitWrite 0071  
                                                  _OSCSTAT 0890  
                                                  _OSCTUNE 0892  
                                        _I2C1_MasterSetIrq 1E8C  
                                     ??_getMagneticChannel 002E  
                                                ?_getError 0070  
                                                  _SSP1ADD 018D  
                                     ??_setMagneticChannel 0036  
                                                  _SLRCONA 1F3B  
                                                  _SLRCONB 1F46  
                                                  _SLRCONC 1F51  
                                                  _SSP1BUF 018C  
                                                  _SSP1MSK 018E  
                       __end_of_LIGHTBLUE_SetErrorLedValue 10AC  
                               _LIGHTBLUE_SetErrorLedValue 109D  
                                       ?_I2C1_MasterIsNack 0070  
                               ?_I2C1_DO_SEND_RESTART_READ 0070  
                                   ?_RN487X_MessageHandler 0041  
                            i2c_write1ByteRegister@address 007B  
                           ??_I2C1_SetDataCompleteCallback 0078  
                                       ?_I2C1_MasterSetIrq 0070  
                                     _BMA253_GetAccelDataY 1648  
                                     _BMA253_GetAccelDataZ 1676  
                                       RN487X_ReadMsg@resp 0078  
                                  _TMR0_HasOverflowOccured 1EF0  
                                          _asyncBufferSize 0067  
                                    ??_LIGHTBLUE_SplitByte 0077  
                                       _i2c1_fsmStateTable 1828  
                                       _i2c1_driver_i2cISR 00E5  
                                    ??_LIGHTBLUE_SplitWord 007B  
                                      ??_I2C1_MasterIsNack 0071  
                                                  _i2c_ISR 0000  
                                __end_of_I2C1_DO_SEND_STOP 1ECD  
                                ??_rdBlkRegCompleteHandler 0079  
                               ??_LIGHTBLUE_UpdateErrorLed 007B  
                                       I2C1_SetCallback@cb 0071  
                                  ?_rn487x_PrintMessageEnd 0070  
                                      _rn487x_PrintMessage 1795  
                                      ??_I2C1_MasterSetIrq 0071  
                         RN487X_SetAsyncMessageHandler@len 0073  
                           __end_of_i2c_write1ByteRegister 1730  
                                        _RN487X_FilterData 0E90  
                                 __end_of_RN487X_DataReady 137F  
                             __end_of_LIGHTBLUE_PushButton 118A  
                                     __end_of_readRegister 1080  
                                       ?_RN487X_FilterData 0070  
                                      _EUSART1_is_rx_ready 1F9B  
                                                  _bitRead 1468  
                               __end_of_EUSART1_is_tx_done 1EAF  
                          __end_of_EUSART2_SetErrorHandler 1F37  
                                            ?_I2C1_DO_IDLE 0070  
                                            ?_I2C1_DO_RCEN 0070  
                LIGHTBLUE_ParseIncomingPacket@receivedByte 0033  
                                       i2c_readNBytes@data 0024  
                                      _EUSART1_is_tx_ready 0000  
                                        _RN487X_IndicateRx 1FF5  
                              ??_LIGHTBLUE_GetDataLedValue 0071  
                                                  __ptext1 0BFD  
                                                  __ptext2 0911  
                                                  __ptext3 09CA  
                                                  __ptext4 08D4  
                                                  __ptext5 0706  
                                                  __ptext6 00A8  
                                                  __ptext7 100E  
                                                  __ptext8 1700  
                                                  __ptext9 0DE7  
                                               bitRead@reg 0071  
                                 _I2C1_MasterEnableRestart 1E80  
                                __end_of_I2C1_MasterIsNack 1EFB  
                             ?_I2C1_SetAddressNackCallback 0075  
                                      ??_RN487X_FilterData 0044  
                                           ?_writeRegister 0026  
                                     ?_rn487x_PrintMessage 0077  
               __end_of_EUSART2_DefaultOverrunErrorHandler 1E9F  
                     ??_EUSART2_DefaultOverrunErrorHandler 0070  
                      ?_EUSART2_DefaultOverrunErrorHandler 0070  
                       _EUSART2_DefaultOverrunErrorHandler 1E9B  
                                    _OSCILLATOR_Initialize 1FCB  
                                   ??_EUSART2_Transmit_ISR 0070  
                                       ?_RN487X_IndicateRx 0071  
                                __end_of_I2C1_MasterSetIrq 1E8F  
                                 __end_of_I2C1_DO_TX_EMPTY 161B  
                                       _EUSART1_Initialize 094E  
                                 ??_PIN_MANAGER_Initialize 0073  
                                                _IOCAFbits 1F3F  
                                    _rn487x_driver_version 2010  
                                               ?_I2C1_Open 0070  
                                         ??_RN487X_ReadMsg 0076  
                                                _IOCANbits 1F3E  
                                               ??_bitWrite 0075  
                                                _IOCAPbits 1F3D  
                                          bitRead@position 0073  
                                               ??_getError 002F  
                                         ??_RN487X_SendCmd 0078  
                            ??_EUSART1_DefaultErrorHandler 0071  
                                 ?_I2C1_CallbackReturnStop 0078  
                                       _RN487X_is_rx_ready 1FC1  
                                         ??_setXYAxisRange 0036  
                  TMAG5273_GetTemperatureValue@temperature 0038  
                                 _do_I2C_SEND_RESTART_READ 0000  
                                  i2c_read1ByteRegister@d2 0029  
                                                  clrloop0 1F56  
                                      ??_RN487X_IndicateRx 0072  
                                    ?_BMA253_GetAccelDataY 0070  
                                    ?_BMA253_GetAccelDataZ 0070  
                                                  _strncmp 0C9B  
                        rn487x_PrintMessage@printCharacter 0020  
                        __end_of_I2C1_DO_SEND_RESTART_READ 1EBE  
                                     end_of_initialization 00A4  
                               __end_of_I2C1_MasterSendAck 1EA7  
               __end_of_RN487X_Read@rn487x_interface$F1381 1FB7  
                       _RN487X_Read@rn487x_interface$F1381 1FAD  
                      ?_RN487X_Read@rn487x_interface$F1382 0070  
                     ??_RN487X_Read@rn487x_interface$F1384 0073  
                                     ?_EUSART1_is_rx_ready 0070  
                      __end_of_LIGHTBLUE_TemperatureSensor 12DF  
                              _LIGHTBLUE_TemperatureSensor 12C6  
                                      _I2C1_MasterClearIrq 1E74  
                                      ?_EUSART1_Initialize 0070  
                               __end_of_EUSART2_is_tx_done 1EAB  
                           __end_of_rn487x_PrintMessageEnd 0BFD  
                              ?_RN487X_ReadDefaultResponse 0070  
                                                  init_ram 1F5B  
                               __end_of_I2C1_MasterStartRx 1E89  
                              _EUSART1_OverrunErrorHandler 015F  
                                   ?_rd1RegCompleteHandler 0078  
                                                  initloop 1F5C  
                                   _I2C1_DO_SEND_ADR_WRITE 1F68  
                                      ?_RN487X_is_rx_ready 0070  
                                        getError@statusReg 0035  
                                __end_of_RN487X_FilterData 0EEC  
                             __end_of_I2C1_DO_SEND_RESTART 1EC8  
                                  __end_of_I2C1_MasterRead 1EEB  
                                  __end_of_I2C1_MasterOpen 1057  
                                   ?_wr1RegCompleteHandler 0078  
                                  __end_of_I2C1_MasterStop 1E86  
                                  __end_of_I2C1_Initialize 1FAD  
                    __end_of_EUSART1_SetRxInterruptHandler 1F2B  
                            _EUSART1_SetRxInterruptHandler 1F25  
                                              _I2C1_Poller 103D  
                                ?_I2C1_CallbackReturnReset 0078  
                                       _EUSART2_Initialize 098C  
                            __end_of_I2C1_MasterDisableIrq 1E7D  
                                         ??_i2c_readNBytes 007B  
                                              _I2C1_Status 00A0  
                                          ??_readRegisters 0029  
                                              ?_getAngleEn 0070  
                              LIGHTBLUE_PerformAction@data 0027  
                                         _getOperatingMode 0D40  
                                                  swap@reg 0071  
                                        ?_setOperatingMode 0070  
                          __end_of_protocol_version_number 2014  
                               __end_of_RN487X_IsConnected 1003  
                                _do_I2C_SEND_RESTART_WRITE 0000  
                                      _I2C1_MasterSendNack 1E9F  
                      __end_of_I2C1_SetAddressNackCallback 1FF5  
                              _I2C1_SetAddressNackCallback 1FEA  
                                __end_of_RN487X_IndicateRx 2000  
                                     ?_I2C1_MasterClearIrq 0070  
                                           ??_I2C1_DO_IDLE 0071  
                                     ??_EUSART1_Initialize 0073  
                                                  strchr@c 0073  
                                                  strchr@s 0071  
                                           ??_I2C1_DO_RCEN 0071  
                               LIGHTBLUE_SplitByte@payload 0078  
                       __end_of_I2C1_DO_SEND_RESTART_WRITE 1EC3  
                               _I2C1_DO_SEND_RESTART_WRITE 1EBE  
                                      ?_EUSART2_Initialize 0070  
                                                  strcpy@d 0075  
                                                  strlen@a 0074  
                                       ??_setOperatingMode 0036  
                                      _EUSART2_is_rx_ready 1F92  
                                                  strlen@s 0071  
                                           __deviceAddress 006D  
                                               _returnStop 0000  
                                                  strstr@h 0078  
                                                  strstr@n 007A  
                                      _EUSART2_is_tx_ready 0000  
                                                _PORTAbits 000C  
                                     ??_RN487X_is_rx_ready 0071  
                                        _RN487X_SetOutputs 0AD3  
                          __end_of_rdBlkRegCompleteHandler 127D  
                                    ??_rn487x_PrintMessage 0079  
                                   ??_RN487X_EnterDataMode 007B  
                                     _LIGHTBLUE_Initialize 1F01  
                                  _statusBuffer@main$F3783 0320  
                                  ??_i2c_read1ByteRegister 007B  
                                            ??_getLowPower 002E  
                                       ?_RN487X_SetOutputs 0020  
                                  _IOCAF6_InterruptHandler 00E9  
                            ??_I2C1_SetAddressNackCallback 0079  
                                   RN487X_Delay@delayCount 0074  
                                                _TRISAbits 0012  
                          I2C1_SetDataCompleteCallback@ptr 0077  
                           getDeviceStatus@deviceStatusReg 002E  
                                ??_TMR0_HasOverflowOccured 0071  
                           I2C1_CallbackReturnReset@funPtr 0078  
                                     ?_I2C1_MasterSendNack 0070  
                                      EUSART1_Write@txData 0071  
                                    ??_EUSART1_is_rx_ready 0071  
                                      ??_RN487X_SetOutputs 007B  
                                             _RN487X_Delay 1F70  
                                            ??_isConnected 007B  
                                  getOperatingMode@opMode0 0031  
                                  getOperatingMode@opMode1 0032  
                                     RN487X_ReadMsg@msgLen 0075  
                                     ??_EUSART2_Initialize 0073  
                                     ?_EUSART2_is_rx_ready 0070  
                                   _BMA253_GetAccelDataXYZ 0C4B  
                                     _LIGHTBLUE_SendPacket 0F74  
                                             _RN487X_Reset 1003  
                                _LIGHTBLUE_GetDataLedValue 1F07  
                                             _RN487X_Write 1019  
                                        ??_getDeviceStatus 007C  
                                           __end_of_RN487X 187A  
                                             _EUSART1_Read 154B  
                                             _EUSART2_Read 14D7  
                         __end_of_LIGHTBLUE_GetButtonValue 1F13  
                            RN487X_SetOutputs@ioHighNibble 0024  
                                     _timer0ReloadVal16bit 004C  
                            __end_of_EUSART2_RxDataHandler 124D  
                                              _do_I2C_IDLE 0000  
                                              _do_I2C_RCEN 0000  
                                    ??_I2C1_MasterClearIrq 0071  
                                 _rn487x_PrintMessageStart 161B  
                                __end_of_RN487X_SetOutputs 0B1B  
                                            _setZAxisRange 0911  
                                           _I2C1_DO_RX_ACK 1ECD  
                                          ??_writeRegister 007C  
                                   ?_OSCILLATOR_Initialize 0070  
                                    ?_LIGHTBLUE_Initialize 0070  
                                            ??_RN487X_Init 0076  
                                            ??_RN487X_Read 007C  
                               ??_LIGHTBLUE_SendSerialData 0077  
                          RN487X_FilterData@asyncBuffering 0064  
                          __end_of_I2C1_CallbackReturnStop 1E72  
                                  readRegisters@dataBuffer 0027  
                            __end_of_I2C1_MasterSendTxData 1EB4  
                                           __end_of_strchr 139D  
                                  ??_i2c_read2ByteRegister 0026  
                                           __end_of_strcpy 132C  
                                           __end_of_strlen 12C6  
                                           __end_of_strstr 0E90  
                                      start_initialization 0057  
                             LIGHTBLUE_AccelSensor@payload 0036  
                                              ??_I2C1_Open 0071  
                            setMagneticChannel@channelMode 0038  
                                      _i2c_busCollisionISR 0000  
                                         _getTemperatureEN 11B2  
                          RN487X_SetOutputs@stateLowNibble 0023  
                   LIGHTBLUE_SendProtocolVersion@dataIndex 0036  
                                   ??_BMA253_GetAccelDataY 002A  
                                   ??_BMA253_GetAccelDataZ 002A  
                                    ??_I2C1_MasterSendNack 0071  
                                     setOperatingMode@mode 0039  
                                        ?_setTemperatureEn 0070  
            EUSART1_SetRxInterruptHandler@interruptHandler 0071  
            EUSART1_SetTxInterruptHandler@interruptHandler 0071  
            EUSART2_SetRxInterruptHandler@interruptHandler 0071  
            EUSART2_SetTxInterruptHandler@interruptHandler 0071  
                                     _LIGHTBLUE_PushButton 1177  
                                 LIGHTBLUE_SplitByte@value 0076  
                                    ??_EUSART2_is_rx_ready 0071  
                                   setMagneticChannel@mode 0039  
                                    __end_of_EUSART1_Write 154B  
                                    __end_of_EUSART2_Write 1524  
                                    ?_LIGHTBLUE_SendPacket 0077  
                                      __end_of_getLowPower 121E  
                                       ??_setTemperatureEn 0036  
                          ??_LIGHTBLUE_SendProtocolVersion 0020  
                                   rd1RegCompleteHandler@p 0078  
                               getMagneticChannel@magMode4 0031  
                               getMagneticChannel@magMode5 0032  
                               getMagneticChannel@magMode6 0033  
                               getMagneticChannel@magMode7 0034  
                                 I2C1_SetBuffer@bufferSize 0071  
                                         ?_I2C1_MasterRead 0070  
                                         ?_I2C1_MasterOpen 0070  
                   __end_of_EUSART2_SetOverrunErrorHandler 1F43  
                           _EUSART2_SetOverrunErrorHandler 1F3D  
                                         ?_I2C1_MasterStop 0070  
                                         ?_I2C1_Initialize 0070  
                                      getError@intPinError 0033  
                                      __end_of_isConnected 11DC  
                  TMAG5273_CalcTemperature@temperatureData 0036  
                                getTemperatureEN@tempENreg 0031  
                         __end_of_TMAG5273_CalcTemperature 14B1  
                                         ??_PMD_Initialize 0071  
                             i2c_read1ByteRegister@address 0025  
                                       setXYAxisRange@mode 0039  
                                   __end_of_I2C1_DO_RX_ACK 1ED2  
                                   wr1RegCompleteHandler@p 0078  
                                    _EUSART1_RxDataHandler 12F8  
                                  ??_I2C1_DO_SEND_ADR_READ 0071  
                                           ?_setZAxisRange 0070  
                           ?_EUSART1_SetRxInterruptHandler 0071  
                                       _LIGHTBLUE_LedState 14B1  
                                              __pdataBANK0 006E  
                                              __pdataBANK2 014C  
                                                 ??_strchr 0075  
                                                 ??_strcpy 0073  
                                                 ??_strlen 0073  
                                         I2C1_Open@address 0071  
                                           _eusart1RxCount 0058  
                                                 ??_strstr 0020  
                                           _eusart2RxCount 005F  
                                      ?_LIGHTBLUE_LedState 0070  
                                  ??_RN487X_MessageHandler 007C  
                                              __pbssCOMMON 007C  
                                     _I2C1_DO_SEND_RESTART 1EC3  
                        _EUSART1_RxDefaultInterruptHandler 0163  
                                                ___latbits 0003  
                                            __pcstackBANK0 0020  
                                            __pcstackBANK1 00EF  
                           ?_LIGHTBLUE_ParseIncomingPacket 0070  
                                            bitWrite@value 0074  
                              ?_IOCAF6_SetInterruptHandler 0071  
                                                _do_I2C_RX 0000  
                                                _do_I2C_TX 0000  
                                    ?_LIGHTBLUE_PushButton 0070  
                                             _readRegister 1072  
                                      __end_of_RN487X_Init 07FF  
                                      __end_of_RN487X_Read 103D  
                              ?_LIGHTBLUE_SetErrorLedValue 0070  
                              ??_I2C1_DO_SEND_RESTART_READ 0071  
                                      EUSART2_Write@txData 0071  
                          ??_EUSART1_SetTxInterruptHandler 0073  
                                  readRegisters@regAddress 002B  
                                      _RN487X_EnterCmdMode 121E  
                                     __end_of_I2C1_DO_IDLE 1EB9  
                         ??_EUSART1_SetFramingErrorHandler 0073  
                          ?_EUSART1_SetFramingErrorHandler 0071  
                          ??_EUSART2_SetRxInterruptHandler 0073  
                                     __end_of_I2C1_DO_RCEN 1F68  
                            I2C1_SetAddressNackCallback@cb 0075  
                                                _dataReady 0065  
                                          _do_I2C_TX_EMPTY 0000  
                                     ??_LIGHTBLUE_LedState 007B  
                                                __pnvBANK1 00E9  
                                                __pnvBANK2 015D  
                                    _rd2RegCompleteHandler 10EF  
                                    __end_of_fsmStateTable 1868  
                                                _main$5439 00EF  
                                   _PIN_MANAGER_Initialize 0B1B  
                                    _wr2RegCompleteHandler 1100  
                         ??_IOCAF6_DefaultInterruptHandler 0070  
                          ?_IOCAF6_DefaultInterruptHandler 0070  
                               ??_I2C1_MasterEnableRestart 0071  
                                 ?_LIGHTBLUE_PerformAction 0027  
                                           _I2C1_MasterFsm 159A  
                                        ?_RN487X_DataReady 0070  
                                          ?_I2C1_DO_RX_ACK 0070  
                                                __ptext100 0C4B  
                                                __ptext101 1072  
                                                __ptext110 1FEA  
                                                __ptext102 10AC  
                                                __ptext111 17CA  
                                                __ptext103 139D  
                                                __ptext120 1ED7  
                                                __ptext112 104A  
                                                __ptext104 1EE6  
                                                __ptext121 1ED2  
                                                __ptext113 1EE1  
                                                __ptext105 1676  
                                                __ptext130 1F68  
                                                __ptext122 1ECD  
                                                __ptext114 13BC  
                                                __ptext106 1155  
                                                __ptext131 1F89  
                                                __ptext123 1EC8  
                                                __ptext115 103D  
                                                __ptext107 1648  
                                                __ptext140 1E86  
                                                __ptext132 1EB4  
                                                __ptext124 1EC3  
                                                __ptext116 1EFB  
                                                __ptext108 1144  
                                                __ptext141 1E72  
                                                __ptext133 15EE  
                                                __ptext125 1EBE  
                                                __ptext117 159A  
                                                __ptext109 0B64  
                                                __ptext150 10DE  
                                                __ptext142 1E70  
                                                __ptext134 1E8C  
                                                __ptext126 1EB9  
                                                __ptext118 1572  
                                                __ptext151 10CD  
                                                __ptext143 127D  
                                                __ptext135 1EF5  
                                                __ptext127 1F61  
                                                __ptext119 1EDC  
                                                __ptext160 1E7A  
                                                __ptext152 10BC  
                                                __ptext144 1133  
                                                __ptext136 1EAF  
                                                __ptext128 0A09  
                                                __ptext161 1E77  
                                                __ptext153 1FDF  
                                                __ptext145 1122  
                                                __ptext137 1EA3  
                                                __ptext129 0CED  
                                                __ptext170 085E  
                                                __ptext162 1E74  
                                                __ptext154 1444  
                                                __ptext146 1111  
                                                __ptext138 1E89  
                                                __ptext171 1E9B  
                                                __ptext155 1064  
                                                __ptext147 1265  
                                                __ptext139 1E9F  
                                                __ptext172 1E6F  
                                                __ptext164 1F80  
                                                __ptext156 1E83  
                                                __ptext148 1100  
                                                __ptext173 1E97  
                                                __ptext165 108E  
                                                __ptext157 1E80  
                                                __ptext149 10EF  
                                                __ptext174 1235  
                                                __ptext166 07FF  
                                                __ptext158 1E7D  
                                                __ptext175 1E93  
                                                __ptext167 13FF  
                                                __ptext159 124D  
                                                __ptext176 1E6E  
                                                __ptext168 13DD  
                                                __ptext177 1E8F  
                                                __ptext169 0897  
                                                __ptext178 12F8  
                                      getAngleEn@angleDir2 0031  
                                      getAngleEn@angleDir3 0032  
                             ??_LIGHTBLUE_GetErrorLedValue 0071  
                              _i2c1_driver_busCollisionISR 00E7  
                                    readRegisters@numBytes 0028  
                                 _LIGHTBLUE_GetButtonValue 1F0D  
                        _EUSART2_TxDefaultInterruptHandler 00ED  
                                       ??_RN487X_DataReady 007C  
                       LIGHTBLUE_SendProtocolVersion@value 0035  
                                     ?_RN487X_EnterCmdMode 0070  
                                   ??_LIGHTBLUE_Initialize 0071  
                                                 ?_bitRead 0071  
                                  _I2C1_MasterWaitForEvent 1EFB  
                                         _I2C1_MasterClose 1E77  
                                  getError@oscillatorError 0034  
                                           _I2C1_SetBuffer 1064  
                             ??_INTERRUPT_InterruptManager 0071  
                                           _sequenceNumber 006C  
                              i2c_read2ByteRegister@result 002B  
                                         _I2C1_MasterStart 1E7D  
                                                _connected 0068  
                                         _I2C1_MasterWrite 1EE1  
                                    _LIGHTBLUE_AccelSensor 16A4  
                                                 _BAUD1CON 011F  
                                                 _BAUD2CON 0A1F  
                     ?_rd1RegCompleteHandler@strncmp$F4861 0078  
                    ??_rd1RegCompleteHandler@strncmp$F4863 0079  
                     ?_wr1RegCompleteHandler@strncmp$F4855 0078  
                     ?_rd2RegCompleteHandler@strncmp$F4864 0078  
                    ??_wr1RegCompleteHandler@strncmp$F4857 0079  
                   ?_rdBlkRegCompleteHandler@strncmp$F4873 0078  
                    ??_rd2RegCompleteHandler@strncmp$F4866 0079  
                  ??_rdBlkRegCompleteHandler@strncmp$F4875 0079  
                     ?_wr2RegCompleteHandler@strncmp$F4867 0078  
                    ??_wr2RegCompleteHandler@strncmp$F4869 0079  
               __end_of_EUSART1_DefaultOverrunErrorHandler 1E97  
                     ??_EUSART1_DefaultOverrunErrorHandler 0070  
                      ?_EUSART1_DefaultOverrunErrorHandler 0070  
                       _EUSART1_DefaultOverrunErrorHandler 1E93  
                                    ?_I2C1_DO_SEND_RESTART 0070  
                                     _EUSART1_ErrorHandler 015D  
                             ?_EUSART2_DefaultErrorHandler 0070  
                                              _getLowPower 1208  
                                        ?_I2C1_DO_TX_EMPTY 0070  
                                  _EUSART1_SetErrorHandler 1F13  
                              __end_of_LIGHTBLUE_SplitByte 1761  
                                 __end_of_getOperatingMode 0D93  
                         __end_of_I2C1_CallbackReturnReset 1E74  
                              __end_of_LIGHTBLUE_SplitWord 108E  
                                 LIGHTBLUE_SplitWord@value 0079  
                                       ??_I2C1_DO_TX_EMPTY 0079  
                                   ??_LIGHTBLUE_SendPacket 0078  
                                      getError@otpCrcError 0032  
                                       _EUSART1_is_tx_done 1EAB  
                                  ??_rd1RegCompleteHandler 0079  
                                                 ?_strncmp 0071  
                                        i2c_readNBytes@len 0025  
                                  ?_I2C1_DO_SEND_ADR_WRITE 0070  
                                I2C1_MasterSendTxData@data 0071  
                                              _isConnected 11C7  
                                  ??_wr1RegCompleteHandler 0079  
                     LIGHTBLUE_SendProtocolVersion@payload 0022  
                                        ??_TMR0_Initialize 0071  
                                         _I2C1_SetCallback 1444  
                                        _RN487X_is_tx_done 1FB7  
                                   i2c_read1ByteRegister@e 0026  
                                                 _LATAbits 0018  
                  EUSART1_SetErrorHandler@interruptHandler 0071  
                  EUSART2_SetErrorHandler@interruptHandler 0071  
                                   i2c_read1ByteRegister@x 0027  
                                                 _LATCbits 001A  
                                               _I2C1_DO_RX 0A09  
                                               _I2C1_DO_TX 0CED  
                                      ?_EUSART1_is_tx_done 0070  
                                                clear_ram0 1F55  
                                                 _PIE0bits 0716  
                                                 _PIE3bits 0719  
                 LIGHTBLUE_ParseIncomingPacket@parserState 006B  
                                               _I2C1_Close 124D  
                    __end_of_LIGHTBLUE_SendProtocolVersion 1795  
                            _LIGHTBLUE_SendProtocolVersion 1761  
                                       ?_RN487X_is_tx_done 0070  
                                             ?_I2C1_Poller 0070  
                                   __end_of_I2C1_MasterFsm 15C3  
                             __end_of_I2C1_MasterGetRxData 1E8C  
                                                 _PIR0bits 070C  
                                             ??_getAngleEn 002E  
                                                 _PIR3bits 070F  
                                                 _RX1DTPPS 1ECB  
                                          ??_setZAxisRange 0036  
                                                 _RX2DTPPS 1ECD  
                                   ?_EUSART1_RxDataHandler 0070  
                                  _TMAG5273_GetManufacture 12DF  
                                       _I2C1_MasterSendAck 1EA3  
                           DELAY_milliseconds@milliseconds 0071  
                                 ?_BMA253_NewAccelDataRdyY 0070  
                                 ?_BMA253_NewAccelDataRdyZ 0070  
                  __end_of_rn487x_PrintIndicatorCharacters 1444  
                        ??_rn487x_PrintIndicatorCharacters 0073  
                         ?_rn487x_PrintIndicatorCharacters 0070  
                          _rn487x_PrintIndicatorCharacters 1421  
                                _I2C1_DO_SEND_RESTART_READ 1EB9  
                                                 _SSP1CON1 0190  
                                                 _SSP1CON2 0191  
                                     setTemperatureEn@mode 0039  
                                       _EUSART2_is_tx_done 1EA7  
                                   __end_of_I2C1_SetBuffer 1072  
                                                 _SSP1STAT 018F  
                                        ??_PIN_MANAGER_IOC 0070  
                                      ??_RN487X_is_tx_done 0071  
                                    ??_RN487X_EnterCmdMode 007B  
                     __end_of_I2C1_SetDataCompleteCallback 1FEA  
                             _I2C1_SetDataCompleteCallback 1FDF  
                                       _I2C1_MasterStartRx 1E86  
                              ?_I2C1_DO_SEND_RESTART_WRITE 0070  
                                 _TMAG5273_CalcTemperature 148C  
                                      ?_I2C1_MasterSendAck 0070  
                           LIGHTBLUE_AccelSensor@accelData 0043  
                                 ?_I2C1_DO_RX_NACK_RESTART 0070  
                                ?_LIGHTBLUE_UpdateErrorLed 0070  
                                      RN487X_ReadMsg@index 0079  
               rn487x_PrintIndicatorCharacters@messageType 0073  
                                     ??_EUSART1_is_tx_done 0071  
                                              _RN487X_Init 07A1  
                                              _RN487X_Read 1031  
                                      ?_EUSART2_is_tx_done 0070  
                                getError@undervoltageError 0031  
                             __end_of_RN487X_SetSystemMode 1031  
                                      ?_I2C1_MasterStartRx 0070  
                                          _getDeviceStatus 1F78  
                             __end_of_I2C1_DO_ADDRESS_NACK 159A  
                                   ??_LIGHTBLUE_PushButton 007B  
                                       _RN487X_IsConnected 1000  
                            __end_of_i2c_read1ByteRegister 0BAF  
                                  ?_BMA253_GetAccelDataXYZ 0070  
                           __end_of_I2C1_DO_SEND_ADR_WRITE 1F70  
                            ??_EUSART2_DefaultErrorHandler 0071  
                                            _I2C1_DO_RESET 1EDC  
                                              _asyncBuffer 0050  
                                       __end_of_getAngleEn 0DE7  
                                    I2C1_Close@returnValue 0071  
                                 ?_rdBlkRegCompleteHandler 0078  
                                        setZAxisRange@mode 0039  
                                __end_of_RN487X_is_tx_done 1FC1  
                                      I2C1_SetCallback@idx 0074  
                                      I2C1_SetCallback@ptr 0073  
                                      ?_RN487X_IsConnected 0070  
                                LIGHTBLUE_LedState@payload 0020  
                                  _EUSART2_SetErrorHandler 1F31  
                                     ??_I2C1_MasterSendAck 0071  
                    LIGHTBLUE_ParseIncomingPacket@packetID 0069  
                                    EUSART1_Read@readValue 0072  
                                   ?_rd2RegCompleteHandler 0078  
                              _EUSART2_OverrunErrorHandler 0169  
                                      _do_I2C_DO_NACK_STOP 0000  
                                     ??_EUSART2_is_tx_done 0071  
                        setTemperatureEn@temperatureEnable 0038  
                             __end_of_I2C1_MasterOperation 13DD  
                               ??_rn487x_PrintMessageStart 0073  
                          __end_of_LIGHTBLUE_PerformAction 085E  
                          ??_RN487X_SetAsyncMessageHandler 0074  
                                   ?_wr2RegCompleteHandler 0078  
                                     ??_I2C1_MasterStartRx 0071  
                       LIGHTBLUE_SendSerialData@serialData 0079  
                    __end_of_EUSART1_SetTxInterruptHandler 1F31  
                            _EUSART1_SetTxInterruptHandler 1F2B  
                                          ?_I2C1_MasterFsm 0070  
                    __end_of_EUSART2_SetRxInterruptHandler 1F49  
                            _EUSART2_SetRxInterruptHandler 1F43  
                      LIGHTBLUE_ParseIncomingPacket@length 006A  
                                 __end_of_getTemperatureEN 11C7  
       rd2RegCompleteHandler@i2c1_master_example$F1250@ptr 0078  
       wr2RegCompleteHandler@i2c1_master_example$F1262@ptr 0078  
       rd1RegCompleteHandler@i2c1_master_example$F1239@ptr 0078  
                                  setZAxisRange@zAxisRange 0038  
       wr1RegCompleteHandler@i2c1_master_example$F1256@ptr 0078  
     rdBlkRegCompleteHandler@i2c1_master_example$F1273@ptr 0078  
                                ??_I2C1_MasterWaitForEvent 0071  
                             RN487X_SetOutputs@ioLowNibble 0022  
                                    __end_of_readRegisters 10BC  
                              __end_of_rn487x_PrintMessage 17CA  
                                    _I2C1_MasterDisableIrq 1E7A  
                                  ??_OSCILLATOR_Initialize 0071  
                                          ?_I2C1_SetBuffer 0071  
                                   readRegister@regAddress 002C  
                                     ??_RN487X_IsConnected 0071  
                                             bitWrite@mask 0077  
                                   ?_LIGHTBLUE_AccelSensor 0070  
                                   ??_I2C1_DO_SEND_RESTART 0071  
                                ??_EUSART1_SetErrorHandler 0073  
                      __end_of_EUSART1_DefaultErrorHandler 1E93  
                              _EUSART1_DefaultErrorHandler 1E8F  
                                  RN487X_SetOutputs@bitMap 0020  
                              __end_of_EUSART1_is_rx_ready 1FA4  
                                               _T0CON0bits 059E  
                           __end_of_BMA253_GetAccelDataXYZ 0C9B  
                                     _EUSART2_ErrorHandler 0167  
                                           ?_I2C1_DO_RESET 0070  
                                                 _bitWrite 0800  
                       LIGHTBLUE_TemperatureSensor@payload 003A  
                            __end_of_i2c_read2ByteRegister 0A8F  
                                                 _getError 0DE7  
                                                 __ptext10 1F78  
                                                 __ptext11 0800  
                                                 __ptext20 1468  
                                                 __ptext12 11C7  
                                                 __ptext21 1EF0  
                                                 __ptext13 12DF  
                                                 __ptext30 1F49  
                                                 __ptext22 11F2  
                                                 __ptext14 119E  
                                                 __ptext31 1F43  
                                                 __ptext23 118A  
                                                 __ptext15 11B2  
                                                 __ptext40 1F13  
                                                 __ptext32 1F3D  
                                                 __ptext24 1FD5  
                                                 __ptext16 0D40  
                                                 __ptext41 1295  
                                                 __ptext33 1F37  
                                                 __ptext25 0B1B  
                                                 __ptext17 0377  
                                                 __ptext50 0BAF  
                                                 __ptext42 1031  
                                                 __ptext34 1F31  
                                                 __ptext26 1F4F  
                                                 __ptext18 1208  
                                                 __ptext51 1795  
                                                 __ptext43 1363  
                                                 __ptext35 094E  
                                                 __ptext27 1FCB  
                                                 __ptext19 0D93  
                                                 __ptext60 1003  
                                                 __ptext52 1312  
                                                 __ptext44 0E90  
                                                 __ptext36 1F2B  
                                                 __ptext28 1FA4  
                                                 __ptext61 1FF5  
                                                 __ptext53 1421  
                                                 __ptext45 0A8F  
                                                 __ptext37 1F25  
                                                 __ptext29 098C  
                                                 __ptext70 0590  
                                                 __ptext62 12C6  
                                                 __ptext54 1000  
                                                 __ptext46 0E3B  
                                                 __ptext38 1F1F  
                                                 __ptext71 0826  
                                                 __ptext63 1057  
                                                 __ptext55 07A1  
                                                 __ptext47 0C9B  
                                                 __ptext39 1F19  
                                                 __ptext80 1EAB  
                                                 __ptext72 109D  
                                                 __ptext64 148C  
                                                 __ptext56 1FC1  
                                                 __ptext48 137F  
                                                 __ptext81 1EA7  
                                                 __ptext73 1347  
                                                 __ptext65 0A4C  
                                                 __ptext57 1F9B  
                                                 __ptext49 161B  
                                                 __ptext90 1F07  
                                                 __ptext82 15C3  
                                                 __ptext74 0AD3  
                                                 __ptext66 065C  
                                                 __ptext58 1F92  
                                                 __ptext91 1F01  
                                                 __ptext83 1FAD  
                                                 __ptext75 0EEC  
                                                 __ptext67 1761  
                                                 __ptext59 1025  
                                                 __ptext92 16A4  
                                                 __ptext84 154B  
                                                 __ptext76 132C  
                                                 __ptext68 1177  
                                                 __ptext93 1080  
                                                 __ptext85 14D7  
                                                 __ptext77 121E  
                                                 __ptext69 1F0D  
                                                 __ptext94 1730  
                                                 __ptext86 1F70  
                                                 __ptext78 16D2  
                                                 __ptext95 0F74  
                                                 __ptext87 11DC  
                                                 __ptext79 1FB7  
                                                 __ptext96 12AD  
                                                 __ptext88 14B1  
                                                 __ptext97 1019  
                                                 __ptext89 1EEB  
                                                 __ptext98 1524  
                                                 __ptext99 14FD  
                                             _SSP1CON1bits 0190  
                                             _SSP1CON2bits 0191  
                                               _IOCAF6_ISR 108E  
                                 ??_i2c_write1ByteRegister 007B  
                                               strcpy@dest 0076  
                                 _I2C1_CallbackReturnReset 1E72  
                                              ?_I2C1_DO_RX 0070  
                                              ?_I2C1_DO_TX 0070  
               __end_of_EUSART2_DefaultFramingErrorHandler 1E70  
                     ??_EUSART2_DefaultFramingErrorHandler 0070  
                      ?_EUSART2_DefaultFramingErrorHandler 0070  
                       _EUSART2_DefaultFramingErrorHandler 1E6F  
                          __end_of_BMA253_NewAccelDataRdyY 1155  
                          __end_of_BMA253_NewAccelDataRdyZ 1166  
                                          _lightBlueSerial 0220  
                                ??_TMAG5273_GetManufacture 007B  
                              __end_of_I2C1_MasterClearIrq 1E77  
                             __end_of_I2C1_DO_RX_NACK_STOP 1ED7  
                                              ?_I2C1_Close 0070  
                                        writeRegister@data 0026  
                                               _RC1STAbits 011D  
                                               _RC2STAbits 0A1D  
           EUSART1_SetOverrunErrorHandler@interruptHandler 0071  
           EUSART2_SetOverrunErrorHandler@interruptHandler 0071  
                     RN487X_SetAsyncMessageHandler@pBuffer 0071  
                       __end_of_LIGHTBLUE_GetErrorLedValue 1EF0  
                               _LIGHTBLUE_GetErrorLedValue 1EEB  
                                                 int$flags 007E  
                          __end_of_I2C1_DO_RX_NACK_RESTART 1EDC  
                             RN487X_GetInputsValues@F12901 006E  
                                   getTemperatureEN@tempEN 0030  
                                 I2C1_MasterOperation@read 0022  
                       __end_of_INTERRUPT_InterruptManager 0055  
                               _INTERRUPT_InterruptManager 0004  
                                    _EUSART2_RxDataHandler 1235  
                                  __end_of_getDeviceStatus 1F80  
                                             _SSP1STATbits 018F  
                                 i2c_read1ByteRegister@reg 0024  
                            __end_of_I2C1_DO_SEND_ADR_READ 1F92  
                              _EUSART1_FramingErrorHandler 0161  
                                             _I2C1_DO_IDLE 1EB4  
                                      _EUSART1_Receive_ISR 0897  
                                             _I2C1_DO_RCEN 1F61  
                                    LIGHTBLUE_LedState@led 0023  
                              __end_of_I2C1_MasterSendNack 1EA3  
                         ??_EUSART2_SetOverrunErrorHandler 0073  
                          ?_EUSART2_SetOverrunErrorHandler 0071  
                                 ?_TMR0_HasOverflowOccured 0070  
                                    __end_of_writeRegister 1019  
                                               _INTCONbits 000B  
                              __end_of_EUSART2_is_rx_ready 1F9B  
                           I2C1_SetAddressNackCallback@ptr 0077  
                                 ??_rn487x_PrintMessageEnd 0073  
                               getLowPower@lowPowerModeBit 0030  
                                           __pstringtext10 187A  
                                           __pstringtext11 1891  
                                           __pstringtext12 2000  
                                           __pstringtext13 0000  
                                     _I2C1_MasterGetRxData 1E89  
                                    _I2C1_MasterSendTxData 1EAF  
                            __end_of_RN487X_MessageHandler 0AD3  
                              TMAG5273_GetManufacture@read 002F  
                                ??_EUSART2_SetErrorHandler 0073  
                                              bitWrite@lsb 0078  
                                              bitWrite@reg 0071  
                                              bitWrite@msb 0076  
                                   _do_I2C_DO_ADDRESS_NACK 0000  
                                                 intlevel1 0000  
                             RN487X_MessageHandler@message 0041  
                                       RN487X_Write@txData 0076  
                                 __end_of_I2C1_MasterClose 1E7A  
                                     ?_EUSART1_Receive_ISR 0070  
                                   rd2RegCompleteHandler@p 0078  
                                  ?_PIN_MANAGER_Initialize 0070  
                                 __end_of_I2C1_MasterStart 1E80  
                                ?_LIGHTBLUE_SendSerialData 0070  
                                 __end_of_I2C1_MasterWrite 1EE6  
                                   RN487X_RebootCmd@reboot 1886  
                   __end_of_EUSART1_SetOverrunErrorHandler 1F25  
                           _EUSART1_SetOverrunErrorHandler 1F1F  
                                                strcpy@src 0071  
                                         ??_I2C1_DO_RX_ACK 0071  
                               ??_LIGHTBLUE_GetButtonValue 0071  
                                  _I2C1_CallbackReturnStop 1E70  
                             __end_of_EUSART1_Transmit_ISR 1421  
                          ??_LIGHTBLUE_ParseIncomingPacket 002B  
                                              _serialIndex 0056  
                                     _RN487X_SetSystemMode 1025  
                                     _I2C1_DO_ADDRESS_NACK 1572  
                                   ?_I2C1_MasterDisableIrq 0070  
                             i2c_read2ByteRegister@address 002A  
                    __end_of_RN487X_SetAsyncMessageHandler 12AD  
                            _RN487X_SetAsyncMessageHandler 1295  
                                   wr2RegCompleteHandler@p 0078  
           EUSART1_SetFramingErrorHandler@interruptHandler 0071  
           EUSART2_SetFramingErrorHandler@interruptHandler 0071  
                           ?_EUSART1_SetTxInterruptHandler 0071  
                                 RN487X_SetSystemMode@mode 0071  
                           ?_EUSART2_SetRxInterruptHandler 0071  
                        LIGHTBLUE_ParseIncomingPacket@data 0052  
                                       _eusart1RxLastError 0057  
                           RN487X_ReadDefaultResponse@resp 0073  
                                            __pstringtext1 1800  
                                            __pstringtext2 1828  
                                            __pstringtext3 1848  
                                            __pstringtext4 1868  
                                            __pstringtext5 2010  
                                            __pstringtext6 2012  
                                            __pstringtext7 1886  
                                            __pstringtext8 2006  
                                            __pstringtext9 200B  
                                      _EUSART2_Receive_ISR 085E  
                          LIGHTBLUE_SetErrorLedValue@value 0026  
                                 __end_of_I2C1_SetCallback 1468  
                                               _SSP1DATPPS 1EC6  
                                               _SSP1CLKPPS 1EC5  
                                          ??_I2C1_DO_RESET 0071  
                   __end_of_IOCAF6_DefaultInterruptHandler 0800  
                           _IOCAF6_DefaultInterruptHandler 07FF  
                                     _I2C1_MasterOperation 13BC  
                                          _TMR0_Initialize 118A  
                                             ?_getLowPower 0070  
                                     RN487X_SendCmd@cmdLen 0077  
                                                 strncmp@l 0071  
                                                 strncmp@n 0075  
                                                 strncmp@r 0073  
                        _LIGHTBLUE_ParseIncomingPacket$463 002D  
                        _LIGHTBLUE_ParseIncomingPacket$464 002F  
                        _LIGHTBLUE_ParseIncomingPacket$465 0031  
                                    ?_I2C1_MasterGetRxData 0070  
                                 i2c_read2ByteRegister@reg 0024  
                                              _returnReset 0000  
                                         _setOperatingMode 0706  
                                                 strstr@nl 0022  
                                               _TX1STAbits 011E  
                                        ?_getOperatingMode 0070  
                                RN487X_ReadMsg@expectedMsg 0073  
                                               _TX2STAbits 0A1E  
                                              ?_IOCAF6_ISR 0070  
                                             ?_isConnected 0070  
                                    ??_EUSART1_Receive_ISR 0071  
                           __end_of_PIN_MANAGER_Initialize 0B64  
                                       ??_getOperatingMode 002E  
                             ?_LIGHTBLUE_TemperatureSensor 0070  
                          ??_EUSART2_SetTxInterruptHandler 0073  
                            __end_of_rd1RegCompleteHandler 10EF  
                                     ?_EUSART2_Receive_ISR 0070  
                                       _eusart2RxLastError 005E  
                                      RN487X_SendCmd@index 0079  
                         __end_of_rn487x_PrintMessageStart 1648  
                                          _PIN_MANAGER_IOC 1F80  
                         RN487X_ReadDefaultResponse@status 0076  
                             ??_RN487X_ReadDefaultResponse 0073  
                            __end_of_wr1RegCompleteHandler 10DE  
                                    _do_I2C_SEND_ADR_WRITE 0000  
                                  ??_EUSART1_RxDataHandler 0070  
                                     _do_I2C_SEND_ADR_READ 0000  
                         __end_of_LIGHTBLUE_UpdateErrorLed 1363  
                               ??_TMAG5273_CalcTemperature 002F  
                                    ?_RN487X_SetSystemMode 0071  
                        _EUSART2_RxDefaultInterruptHandler 00EB  
                                    ?_I2C1_DO_ADDRESS_NACK 0070  
                               LIGHTBLUE_SplitWord@payload 007B  
                                   RN487X_IndicateRx@value 0071  
