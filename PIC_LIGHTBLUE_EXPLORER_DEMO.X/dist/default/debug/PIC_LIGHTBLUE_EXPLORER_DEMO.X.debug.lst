

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Dec 20 16:30:08 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16LF18456
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    15                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
    17                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    21                           	psect	cinit,global,class=CODE,merge=1,delta=2
    22                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    23                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    25                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    26                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    27                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    28                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    29                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    30                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,noexec
    31                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,noexec
    32                           	psect	inittext,global,class=CODE,delta=2
    33                           	psect	clrtext,global,class=CODE,delta=2
    34                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    35                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    36                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    37                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    38                           	psect	text1,local,class=CODE,merge=1,delta=2
    39                           	psect	text2,local,class=CODE,merge=1,delta=2
    40                           	psect	text3,local,class=CODE,merge=1,delta=2
    41                           	psect	text4,local,class=CODE,merge=1,delta=2
    42                           	psect	text5,local,class=CODE,merge=1,delta=2
    43                           	psect	text6,local,class=CODE,merge=1,delta=2
    44                           	psect	text7,local,class=CODE,merge=1,delta=2
    45                           	psect	text8,local,class=CODE,merge=1,delta=2
    46                           	psect	text9,local,class=CODE,merge=1,delta=2
    47                           	psect	text10,local,class=CODE,merge=1,delta=2
    48                           	psect	text11,local,class=CODE,merge=1,delta=2
    49                           	psect	text12,local,class=CODE,merge=1,delta=2
    50                           	psect	text13,local,class=CODE,merge=1,delta=2
    51                           	psect	text14,local,class=CODE,merge=1,delta=2
    52                           	psect	text15,local,class=CODE,merge=1,delta=2
    53                           	psect	text16,local,class=CODE,merge=1,delta=2
    54                           	psect	text17,local,class=CODE,merge=1,delta=2
    55                           	psect	text18,local,class=CODE,merge=1,delta=2
    56                           	psect	text19,local,class=CODE,merge=1,delta=2
    57                           	psect	text20,local,class=CODE,merge=1,delta=2
    58                           	psect	text21,local,class=CODE,merge=1,delta=2
    59                           	psect	text22,local,class=CODE,merge=1,delta=2
    60                           	psect	text23,local,class=CODE,merge=1,delta=2
    61                           	psect	text24,local,class=CODE,merge=1,delta=2
    62                           	psect	text25,local,class=CODE,merge=1,delta=2
    63                           	psect	text26,local,class=CODE,merge=1,delta=2
    64                           	psect	text27,local,class=CODE,merge=1,delta=2
    65                           	psect	text28,local,class=CODE,merge=1,delta=2
    66                           	psect	text29,local,class=CODE,merge=1,delta=2
    67                           	psect	text30,local,class=CODE,merge=1,delta=2
    68                           	psect	text31,local,class=CODE,merge=1,delta=2
    69                           	psect	text32,local,class=CODE,merge=1,delta=2
    70                           	psect	text33,local,class=CODE,merge=1,delta=2
    71                           	psect	text34,local,class=CODE,merge=1,delta=2
    72                           	psect	text35,local,class=CODE,merge=1,delta=2
    73                           	psect	text36,local,class=CODE,merge=1,delta=2
    74                           	psect	text37,local,class=CODE,merge=1,delta=2
    75                           	psect	text38,local,class=CODE,merge=1,delta=2
    76                           	psect	text39,local,class=CODE,merge=1,delta=2
    77                           	psect	text40,local,class=CODE,merge=1,delta=2
    78                           	psect	text41,local,class=CODE,merge=1,delta=2
    79                           	psect	text42,local,class=CODE,merge=1,delta=2
    80                           	psect	text43,local,class=CODE,merge=1,delta=2
    81                           	psect	text44,local,class=CODE,merge=1,delta=2
    82                           	psect	text45,local,class=CODE,merge=1,delta=2
    83                           	psect	text46,local,class=CODE,merge=1,delta=2,group=2
    84                           	psect	text47,local,class=CODE,merge=1,delta=2,group=2
    85                           	psect	text48,local,class=CODE,merge=1,delta=2,group=2
    86                           	psect	text49,local,class=CODE,merge=1,inline,delta=2
    87                           	psect	text50,local,class=CODE,merge=1,inline,delta=2
    88                           	psect	text51,local,class=CODE,merge=1,inline,delta=2
    89                           	psect	text52,local,class=CODE,merge=1,delta=2,group=2
    90                           	psect	text53,local,class=CODE,merge=1,inline,delta=2
    91                           	psect	text54,local,class=CODE,merge=1,delta=2
    92                           	psect	text55,local,class=CODE,merge=1,delta=2
    93                           	psect	text56,local,class=CODE,merge=1,inline,delta=2
    94                           	psect	text57,local,class=CODE,merge=1,delta=2
    95                           	psect	text58,local,class=CODE,merge=1,delta=2
    96                           	psect	text59,local,class=CODE,merge=1,delta=2
    97                           	psect	text60,local,class=CODE,merge=1,delta=2
    98                           	psect	text61,local,class=CODE,merge=1,delta=2
    99                           	psect	text62,local,class=CODE,merge=1,delta=2
   100                           	psect	text63,local,class=CODE,merge=1,delta=2
   101                           	psect	text64,local,class=CODE,merge=1,delta=2
   102                           	psect	text65,local,class=CODE,merge=1,delta=2
   103                           	psect	text66,local,class=CODE,merge=1,delta=2
   104                           	psect	text67,local,class=CODE,merge=1,delta=2
   105                           	psect	text68,local,class=CODE,merge=1,delta=2
   106                           	psect	text69,local,class=CODE,merge=1,delta=2
   107                           	psect	text70,local,class=CODE,merge=1,delta=2
   108                           	psect	text71,local,class=CODE,merge=1,delta=2
   109                           	psect	text72,local,class=CODE,merge=1,delta=2
   110                           	psect	text73,local,class=CODE,merge=1,delta=2
   111                           	psect	text74,local,class=CODE,merge=1,delta=2
   112                           	psect	text75,local,class=CODE,merge=1,delta=2
   113                           	psect	text76,local,class=CODE,merge=1,delta=2
   114                           	psect	text77,local,class=CODE,merge=1,delta=2
   115                           	psect	text78,local,class=CODE,merge=1,delta=2
   116                           	psect	text79,local,class=CODE,merge=1,inline,delta=2
   117                           	psect	text80,local,class=CODE,merge=1,delta=2
   118                           	psect	text81,local,class=CODE,merge=1,delta=2
   119                           	psect	text82,local,class=CODE,merge=1,delta=2
   120                           	psect	text83,local,class=CODE,merge=1,inline,delta=2
   121                           	psect	text84,local,class=CODE,merge=1,delta=2
   122                           	psect	text85,local,class=CODE,merge=1,delta=2
   123                           	psect	text86,local,class=CODE,merge=1,inline,delta=2
   124                           	psect	text87,local,class=CODE,merge=1,delta=2
   125                           	psect	text88,local,class=CODE,merge=1,delta=2
   126                           	psect	text89,local,class=CODE,merge=1,delta=2
   127                           	psect	text90,local,class=CODE,merge=1,delta=2
   128                           	psect	text91,local,class=CODE,merge=1,delta=2
   129                           	psect	text92,local,class=CODE,merge=1,delta=2
   130                           	psect	text93,local,class=CODE,merge=1,delta=2
   131                           	psect	text94,local,class=CODE,merge=1,delta=2
   132                           	psect	text95,local,class=CODE,merge=1,delta=2
   133                           	psect	text96,local,class=CODE,merge=1,delta=2,group=2
   134                           	psect	text97,local,class=CODE,merge=1,inline,delta=2
   135                           	psect	text98,local,class=CODE,merge=1,delta=2
   136                           	psect	text99,local,class=CODE,merge=1,delta=2
   137                           	psect	text100,local,class=CODE,merge=1,delta=2
   138                           	psect	text101,local,class=CODE,merge=1,delta=2
   139                           	psect	text102,local,class=CODE,merge=1,delta=2
   140                           	psect	text103,local,class=CODE,merge=1,delta=2
   141                           	psect	text104,local,class=CODE,merge=1,delta=2
   142                           	psect	text105,local,class=CODE,merge=1,delta=2
   143                           	psect	text106,local,class=CODE,merge=1,delta=2
   144                           	psect	text107,local,class=CODE,merge=1,delta=2
   145                           	psect	text108,local,class=CODE,merge=1,delta=2
   146                           	psect	text109,local,class=CODE,merge=1,delta=2
   147                           	psect	text110,local,class=CODE,merge=1,delta=2
   148                           	psect	text111,local,class=CODE,merge=1,delta=2
   149                           	psect	text112,local,class=CODE,merge=1,inline,delta=2
   150                           	psect	text113,local,class=CODE,merge=1,delta=2
   151                           	psect	text114,local,class=CODE,merge=1,delta=2
   152                           	psect	text115,local,class=CODE,merge=1,delta=2
   153                           	psect	text116,local,class=CODE,merge=1,inline,delta=2
   154                           	psect	text117,local,class=CODE,merge=1,inline,delta=2
   155                           	psect	text118,local,class=CODE,merge=1,delta=2
   156                           	psect	text119,local,class=CODE,merge=1,delta=2
   157                           	psect	text120,local,class=CODE,merge=1,delta=2
   158                           	psect	text121,local,class=CODE,merge=1,delta=2
   159                           	psect	text122,local,class=CODE,merge=1,delta=2
   160                           	psect	text123,local,class=CODE,merge=1,delta=2
   161                           	psect	text124,local,class=CODE,merge=1,delta=2
   162                           	psect	text125,local,class=CODE,merge=1,delta=2
   163                           	psect	text126,local,class=CODE,merge=1,delta=2
   164                           	psect	text127,local,class=CODE,merge=1,delta=2
   165                           	psect	text128,local,class=CODE,merge=1,delta=2
   166                           	psect	text129,local,class=CODE,merge=1,delta=2
   167                           	psect	text130,local,class=CODE,merge=1,delta=2
   168                           	psect	text131,local,class=CODE,merge=1,delta=2
   169                           	psect	text132,local,class=CODE,merge=1,delta=2
   170                           	psect	text133,local,class=CODE,merge=1,delta=2
   171                           	psect	text134,local,class=CODE,merge=1,inline,delta=2
   172                           	psect	text135,local,class=CODE,merge=1,inline,delta=2
   173                           	psect	text136,local,class=CODE,merge=1,inline,delta=2
   174                           	psect	text137,local,class=CODE,merge=1,inline,delta=2
   175                           	psect	text138,local,class=CODE,merge=1,inline,delta=2
   176                           	psect	text139,local,class=CODE,merge=1,inline,delta=2
   177                           	psect	text140,local,class=CODE,merge=1,inline,delta=2
   178                           	psect	text141,local,class=CODE,merge=1,delta=2
   179                           	psect	text142,local,class=CODE,merge=1,delta=2
   180                           	psect	text143,local,class=CODE,merge=1,delta=2
   181                           	psect	text144,local,class=CODE,merge=1,delta=2
   182                           	psect	text145,local,class=CODE,merge=1,delta=2
   183                           	psect	text146,local,class=CODE,merge=1,delta=2
   184                           	psect	text147,local,class=CODE,merge=1,delta=2
   185                           	psect	text148,local,class=CODE,merge=1,delta=2
   186                           	psect	text149,local,class=CODE,merge=1,delta=2
   187                           	psect	text150,local,class=CODE,merge=1,delta=2
   188                           	psect	text151,local,class=CODE,merge=1,delta=2
   189                           	psect	text152,local,class=CODE,merge=1,delta=2
   190                           	psect	text153,local,class=CODE,merge=1,delta=2
   191                           	psect	text154,local,class=CODE,merge=1,delta=2
   192                           	psect	text155,local,class=CODE,merge=1,delta=2
   193                           	psect	text156,local,class=CODE,merge=1,inline,delta=2
   194                           	psect	text157,local,class=CODE,merge=1,inline,delta=2
   195                           	psect	text158,local,class=CODE,merge=1,inline,delta=2
   196                           	psect	text159,local,class=CODE,merge=1,delta=2
   197                           	psect	text160,local,class=CODE,merge=1,inline,delta=2
   198                           	psect	text161,local,class=CODE,merge=1,inline,delta=2
   199                           	psect	text162,local,class=CODE,merge=1,inline,delta=2
   200                           	psect	intentry,global,class=CODE,delta=2
   201                           	psect	text164,local,class=CODE,merge=1,delta=2
   202                           	psect	text165,local,class=CODE,merge=1,delta=2
   203                           	psect	text166,local,class=CODE,merge=1,delta=2
   204                           	psect	text167,local,class=CODE,merge=1,delta=2
   205                           	psect	text168,local,class=CODE,merge=1,delta=2
   206                           	psect	text169,local,class=CODE,merge=1,delta=2
   207                           	psect	text170,local,class=CODE,merge=1,delta=2
   208                           	psect	text171,local,class=CODE,merge=1,delta=2
   209                           	psect	text172,local,class=CODE,merge=1,delta=2
   210                           	psect	text173,local,class=CODE,merge=1,delta=2
   211                           	psect	text174,local,class=CODE,merge=1,delta=2
   212                           	psect	text175,local,class=CODE,merge=1,delta=2
   213                           	psect	text176,local,class=CODE,merge=1,delta=2
   214                           	psect	text177,local,class=CODE,merge=1,delta=2
   215                           	psect	text178,local,class=CODE,merge=1,delta=2
   216                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
   217                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   218                           	dabs	1,0x7E,2
   219     0000                     
   220                           ; Version 2.35
   221                           ; Generated 01/06/2021 GMT
   222                           ; 
   223                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   224                           ; All rights reserved.
   225                           ; 
   226                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   227                           ; 
   228                           ; Redistribution and use in source and binary forms, with or without modification, are
   229                           ; permitted provided that the following conditions are met:
   230                           ; 
   231                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   232                           ;        conditions and the following disclaimer.
   233                           ; 
   234                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   235                           ;        of conditions and the following disclaimer in the documentation and/or other
   236                           ;        materials provided with the distribution. Publication is not required when
   237                           ;        this file is used in an embedded application.
   238                           ; 
   239                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   240                           ;        software without specific prior written permission.
   241                           ; 
   242                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   243                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   244                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   245                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   246                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   247                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   248                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   249                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   250                           ; 
   251                           ; 
   252                           ; Code-generator required, PIC16LF18456 Definitions
   253                           ; 
   254                           ; SFR Addresses
   255     0000                     	;# 
   256     0001                     	;# 
   257     0002                     	;# 
   258     0003                     	;# 
   259     0004                     	;# 
   260     0005                     	;# 
   261     0006                     	;# 
   262     0007                     	;# 
   263     0008                     	;# 
   264     0009                     	;# 
   265     000A                     	;# 
   266     000B                     	;# 
   267     000C                     	;# 
   268     000D                     	;# 
   269     000E                     	;# 
   270     0010                     	;# 
   271     0012                     	;# 
   272     0013                     	;# 
   273     0014                     	;# 
   274     0016                     	;# 
   275     0018                     	;# 
   276     0019                     	;# 
   277     001A                     	;# 
   278     001C                     	;# 
   279     008C                     	;# 
   280     008C                     	;# 
   281     008D                     	;# 
   282     008E                     	;# 
   283     008E                     	;# 
   284     008F                     	;# 
   285     0090                     	;# 
   286     0090                     	;# 
   287     0091                     	;# 
   288     0092                     	;# 
   289     0092                     	;# 
   290     0093                     	;# 
   291     0094                     	;# 
   292     0094                     	;# 
   293     0095                     	;# 
   294     0096                     	;# 
   295     0096                     	;# 
   296     0097                     	;# 
   297     0098                     	;# 
   298     0099                     	;# 
   299     009A                     	;# 
   300     009B                     	;# 
   301     009B                     	;# 
   302     009C                     	;# 
   303     009D                     	;# 
   304     009D                     	;# 
   305     009E                     	;# 
   306     009F                     	;# 
   307     010C                     	;# 
   308     010C                     	;# 
   309     010D                     	;# 
   310     010E                     	;# 
   311     010F                     	;# 
   312     010F                     	;# 
   313     0110                     	;# 
   314     0111                     	;# 
   315     0112                     	;# 
   316     0113                     	;# 
   317     0114                     	;# 
   318     0115                     	;# 
   319     0116                     	;# 
   320     0117                     	;# 
   321     0118                     	;# 
   322     0119                     	;# 
   323     0119                     	;# 
   324     0119                     	;# 
   325     011A                     	;# 
   326     011A                     	;# 
   327     011A                     	;# 
   328     011B                     	;# 
   329     011B                     	;# 
   330     011B                     	;# 
   331     011B                     	;# 
   332     011B                     	;# 
   333     011C                     	;# 
   334     011C                     	;# 
   335     011C                     	;# 
   336     011D                     	;# 
   337     011D                     	;# 
   338     011D                     	;# 
   339     011E                     	;# 
   340     011E                     	;# 
   341     011E                     	;# 
   342     011F                     	;# 
   343     011F                     	;# 
   344     011F                     	;# 
   345     011F                     	;# 
   346     011F                     	;# 
   347     018C                     	;# 
   348     018D                     	;# 
   349     018E                     	;# 
   350     018F                     	;# 
   351     0190                     	;# 
   352     0191                     	;# 
   353     0192                     	;# 
   354     0196                     	;# 
   355     0197                     	;# 
   356     0198                     	;# 
   357     0199                     	;# 
   358     019A                     	;# 
   359     019B                     	;# 
   360     019C                     	;# 
   361     020C                     	;# 
   362     020D                     	;# 
   363     020E                     	;# 
   364     020E                     	;# 
   365     020F                     	;# 
   366     020F                     	;# 
   367     0210                     	;# 
   368     0210                     	;# 
   369     0211                     	;# 
   370     0211                     	;# 
   371     0212                     	;# 
   372     0213                     	;# 
   373     0214                     	;# 
   374     0214                     	;# 
   375     0215                     	;# 
   376     0215                     	;# 
   377     0216                     	;# 
   378     0216                     	;# 
   379     0217                     	;# 
   380     0217                     	;# 
   381     0218                     	;# 
   382     0219                     	;# 
   383     021A                     	;# 
   384     021A                     	;# 
   385     021B                     	;# 
   386     021B                     	;# 
   387     021C                     	;# 
   388     021C                     	;# 
   389     021D                     	;# 
   390     021D                     	;# 
   391     021E                     	;# 
   392     021F                     	;# 
   393     028C                     	;# 
   394     028C                     	;# 
   395     028D                     	;# 
   396     028D                     	;# 
   397     028E                     	;# 
   398     028F                     	;# 
   399     0290                     	;# 
   400     0291                     	;# 
   401     0292                     	;# 
   402     0292                     	;# 
   403     0293                     	;# 
   404     0293                     	;# 
   405     0294                     	;# 
   406     0295                     	;# 
   407     0296                     	;# 
   408     0297                     	;# 
   409     0298                     	;# 
   410     0298                     	;# 
   411     0299                     	;# 
   412     0299                     	;# 
   413     029A                     	;# 
   414     029B                     	;# 
   415     029C                     	;# 
   416     029D                     	;# 
   417     029F                     	;# 
   418     030C                     	;# 
   419     030C                     	;# 
   420     030D                     	;# 
   421     030E                     	;# 
   422     030F                     	;# 
   423     0310                     	;# 
   424     0310                     	;# 
   425     0311                     	;# 
   426     0312                     	;# 
   427     0313                     	;# 
   428     0314                     	;# 
   429     0314                     	;# 
   430     0315                     	;# 
   431     0316                     	;# 
   432     0317                     	;# 
   433     0318                     	;# 
   434     0318                     	;# 
   435     0319                     	;# 
   436     031A                     	;# 
   437     031B                     	;# 
   438     031C                     	;# 
   439     031C                     	;# 
   440     031D                     	;# 
   441     031E                     	;# 
   442     031F                     	;# 
   443     038C                     	;# 
   444     038C                     	;# 
   445     038D                     	;# 
   446     038E                     	;# 
   447     0390                     	;# 
   448     0390                     	;# 
   449     0391                     	;# 
   450     0392                     	;# 
   451     048C                     	;# 
   452     048C                     	;# 
   453     048D                     	;# 
   454     048E                     	;# 
   455     048F                     	;# 
   456     048F                     	;# 
   457     0490                     	;# 
   458     0491                     	;# 
   459     0492                     	;# 
   460     0492                     	;# 
   461     0493                     	;# 
   462     0494                     	;# 
   463     0495                     	;# 
   464     0495                     	;# 
   465     0496                     	;# 
   466     0497                     	;# 
   467     0498                     	;# 
   468     0499                     	;# 
   469     049A                     	;# 
   470     049B                     	;# 
   471     049C                     	;# 
   472     049D                     	;# 
   473     050C                     	;# 
   474     050C                     	;# 
   475     050D                     	;# 
   476     050E                     	;# 
   477     050F                     	;# 
   478     050F                     	;# 
   479     0510                     	;# 
   480     0511                     	;# 
   481     0512                     	;# 
   482     0512                     	;# 
   483     0513                     	;# 
   484     0514                     	;# 
   485     0515                     	;# 
   486     0515                     	;# 
   487     0516                     	;# 
   488     0517                     	;# 
   489     0518                     	;# 
   490     0519                     	;# 
   491     051A                     	;# 
   492     051B                     	;# 
   493     051C                     	;# 
   494     051D                     	;# 
   495     058C                     	;# 
   496     058C                     	;# 
   497     058D                     	;# 
   498     058E                     	;# 
   499     058F                     	;# 
   500     058F                     	;# 
   501     0590                     	;# 
   502     0591                     	;# 
   503     0592                     	;# 
   504     0593                     	;# 
   505     059C                     	;# 
   506     059C                     	;# 
   507     059D                     	;# 
   508     059D                     	;# 
   509     059E                     	;# 
   510     059F                     	;# 
   511     060C                     	;# 
   512     060C                     	;# 
   513     060D                     	;# 
   514     060D                     	;# 
   515     060E                     	;# 
   516     060F                     	;# 
   517     0610                     	;# 
   518     0611                     	;# 
   519     0612                     	;# 
   520     0613                     	;# 
   521     0614                     	;# 
   522     0616                     	;# 
   523     0616                     	;# 
   524     0617                     	;# 
   525     0617                     	;# 
   526     0618                     	;# 
   527     0619                     	;# 
   528     061A                     	;# 
   529     061B                     	;# 
   530     061C                     	;# 
   531     061D                     	;# 
   532     061E                     	;# 
   533     068C                     	;# 
   534     068D                     	;# 
   535     068E                     	;# 
   536     068F                     	;# 
   537     0690                     	;# 
   538     0691                     	;# 
   539     0692                     	;# 
   540     0693                     	;# 
   541     0694                     	;# 
   542     070C                     	;# 
   543     070D                     	;# 
   544     070E                     	;# 
   545     070F                     	;# 
   546     0710                     	;# 
   547     0711                     	;# 
   548     0712                     	;# 
   549     0713                     	;# 
   550     0714                     	;# 
   551     0716                     	;# 
   552     0717                     	;# 
   553     0718                     	;# 
   554     0719                     	;# 
   555     071A                     	;# 
   556     071B                     	;# 
   557     071C                     	;# 
   558     071D                     	;# 
   559     071E                     	;# 
   560     0796                     	;# 
   561     0797                     	;# 
   562     0798                     	;# 
   563     0799                     	;# 
   564     079A                     	;# 
   565     079B                     	;# 
   566     079C                     	;# 
   567     079D                     	;# 
   568     080C                     	;# 
   569     080D                     	;# 
   570     080E                     	;# 
   571     080F                     	;# 
   572     0810                     	;# 
   573     0811                     	;# 
   574     0813                     	;# 
   575     0814                     	;# 
   576     081A                     	;# 
   577     081A                     	;# 
   578     081B                     	;# 
   579     081C                     	;# 
   580     081C                     	;# 
   581     081D                     	;# 
   582     081E                     	;# 
   583     081F                     	;# 
   584     088C                     	;# 
   585     088D                     	;# 
   586     088E                     	;# 
   587     088F                     	;# 
   588     0890                     	;# 
   589     0891                     	;# 
   590     0892                     	;# 
   591     0893                     	;# 
   592     0895                     	;# 
   593     0896                     	;# 
   594     0897                     	;# 
   595     0898                     	;# 
   596     0899                     	;# 
   597     089A                     	;# 
   598     089B                     	;# 
   599     090C                     	;# 
   600     090E                     	;# 
   601     090F                     	;# 
   602     091F                     	;# 
   603     098F                     	;# 
   604     098F                     	;# 
   605     0990                     	;# 
   606     0991                     	;# 
   607     0992                     	;# 
   608     0993                     	;# 
   609     0994                     	;# 
   610     0995                     	;# 
   611     0996                     	;# 
   612     0997                     	;# 
   613     0A19                     	;# 
   614     0A19                     	;# 
   615     0A1A                     	;# 
   616     0A1A                     	;# 
   617     0A1B                     	;# 
   618     0A1B                     	;# 
   619     0A1B                     	;# 
   620     0A1C                     	;# 
   621     0A1C                     	;# 
   622     0A1D                     	;# 
   623     0A1D                     	;# 
   624     0A1E                     	;# 
   625     0A1E                     	;# 
   626     0A1F                     	;# 
   627     0A1F                     	;# 
   628     0A1F                     	;# 
   629     1E0F                     	;# 
   630     1E10                     	;# 
   631     1E11                     	;# 
   632     1E12                     	;# 
   633     1E13                     	;# 
   634     1E14                     	;# 
   635     1E15                     	;# 
   636     1E16                     	;# 
   637     1E17                     	;# 
   638     1E18                     	;# 
   639     1E19                     	;# 
   640     1E1A                     	;# 
   641     1E1B                     	;# 
   642     1E1C                     	;# 
   643     1E1D                     	;# 
   644     1E1E                     	;# 
   645     1E1F                     	;# 
   646     1E20                     	;# 
   647     1E21                     	;# 
   648     1E22                     	;# 
   649     1E23                     	;# 
   650     1E24                     	;# 
   651     1E25                     	;# 
   652     1E26                     	;# 
   653     1E27                     	;# 
   654     1E28                     	;# 
   655     1E29                     	;# 
   656     1E2A                     	;# 
   657     1E2B                     	;# 
   658     1E2C                     	;# 
   659     1E2D                     	;# 
   660     1E2E                     	;# 
   661     1E2F                     	;# 
   662     1E30                     	;# 
   663     1E31                     	;# 
   664     1E32                     	;# 
   665     1E33                     	;# 
   666     1E34                     	;# 
   667     1E35                     	;# 
   668     1E36                     	;# 
   669     1E37                     	;# 
   670     1E8F                     	;# 
   671     1E90                     	;# 
   672     1E91                     	;# 
   673     1E92                     	;# 
   674     1E93                     	;# 
   675     1E94                     	;# 
   676     1E95                     	;# 
   677     1E96                     	;# 
   678     1E97                     	;# 
   679     1E9C                     	;# 
   680     1E9D                     	;# 
   681     1E9E                     	;# 
   682     1EA1                     	;# 
   683     1EA2                     	;# 
   684     1EA3                     	;# 
   685     1EA4                     	;# 
   686     1EA5                     	;# 
   687     1EA9                     	;# 
   688     1EAA                     	;# 
   689     1EAB                     	;# 
   690     1EAC                     	;# 
   691     1EB1                     	;# 
   692     1EB2                     	;# 
   693     1EB3                     	;# 
   694     1EB8                     	;# 
   695     1EB9                     	;# 
   696     1EBA                     	;# 
   697     1EBB                     	;# 
   698     1EBC                     	;# 
   699     1EBD                     	;# 
   700     1EBE                     	;# 
   701     1EC3                     	;# 
   702     1EC5                     	;# 
   703     1EC6                     	;# 
   704     1EC7                     	;# 
   705     1EC8                     	;# 
   706     1EC9                     	;# 
   707     1ECA                     	;# 
   708     1ECB                     	;# 
   709     1ECC                     	;# 
   710     1ECD                     	;# 
   711     1ECE                     	;# 
   712     1F10                     	;# 
   713     1F11                     	;# 
   714     1F12                     	;# 
   715     1F13                     	;# 
   716     1F14                     	;# 
   717     1F15                     	;# 
   718     1F16                     	;# 
   719     1F17                     	;# 
   720     1F18                     	;# 
   721     1F19                     	;# 
   722     1F1A                     	;# 
   723     1F1B                     	;# 
   724     1F1C                     	;# 
   725     1F1D                     	;# 
   726     1F1E                     	;# 
   727     1F1F                     	;# 
   728     1F20                     	;# 
   729     1F21                     	;# 
   730     1F22                     	;# 
   731     1F23                     	;# 
   732     1F24                     	;# 
   733     1F25                     	;# 
   734     1F26                     	;# 
   735     1F27                     	;# 
   736     1F38                     	;# 
   737     1F39                     	;# 
   738     1F3A                     	;# 
   739     1F3B                     	;# 
   740     1F3C                     	;# 
   741     1F3D                     	;# 
   742     1F3E                     	;# 
   743     1F3F                     	;# 
   744     1F43                     	;# 
   745     1F44                     	;# 
   746     1F45                     	;# 
   747     1F46                     	;# 
   748     1F47                     	;# 
   749     1F48                     	;# 
   750     1F49                     	;# 
   751     1F4A                     	;# 
   752     1F4E                     	;# 
   753     1F4F                     	;# 
   754     1F50                     	;# 
   755     1F51                     	;# 
   756     1F52                     	;# 
   757     1F53                     	;# 
   758     1F54                     	;# 
   759     1F55                     	;# 
   760     1F65                     	;# 
   761     1F66                     	;# 
   762     1F67                     	;# 
   763     1F68                     	;# 
   764     1F69                     	;# 
   765     1F6A                     	;# 
   766     1F6B                     	;# 
   767     1FE4                     	;# 
   768     1FE5                     	;# 
   769     1FE6                     	;# 
   770     1FE7                     	;# 
   771     1FE8                     	;# 
   772     1FE8                     	;# 
   773     1FE9                     	;# 
   774     1FEA                     	;# 
   775     1FEB                     	;# 
   776     1FED                     	;# 
   777     1FEE                     	;# 
   778     1FEF                     	;# 
   779     0000                     	;# 
   780     0001                     	;# 
   781     0002                     	;# 
   782     0003                     	;# 
   783     0004                     	;# 
   784     0005                     	;# 
   785     0006                     	;# 
   786     0007                     	;# 
   787     0008                     	;# 
   788     0009                     	;# 
   789     000A                     	;# 
   790     000B                     	;# 
   791     000C                     	;# 
   792     000D                     	;# 
   793     000E                     	;# 
   794     0010                     	;# 
   795     0012                     	;# 
   796     0013                     	;# 
   797     0014                     	;# 
   798     0016                     	;# 
   799     0018                     	;# 
   800     0019                     	;# 
   801     001A                     	;# 
   802     001C                     	;# 
   803     008C                     	;# 
   804     008C                     	;# 
   805     008D                     	;# 
   806     008E                     	;# 
   807     008E                     	;# 
   808     008F                     	;# 
   809     0090                     	;# 
   810     0090                     	;# 
   811     0091                     	;# 
   812     0092                     	;# 
   813     0092                     	;# 
   814     0093                     	;# 
   815     0094                     	;# 
   816     0094                     	;# 
   817     0095                     	;# 
   818     0096                     	;# 
   819     0096                     	;# 
   820     0097                     	;# 
   821     0098                     	;# 
   822     0099                     	;# 
   823     009A                     	;# 
   824     009B                     	;# 
   825     009B                     	;# 
   826     009C                     	;# 
   827     009D                     	;# 
   828     009D                     	;# 
   829     009E                     	;# 
   830     009F                     	;# 
   831     010C                     	;# 
   832     010C                     	;# 
   833     010D                     	;# 
   834     010E                     	;# 
   835     010F                     	;# 
   836     010F                     	;# 
   837     0110                     	;# 
   838     0111                     	;# 
   839     0112                     	;# 
   840     0113                     	;# 
   841     0114                     	;# 
   842     0115                     	;# 
   843     0116                     	;# 
   844     0117                     	;# 
   845     0118                     	;# 
   846     0119                     	;# 
   847     0119                     	;# 
   848     0119                     	;# 
   849     011A                     	;# 
   850     011A                     	;# 
   851     011A                     	;# 
   852     011B                     	;# 
   853     011B                     	;# 
   854     011B                     	;# 
   855     011B                     	;# 
   856     011B                     	;# 
   857     011C                     	;# 
   858     011C                     	;# 
   859     011C                     	;# 
   860     011D                     	;# 
   861     011D                     	;# 
   862     011D                     	;# 
   863     011E                     	;# 
   864     011E                     	;# 
   865     011E                     	;# 
   866     011F                     	;# 
   867     011F                     	;# 
   868     011F                     	;# 
   869     011F                     	;# 
   870     011F                     	;# 
   871     018C                     	;# 
   872     018D                     	;# 
   873     018E                     	;# 
   874     018F                     	;# 
   875     0190                     	;# 
   876     0191                     	;# 
   877     0192                     	;# 
   878     0196                     	;# 
   879     0197                     	;# 
   880     0198                     	;# 
   881     0199                     	;# 
   882     019A                     	;# 
   883     019B                     	;# 
   884     019C                     	;# 
   885     020C                     	;# 
   886     020D                     	;# 
   887     020E                     	;# 
   888     020E                     	;# 
   889     020F                     	;# 
   890     020F                     	;# 
   891     0210                     	;# 
   892     0210                     	;# 
   893     0211                     	;# 
   894     0211                     	;# 
   895     0212                     	;# 
   896     0213                     	;# 
   897     0214                     	;# 
   898     0214                     	;# 
   899     0215                     	;# 
   900     0215                     	;# 
   901     0216                     	;# 
   902     0216                     	;# 
   903     0217                     	;# 
   904     0217                     	;# 
   905     0218                     	;# 
   906     0219                     	;# 
   907     021A                     	;# 
   908     021A                     	;# 
   909     021B                     	;# 
   910     021B                     	;# 
   911     021C                     	;# 
   912     021C                     	;# 
   913     021D                     	;# 
   914     021D                     	;# 
   915     021E                     	;# 
   916     021F                     	;# 
   917     028C                     	;# 
   918     028C                     	;# 
   919     028D                     	;# 
   920     028D                     	;# 
   921     028E                     	;# 
   922     028F                     	;# 
   923     0290                     	;# 
   924     0291                     	;# 
   925     0292                     	;# 
   926     0292                     	;# 
   927     0293                     	;# 
   928     0293                     	;# 
   929     0294                     	;# 
   930     0295                     	;# 
   931     0296                     	;# 
   932     0297                     	;# 
   933     0298                     	;# 
   934     0298                     	;# 
   935     0299                     	;# 
   936     0299                     	;# 
   937     029A                     	;# 
   938     029B                     	;# 
   939     029C                     	;# 
   940     029D                     	;# 
   941     029F                     	;# 
   942     030C                     	;# 
   943     030C                     	;# 
   944     030D                     	;# 
   945     030E                     	;# 
   946     030F                     	;# 
   947     0310                     	;# 
   948     0310                     	;# 
   949     0311                     	;# 
   950     0312                     	;# 
   951     0313                     	;# 
   952     0314                     	;# 
   953     0314                     	;# 
   954     0315                     	;# 
   955     0316                     	;# 
   956     0317                     	;# 
   957     0318                     	;# 
   958     0318                     	;# 
   959     0319                     	;# 
   960     031A                     	;# 
   961     031B                     	;# 
   962     031C                     	;# 
   963     031C                     	;# 
   964     031D                     	;# 
   965     031E                     	;# 
   966     031F                     	;# 
   967     038C                     	;# 
   968     038C                     	;# 
   969     038D                     	;# 
   970     038E                     	;# 
   971     0390                     	;# 
   972     0390                     	;# 
   973     0391                     	;# 
   974     0392                     	;# 
   975     048C                     	;# 
   976     048C                     	;# 
   977     048D                     	;# 
   978     048E                     	;# 
   979     048F                     	;# 
   980     048F                     	;# 
   981     0490                     	;# 
   982     0491                     	;# 
   983     0492                     	;# 
   984     0492                     	;# 
   985     0493                     	;# 
   986     0494                     	;# 
   987     0495                     	;# 
   988     0495                     	;# 
   989     0496                     	;# 
   990     0497                     	;# 
   991     0498                     	;# 
   992     0499                     	;# 
   993     049A                     	;# 
   994     049B                     	;# 
   995     049C                     	;# 
   996     049D                     	;# 
   997     050C                     	;# 
   998     050C                     	;# 
   999     050D                     	;# 
  1000     050E                     	;# 
  1001     050F                     	;# 
  1002     050F                     	;# 
  1003     0510                     	;# 
  1004     0511                     	;# 
  1005     0512                     	;# 
  1006     0512                     	;# 
  1007     0513                     	;# 
  1008     0514                     	;# 
  1009     0515                     	;# 
  1010     0515                     	;# 
  1011     0516                     	;# 
  1012     0517                     	;# 
  1013     0518                     	;# 
  1014     0519                     	;# 
  1015     051A                     	;# 
  1016     051B                     	;# 
  1017     051C                     	;# 
  1018     051D                     	;# 
  1019     058C                     	;# 
  1020     058C                     	;# 
  1021     058D                     	;# 
  1022     058E                     	;# 
  1023     058F                     	;# 
  1024     058F                     	;# 
  1025     0590                     	;# 
  1026     0591                     	;# 
  1027     0592                     	;# 
  1028     0593                     	;# 
  1029     059C                     	;# 
  1030     059C                     	;# 
  1031     059D                     	;# 
  1032     059D                     	;# 
  1033     059E                     	;# 
  1034     059F                     	;# 
  1035     060C                     	;# 
  1036     060C                     	;# 
  1037     060D                     	;# 
  1038     060D                     	;# 
  1039     060E                     	;# 
  1040     060F                     	;# 
  1041     0610                     	;# 
  1042     0611                     	;# 
  1043     0612                     	;# 
  1044     0613                     	;# 
  1045     0614                     	;# 
  1046     0616                     	;# 
  1047     0616                     	;# 
  1048     0617                     	;# 
  1049     0617                     	;# 
  1050     0618                     	;# 
  1051     0619                     	;# 
  1052     061A                     	;# 
  1053     061B                     	;# 
  1054     061C                     	;# 
  1055     061D                     	;# 
  1056     061E                     	;# 
  1057     068C                     	;# 
  1058     068D                     	;# 
  1059     068E                     	;# 
  1060     068F                     	;# 
  1061     0690                     	;# 
  1062     0691                     	;# 
  1063     0692                     	;# 
  1064     0693                     	;# 
  1065     0694                     	;# 
  1066     070C                     	;# 
  1067     070D                     	;# 
  1068     070E                     	;# 
  1069     070F                     	;# 
  1070     0710                     	;# 
  1071     0711                     	;# 
  1072     0712                     	;# 
  1073     0713                     	;# 
  1074     0714                     	;# 
  1075     0716                     	;# 
  1076     0717                     	;# 
  1077     0718                     	;# 
  1078     0719                     	;# 
  1079     071A                     	;# 
  1080     071B                     	;# 
  1081     071C                     	;# 
  1082     071D                     	;# 
  1083     071E                     	;# 
  1084     0796                     	;# 
  1085     0797                     	;# 
  1086     0798                     	;# 
  1087     0799                     	;# 
  1088     079A                     	;# 
  1089     079B                     	;# 
  1090     079C                     	;# 
  1091     079D                     	;# 
  1092     080C                     	;# 
  1093     080D                     	;# 
  1094     080E                     	;# 
  1095     080F                     	;# 
  1096     0810                     	;# 
  1097     0811                     	;# 
  1098     0813                     	;# 
  1099     0814                     	;# 
  1100     081A                     	;# 
  1101     081A                     	;# 
  1102     081B                     	;# 
  1103     081C                     	;# 
  1104     081C                     	;# 
  1105     081D                     	;# 
  1106     081E                     	;# 
  1107     081F                     	;# 
  1108     088C                     	;# 
  1109     088D                     	;# 
  1110     088E                     	;# 
  1111     088F                     	;# 
  1112     0890                     	;# 
  1113     0891                     	;# 
  1114     0892                     	;# 
  1115     0893                     	;# 
  1116     0895                     	;# 
  1117     0896                     	;# 
  1118     0897                     	;# 
  1119     0898                     	;# 
  1120     0899                     	;# 
  1121     089A                     	;# 
  1122     089B                     	;# 
  1123     090C                     	;# 
  1124     090E                     	;# 
  1125     090F                     	;# 
  1126     091F                     	;# 
  1127     098F                     	;# 
  1128     098F                     	;# 
  1129     0990                     	;# 
  1130     0991                     	;# 
  1131     0992                     	;# 
  1132     0993                     	;# 
  1133     0994                     	;# 
  1134     0995                     	;# 
  1135     0996                     	;# 
  1136     0997                     	;# 
  1137     0A19                     	;# 
  1138     0A19                     	;# 
  1139     0A1A                     	;# 
  1140     0A1A                     	;# 
  1141     0A1B                     	;# 
  1142     0A1B                     	;# 
  1143     0A1B                     	;# 
  1144     0A1C                     	;# 
  1145     0A1C                     	;# 
  1146     0A1D                     	;# 
  1147     0A1D                     	;# 
  1148     0A1E                     	;# 
  1149     0A1E                     	;# 
  1150     0A1F                     	;# 
  1151     0A1F                     	;# 
  1152     0A1F                     	;# 
  1153     1E0F                     	;# 
  1154     1E10                     	;# 
  1155     1E11                     	;# 
  1156     1E12                     	;# 
  1157     1E13                     	;# 
  1158     1E14                     	;# 
  1159     1E15                     	;# 
  1160     1E16                     	;# 
  1161     1E17                     	;# 
  1162     1E18                     	;# 
  1163     1E19                     	;# 
  1164     1E1A                     	;# 
  1165     1E1B                     	;# 
  1166     1E1C                     	;# 
  1167     1E1D                     	;# 
  1168     1E1E                     	;# 
  1169     1E1F                     	;# 
  1170     1E20                     	;# 
  1171     1E21                     	;# 
  1172     1E22                     	;# 
  1173     1E23                     	;# 
  1174     1E24                     	;# 
  1175     1E25                     	;# 
  1176     1E26                     	;# 
  1177     1E27                     	;# 
  1178     1E28                     	;# 
  1179     1E29                     	;# 
  1180     1E2A                     	;# 
  1181     1E2B                     	;# 
  1182     1E2C                     	;# 
  1183     1E2D                     	;# 
  1184     1E2E                     	;# 
  1185     1E2F                     	;# 
  1186     1E30                     	;# 
  1187     1E31                     	;# 
  1188     1E32                     	;# 
  1189     1E33                     	;# 
  1190     1E34                     	;# 
  1191     1E35                     	;# 
  1192     1E36                     	;# 
  1193     1E37                     	;# 
  1194     1E8F                     	;# 
  1195     1E90                     	;# 
  1196     1E91                     	;# 
  1197     1E92                     	;# 
  1198     1E93                     	;# 
  1199     1E94                     	;# 
  1200     1E95                     	;# 
  1201     1E96                     	;# 
  1202     1E97                     	;# 
  1203     1E9C                     	;# 
  1204     1E9D                     	;# 
  1205     1E9E                     	;# 
  1206     1EA1                     	;# 
  1207     1EA2                     	;# 
  1208     1EA3                     	;# 
  1209     1EA4                     	;# 
  1210     1EA5                     	;# 
  1211     1EA9                     	;# 
  1212     1EAA                     	;# 
  1213     1EAB                     	;# 
  1214     1EAC                     	;# 
  1215     1EB1                     	;# 
  1216     1EB2                     	;# 
  1217     1EB3                     	;# 
  1218     1EB8                     	;# 
  1219     1EB9                     	;# 
  1220     1EBA                     	;# 
  1221     1EBB                     	;# 
  1222     1EBC                     	;# 
  1223     1EBD                     	;# 
  1224     1EBE                     	;# 
  1225     1EC3                     	;# 
  1226     1EC5                     	;# 
  1227     1EC6                     	;# 
  1228     1EC7                     	;# 
  1229     1EC8                     	;# 
  1230     1EC9                     	;# 
  1231     1ECA                     	;# 
  1232     1ECB                     	;# 
  1233     1ECC                     	;# 
  1234     1ECD                     	;# 
  1235     1ECE                     	;# 
  1236     1F10                     	;# 
  1237     1F11                     	;# 
  1238     1F12                     	;# 
  1239     1F13                     	;# 
  1240     1F14                     	;# 
  1241     1F15                     	;# 
  1242     1F16                     	;# 
  1243     1F17                     	;# 
  1244     1F18                     	;# 
  1245     1F19                     	;# 
  1246     1F1A                     	;# 
  1247     1F1B                     	;# 
  1248     1F1C                     	;# 
  1249     1F1D                     	;# 
  1250     1F1E                     	;# 
  1251     1F1F                     	;# 
  1252     1F20                     	;# 
  1253     1F21                     	;# 
  1254     1F22                     	;# 
  1255     1F23                     	;# 
  1256     1F24                     	;# 
  1257     1F25                     	;# 
  1258     1F26                     	;# 
  1259     1F27                     	;# 
  1260     1F38                     	;# 
  1261     1F39                     	;# 
  1262     1F3A                     	;# 
  1263     1F3B                     	;# 
  1264     1F3C                     	;# 
  1265     1F3D                     	;# 
  1266     1F3E                     	;# 
  1267     1F3F                     	;# 
  1268     1F43                     	;# 
  1269     1F44                     	;# 
  1270     1F45                     	;# 
  1271     1F46                     	;# 
  1272     1F47                     	;# 
  1273     1F48                     	;# 
  1274     1F49                     	;# 
  1275     1F4A                     	;# 
  1276     1F4E                     	;# 
  1277     1F4F                     	;# 
  1278     1F50                     	;# 
  1279     1F51                     	;# 
  1280     1F52                     	;# 
  1281     1F53                     	;# 
  1282     1F54                     	;# 
  1283     1F55                     	;# 
  1284     1F65                     	;# 
  1285     1F66                     	;# 
  1286     1F67                     	;# 
  1287     1F68                     	;# 
  1288     1F69                     	;# 
  1289     1F6A                     	;# 
  1290     1F6B                     	;# 
  1291     1FE4                     	;# 
  1292     1FE5                     	;# 
  1293     1FE6                     	;# 
  1294     1FE7                     	;# 
  1295     1FE8                     	;# 
  1296     1FE8                     	;# 
  1297     1FE9                     	;# 
  1298     1FEA                     	;# 
  1299     1FEB                     	;# 
  1300     1FED                     	;# 
  1301     1FEE                     	;# 
  1302     1FEF                     	;# 
  1303     0000                     	;# 
  1304     0001                     	;# 
  1305     0002                     	;# 
  1306     0003                     	;# 
  1307     0004                     	;# 
  1308     0005                     	;# 
  1309     0006                     	;# 
  1310     0007                     	;# 
  1311     0008                     	;# 
  1312     0009                     	;# 
  1313     000A                     	;# 
  1314     000B                     	;# 
  1315     000C                     	;# 
  1316     000D                     	;# 
  1317     000E                     	;# 
  1318     0010                     	;# 
  1319     0012                     	;# 
  1320     0013                     	;# 
  1321     0014                     	;# 
  1322     0016                     	;# 
  1323     0018                     	;# 
  1324     0019                     	;# 
  1325     001A                     	;# 
  1326     001C                     	;# 
  1327     008C                     	;# 
  1328     008C                     	;# 
  1329     008D                     	;# 
  1330     008E                     	;# 
  1331     008E                     	;# 
  1332     008F                     	;# 
  1333     0090                     	;# 
  1334     0090                     	;# 
  1335     0091                     	;# 
  1336     0092                     	;# 
  1337     0092                     	;# 
  1338     0093                     	;# 
  1339     0094                     	;# 
  1340     0094                     	;# 
  1341     0095                     	;# 
  1342     0096                     	;# 
  1343     0096                     	;# 
  1344     0097                     	;# 
  1345     0098                     	;# 
  1346     0099                     	;# 
  1347     009A                     	;# 
  1348     009B                     	;# 
  1349     009B                     	;# 
  1350     009C                     	;# 
  1351     009D                     	;# 
  1352     009D                     	;# 
  1353     009E                     	;# 
  1354     009F                     	;# 
  1355     010C                     	;# 
  1356     010C                     	;# 
  1357     010D                     	;# 
  1358     010E                     	;# 
  1359     010F                     	;# 
  1360     010F                     	;# 
  1361     0110                     	;# 
  1362     0111                     	;# 
  1363     0112                     	;# 
  1364     0113                     	;# 
  1365     0114                     	;# 
  1366     0115                     	;# 
  1367     0116                     	;# 
  1368     0117                     	;# 
  1369     0118                     	;# 
  1370     0119                     	;# 
  1371     0119                     	;# 
  1372     0119                     	;# 
  1373     011A                     	;# 
  1374     011A                     	;# 
  1375     011A                     	;# 
  1376     011B                     	;# 
  1377     011B                     	;# 
  1378     011B                     	;# 
  1379     011B                     	;# 
  1380     011B                     	;# 
  1381     011C                     	;# 
  1382     011C                     	;# 
  1383     011C                     	;# 
  1384     011D                     	;# 
  1385     011D                     	;# 
  1386     011D                     	;# 
  1387     011E                     	;# 
  1388     011E                     	;# 
  1389     011E                     	;# 
  1390     011F                     	;# 
  1391     011F                     	;# 
  1392     011F                     	;# 
  1393     011F                     	;# 
  1394     011F                     	;# 
  1395     018C                     	;# 
  1396     018D                     	;# 
  1397     018E                     	;# 
  1398     018F                     	;# 
  1399     0190                     	;# 
  1400     0191                     	;# 
  1401     0192                     	;# 
  1402     0196                     	;# 
  1403     0197                     	;# 
  1404     0198                     	;# 
  1405     0199                     	;# 
  1406     019A                     	;# 
  1407     019B                     	;# 
  1408     019C                     	;# 
  1409     020C                     	;# 
  1410     020D                     	;# 
  1411     020E                     	;# 
  1412     020E                     	;# 
  1413     020F                     	;# 
  1414     020F                     	;# 
  1415     0210                     	;# 
  1416     0210                     	;# 
  1417     0211                     	;# 
  1418     0211                     	;# 
  1419     0212                     	;# 
  1420     0213                     	;# 
  1421     0214                     	;# 
  1422     0214                     	;# 
  1423     0215                     	;# 
  1424     0215                     	;# 
  1425     0216                     	;# 
  1426     0216                     	;# 
  1427     0217                     	;# 
  1428     0217                     	;# 
  1429     0218                     	;# 
  1430     0219                     	;# 
  1431     021A                     	;# 
  1432     021A                     	;# 
  1433     021B                     	;# 
  1434     021B                     	;# 
  1435     021C                     	;# 
  1436     021C                     	;# 
  1437     021D                     	;# 
  1438     021D                     	;# 
  1439     021E                     	;# 
  1440     021F                     	;# 
  1441     028C                     	;# 
  1442     028C                     	;# 
  1443     028D                     	;# 
  1444     028D                     	;# 
  1445     028E                     	;# 
  1446     028F                     	;# 
  1447     0290                     	;# 
  1448     0291                     	;# 
  1449     0292                     	;# 
  1450     0292                     	;# 
  1451     0293                     	;# 
  1452     0293                     	;# 
  1453     0294                     	;# 
  1454     0295                     	;# 
  1455     0296                     	;# 
  1456     0297                     	;# 
  1457     0298                     	;# 
  1458     0298                     	;# 
  1459     0299                     	;# 
  1460     0299                     	;# 
  1461     029A                     	;# 
  1462     029B                     	;# 
  1463     029C                     	;# 
  1464     029D                     	;# 
  1465     029F                     	;# 
  1466     030C                     	;# 
  1467     030C                     	;# 
  1468     030D                     	;# 
  1469     030E                     	;# 
  1470     030F                     	;# 
  1471     0310                     	;# 
  1472     0310                     	;# 
  1473     0311                     	;# 
  1474     0312                     	;# 
  1475     0313                     	;# 
  1476     0314                     	;# 
  1477     0314                     	;# 
  1478     0315                     	;# 
  1479     0316                     	;# 
  1480     0317                     	;# 
  1481     0318                     	;# 
  1482     0318                     	;# 
  1483     0319                     	;# 
  1484     031A                     	;# 
  1485     031B                     	;# 
  1486     031C                     	;# 
  1487     031C                     	;# 
  1488     031D                     	;# 
  1489     031E                     	;# 
  1490     031F                     	;# 
  1491     038C                     	;# 
  1492     038C                     	;# 
  1493     038D                     	;# 
  1494     038E                     	;# 
  1495     0390                     	;# 
  1496     0390                     	;# 
  1497     0391                     	;# 
  1498     0392                     	;# 
  1499     048C                     	;# 
  1500     048C                     	;# 
  1501     048D                     	;# 
  1502     048E                     	;# 
  1503     048F                     	;# 
  1504     048F                     	;# 
  1505     0490                     	;# 
  1506     0491                     	;# 
  1507     0492                     	;# 
  1508     0492                     	;# 
  1509     0493                     	;# 
  1510     0494                     	;# 
  1511     0495                     	;# 
  1512     0495                     	;# 
  1513     0496                     	;# 
  1514     0497                     	;# 
  1515     0498                     	;# 
  1516     0499                     	;# 
  1517     049A                     	;# 
  1518     049B                     	;# 
  1519     049C                     	;# 
  1520     049D                     	;# 
  1521     050C                     	;# 
  1522     050C                     	;# 
  1523     050D                     	;# 
  1524     050E                     	;# 
  1525     050F                     	;# 
  1526     050F                     	;# 
  1527     0510                     	;# 
  1528     0511                     	;# 
  1529     0512                     	;# 
  1530     0512                     	;# 
  1531     0513                     	;# 
  1532     0514                     	;# 
  1533     0515                     	;# 
  1534     0515                     	;# 
  1535     0516                     	;# 
  1536     0517                     	;# 
  1537     0518                     	;# 
  1538     0519                     	;# 
  1539     051A                     	;# 
  1540     051B                     	;# 
  1541     051C                     	;# 
  1542     051D                     	;# 
  1543     058C                     	;# 
  1544     058C                     	;# 
  1545     058D                     	;# 
  1546     058E                     	;# 
  1547     058F                     	;# 
  1548     058F                     	;# 
  1549     0590                     	;# 
  1550     0591                     	;# 
  1551     0592                     	;# 
  1552     0593                     	;# 
  1553     059C                     	;# 
  1554     059C                     	;# 
  1555     059D                     	;# 
  1556     059D                     	;# 
  1557     059E                     	;# 
  1558     059F                     	;# 
  1559     060C                     	;# 
  1560     060C                     	;# 
  1561     060D                     	;# 
  1562     060D                     	;# 
  1563     060E                     	;# 
  1564     060F                     	;# 
  1565     0610                     	;# 
  1566     0611                     	;# 
  1567     0612                     	;# 
  1568     0613                     	;# 
  1569     0614                     	;# 
  1570     0616                     	;# 
  1571     0616                     	;# 
  1572     0617                     	;# 
  1573     0617                     	;# 
  1574     0618                     	;# 
  1575     0619                     	;# 
  1576     061A                     	;# 
  1577     061B                     	;# 
  1578     061C                     	;# 
  1579     061D                     	;# 
  1580     061E                     	;# 
  1581     068C                     	;# 
  1582     068D                     	;# 
  1583     068E                     	;# 
  1584     068F                     	;# 
  1585     0690                     	;# 
  1586     0691                     	;# 
  1587     0692                     	;# 
  1588     0693                     	;# 
  1589     0694                     	;# 
  1590     070C                     	;# 
  1591     070D                     	;# 
  1592     070E                     	;# 
  1593     070F                     	;# 
  1594     0710                     	;# 
  1595     0711                     	;# 
  1596     0712                     	;# 
  1597     0713                     	;# 
  1598     0714                     	;# 
  1599     0716                     	;# 
  1600     0717                     	;# 
  1601     0718                     	;# 
  1602     0719                     	;# 
  1603     071A                     	;# 
  1604     071B                     	;# 
  1605     071C                     	;# 
  1606     071D                     	;# 
  1607     071E                     	;# 
  1608     0796                     	;# 
  1609     0797                     	;# 
  1610     0798                     	;# 
  1611     0799                     	;# 
  1612     079A                     	;# 
  1613     079B                     	;# 
  1614     079C                     	;# 
  1615     079D                     	;# 
  1616     080C                     	;# 
  1617     080D                     	;# 
  1618     080E                     	;# 
  1619     080F                     	;# 
  1620     0810                     	;# 
  1621     0811                     	;# 
  1622     0813                     	;# 
  1623     0814                     	;# 
  1624     081A                     	;# 
  1625     081A                     	;# 
  1626     081B                     	;# 
  1627     081C                     	;# 
  1628     081C                     	;# 
  1629     081D                     	;# 
  1630     081E                     	;# 
  1631     081F                     	;# 
  1632     088C                     	;# 
  1633     088D                     	;# 
  1634     088E                     	;# 
  1635     088F                     	;# 
  1636     0890                     	;# 
  1637     0891                     	;# 
  1638     0892                     	;# 
  1639     0893                     	;# 
  1640     0895                     	;# 
  1641     0896                     	;# 
  1642     0897                     	;# 
  1643     0898                     	;# 
  1644     0899                     	;# 
  1645     089A                     	;# 
  1646     089B                     	;# 
  1647     090C                     	;# 
  1648     090E                     	;# 
  1649     090F                     	;# 
  1650     091F                     	;# 
  1651     098F                     	;# 
  1652     098F                     	;# 
  1653     0990                     	;# 
  1654     0991                     	;# 
  1655     0992                     	;# 
  1656     0993                     	;# 
  1657     0994                     	;# 
  1658     0995                     	;# 
  1659     0996                     	;# 
  1660     0997                     	;# 
  1661     0A19                     	;# 
  1662     0A19                     	;# 
  1663     0A1A                     	;# 
  1664     0A1A                     	;# 
  1665     0A1B                     	;# 
  1666     0A1B                     	;# 
  1667     0A1B                     	;# 
  1668     0A1C                     	;# 
  1669     0A1C                     	;# 
  1670     0A1D                     	;# 
  1671     0A1D                     	;# 
  1672     0A1E                     	;# 
  1673     0A1E                     	;# 
  1674     0A1F                     	;# 
  1675     0A1F                     	;# 
  1676     0A1F                     	;# 
  1677     1E0F                     	;# 
  1678     1E10                     	;# 
  1679     1E11                     	;# 
  1680     1E12                     	;# 
  1681     1E13                     	;# 
  1682     1E14                     	;# 
  1683     1E15                     	;# 
  1684     1E16                     	;# 
  1685     1E17                     	;# 
  1686     1E18                     	;# 
  1687     1E19                     	;# 
  1688     1E1A                     	;# 
  1689     1E1B                     	;# 
  1690     1E1C                     	;# 
  1691     1E1D                     	;# 
  1692     1E1E                     	;# 
  1693     1E1F                     	;# 
  1694     1E20                     	;# 
  1695     1E21                     	;# 
  1696     1E22                     	;# 
  1697     1E23                     	;# 
  1698     1E24                     	;# 
  1699     1E25                     	;# 
  1700     1E26                     	;# 
  1701     1E27                     	;# 
  1702     1E28                     	;# 
  1703     1E29                     	;# 
  1704     1E2A                     	;# 
  1705     1E2B                     	;# 
  1706     1E2C                     	;# 
  1707     1E2D                     	;# 
  1708     1E2E                     	;# 
  1709     1E2F                     	;# 
  1710     1E30                     	;# 
  1711     1E31                     	;# 
  1712     1E32                     	;# 
  1713     1E33                     	;# 
  1714     1E34                     	;# 
  1715     1E35                     	;# 
  1716     1E36                     	;# 
  1717     1E37                     	;# 
  1718     1E8F                     	;# 
  1719     1E90                     	;# 
  1720     1E91                     	;# 
  1721     1E92                     	;# 
  1722     1E93                     	;# 
  1723     1E94                     	;# 
  1724     1E95                     	;# 
  1725     1E96                     	;# 
  1726     1E97                     	;# 
  1727     1E9C                     	;# 
  1728     1E9D                     	;# 
  1729     1E9E                     	;# 
  1730     1EA1                     	;# 
  1731     1EA2                     	;# 
  1732     1EA3                     	;# 
  1733     1EA4                     	;# 
  1734     1EA5                     	;# 
  1735     1EA9                     	;# 
  1736     1EAA                     	;# 
  1737     1EAB                     	;# 
  1738     1EAC                     	;# 
  1739     1EB1                     	;# 
  1740     1EB2                     	;# 
  1741     1EB3                     	;# 
  1742     1EB8                     	;# 
  1743     1EB9                     	;# 
  1744     1EBA                     	;# 
  1745     1EBB                     	;# 
  1746     1EBC                     	;# 
  1747     1EBD                     	;# 
  1748     1EBE                     	;# 
  1749     1EC3                     	;# 
  1750     1EC5                     	;# 
  1751     1EC6                     	;# 
  1752     1EC7                     	;# 
  1753     1EC8                     	;# 
  1754     1EC9                     	;# 
  1755     1ECA                     	;# 
  1756     1ECB                     	;# 
  1757     1ECC                     	;# 
  1758     1ECD                     	;# 
  1759     1ECE                     	;# 
  1760     1F10                     	;# 
  1761     1F11                     	;# 
  1762     1F12                     	;# 
  1763     1F13                     	;# 
  1764     1F14                     	;# 
  1765     1F15                     	;# 
  1766     1F16                     	;# 
  1767     1F17                     	;# 
  1768     1F18                     	;# 
  1769     1F19                     	;# 
  1770     1F1A                     	;# 
  1771     1F1B                     	;# 
  1772     1F1C                     	;# 
  1773     1F1D                     	;# 
  1774     1F1E                     	;# 
  1775     1F1F                     	;# 
  1776     1F20                     	;# 
  1777     1F21                     	;# 
  1778     1F22                     	;# 
  1779     1F23                     	;# 
  1780     1F24                     	;# 
  1781     1F25                     	;# 
  1782     1F26                     	;# 
  1783     1F27                     	;# 
  1784     1F38                     	;# 
  1785     1F39                     	;# 
  1786     1F3A                     	;# 
  1787     1F3B                     	;# 
  1788     1F3C                     	;# 
  1789     1F3D                     	;# 
  1790     1F3E                     	;# 
  1791     1F3F                     	;# 
  1792     1F43                     	;# 
  1793     1F44                     	;# 
  1794     1F45                     	;# 
  1795     1F46                     	;# 
  1796     1F47                     	;# 
  1797     1F48                     	;# 
  1798     1F49                     	;# 
  1799     1F4A                     	;# 
  1800     1F4E                     	;# 
  1801     1F4F                     	;# 
  1802     1F50                     	;# 
  1803     1F51                     	;# 
  1804     1F52                     	;# 
  1805     1F53                     	;# 
  1806     1F54                     	;# 
  1807     1F55                     	;# 
  1808     1F65                     	;# 
  1809     1F66                     	;# 
  1810     1F67                     	;# 
  1811     1F68                     	;# 
  1812     1F69                     	;# 
  1813     1F6A                     	;# 
  1814     1F6B                     	;# 
  1815     1FE4                     	;# 
  1816     1FE5                     	;# 
  1817     1FE6                     	;# 
  1818     1FE7                     	;# 
  1819     1FE8                     	;# 
  1820     1FE8                     	;# 
  1821     1FE9                     	;# 
  1822     1FEA                     	;# 
  1823     1FEB                     	;# 
  1824     1FED                     	;# 
  1825     1FEE                     	;# 
  1826     1FEF                     	;# 
  1827     0000                     	;# 
  1828     0001                     	;# 
  1829     0002                     	;# 
  1830     0003                     	;# 
  1831     0004                     	;# 
  1832     0005                     	;# 
  1833     0006                     	;# 
  1834     0007                     	;# 
  1835     0008                     	;# 
  1836     0009                     	;# 
  1837     000A                     	;# 
  1838     000B                     	;# 
  1839     000C                     	;# 
  1840     000D                     	;# 
  1841     000E                     	;# 
  1842     0010                     	;# 
  1843     0012                     	;# 
  1844     0013                     	;# 
  1845     0014                     	;# 
  1846     0016                     	;# 
  1847     0018                     	;# 
  1848     0019                     	;# 
  1849     001A                     	;# 
  1850     001C                     	;# 
  1851     008C                     	;# 
  1852     008C                     	;# 
  1853     008D                     	;# 
  1854     008E                     	;# 
  1855     008E                     	;# 
  1856     008F                     	;# 
  1857     0090                     	;# 
  1858     0090                     	;# 
  1859     0091                     	;# 
  1860     0092                     	;# 
  1861     0092                     	;# 
  1862     0093                     	;# 
  1863     0094                     	;# 
  1864     0094                     	;# 
  1865     0095                     	;# 
  1866     0096                     	;# 
  1867     0096                     	;# 
  1868     0097                     	;# 
  1869     0098                     	;# 
  1870     0099                     	;# 
  1871     009A                     	;# 
  1872     009B                     	;# 
  1873     009B                     	;# 
  1874     009C                     	;# 
  1875     009D                     	;# 
  1876     009D                     	;# 
  1877     009E                     	;# 
  1878     009F                     	;# 
  1879     010C                     	;# 
  1880     010C                     	;# 
  1881     010D                     	;# 
  1882     010E                     	;# 
  1883     010F                     	;# 
  1884     010F                     	;# 
  1885     0110                     	;# 
  1886     0111                     	;# 
  1887     0112                     	;# 
  1888     0113                     	;# 
  1889     0114                     	;# 
  1890     0115                     	;# 
  1891     0116                     	;# 
  1892     0117                     	;# 
  1893     0118                     	;# 
  1894     0119                     	;# 
  1895     0119                     	;# 
  1896     0119                     	;# 
  1897     011A                     	;# 
  1898     011A                     	;# 
  1899     011A                     	;# 
  1900     011B                     	;# 
  1901     011B                     	;# 
  1902     011B                     	;# 
  1903     011B                     	;# 
  1904     011B                     	;# 
  1905     011C                     	;# 
  1906     011C                     	;# 
  1907     011C                     	;# 
  1908     011D                     	;# 
  1909     011D                     	;# 
  1910     011D                     	;# 
  1911     011E                     	;# 
  1912     011E                     	;# 
  1913     011E                     	;# 
  1914     011F                     	;# 
  1915     011F                     	;# 
  1916     011F                     	;# 
  1917     011F                     	;# 
  1918     011F                     	;# 
  1919     018C                     	;# 
  1920     018D                     	;# 
  1921     018E                     	;# 
  1922     018F                     	;# 
  1923     0190                     	;# 
  1924     0191                     	;# 
  1925     0192                     	;# 
  1926     0196                     	;# 
  1927     0197                     	;# 
  1928     0198                     	;# 
  1929     0199                     	;# 
  1930     019A                     	;# 
  1931     019B                     	;# 
  1932     019C                     	;# 
  1933     020C                     	;# 
  1934     020D                     	;# 
  1935     020E                     	;# 
  1936     020E                     	;# 
  1937     020F                     	;# 
  1938     020F                     	;# 
  1939     0210                     	;# 
  1940     0210                     	;# 
  1941     0211                     	;# 
  1942     0211                     	;# 
  1943     0212                     	;# 
  1944     0213                     	;# 
  1945     0214                     	;# 
  1946     0214                     	;# 
  1947     0215                     	;# 
  1948     0215                     	;# 
  1949     0216                     	;# 
  1950     0216                     	;# 
  1951     0217                     	;# 
  1952     0217                     	;# 
  1953     0218                     	;# 
  1954     0219                     	;# 
  1955     021A                     	;# 
  1956     021A                     	;# 
  1957     021B                     	;# 
  1958     021B                     	;# 
  1959     021C                     	;# 
  1960     021C                     	;# 
  1961     021D                     	;# 
  1962     021D                     	;# 
  1963     021E                     	;# 
  1964     021F                     	;# 
  1965     028C                     	;# 
  1966     028C                     	;# 
  1967     028D                     	;# 
  1968     028D                     	;# 
  1969     028E                     	;# 
  1970     028F                     	;# 
  1971     0290                     	;# 
  1972     0291                     	;# 
  1973     0292                     	;# 
  1974     0292                     	;# 
  1975     0293                     	;# 
  1976     0293                     	;# 
  1977     0294                     	;# 
  1978     0295                     	;# 
  1979     0296                     	;# 
  1980     0297                     	;# 
  1981     0298                     	;# 
  1982     0298                     	;# 
  1983     0299                     	;# 
  1984     0299                     	;# 
  1985     029A                     	;# 
  1986     029B                     	;# 
  1987     029C                     	;# 
  1988     029D                     	;# 
  1989     029F                     	;# 
  1990     030C                     	;# 
  1991     030C                     	;# 
  1992     030D                     	;# 
  1993     030E                     	;# 
  1994     030F                     	;# 
  1995     0310                     	;# 
  1996     0310                     	;# 
  1997     0311                     	;# 
  1998     0312                     	;# 
  1999     0313                     	;# 
  2000     0314                     	;# 
  2001     0314                     	;# 
  2002     0315                     	;# 
  2003     0316                     	;# 
  2004     0317                     	;# 
  2005     0318                     	;# 
  2006     0318                     	;# 
  2007     0319                     	;# 
  2008     031A                     	;# 
  2009     031B                     	;# 
  2010     031C                     	;# 
  2011     031C                     	;# 
  2012     031D                     	;# 
  2013     031E                     	;# 
  2014     031F                     	;# 
  2015     038C                     	;# 
  2016     038C                     	;# 
  2017     038D                     	;# 
  2018     038E                     	;# 
  2019     0390                     	;# 
  2020     0390                     	;# 
  2021     0391                     	;# 
  2022     0392                     	;# 
  2023     048C                     	;# 
  2024     048C                     	;# 
  2025     048D                     	;# 
  2026     048E                     	;# 
  2027     048F                     	;# 
  2028     048F                     	;# 
  2029     0490                     	;# 
  2030     0491                     	;# 
  2031     0492                     	;# 
  2032     0492                     	;# 
  2033     0493                     	;# 
  2034     0494                     	;# 
  2035     0495                     	;# 
  2036     0495                     	;# 
  2037     0496                     	;# 
  2038     0497                     	;# 
  2039     0498                     	;# 
  2040     0499                     	;# 
  2041     049A                     	;# 
  2042     049B                     	;# 
  2043     049C                     	;# 
  2044     049D                     	;# 
  2045     050C                     	;# 
  2046     050C                     	;# 
  2047     050D                     	;# 
  2048     050E                     	;# 
  2049     050F                     	;# 
  2050     050F                     	;# 
  2051     0510                     	;# 
  2052     0511                     	;# 
  2053     0512                     	;# 
  2054     0512                     	;# 
  2055     0513                     	;# 
  2056     0514                     	;# 
  2057     0515                     	;# 
  2058     0515                     	;# 
  2059     0516                     	;# 
  2060     0517                     	;# 
  2061     0518                     	;# 
  2062     0519                     	;# 
  2063     051A                     	;# 
  2064     051B                     	;# 
  2065     051C                     	;# 
  2066     051D                     	;# 
  2067     058C                     	;# 
  2068     058C                     	;# 
  2069     058D                     	;# 
  2070     058E                     	;# 
  2071     058F                     	;# 
  2072     058F                     	;# 
  2073     0590                     	;# 
  2074     0591                     	;# 
  2075     0592                     	;# 
  2076     0593                     	;# 
  2077     059C                     	;# 
  2078     059C                     	;# 
  2079     059D                     	;# 
  2080     059D                     	;# 
  2081     059E                     	;# 
  2082     059F                     	;# 
  2083     060C                     	;# 
  2084     060C                     	;# 
  2085     060D                     	;# 
  2086     060D                     	;# 
  2087     060E                     	;# 
  2088     060F                     	;# 
  2089     0610                     	;# 
  2090     0611                     	;# 
  2091     0612                     	;# 
  2092     0613                     	;# 
  2093     0614                     	;# 
  2094     0616                     	;# 
  2095     0616                     	;# 
  2096     0617                     	;# 
  2097     0617                     	;# 
  2098     0618                     	;# 
  2099     0619                     	;# 
  2100     061A                     	;# 
  2101     061B                     	;# 
  2102     061C                     	;# 
  2103     061D                     	;# 
  2104     061E                     	;# 
  2105     068C                     	;# 
  2106     068D                     	;# 
  2107     068E                     	;# 
  2108     068F                     	;# 
  2109     0690                     	;# 
  2110     0691                     	;# 
  2111     0692                     	;# 
  2112     0693                     	;# 
  2113     0694                     	;# 
  2114     070C                     	;# 
  2115     070D                     	;# 
  2116     070E                     	;# 
  2117     070F                     	;# 
  2118     0710                     	;# 
  2119     0711                     	;# 
  2120     0712                     	;# 
  2121     0713                     	;# 
  2122     0714                     	;# 
  2123     0716                     	;# 
  2124     0717                     	;# 
  2125     0718                     	;# 
  2126     0719                     	;# 
  2127     071A                     	;# 
  2128     071B                     	;# 
  2129     071C                     	;# 
  2130     071D                     	;# 
  2131     071E                     	;# 
  2132     0796                     	;# 
  2133     0797                     	;# 
  2134     0798                     	;# 
  2135     0799                     	;# 
  2136     079A                     	;# 
  2137     079B                     	;# 
  2138     079C                     	;# 
  2139     079D                     	;# 
  2140     080C                     	;# 
  2141     080D                     	;# 
  2142     080E                     	;# 
  2143     080F                     	;# 
  2144     0810                     	;# 
  2145     0811                     	;# 
  2146     0813                     	;# 
  2147     0814                     	;# 
  2148     081A                     	;# 
  2149     081A                     	;# 
  2150     081B                     	;# 
  2151     081C                     	;# 
  2152     081C                     	;# 
  2153     081D                     	;# 
  2154     081E                     	;# 
  2155     081F                     	;# 
  2156     088C                     	;# 
  2157     088D                     	;# 
  2158     088E                     	;# 
  2159     088F                     	;# 
  2160     0890                     	;# 
  2161     0891                     	;# 
  2162     0892                     	;# 
  2163     0893                     	;# 
  2164     0895                     	;# 
  2165     0896                     	;# 
  2166     0897                     	;# 
  2167     0898                     	;# 
  2168     0899                     	;# 
  2169     089A                     	;# 
  2170     089B                     	;# 
  2171     090C                     	;# 
  2172     090E                     	;# 
  2173     090F                     	;# 
  2174     091F                     	;# 
  2175     098F                     	;# 
  2176     098F                     	;# 
  2177     0990                     	;# 
  2178     0991                     	;# 
  2179     0992                     	;# 
  2180     0993                     	;# 
  2181     0994                     	;# 
  2182     0995                     	;# 
  2183     0996                     	;# 
  2184     0997                     	;# 
  2185     0A19                     	;# 
  2186     0A19                     	;# 
  2187     0A1A                     	;# 
  2188     0A1A                     	;# 
  2189     0A1B                     	;# 
  2190     0A1B                     	;# 
  2191     0A1B                     	;# 
  2192     0A1C                     	;# 
  2193     0A1C                     	;# 
  2194     0A1D                     	;# 
  2195     0A1D                     	;# 
  2196     0A1E                     	;# 
  2197     0A1E                     	;# 
  2198     0A1F                     	;# 
  2199     0A1F                     	;# 
  2200     0A1F                     	;# 
  2201     1E0F                     	;# 
  2202     1E10                     	;# 
  2203     1E11                     	;# 
  2204     1E12                     	;# 
  2205     1E13                     	;# 
  2206     1E14                     	;# 
  2207     1E15                     	;# 
  2208     1E16                     	;# 
  2209     1E17                     	;# 
  2210     1E18                     	;# 
  2211     1E19                     	;# 
  2212     1E1A                     	;# 
  2213     1E1B                     	;# 
  2214     1E1C                     	;# 
  2215     1E1D                     	;# 
  2216     1E1E                     	;# 
  2217     1E1F                     	;# 
  2218     1E20                     	;# 
  2219     1E21                     	;# 
  2220     1E22                     	;# 
  2221     1E23                     	;# 
  2222     1E24                     	;# 
  2223     1E25                     	;# 
  2224     1E26                     	;# 
  2225     1E27                     	;# 
  2226     1E28                     	;# 
  2227     1E29                     	;# 
  2228     1E2A                     	;# 
  2229     1E2B                     	;# 
  2230     1E2C                     	;# 
  2231     1E2D                     	;# 
  2232     1E2E                     	;# 
  2233     1E2F                     	;# 
  2234     1E30                     	;# 
  2235     1E31                     	;# 
  2236     1E32                     	;# 
  2237     1E33                     	;# 
  2238     1E34                     	;# 
  2239     1E35                     	;# 
  2240     1E36                     	;# 
  2241     1E37                     	;# 
  2242     1E8F                     	;# 
  2243     1E90                     	;# 
  2244     1E91                     	;# 
  2245     1E92                     	;# 
  2246     1E93                     	;# 
  2247     1E94                     	;# 
  2248     1E95                     	;# 
  2249     1E96                     	;# 
  2250     1E97                     	;# 
  2251     1E9C                     	;# 
  2252     1E9D                     	;# 
  2253     1E9E                     	;# 
  2254     1EA1                     	;# 
  2255     1EA2                     	;# 
  2256     1EA3                     	;# 
  2257     1EA4                     	;# 
  2258     1EA5                     	;# 
  2259     1EA9                     	;# 
  2260     1EAA                     	;# 
  2261     1EAB                     	;# 
  2262     1EAC                     	;# 
  2263     1EB1                     	;# 
  2264     1EB2                     	;# 
  2265     1EB3                     	;# 
  2266     1EB8                     	;# 
  2267     1EB9                     	;# 
  2268     1EBA                     	;# 
  2269     1EBB                     	;# 
  2270     1EBC                     	;# 
  2271     1EBD                     	;# 
  2272     1EBE                     	;# 
  2273     1EC3                     	;# 
  2274     1EC5                     	;# 
  2275     1EC6                     	;# 
  2276     1EC7                     	;# 
  2277     1EC8                     	;# 
  2278     1EC9                     	;# 
  2279     1ECA                     	;# 
  2280     1ECB                     	;# 
  2281     1ECC                     	;# 
  2282     1ECD                     	;# 
  2283     1ECE                     	;# 
  2284     1F10                     	;# 
  2285     1F11                     	;# 
  2286     1F12                     	;# 
  2287     1F13                     	;# 
  2288     1F14                     	;# 
  2289     1F15                     	;# 
  2290     1F16                     	;# 
  2291     1F17                     	;# 
  2292     1F18                     	;# 
  2293     1F19                     	;# 
  2294     1F1A                     	;# 
  2295     1F1B                     	;# 
  2296     1F1C                     	;# 
  2297     1F1D                     	;# 
  2298     1F1E                     	;# 
  2299     1F1F                     	;# 
  2300     1F20                     	;# 
  2301     1F21                     	;# 
  2302     1F22                     	;# 
  2303     1F23                     	;# 
  2304     1F24                     	;# 
  2305     1F25                     	;# 
  2306     1F26                     	;# 
  2307     1F27                     	;# 
  2308     1F38                     	;# 
  2309     1F39                     	;# 
  2310     1F3A                     	;# 
  2311     1F3B                     	;# 
  2312     1F3C                     	;# 
  2313     1F3D                     	;# 
  2314     1F3E                     	;# 
  2315     1F3F                     	;# 
  2316     1F43                     	;# 
  2317     1F44                     	;# 
  2318     1F45                     	;# 
  2319     1F46                     	;# 
  2320     1F47                     	;# 
  2321     1F48                     	;# 
  2322     1F49                     	;# 
  2323     1F4A                     	;# 
  2324     1F4E                     	;# 
  2325     1F4F                     	;# 
  2326     1F50                     	;# 
  2327     1F51                     	;# 
  2328     1F52                     	;# 
  2329     1F53                     	;# 
  2330     1F54                     	;# 
  2331     1F55                     	;# 
  2332     1F65                     	;# 
  2333     1F66                     	;# 
  2334     1F67                     	;# 
  2335     1F68                     	;# 
  2336     1F69                     	;# 
  2337     1F6A                     	;# 
  2338     1F6B                     	;# 
  2339     1FE4                     	;# 
  2340     1FE5                     	;# 
  2341     1FE6                     	;# 
  2342     1FE7                     	;# 
  2343     1FE8                     	;# 
  2344     1FE8                     	;# 
  2345     1FE9                     	;# 
  2346     1FEA                     	;# 
  2347     1FEB                     	;# 
  2348     1FED                     	;# 
  2349     1FEE                     	;# 
  2350     1FEF                     	;# 
  2351     0000                     	;# 
  2352     0001                     	;# 
  2353     0002                     	;# 
  2354     0003                     	;# 
  2355     0004                     	;# 
  2356     0005                     	;# 
  2357     0006                     	;# 
  2358     0007                     	;# 
  2359     0008                     	;# 
  2360     0009                     	;# 
  2361     000A                     	;# 
  2362     000B                     	;# 
  2363     000C                     	;# 
  2364     000D                     	;# 
  2365     000E                     	;# 
  2366     0010                     	;# 
  2367     0012                     	;# 
  2368     0013                     	;# 
  2369     0014                     	;# 
  2370     0016                     	;# 
  2371     0018                     	;# 
  2372     0019                     	;# 
  2373     001A                     	;# 
  2374     001C                     	;# 
  2375     008C                     	;# 
  2376     008C                     	;# 
  2377     008D                     	;# 
  2378     008E                     	;# 
  2379     008E                     	;# 
  2380     008F                     	;# 
  2381     0090                     	;# 
  2382     0090                     	;# 
  2383     0091                     	;# 
  2384     0092                     	;# 
  2385     0092                     	;# 
  2386     0093                     	;# 
  2387     0094                     	;# 
  2388     0094                     	;# 
  2389     0095                     	;# 
  2390     0096                     	;# 
  2391     0096                     	;# 
  2392     0097                     	;# 
  2393     0098                     	;# 
  2394     0099                     	;# 
  2395     009A                     	;# 
  2396     009B                     	;# 
  2397     009B                     	;# 
  2398     009C                     	;# 
  2399     009D                     	;# 
  2400     009D                     	;# 
  2401     009E                     	;# 
  2402     009F                     	;# 
  2403     010C                     	;# 
  2404     010C                     	;# 
  2405     010D                     	;# 
  2406     010E                     	;# 
  2407     010F                     	;# 
  2408     010F                     	;# 
  2409     0110                     	;# 
  2410     0111                     	;# 
  2411     0112                     	;# 
  2412     0113                     	;# 
  2413     0114                     	;# 
  2414     0115                     	;# 
  2415     0116                     	;# 
  2416     0117                     	;# 
  2417     0118                     	;# 
  2418     0119                     	;# 
  2419     0119                     	;# 
  2420     0119                     	;# 
  2421     011A                     	;# 
  2422     011A                     	;# 
  2423     011A                     	;# 
  2424     011B                     	;# 
  2425     011B                     	;# 
  2426     011B                     	;# 
  2427     011B                     	;# 
  2428     011B                     	;# 
  2429     011C                     	;# 
  2430     011C                     	;# 
  2431     011C                     	;# 
  2432     011D                     	;# 
  2433     011D                     	;# 
  2434     011D                     	;# 
  2435     011E                     	;# 
  2436     011E                     	;# 
  2437     011E                     	;# 
  2438     011F                     	;# 
  2439     011F                     	;# 
  2440     011F                     	;# 
  2441     011F                     	;# 
  2442     011F                     	;# 
  2443     018C                     	;# 
  2444     018D                     	;# 
  2445     018E                     	;# 
  2446     018F                     	;# 
  2447     0190                     	;# 
  2448     0191                     	;# 
  2449     0192                     	;# 
  2450     0196                     	;# 
  2451     0197                     	;# 
  2452     0198                     	;# 
  2453     0199                     	;# 
  2454     019A                     	;# 
  2455     019B                     	;# 
  2456     019C                     	;# 
  2457     020C                     	;# 
  2458     020D                     	;# 
  2459     020E                     	;# 
  2460     020E                     	;# 
  2461     020F                     	;# 
  2462     020F                     	;# 
  2463     0210                     	;# 
  2464     0210                     	;# 
  2465     0211                     	;# 
  2466     0211                     	;# 
  2467     0212                     	;# 
  2468     0213                     	;# 
  2469     0214                     	;# 
  2470     0214                     	;# 
  2471     0215                     	;# 
  2472     0215                     	;# 
  2473     0216                     	;# 
  2474     0216                     	;# 
  2475     0217                     	;# 
  2476     0217                     	;# 
  2477     0218                     	;# 
  2478     0219                     	;# 
  2479     021A                     	;# 
  2480     021A                     	;# 
  2481     021B                     	;# 
  2482     021B                     	;# 
  2483     021C                     	;# 
  2484     021C                     	;# 
  2485     021D                     	;# 
  2486     021D                     	;# 
  2487     021E                     	;# 
  2488     021F                     	;# 
  2489     028C                     	;# 
  2490     028C                     	;# 
  2491     028D                     	;# 
  2492     028D                     	;# 
  2493     028E                     	;# 
  2494     028F                     	;# 
  2495     0290                     	;# 
  2496     0291                     	;# 
  2497     0292                     	;# 
  2498     0292                     	;# 
  2499     0293                     	;# 
  2500     0293                     	;# 
  2501     0294                     	;# 
  2502     0295                     	;# 
  2503     0296                     	;# 
  2504     0297                     	;# 
  2505     0298                     	;# 
  2506     0298                     	;# 
  2507     0299                     	;# 
  2508     0299                     	;# 
  2509     029A                     	;# 
  2510     029B                     	;# 
  2511     029C                     	;# 
  2512     029D                     	;# 
  2513     029F                     	;# 
  2514     030C                     	;# 
  2515     030C                     	;# 
  2516     030D                     	;# 
  2517     030E                     	;# 
  2518     030F                     	;# 
  2519     0310                     	;# 
  2520     0310                     	;# 
  2521     0311                     	;# 
  2522     0312                     	;# 
  2523     0313                     	;# 
  2524     0314                     	;# 
  2525     0314                     	;# 
  2526     0315                     	;# 
  2527     0316                     	;# 
  2528     0317                     	;# 
  2529     0318                     	;# 
  2530     0318                     	;# 
  2531     0319                     	;# 
  2532     031A                     	;# 
  2533     031B                     	;# 
  2534     031C                     	;# 
  2535     031C                     	;# 
  2536     031D                     	;# 
  2537     031E                     	;# 
  2538     031F                     	;# 
  2539     038C                     	;# 
  2540     038C                     	;# 
  2541     038D                     	;# 
  2542     038E                     	;# 
  2543     0390                     	;# 
  2544     0390                     	;# 
  2545     0391                     	;# 
  2546     0392                     	;# 
  2547     048C                     	;# 
  2548     048C                     	;# 
  2549     048D                     	;# 
  2550     048E                     	;# 
  2551     048F                     	;# 
  2552     048F                     	;# 
  2553     0490                     	;# 
  2554     0491                     	;# 
  2555     0492                     	;# 
  2556     0492                     	;# 
  2557     0493                     	;# 
  2558     0494                     	;# 
  2559     0495                     	;# 
  2560     0495                     	;# 
  2561     0496                     	;# 
  2562     0497                     	;# 
  2563     0498                     	;# 
  2564     0499                     	;# 
  2565     049A                     	;# 
  2566     049B                     	;# 
  2567     049C                     	;# 
  2568     049D                     	;# 
  2569     050C                     	;# 
  2570     050C                     	;# 
  2571     050D                     	;# 
  2572     050E                     	;# 
  2573     050F                     	;# 
  2574     050F                     	;# 
  2575     0510                     	;# 
  2576     0511                     	;# 
  2577     0512                     	;# 
  2578     0512                     	;# 
  2579     0513                     	;# 
  2580     0514                     	;# 
  2581     0515                     	;# 
  2582     0515                     	;# 
  2583     0516                     	;# 
  2584     0517                     	;# 
  2585     0518                     	;# 
  2586     0519                     	;# 
  2587     051A                     	;# 
  2588     051B                     	;# 
  2589     051C                     	;# 
  2590     051D                     	;# 
  2591     058C                     	;# 
  2592     058C                     	;# 
  2593     058D                     	;# 
  2594     058E                     	;# 
  2595     058F                     	;# 
  2596     058F                     	;# 
  2597     0590                     	;# 
  2598     0591                     	;# 
  2599     0592                     	;# 
  2600     0593                     	;# 
  2601     059C                     	;# 
  2602     059C                     	;# 
  2603     059D                     	;# 
  2604     059D                     	;# 
  2605     059E                     	;# 
  2606     059F                     	;# 
  2607     060C                     	;# 
  2608     060C                     	;# 
  2609     060D                     	;# 
  2610     060D                     	;# 
  2611     060E                     	;# 
  2612     060F                     	;# 
  2613     0610                     	;# 
  2614     0611                     	;# 
  2615     0612                     	;# 
  2616     0613                     	;# 
  2617     0614                     	;# 
  2618     0616                     	;# 
  2619     0616                     	;# 
  2620     0617                     	;# 
  2621     0617                     	;# 
  2622     0618                     	;# 
  2623     0619                     	;# 
  2624     061A                     	;# 
  2625     061B                     	;# 
  2626     061C                     	;# 
  2627     061D                     	;# 
  2628     061E                     	;# 
  2629     068C                     	;# 
  2630     068D                     	;# 
  2631     068E                     	;# 
  2632     068F                     	;# 
  2633     0690                     	;# 
  2634     0691                     	;# 
  2635     0692                     	;# 
  2636     0693                     	;# 
  2637     0694                     	;# 
  2638     070C                     	;# 
  2639     070D                     	;# 
  2640     070E                     	;# 
  2641     070F                     	;# 
  2642     0710                     	;# 
  2643     0711                     	;# 
  2644     0712                     	;# 
  2645     0713                     	;# 
  2646     0714                     	;# 
  2647     0716                     	;# 
  2648     0717                     	;# 
  2649     0718                     	;# 
  2650     0719                     	;# 
  2651     071A                     	;# 
  2652     071B                     	;# 
  2653     071C                     	;# 
  2654     071D                     	;# 
  2655     071E                     	;# 
  2656     0796                     	;# 
  2657     0797                     	;# 
  2658     0798                     	;# 
  2659     0799                     	;# 
  2660     079A                     	;# 
  2661     079B                     	;# 
  2662     079C                     	;# 
  2663     079D                     	;# 
  2664     080C                     	;# 
  2665     080D                     	;# 
  2666     080E                     	;# 
  2667     080F                     	;# 
  2668     0810                     	;# 
  2669     0811                     	;# 
  2670     0813                     	;# 
  2671     0814                     	;# 
  2672     081A                     	;# 
  2673     081A                     	;# 
  2674     081B                     	;# 
  2675     081C                     	;# 
  2676     081C                     	;# 
  2677     081D                     	;# 
  2678     081E                     	;# 
  2679     081F                     	;# 
  2680     088C                     	;# 
  2681     088D                     	;# 
  2682     088E                     	;# 
  2683     088F                     	;# 
  2684     0890                     	;# 
  2685     0891                     	;# 
  2686     0892                     	;# 
  2687     0893                     	;# 
  2688     0895                     	;# 
  2689     0896                     	;# 
  2690     0897                     	;# 
  2691     0898                     	;# 
  2692     0899                     	;# 
  2693     089A                     	;# 
  2694     089B                     	;# 
  2695     090C                     	;# 
  2696     090E                     	;# 
  2697     090F                     	;# 
  2698     091F                     	;# 
  2699     098F                     	;# 
  2700     098F                     	;# 
  2701     0990                     	;# 
  2702     0991                     	;# 
  2703     0992                     	;# 
  2704     0993                     	;# 
  2705     0994                     	;# 
  2706     0995                     	;# 
  2707     0996                     	;# 
  2708     0997                     	;# 
  2709     0A19                     	;# 
  2710     0A19                     	;# 
  2711     0A1A                     	;# 
  2712     0A1A                     	;# 
  2713     0A1B                     	;# 
  2714     0A1B                     	;# 
  2715     0A1B                     	;# 
  2716     0A1C                     	;# 
  2717     0A1C                     	;# 
  2718     0A1D                     	;# 
  2719     0A1D                     	;# 
  2720     0A1E                     	;# 
  2721     0A1E                     	;# 
  2722     0A1F                     	;# 
  2723     0A1F                     	;# 
  2724     0A1F                     	;# 
  2725     1E0F                     	;# 
  2726     1E10                     	;# 
  2727     1E11                     	;# 
  2728     1E12                     	;# 
  2729     1E13                     	;# 
  2730     1E14                     	;# 
  2731     1E15                     	;# 
  2732     1E16                     	;# 
  2733     1E17                     	;# 
  2734     1E18                     	;# 
  2735     1E19                     	;# 
  2736     1E1A                     	;# 
  2737     1E1B                     	;# 
  2738     1E1C                     	;# 
  2739     1E1D                     	;# 
  2740     1E1E                     	;# 
  2741     1E1F                     	;# 
  2742     1E20                     	;# 
  2743     1E21                     	;# 
  2744     1E22                     	;# 
  2745     1E23                     	;# 
  2746     1E24                     	;# 
  2747     1E25                     	;# 
  2748     1E26                     	;# 
  2749     1E27                     	;# 
  2750     1E28                     	;# 
  2751     1E29                     	;# 
  2752     1E2A                     	;# 
  2753     1E2B                     	;# 
  2754     1E2C                     	;# 
  2755     1E2D                     	;# 
  2756     1E2E                     	;# 
  2757     1E2F                     	;# 
  2758     1E30                     	;# 
  2759     1E31                     	;# 
  2760     1E32                     	;# 
  2761     1E33                     	;# 
  2762     1E34                     	;# 
  2763     1E35                     	;# 
  2764     1E36                     	;# 
  2765     1E37                     	;# 
  2766     1E8F                     	;# 
  2767     1E90                     	;# 
  2768     1E91                     	;# 
  2769     1E92                     	;# 
  2770     1E93                     	;# 
  2771     1E94                     	;# 
  2772     1E95                     	;# 
  2773     1E96                     	;# 
  2774     1E97                     	;# 
  2775     1E9C                     	;# 
  2776     1E9D                     	;# 
  2777     1E9E                     	;# 
  2778     1EA1                     	;# 
  2779     1EA2                     	;# 
  2780     1EA3                     	;# 
  2781     1EA4                     	;# 
  2782     1EA5                     	;# 
  2783     1EA9                     	;# 
  2784     1EAA                     	;# 
  2785     1EAB                     	;# 
  2786     1EAC                     	;# 
  2787     1EB1                     	;# 
  2788     1EB2                     	;# 
  2789     1EB3                     	;# 
  2790     1EB8                     	;# 
  2791     1EB9                     	;# 
  2792     1EBA                     	;# 
  2793     1EBB                     	;# 
  2794     1EBC                     	;# 
  2795     1EBD                     	;# 
  2796     1EBE                     	;# 
  2797     1EC3                     	;# 
  2798     1EC5                     	;# 
  2799     1EC6                     	;# 
  2800     1EC7                     	;# 
  2801     1EC8                     	;# 
  2802     1EC9                     	;# 
  2803     1ECA                     	;# 
  2804     1ECB                     	;# 
  2805     1ECC                     	;# 
  2806     1ECD                     	;# 
  2807     1ECE                     	;# 
  2808     1F10                     	;# 
  2809     1F11                     	;# 
  2810     1F12                     	;# 
  2811     1F13                     	;# 
  2812     1F14                     	;# 
  2813     1F15                     	;# 
  2814     1F16                     	;# 
  2815     1F17                     	;# 
  2816     1F18                     	;# 
  2817     1F19                     	;# 
  2818     1F1A                     	;# 
  2819     1F1B                     	;# 
  2820     1F1C                     	;# 
  2821     1F1D                     	;# 
  2822     1F1E                     	;# 
  2823     1F1F                     	;# 
  2824     1F20                     	;# 
  2825     1F21                     	;# 
  2826     1F22                     	;# 
  2827     1F23                     	;# 
  2828     1F24                     	;# 
  2829     1F25                     	;# 
  2830     1F26                     	;# 
  2831     1F27                     	;# 
  2832     1F38                     	;# 
  2833     1F39                     	;# 
  2834     1F3A                     	;# 
  2835     1F3B                     	;# 
  2836     1F3C                     	;# 
  2837     1F3D                     	;# 
  2838     1F3E                     	;# 
  2839     1F3F                     	;# 
  2840     1F43                     	;# 
  2841     1F44                     	;# 
  2842     1F45                     	;# 
  2843     1F46                     	;# 
  2844     1F47                     	;# 
  2845     1F48                     	;# 
  2846     1F49                     	;# 
  2847     1F4A                     	;# 
  2848     1F4E                     	;# 
  2849     1F4F                     	;# 
  2850     1F50                     	;# 
  2851     1F51                     	;# 
  2852     1F52                     	;# 
  2853     1F53                     	;# 
  2854     1F54                     	;# 
  2855     1F55                     	;# 
  2856     1F65                     	;# 
  2857     1F66                     	;# 
  2858     1F67                     	;# 
  2859     1F68                     	;# 
  2860     1F69                     	;# 
  2861     1F6A                     	;# 
  2862     1F6B                     	;# 
  2863     1FE4                     	;# 
  2864     1FE5                     	;# 
  2865     1FE6                     	;# 
  2866     1FE7                     	;# 
  2867     1FE8                     	;# 
  2868     1FE8                     	;# 
  2869     1FE9                     	;# 
  2870     1FEA                     	;# 
  2871     1FEB                     	;# 
  2872     1FED                     	;# 
  2873     1FEE                     	;# 
  2874     1FEF                     	;# 
  2875     0000                     	;# 
  2876     0001                     	;# 
  2877     0002                     	;# 
  2878     0003                     	;# 
  2879     0004                     	;# 
  2880     0005                     	;# 
  2881     0006                     	;# 
  2882     0007                     	;# 
  2883     0008                     	;# 
  2884     0009                     	;# 
  2885     000A                     	;# 
  2886     000B                     	;# 
  2887     000C                     	;# 
  2888     000D                     	;# 
  2889     000E                     	;# 
  2890     0010                     	;# 
  2891     0012                     	;# 
  2892     0013                     	;# 
  2893     0014                     	;# 
  2894     0016                     	;# 
  2895     0018                     	;# 
  2896     0019                     	;# 
  2897     001A                     	;# 
  2898     001C                     	;# 
  2899     008C                     	;# 
  2900     008C                     	;# 
  2901     008D                     	;# 
  2902     008E                     	;# 
  2903     008E                     	;# 
  2904     008F                     	;# 
  2905     0090                     	;# 
  2906     0090                     	;# 
  2907     0091                     	;# 
  2908     0092                     	;# 
  2909     0092                     	;# 
  2910     0093                     	;# 
  2911     0094                     	;# 
  2912     0094                     	;# 
  2913     0095                     	;# 
  2914     0096                     	;# 
  2915     0096                     	;# 
  2916     0097                     	;# 
  2917     0098                     	;# 
  2918     0099                     	;# 
  2919     009A                     	;# 
  2920     009B                     	;# 
  2921     009B                     	;# 
  2922     009C                     	;# 
  2923     009D                     	;# 
  2924     009D                     	;# 
  2925     009E                     	;# 
  2926     009F                     	;# 
  2927     010C                     	;# 
  2928     010C                     	;# 
  2929     010D                     	;# 
  2930     010E                     	;# 
  2931     010F                     	;# 
  2932     010F                     	;# 
  2933     0110                     	;# 
  2934     0111                     	;# 
  2935     0112                     	;# 
  2936     0113                     	;# 
  2937     0114                     	;# 
  2938     0115                     	;# 
  2939     0116                     	;# 
  2940     0117                     	;# 
  2941     0118                     	;# 
  2942     0119                     	;# 
  2943     0119                     	;# 
  2944     0119                     	;# 
  2945     011A                     	;# 
  2946     011A                     	;# 
  2947     011A                     	;# 
  2948     011B                     	;# 
  2949     011B                     	;# 
  2950     011B                     	;# 
  2951     011B                     	;# 
  2952     011B                     	;# 
  2953     011C                     	;# 
  2954     011C                     	;# 
  2955     011C                     	;# 
  2956     011D                     	;# 
  2957     011D                     	;# 
  2958     011D                     	;# 
  2959     011E                     	;# 
  2960     011E                     	;# 
  2961     011E                     	;# 
  2962     011F                     	;# 
  2963     011F                     	;# 
  2964     011F                     	;# 
  2965     011F                     	;# 
  2966     011F                     	;# 
  2967     018C                     	;# 
  2968     018D                     	;# 
  2969     018E                     	;# 
  2970     018F                     	;# 
  2971     0190                     	;# 
  2972     0191                     	;# 
  2973     0192                     	;# 
  2974     0196                     	;# 
  2975     0197                     	;# 
  2976     0198                     	;# 
  2977     0199                     	;# 
  2978     019A                     	;# 
  2979     019B                     	;# 
  2980     019C                     	;# 
  2981     020C                     	;# 
  2982     020D                     	;# 
  2983     020E                     	;# 
  2984     020E                     	;# 
  2985     020F                     	;# 
  2986     020F                     	;# 
  2987     0210                     	;# 
  2988     0210                     	;# 
  2989     0211                     	;# 
  2990     0211                     	;# 
  2991     0212                     	;# 
  2992     0213                     	;# 
  2993     0214                     	;# 
  2994     0214                     	;# 
  2995     0215                     	;# 
  2996     0215                     	;# 
  2997     0216                     	;# 
  2998     0216                     	;# 
  2999     0217                     	;# 
  3000     0217                     	;# 
  3001     0218                     	;# 
  3002     0219                     	;# 
  3003     021A                     	;# 
  3004     021A                     	;# 
  3005     021B                     	;# 
  3006     021B                     	;# 
  3007     021C                     	;# 
  3008     021C                     	;# 
  3009     021D                     	;# 
  3010     021D                     	;# 
  3011     021E                     	;# 
  3012     021F                     	;# 
  3013     028C                     	;# 
  3014     028C                     	;# 
  3015     028D                     	;# 
  3016     028D                     	;# 
  3017     028E                     	;# 
  3018     028F                     	;# 
  3019     0290                     	;# 
  3020     0291                     	;# 
  3021     0292                     	;# 
  3022     0292                     	;# 
  3023     0293                     	;# 
  3024     0293                     	;# 
  3025     0294                     	;# 
  3026     0295                     	;# 
  3027     0296                     	;# 
  3028     0297                     	;# 
  3029     0298                     	;# 
  3030     0298                     	;# 
  3031     0299                     	;# 
  3032     0299                     	;# 
  3033     029A                     	;# 
  3034     029B                     	;# 
  3035     029C                     	;# 
  3036     029D                     	;# 
  3037     029F                     	;# 
  3038     030C                     	;# 
  3039     030C                     	;# 
  3040     030D                     	;# 
  3041     030E                     	;# 
  3042     030F                     	;# 
  3043     0310                     	;# 
  3044     0310                     	;# 
  3045     0311                     	;# 
  3046     0312                     	;# 
  3047     0313                     	;# 
  3048     0314                     	;# 
  3049     0314                     	;# 
  3050     0315                     	;# 
  3051     0316                     	;# 
  3052     0317                     	;# 
  3053     0318                     	;# 
  3054     0318                     	;# 
  3055     0319                     	;# 
  3056     031A                     	;# 
  3057     031B                     	;# 
  3058     031C                     	;# 
  3059     031C                     	;# 
  3060     031D                     	;# 
  3061     031E                     	;# 
  3062     031F                     	;# 
  3063     038C                     	;# 
  3064     038C                     	;# 
  3065     038D                     	;# 
  3066     038E                     	;# 
  3067     0390                     	;# 
  3068     0390                     	;# 
  3069     0391                     	;# 
  3070     0392                     	;# 
  3071     048C                     	;# 
  3072     048C                     	;# 
  3073     048D                     	;# 
  3074     048E                     	;# 
  3075     048F                     	;# 
  3076     048F                     	;# 
  3077     0490                     	;# 
  3078     0491                     	;# 
  3079     0492                     	;# 
  3080     0492                     	;# 
  3081     0493                     	;# 
  3082     0494                     	;# 
  3083     0495                     	;# 
  3084     0495                     	;# 
  3085     0496                     	;# 
  3086     0497                     	;# 
  3087     0498                     	;# 
  3088     0499                     	;# 
  3089     049A                     	;# 
  3090     049B                     	;# 
  3091     049C                     	;# 
  3092     049D                     	;# 
  3093     050C                     	;# 
  3094     050C                     	;# 
  3095     050D                     	;# 
  3096     050E                     	;# 
  3097     050F                     	;# 
  3098     050F                     	;# 
  3099     0510                     	;# 
  3100     0511                     	;# 
  3101     0512                     	;# 
  3102     0512                     	;# 
  3103     0513                     	;# 
  3104     0514                     	;# 
  3105     0515                     	;# 
  3106     0515                     	;# 
  3107     0516                     	;# 
  3108     0517                     	;# 
  3109     0518                     	;# 
  3110     0519                     	;# 
  3111     051A                     	;# 
  3112     051B                     	;# 
  3113     051C                     	;# 
  3114     051D                     	;# 
  3115     058C                     	;# 
  3116     058C                     	;# 
  3117     058D                     	;# 
  3118     058E                     	;# 
  3119     058F                     	;# 
  3120     058F                     	;# 
  3121     0590                     	;# 
  3122     0591                     	;# 
  3123     0592                     	;# 
  3124     0593                     	;# 
  3125     059C                     	;# 
  3126     059C                     	;# 
  3127     059D                     	;# 
  3128     059D                     	;# 
  3129     059E                     	;# 
  3130     059F                     	;# 
  3131     060C                     	;# 
  3132     060C                     	;# 
  3133     060D                     	;# 
  3134     060D                     	;# 
  3135     060E                     	;# 
  3136     060F                     	;# 
  3137     0610                     	;# 
  3138     0611                     	;# 
  3139     0612                     	;# 
  3140     0613                     	;# 
  3141     0614                     	;# 
  3142     0616                     	;# 
  3143     0616                     	;# 
  3144     0617                     	;# 
  3145     0617                     	;# 
  3146     0618                     	;# 
  3147     0619                     	;# 
  3148     061A                     	;# 
  3149     061B                     	;# 
  3150     061C                     	;# 
  3151     061D                     	;# 
  3152     061E                     	;# 
  3153     068C                     	;# 
  3154     068D                     	;# 
  3155     068E                     	;# 
  3156     068F                     	;# 
  3157     0690                     	;# 
  3158     0691                     	;# 
  3159     0692                     	;# 
  3160     0693                     	;# 
  3161     0694                     	;# 
  3162     070C                     	;# 
  3163     070D                     	;# 
  3164     070E                     	;# 
  3165     070F                     	;# 
  3166     0710                     	;# 
  3167     0711                     	;# 
  3168     0712                     	;# 
  3169     0713                     	;# 
  3170     0714                     	;# 
  3171     0716                     	;# 
  3172     0717                     	;# 
  3173     0718                     	;# 
  3174     0719                     	;# 
  3175     071A                     	;# 
  3176     071B                     	;# 
  3177     071C                     	;# 
  3178     071D                     	;# 
  3179     071E                     	;# 
  3180     0796                     	;# 
  3181     0797                     	;# 
  3182     0798                     	;# 
  3183     0799                     	;# 
  3184     079A                     	;# 
  3185     079B                     	;# 
  3186     079C                     	;# 
  3187     079D                     	;# 
  3188     080C                     	;# 
  3189     080D                     	;# 
  3190     080E                     	;# 
  3191     080F                     	;# 
  3192     0810                     	;# 
  3193     0811                     	;# 
  3194     0813                     	;# 
  3195     0814                     	;# 
  3196     081A                     	;# 
  3197     081A                     	;# 
  3198     081B                     	;# 
  3199     081C                     	;# 
  3200     081C                     	;# 
  3201     081D                     	;# 
  3202     081E                     	;# 
  3203     081F                     	;# 
  3204     088C                     	;# 
  3205     088D                     	;# 
  3206     088E                     	;# 
  3207     088F                     	;# 
  3208     0890                     	;# 
  3209     0891                     	;# 
  3210     0892                     	;# 
  3211     0893                     	;# 
  3212     0895                     	;# 
  3213     0896                     	;# 
  3214     0897                     	;# 
  3215     0898                     	;# 
  3216     0899                     	;# 
  3217     089A                     	;# 
  3218     089B                     	;# 
  3219     090C                     	;# 
  3220     090E                     	;# 
  3221     090F                     	;# 
  3222     091F                     	;# 
  3223     098F                     	;# 
  3224     098F                     	;# 
  3225     0990                     	;# 
  3226     0991                     	;# 
  3227     0992                     	;# 
  3228     0993                     	;# 
  3229     0994                     	;# 
  3230     0995                     	;# 
  3231     0996                     	;# 
  3232     0997                     	;# 
  3233     0A19                     	;# 
  3234     0A19                     	;# 
  3235     0A1A                     	;# 
  3236     0A1A                     	;# 
  3237     0A1B                     	;# 
  3238     0A1B                     	;# 
  3239     0A1B                     	;# 
  3240     0A1C                     	;# 
  3241     0A1C                     	;# 
  3242     0A1D                     	;# 
  3243     0A1D                     	;# 
  3244     0A1E                     	;# 
  3245     0A1E                     	;# 
  3246     0A1F                     	;# 
  3247     0A1F                     	;# 
  3248     0A1F                     	;# 
  3249     1E0F                     	;# 
  3250     1E10                     	;# 
  3251     1E11                     	;# 
  3252     1E12                     	;# 
  3253     1E13                     	;# 
  3254     1E14                     	;# 
  3255     1E15                     	;# 
  3256     1E16                     	;# 
  3257     1E17                     	;# 
  3258     1E18                     	;# 
  3259     1E19                     	;# 
  3260     1E1A                     	;# 
  3261     1E1B                     	;# 
  3262     1E1C                     	;# 
  3263     1E1D                     	;# 
  3264     1E1E                     	;# 
  3265     1E1F                     	;# 
  3266     1E20                     	;# 
  3267     1E21                     	;# 
  3268     1E22                     	;# 
  3269     1E23                     	;# 
  3270     1E24                     	;# 
  3271     1E25                     	;# 
  3272     1E26                     	;# 
  3273     1E27                     	;# 
  3274     1E28                     	;# 
  3275     1E29                     	;# 
  3276     1E2A                     	;# 
  3277     1E2B                     	;# 
  3278     1E2C                     	;# 
  3279     1E2D                     	;# 
  3280     1E2E                     	;# 
  3281     1E2F                     	;# 
  3282     1E30                     	;# 
  3283     1E31                     	;# 
  3284     1E32                     	;# 
  3285     1E33                     	;# 
  3286     1E34                     	;# 
  3287     1E35                     	;# 
  3288     1E36                     	;# 
  3289     1E37                     	;# 
  3290     1E8F                     	;# 
  3291     1E90                     	;# 
  3292     1E91                     	;# 
  3293     1E92                     	;# 
  3294     1E93                     	;# 
  3295     1E94                     	;# 
  3296     1E95                     	;# 
  3297     1E96                     	;# 
  3298     1E97                     	;# 
  3299     1E9C                     	;# 
  3300     1E9D                     	;# 
  3301     1E9E                     	;# 
  3302     1EA1                     	;# 
  3303     1EA2                     	;# 
  3304     1EA3                     	;# 
  3305     1EA4                     	;# 
  3306     1EA5                     	;# 
  3307     1EA9                     	;# 
  3308     1EAA                     	;# 
  3309     1EAB                     	;# 
  3310     1EAC                     	;# 
  3311     1EB1                     	;# 
  3312     1EB2                     	;# 
  3313     1EB3                     	;# 
  3314     1EB8                     	;# 
  3315     1EB9                     	;# 
  3316     1EBA                     	;# 
  3317     1EBB                     	;# 
  3318     1EBC                     	;# 
  3319     1EBD                     	;# 
  3320     1EBE                     	;# 
  3321     1EC3                     	;# 
  3322     1EC5                     	;# 
  3323     1EC6                     	;# 
  3324     1EC7                     	;# 
  3325     1EC8                     	;# 
  3326     1EC9                     	;# 
  3327     1ECA                     	;# 
  3328     1ECB                     	;# 
  3329     1ECC                     	;# 
  3330     1ECD                     	;# 
  3331     1ECE                     	;# 
  3332     1F10                     	;# 
  3333     1F11                     	;# 
  3334     1F12                     	;# 
  3335     1F13                     	;# 
  3336     1F14                     	;# 
  3337     1F15                     	;# 
  3338     1F16                     	;# 
  3339     1F17                     	;# 
  3340     1F18                     	;# 
  3341     1F19                     	;# 
  3342     1F1A                     	;# 
  3343     1F1B                     	;# 
  3344     1F1C                     	;# 
  3345     1F1D                     	;# 
  3346     1F1E                     	;# 
  3347     1F1F                     	;# 
  3348     1F20                     	;# 
  3349     1F21                     	;# 
  3350     1F22                     	;# 
  3351     1F23                     	;# 
  3352     1F24                     	;# 
  3353     1F25                     	;# 
  3354     1F26                     	;# 
  3355     1F27                     	;# 
  3356     1F38                     	;# 
  3357     1F39                     	;# 
  3358     1F3A                     	;# 
  3359     1F3B                     	;# 
  3360     1F3C                     	;# 
  3361     1F3D                     	;# 
  3362     1F3E                     	;# 
  3363     1F3F                     	;# 
  3364     1F43                     	;# 
  3365     1F44                     	;# 
  3366     1F45                     	;# 
  3367     1F46                     	;# 
  3368     1F47                     	;# 
  3369     1F48                     	;# 
  3370     1F49                     	;# 
  3371     1F4A                     	;# 
  3372     1F4E                     	;# 
  3373     1F4F                     	;# 
  3374     1F50                     	;# 
  3375     1F51                     	;# 
  3376     1F52                     	;# 
  3377     1F53                     	;# 
  3378     1F54                     	;# 
  3379     1F55                     	;# 
  3380     1F65                     	;# 
  3381     1F66                     	;# 
  3382     1F67                     	;# 
  3383     1F68                     	;# 
  3384     1F69                     	;# 
  3385     1F6A                     	;# 
  3386     1F6B                     	;# 
  3387     1FE4                     	;# 
  3388     1FE5                     	;# 
  3389     1FE6                     	;# 
  3390     1FE7                     	;# 
  3391     1FE8                     	;# 
  3392     1FE8                     	;# 
  3393     1FE9                     	;# 
  3394     1FEA                     	;# 
  3395     1FEB                     	;# 
  3396     1FED                     	;# 
  3397     1FEE                     	;# 
  3398     1FEF                     	;# 
  3399     0000                     	;# 
  3400     0001                     	;# 
  3401     0002                     	;# 
  3402     0003                     	;# 
  3403     0004                     	;# 
  3404     0005                     	;# 
  3405     0006                     	;# 
  3406     0007                     	;# 
  3407     0008                     	;# 
  3408     0009                     	;# 
  3409     000A                     	;# 
  3410     000B                     	;# 
  3411     000C                     	;# 
  3412     000D                     	;# 
  3413     000E                     	;# 
  3414     0010                     	;# 
  3415     0012                     	;# 
  3416     0013                     	;# 
  3417     0014                     	;# 
  3418     0016                     	;# 
  3419     0018                     	;# 
  3420     0019                     	;# 
  3421     001A                     	;# 
  3422     001C                     	;# 
  3423     008C                     	;# 
  3424     008C                     	;# 
  3425     008D                     	;# 
  3426     008E                     	;# 
  3427     008E                     	;# 
  3428     008F                     	;# 
  3429     0090                     	;# 
  3430     0090                     	;# 
  3431     0091                     	;# 
  3432     0092                     	;# 
  3433     0092                     	;# 
  3434     0093                     	;# 
  3435     0094                     	;# 
  3436     0094                     	;# 
  3437     0095                     	;# 
  3438     0096                     	;# 
  3439     0096                     	;# 
  3440     0097                     	;# 
  3441     0098                     	;# 
  3442     0099                     	;# 
  3443     009A                     	;# 
  3444     009B                     	;# 
  3445     009B                     	;# 
  3446     009C                     	;# 
  3447     009D                     	;# 
  3448     009D                     	;# 
  3449     009E                     	;# 
  3450     009F                     	;# 
  3451     010C                     	;# 
  3452     010C                     	;# 
  3453     010D                     	;# 
  3454     010E                     	;# 
  3455     010F                     	;# 
  3456     010F                     	;# 
  3457     0110                     	;# 
  3458     0111                     	;# 
  3459     0112                     	;# 
  3460     0113                     	;# 
  3461     0114                     	;# 
  3462     0115                     	;# 
  3463     0116                     	;# 
  3464     0117                     	;# 
  3465     0118                     	;# 
  3466     0119                     	;# 
  3467     0119                     	;# 
  3468     0119                     	;# 
  3469     011A                     	;# 
  3470     011A                     	;# 
  3471     011A                     	;# 
  3472     011B                     	;# 
  3473     011B                     	;# 
  3474     011B                     	;# 
  3475     011B                     	;# 
  3476     011B                     	;# 
  3477     011C                     	;# 
  3478     011C                     	;# 
  3479     011C                     	;# 
  3480     011D                     	;# 
  3481     011D                     	;# 
  3482     011D                     	;# 
  3483     011E                     	;# 
  3484     011E                     	;# 
  3485     011E                     	;# 
  3486     011F                     	;# 
  3487     011F                     	;# 
  3488     011F                     	;# 
  3489     011F                     	;# 
  3490     011F                     	;# 
  3491     018C                     	;# 
  3492     018D                     	;# 
  3493     018E                     	;# 
  3494     018F                     	;# 
  3495     0190                     	;# 
  3496     0191                     	;# 
  3497     0192                     	;# 
  3498     0196                     	;# 
  3499     0197                     	;# 
  3500     0198                     	;# 
  3501     0199                     	;# 
  3502     019A                     	;# 
  3503     019B                     	;# 
  3504     019C                     	;# 
  3505     020C                     	;# 
  3506     020D                     	;# 
  3507     020E                     	;# 
  3508     020E                     	;# 
  3509     020F                     	;# 
  3510     020F                     	;# 
  3511     0210                     	;# 
  3512     0210                     	;# 
  3513     0211                     	;# 
  3514     0211                     	;# 
  3515     0212                     	;# 
  3516     0213                     	;# 
  3517     0214                     	;# 
  3518     0214                     	;# 
  3519     0215                     	;# 
  3520     0215                     	;# 
  3521     0216                     	;# 
  3522     0216                     	;# 
  3523     0217                     	;# 
  3524     0217                     	;# 
  3525     0218                     	;# 
  3526     0219                     	;# 
  3527     021A                     	;# 
  3528     021A                     	;# 
  3529     021B                     	;# 
  3530     021B                     	;# 
  3531     021C                     	;# 
  3532     021C                     	;# 
  3533     021D                     	;# 
  3534     021D                     	;# 
  3535     021E                     	;# 
  3536     021F                     	;# 
  3537     028C                     	;# 
  3538     028C                     	;# 
  3539     028D                     	;# 
  3540     028D                     	;# 
  3541     028E                     	;# 
  3542     028F                     	;# 
  3543     0290                     	;# 
  3544     0291                     	;# 
  3545     0292                     	;# 
  3546     0292                     	;# 
  3547     0293                     	;# 
  3548     0293                     	;# 
  3549     0294                     	;# 
  3550     0295                     	;# 
  3551     0296                     	;# 
  3552     0297                     	;# 
  3553     0298                     	;# 
  3554     0298                     	;# 
  3555     0299                     	;# 
  3556     0299                     	;# 
  3557     029A                     	;# 
  3558     029B                     	;# 
  3559     029C                     	;# 
  3560     029D                     	;# 
  3561     029F                     	;# 
  3562     030C                     	;# 
  3563     030C                     	;# 
  3564     030D                     	;# 
  3565     030E                     	;# 
  3566     030F                     	;# 
  3567     0310                     	;# 
  3568     0310                     	;# 
  3569     0311                     	;# 
  3570     0312                     	;# 
  3571     0313                     	;# 
  3572     0314                     	;# 
  3573     0314                     	;# 
  3574     0315                     	;# 
  3575     0316                     	;# 
  3576     0317                     	;# 
  3577     0318                     	;# 
  3578     0318                     	;# 
  3579     0319                     	;# 
  3580     031A                     	;# 
  3581     031B                     	;# 
  3582     031C                     	;# 
  3583     031C                     	;# 
  3584     031D                     	;# 
  3585     031E                     	;# 
  3586     031F                     	;# 
  3587     038C                     	;# 
  3588     038C                     	;# 
  3589     038D                     	;# 
  3590     038E                     	;# 
  3591     0390                     	;# 
  3592     0390                     	;# 
  3593     0391                     	;# 
  3594     0392                     	;# 
  3595     048C                     	;# 
  3596     048C                     	;# 
  3597     048D                     	;# 
  3598     048E                     	;# 
  3599     048F                     	;# 
  3600     048F                     	;# 
  3601     0490                     	;# 
  3602     0491                     	;# 
  3603     0492                     	;# 
  3604     0492                     	;# 
  3605     0493                     	;# 
  3606     0494                     	;# 
  3607     0495                     	;# 
  3608     0495                     	;# 
  3609     0496                     	;# 
  3610     0497                     	;# 
  3611     0498                     	;# 
  3612     0499                     	;# 
  3613     049A                     	;# 
  3614     049B                     	;# 
  3615     049C                     	;# 
  3616     049D                     	;# 
  3617     050C                     	;# 
  3618     050C                     	;# 
  3619     050D                     	;# 
  3620     050E                     	;# 
  3621     050F                     	;# 
  3622     050F                     	;# 
  3623     0510                     	;# 
  3624     0511                     	;# 
  3625     0512                     	;# 
  3626     0512                     	;# 
  3627     0513                     	;# 
  3628     0514                     	;# 
  3629     0515                     	;# 
  3630     0515                     	;# 
  3631     0516                     	;# 
  3632     0517                     	;# 
  3633     0518                     	;# 
  3634     0519                     	;# 
  3635     051A                     	;# 
  3636     051B                     	;# 
  3637     051C                     	;# 
  3638     051D                     	;# 
  3639     058C                     	;# 
  3640     058C                     	;# 
  3641     058D                     	;# 
  3642     058E                     	;# 
  3643     058F                     	;# 
  3644     058F                     	;# 
  3645     0590                     	;# 
  3646     0591                     	;# 
  3647     0592                     	;# 
  3648     0593                     	;# 
  3649     059C                     	;# 
  3650     059C                     	;# 
  3651     059D                     	;# 
  3652     059D                     	;# 
  3653     059E                     	;# 
  3654     059F                     	;# 
  3655     060C                     	;# 
  3656     060C                     	;# 
  3657     060D                     	;# 
  3658     060D                     	;# 
  3659     060E                     	;# 
  3660     060F                     	;# 
  3661     0610                     	;# 
  3662     0611                     	;# 
  3663     0612                     	;# 
  3664     0613                     	;# 
  3665     0614                     	;# 
  3666     0616                     	;# 
  3667     0616                     	;# 
  3668     0617                     	;# 
  3669     0617                     	;# 
  3670     0618                     	;# 
  3671     0619                     	;# 
  3672     061A                     	;# 
  3673     061B                     	;# 
  3674     061C                     	;# 
  3675     061D                     	;# 
  3676     061E                     	;# 
  3677     068C                     	;# 
  3678     068D                     	;# 
  3679     068E                     	;# 
  3680     068F                     	;# 
  3681     0690                     	;# 
  3682     0691                     	;# 
  3683     0692                     	;# 
  3684     0693                     	;# 
  3685     0694                     	;# 
  3686     070C                     	;# 
  3687     070D                     	;# 
  3688     070E                     	;# 
  3689     070F                     	;# 
  3690     0710                     	;# 
  3691     0711                     	;# 
  3692     0712                     	;# 
  3693     0713                     	;# 
  3694     0714                     	;# 
  3695     0716                     	;# 
  3696     0717                     	;# 
  3697     0718                     	;# 
  3698     0719                     	;# 
  3699     071A                     	;# 
  3700     071B                     	;# 
  3701     071C                     	;# 
  3702     071D                     	;# 
  3703     071E                     	;# 
  3704     0796                     	;# 
  3705     0797                     	;# 
  3706     0798                     	;# 
  3707     0799                     	;# 
  3708     079A                     	;# 
  3709     079B                     	;# 
  3710     079C                     	;# 
  3711     079D                     	;# 
  3712     080C                     	;# 
  3713     080D                     	;# 
  3714     080E                     	;# 
  3715     080F                     	;# 
  3716     0810                     	;# 
  3717     0811                     	;# 
  3718     0813                     	;# 
  3719     0814                     	;# 
  3720     081A                     	;# 
  3721     081A                     	;# 
  3722     081B                     	;# 
  3723     081C                     	;# 
  3724     081C                     	;# 
  3725     081D                     	;# 
  3726     081E                     	;# 
  3727     081F                     	;# 
  3728     088C                     	;# 
  3729     088D                     	;# 
  3730     088E                     	;# 
  3731     088F                     	;# 
  3732     0890                     	;# 
  3733     0891                     	;# 
  3734     0892                     	;# 
  3735     0893                     	;# 
  3736     0895                     	;# 
  3737     0896                     	;# 
  3738     0897                     	;# 
  3739     0898                     	;# 
  3740     0899                     	;# 
  3741     089A                     	;# 
  3742     089B                     	;# 
  3743     090C                     	;# 
  3744     090E                     	;# 
  3745     090F                     	;# 
  3746     091F                     	;# 
  3747     098F                     	;# 
  3748     098F                     	;# 
  3749     0990                     	;# 
  3750     0991                     	;# 
  3751     0992                     	;# 
  3752     0993                     	;# 
  3753     0994                     	;# 
  3754     0995                     	;# 
  3755     0996                     	;# 
  3756     0997                     	;# 
  3757     0A19                     	;# 
  3758     0A19                     	;# 
  3759     0A1A                     	;# 
  3760     0A1A                     	;# 
  3761     0A1B                     	;# 
  3762     0A1B                     	;# 
  3763     0A1B                     	;# 
  3764     0A1C                     	;# 
  3765     0A1C                     	;# 
  3766     0A1D                     	;# 
  3767     0A1D                     	;# 
  3768     0A1E                     	;# 
  3769     0A1E                     	;# 
  3770     0A1F                     	;# 
  3771     0A1F                     	;# 
  3772     0A1F                     	;# 
  3773     1E0F                     	;# 
  3774     1E10                     	;# 
  3775     1E11                     	;# 
  3776     1E12                     	;# 
  3777     1E13                     	;# 
  3778     1E14                     	;# 
  3779     1E15                     	;# 
  3780     1E16                     	;# 
  3781     1E17                     	;# 
  3782     1E18                     	;# 
  3783     1E19                     	;# 
  3784     1E1A                     	;# 
  3785     1E1B                     	;# 
  3786     1E1C                     	;# 
  3787     1E1D                     	;# 
  3788     1E1E                     	;# 
  3789     1E1F                     	;# 
  3790     1E20                     	;# 
  3791     1E21                     	;# 
  3792     1E22                     	;# 
  3793     1E23                     	;# 
  3794     1E24                     	;# 
  3795     1E25                     	;# 
  3796     1E26                     	;# 
  3797     1E27                     	;# 
  3798     1E28                     	;# 
  3799     1E29                     	;# 
  3800     1E2A                     	;# 
  3801     1E2B                     	;# 
  3802     1E2C                     	;# 
  3803     1E2D                     	;# 
  3804     1E2E                     	;# 
  3805     1E2F                     	;# 
  3806     1E30                     	;# 
  3807     1E31                     	;# 
  3808     1E32                     	;# 
  3809     1E33                     	;# 
  3810     1E34                     	;# 
  3811     1E35                     	;# 
  3812     1E36                     	;# 
  3813     1E37                     	;# 
  3814     1E8F                     	;# 
  3815     1E90                     	;# 
  3816     1E91                     	;# 
  3817     1E92                     	;# 
  3818     1E93                     	;# 
  3819     1E94                     	;# 
  3820     1E95                     	;# 
  3821     1E96                     	;# 
  3822     1E97                     	;# 
  3823     1E9C                     	;# 
  3824     1E9D                     	;# 
  3825     1E9E                     	;# 
  3826     1EA1                     	;# 
  3827     1EA2                     	;# 
  3828     1EA3                     	;# 
  3829     1EA4                     	;# 
  3830     1EA5                     	;# 
  3831     1EA9                     	;# 
  3832     1EAA                     	;# 
  3833     1EAB                     	;# 
  3834     1EAC                     	;# 
  3835     1EB1                     	;# 
  3836     1EB2                     	;# 
  3837     1EB3                     	;# 
  3838     1EB8                     	;# 
  3839     1EB9                     	;# 
  3840     1EBA                     	;# 
  3841     1EBB                     	;# 
  3842     1EBC                     	;# 
  3843     1EBD                     	;# 
  3844     1EBE                     	;# 
  3845     1EC3                     	;# 
  3846     1EC5                     	;# 
  3847     1EC6                     	;# 
  3848     1EC7                     	;# 
  3849     1EC8                     	;# 
  3850     1EC9                     	;# 
  3851     1ECA                     	;# 
  3852     1ECB                     	;# 
  3853     1ECC                     	;# 
  3854     1ECD                     	;# 
  3855     1ECE                     	;# 
  3856     1F10                     	;# 
  3857     1F11                     	;# 
  3858     1F12                     	;# 
  3859     1F13                     	;# 
  3860     1F14                     	;# 
  3861     1F15                     	;# 
  3862     1F16                     	;# 
  3863     1F17                     	;# 
  3864     1F18                     	;# 
  3865     1F19                     	;# 
  3866     1F1A                     	;# 
  3867     1F1B                     	;# 
  3868     1F1C                     	;# 
  3869     1F1D                     	;# 
  3870     1F1E                     	;# 
  3871     1F1F                     	;# 
  3872     1F20                     	;# 
  3873     1F21                     	;# 
  3874     1F22                     	;# 
  3875     1F23                     	;# 
  3876     1F24                     	;# 
  3877     1F25                     	;# 
  3878     1F26                     	;# 
  3879     1F27                     	;# 
  3880     1F38                     	;# 
  3881     1F39                     	;# 
  3882     1F3A                     	;# 
  3883     1F3B                     	;# 
  3884     1F3C                     	;# 
  3885     1F3D                     	;# 
  3886     1F3E                     	;# 
  3887     1F3F                     	;# 
  3888     1F43                     	;# 
  3889     1F44                     	;# 
  3890     1F45                     	;# 
  3891     1F46                     	;# 
  3892     1F47                     	;# 
  3893     1F48                     	;# 
  3894     1F49                     	;# 
  3895     1F4A                     	;# 
  3896     1F4E                     	;# 
  3897     1F4F                     	;# 
  3898     1F50                     	;# 
  3899     1F51                     	;# 
  3900     1F52                     	;# 
  3901     1F53                     	;# 
  3902     1F54                     	;# 
  3903     1F55                     	;# 
  3904     1F65                     	;# 
  3905     1F66                     	;# 
  3906     1F67                     	;# 
  3907     1F68                     	;# 
  3908     1F69                     	;# 
  3909     1F6A                     	;# 
  3910     1F6B                     	;# 
  3911     1FE4                     	;# 
  3912     1FE5                     	;# 
  3913     1FE6                     	;# 
  3914     1FE7                     	;# 
  3915     1FE8                     	;# 
  3916     1FE8                     	;# 
  3917     1FE9                     	;# 
  3918     1FEA                     	;# 
  3919     1FEB                     	;# 
  3920     1FED                     	;# 
  3921     1FEE                     	;# 
  3922     1FEF                     	;# 
  3923     0000                     	;# 
  3924     0001                     	;# 
  3925     0002                     	;# 
  3926     0003                     	;# 
  3927     0004                     	;# 
  3928     0005                     	;# 
  3929     0006                     	;# 
  3930     0007                     	;# 
  3931     0008                     	;# 
  3932     0009                     	;# 
  3933     000A                     	;# 
  3934     000B                     	;# 
  3935     000C                     	;# 
  3936     000D                     	;# 
  3937     000E                     	;# 
  3938     0010                     	;# 
  3939     0012                     	;# 
  3940     0013                     	;# 
  3941     0014                     	;# 
  3942     0016                     	;# 
  3943     0018                     	;# 
  3944     0019                     	;# 
  3945     001A                     	;# 
  3946     001C                     	;# 
  3947     008C                     	;# 
  3948     008C                     	;# 
  3949     008D                     	;# 
  3950     008E                     	;# 
  3951     008E                     	;# 
  3952     008F                     	;# 
  3953     0090                     	;# 
  3954     0090                     	;# 
  3955     0091                     	;# 
  3956     0092                     	;# 
  3957     0092                     	;# 
  3958     0093                     	;# 
  3959     0094                     	;# 
  3960     0094                     	;# 
  3961     0095                     	;# 
  3962     0096                     	;# 
  3963     0096                     	;# 
  3964     0097                     	;# 
  3965     0098                     	;# 
  3966     0099                     	;# 
  3967     009A                     	;# 
  3968     009B                     	;# 
  3969     009B                     	;# 
  3970     009C                     	;# 
  3971     009D                     	;# 
  3972     009D                     	;# 
  3973     009E                     	;# 
  3974     009F                     	;# 
  3975     010C                     	;# 
  3976     010C                     	;# 
  3977     010D                     	;# 
  3978     010E                     	;# 
  3979     010F                     	;# 
  3980     010F                     	;# 
  3981     0110                     	;# 
  3982     0111                     	;# 
  3983     0112                     	;# 
  3984     0113                     	;# 
  3985     0114                     	;# 
  3986     0115                     	;# 
  3987     0116                     	;# 
  3988     0117                     	;# 
  3989     0118                     	;# 
  3990     0119                     	;# 
  3991     0119                     	;# 
  3992     0119                     	;# 
  3993     011A                     	;# 
  3994     011A                     	;# 
  3995     011A                     	;# 
  3996     011B                     	;# 
  3997     011B                     	;# 
  3998     011B                     	;# 
  3999     011B                     	;# 
  4000     011B                     	;# 
  4001     011C                     	;# 
  4002     011C                     	;# 
  4003     011C                     	;# 
  4004     011D                     	;# 
  4005     011D                     	;# 
  4006     011D                     	;# 
  4007     011E                     	;# 
  4008     011E                     	;# 
  4009     011E                     	;# 
  4010     011F                     	;# 
  4011     011F                     	;# 
  4012     011F                     	;# 
  4013     011F                     	;# 
  4014     011F                     	;# 
  4015     018C                     	;# 
  4016     018D                     	;# 
  4017     018E                     	;# 
  4018     018F                     	;# 
  4019     0190                     	;# 
  4020     0191                     	;# 
  4021     0192                     	;# 
  4022     0196                     	;# 
  4023     0197                     	;# 
  4024     0198                     	;# 
  4025     0199                     	;# 
  4026     019A                     	;# 
  4027     019B                     	;# 
  4028     019C                     	;# 
  4029     020C                     	;# 
  4030     020D                     	;# 
  4031     020E                     	;# 
  4032     020E                     	;# 
  4033     020F                     	;# 
  4034     020F                     	;# 
  4035     0210                     	;# 
  4036     0210                     	;# 
  4037     0211                     	;# 
  4038     0211                     	;# 
  4039     0212                     	;# 
  4040     0213                     	;# 
  4041     0214                     	;# 
  4042     0214                     	;# 
  4043     0215                     	;# 
  4044     0215                     	;# 
  4045     0216                     	;# 
  4046     0216                     	;# 
  4047     0217                     	;# 
  4048     0217                     	;# 
  4049     0218                     	;# 
  4050     0219                     	;# 
  4051     021A                     	;# 
  4052     021A                     	;# 
  4053     021B                     	;# 
  4054     021B                     	;# 
  4055     021C                     	;# 
  4056     021C                     	;# 
  4057     021D                     	;# 
  4058     021D                     	;# 
  4059     021E                     	;# 
  4060     021F                     	;# 
  4061     028C                     	;# 
  4062     028C                     	;# 
  4063     028D                     	;# 
  4064     028D                     	;# 
  4065     028E                     	;# 
  4066     028F                     	;# 
  4067     0290                     	;# 
  4068     0291                     	;# 
  4069     0292                     	;# 
  4070     0292                     	;# 
  4071     0293                     	;# 
  4072     0293                     	;# 
  4073     0294                     	;# 
  4074     0295                     	;# 
  4075     0296                     	;# 
  4076     0297                     	;# 
  4077     0298                     	;# 
  4078     0298                     	;# 
  4079     0299                     	;# 
  4080     0299                     	;# 
  4081     029A                     	;# 
  4082     029B                     	;# 
  4083     029C                     	;# 
  4084     029D                     	;# 
  4085     029F                     	;# 
  4086     030C                     	;# 
  4087     030C                     	;# 
  4088     030D                     	;# 
  4089     030E                     	;# 
  4090     030F                     	;# 
  4091     0310                     	;# 
  4092     0310                     	;# 
  4093     0311                     	;# 
  4094     0312                     	;# 
  4095     0313                     	;# 
  4096     0314                     	;# 
  4097     0314                     	;# 
  4098     0315                     	;# 
  4099     0316                     	;# 
  4100     0317                     	;# 
  4101     0318                     	;# 
  4102     0318                     	;# 
  4103     0319                     	;# 
  4104     031A                     	;# 
  4105     031B                     	;# 
  4106     031C                     	;# 
  4107     031C                     	;# 
  4108     031D                     	;# 
  4109     031E                     	;# 
  4110     031F                     	;# 
  4111     038C                     	;# 
  4112     038C                     	;# 
  4113     038D                     	;# 
  4114     038E                     	;# 
  4115     0390                     	;# 
  4116     0390                     	;# 
  4117     0391                     	;# 
  4118     0392                     	;# 
  4119     048C                     	;# 
  4120     048C                     	;# 
  4121     048D                     	;# 
  4122     048E                     	;# 
  4123     048F                     	;# 
  4124     048F                     	;# 
  4125     0490                     	;# 
  4126     0491                     	;# 
  4127     0492                     	;# 
  4128     0492                     	;# 
  4129     0493                     	;# 
  4130     0494                     	;# 
  4131     0495                     	;# 
  4132     0495                     	;# 
  4133     0496                     	;# 
  4134     0497                     	;# 
  4135     0498                     	;# 
  4136     0499                     	;# 
  4137     049A                     	;# 
  4138     049B                     	;# 
  4139     049C                     	;# 
  4140     049D                     	;# 
  4141     050C                     	;# 
  4142     050C                     	;# 
  4143     050D                     	;# 
  4144     050E                     	;# 
  4145     050F                     	;# 
  4146     050F                     	;# 
  4147     0510                     	;# 
  4148     0511                     	;# 
  4149     0512                     	;# 
  4150     0512                     	;# 
  4151     0513                     	;# 
  4152     0514                     	;# 
  4153     0515                     	;# 
  4154     0515                     	;# 
  4155     0516                     	;# 
  4156     0517                     	;# 
  4157     0518                     	;# 
  4158     0519                     	;# 
  4159     051A                     	;# 
  4160     051B                     	;# 
  4161     051C                     	;# 
  4162     051D                     	;# 
  4163     058C                     	;# 
  4164     058C                     	;# 
  4165     058D                     	;# 
  4166     058E                     	;# 
  4167     058F                     	;# 
  4168     058F                     	;# 
  4169     0590                     	;# 
  4170     0591                     	;# 
  4171     0592                     	;# 
  4172     0593                     	;# 
  4173     059C                     	;# 
  4174     059C                     	;# 
  4175     059D                     	;# 
  4176     059D                     	;# 
  4177     059E                     	;# 
  4178     059F                     	;# 
  4179     060C                     	;# 
  4180     060C                     	;# 
  4181     060D                     	;# 
  4182     060D                     	;# 
  4183     060E                     	;# 
  4184     060F                     	;# 
  4185     0610                     	;# 
  4186     0611                     	;# 
  4187     0612                     	;# 
  4188     0613                     	;# 
  4189     0614                     	;# 
  4190     0616                     	;# 
  4191     0616                     	;# 
  4192     0617                     	;# 
  4193     0617                     	;# 
  4194     0618                     	;# 
  4195     0619                     	;# 
  4196     061A                     	;# 
  4197     061B                     	;# 
  4198     061C                     	;# 
  4199     061D                     	;# 
  4200     061E                     	;# 
  4201     068C                     	;# 
  4202     068D                     	;# 
  4203     068E                     	;# 
  4204     068F                     	;# 
  4205     0690                     	;# 
  4206     0691                     	;# 
  4207     0692                     	;# 
  4208     0693                     	;# 
  4209     0694                     	;# 
  4210     070C                     	;# 
  4211     070D                     	;# 
  4212     070E                     	;# 
  4213     070F                     	;# 
  4214     0710                     	;# 
  4215     0711                     	;# 
  4216     0712                     	;# 
  4217     0713                     	;# 
  4218     0714                     	;# 
  4219     0716                     	;# 
  4220     0717                     	;# 
  4221     0718                     	;# 
  4222     0719                     	;# 
  4223     071A                     	;# 
  4224     071B                     	;# 
  4225     071C                     	;# 
  4226     071D                     	;# 
  4227     071E                     	;# 
  4228     0796                     	;# 
  4229     0797                     	;# 
  4230     0798                     	;# 
  4231     0799                     	;# 
  4232     079A                     	;# 
  4233     079B                     	;# 
  4234     079C                     	;# 
  4235     079D                     	;# 
  4236     080C                     	;# 
  4237     080D                     	;# 
  4238     080E                     	;# 
  4239     080F                     	;# 
  4240     0810                     	;# 
  4241     0811                     	;# 
  4242     0813                     	;# 
  4243     0814                     	;# 
  4244     081A                     	;# 
  4245     081A                     	;# 
  4246     081B                     	;# 
  4247     081C                     	;# 
  4248     081C                     	;# 
  4249     081D                     	;# 
  4250     081E                     	;# 
  4251     081F                     	;# 
  4252     088C                     	;# 
  4253     088D                     	;# 
  4254     088E                     	;# 
  4255     088F                     	;# 
  4256     0890                     	;# 
  4257     0891                     	;# 
  4258     0892                     	;# 
  4259     0893                     	;# 
  4260     0895                     	;# 
  4261     0896                     	;# 
  4262     0897                     	;# 
  4263     0898                     	;# 
  4264     0899                     	;# 
  4265     089A                     	;# 
  4266     089B                     	;# 
  4267     090C                     	;# 
  4268     090E                     	;# 
  4269     090F                     	;# 
  4270     091F                     	;# 
  4271     098F                     	;# 
  4272     098F                     	;# 
  4273     0990                     	;# 
  4274     0991                     	;# 
  4275     0992                     	;# 
  4276     0993                     	;# 
  4277     0994                     	;# 
  4278     0995                     	;# 
  4279     0996                     	;# 
  4280     0997                     	;# 
  4281     0A19                     	;# 
  4282     0A19                     	;# 
  4283     0A1A                     	;# 
  4284     0A1A                     	;# 
  4285     0A1B                     	;# 
  4286     0A1B                     	;# 
  4287     0A1B                     	;# 
  4288     0A1C                     	;# 
  4289     0A1C                     	;# 
  4290     0A1D                     	;# 
  4291     0A1D                     	;# 
  4292     0A1E                     	;# 
  4293     0A1E                     	;# 
  4294     0A1F                     	;# 
  4295     0A1F                     	;# 
  4296     0A1F                     	;# 
  4297     1E0F                     	;# 
  4298     1E10                     	;# 
  4299     1E11                     	;# 
  4300     1E12                     	;# 
  4301     1E13                     	;# 
  4302     1E14                     	;# 
  4303     1E15                     	;# 
  4304     1E16                     	;# 
  4305     1E17                     	;# 
  4306     1E18                     	;# 
  4307     1E19                     	;# 
  4308     1E1A                     	;# 
  4309     1E1B                     	;# 
  4310     1E1C                     	;# 
  4311     1E1D                     	;# 
  4312     1E1E                     	;# 
  4313     1E1F                     	;# 
  4314     1E20                     	;# 
  4315     1E21                     	;# 
  4316     1E22                     	;# 
  4317     1E23                     	;# 
  4318     1E24                     	;# 
  4319     1E25                     	;# 
  4320     1E26                     	;# 
  4321     1E27                     	;# 
  4322     1E28                     	;# 
  4323     1E29                     	;# 
  4324     1E2A                     	;# 
  4325     1E2B                     	;# 
  4326     1E2C                     	;# 
  4327     1E2D                     	;# 
  4328     1E2E                     	;# 
  4329     1E2F                     	;# 
  4330     1E30                     	;# 
  4331     1E31                     	;# 
  4332     1E32                     	;# 
  4333     1E33                     	;# 
  4334     1E34                     	;# 
  4335     1E35                     	;# 
  4336     1E36                     	;# 
  4337     1E37                     	;# 
  4338     1E8F                     	;# 
  4339     1E90                     	;# 
  4340     1E91                     	;# 
  4341     1E92                     	;# 
  4342     1E93                     	;# 
  4343     1E94                     	;# 
  4344     1E95                     	;# 
  4345     1E96                     	;# 
  4346     1E97                     	;# 
  4347     1E9C                     	;# 
  4348     1E9D                     	;# 
  4349     1E9E                     	;# 
  4350     1EA1                     	;# 
  4351     1EA2                     	;# 
  4352     1EA3                     	;# 
  4353     1EA4                     	;# 
  4354     1EA5                     	;# 
  4355     1EA9                     	;# 
  4356     1EAA                     	;# 
  4357     1EAB                     	;# 
  4358     1EAC                     	;# 
  4359     1EB1                     	;# 
  4360     1EB2                     	;# 
  4361     1EB3                     	;# 
  4362     1EB8                     	;# 
  4363     1EB9                     	;# 
  4364     1EBA                     	;# 
  4365     1EBB                     	;# 
  4366     1EBC                     	;# 
  4367     1EBD                     	;# 
  4368     1EBE                     	;# 
  4369     1EC3                     	;# 
  4370     1EC5                     	;# 
  4371     1EC6                     	;# 
  4372     1EC7                     	;# 
  4373     1EC8                     	;# 
  4374     1EC9                     	;# 
  4375     1ECA                     	;# 
  4376     1ECB                     	;# 
  4377     1ECC                     	;# 
  4378     1ECD                     	;# 
  4379     1ECE                     	;# 
  4380     1F10                     	;# 
  4381     1F11                     	;# 
  4382     1F12                     	;# 
  4383     1F13                     	;# 
  4384     1F14                     	;# 
  4385     1F15                     	;# 
  4386     1F16                     	;# 
  4387     1F17                     	;# 
  4388     1F18                     	;# 
  4389     1F19                     	;# 
  4390     1F1A                     	;# 
  4391     1F1B                     	;# 
  4392     1F1C                     	;# 
  4393     1F1D                     	;# 
  4394     1F1E                     	;# 
  4395     1F1F                     	;# 
  4396     1F20                     	;# 
  4397     1F21                     	;# 
  4398     1F22                     	;# 
  4399     1F23                     	;# 
  4400     1F24                     	;# 
  4401     1F25                     	;# 
  4402     1F26                     	;# 
  4403     1F27                     	;# 
  4404     1F38                     	;# 
  4405     1F39                     	;# 
  4406     1F3A                     	;# 
  4407     1F3B                     	;# 
  4408     1F3C                     	;# 
  4409     1F3D                     	;# 
  4410     1F3E                     	;# 
  4411     1F3F                     	;# 
  4412     1F43                     	;# 
  4413     1F44                     	;# 
  4414     1F45                     	;# 
  4415     1F46                     	;# 
  4416     1F47                     	;# 
  4417     1F48                     	;# 
  4418     1F49                     	;# 
  4419     1F4A                     	;# 
  4420     1F4E                     	;# 
  4421     1F4F                     	;# 
  4422     1F50                     	;# 
  4423     1F51                     	;# 
  4424     1F52                     	;# 
  4425     1F53                     	;# 
  4426     1F54                     	;# 
  4427     1F55                     	;# 
  4428     1F65                     	;# 
  4429     1F66                     	;# 
  4430     1F67                     	;# 
  4431     1F68                     	;# 
  4432     1F69                     	;# 
  4433     1F6A                     	;# 
  4434     1F6B                     	;# 
  4435     1FE4                     	;# 
  4436     1FE5                     	;# 
  4437     1FE6                     	;# 
  4438     1FE7                     	;# 
  4439     1FE8                     	;# 
  4440     1FE8                     	;# 
  4441     1FE9                     	;# 
  4442     1FEA                     	;# 
  4443     1FEB                     	;# 
  4444     1FED                     	;# 
  4445     1FEE                     	;# 
  4446     1FEF                     	;# 
  4447     0000                     	;# 
  4448     0001                     	;# 
  4449     0002                     	;# 
  4450     0003                     	;# 
  4451     0004                     	;# 
  4452     0005                     	;# 
  4453     0006                     	;# 
  4454     0007                     	;# 
  4455     0008                     	;# 
  4456     0009                     	;# 
  4457     000A                     	;# 
  4458     000B                     	;# 
  4459     000C                     	;# 
  4460     000D                     	;# 
  4461     000E                     	;# 
  4462     0010                     	;# 
  4463     0012                     	;# 
  4464     0013                     	;# 
  4465     0014                     	;# 
  4466     0016                     	;# 
  4467     0018                     	;# 
  4468     0019                     	;# 
  4469     001A                     	;# 
  4470     001C                     	;# 
  4471     008C                     	;# 
  4472     008C                     	;# 
  4473     008D                     	;# 
  4474     008E                     	;# 
  4475     008E                     	;# 
  4476     008F                     	;# 
  4477     0090                     	;# 
  4478     0090                     	;# 
  4479     0091                     	;# 
  4480     0092                     	;# 
  4481     0092                     	;# 
  4482     0093                     	;# 
  4483     0094                     	;# 
  4484     0094                     	;# 
  4485     0095                     	;# 
  4486     0096                     	;# 
  4487     0096                     	;# 
  4488     0097                     	;# 
  4489     0098                     	;# 
  4490     0099                     	;# 
  4491     009A                     	;# 
  4492     009B                     	;# 
  4493     009B                     	;# 
  4494     009C                     	;# 
  4495     009D                     	;# 
  4496     009D                     	;# 
  4497     009E                     	;# 
  4498     009F                     	;# 
  4499     010C                     	;# 
  4500     010C                     	;# 
  4501     010D                     	;# 
  4502     010E                     	;# 
  4503     010F                     	;# 
  4504     010F                     	;# 
  4505     0110                     	;# 
  4506     0111                     	;# 
  4507     0112                     	;# 
  4508     0113                     	;# 
  4509     0114                     	;# 
  4510     0115                     	;# 
  4511     0116                     	;# 
  4512     0117                     	;# 
  4513     0118                     	;# 
  4514     0119                     	;# 
  4515     0119                     	;# 
  4516     0119                     	;# 
  4517     011A                     	;# 
  4518     011A                     	;# 
  4519     011A                     	;# 
  4520     011B                     	;# 
  4521     011B                     	;# 
  4522     011B                     	;# 
  4523     011B                     	;# 
  4524     011B                     	;# 
  4525     011C                     	;# 
  4526     011C                     	;# 
  4527     011C                     	;# 
  4528     011D                     	;# 
  4529     011D                     	;# 
  4530     011D                     	;# 
  4531     011E                     	;# 
  4532     011E                     	;# 
  4533     011E                     	;# 
  4534     011F                     	;# 
  4535     011F                     	;# 
  4536     011F                     	;# 
  4537     011F                     	;# 
  4538     011F                     	;# 
  4539     018C                     	;# 
  4540     018D                     	;# 
  4541     018E                     	;# 
  4542     018F                     	;# 
  4543     0190                     	;# 
  4544     0191                     	;# 
  4545     0192                     	;# 
  4546     0196                     	;# 
  4547     0197                     	;# 
  4548     0198                     	;# 
  4549     0199                     	;# 
  4550     019A                     	;# 
  4551     019B                     	;# 
  4552     019C                     	;# 
  4553     020C                     	;# 
  4554     020D                     	;# 
  4555     020E                     	;# 
  4556     020E                     	;# 
  4557     020F                     	;# 
  4558     020F                     	;# 
  4559     0210                     	;# 
  4560     0210                     	;# 
  4561     0211                     	;# 
  4562     0211                     	;# 
  4563     0212                     	;# 
  4564     0213                     	;# 
  4565     0214                     	;# 
  4566     0214                     	;# 
  4567     0215                     	;# 
  4568     0215                     	;# 
  4569     0216                     	;# 
  4570     0216                     	;# 
  4571     0217                     	;# 
  4572     0217                     	;# 
  4573     0218                     	;# 
  4574     0219                     	;# 
  4575     021A                     	;# 
  4576     021A                     	;# 
  4577     021B                     	;# 
  4578     021B                     	;# 
  4579     021C                     	;# 
  4580     021C                     	;# 
  4581     021D                     	;# 
  4582     021D                     	;# 
  4583     021E                     	;# 
  4584     021F                     	;# 
  4585     028C                     	;# 
  4586     028C                     	;# 
  4587     028D                     	;# 
  4588     028D                     	;# 
  4589     028E                     	;# 
  4590     028F                     	;# 
  4591     0290                     	;# 
  4592     0291                     	;# 
  4593     0292                     	;# 
  4594     0292                     	;# 
  4595     0293                     	;# 
  4596     0293                     	;# 
  4597     0294                     	;# 
  4598     0295                     	;# 
  4599     0296                     	;# 
  4600     0297                     	;# 
  4601     0298                     	;# 
  4602     0298                     	;# 
  4603     0299                     	;# 
  4604     0299                     	;# 
  4605     029A                     	;# 
  4606     029B                     	;# 
  4607     029C                     	;# 
  4608     029D                     	;# 
  4609     029F                     	;# 
  4610     030C                     	;# 
  4611     030C                     	;# 
  4612     030D                     	;# 
  4613     030E                     	;# 
  4614     030F                     	;# 
  4615     0310                     	;# 
  4616     0310                     	;# 
  4617     0311                     	;# 
  4618     0312                     	;# 
  4619     0313                     	;# 
  4620     0314                     	;# 
  4621     0314                     	;# 
  4622     0315                     	;# 
  4623     0316                     	;# 
  4624     0317                     	;# 
  4625     0318                     	;# 
  4626     0318                     	;# 
  4627     0319                     	;# 
  4628     031A                     	;# 
  4629     031B                     	;# 
  4630     031C                     	;# 
  4631     031C                     	;# 
  4632     031D                     	;# 
  4633     031E                     	;# 
  4634     031F                     	;# 
  4635     038C                     	;# 
  4636     038C                     	;# 
  4637     038D                     	;# 
  4638     038E                     	;# 
  4639     0390                     	;# 
  4640     0390                     	;# 
  4641     0391                     	;# 
  4642     0392                     	;# 
  4643     048C                     	;# 
  4644     048C                     	;# 
  4645     048D                     	;# 
  4646     048E                     	;# 
  4647     048F                     	;# 
  4648     048F                     	;# 
  4649     0490                     	;# 
  4650     0491                     	;# 
  4651     0492                     	;# 
  4652     0492                     	;# 
  4653     0493                     	;# 
  4654     0494                     	;# 
  4655     0495                     	;# 
  4656     0495                     	;# 
  4657     0496                     	;# 
  4658     0497                     	;# 
  4659     0498                     	;# 
  4660     0499                     	;# 
  4661     049A                     	;# 
  4662     049B                     	;# 
  4663     049C                     	;# 
  4664     049D                     	;# 
  4665     050C                     	;# 
  4666     050C                     	;# 
  4667     050D                     	;# 
  4668     050E                     	;# 
  4669     050F                     	;# 
  4670     050F                     	;# 
  4671     0510                     	;# 
  4672     0511                     	;# 
  4673     0512                     	;# 
  4674     0512                     	;# 
  4675     0513                     	;# 
  4676     0514                     	;# 
  4677     0515                     	;# 
  4678     0515                     	;# 
  4679     0516                     	;# 
  4680     0517                     	;# 
  4681     0518                     	;# 
  4682     0519                     	;# 
  4683     051A                     	;# 
  4684     051B                     	;# 
  4685     051C                     	;# 
  4686     051D                     	;# 
  4687     058C                     	;# 
  4688     058C                     	;# 
  4689     058D                     	;# 
  4690     058E                     	;# 
  4691     058F                     	;# 
  4692     058F                     	;# 
  4693     0590                     	;# 
  4694     0591                     	;# 
  4695     0592                     	;# 
  4696     0593                     	;# 
  4697     059C                     	;# 
  4698     059C                     	;# 
  4699     059D                     	;# 
  4700     059D                     	;# 
  4701     059E                     	;# 
  4702     059F                     	;# 
  4703     060C                     	;# 
  4704     060C                     	;# 
  4705     060D                     	;# 
  4706     060D                     	;# 
  4707     060E                     	;# 
  4708     060F                     	;# 
  4709     0610                     	;# 
  4710     0611                     	;# 
  4711     0612                     	;# 
  4712     0613                     	;# 
  4713     0614                     	;# 
  4714     0616                     	;# 
  4715     0616                     	;# 
  4716     0617                     	;# 
  4717     0617                     	;# 
  4718     0618                     	;# 
  4719     0619                     	;# 
  4720     061A                     	;# 
  4721     061B                     	;# 
  4722     061C                     	;# 
  4723     061D                     	;# 
  4724     061E                     	;# 
  4725     068C                     	;# 
  4726     068D                     	;# 
  4727     068E                     	;# 
  4728     068F                     	;# 
  4729     0690                     	;# 
  4730     0691                     	;# 
  4731     0692                     	;# 
  4732     0693                     	;# 
  4733     0694                     	;# 
  4734     070C                     	;# 
  4735     070D                     	;# 
  4736     070E                     	;# 
  4737     070F                     	;# 
  4738     0710                     	;# 
  4739     0711                     	;# 
  4740     0712                     	;# 
  4741     0713                     	;# 
  4742     0714                     	;# 
  4743     0716                     	;# 
  4744     0717                     	;# 
  4745     0718                     	;# 
  4746     0719                     	;# 
  4747     071A                     	;# 
  4748     071B                     	;# 
  4749     071C                     	;# 
  4750     071D                     	;# 
  4751     071E                     	;# 
  4752     0796                     	;# 
  4753     0797                     	;# 
  4754     0798                     	;# 
  4755     0799                     	;# 
  4756     079A                     	;# 
  4757     079B                     	;# 
  4758     079C                     	;# 
  4759     079D                     	;# 
  4760     080C                     	;# 
  4761     080D                     	;# 
  4762     080E                     	;# 
  4763     080F                     	;# 
  4764     0810                     	;# 
  4765     0811                     	;# 
  4766     0813                     	;# 
  4767     0814                     	;# 
  4768     081A                     	;# 
  4769     081A                     	;# 
  4770     081B                     	;# 
  4771     081C                     	;# 
  4772     081C                     	;# 
  4773     081D                     	;# 
  4774     081E                     	;# 
  4775     081F                     	;# 
  4776     088C                     	;# 
  4777     088D                     	;# 
  4778     088E                     	;# 
  4779     088F                     	;# 
  4780     0890                     	;# 
  4781     0891                     	;# 
  4782     0892                     	;# 
  4783     0893                     	;# 
  4784     0895                     	;# 
  4785     0896                     	;# 
  4786     0897                     	;# 
  4787     0898                     	;# 
  4788     0899                     	;# 
  4789     089A                     	;# 
  4790     089B                     	;# 
  4791     090C                     	;# 
  4792     090E                     	;# 
  4793     090F                     	;# 
  4794     091F                     	;# 
  4795     098F                     	;# 
  4796     098F                     	;# 
  4797     0990                     	;# 
  4798     0991                     	;# 
  4799     0992                     	;# 
  4800     0993                     	;# 
  4801     0994                     	;# 
  4802     0995                     	;# 
  4803     0996                     	;# 
  4804     0997                     	;# 
  4805     0A19                     	;# 
  4806     0A19                     	;# 
  4807     0A1A                     	;# 
  4808     0A1A                     	;# 
  4809     0A1B                     	;# 
  4810     0A1B                     	;# 
  4811     0A1B                     	;# 
  4812     0A1C                     	;# 
  4813     0A1C                     	;# 
  4814     0A1D                     	;# 
  4815     0A1D                     	;# 
  4816     0A1E                     	;# 
  4817     0A1E                     	;# 
  4818     0A1F                     	;# 
  4819     0A1F                     	;# 
  4820     0A1F                     	;# 
  4821     1E0F                     	;# 
  4822     1E10                     	;# 
  4823     1E11                     	;# 
  4824     1E12                     	;# 
  4825     1E13                     	;# 
  4826     1E14                     	;# 
  4827     1E15                     	;# 
  4828     1E16                     	;# 
  4829     1E17                     	;# 
  4830     1E18                     	;# 
  4831     1E19                     	;# 
  4832     1E1A                     	;# 
  4833     1E1B                     	;# 
  4834     1E1C                     	;# 
  4835     1E1D                     	;# 
  4836     1E1E                     	;# 
  4837     1E1F                     	;# 
  4838     1E20                     	;# 
  4839     1E21                     	;# 
  4840     1E22                     	;# 
  4841     1E23                     	;# 
  4842     1E24                     	;# 
  4843     1E25                     	;# 
  4844     1E26                     	;# 
  4845     1E27                     	;# 
  4846     1E28                     	;# 
  4847     1E29                     	;# 
  4848     1E2A                     	;# 
  4849     1E2B                     	;# 
  4850     1E2C                     	;# 
  4851     1E2D                     	;# 
  4852     1E2E                     	;# 
  4853     1E2F                     	;# 
  4854     1E30                     	;# 
  4855     1E31                     	;# 
  4856     1E32                     	;# 
  4857     1E33                     	;# 
  4858     1E34                     	;# 
  4859     1E35                     	;# 
  4860     1E36                     	;# 
  4861     1E37                     	;# 
  4862     1E8F                     	;# 
  4863     1E90                     	;# 
  4864     1E91                     	;# 
  4865     1E92                     	;# 
  4866     1E93                     	;# 
  4867     1E94                     	;# 
  4868     1E95                     	;# 
  4869     1E96                     	;# 
  4870     1E97                     	;# 
  4871     1E9C                     	;# 
  4872     1E9D                     	;# 
  4873     1E9E                     	;# 
  4874     1EA1                     	;# 
  4875     1EA2                     	;# 
  4876     1EA3                     	;# 
  4877     1EA4                     	;# 
  4878     1EA5                     	;# 
  4879     1EA9                     	;# 
  4880     1EAA                     	;# 
  4881     1EAB                     	;# 
  4882     1EAC                     	;# 
  4883     1EB1                     	;# 
  4884     1EB2                     	;# 
  4885     1EB3                     	;# 
  4886     1EB8                     	;# 
  4887     1EB9                     	;# 
  4888     1EBA                     	;# 
  4889     1EBB                     	;# 
  4890     1EBC                     	;# 
  4891     1EBD                     	;# 
  4892     1EBE                     	;# 
  4893     1EC3                     	;# 
  4894     1EC5                     	;# 
  4895     1EC6                     	;# 
  4896     1EC7                     	;# 
  4897     1EC8                     	;# 
  4898     1EC9                     	;# 
  4899     1ECA                     	;# 
  4900     1ECB                     	;# 
  4901     1ECC                     	;# 
  4902     1ECD                     	;# 
  4903     1ECE                     	;# 
  4904     1F10                     	;# 
  4905     1F11                     	;# 
  4906     1F12                     	;# 
  4907     1F13                     	;# 
  4908     1F14                     	;# 
  4909     1F15                     	;# 
  4910     1F16                     	;# 
  4911     1F17                     	;# 
  4912     1F18                     	;# 
  4913     1F19                     	;# 
  4914     1F1A                     	;# 
  4915     1F1B                     	;# 
  4916     1F1C                     	;# 
  4917     1F1D                     	;# 
  4918     1F1E                     	;# 
  4919     1F1F                     	;# 
  4920     1F20                     	;# 
  4921     1F21                     	;# 
  4922     1F22                     	;# 
  4923     1F23                     	;# 
  4924     1F24                     	;# 
  4925     1F25                     	;# 
  4926     1F26                     	;# 
  4927     1F27                     	;# 
  4928     1F38                     	;# 
  4929     1F39                     	;# 
  4930     1F3A                     	;# 
  4931     1F3B                     	;# 
  4932     1F3C                     	;# 
  4933     1F3D                     	;# 
  4934     1F3E                     	;# 
  4935     1F3F                     	;# 
  4936     1F43                     	;# 
  4937     1F44                     	;# 
  4938     1F45                     	;# 
  4939     1F46                     	;# 
  4940     1F47                     	;# 
  4941     1F48                     	;# 
  4942     1F49                     	;# 
  4943     1F4A                     	;# 
  4944     1F4E                     	;# 
  4945     1F4F                     	;# 
  4946     1F50                     	;# 
  4947     1F51                     	;# 
  4948     1F52                     	;# 
  4949     1F53                     	;# 
  4950     1F54                     	;# 
  4951     1F55                     	;# 
  4952     1F65                     	;# 
  4953     1F66                     	;# 
  4954     1F67                     	;# 
  4955     1F68                     	;# 
  4956     1F69                     	;# 
  4957     1F6A                     	;# 
  4958     1F6B                     	;# 
  4959     1FE4                     	;# 
  4960     1FE5                     	;# 
  4961     1FE6                     	;# 
  4962     1FE7                     	;# 
  4963     1FE8                     	;# 
  4964     1FE8                     	;# 
  4965     1FE9                     	;# 
  4966     1FEA                     	;# 
  4967     1FEB                     	;# 
  4968     1FED                     	;# 
  4969     1FEE                     	;# 
  4970     1FEF                     	;# 
  4971     0000                     	;# 
  4972     0001                     	;# 
  4973     0002                     	;# 
  4974     0003                     	;# 
  4975     0004                     	;# 
  4976     0005                     	;# 
  4977     0006                     	;# 
  4978     0007                     	;# 
  4979     0008                     	;# 
  4980     0009                     	;# 
  4981     000A                     	;# 
  4982     000B                     	;# 
  4983     000C                     	;# 
  4984     000D                     	;# 
  4985     000E                     	;# 
  4986     0010                     	;# 
  4987     0012                     	;# 
  4988     0013                     	;# 
  4989     0014                     	;# 
  4990     0016                     	;# 
  4991     0018                     	;# 
  4992     0019                     	;# 
  4993     001A                     	;# 
  4994     001C                     	;# 
  4995     008C                     	;# 
  4996     008C                     	;# 
  4997     008D                     	;# 
  4998     008E                     	;# 
  4999     008E                     	;# 
  5000     008F                     	;# 
  5001     0090                     	;# 
  5002     0090                     	;# 
  5003     0091                     	;# 
  5004     0092                     	;# 
  5005     0092                     	;# 
  5006     0093                     	;# 
  5007     0094                     	;# 
  5008     0094                     	;# 
  5009     0095                     	;# 
  5010     0096                     	;# 
  5011     0096                     	;# 
  5012     0097                     	;# 
  5013     0098                     	;# 
  5014     0099                     	;# 
  5015     009A                     	;# 
  5016     009B                     	;# 
  5017     009B                     	;# 
  5018     009C                     	;# 
  5019     009D                     	;# 
  5020     009D                     	;# 
  5021     009E                     	;# 
  5022     009F                     	;# 
  5023     010C                     	;# 
  5024     010C                     	;# 
  5025     010D                     	;# 
  5026     010E                     	;# 
  5027     010F                     	;# 
  5028     010F                     	;# 
  5029     0110                     	;# 
  5030     0111                     	;# 
  5031     0112                     	;# 
  5032     0113                     	;# 
  5033     0114                     	;# 
  5034     0115                     	;# 
  5035     0116                     	;# 
  5036     0117                     	;# 
  5037     0118                     	;# 
  5038     0119                     	;# 
  5039     0119                     	;# 
  5040     0119                     	;# 
  5041     011A                     	;# 
  5042     011A                     	;# 
  5043     011A                     	;# 
  5044     011B                     	;# 
  5045     011B                     	;# 
  5046     011B                     	;# 
  5047     011B                     	;# 
  5048     011B                     	;# 
  5049     011C                     	;# 
  5050     011C                     	;# 
  5051     011C                     	;# 
  5052     011D                     	;# 
  5053     011D                     	;# 
  5054     011D                     	;# 
  5055     011E                     	;# 
  5056     011E                     	;# 
  5057     011E                     	;# 
  5058     011F                     	;# 
  5059     011F                     	;# 
  5060     011F                     	;# 
  5061     011F                     	;# 
  5062     011F                     	;# 
  5063     018C                     	;# 
  5064     018D                     	;# 
  5065     018E                     	;# 
  5066     018F                     	;# 
  5067     0190                     	;# 
  5068     0191                     	;# 
  5069     0192                     	;# 
  5070     0196                     	;# 
  5071     0197                     	;# 
  5072     0198                     	;# 
  5073     0199                     	;# 
  5074     019A                     	;# 
  5075     019B                     	;# 
  5076     019C                     	;# 
  5077     020C                     	;# 
  5078     020D                     	;# 
  5079     020E                     	;# 
  5080     020E                     	;# 
  5081     020F                     	;# 
  5082     020F                     	;# 
  5083     0210                     	;# 
  5084     0210                     	;# 
  5085     0211                     	;# 
  5086     0211                     	;# 
  5087     0212                     	;# 
  5088     0213                     	;# 
  5089     0214                     	;# 
  5090     0214                     	;# 
  5091     0215                     	;# 
  5092     0215                     	;# 
  5093     0216                     	;# 
  5094     0216                     	;# 
  5095     0217                     	;# 
  5096     0217                     	;# 
  5097     0218                     	;# 
  5098     0219                     	;# 
  5099     021A                     	;# 
  5100     021A                     	;# 
  5101     021B                     	;# 
  5102     021B                     	;# 
  5103     021C                     	;# 
  5104     021C                     	;# 
  5105     021D                     	;# 
  5106     021D                     	;# 
  5107     021E                     	;# 
  5108     021F                     	;# 
  5109     028C                     	;# 
  5110     028C                     	;# 
  5111     028D                     	;# 
  5112     028D                     	;# 
  5113     028E                     	;# 
  5114     028F                     	;# 
  5115     0290                     	;# 
  5116     0291                     	;# 
  5117     0292                     	;# 
  5118     0292                     	;# 
  5119     0293                     	;# 
  5120     0293                     	;# 
  5121     0294                     	;# 
  5122     0295                     	;# 
  5123     0296                     	;# 
  5124     0297                     	;# 
  5125     0298                     	;# 
  5126     0298                     	;# 
  5127     0299                     	;# 
  5128     0299                     	;# 
  5129     029A                     	;# 
  5130     029B                     	;# 
  5131     029C                     	;# 
  5132     029D                     	;# 
  5133     029F                     	;# 
  5134     030C                     	;# 
  5135     030C                     	;# 
  5136     030D                     	;# 
  5137     030E                     	;# 
  5138     030F                     	;# 
  5139     0310                     	;# 
  5140     0310                     	;# 
  5141     0311                     	;# 
  5142     0312                     	;# 
  5143     0313                     	;# 
  5144     0314                     	;# 
  5145     0314                     	;# 
  5146     0315                     	;# 
  5147     0316                     	;# 
  5148     0317                     	;# 
  5149     0318                     	;# 
  5150     0318                     	;# 
  5151     0319                     	;# 
  5152     031A                     	;# 
  5153     031B                     	;# 
  5154     031C                     	;# 
  5155     031C                     	;# 
  5156     031D                     	;# 
  5157     031E                     	;# 
  5158     031F                     	;# 
  5159     038C                     	;# 
  5160     038C                     	;# 
  5161     038D                     	;# 
  5162     038E                     	;# 
  5163     0390                     	;# 
  5164     0390                     	;# 
  5165     0391                     	;# 
  5166     0392                     	;# 
  5167     048C                     	;# 
  5168     048C                     	;# 
  5169     048D                     	;# 
  5170     048E                     	;# 
  5171     048F                     	;# 
  5172     048F                     	;# 
  5173     0490                     	;# 
  5174     0491                     	;# 
  5175     0492                     	;# 
  5176     0492                     	;# 
  5177     0493                     	;# 
  5178     0494                     	;# 
  5179     0495                     	;# 
  5180     0495                     	;# 
  5181     0496                     	;# 
  5182     0497                     	;# 
  5183     0498                     	;# 
  5184     0499                     	;# 
  5185     049A                     	;# 
  5186     049B                     	;# 
  5187     049C                     	;# 
  5188     049D                     	;# 
  5189     050C                     	;# 
  5190     050C                     	;# 
  5191     050D                     	;# 
  5192     050E                     	;# 
  5193     050F                     	;# 
  5194     050F                     	;# 
  5195     0510                     	;# 
  5196     0511                     	;# 
  5197     0512                     	;# 
  5198     0512                     	;# 
  5199     0513                     	;# 
  5200     0514                     	;# 
  5201     0515                     	;# 
  5202     0515                     	;# 
  5203     0516                     	;# 
  5204     0517                     	;# 
  5205     0518                     	;# 
  5206     0519                     	;# 
  5207     051A                     	;# 
  5208     051B                     	;# 
  5209     051C                     	;# 
  5210     051D                     	;# 
  5211     058C                     	;# 
  5212     058C                     	;# 
  5213     058D                     	;# 
  5214     058E                     	;# 
  5215     058F                     	;# 
  5216     058F                     	;# 
  5217     0590                     	;# 
  5218     0591                     	;# 
  5219     0592                     	;# 
  5220     0593                     	;# 
  5221     059C                     	;# 
  5222     059C                     	;# 
  5223     059D                     	;# 
  5224     059D                     	;# 
  5225     059E                     	;# 
  5226     059F                     	;# 
  5227     060C                     	;# 
  5228     060C                     	;# 
  5229     060D                     	;# 
  5230     060D                     	;# 
  5231     060E                     	;# 
  5232     060F                     	;# 
  5233     0610                     	;# 
  5234     0611                     	;# 
  5235     0612                     	;# 
  5236     0613                     	;# 
  5237     0614                     	;# 
  5238     0616                     	;# 
  5239     0616                     	;# 
  5240     0617                     	;# 
  5241     0617                     	;# 
  5242     0618                     	;# 
  5243     0619                     	;# 
  5244     061A                     	;# 
  5245     061B                     	;# 
  5246     061C                     	;# 
  5247     061D                     	;# 
  5248     061E                     	;# 
  5249     068C                     	;# 
  5250     068D                     	;# 
  5251     068E                     	;# 
  5252     068F                     	;# 
  5253     0690                     	;# 
  5254     0691                     	;# 
  5255     0692                     	;# 
  5256     0693                     	;# 
  5257     0694                     	;# 
  5258     070C                     	;# 
  5259     070D                     	;# 
  5260     070E                     	;# 
  5261     070F                     	;# 
  5262     0710                     	;# 
  5263     0711                     	;# 
  5264     0712                     	;# 
  5265     0713                     	;# 
  5266     0714                     	;# 
  5267     0716                     	;# 
  5268     0717                     	;# 
  5269     0718                     	;# 
  5270     0719                     	;# 
  5271     071A                     	;# 
  5272     071B                     	;# 
  5273     071C                     	;# 
  5274     071D                     	;# 
  5275     071E                     	;# 
  5276     0796                     	;# 
  5277     0797                     	;# 
  5278     0798                     	;# 
  5279     0799                     	;# 
  5280     079A                     	;# 
  5281     079B                     	;# 
  5282     079C                     	;# 
  5283     079D                     	;# 
  5284     080C                     	;# 
  5285     080D                     	;# 
  5286     080E                     	;# 
  5287     080F                     	;# 
  5288     0810                     	;# 
  5289     0811                     	;# 
  5290     0813                     	;# 
  5291     0814                     	;# 
  5292     081A                     	;# 
  5293     081A                     	;# 
  5294     081B                     	;# 
  5295     081C                     	;# 
  5296     081C                     	;# 
  5297     081D                     	;# 
  5298     081E                     	;# 
  5299     081F                     	;# 
  5300     088C                     	;# 
  5301     088D                     	;# 
  5302     088E                     	;# 
  5303     088F                     	;# 
  5304     0890                     	;# 
  5305     0891                     	;# 
  5306     0892                     	;# 
  5307     0893                     	;# 
  5308     0895                     	;# 
  5309     0896                     	;# 
  5310     0897                     	;# 
  5311     0898                     	;# 
  5312     0899                     	;# 
  5313     089A                     	;# 
  5314     089B                     	;# 
  5315     090C                     	;# 
  5316     090E                     	;# 
  5317     090F                     	;# 
  5318     091F                     	;# 
  5319     098F                     	;# 
  5320     098F                     	;# 
  5321     0990                     	;# 
  5322     0991                     	;# 
  5323     0992                     	;# 
  5324     0993                     	;# 
  5325     0994                     	;# 
  5326     0995                     	;# 
  5327     0996                     	;# 
  5328     0997                     	;# 
  5329     0A19                     	;# 
  5330     0A19                     	;# 
  5331     0A1A                     	;# 
  5332     0A1A                     	;# 
  5333     0A1B                     	;# 
  5334     0A1B                     	;# 
  5335     0A1B                     	;# 
  5336     0A1C                     	;# 
  5337     0A1C                     	;# 
  5338     0A1D                     	;# 
  5339     0A1D                     	;# 
  5340     0A1E                     	;# 
  5341     0A1E                     	;# 
  5342     0A1F                     	;# 
  5343     0A1F                     	;# 
  5344     0A1F                     	;# 
  5345     1E0F                     	;# 
  5346     1E10                     	;# 
  5347     1E11                     	;# 
  5348     1E12                     	;# 
  5349     1E13                     	;# 
  5350     1E14                     	;# 
  5351     1E15                     	;# 
  5352     1E16                     	;# 
  5353     1E17                     	;# 
  5354     1E18                     	;# 
  5355     1E19                     	;# 
  5356     1E1A                     	;# 
  5357     1E1B                     	;# 
  5358     1E1C                     	;# 
  5359     1E1D                     	;# 
  5360     1E1E                     	;# 
  5361     1E1F                     	;# 
  5362     1E20                     	;# 
  5363     1E21                     	;# 
  5364     1E22                     	;# 
  5365     1E23                     	;# 
  5366     1E24                     	;# 
  5367     1E25                     	;# 
  5368     1E26                     	;# 
  5369     1E27                     	;# 
  5370     1E28                     	;# 
  5371     1E29                     	;# 
  5372     1E2A                     	;# 
  5373     1E2B                     	;# 
  5374     1E2C                     	;# 
  5375     1E2D                     	;# 
  5376     1E2E                     	;# 
  5377     1E2F                     	;# 
  5378     1E30                     	;# 
  5379     1E31                     	;# 
  5380     1E32                     	;# 
  5381     1E33                     	;# 
  5382     1E34                     	;# 
  5383     1E35                     	;# 
  5384     1E36                     	;# 
  5385     1E37                     	;# 
  5386     1E8F                     	;# 
  5387     1E90                     	;# 
  5388     1E91                     	;# 
  5389     1E92                     	;# 
  5390     1E93                     	;# 
  5391     1E94                     	;# 
  5392     1E95                     	;# 
  5393     1E96                     	;# 
  5394     1E97                     	;# 
  5395     1E9C                     	;# 
  5396     1E9D                     	;# 
  5397     1E9E                     	;# 
  5398     1EA1                     	;# 
  5399     1EA2                     	;# 
  5400     1EA3                     	;# 
  5401     1EA4                     	;# 
  5402     1EA5                     	;# 
  5403     1EA9                     	;# 
  5404     1EAA                     	;# 
  5405     1EAB                     	;# 
  5406     1EAC                     	;# 
  5407     1EB1                     	;# 
  5408     1EB2                     	;# 
  5409     1EB3                     	;# 
  5410     1EB8                     	;# 
  5411     1EB9                     	;# 
  5412     1EBA                     	;# 
  5413     1EBB                     	;# 
  5414     1EBC                     	;# 
  5415     1EBD                     	;# 
  5416     1EBE                     	;# 
  5417     1EC3                     	;# 
  5418     1EC5                     	;# 
  5419     1EC6                     	;# 
  5420     1EC7                     	;# 
  5421     1EC8                     	;# 
  5422     1EC9                     	;# 
  5423     1ECA                     	;# 
  5424     1ECB                     	;# 
  5425     1ECC                     	;# 
  5426     1ECD                     	;# 
  5427     1ECE                     	;# 
  5428     1F10                     	;# 
  5429     1F11                     	;# 
  5430     1F12                     	;# 
  5431     1F13                     	;# 
  5432     1F14                     	;# 
  5433     1F15                     	;# 
  5434     1F16                     	;# 
  5435     1F17                     	;# 
  5436     1F18                     	;# 
  5437     1F19                     	;# 
  5438     1F1A                     	;# 
  5439     1F1B                     	;# 
  5440     1F1C                     	;# 
  5441     1F1D                     	;# 
  5442     1F1E                     	;# 
  5443     1F1F                     	;# 
  5444     1F20                     	;# 
  5445     1F21                     	;# 
  5446     1F22                     	;# 
  5447     1F23                     	;# 
  5448     1F24                     	;# 
  5449     1F25                     	;# 
  5450     1F26                     	;# 
  5451     1F27                     	;# 
  5452     1F38                     	;# 
  5453     1F39                     	;# 
  5454     1F3A                     	;# 
  5455     1F3B                     	;# 
  5456     1F3C                     	;# 
  5457     1F3D                     	;# 
  5458     1F3E                     	;# 
  5459     1F3F                     	;# 
  5460     1F43                     	;# 
  5461     1F44                     	;# 
  5462     1F45                     	;# 
  5463     1F46                     	;# 
  5464     1F47                     	;# 
  5465     1F48                     	;# 
  5466     1F49                     	;# 
  5467     1F4A                     	;# 
  5468     1F4E                     	;# 
  5469     1F4F                     	;# 
  5470     1F50                     	;# 
  5471     1F51                     	;# 
  5472     1F52                     	;# 
  5473     1F53                     	;# 
  5474     1F54                     	;# 
  5475     1F55                     	;# 
  5476     1F65                     	;# 
  5477     1F66                     	;# 
  5478     1F67                     	;# 
  5479     1F68                     	;# 
  5480     1F69                     	;# 
  5481     1F6A                     	;# 
  5482     1F6B                     	;# 
  5483     1FE4                     	;# 
  5484     1FE5                     	;# 
  5485     1FE6                     	;# 
  5486     1FE7                     	;# 
  5487     1FE8                     	;# 
  5488     1FE8                     	;# 
  5489     1FE9                     	;# 
  5490     1FEA                     	;# 
  5491     1FEB                     	;# 
  5492     1FED                     	;# 
  5493     1FEE                     	;# 
  5494     1FEF                     	;# 
  5495     0000                     	;# 
  5496     0001                     	;# 
  5497     0002                     	;# 
  5498     0003                     	;# 
  5499     0004                     	;# 
  5500     0005                     	;# 
  5501     0006                     	;# 
  5502     0007                     	;# 
  5503     0008                     	;# 
  5504     0009                     	;# 
  5505     000A                     	;# 
  5506     000B                     	;# 
  5507     000C                     	;# 
  5508     000D                     	;# 
  5509     000E                     	;# 
  5510     0010                     	;# 
  5511     0012                     	;# 
  5512     0013                     	;# 
  5513     0014                     	;# 
  5514     0016                     	;# 
  5515     0018                     	;# 
  5516     0019                     	;# 
  5517     001A                     	;# 
  5518     001C                     	;# 
  5519     008C                     	;# 
  5520     008C                     	;# 
  5521     008D                     	;# 
  5522     008E                     	;# 
  5523     008E                     	;# 
  5524     008F                     	;# 
  5525     0090                     	;# 
  5526     0090                     	;# 
  5527     0091                     	;# 
  5528     0092                     	;# 
  5529     0092                     	;# 
  5530     0093                     	;# 
  5531     0094                     	;# 
  5532     0094                     	;# 
  5533     0095                     	;# 
  5534     0096                     	;# 
  5535     0096                     	;# 
  5536     0097                     	;# 
  5537     0098                     	;# 
  5538     0099                     	;# 
  5539     009A                     	;# 
  5540     009B                     	;# 
  5541     009B                     	;# 
  5542     009C                     	;# 
  5543     009D                     	;# 
  5544     009D                     	;# 
  5545     009E                     	;# 
  5546     009F                     	;# 
  5547     010C                     	;# 
  5548     010C                     	;# 
  5549     010D                     	;# 
  5550     010E                     	;# 
  5551     010F                     	;# 
  5552     010F                     	;# 
  5553     0110                     	;# 
  5554     0111                     	;# 
  5555     0112                     	;# 
  5556     0113                     	;# 
  5557     0114                     	;# 
  5558     0115                     	;# 
  5559     0116                     	;# 
  5560     0117                     	;# 
  5561     0118                     	;# 
  5562     0119                     	;# 
  5563     0119                     	;# 
  5564     0119                     	;# 
  5565     011A                     	;# 
  5566     011A                     	;# 
  5567     011A                     	;# 
  5568     011B                     	;# 
  5569     011B                     	;# 
  5570     011B                     	;# 
  5571     011B                     	;# 
  5572     011B                     	;# 
  5573     011C                     	;# 
  5574     011C                     	;# 
  5575     011C                     	;# 
  5576     011D                     	;# 
  5577     011D                     	;# 
  5578     011D                     	;# 
  5579     011E                     	;# 
  5580     011E                     	;# 
  5581     011E                     	;# 
  5582     011F                     	;# 
  5583     011F                     	;# 
  5584     011F                     	;# 
  5585     011F                     	;# 
  5586     011F                     	;# 
  5587     018C                     	;# 
  5588     018D                     	;# 
  5589     018E                     	;# 
  5590     018F                     	;# 
  5591     0190                     	;# 
  5592     0191                     	;# 
  5593     0192                     	;# 
  5594     0196                     	;# 
  5595     0197                     	;# 
  5596     0198                     	;# 
  5597     0199                     	;# 
  5598     019A                     	;# 
  5599     019B                     	;# 
  5600     019C                     	;# 
  5601     020C                     	;# 
  5602     020D                     	;# 
  5603     020E                     	;# 
  5604     020E                     	;# 
  5605     020F                     	;# 
  5606     020F                     	;# 
  5607     0210                     	;# 
  5608     0210                     	;# 
  5609     0211                     	;# 
  5610     0211                     	;# 
  5611     0212                     	;# 
  5612     0213                     	;# 
  5613     0214                     	;# 
  5614     0214                     	;# 
  5615     0215                     	;# 
  5616     0215                     	;# 
  5617     0216                     	;# 
  5618     0216                     	;# 
  5619     0217                     	;# 
  5620     0217                     	;# 
  5621     0218                     	;# 
  5622     0219                     	;# 
  5623     021A                     	;# 
  5624     021A                     	;# 
  5625     021B                     	;# 
  5626     021B                     	;# 
  5627     021C                     	;# 
  5628     021C                     	;# 
  5629     021D                     	;# 
  5630     021D                     	;# 
  5631     021E                     	;# 
  5632     021F                     	;# 
  5633     028C                     	;# 
  5634     028C                     	;# 
  5635     028D                     	;# 
  5636     028D                     	;# 
  5637     028E                     	;# 
  5638     028F                     	;# 
  5639     0290                     	;# 
  5640     0291                     	;# 
  5641     0292                     	;# 
  5642     0292                     	;# 
  5643     0293                     	;# 
  5644     0293                     	;# 
  5645     0294                     	;# 
  5646     0295                     	;# 
  5647     0296                     	;# 
  5648     0297                     	;# 
  5649     0298                     	;# 
  5650     0298                     	;# 
  5651     0299                     	;# 
  5652     0299                     	;# 
  5653     029A                     	;# 
  5654     029B                     	;# 
  5655     029C                     	;# 
  5656     029D                     	;# 
  5657     029F                     	;# 
  5658     030C                     	;# 
  5659     030C                     	;# 
  5660     030D                     	;# 
  5661     030E                     	;# 
  5662     030F                     	;# 
  5663     0310                     	;# 
  5664     0310                     	;# 
  5665     0311                     	;# 
  5666     0312                     	;# 
  5667     0313                     	;# 
  5668     0314                     	;# 
  5669     0314                     	;# 
  5670     0315                     	;# 
  5671     0316                     	;# 
  5672     0317                     	;# 
  5673     0318                     	;# 
  5674     0318                     	;# 
  5675     0319                     	;# 
  5676     031A                     	;# 
  5677     031B                     	;# 
  5678     031C                     	;# 
  5679     031C                     	;# 
  5680     031D                     	;# 
  5681     031E                     	;# 
  5682     031F                     	;# 
  5683     038C                     	;# 
  5684     038C                     	;# 
  5685     038D                     	;# 
  5686     038E                     	;# 
  5687     0390                     	;# 
  5688     0390                     	;# 
  5689     0391                     	;# 
  5690     0392                     	;# 
  5691     048C                     	;# 
  5692     048C                     	;# 
  5693     048D                     	;# 
  5694     048E                     	;# 
  5695     048F                     	;# 
  5696     048F                     	;# 
  5697     0490                     	;# 
  5698     0491                     	;# 
  5699     0492                     	;# 
  5700     0492                     	;# 
  5701     0493                     	;# 
  5702     0494                     	;# 
  5703     0495                     	;# 
  5704     0495                     	;# 
  5705     0496                     	;# 
  5706     0497                     	;# 
  5707     0498                     	;# 
  5708     0499                     	;# 
  5709     049A                     	;# 
  5710     049B                     	;# 
  5711     049C                     	;# 
  5712     049D                     	;# 
  5713     050C                     	;# 
  5714     050C                     	;# 
  5715     050D                     	;# 
  5716     050E                     	;# 
  5717     050F                     	;# 
  5718     050F                     	;# 
  5719     0510                     	;# 
  5720     0511                     	;# 
  5721     0512                     	;# 
  5722     0512                     	;# 
  5723     0513                     	;# 
  5724     0514                     	;# 
  5725     0515                     	;# 
  5726     0515                     	;# 
  5727     0516                     	;# 
  5728     0517                     	;# 
  5729     0518                     	;# 
  5730     0519                     	;# 
  5731     051A                     	;# 
  5732     051B                     	;# 
  5733     051C                     	;# 
  5734     051D                     	;# 
  5735     058C                     	;# 
  5736     058C                     	;# 
  5737     058D                     	;# 
  5738     058E                     	;# 
  5739     058F                     	;# 
  5740     058F                     	;# 
  5741     0590                     	;# 
  5742     0591                     	;# 
  5743     0592                     	;# 
  5744     0593                     	;# 
  5745     059C                     	;# 
  5746     059C                     	;# 
  5747     059D                     	;# 
  5748     059D                     	;# 
  5749     059E                     	;# 
  5750     059F                     	;# 
  5751     060C                     	;# 
  5752     060C                     	;# 
  5753     060D                     	;# 
  5754     060D                     	;# 
  5755     060E                     	;# 
  5756     060F                     	;# 
  5757     0610                     	;# 
  5758     0611                     	;# 
  5759     0612                     	;# 
  5760     0613                     	;# 
  5761     0614                     	;# 
  5762     0616                     	;# 
  5763     0616                     	;# 
  5764     0617                     	;# 
  5765     0617                     	;# 
  5766     0618                     	;# 
  5767     0619                     	;# 
  5768     061A                     	;# 
  5769     061B                     	;# 
  5770     061C                     	;# 
  5771     061D                     	;# 
  5772     061E                     	;# 
  5773     068C                     	;# 
  5774     068D                     	;# 
  5775     068E                     	;# 
  5776     068F                     	;# 
  5777     0690                     	;# 
  5778     0691                     	;# 
  5779     0692                     	;# 
  5780     0693                     	;# 
  5781     0694                     	;# 
  5782     070C                     	;# 
  5783     070D                     	;# 
  5784     070E                     	;# 
  5785     070F                     	;# 
  5786     0710                     	;# 
  5787     0711                     	;# 
  5788     0712                     	;# 
  5789     0713                     	;# 
  5790     0714                     	;# 
  5791     0716                     	;# 
  5792     0717                     	;# 
  5793     0718                     	;# 
  5794     0719                     	;# 
  5795     071A                     	;# 
  5796     071B                     	;# 
  5797     071C                     	;# 
  5798     071D                     	;# 
  5799     071E                     	;# 
  5800     0796                     	;# 
  5801     0797                     	;# 
  5802     0798                     	;# 
  5803     0799                     	;# 
  5804     079A                     	;# 
  5805     079B                     	;# 
  5806     079C                     	;# 
  5807     079D                     	;# 
  5808     080C                     	;# 
  5809     080D                     	;# 
  5810     080E                     	;# 
  5811     080F                     	;# 
  5812     0810                     	;# 
  5813     0811                     	;# 
  5814     0813                     	;# 
  5815     0814                     	;# 
  5816     081A                     	;# 
  5817     081A                     	;# 
  5818     081B                     	;# 
  5819     081C                     	;# 
  5820     081C                     	;# 
  5821     081D                     	;# 
  5822     081E                     	;# 
  5823     081F                     	;# 
  5824     088C                     	;# 
  5825     088D                     	;# 
  5826     088E                     	;# 
  5827     088F                     	;# 
  5828     0890                     	;# 
  5829     0891                     	;# 
  5830     0892                     	;# 
  5831     0893                     	;# 
  5832     0895                     	;# 
  5833     0896                     	;# 
  5834     0897                     	;# 
  5835     0898                     	;# 
  5836     0899                     	;# 
  5837     089A                     	;# 
  5838     089B                     	;# 
  5839     090C                     	;# 
  5840     090E                     	;# 
  5841     090F                     	;# 
  5842     091F                     	;# 
  5843     098F                     	;# 
  5844     098F                     	;# 
  5845     0990                     	;# 
  5846     0991                     	;# 
  5847     0992                     	;# 
  5848     0993                     	;# 
  5849     0994                     	;# 
  5850     0995                     	;# 
  5851     0996                     	;# 
  5852     0997                     	;# 
  5853     0A19                     	;# 
  5854     0A19                     	;# 
  5855     0A1A                     	;# 
  5856     0A1A                     	;# 
  5857     0A1B                     	;# 
  5858     0A1B                     	;# 
  5859     0A1B                     	;# 
  5860     0A1C                     	;# 
  5861     0A1C                     	;# 
  5862     0A1D                     	;# 
  5863     0A1D                     	;# 
  5864     0A1E                     	;# 
  5865     0A1E                     	;# 
  5866     0A1F                     	;# 
  5867     0A1F                     	;# 
  5868     0A1F                     	;# 
  5869     1E0F                     	;# 
  5870     1E10                     	;# 
  5871     1E11                     	;# 
  5872     1E12                     	;# 
  5873     1E13                     	;# 
  5874     1E14                     	;# 
  5875     1E15                     	;# 
  5876     1E16                     	;# 
  5877     1E17                     	;# 
  5878     1E18                     	;# 
  5879     1E19                     	;# 
  5880     1E1A                     	;# 
  5881     1E1B                     	;# 
  5882     1E1C                     	;# 
  5883     1E1D                     	;# 
  5884     1E1E                     	;# 
  5885     1E1F                     	;# 
  5886     1E20                     	;# 
  5887     1E21                     	;# 
  5888     1E22                     	;# 
  5889     1E23                     	;# 
  5890     1E24                     	;# 
  5891     1E25                     	;# 
  5892     1E26                     	;# 
  5893     1E27                     	;# 
  5894     1E28                     	;# 
  5895     1E29                     	;# 
  5896     1E2A                     	;# 
  5897     1E2B                     	;# 
  5898     1E2C                     	;# 
  5899     1E2D                     	;# 
  5900     1E2E                     	;# 
  5901     1E2F                     	;# 
  5902     1E30                     	;# 
  5903     1E31                     	;# 
  5904     1E32                     	;# 
  5905     1E33                     	;# 
  5906     1E34                     	;# 
  5907     1E35                     	;# 
  5908     1E36                     	;# 
  5909     1E37                     	;# 
  5910     1E8F                     	;# 
  5911     1E90                     	;# 
  5912     1E91                     	;# 
  5913     1E92                     	;# 
  5914     1E93                     	;# 
  5915     1E94                     	;# 
  5916     1E95                     	;# 
  5917     1E96                     	;# 
  5918     1E97                     	;# 
  5919     1E9C                     	;# 
  5920     1E9D                     	;# 
  5921     1E9E                     	;# 
  5922     1EA1                     	;# 
  5923     1EA2                     	;# 
  5924     1EA3                     	;# 
  5925     1EA4                     	;# 
  5926     1EA5                     	;# 
  5927     1EA9                     	;# 
  5928     1EAA                     	;# 
  5929     1EAB                     	;# 
  5930     1EAC                     	;# 
  5931     1EB1                     	;# 
  5932     1EB2                     	;# 
  5933     1EB3                     	;# 
  5934     1EB8                     	;# 
  5935     1EB9                     	;# 
  5936     1EBA                     	;# 
  5937     1EBB                     	;# 
  5938     1EBC                     	;# 
  5939     1EBD                     	;# 
  5940     1EBE                     	;# 
  5941     1EC3                     	;# 
  5942     1EC5                     	;# 
  5943     1EC6                     	;# 
  5944     1EC7                     	;# 
  5945     1EC8                     	;# 
  5946     1EC9                     	;# 
  5947     1ECA                     	;# 
  5948     1ECB                     	;# 
  5949     1ECC                     	;# 
  5950     1ECD                     	;# 
  5951     1ECE                     	;# 
  5952     1F10                     	;# 
  5953     1F11                     	;# 
  5954     1F12                     	;# 
  5955     1F13                     	;# 
  5956     1F14                     	;# 
  5957     1F15                     	;# 
  5958     1F16                     	;# 
  5959     1F17                     	;# 
  5960     1F18                     	;# 
  5961     1F19                     	;# 
  5962     1F1A                     	;# 
  5963     1F1B                     	;# 
  5964     1F1C                     	;# 
  5965     1F1D                     	;# 
  5966     1F1E                     	;# 
  5967     1F1F                     	;# 
  5968     1F20                     	;# 
  5969     1F21                     	;# 
  5970     1F22                     	;# 
  5971     1F23                     	;# 
  5972     1F24                     	;# 
  5973     1F25                     	;# 
  5974     1F26                     	;# 
  5975     1F27                     	;# 
  5976     1F38                     	;# 
  5977     1F39                     	;# 
  5978     1F3A                     	;# 
  5979     1F3B                     	;# 
  5980     1F3C                     	;# 
  5981     1F3D                     	;# 
  5982     1F3E                     	;# 
  5983     1F3F                     	;# 
  5984     1F43                     	;# 
  5985     1F44                     	;# 
  5986     1F45                     	;# 
  5987     1F46                     	;# 
  5988     1F47                     	;# 
  5989     1F48                     	;# 
  5990     1F49                     	;# 
  5991     1F4A                     	;# 
  5992     1F4E                     	;# 
  5993     1F4F                     	;# 
  5994     1F50                     	;# 
  5995     1F51                     	;# 
  5996     1F52                     	;# 
  5997     1F53                     	;# 
  5998     1F54                     	;# 
  5999     1F55                     	;# 
  6000     1F65                     	;# 
  6001     1F66                     	;# 
  6002     1F67                     	;# 
  6003     1F68                     	;# 
  6004     1F69                     	;# 
  6005     1F6A                     	;# 
  6006     1F6B                     	;# 
  6007     1FE4                     	;# 
  6008     1FE5                     	;# 
  6009     1FE6                     	;# 
  6010     1FE7                     	;# 
  6011     1FE8                     	;# 
  6012     1FE8                     	;# 
  6013     1FE9                     	;# 
  6014     1FEA                     	;# 
  6015     1FEB                     	;# 
  6016     1FED                     	;# 
  6017     1FEE                     	;# 
  6018     1FEF                     	;# 
  6019     0000                     	;# 
  6020     0001                     	;# 
  6021     0002                     	;# 
  6022     0003                     	;# 
  6023     0004                     	;# 
  6024     0005                     	;# 
  6025     0006                     	;# 
  6026     0007                     	;# 
  6027     0008                     	;# 
  6028     0009                     	;# 
  6029     000A                     	;# 
  6030     000B                     	;# 
  6031     000C                     	;# 
  6032     000D                     	;# 
  6033     000E                     	;# 
  6034     0010                     	;# 
  6035     0012                     	;# 
  6036     0013                     	;# 
  6037     0014                     	;# 
  6038     0016                     	;# 
  6039     0018                     	;# 
  6040     0019                     	;# 
  6041     001A                     	;# 
  6042     001C                     	;# 
  6043     008C                     	;# 
  6044     008C                     	;# 
  6045     008D                     	;# 
  6046     008E                     	;# 
  6047     008E                     	;# 
  6048     008F                     	;# 
  6049     0090                     	;# 
  6050     0090                     	;# 
  6051     0091                     	;# 
  6052     0092                     	;# 
  6053     0092                     	;# 
  6054     0093                     	;# 
  6055     0094                     	;# 
  6056     0094                     	;# 
  6057     0095                     	;# 
  6058     0096                     	;# 
  6059     0096                     	;# 
  6060     0097                     	;# 
  6061     0098                     	;# 
  6062     0099                     	;# 
  6063     009A                     	;# 
  6064     009B                     	;# 
  6065     009B                     	;# 
  6066     009C                     	;# 
  6067     009D                     	;# 
  6068     009D                     	;# 
  6069     009E                     	;# 
  6070     009F                     	;# 
  6071     010C                     	;# 
  6072     010C                     	;# 
  6073     010D                     	;# 
  6074     010E                     	;# 
  6075     010F                     	;# 
  6076     010F                     	;# 
  6077     0110                     	;# 
  6078     0111                     	;# 
  6079     0112                     	;# 
  6080     0113                     	;# 
  6081     0114                     	;# 
  6082     0115                     	;# 
  6083     0116                     	;# 
  6084     0117                     	;# 
  6085     0118                     	;# 
  6086     0119                     	;# 
  6087     0119                     	;# 
  6088     0119                     	;# 
  6089     011A                     	;# 
  6090     011A                     	;# 
  6091     011A                     	;# 
  6092     011B                     	;# 
  6093     011B                     	;# 
  6094     011B                     	;# 
  6095     011B                     	;# 
  6096     011B                     	;# 
  6097     011C                     	;# 
  6098     011C                     	;# 
  6099     011C                     	;# 
  6100     011D                     	;# 
  6101     011D                     	;# 
  6102     011D                     	;# 
  6103     011E                     	;# 
  6104     011E                     	;# 
  6105     011E                     	;# 
  6106     011F                     	;# 
  6107     011F                     	;# 
  6108     011F                     	;# 
  6109     011F                     	;# 
  6110     011F                     	;# 
  6111     018C                     	;# 
  6112     018D                     	;# 
  6113     018E                     	;# 
  6114     018F                     	;# 
  6115     0190                     	;# 
  6116     0191                     	;# 
  6117     0192                     	;# 
  6118     0196                     	;# 
  6119     0197                     	;# 
  6120     0198                     	;# 
  6121     0199                     	;# 
  6122     019A                     	;# 
  6123     019B                     	;# 
  6124     019C                     	;# 
  6125     020C                     	;# 
  6126     020D                     	;# 
  6127     020E                     	;# 
  6128     020E                     	;# 
  6129     020F                     	;# 
  6130     020F                     	;# 
  6131     0210                     	;# 
  6132     0210                     	;# 
  6133     0211                     	;# 
  6134     0211                     	;# 
  6135     0212                     	;# 
  6136     0213                     	;# 
  6137     0214                     	;# 
  6138     0214                     	;# 
  6139     0215                     	;# 
  6140     0215                     	;# 
  6141     0216                     	;# 
  6142     0216                     	;# 
  6143     0217                     	;# 
  6144     0217                     	;# 
  6145     0218                     	;# 
  6146     0219                     	;# 
  6147     021A                     	;# 
  6148     021A                     	;# 
  6149     021B                     	;# 
  6150     021B                     	;# 
  6151     021C                     	;# 
  6152     021C                     	;# 
  6153     021D                     	;# 
  6154     021D                     	;# 
  6155     021E                     	;# 
  6156     021F                     	;# 
  6157     028C                     	;# 
  6158     028C                     	;# 
  6159     028D                     	;# 
  6160     028D                     	;# 
  6161     028E                     	;# 
  6162     028F                     	;# 
  6163     0290                     	;# 
  6164     0291                     	;# 
  6165     0292                     	;# 
  6166     0292                     	;# 
  6167     0293                     	;# 
  6168     0293                     	;# 
  6169     0294                     	;# 
  6170     0295                     	;# 
  6171     0296                     	;# 
  6172     0297                     	;# 
  6173     0298                     	;# 
  6174     0298                     	;# 
  6175     0299                     	;# 
  6176     0299                     	;# 
  6177     029A                     	;# 
  6178     029B                     	;# 
  6179     029C                     	;# 
  6180     029D                     	;# 
  6181     029F                     	;# 
  6182     030C                     	;# 
  6183     030C                     	;# 
  6184     030D                     	;# 
  6185     030E                     	;# 
  6186     030F                     	;# 
  6187     0310                     	;# 
  6188     0310                     	;# 
  6189     0311                     	;# 
  6190     0312                     	;# 
  6191     0313                     	;# 
  6192     0314                     	;# 
  6193     0314                     	;# 
  6194     0315                     	;# 
  6195     0316                     	;# 
  6196     0317                     	;# 
  6197     0318                     	;# 
  6198     0318                     	;# 
  6199     0319                     	;# 
  6200     031A                     	;# 
  6201     031B                     	;# 
  6202     031C                     	;# 
  6203     031C                     	;# 
  6204     031D                     	;# 
  6205     031E                     	;# 
  6206     031F                     	;# 
  6207     038C                     	;# 
  6208     038C                     	;# 
  6209     038D                     	;# 
  6210     038E                     	;# 
  6211     0390                     	;# 
  6212     0390                     	;# 
  6213     0391                     	;# 
  6214     0392                     	;# 
  6215     048C                     	;# 
  6216     048C                     	;# 
  6217     048D                     	;# 
  6218     048E                     	;# 
  6219     048F                     	;# 
  6220     048F                     	;# 
  6221     0490                     	;# 
  6222     0491                     	;# 
  6223     0492                     	;# 
  6224     0492                     	;# 
  6225     0493                     	;# 
  6226     0494                     	;# 
  6227     0495                     	;# 
  6228     0495                     	;# 
  6229     0496                     	;# 
  6230     0497                     	;# 
  6231     0498                     	;# 
  6232     0499                     	;# 
  6233     049A                     	;# 
  6234     049B                     	;# 
  6235     049C                     	;# 
  6236     049D                     	;# 
  6237     050C                     	;# 
  6238     050C                     	;# 
  6239     050D                     	;# 
  6240     050E                     	;# 
  6241     050F                     	;# 
  6242     050F                     	;# 
  6243     0510                     	;# 
  6244     0511                     	;# 
  6245     0512                     	;# 
  6246     0512                     	;# 
  6247     0513                     	;# 
  6248     0514                     	;# 
  6249     0515                     	;# 
  6250     0515                     	;# 
  6251     0516                     	;# 
  6252     0517                     	;# 
  6253     0518                     	;# 
  6254     0519                     	;# 
  6255     051A                     	;# 
  6256     051B                     	;# 
  6257     051C                     	;# 
  6258     051D                     	;# 
  6259     058C                     	;# 
  6260     058C                     	;# 
  6261     058D                     	;# 
  6262     058E                     	;# 
  6263     058F                     	;# 
  6264     058F                     	;# 
  6265     0590                     	;# 
  6266     0591                     	;# 
  6267     0592                     	;# 
  6268     0593                     	;# 
  6269     059C                     	;# 
  6270     059C                     	;# 
  6271     059D                     	;# 
  6272     059D                     	;# 
  6273     059E                     	;# 
  6274     059F                     	;# 
  6275     060C                     	;# 
  6276     060C                     	;# 
  6277     060D                     	;# 
  6278     060D                     	;# 
  6279     060E                     	;# 
  6280     060F                     	;# 
  6281     0610                     	;# 
  6282     0611                     	;# 
  6283     0612                     	;# 
  6284     0613                     	;# 
  6285     0614                     	;# 
  6286     0616                     	;# 
  6287     0616                     	;# 
  6288     0617                     	;# 
  6289     0617                     	;# 
  6290     0618                     	;# 
  6291     0619                     	;# 
  6292     061A                     	;# 
  6293     061B                     	;# 
  6294     061C                     	;# 
  6295     061D                     	;# 
  6296     061E                     	;# 
  6297     068C                     	;# 
  6298     068D                     	;# 
  6299     068E                     	;# 
  6300     068F                     	;# 
  6301     0690                     	;# 
  6302     0691                     	;# 
  6303     0692                     	;# 
  6304     0693                     	;# 
  6305     0694                     	;# 
  6306     070C                     	;# 
  6307     070D                     	;# 
  6308     070E                     	;# 
  6309     070F                     	;# 
  6310     0710                     	;# 
  6311     0711                     	;# 
  6312     0712                     	;# 
  6313     0713                     	;# 
  6314     0714                     	;# 
  6315     0716                     	;# 
  6316     0717                     	;# 
  6317     0718                     	;# 
  6318     0719                     	;# 
  6319     071A                     	;# 
  6320     071B                     	;# 
  6321     071C                     	;# 
  6322     071D                     	;# 
  6323     071E                     	;# 
  6324     0796                     	;# 
  6325     0797                     	;# 
  6326     0798                     	;# 
  6327     0799                     	;# 
  6328     079A                     	;# 
  6329     079B                     	;# 
  6330     079C                     	;# 
  6331     079D                     	;# 
  6332     080C                     	;# 
  6333     080D                     	;# 
  6334     080E                     	;# 
  6335     080F                     	;# 
  6336     0810                     	;# 
  6337     0811                     	;# 
  6338     0813                     	;# 
  6339     0814                     	;# 
  6340     081A                     	;# 
  6341     081A                     	;# 
  6342     081B                     	;# 
  6343     081C                     	;# 
  6344     081C                     	;# 
  6345     081D                     	;# 
  6346     081E                     	;# 
  6347     081F                     	;# 
  6348     088C                     	;# 
  6349     088D                     	;# 
  6350     088E                     	;# 
  6351     088F                     	;# 
  6352     0890                     	;# 
  6353     0891                     	;# 
  6354     0892                     	;# 
  6355     0893                     	;# 
  6356     0895                     	;# 
  6357     0896                     	;# 
  6358     0897                     	;# 
  6359     0898                     	;# 
  6360     0899                     	;# 
  6361     089A                     	;# 
  6362     089B                     	;# 
  6363     090C                     	;# 
  6364     090E                     	;# 
  6365     090F                     	;# 
  6366     091F                     	;# 
  6367     098F                     	;# 
  6368     098F                     	;# 
  6369     0990                     	;# 
  6370     0991                     	;# 
  6371     0992                     	;# 
  6372     0993                     	;# 
  6373     0994                     	;# 
  6374     0995                     	;# 
  6375     0996                     	;# 
  6376     0997                     	;# 
  6377     0A19                     	;# 
  6378     0A19                     	;# 
  6379     0A1A                     	;# 
  6380     0A1A                     	;# 
  6381     0A1B                     	;# 
  6382     0A1B                     	;# 
  6383     0A1B                     	;# 
  6384     0A1C                     	;# 
  6385     0A1C                     	;# 
  6386     0A1D                     	;# 
  6387     0A1D                     	;# 
  6388     0A1E                     	;# 
  6389     0A1E                     	;# 
  6390     0A1F                     	;# 
  6391     0A1F                     	;# 
  6392     0A1F                     	;# 
  6393     1E0F                     	;# 
  6394     1E10                     	;# 
  6395     1E11                     	;# 
  6396     1E12                     	;# 
  6397     1E13                     	;# 
  6398     1E14                     	;# 
  6399     1E15                     	;# 
  6400     1E16                     	;# 
  6401     1E17                     	;# 
  6402     1E18                     	;# 
  6403     1E19                     	;# 
  6404     1E1A                     	;# 
  6405     1E1B                     	;# 
  6406     1E1C                     	;# 
  6407     1E1D                     	;# 
  6408     1E1E                     	;# 
  6409     1E1F                     	;# 
  6410     1E20                     	;# 
  6411     1E21                     	;# 
  6412     1E22                     	;# 
  6413     1E23                     	;# 
  6414     1E24                     	;# 
  6415     1E25                     	;# 
  6416     1E26                     	;# 
  6417     1E27                     	;# 
  6418     1E28                     	;# 
  6419     1E29                     	;# 
  6420     1E2A                     	;# 
  6421     1E2B                     	;# 
  6422     1E2C                     	;# 
  6423     1E2D                     	;# 
  6424     1E2E                     	;# 
  6425     1E2F                     	;# 
  6426     1E30                     	;# 
  6427     1E31                     	;# 
  6428     1E32                     	;# 
  6429     1E33                     	;# 
  6430     1E34                     	;# 
  6431     1E35                     	;# 
  6432     1E36                     	;# 
  6433     1E37                     	;# 
  6434     1E8F                     	;# 
  6435     1E90                     	;# 
  6436     1E91                     	;# 
  6437     1E92                     	;# 
  6438     1E93                     	;# 
  6439     1E94                     	;# 
  6440     1E95                     	;# 
  6441     1E96                     	;# 
  6442     1E97                     	;# 
  6443     1E9C                     	;# 
  6444     1E9D                     	;# 
  6445     1E9E                     	;# 
  6446     1EA1                     	;# 
  6447     1EA2                     	;# 
  6448     1EA3                     	;# 
  6449     1EA4                     	;# 
  6450     1EA5                     	;# 
  6451     1EA9                     	;# 
  6452     1EAA                     	;# 
  6453     1EAB                     	;# 
  6454     1EAC                     	;# 
  6455     1EB1                     	;# 
  6456     1EB2                     	;# 
  6457     1EB3                     	;# 
  6458     1EB8                     	;# 
  6459     1EB9                     	;# 
  6460     1EBA                     	;# 
  6461     1EBB                     	;# 
  6462     1EBC                     	;# 
  6463     1EBD                     	;# 
  6464     1EBE                     	;# 
  6465     1EC3                     	;# 
  6466     1EC5                     	;# 
  6467     1EC6                     	;# 
  6468     1EC7                     	;# 
  6469     1EC8                     	;# 
  6470     1EC9                     	;# 
  6471     1ECA                     	;# 
  6472     1ECB                     	;# 
  6473     1ECC                     	;# 
  6474     1ECD                     	;# 
  6475     1ECE                     	;# 
  6476     1F10                     	;# 
  6477     1F11                     	;# 
  6478     1F12                     	;# 
  6479     1F13                     	;# 
  6480     1F14                     	;# 
  6481     1F15                     	;# 
  6482     1F16                     	;# 
  6483     1F17                     	;# 
  6484     1F18                     	;# 
  6485     1F19                     	;# 
  6486     1F1A                     	;# 
  6487     1F1B                     	;# 
  6488     1F1C                     	;# 
  6489     1F1D                     	;# 
  6490     1F1E                     	;# 
  6491     1F1F                     	;# 
  6492     1F20                     	;# 
  6493     1F21                     	;# 
  6494     1F22                     	;# 
  6495     1F23                     	;# 
  6496     1F24                     	;# 
  6497     1F25                     	;# 
  6498     1F26                     	;# 
  6499     1F27                     	;# 
  6500     1F38                     	;# 
  6501     1F39                     	;# 
  6502     1F3A                     	;# 
  6503     1F3B                     	;# 
  6504     1F3C                     	;# 
  6505     1F3D                     	;# 
  6506     1F3E                     	;# 
  6507     1F3F                     	;# 
  6508     1F43                     	;# 
  6509     1F44                     	;# 
  6510     1F45                     	;# 
  6511     1F46                     	;# 
  6512     1F47                     	;# 
  6513     1F48                     	;# 
  6514     1F49                     	;# 
  6515     1F4A                     	;# 
  6516     1F4E                     	;# 
  6517     1F4F                     	;# 
  6518     1F50                     	;# 
  6519     1F51                     	;# 
  6520     1F52                     	;# 
  6521     1F53                     	;# 
  6522     1F54                     	;# 
  6523     1F55                     	;# 
  6524     1F65                     	;# 
  6525     1F66                     	;# 
  6526     1F67                     	;# 
  6527     1F68                     	;# 
  6528     1F69                     	;# 
  6529     1F6A                     	;# 
  6530     1F6B                     	;# 
  6531     1FE4                     	;# 
  6532     1FE5                     	;# 
  6533     1FE6                     	;# 
  6534     1FE7                     	;# 
  6535     1FE8                     	;# 
  6536     1FE8                     	;# 
  6537     1FE9                     	;# 
  6538     1FEA                     	;# 
  6539     1FEB                     	;# 
  6540     1FED                     	;# 
  6541     1FEE                     	;# 
  6542     1FEF                     	;# 
  6543     0000                     	;# 
  6544     0001                     	;# 
  6545     0002                     	;# 
  6546     0003                     	;# 
  6547     0004                     	;# 
  6548     0005                     	;# 
  6549     0006                     	;# 
  6550     0007                     	;# 
  6551     0008                     	;# 
  6552     0009                     	;# 
  6553     000A                     	;# 
  6554     000B                     	;# 
  6555     000C                     	;# 
  6556     000D                     	;# 
  6557     000E                     	;# 
  6558     0010                     	;# 
  6559     0012                     	;# 
  6560     0013                     	;# 
  6561     0014                     	;# 
  6562     0016                     	;# 
  6563     0018                     	;# 
  6564     0019                     	;# 
  6565     001A                     	;# 
  6566     001C                     	;# 
  6567     008C                     	;# 
  6568     008C                     	;# 
  6569     008D                     	;# 
  6570     008E                     	;# 
  6571     008E                     	;# 
  6572     008F                     	;# 
  6573     0090                     	;# 
  6574     0090                     	;# 
  6575     0091                     	;# 
  6576     0092                     	;# 
  6577     0092                     	;# 
  6578     0093                     	;# 
  6579     0094                     	;# 
  6580     0094                     	;# 
  6581     0095                     	;# 
  6582     0096                     	;# 
  6583     0096                     	;# 
  6584     0097                     	;# 
  6585     0098                     	;# 
  6586     0099                     	;# 
  6587     009A                     	;# 
  6588     009B                     	;# 
  6589     009B                     	;# 
  6590     009C                     	;# 
  6591     009D                     	;# 
  6592     009D                     	;# 
  6593     009E                     	;# 
  6594     009F                     	;# 
  6595     010C                     	;# 
  6596     010C                     	;# 
  6597     010D                     	;# 
  6598     010E                     	;# 
  6599     010F                     	;# 
  6600     010F                     	;# 
  6601     0110                     	;# 
  6602     0111                     	;# 
  6603     0112                     	;# 
  6604     0113                     	;# 
  6605     0114                     	;# 
  6606     0115                     	;# 
  6607     0116                     	;# 
  6608     0117                     	;# 
  6609     0118                     	;# 
  6610     0119                     	;# 
  6611     0119                     	;# 
  6612     0119                     	;# 
  6613     011A                     	;# 
  6614     011A                     	;# 
  6615     011A                     	;# 
  6616     011B                     	;# 
  6617     011B                     	;# 
  6618     011B                     	;# 
  6619     011B                     	;# 
  6620     011B                     	;# 
  6621     011C                     	;# 
  6622     011C                     	;# 
  6623     011C                     	;# 
  6624     011D                     	;# 
  6625     011D                     	;# 
  6626     011D                     	;# 
  6627     011E                     	;# 
  6628     011E                     	;# 
  6629     011E                     	;# 
  6630     011F                     	;# 
  6631     011F                     	;# 
  6632     011F                     	;# 
  6633     011F                     	;# 
  6634     011F                     	;# 
  6635     018C                     	;# 
  6636     018D                     	;# 
  6637     018E                     	;# 
  6638     018F                     	;# 
  6639     0190                     	;# 
  6640     0191                     	;# 
  6641     0192                     	;# 
  6642     0196                     	;# 
  6643     0197                     	;# 
  6644     0198                     	;# 
  6645     0199                     	;# 
  6646     019A                     	;# 
  6647     019B                     	;# 
  6648     019C                     	;# 
  6649     020C                     	;# 
  6650     020D                     	;# 
  6651     020E                     	;# 
  6652     020E                     	;# 
  6653     020F                     	;# 
  6654     020F                     	;# 
  6655     0210                     	;# 
  6656     0210                     	;# 
  6657     0211                     	;# 
  6658     0211                     	;# 
  6659     0212                     	;# 
  6660     0213                     	;# 
  6661     0214                     	;# 
  6662     0214                     	;# 
  6663     0215                     	;# 
  6664     0215                     	;# 
  6665     0216                     	;# 
  6666     0216                     	;# 
  6667     0217                     	;# 
  6668     0217                     	;# 
  6669     0218                     	;# 
  6670     0219                     	;# 
  6671     021A                     	;# 
  6672     021A                     	;# 
  6673     021B                     	;# 
  6674     021B                     	;# 
  6675     021C                     	;# 
  6676     021C                     	;# 
  6677     021D                     	;# 
  6678     021D                     	;# 
  6679     021E                     	;# 
  6680     021F                     	;# 
  6681     028C                     	;# 
  6682     028C                     	;# 
  6683     028D                     	;# 
  6684     028D                     	;# 
  6685     028E                     	;# 
  6686     028F                     	;# 
  6687     0290                     	;# 
  6688     0291                     	;# 
  6689     0292                     	;# 
  6690     0292                     	;# 
  6691     0293                     	;# 
  6692     0293                     	;# 
  6693     0294                     	;# 
  6694     0295                     	;# 
  6695     0296                     	;# 
  6696     0297                     	;# 
  6697     0298                     	;# 
  6698     0298                     	;# 
  6699     0299                     	;# 
  6700     0299                     	;# 
  6701     029A                     	;# 
  6702     029B                     	;# 
  6703     029C                     	;# 
  6704     029D                     	;# 
  6705     029F                     	;# 
  6706     030C                     	;# 
  6707     030C                     	;# 
  6708     030D                     	;# 
  6709     030E                     	;# 
  6710     030F                     	;# 
  6711     0310                     	;# 
  6712     0310                     	;# 
  6713     0311                     	;# 
  6714     0312                     	;# 
  6715     0313                     	;# 
  6716     0314                     	;# 
  6717     0314                     	;# 
  6718     0315                     	;# 
  6719     0316                     	;# 
  6720     0317                     	;# 
  6721     0318                     	;# 
  6722     0318                     	;# 
  6723     0319                     	;# 
  6724     031A                     	;# 
  6725     031B                     	;# 
  6726     031C                     	;# 
  6727     031C                     	;# 
  6728     031D                     	;# 
  6729     031E                     	;# 
  6730     031F                     	;# 
  6731     038C                     	;# 
  6732     038C                     	;# 
  6733     038D                     	;# 
  6734     038E                     	;# 
  6735     0390                     	;# 
  6736     0390                     	;# 
  6737     0391                     	;# 
  6738     0392                     	;# 
  6739     048C                     	;# 
  6740     048C                     	;# 
  6741     048D                     	;# 
  6742     048E                     	;# 
  6743     048F                     	;# 
  6744     048F                     	;# 
  6745     0490                     	;# 
  6746     0491                     	;# 
  6747     0492                     	;# 
  6748     0492                     	;# 
  6749     0493                     	;# 
  6750     0494                     	;# 
  6751     0495                     	;# 
  6752     0495                     	;# 
  6753     0496                     	;# 
  6754     0497                     	;# 
  6755     0498                     	;# 
  6756     0499                     	;# 
  6757     049A                     	;# 
  6758     049B                     	;# 
  6759     049C                     	;# 
  6760     049D                     	;# 
  6761     050C                     	;# 
  6762     050C                     	;# 
  6763     050D                     	;# 
  6764     050E                     	;# 
  6765     050F                     	;# 
  6766     050F                     	;# 
  6767     0510                     	;# 
  6768     0511                     	;# 
  6769     0512                     	;# 
  6770     0512                     	;# 
  6771     0513                     	;# 
  6772     0514                     	;# 
  6773     0515                     	;# 
  6774     0515                     	;# 
  6775     0516                     	;# 
  6776     0517                     	;# 
  6777     0518                     	;# 
  6778     0519                     	;# 
  6779     051A                     	;# 
  6780     051B                     	;# 
  6781     051C                     	;# 
  6782     051D                     	;# 
  6783     058C                     	;# 
  6784     058C                     	;# 
  6785     058D                     	;# 
  6786     058E                     	;# 
  6787     058F                     	;# 
  6788     058F                     	;# 
  6789     0590                     	;# 
  6790     0591                     	;# 
  6791     0592                     	;# 
  6792     0593                     	;# 
  6793     059C                     	;# 
  6794     059C                     	;# 
  6795     059D                     	;# 
  6796     059D                     	;# 
  6797     059E                     	;# 
  6798     059F                     	;# 
  6799     060C                     	;# 
  6800     060C                     	;# 
  6801     060D                     	;# 
  6802     060D                     	;# 
  6803     060E                     	;# 
  6804     060F                     	;# 
  6805     0610                     	;# 
  6806     0611                     	;# 
  6807     0612                     	;# 
  6808     0613                     	;# 
  6809     0614                     	;# 
  6810     0616                     	;# 
  6811     0616                     	;# 
  6812     0617                     	;# 
  6813     0617                     	;# 
  6814     0618                     	;# 
  6815     0619                     	;# 
  6816     061A                     	;# 
  6817     061B                     	;# 
  6818     061C                     	;# 
  6819     061D                     	;# 
  6820     061E                     	;# 
  6821     068C                     	;# 
  6822     068D                     	;# 
  6823     068E                     	;# 
  6824     068F                     	;# 
  6825     0690                     	;# 
  6826     0691                     	;# 
  6827     0692                     	;# 
  6828     0693                     	;# 
  6829     0694                     	;# 
  6830     070C                     	;# 
  6831     070D                     	;# 
  6832     070E                     	;# 
  6833     070F                     	;# 
  6834     0710                     	;# 
  6835     0711                     	;# 
  6836     0712                     	;# 
  6837     0713                     	;# 
  6838     0714                     	;# 
  6839     0716                     	;# 
  6840     0717                     	;# 
  6841     0718                     	;# 
  6842     0719                     	;# 
  6843     071A                     	;# 
  6844     071B                     	;# 
  6845     071C                     	;# 
  6846     071D                     	;# 
  6847     071E                     	;# 
  6848     0796                     	;# 
  6849     0797                     	;# 
  6850     0798                     	;# 
  6851     0799                     	;# 
  6852     079A                     	;# 
  6853     079B                     	;# 
  6854     079C                     	;# 
  6855     079D                     	;# 
  6856     080C                     	;# 
  6857     080D                     	;# 
  6858     080E                     	;# 
  6859     080F                     	;# 
  6860     0810                     	;# 
  6861     0811                     	;# 
  6862     0813                     	;# 
  6863     0814                     	;# 
  6864     081A                     	;# 
  6865     081A                     	;# 
  6866     081B                     	;# 
  6867     081C                     	;# 
  6868     081C                     	;# 
  6869     081D                     	;# 
  6870     081E                     	;# 
  6871     081F                     	;# 
  6872     088C                     	;# 
  6873     088D                     	;# 
  6874     088E                     	;# 
  6875     088F                     	;# 
  6876     0890                     	;# 
  6877     0891                     	;# 
  6878     0892                     	;# 
  6879     0893                     	;# 
  6880     0895                     	;# 
  6881     0896                     	;# 
  6882     0897                     	;# 
  6883     0898                     	;# 
  6884     0899                     	;# 
  6885     089A                     	;# 
  6886     089B                     	;# 
  6887     090C                     	;# 
  6888     090E                     	;# 
  6889     090F                     	;# 
  6890     091F                     	;# 
  6891     098F                     	;# 
  6892     098F                     	;# 
  6893     0990                     	;# 
  6894     0991                     	;# 
  6895     0992                     	;# 
  6896     0993                     	;# 
  6897     0994                     	;# 
  6898     0995                     	;# 
  6899     0996                     	;# 
  6900     0997                     	;# 
  6901     0A19                     	;# 
  6902     0A19                     	;# 
  6903     0A1A                     	;# 
  6904     0A1A                     	;# 
  6905     0A1B                     	;# 
  6906     0A1B                     	;# 
  6907     0A1B                     	;# 
  6908     0A1C                     	;# 
  6909     0A1C                     	;# 
  6910     0A1D                     	;# 
  6911     0A1D                     	;# 
  6912     0A1E                     	;# 
  6913     0A1E                     	;# 
  6914     0A1F                     	;# 
  6915     0A1F                     	;# 
  6916     0A1F                     	;# 
  6917     1E0F                     	;# 
  6918     1E10                     	;# 
  6919     1E11                     	;# 
  6920     1E12                     	;# 
  6921     1E13                     	;# 
  6922     1E14                     	;# 
  6923     1E15                     	;# 
  6924     1E16                     	;# 
  6925     1E17                     	;# 
  6926     1E18                     	;# 
  6927     1E19                     	;# 
  6928     1E1A                     	;# 
  6929     1E1B                     	;# 
  6930     1E1C                     	;# 
  6931     1E1D                     	;# 
  6932     1E1E                     	;# 
  6933     1E1F                     	;# 
  6934     1E20                     	;# 
  6935     1E21                     	;# 
  6936     1E22                     	;# 
  6937     1E23                     	;# 
  6938     1E24                     	;# 
  6939     1E25                     	;# 
  6940     1E26                     	;# 
  6941     1E27                     	;# 
  6942     1E28                     	;# 
  6943     1E29                     	;# 
  6944     1E2A                     	;# 
  6945     1E2B                     	;# 
  6946     1E2C                     	;# 
  6947     1E2D                     	;# 
  6948     1E2E                     	;# 
  6949     1E2F                     	;# 
  6950     1E30                     	;# 
  6951     1E31                     	;# 
  6952     1E32                     	;# 
  6953     1E33                     	;# 
  6954     1E34                     	;# 
  6955     1E35                     	;# 
  6956     1E36                     	;# 
  6957     1E37                     	;# 
  6958     1E8F                     	;# 
  6959     1E90                     	;# 
  6960     1E91                     	;# 
  6961     1E92                     	;# 
  6962     1E93                     	;# 
  6963     1E94                     	;# 
  6964     1E95                     	;# 
  6965     1E96                     	;# 
  6966     1E97                     	;# 
  6967     1E9C                     	;# 
  6968     1E9D                     	;# 
  6969     1E9E                     	;# 
  6970     1EA1                     	;# 
  6971     1EA2                     	;# 
  6972     1EA3                     	;# 
  6973     1EA4                     	;# 
  6974     1EA5                     	;# 
  6975     1EA9                     	;# 
  6976     1EAA                     	;# 
  6977     1EAB                     	;# 
  6978     1EAC                     	;# 
  6979     1EB1                     	;# 
  6980     1EB2                     	;# 
  6981     1EB3                     	;# 
  6982     1EB8                     	;# 
  6983     1EB9                     	;# 
  6984     1EBA                     	;# 
  6985     1EBB                     	;# 
  6986     1EBC                     	;# 
  6987     1EBD                     	;# 
  6988     1EBE                     	;# 
  6989     1EC3                     	;# 
  6990     1EC5                     	;# 
  6991     1EC6                     	;# 
  6992     1EC7                     	;# 
  6993     1EC8                     	;# 
  6994     1EC9                     	;# 
  6995     1ECA                     	;# 
  6996     1ECB                     	;# 
  6997     1ECC                     	;# 
  6998     1ECD                     	;# 
  6999     1ECE                     	;# 
  7000     1F10                     	;# 
  7001     1F11                     	;# 
  7002     1F12                     	;# 
  7003     1F13                     	;# 
  7004     1F14                     	;# 
  7005     1F15                     	;# 
  7006     1F16                     	;# 
  7007     1F17                     	;# 
  7008     1F18                     	;# 
  7009     1F19                     	;# 
  7010     1F1A                     	;# 
  7011     1F1B                     	;# 
  7012     1F1C                     	;# 
  7013     1F1D                     	;# 
  7014     1F1E                     	;# 
  7015     1F1F                     	;# 
  7016     1F20                     	;# 
  7017     1F21                     	;# 
  7018     1F22                     	;# 
  7019     1F23                     	;# 
  7020     1F24                     	;# 
  7021     1F25                     	;# 
  7022     1F26                     	;# 
  7023     1F27                     	;# 
  7024     1F38                     	;# 
  7025     1F39                     	;# 
  7026     1F3A                     	;# 
  7027     1F3B                     	;# 
  7028     1F3C                     	;# 
  7029     1F3D                     	;# 
  7030     1F3E                     	;# 
  7031     1F3F                     	;# 
  7032     1F43                     	;# 
  7033     1F44                     	;# 
  7034     1F45                     	;# 
  7035     1F46                     	;# 
  7036     1F47                     	;# 
  7037     1F48                     	;# 
  7038     1F49                     	;# 
  7039     1F4A                     	;# 
  7040     1F4E                     	;# 
  7041     1F4F                     	;# 
  7042     1F50                     	;# 
  7043     1F51                     	;# 
  7044     1F52                     	;# 
  7045     1F53                     	;# 
  7046     1F54                     	;# 
  7047     1F55                     	;# 
  7048     1F65                     	;# 
  7049     1F66                     	;# 
  7050     1F67                     	;# 
  7051     1F68                     	;# 
  7052     1F69                     	;# 
  7053     1F6A                     	;# 
  7054     1F6B                     	;# 
  7055     1FE4                     	;# 
  7056     1FE5                     	;# 
  7057     1FE6                     	;# 
  7058     1FE7                     	;# 
  7059     1FE8                     	;# 
  7060     1FE8                     	;# 
  7061     1FE9                     	;# 
  7062     1FEA                     	;# 
  7063     1FEB                     	;# 
  7064     1FED                     	;# 
  7065     1FEE                     	;# 
  7066     1FEF                     	;# 
  7067     0000                     	;# 
  7068     0001                     	;# 
  7069     0002                     	;# 
  7070     0003                     	;# 
  7071     0004                     	;# 
  7072     0005                     	;# 
  7073     0006                     	;# 
  7074     0007                     	;# 
  7075     0008                     	;# 
  7076     0009                     	;# 
  7077     000A                     	;# 
  7078     000B                     	;# 
  7079     000C                     	;# 
  7080     000D                     	;# 
  7081     000E                     	;# 
  7082     0010                     	;# 
  7083     0012                     	;# 
  7084     0013                     	;# 
  7085     0014                     	;# 
  7086     0016                     	;# 
  7087     0018                     	;# 
  7088     0019                     	;# 
  7089     001A                     	;# 
  7090     001C                     	;# 
  7091     008C                     	;# 
  7092     008C                     	;# 
  7093     008D                     	;# 
  7094     008E                     	;# 
  7095     008E                     	;# 
  7096     008F                     	;# 
  7097     0090                     	;# 
  7098     0090                     	;# 
  7099     0091                     	;# 
  7100     0092                     	;# 
  7101     0092                     	;# 
  7102     0093                     	;# 
  7103     0094                     	;# 
  7104     0094                     	;# 
  7105     0095                     	;# 
  7106     0096                     	;# 
  7107     0096                     	;# 
  7108     0097                     	;# 
  7109     0098                     	;# 
  7110     0099                     	;# 
  7111     009A                     	;# 
  7112     009B                     	;# 
  7113     009B                     	;# 
  7114     009C                     	;# 
  7115     009D                     	;# 
  7116     009D                     	;# 
  7117     009E                     	;# 
  7118     009F                     	;# 
  7119     010C                     	;# 
  7120     010C                     	;# 
  7121     010D                     	;# 
  7122     010E                     	;# 
  7123     010F                     	;# 
  7124     010F                     	;# 
  7125     0110                     	;# 
  7126     0111                     	;# 
  7127     0112                     	;# 
  7128     0113                     	;# 
  7129     0114                     	;# 
  7130     0115                     	;# 
  7131     0116                     	;# 
  7132     0117                     	;# 
  7133     0118                     	;# 
  7134     0119                     	;# 
  7135     0119                     	;# 
  7136     0119                     	;# 
  7137     011A                     	;# 
  7138     011A                     	;# 
  7139     011A                     	;# 
  7140     011B                     	;# 
  7141     011B                     	;# 
  7142     011B                     	;# 
  7143     011B                     	;# 
  7144     011B                     	;# 
  7145     011C                     	;# 
  7146     011C                     	;# 
  7147     011C                     	;# 
  7148     011D                     	;# 
  7149     011D                     	;# 
  7150     011D                     	;# 
  7151     011E                     	;# 
  7152     011E                     	;# 
  7153     011E                     	;# 
  7154     011F                     	;# 
  7155     011F                     	;# 
  7156     011F                     	;# 
  7157     011F                     	;# 
  7158     011F                     	;# 
  7159     018C                     	;# 
  7160     018D                     	;# 
  7161     018E                     	;# 
  7162     018F                     	;# 
  7163     0190                     	;# 
  7164     0191                     	;# 
  7165     0192                     	;# 
  7166     0196                     	;# 
  7167     0197                     	;# 
  7168     0198                     	;# 
  7169     0199                     	;# 
  7170     019A                     	;# 
  7171     019B                     	;# 
  7172     019C                     	;# 
  7173     020C                     	;# 
  7174     020D                     	;# 
  7175     020E                     	;# 
  7176     020E                     	;# 
  7177     020F                     	;# 
  7178     020F                     	;# 
  7179     0210                     	;# 
  7180     0210                     	;# 
  7181     0211                     	;# 
  7182     0211                     	;# 
  7183     0212                     	;# 
  7184     0213                     	;# 
  7185     0214                     	;# 
  7186     0214                     	;# 
  7187     0215                     	;# 
  7188     0215                     	;# 
  7189     0216                     	;# 
  7190     0216                     	;# 
  7191     0217                     	;# 
  7192     0217                     	;# 
  7193     0218                     	;# 
  7194     0219                     	;# 
  7195     021A                     	;# 
  7196     021A                     	;# 
  7197     021B                     	;# 
  7198     021B                     	;# 
  7199     021C                     	;# 
  7200     021C                     	;# 
  7201     021D                     	;# 
  7202     021D                     	;# 
  7203     021E                     	;# 
  7204     021F                     	;# 
  7205     028C                     	;# 
  7206     028C                     	;# 
  7207     028D                     	;# 
  7208     028D                     	;# 
  7209     028E                     	;# 
  7210     028F                     	;# 
  7211     0290                     	;# 
  7212     0291                     	;# 
  7213     0292                     	;# 
  7214     0292                     	;# 
  7215     0293                     	;# 
  7216     0293                     	;# 
  7217     0294                     	;# 
  7218     0295                     	;# 
  7219     0296                     	;# 
  7220     0297                     	;# 
  7221     0298                     	;# 
  7222     0298                     	;# 
  7223     0299                     	;# 
  7224     0299                     	;# 
  7225     029A                     	;# 
  7226     029B                     	;# 
  7227     029C                     	;# 
  7228     029D                     	;# 
  7229     029F                     	;# 
  7230     030C                     	;# 
  7231     030C                     	;# 
  7232     030D                     	;# 
  7233     030E                     	;# 
  7234     030F                     	;# 
  7235     0310                     	;# 
  7236     0310                     	;# 
  7237     0311                     	;# 
  7238     0312                     	;# 
  7239     0313                     	;# 
  7240     0314                     	;# 
  7241     0314                     	;# 
  7242     0315                     	;# 
  7243     0316                     	;# 
  7244     0317                     	;# 
  7245     0318                     	;# 
  7246     0318                     	;# 
  7247     0319                     	;# 
  7248     031A                     	;# 
  7249     031B                     	;# 
  7250     031C                     	;# 
  7251     031C                     	;# 
  7252     031D                     	;# 
  7253     031E                     	;# 
  7254     031F                     	;# 
  7255     038C                     	;# 
  7256     038C                     	;# 
  7257     038D                     	;# 
  7258     038E                     	;# 
  7259     0390                     	;# 
  7260     0390                     	;# 
  7261     0391                     	;# 
  7262     0392                     	;# 
  7263     048C                     	;# 
  7264     048C                     	;# 
  7265     048D                     	;# 
  7266     048E                     	;# 
  7267     048F                     	;# 
  7268     048F                     	;# 
  7269     0490                     	;# 
  7270     0491                     	;# 
  7271     0492                     	;# 
  7272     0492                     	;# 
  7273     0493                     	;# 
  7274     0494                     	;# 
  7275     0495                     	;# 
  7276     0495                     	;# 
  7277     0496                     	;# 
  7278     0497                     	;# 
  7279     0498                     	;# 
  7280     0499                     	;# 
  7281     049A                     	;# 
  7282     049B                     	;# 
  7283     049C                     	;# 
  7284     049D                     	;# 
  7285     050C                     	;# 
  7286     050C                     	;# 
  7287     050D                     	;# 
  7288     050E                     	;# 
  7289     050F                     	;# 
  7290     050F                     	;# 
  7291     0510                     	;# 
  7292     0511                     	;# 
  7293     0512                     	;# 
  7294     0512                     	;# 
  7295     0513                     	;# 
  7296     0514                     	;# 
  7297     0515                     	;# 
  7298     0515                     	;# 
  7299     0516                     	;# 
  7300     0517                     	;# 
  7301     0518                     	;# 
  7302     0519                     	;# 
  7303     051A                     	;# 
  7304     051B                     	;# 
  7305     051C                     	;# 
  7306     051D                     	;# 
  7307     058C                     	;# 
  7308     058C                     	;# 
  7309     058D                     	;# 
  7310     058E                     	;# 
  7311     058F                     	;# 
  7312     058F                     	;# 
  7313     0590                     	;# 
  7314     0591                     	;# 
  7315     0592                     	;# 
  7316     0593                     	;# 
  7317     059C                     	;# 
  7318     059C                     	;# 
  7319     059D                     	;# 
  7320     059D                     	;# 
  7321     059E                     	;# 
  7322     059F                     	;# 
  7323     060C                     	;# 
  7324     060C                     	;# 
  7325     060D                     	;# 
  7326     060D                     	;# 
  7327     060E                     	;# 
  7328     060F                     	;# 
  7329     0610                     	;# 
  7330     0611                     	;# 
  7331     0612                     	;# 
  7332     0613                     	;# 
  7333     0614                     	;# 
  7334     0616                     	;# 
  7335     0616                     	;# 
  7336     0617                     	;# 
  7337     0617                     	;# 
  7338     0618                     	;# 
  7339     0619                     	;# 
  7340     061A                     	;# 
  7341     061B                     	;# 
  7342     061C                     	;# 
  7343     061D                     	;# 
  7344     061E                     	;# 
  7345     068C                     	;# 
  7346     068D                     	;# 
  7347     068E                     	;# 
  7348     068F                     	;# 
  7349     0690                     	;# 
  7350     0691                     	;# 
  7351     0692                     	;# 
  7352     0693                     	;# 
  7353     0694                     	;# 
  7354     070C                     	;# 
  7355     070D                     	;# 
  7356     070E                     	;# 
  7357     070F                     	;# 
  7358     0710                     	;# 
  7359     0711                     	;# 
  7360     0712                     	;# 
  7361     0713                     	;# 
  7362     0714                     	;# 
  7363     0716                     	;# 
  7364     0717                     	;# 
  7365     0718                     	;# 
  7366     0719                     	;# 
  7367     071A                     	;# 
  7368     071B                     	;# 
  7369     071C                     	;# 
  7370     071D                     	;# 
  7371     071E                     	;# 
  7372     0796                     	;# 
  7373     0797                     	;# 
  7374     0798                     	;# 
  7375     0799                     	;# 
  7376     079A                     	;# 
  7377     079B                     	;# 
  7378     079C                     	;# 
  7379     079D                     	;# 
  7380     080C                     	;# 
  7381     080D                     	;# 
  7382     080E                     	;# 
  7383     080F                     	;# 
  7384     0810                     	;# 
  7385     0811                     	;# 
  7386     0813                     	;# 
  7387     0814                     	;# 
  7388     081A                     	;# 
  7389     081A                     	;# 
  7390     081B                     	;# 
  7391     081C                     	;# 
  7392     081C                     	;# 
  7393     081D                     	;# 
  7394     081E                     	;# 
  7395     081F                     	;# 
  7396     088C                     	;# 
  7397     088D                     	;# 
  7398     088E                     	;# 
  7399     088F                     	;# 
  7400     0890                     	;# 
  7401     0891                     	;# 
  7402     0892                     	;# 
  7403     0893                     	;# 
  7404     0895                     	;# 
  7405     0896                     	;# 
  7406     0897                     	;# 
  7407     0898                     	;# 
  7408     0899                     	;# 
  7409     089A                     	;# 
  7410     089B                     	;# 
  7411     090C                     	;# 
  7412     090E                     	;# 
  7413     090F                     	;# 
  7414     091F                     	;# 
  7415     098F                     	;# 
  7416     098F                     	;# 
  7417     0990                     	;# 
  7418     0991                     	;# 
  7419     0992                     	;# 
  7420     0993                     	;# 
  7421     0994                     	;# 
  7422     0995                     	;# 
  7423     0996                     	;# 
  7424     0997                     	;# 
  7425     0A19                     	;# 
  7426     0A19                     	;# 
  7427     0A1A                     	;# 
  7428     0A1A                     	;# 
  7429     0A1B                     	;# 
  7430     0A1B                     	;# 
  7431     0A1B                     	;# 
  7432     0A1C                     	;# 
  7433     0A1C                     	;# 
  7434     0A1D                     	;# 
  7435     0A1D                     	;# 
  7436     0A1E                     	;# 
  7437     0A1E                     	;# 
  7438     0A1F                     	;# 
  7439     0A1F                     	;# 
  7440     0A1F                     	;# 
  7441     1E0F                     	;# 
  7442     1E10                     	;# 
  7443     1E11                     	;# 
  7444     1E12                     	;# 
  7445     1E13                     	;# 
  7446     1E14                     	;# 
  7447     1E15                     	;# 
  7448     1E16                     	;# 
  7449     1E17                     	;# 
  7450     1E18                     	;# 
  7451     1E19                     	;# 
  7452     1E1A                     	;# 
  7453     1E1B                     	;# 
  7454     1E1C                     	;# 
  7455     1E1D                     	;# 
  7456     1E1E                     	;# 
  7457     1E1F                     	;# 
  7458     1E20                     	;# 
  7459     1E21                     	;# 
  7460     1E22                     	;# 
  7461     1E23                     	;# 
  7462     1E24                     	;# 
  7463     1E25                     	;# 
  7464     1E26                     	;# 
  7465     1E27                     	;# 
  7466     1E28                     	;# 
  7467     1E29                     	;# 
  7468     1E2A                     	;# 
  7469     1E2B                     	;# 
  7470     1E2C                     	;# 
  7471     1E2D                     	;# 
  7472     1E2E                     	;# 
  7473     1E2F                     	;# 
  7474     1E30                     	;# 
  7475     1E31                     	;# 
  7476     1E32                     	;# 
  7477     1E33                     	;# 
  7478     1E34                     	;# 
  7479     1E35                     	;# 
  7480     1E36                     	;# 
  7481     1E37                     	;# 
  7482     1E8F                     	;# 
  7483     1E90                     	;# 
  7484     1E91                     	;# 
  7485     1E92                     	;# 
  7486     1E93                     	;# 
  7487     1E94                     	;# 
  7488     1E95                     	;# 
  7489     1E96                     	;# 
  7490     1E97                     	;# 
  7491     1E9C                     	;# 
  7492     1E9D                     	;# 
  7493     1E9E                     	;# 
  7494     1EA1                     	;# 
  7495     1EA2                     	;# 
  7496     1EA3                     	;# 
  7497     1EA4                     	;# 
  7498     1EA5                     	;# 
  7499     1EA9                     	;# 
  7500     1EAA                     	;# 
  7501     1EAB                     	;# 
  7502     1EAC                     	;# 
  7503     1EB1                     	;# 
  7504     1EB2                     	;# 
  7505     1EB3                     	;# 
  7506     1EB8                     	;# 
  7507     1EB9                     	;# 
  7508     1EBA                     	;# 
  7509     1EBB                     	;# 
  7510     1EBC                     	;# 
  7511     1EBD                     	;# 
  7512     1EBE                     	;# 
  7513     1EC3                     	;# 
  7514     1EC5                     	;# 
  7515     1EC6                     	;# 
  7516     1EC7                     	;# 
  7517     1EC8                     	;# 
  7518     1EC9                     	;# 
  7519     1ECA                     	;# 
  7520     1ECB                     	;# 
  7521     1ECC                     	;# 
  7522     1ECD                     	;# 
  7523     1ECE                     	;# 
  7524     1F10                     	;# 
  7525     1F11                     	;# 
  7526     1F12                     	;# 
  7527     1F13                     	;# 
  7528     1F14                     	;# 
  7529     1F15                     	;# 
  7530     1F16                     	;# 
  7531     1F17                     	;# 
  7532     1F18                     	;# 
  7533     1F19                     	;# 
  7534     1F1A                     	;# 
  7535     1F1B                     	;# 
  7536     1F1C                     	;# 
  7537     1F1D                     	;# 
  7538     1F1E                     	;# 
  7539     1F1F                     	;# 
  7540     1F20                     	;# 
  7541     1F21                     	;# 
  7542     1F22                     	;# 
  7543     1F23                     	;# 
  7544     1F24                     	;# 
  7545     1F25                     	;# 
  7546     1F26                     	;# 
  7547     1F27                     	;# 
  7548     1F38                     	;# 
  7549     1F39                     	;# 
  7550     1F3A                     	;# 
  7551     1F3B                     	;# 
  7552     1F3C                     	;# 
  7553     1F3D                     	;# 
  7554     1F3E                     	;# 
  7555     1F3F                     	;# 
  7556     1F43                     	;# 
  7557     1F44                     	;# 
  7558     1F45                     	;# 
  7559     1F46                     	;# 
  7560     1F47                     	;# 
  7561     1F48                     	;# 
  7562     1F49                     	;# 
  7563     1F4A                     	;# 
  7564     1F4E                     	;# 
  7565     1F4F                     	;# 
  7566     1F50                     	;# 
  7567     1F51                     	;# 
  7568     1F52                     	;# 
  7569     1F53                     	;# 
  7570     1F54                     	;# 
  7571     1F55                     	;# 
  7572     1F65                     	;# 
  7573     1F66                     	;# 
  7574     1F67                     	;# 
  7575     1F68                     	;# 
  7576     1F69                     	;# 
  7577     1F6A                     	;# 
  7578     1F6B                     	;# 
  7579     1FE4                     	;# 
  7580     1FE5                     	;# 
  7581     1FE6                     	;# 
  7582     1FE7                     	;# 
  7583     1FE8                     	;# 
  7584     1FE8                     	;# 
  7585     1FE9                     	;# 
  7586     1FEA                     	;# 
  7587     1FEB                     	;# 
  7588     1FED                     	;# 
  7589     1FEE                     	;# 
  7590     1FEF                     	;# 
  7591     0000                     	;# 
  7592     0001                     	;# 
  7593     0002                     	;# 
  7594     0003                     	;# 
  7595     0004                     	;# 
  7596     0005                     	;# 
  7597     0006                     	;# 
  7598     0007                     	;# 
  7599     0008                     	;# 
  7600     0009                     	;# 
  7601     000A                     	;# 
  7602     000B                     	;# 
  7603     000C                     	;# 
  7604     000D                     	;# 
  7605     000E                     	;# 
  7606     0010                     	;# 
  7607     0012                     	;# 
  7608     0013                     	;# 
  7609     0014                     	;# 
  7610     0016                     	;# 
  7611     0018                     	;# 
  7612     0019                     	;# 
  7613     001A                     	;# 
  7614     001C                     	;# 
  7615     008C                     	;# 
  7616     008C                     	;# 
  7617     008D                     	;# 
  7618     008E                     	;# 
  7619     008E                     	;# 
  7620     008F                     	;# 
  7621     0090                     	;# 
  7622     0090                     	;# 
  7623     0091                     	;# 
  7624     0092                     	;# 
  7625     0092                     	;# 
  7626     0093                     	;# 
  7627     0094                     	;# 
  7628     0094                     	;# 
  7629     0095                     	;# 
  7630     0096                     	;# 
  7631     0096                     	;# 
  7632     0097                     	;# 
  7633     0098                     	;# 
  7634     0099                     	;# 
  7635     009A                     	;# 
  7636     009B                     	;# 
  7637     009B                     	;# 
  7638     009C                     	;# 
  7639     009D                     	;# 
  7640     009D                     	;# 
  7641     009E                     	;# 
  7642     009F                     	;# 
  7643     010C                     	;# 
  7644     010C                     	;# 
  7645     010D                     	;# 
  7646     010E                     	;# 
  7647     010F                     	;# 
  7648     010F                     	;# 
  7649     0110                     	;# 
  7650     0111                     	;# 
  7651     0112                     	;# 
  7652     0113                     	;# 
  7653     0114                     	;# 
  7654     0115                     	;# 
  7655     0116                     	;# 
  7656     0117                     	;# 
  7657     0118                     	;# 
  7658     0119                     	;# 
  7659     0119                     	;# 
  7660     0119                     	;# 
  7661     011A                     	;# 
  7662     011A                     	;# 
  7663     011A                     	;# 
  7664     011B                     	;# 
  7665     011B                     	;# 
  7666     011B                     	;# 
  7667     011B                     	;# 
  7668     011B                     	;# 
  7669     011C                     	;# 
  7670     011C                     	;# 
  7671     011C                     	;# 
  7672     011D                     	;# 
  7673     011D                     	;# 
  7674     011D                     	;# 
  7675     011E                     	;# 
  7676     011E                     	;# 
  7677     011E                     	;# 
  7678     011F                     	;# 
  7679     011F                     	;# 
  7680     011F                     	;# 
  7681     011F                     	;# 
  7682     011F                     	;# 
  7683     018C                     	;# 
  7684     018D                     	;# 
  7685     018E                     	;# 
  7686     018F                     	;# 
  7687     0190                     	;# 
  7688     0191                     	;# 
  7689     0192                     	;# 
  7690     0196                     	;# 
  7691     0197                     	;# 
  7692     0198                     	;# 
  7693     0199                     	;# 
  7694     019A                     	;# 
  7695     019B                     	;# 
  7696     019C                     	;# 
  7697     020C                     	;# 
  7698     020D                     	;# 
  7699     020E                     	;# 
  7700     020E                     	;# 
  7701     020F                     	;# 
  7702     020F                     	;# 
  7703     0210                     	;# 
  7704     0210                     	;# 
  7705     0211                     	;# 
  7706     0211                     	;# 
  7707     0212                     	;# 
  7708     0213                     	;# 
  7709     0214                     	;# 
  7710     0214                     	;# 
  7711     0215                     	;# 
  7712     0215                     	;# 
  7713     0216                     	;# 
  7714     0216                     	;# 
  7715     0217                     	;# 
  7716     0217                     	;# 
  7717     0218                     	;# 
  7718     0219                     	;# 
  7719     021A                     	;# 
  7720     021A                     	;# 
  7721     021B                     	;# 
  7722     021B                     	;# 
  7723     021C                     	;# 
  7724     021C                     	;# 
  7725     021D                     	;# 
  7726     021D                     	;# 
  7727     021E                     	;# 
  7728     021F                     	;# 
  7729     028C                     	;# 
  7730     028C                     	;# 
  7731     028D                     	;# 
  7732     028D                     	;# 
  7733     028E                     	;# 
  7734     028F                     	;# 
  7735     0290                     	;# 
  7736     0291                     	;# 
  7737     0292                     	;# 
  7738     0292                     	;# 
  7739     0293                     	;# 
  7740     0293                     	;# 
  7741     0294                     	;# 
  7742     0295                     	;# 
  7743     0296                     	;# 
  7744     0297                     	;# 
  7745     0298                     	;# 
  7746     0298                     	;# 
  7747     0299                     	;# 
  7748     0299                     	;# 
  7749     029A                     	;# 
  7750     029B                     	;# 
  7751     029C                     	;# 
  7752     029D                     	;# 
  7753     029F                     	;# 
  7754     030C                     	;# 
  7755     030C                     	;# 
  7756     030D                     	;# 
  7757     030E                     	;# 
  7758     030F                     	;# 
  7759     0310                     	;# 
  7760     0310                     	;# 
  7761     0311                     	;# 
  7762     0312                     	;# 
  7763     0313                     	;# 
  7764     0314                     	;# 
  7765     0314                     	;# 
  7766     0315                     	;# 
  7767     0316                     	;# 
  7768     0317                     	;# 
  7769     0318                     	;# 
  7770     0318                     	;# 
  7771     0319                     	;# 
  7772     031A                     	;# 
  7773     031B                     	;# 
  7774     031C                     	;# 
  7775     031C                     	;# 
  7776     031D                     	;# 
  7777     031E                     	;# 
  7778     031F                     	;# 
  7779     038C                     	;# 
  7780     038C                     	;# 
  7781     038D                     	;# 
  7782     038E                     	;# 
  7783     0390                     	;# 
  7784     0390                     	;# 
  7785     0391                     	;# 
  7786     0392                     	;# 
  7787     048C                     	;# 
  7788     048C                     	;# 
  7789     048D                     	;# 
  7790     048E                     	;# 
  7791     048F                     	;# 
  7792     048F                     	;# 
  7793     0490                     	;# 
  7794     0491                     	;# 
  7795     0492                     	;# 
  7796     0492                     	;# 
  7797     0493                     	;# 
  7798     0494                     	;# 
  7799     0495                     	;# 
  7800     0495                     	;# 
  7801     0496                     	;# 
  7802     0497                     	;# 
  7803     0498                     	;# 
  7804     0499                     	;# 
  7805     049A                     	;# 
  7806     049B                     	;# 
  7807     049C                     	;# 
  7808     049D                     	;# 
  7809     050C                     	;# 
  7810     050C                     	;# 
  7811     050D                     	;# 
  7812     050E                     	;# 
  7813     050F                     	;# 
  7814     050F                     	;# 
  7815     0510                     	;# 
  7816     0511                     	;# 
  7817     0512                     	;# 
  7818     0512                     	;# 
  7819     0513                     	;# 
  7820     0514                     	;# 
  7821     0515                     	;# 
  7822     0515                     	;# 
  7823     0516                     	;# 
  7824     0517                     	;# 
  7825     0518                     	;# 
  7826     0519                     	;# 
  7827     051A                     	;# 
  7828     051B                     	;# 
  7829     051C                     	;# 
  7830     051D                     	;# 
  7831     058C                     	;# 
  7832     058C                     	;# 
  7833     058D                     	;# 
  7834     058E                     	;# 
  7835     058F                     	;# 
  7836     058F                     	;# 
  7837     0590                     	;# 
  7838     0591                     	;# 
  7839     0592                     	;# 
  7840     0593                     	;# 
  7841     059C                     	;# 
  7842     059C                     	;# 
  7843     059D                     	;# 
  7844     059D                     	;# 
  7845     059E                     	;# 
  7846     059F                     	;# 
  7847     060C                     	;# 
  7848     060C                     	;# 
  7849     060D                     	;# 
  7850     060D                     	;# 
  7851     060E                     	;# 
  7852     060F                     	;# 
  7853     0610                     	;# 
  7854     0611                     	;# 
  7855     0612                     	;# 
  7856     0613                     	;# 
  7857     0614                     	;# 
  7858     0616                     	;# 
  7859     0616                     	;# 
  7860     0617                     	;# 
  7861     0617                     	;# 
  7862     0618                     	;# 
  7863     0619                     	;# 
  7864     061A                     	;# 
  7865     061B                     	;# 
  7866     061C                     	;# 
  7867     061D                     	;# 
  7868     061E                     	;# 
  7869     068C                     	;# 
  7870     068D                     	;# 
  7871     068E                     	;# 
  7872     068F                     	;# 
  7873     0690                     	;# 
  7874     0691                     	;# 
  7875     0692                     	;# 
  7876     0693                     	;# 
  7877     0694                     	;# 
  7878     070C                     	;# 
  7879     070D                     	;# 
  7880     070E                     	;# 
  7881     070F                     	;# 
  7882     0710                     	;# 
  7883     0711                     	;# 
  7884     0712                     	;# 
  7885     0713                     	;# 
  7886     0714                     	;# 
  7887     0716                     	;# 
  7888     0717                     	;# 
  7889     0718                     	;# 
  7890     0719                     	;# 
  7891     071A                     	;# 
  7892     071B                     	;# 
  7893     071C                     	;# 
  7894     071D                     	;# 
  7895     071E                     	;# 
  7896     0796                     	;# 
  7897     0797                     	;# 
  7898     0798                     	;# 
  7899     0799                     	;# 
  7900     079A                     	;# 
  7901     079B                     	;# 
  7902     079C                     	;# 
  7903     079D                     	;# 
  7904     080C                     	;# 
  7905     080D                     	;# 
  7906     080E                     	;# 
  7907     080F                     	;# 
  7908     0810                     	;# 
  7909     0811                     	;# 
  7910     0813                     	;# 
  7911     0814                     	;# 
  7912     081A                     	;# 
  7913     081A                     	;# 
  7914     081B                     	;# 
  7915     081C                     	;# 
  7916     081C                     	;# 
  7917     081D                     	;# 
  7918     081E                     	;# 
  7919     081F                     	;# 
  7920     088C                     	;# 
  7921     088D                     	;# 
  7922     088E                     	;# 
  7923     088F                     	;# 
  7924     0890                     	;# 
  7925     0891                     	;# 
  7926     0892                     	;# 
  7927     0893                     	;# 
  7928     0895                     	;# 
  7929     0896                     	;# 
  7930     0897                     	;# 
  7931     0898                     	;# 
  7932     0899                     	;# 
  7933     089A                     	;# 
  7934     089B                     	;# 
  7935     090C                     	;# 
  7936     090E                     	;# 
  7937     090F                     	;# 
  7938     091F                     	;# 
  7939     098F                     	;# 
  7940     098F                     	;# 
  7941     0990                     	;# 
  7942     0991                     	;# 
  7943     0992                     	;# 
  7944     0993                     	;# 
  7945     0994                     	;# 
  7946     0995                     	;# 
  7947     0996                     	;# 
  7948     0997                     	;# 
  7949     0A19                     	;# 
  7950     0A19                     	;# 
  7951     0A1A                     	;# 
  7952     0A1A                     	;# 
  7953     0A1B                     	;# 
  7954     0A1B                     	;# 
  7955     0A1B                     	;# 
  7956     0A1C                     	;# 
  7957     0A1C                     	;# 
  7958     0A1D                     	;# 
  7959     0A1D                     	;# 
  7960     0A1E                     	;# 
  7961     0A1E                     	;# 
  7962     0A1F                     	;# 
  7963     0A1F                     	;# 
  7964     0A1F                     	;# 
  7965     1E0F                     	;# 
  7966     1E10                     	;# 
  7967     1E11                     	;# 
  7968     1E12                     	;# 
  7969     1E13                     	;# 
  7970     1E14                     	;# 
  7971     1E15                     	;# 
  7972     1E16                     	;# 
  7973     1E17                     	;# 
  7974     1E18                     	;# 
  7975     1E19                     	;# 
  7976     1E1A                     	;# 
  7977     1E1B                     	;# 
  7978     1E1C                     	;# 
  7979     1E1D                     	;# 
  7980     1E1E                     	;# 
  7981     1E1F                     	;# 
  7982     1E20                     	;# 
  7983     1E21                     	;# 
  7984     1E22                     	;# 
  7985     1E23                     	;# 
  7986     1E24                     	;# 
  7987     1E25                     	;# 
  7988     1E26                     	;# 
  7989     1E27                     	;# 
  7990     1E28                     	;# 
  7991     1E29                     	;# 
  7992     1E2A                     	;# 
  7993     1E2B                     	;# 
  7994     1E2C                     	;# 
  7995     1E2D                     	;# 
  7996     1E2E                     	;# 
  7997     1E2F                     	;# 
  7998     1E30                     	;# 
  7999     1E31                     	;# 
  8000     1E32                     	;# 
  8001     1E33                     	;# 
  8002     1E34                     	;# 
  8003     1E35                     	;# 
  8004     1E36                     	;# 
  8005     1E37                     	;# 
  8006     1E8F                     	;# 
  8007     1E90                     	;# 
  8008     1E91                     	;# 
  8009     1E92                     	;# 
  8010     1E93                     	;# 
  8011     1E94                     	;# 
  8012     1E95                     	;# 
  8013     1E96                     	;# 
  8014     1E97                     	;# 
  8015     1E9C                     	;# 
  8016     1E9D                     	;# 
  8017     1E9E                     	;# 
  8018     1EA1                     	;# 
  8019     1EA2                     	;# 
  8020     1EA3                     	;# 
  8021     1EA4                     	;# 
  8022     1EA5                     	;# 
  8023     1EA9                     	;# 
  8024     1EAA                     	;# 
  8025     1EAB                     	;# 
  8026     1EAC                     	;# 
  8027     1EB1                     	;# 
  8028     1EB2                     	;# 
  8029     1EB3                     	;# 
  8030     1EB8                     	;# 
  8031     1EB9                     	;# 
  8032     1EBA                     	;# 
  8033     1EBB                     	;# 
  8034     1EBC                     	;# 
  8035     1EBD                     	;# 
  8036     1EBE                     	;# 
  8037     1EC3                     	;# 
  8038     1EC5                     	;# 
  8039     1EC6                     	;# 
  8040     1EC7                     	;# 
  8041     1EC8                     	;# 
  8042     1EC9                     	;# 
  8043     1ECA                     	;# 
  8044     1ECB                     	;# 
  8045     1ECC                     	;# 
  8046     1ECD                     	;# 
  8047     1ECE                     	;# 
  8048     1F10                     	;# 
  8049     1F11                     	;# 
  8050     1F12                     	;# 
  8051     1F13                     	;# 
  8052     1F14                     	;# 
  8053     1F15                     	;# 
  8054     1F16                     	;# 
  8055     1F17                     	;# 
  8056     1F18                     	;# 
  8057     1F19                     	;# 
  8058     1F1A                     	;# 
  8059     1F1B                     	;# 
  8060     1F1C                     	;# 
  8061     1F1D                     	;# 
  8062     1F1E                     	;# 
  8063     1F1F                     	;# 
  8064     1F20                     	;# 
  8065     1F21                     	;# 
  8066     1F22                     	;# 
  8067     1F23                     	;# 
  8068     1F24                     	;# 
  8069     1F25                     	;# 
  8070     1F26                     	;# 
  8071     1F27                     	;# 
  8072     1F38                     	;# 
  8073     1F39                     	;# 
  8074     1F3A                     	;# 
  8075     1F3B                     	;# 
  8076     1F3C                     	;# 
  8077     1F3D                     	;# 
  8078     1F3E                     	;# 
  8079     1F3F                     	;# 
  8080     1F43                     	;# 
  8081     1F44                     	;# 
  8082     1F45                     	;# 
  8083     1F46                     	;# 
  8084     1F47                     	;# 
  8085     1F48                     	;# 
  8086     1F49                     	;# 
  8087     1F4A                     	;# 
  8088     1F4E                     	;# 
  8089     1F4F                     	;# 
  8090     1F50                     	;# 
  8091     1F51                     	;# 
  8092     1F52                     	;# 
  8093     1F53                     	;# 
  8094     1F54                     	;# 
  8095     1F55                     	;# 
  8096     1F65                     	;# 
  8097     1F66                     	;# 
  8098     1F67                     	;# 
  8099     1F68                     	;# 
  8100     1F69                     	;# 
  8101     1F6A                     	;# 
  8102     1F6B                     	;# 
  8103     1FE4                     	;# 
  8104     1FE5                     	;# 
  8105     1FE6                     	;# 
  8106     1FE7                     	;# 
  8107     1FE8                     	;# 
  8108     1FE8                     	;# 
  8109     1FE9                     	;# 
  8110     1FEA                     	;# 
  8111     1FEB                     	;# 
  8112     1FED                     	;# 
  8113     1FEE                     	;# 
  8114     1FEF                     	;# 
  8115     0000                     	;# 
  8116     0001                     	;# 
  8117     0002                     	;# 
  8118     0003                     	;# 
  8119     0004                     	;# 
  8120     0005                     	;# 
  8121     0006                     	;# 
  8122     0007                     	;# 
  8123     0008                     	;# 
  8124     0009                     	;# 
  8125     000A                     	;# 
  8126     000B                     	;# 
  8127     000C                     	;# 
  8128     000D                     	;# 
  8129     000E                     	;# 
  8130     0010                     	;# 
  8131     0012                     	;# 
  8132     0013                     	;# 
  8133     0014                     	;# 
  8134     0016                     	;# 
  8135     0018                     	;# 
  8136     0019                     	;# 
  8137     001A                     	;# 
  8138     001C                     	;# 
  8139     008C                     	;# 
  8140     008C                     	;# 
  8141     008D                     	;# 
  8142     008E                     	;# 
  8143     008E                     	;# 
  8144     008F                     	;# 
  8145     0090                     	;# 
  8146     0090                     	;# 
  8147     0091                     	;# 
  8148     0092                     	;# 
  8149     0092                     	;# 
  8150     0093                     	;# 
  8151     0094                     	;# 
  8152     0094                     	;# 
  8153     0095                     	;# 
  8154     0096                     	;# 
  8155     0096                     	;# 
  8156     0097                     	;# 
  8157     0098                     	;# 
  8158     0099                     	;# 
  8159     009A                     	;# 
  8160     009B                     	;# 
  8161     009B                     	;# 
  8162     009C                     	;# 
  8163     009D                     	;# 
  8164     009D                     	;# 
  8165     009E                     	;# 
  8166     009F                     	;# 
  8167     010C                     	;# 
  8168     010C                     	;# 
  8169     010D                     	;# 
  8170     010E                     	;# 
  8171     010F                     	;# 
  8172     010F                     	;# 
  8173     0110                     	;# 
  8174     0111                     	;# 
  8175     0112                     	;# 
  8176     0113                     	;# 
  8177     0114                     	;# 
  8178     0115                     	;# 
  8179     0116                     	;# 
  8180     0117                     	;# 
  8181     0118                     	;# 
  8182     0119                     	;# 
  8183     0119                     	;# 
  8184     0119                     	;# 
  8185     011A                     	;# 
  8186     011A                     	;# 
  8187     011A                     	;# 
  8188     011B                     	;# 
  8189     011B                     	;# 
  8190     011B                     	;# 
  8191     011B                     	;# 
  8192     011B                     	;# 
  8193     011C                     	;# 
  8194     011C                     	;# 
  8195     011C                     	;# 
  8196     011D                     	;# 
  8197     011D                     	;# 
  8198     011D                     	;# 
  8199     011E                     	;# 
  8200     011E                     	;# 
  8201     011E                     	;# 
  8202     011F                     	;# 
  8203     011F                     	;# 
  8204     011F                     	;# 
  8205     011F                     	;# 
  8206     011F                     	;# 
  8207     018C                     	;# 
  8208     018D                     	;# 
  8209     018E                     	;# 
  8210     018F                     	;# 
  8211     0190                     	;# 
  8212     0191                     	;# 
  8213     0192                     	;# 
  8214     0196                     	;# 
  8215     0197                     	;# 
  8216     0198                     	;# 
  8217     0199                     	;# 
  8218     019A                     	;# 
  8219     019B                     	;# 
  8220     019C                     	;# 
  8221     020C                     	;# 
  8222     020D                     	;# 
  8223     020E                     	;# 
  8224     020E                     	;# 
  8225     020F                     	;# 
  8226     020F                     	;# 
  8227     0210                     	;# 
  8228     0210                     	;# 
  8229     0211                     	;# 
  8230     0211                     	;# 
  8231     0212                     	;# 
  8232     0213                     	;# 
  8233     0214                     	;# 
  8234     0214                     	;# 
  8235     0215                     	;# 
  8236     0215                     	;# 
  8237     0216                     	;# 
  8238     0216                     	;# 
  8239     0217                     	;# 
  8240     0217                     	;# 
  8241     0218                     	;# 
  8242     0219                     	;# 
  8243     021A                     	;# 
  8244     021A                     	;# 
  8245     021B                     	;# 
  8246     021B                     	;# 
  8247     021C                     	;# 
  8248     021C                     	;# 
  8249     021D                     	;# 
  8250     021D                     	;# 
  8251     021E                     	;# 
  8252     021F                     	;# 
  8253     028C                     	;# 
  8254     028C                     	;# 
  8255     028D                     	;# 
  8256     028D                     	;# 
  8257     028E                     	;# 
  8258     028F                     	;# 
  8259     0290                     	;# 
  8260     0291                     	;# 
  8261     0292                     	;# 
  8262     0292                     	;# 
  8263     0293                     	;# 
  8264     0293                     	;# 
  8265     0294                     	;# 
  8266     0295                     	;# 
  8267     0296                     	;# 
  8268     0297                     	;# 
  8269     0298                     	;# 
  8270     0298                     	;# 
  8271     0299                     	;# 
  8272     0299                     	;# 
  8273     029A                     	;# 
  8274     029B                     	;# 
  8275     029C                     	;# 
  8276     029D                     	;# 
  8277     029F                     	;# 
  8278     030C                     	;# 
  8279     030C                     	;# 
  8280     030D                     	;# 
  8281     030E                     	;# 
  8282     030F                     	;# 
  8283     0310                     	;# 
  8284     0310                     	;# 
  8285     0311                     	;# 
  8286     0312                     	;# 
  8287     0313                     	;# 
  8288     0314                     	;# 
  8289     0314                     	;# 
  8290     0315                     	;# 
  8291     0316                     	;# 
  8292     0317                     	;# 
  8293     0318                     	;# 
  8294     0318                     	;# 
  8295     0319                     	;# 
  8296     031A                     	;# 
  8297     031B                     	;# 
  8298     031C                     	;# 
  8299     031C                     	;# 
  8300     031D                     	;# 
  8301     031E                     	;# 
  8302     031F                     	;# 
  8303     038C                     	;# 
  8304     038C                     	;# 
  8305     038D                     	;# 
  8306     038E                     	;# 
  8307     0390                     	;# 
  8308     0390                     	;# 
  8309     0391                     	;# 
  8310     0392                     	;# 
  8311     048C                     	;# 
  8312     048C                     	;# 
  8313     048D                     	;# 
  8314     048E                     	;# 
  8315     048F                     	;# 
  8316     048F                     	;# 
  8317     0490                     	;# 
  8318     0491                     	;# 
  8319     0492                     	;# 
  8320     0492                     	;# 
  8321     0493                     	;# 
  8322     0494                     	;# 
  8323     0495                     	;# 
  8324     0495                     	;# 
  8325     0496                     	;# 
  8326     0497                     	;# 
  8327     0498                     	;# 
  8328     0499                     	;# 
  8329     049A                     	;# 
  8330     049B                     	;# 
  8331     049C                     	;# 
  8332     049D                     	;# 
  8333     050C                     	;# 
  8334     050C                     	;# 
  8335     050D                     	;# 
  8336     050E                     	;# 
  8337     050F                     	;# 
  8338     050F                     	;# 
  8339     0510                     	;# 
  8340     0511                     	;# 
  8341     0512                     	;# 
  8342     0512                     	;# 
  8343     0513                     	;# 
  8344     0514                     	;# 
  8345     0515                     	;# 
  8346     0515                     	;# 
  8347     0516                     	;# 
  8348     0517                     	;# 
  8349     0518                     	;# 
  8350     0519                     	;# 
  8351     051A                     	;# 
  8352     051B                     	;# 
  8353     051C                     	;# 
  8354     051D                     	;# 
  8355     058C                     	;# 
  8356     058C                     	;# 
  8357     058D                     	;# 
  8358     058E                     	;# 
  8359     058F                     	;# 
  8360     058F                     	;# 
  8361     0590                     	;# 
  8362     0591                     	;# 
  8363     0592                     	;# 
  8364     0593                     	;# 
  8365     059C                     	;# 
  8366     059C                     	;# 
  8367     059D                     	;# 
  8368     059D                     	;# 
  8369     059E                     	;# 
  8370     059F                     	;# 
  8371     060C                     	;# 
  8372     060C                     	;# 
  8373     060D                     	;# 
  8374     060D                     	;# 
  8375     060E                     	;# 
  8376     060F                     	;# 
  8377     0610                     	;# 
  8378     0611                     	;# 
  8379     0612                     	;# 
  8380     0613                     	;# 
  8381     0614                     	;# 
  8382     0616                     	;# 
  8383     0616                     	;# 
  8384     0617                     	;# 
  8385     0617                     	;# 
  8386     0618                     	;# 
  8387     0619                     	;# 
  8388     061A                     	;# 
  8389     061B                     	;# 
  8390     061C                     	;# 
  8391     061D                     	;# 
  8392     061E                     	;# 
  8393     068C                     	;# 
  8394     068D                     	;# 
  8395     068E                     	;# 
  8396     068F                     	;# 
  8397     0690                     	;# 
  8398     0691                     	;# 
  8399     0692                     	;# 
  8400     0693                     	;# 
  8401     0694                     	;# 
  8402     070C                     	;# 
  8403     070D                     	;# 
  8404     070E                     	;# 
  8405     070F                     	;# 
  8406     0710                     	;# 
  8407     0711                     	;# 
  8408     0712                     	;# 
  8409     0713                     	;# 
  8410     0714                     	;# 
  8411     0716                     	;# 
  8412     0717                     	;# 
  8413     0718                     	;# 
  8414     0719                     	;# 
  8415     071A                     	;# 
  8416     071B                     	;# 
  8417     071C                     	;# 
  8418     071D                     	;# 
  8419     071E                     	;# 
  8420     0796                     	;# 
  8421     0797                     	;# 
  8422     0798                     	;# 
  8423     0799                     	;# 
  8424     079A                     	;# 
  8425     079B                     	;# 
  8426     079C                     	;# 
  8427     079D                     	;# 
  8428     080C                     	;# 
  8429     080D                     	;# 
  8430     080E                     	;# 
  8431     080F                     	;# 
  8432     0810                     	;# 
  8433     0811                     	;# 
  8434     0813                     	;# 
  8435     0814                     	;# 
  8436     081A                     	;# 
  8437     081A                     	;# 
  8438     081B                     	;# 
  8439     081C                     	;# 
  8440     081C                     	;# 
  8441     081D                     	;# 
  8442     081E                     	;# 
  8443     081F                     	;# 
  8444     088C                     	;# 
  8445     088D                     	;# 
  8446     088E                     	;# 
  8447     088F                     	;# 
  8448     0890                     	;# 
  8449     0891                     	;# 
  8450     0892                     	;# 
  8451     0893                     	;# 
  8452     0895                     	;# 
  8453     0896                     	;# 
  8454     0897                     	;# 
  8455     0898                     	;# 
  8456     0899                     	;# 
  8457     089A                     	;# 
  8458     089B                     	;# 
  8459     090C                     	;# 
  8460     090E                     	;# 
  8461     090F                     	;# 
  8462     091F                     	;# 
  8463     098F                     	;# 
  8464     098F                     	;# 
  8465     0990                     	;# 
  8466     0991                     	;# 
  8467     0992                     	;# 
  8468     0993                     	;# 
  8469     0994                     	;# 
  8470     0995                     	;# 
  8471     0996                     	;# 
  8472     0997                     	;# 
  8473     0A19                     	;# 
  8474     0A19                     	;# 
  8475     0A1A                     	;# 
  8476     0A1A                     	;# 
  8477     0A1B                     	;# 
  8478     0A1B                     	;# 
  8479     0A1B                     	;# 
  8480     0A1C                     	;# 
  8481     0A1C                     	;# 
  8482     0A1D                     	;# 
  8483     0A1D                     	;# 
  8484     0A1E                     	;# 
  8485     0A1E                     	;# 
  8486     0A1F                     	;# 
  8487     0A1F                     	;# 
  8488     0A1F                     	;# 
  8489     1E0F                     	;# 
  8490     1E10                     	;# 
  8491     1E11                     	;# 
  8492     1E12                     	;# 
  8493     1E13                     	;# 
  8494     1E14                     	;# 
  8495     1E15                     	;# 
  8496     1E16                     	;# 
  8497     1E17                     	;# 
  8498     1E18                     	;# 
  8499     1E19                     	;# 
  8500     1E1A                     	;# 
  8501     1E1B                     	;# 
  8502     1E1C                     	;# 
  8503     1E1D                     	;# 
  8504     1E1E                     	;# 
  8505     1E1F                     	;# 
  8506     1E20                     	;# 
  8507     1E21                     	;# 
  8508     1E22                     	;# 
  8509     1E23                     	;# 
  8510     1E24                     	;# 
  8511     1E25                     	;# 
  8512     1E26                     	;# 
  8513     1E27                     	;# 
  8514     1E28                     	;# 
  8515     1E29                     	;# 
  8516     1E2A                     	;# 
  8517     1E2B                     	;# 
  8518     1E2C                     	;# 
  8519     1E2D                     	;# 
  8520     1E2E                     	;# 
  8521     1E2F                     	;# 
  8522     1E30                     	;# 
  8523     1E31                     	;# 
  8524     1E32                     	;# 
  8525     1E33                     	;# 
  8526     1E34                     	;# 
  8527     1E35                     	;# 
  8528     1E36                     	;# 
  8529     1E37                     	;# 
  8530     1E8F                     	;# 
  8531     1E90                     	;# 
  8532     1E91                     	;# 
  8533     1E92                     	;# 
  8534     1E93                     	;# 
  8535     1E94                     	;# 
  8536     1E95                     	;# 
  8537     1E96                     	;# 
  8538     1E97                     	;# 
  8539     1E9C                     	;# 
  8540     1E9D                     	;# 
  8541     1E9E                     	;# 
  8542     1EA1                     	;# 
  8543     1EA2                     	;# 
  8544     1EA3                     	;# 
  8545     1EA4                     	;# 
  8546     1EA5                     	;# 
  8547     1EA9                     	;# 
  8548     1EAA                     	;# 
  8549     1EAB                     	;# 
  8550     1EAC                     	;# 
  8551     1EB1                     	;# 
  8552     1EB2                     	;# 
  8553     1EB3                     	;# 
  8554     1EB8                     	;# 
  8555     1EB9                     	;# 
  8556     1EBA                     	;# 
  8557     1EBB                     	;# 
  8558     1EBC                     	;# 
  8559     1EBD                     	;# 
  8560     1EBE                     	;# 
  8561     1EC3                     	;# 
  8562     1EC5                     	;# 
  8563     1EC6                     	;# 
  8564     1EC7                     	;# 
  8565     1EC8                     	;# 
  8566     1EC9                     	;# 
  8567     1ECA                     	;# 
  8568     1ECB                     	;# 
  8569     1ECC                     	;# 
  8570     1ECD                     	;# 
  8571     1ECE                     	;# 
  8572     1F10                     	;# 
  8573     1F11                     	;# 
  8574     1F12                     	;# 
  8575     1F13                     	;# 
  8576     1F14                     	;# 
  8577     1F15                     	;# 
  8578     1F16                     	;# 
  8579     1F17                     	;# 
  8580     1F18                     	;# 
  8581     1F19                     	;# 
  8582     1F1A                     	;# 
  8583     1F1B                     	;# 
  8584     1F1C                     	;# 
  8585     1F1D                     	;# 
  8586     1F1E                     	;# 
  8587     1F1F                     	;# 
  8588     1F20                     	;# 
  8589     1F21                     	;# 
  8590     1F22                     	;# 
  8591     1F23                     	;# 
  8592     1F24                     	;# 
  8593     1F25                     	;# 
  8594     1F26                     	;# 
  8595     1F27                     	;# 
  8596     1F38                     	;# 
  8597     1F39                     	;# 
  8598     1F3A                     	;# 
  8599     1F3B                     	;# 
  8600     1F3C                     	;# 
  8601     1F3D                     	;# 
  8602     1F3E                     	;# 
  8603     1F3F                     	;# 
  8604     1F43                     	;# 
  8605     1F44                     	;# 
  8606     1F45                     	;# 
  8607     1F46                     	;# 
  8608     1F47                     	;# 
  8609     1F48                     	;# 
  8610     1F49                     	;# 
  8611     1F4A                     	;# 
  8612     1F4E                     	;# 
  8613     1F4F                     	;# 
  8614     1F50                     	;# 
  8615     1F51                     	;# 
  8616     1F52                     	;# 
  8617     1F53                     	;# 
  8618     1F54                     	;# 
  8619     1F55                     	;# 
  8620     1F65                     	;# 
  8621     1F66                     	;# 
  8622     1F67                     	;# 
  8623     1F68                     	;# 
  8624     1F69                     	;# 
  8625     1F6A                     	;# 
  8626     1F6B                     	;# 
  8627     1FE4                     	;# 
  8628     1FE5                     	;# 
  8629     1FE6                     	;# 
  8630     1FE7                     	;# 
  8631     1FE8                     	;# 
  8632     1FE8                     	;# 
  8633     1FE9                     	;# 
  8634     1FEA                     	;# 
  8635     1FEB                     	;# 
  8636     1FED                     	;# 
  8637     1FEE                     	;# 
  8638     1FEF                     	;# 
  8639     0000                     	;# 
  8640     0001                     	;# 
  8641     0002                     	;# 
  8642     0003                     	;# 
  8643     0004                     	;# 
  8644     0005                     	;# 
  8645     0006                     	;# 
  8646     0007                     	;# 
  8647     0008                     	;# 
  8648     0009                     	;# 
  8649     000A                     	;# 
  8650     000B                     	;# 
  8651     000C                     	;# 
  8652     000D                     	;# 
  8653     000E                     	;# 
  8654     0010                     	;# 
  8655     0012                     	;# 
  8656     0013                     	;# 
  8657     0014                     	;# 
  8658     0016                     	;# 
  8659     0018                     	;# 
  8660     0019                     	;# 
  8661     001A                     	;# 
  8662     001C                     	;# 
  8663     008C                     	;# 
  8664     008C                     	;# 
  8665     008D                     	;# 
  8666     008E                     	;# 
  8667     008E                     	;# 
  8668     008F                     	;# 
  8669     0090                     	;# 
  8670     0090                     	;# 
  8671     0091                     	;# 
  8672     0092                     	;# 
  8673     0092                     	;# 
  8674     0093                     	;# 
  8675     0094                     	;# 
  8676     0094                     	;# 
  8677     0095                     	;# 
  8678     0096                     	;# 
  8679     0096                     	;# 
  8680     0097                     	;# 
  8681     0098                     	;# 
  8682     0099                     	;# 
  8683     009A                     	;# 
  8684     009B                     	;# 
  8685     009B                     	;# 
  8686     009C                     	;# 
  8687     009D                     	;# 
  8688     009D                     	;# 
  8689     009E                     	;# 
  8690     009F                     	;# 
  8691     010C                     	;# 
  8692     010C                     	;# 
  8693     010D                     	;# 
  8694     010E                     	;# 
  8695     010F                     	;# 
  8696     010F                     	;# 
  8697     0110                     	;# 
  8698     0111                     	;# 
  8699     0112                     	;# 
  8700     0113                     	;# 
  8701     0114                     	;# 
  8702     0115                     	;# 
  8703     0116                     	;# 
  8704     0117                     	;# 
  8705     0118                     	;# 
  8706     0119                     	;# 
  8707     0119                     	;# 
  8708     0119                     	;# 
  8709     011A                     	;# 
  8710     011A                     	;# 
  8711     011A                     	;# 
  8712     011B                     	;# 
  8713     011B                     	;# 
  8714     011B                     	;# 
  8715     011B                     	;# 
  8716     011B                     	;# 
  8717     011C                     	;# 
  8718     011C                     	;# 
  8719     011C                     	;# 
  8720     011D                     	;# 
  8721     011D                     	;# 
  8722     011D                     	;# 
  8723     011E                     	;# 
  8724     011E                     	;# 
  8725     011E                     	;# 
  8726     011F                     	;# 
  8727     011F                     	;# 
  8728     011F                     	;# 
  8729     011F                     	;# 
  8730     011F                     	;# 
  8731     018C                     	;# 
  8732     018D                     	;# 
  8733     018E                     	;# 
  8734     018F                     	;# 
  8735     0190                     	;# 
  8736     0191                     	;# 
  8737     0192                     	;# 
  8738     0196                     	;# 
  8739     0197                     	;# 
  8740     0198                     	;# 
  8741     0199                     	;# 
  8742     019A                     	;# 
  8743     019B                     	;# 
  8744     019C                     	;# 
  8745     020C                     	;# 
  8746     020D                     	;# 
  8747     020E                     	;# 
  8748     020E                     	;# 
  8749     020F                     	;# 
  8750     020F                     	;# 
  8751     0210                     	;# 
  8752     0210                     	;# 
  8753     0211                     	;# 
  8754     0211                     	;# 
  8755     0212                     	;# 
  8756     0213                     	;# 
  8757     0214                     	;# 
  8758     0214                     	;# 
  8759     0215                     	;# 
  8760     0215                     	;# 
  8761     0216                     	;# 
  8762     0216                     	;# 
  8763     0217                     	;# 
  8764     0217                     	;# 
  8765     0218                     	;# 
  8766     0219                     	;# 
  8767     021A                     	;# 
  8768     021A                     	;# 
  8769     021B                     	;# 
  8770     021B                     	;# 
  8771     021C                     	;# 
  8772     021C                     	;# 
  8773     021D                     	;# 
  8774     021D                     	;# 
  8775     021E                     	;# 
  8776     021F                     	;# 
  8777     028C                     	;# 
  8778     028C                     	;# 
  8779     028D                     	;# 
  8780     028D                     	;# 
  8781     028E                     	;# 
  8782     028F                     	;# 
  8783     0290                     	;# 
  8784     0291                     	;# 
  8785     0292                     	;# 
  8786     0292                     	;# 
  8787     0293                     	;# 
  8788     0293                     	;# 
  8789     0294                     	;# 
  8790     0295                     	;# 
  8791     0296                     	;# 
  8792     0297                     	;# 
  8793     0298                     	;# 
  8794     0298                     	;# 
  8795     0299                     	;# 
  8796     0299                     	;# 
  8797     029A                     	;# 
  8798     029B                     	;# 
  8799     029C                     	;# 
  8800     029D                     	;# 
  8801     029F                     	;# 
  8802     030C                     	;# 
  8803     030C                     	;# 
  8804     030D                     	;# 
  8805     030E                     	;# 
  8806     030F                     	;# 
  8807     0310                     	;# 
  8808     0310                     	;# 
  8809     0311                     	;# 
  8810     0312                     	;# 
  8811     0313                     	;# 
  8812     0314                     	;# 
  8813     0314                     	;# 
  8814     0315                     	;# 
  8815     0316                     	;# 
  8816     0317                     	;# 
  8817     0318                     	;# 
  8818     0318                     	;# 
  8819     0319                     	;# 
  8820     031A                     	;# 
  8821     031B                     	;# 
  8822     031C                     	;# 
  8823     031C                     	;# 
  8824     031D                     	;# 
  8825     031E                     	;# 
  8826     031F                     	;# 
  8827     038C                     	;# 
  8828     038C                     	;# 
  8829     038D                     	;# 
  8830     038E                     	;# 
  8831     0390                     	;# 
  8832     0390                     	;# 
  8833     0391                     	;# 
  8834     0392                     	;# 
  8835     048C                     	;# 
  8836     048C                     	;# 
  8837     048D                     	;# 
  8838     048E                     	;# 
  8839     048F                     	;# 
  8840     048F                     	;# 
  8841     0490                     	;# 
  8842     0491                     	;# 
  8843     0492                     	;# 
  8844     0492                     	;# 
  8845     0493                     	;# 
  8846     0494                     	;# 
  8847     0495                     	;# 
  8848     0495                     	;# 
  8849     0496                     	;# 
  8850     0497                     	;# 
  8851     0498                     	;# 
  8852     0499                     	;# 
  8853     049A                     	;# 
  8854     049B                     	;# 
  8855     049C                     	;# 
  8856     049D                     	;# 
  8857     050C                     	;# 
  8858     050C                     	;# 
  8859     050D                     	;# 
  8860     050E                     	;# 
  8861     050F                     	;# 
  8862     050F                     	;# 
  8863     0510                     	;# 
  8864     0511                     	;# 
  8865     0512                     	;# 
  8866     0512                     	;# 
  8867     0513                     	;# 
  8868     0514                     	;# 
  8869     0515                     	;# 
  8870     0515                     	;# 
  8871     0516                     	;# 
  8872     0517                     	;# 
  8873     0518                     	;# 
  8874     0519                     	;# 
  8875     051A                     	;# 
  8876     051B                     	;# 
  8877     051C                     	;# 
  8878     051D                     	;# 
  8879     058C                     	;# 
  8880     058C                     	;# 
  8881     058D                     	;# 
  8882     058E                     	;# 
  8883     058F                     	;# 
  8884     058F                     	;# 
  8885     0590                     	;# 
  8886     0591                     	;# 
  8887     0592                     	;# 
  8888     0593                     	;# 
  8889     059C                     	;# 
  8890     059C                     	;# 
  8891     059D                     	;# 
  8892     059D                     	;# 
  8893     059E                     	;# 
  8894     059F                     	;# 
  8895     060C                     	;# 
  8896     060C                     	;# 
  8897     060D                     	;# 
  8898     060D                     	;# 
  8899     060E                     	;# 
  8900     060F                     	;# 
  8901     0610                     	;# 
  8902     0611                     	;# 
  8903     0612                     	;# 
  8904     0613                     	;# 
  8905     0614                     	;# 
  8906     0616                     	;# 
  8907     0616                     	;# 
  8908     0617                     	;# 
  8909     0617                     	;# 
  8910     0618                     	;# 
  8911     0619                     	;# 
  8912     061A                     	;# 
  8913     061B                     	;# 
  8914     061C                     	;# 
  8915     061D                     	;# 
  8916     061E                     	;# 
  8917     068C                     	;# 
  8918     068D                     	;# 
  8919     068E                     	;# 
  8920     068F                     	;# 
  8921     0690                     	;# 
  8922     0691                     	;# 
  8923     0692                     	;# 
  8924     0693                     	;# 
  8925     0694                     	;# 
  8926     070C                     	;# 
  8927     070D                     	;# 
  8928     070E                     	;# 
  8929     070F                     	;# 
  8930     0710                     	;# 
  8931     0711                     	;# 
  8932     0712                     	;# 
  8933     0713                     	;# 
  8934     0714                     	;# 
  8935     0716                     	;# 
  8936     0717                     	;# 
  8937     0718                     	;# 
  8938     0719                     	;# 
  8939     071A                     	;# 
  8940     071B                     	;# 
  8941     071C                     	;# 
  8942     071D                     	;# 
  8943     071E                     	;# 
  8944     0796                     	;# 
  8945     0797                     	;# 
  8946     0798                     	;# 
  8947     0799                     	;# 
  8948     079A                     	;# 
  8949     079B                     	;# 
  8950     079C                     	;# 
  8951     079D                     	;# 
  8952     080C                     	;# 
  8953     080D                     	;# 
  8954     080E                     	;# 
  8955     080F                     	;# 
  8956     0810                     	;# 
  8957     0811                     	;# 
  8958     0813                     	;# 
  8959     0814                     	;# 
  8960     081A                     	;# 
  8961     081A                     	;# 
  8962     081B                     	;# 
  8963     081C                     	;# 
  8964     081C                     	;# 
  8965     081D                     	;# 
  8966     081E                     	;# 
  8967     081F                     	;# 
  8968     088C                     	;# 
  8969     088D                     	;# 
  8970     088E                     	;# 
  8971     088F                     	;# 
  8972     0890                     	;# 
  8973     0891                     	;# 
  8974     0892                     	;# 
  8975     0893                     	;# 
  8976     0895                     	;# 
  8977     0896                     	;# 
  8978     0897                     	;# 
  8979     0898                     	;# 
  8980     0899                     	;# 
  8981     089A                     	;# 
  8982     089B                     	;# 
  8983     090C                     	;# 
  8984     090E                     	;# 
  8985     090F                     	;# 
  8986     091F                     	;# 
  8987     098F                     	;# 
  8988     098F                     	;# 
  8989     0990                     	;# 
  8990     0991                     	;# 
  8991     0992                     	;# 
  8992     0993                     	;# 
  8993     0994                     	;# 
  8994     0995                     	;# 
  8995     0996                     	;# 
  8996     0997                     	;# 
  8997     0A19                     	;# 
  8998     0A19                     	;# 
  8999     0A1A                     	;# 
  9000     0A1A                     	;# 
  9001     0A1B                     	;# 
  9002     0A1B                     	;# 
  9003     0A1B                     	;# 
  9004     0A1C                     	;# 
  9005     0A1C                     	;# 
  9006     0A1D                     	;# 
  9007     0A1D                     	;# 
  9008     0A1E                     	;# 
  9009     0A1E                     	;# 
  9010     0A1F                     	;# 
  9011     0A1F                     	;# 
  9012     0A1F                     	;# 
  9013     1E0F                     	;# 
  9014     1E10                     	;# 
  9015     1E11                     	;# 
  9016     1E12                     	;# 
  9017     1E13                     	;# 
  9018     1E14                     	;# 
  9019     1E15                     	;# 
  9020     1E16                     	;# 
  9021     1E17                     	;# 
  9022     1E18                     	;# 
  9023     1E19                     	;# 
  9024     1E1A                     	;# 
  9025     1E1B                     	;# 
  9026     1E1C                     	;# 
  9027     1E1D                     	;# 
  9028     1E1E                     	;# 
  9029     1E1F                     	;# 
  9030     1E20                     	;# 
  9031     1E21                     	;# 
  9032     1E22                     	;# 
  9033     1E23                     	;# 
  9034     1E24                     	;# 
  9035     1E25                     	;# 
  9036     1E26                     	;# 
  9037     1E27                     	;# 
  9038     1E28                     	;# 
  9039     1E29                     	;# 
  9040     1E2A                     	;# 
  9041     1E2B                     	;# 
  9042     1E2C                     	;# 
  9043     1E2D                     	;# 
  9044     1E2E                     	;# 
  9045     1E2F                     	;# 
  9046     1E30                     	;# 
  9047     1E31                     	;# 
  9048     1E32                     	;# 
  9049     1E33                     	;# 
  9050     1E34                     	;# 
  9051     1E35                     	;# 
  9052     1E36                     	;# 
  9053     1E37                     	;# 
  9054     1E8F                     	;# 
  9055     1E90                     	;# 
  9056     1E91                     	;# 
  9057     1E92                     	;# 
  9058     1E93                     	;# 
  9059     1E94                     	;# 
  9060     1E95                     	;# 
  9061     1E96                     	;# 
  9062     1E97                     	;# 
  9063     1E9C                     	;# 
  9064     1E9D                     	;# 
  9065     1E9E                     	;# 
  9066     1EA1                     	;# 
  9067     1EA2                     	;# 
  9068     1EA3                     	;# 
  9069     1EA4                     	;# 
  9070     1EA5                     	;# 
  9071     1EA9                     	;# 
  9072     1EAA                     	;# 
  9073     1EAB                     	;# 
  9074     1EAC                     	;# 
  9075     1EB1                     	;# 
  9076     1EB2                     	;# 
  9077     1EB3                     	;# 
  9078     1EB8                     	;# 
  9079     1EB9                     	;# 
  9080     1EBA                     	;# 
  9081     1EBB                     	;# 
  9082     1EBC                     	;# 
  9083     1EBD                     	;# 
  9084     1EBE                     	;# 
  9085     1EC3                     	;# 
  9086     1EC5                     	;# 
  9087     1EC6                     	;# 
  9088     1EC7                     	;# 
  9089     1EC8                     	;# 
  9090     1EC9                     	;# 
  9091     1ECA                     	;# 
  9092     1ECB                     	;# 
  9093     1ECC                     	;# 
  9094     1ECD                     	;# 
  9095     1ECE                     	;# 
  9096     1F10                     	;# 
  9097     1F11                     	;# 
  9098     1F12                     	;# 
  9099     1F13                     	;# 
  9100     1F14                     	;# 
  9101     1F15                     	;# 
  9102     1F16                     	;# 
  9103     1F17                     	;# 
  9104     1F18                     	;# 
  9105     1F19                     	;# 
  9106     1F1A                     	;# 
  9107     1F1B                     	;# 
  9108     1F1C                     	;# 
  9109     1F1D                     	;# 
  9110     1F1E                     	;# 
  9111     1F1F                     	;# 
  9112     1F20                     	;# 
  9113     1F21                     	;# 
  9114     1F22                     	;# 
  9115     1F23                     	;# 
  9116     1F24                     	;# 
  9117     1F25                     	;# 
  9118     1F26                     	;# 
  9119     1F27                     	;# 
  9120     1F38                     	;# 
  9121     1F39                     	;# 
  9122     1F3A                     	;# 
  9123     1F3B                     	;# 
  9124     1F3C                     	;# 
  9125     1F3D                     	;# 
  9126     1F3E                     	;# 
  9127     1F3F                     	;# 
  9128     1F43                     	;# 
  9129     1F44                     	;# 
  9130     1F45                     	;# 
  9131     1F46                     	;# 
  9132     1F47                     	;# 
  9133     1F48                     	;# 
  9134     1F49                     	;# 
  9135     1F4A                     	;# 
  9136     1F4E                     	;# 
  9137     1F4F                     	;# 
  9138     1F50                     	;# 
  9139     1F51                     	;# 
  9140     1F52                     	;# 
  9141     1F53                     	;# 
  9142     1F54                     	;# 
  9143     1F55                     	;# 
  9144     1F65                     	;# 
  9145     1F66                     	;# 
  9146     1F67                     	;# 
  9147     1F68                     	;# 
  9148     1F69                     	;# 
  9149     1F6A                     	;# 
  9150     1F6B                     	;# 
  9151     1FE4                     	;# 
  9152     1FE5                     	;# 
  9153     1FE6                     	;# 
  9154     1FE7                     	;# 
  9155     1FE8                     	;# 
  9156     1FE8                     	;# 
  9157     1FE9                     	;# 
  9158     1FEA                     	;# 
  9159     1FEB                     	;# 
  9160     1FED                     	;# 
  9161     1FEE                     	;# 
  9162     1FEF                     	;# 
  9163     0000                     	;# 
  9164     0001                     	;# 
  9165     0002                     	;# 
  9166     0003                     	;# 
  9167     0004                     	;# 
  9168     0005                     	;# 
  9169     0006                     	;# 
  9170     0007                     	;# 
  9171     0008                     	;# 
  9172     0009                     	;# 
  9173     000A                     	;# 
  9174     000B                     	;# 
  9175     000C                     	;# 
  9176     000D                     	;# 
  9177     000E                     	;# 
  9178     0010                     	;# 
  9179     0012                     	;# 
  9180     0013                     	;# 
  9181     0014                     	;# 
  9182     0016                     	;# 
  9183     0018                     	;# 
  9184     0019                     	;# 
  9185     001A                     	;# 
  9186     001C                     	;# 
  9187     008C                     	;# 
  9188     008C                     	;# 
  9189     008D                     	;# 
  9190     008E                     	;# 
  9191     008E                     	;# 
  9192     008F                     	;# 
  9193     0090                     	;# 
  9194     0090                     	;# 
  9195     0091                     	;# 
  9196     0092                     	;# 
  9197     0092                     	;# 
  9198     0093                     	;# 
  9199     0094                     	;# 
  9200     0094                     	;# 
  9201     0095                     	;# 
  9202     0096                     	;# 
  9203     0096                     	;# 
  9204     0097                     	;# 
  9205     0098                     	;# 
  9206     0099                     	;# 
  9207     009A                     	;# 
  9208     009B                     	;# 
  9209     009B                     	;# 
  9210     009C                     	;# 
  9211     009D                     	;# 
  9212     009D                     	;# 
  9213     009E                     	;# 
  9214     009F                     	;# 
  9215     010C                     	;# 
  9216     010C                     	;# 
  9217     010D                     	;# 
  9218     010E                     	;# 
  9219     010F                     	;# 
  9220     010F                     	;# 
  9221     0110                     	;# 
  9222     0111                     	;# 
  9223     0112                     	;# 
  9224     0113                     	;# 
  9225     0114                     	;# 
  9226     0115                     	;# 
  9227     0116                     	;# 
  9228     0117                     	;# 
  9229     0118                     	;# 
  9230     0119                     	;# 
  9231     0119                     	;# 
  9232     0119                     	;# 
  9233     011A                     	;# 
  9234     011A                     	;# 
  9235     011A                     	;# 
  9236     011B                     	;# 
  9237     011B                     	;# 
  9238     011B                     	;# 
  9239     011B                     	;# 
  9240     011B                     	;# 
  9241     011C                     	;# 
  9242     011C                     	;# 
  9243     011C                     	;# 
  9244     011D                     	;# 
  9245     011D                     	;# 
  9246     011D                     	;# 
  9247     011E                     	;# 
  9248     011E                     	;# 
  9249     011E                     	;# 
  9250     011F                     	;# 
  9251     011F                     	;# 
  9252     011F                     	;# 
  9253     011F                     	;# 
  9254     011F                     	;# 
  9255     018C                     	;# 
  9256     018D                     	;# 
  9257     018E                     	;# 
  9258     018F                     	;# 
  9259     0190                     	;# 
  9260     0191                     	;# 
  9261     0192                     	;# 
  9262     0196                     	;# 
  9263     0197                     	;# 
  9264     0198                     	;# 
  9265     0199                     	;# 
  9266     019A                     	;# 
  9267     019B                     	;# 
  9268     019C                     	;# 
  9269     020C                     	;# 
  9270     020D                     	;# 
  9271     020E                     	;# 
  9272     020E                     	;# 
  9273     020F                     	;# 
  9274     020F                     	;# 
  9275     0210                     	;# 
  9276     0210                     	;# 
  9277     0211                     	;# 
  9278     0211                     	;# 
  9279     0212                     	;# 
  9280     0213                     	;# 
  9281     0214                     	;# 
  9282     0214                     	;# 
  9283     0215                     	;# 
  9284     0215                     	;# 
  9285     0216                     	;# 
  9286     0216                     	;# 
  9287     0217                     	;# 
  9288     0217                     	;# 
  9289     0218                     	;# 
  9290     0219                     	;# 
  9291     021A                     	;# 
  9292     021A                     	;# 
  9293     021B                     	;# 
  9294     021B                     	;# 
  9295     021C                     	;# 
  9296     021C                     	;# 
  9297     021D                     	;# 
  9298     021D                     	;# 
  9299     021E                     	;# 
  9300     021F                     	;# 
  9301     028C                     	;# 
  9302     028C                     	;# 
  9303     028D                     	;# 
  9304     028D                     	;# 
  9305     028E                     	;# 
  9306     028F                     	;# 
  9307     0290                     	;# 
  9308     0291                     	;# 
  9309     0292                     	;# 
  9310     0292                     	;# 
  9311     0293                     	;# 
  9312     0293                     	;# 
  9313     0294                     	;# 
  9314     0295                     	;# 
  9315     0296                     	;# 
  9316     0297                     	;# 
  9317     0298                     	;# 
  9318     0298                     	;# 
  9319     0299                     	;# 
  9320     0299                     	;# 
  9321     029A                     	;# 
  9322     029B                     	;# 
  9323     029C                     	;# 
  9324     029D                     	;# 
  9325     029F                     	;# 
  9326     030C                     	;# 
  9327     030C                     	;# 
  9328     030D                     	;# 
  9329     030E                     	;# 
  9330     030F                     	;# 
  9331     0310                     	;# 
  9332     0310                     	;# 
  9333     0311                     	;# 
  9334     0312                     	;# 
  9335     0313                     	;# 
  9336     0314                     	;# 
  9337     0314                     	;# 
  9338     0315                     	;# 
  9339     0316                     	;# 
  9340     0317                     	;# 
  9341     0318                     	;# 
  9342     0318                     	;# 
  9343     0319                     	;# 
  9344     031A                     	;# 
  9345     031B                     	;# 
  9346     031C                     	;# 
  9347     031C                     	;# 
  9348     031D                     	;# 
  9349     031E                     	;# 
  9350     031F                     	;# 
  9351     038C                     	;# 
  9352     038C                     	;# 
  9353     038D                     	;# 
  9354     038E                     	;# 
  9355     0390                     	;# 
  9356     0390                     	;# 
  9357     0391                     	;# 
  9358     0392                     	;# 
  9359     048C                     	;# 
  9360     048C                     	;# 
  9361     048D                     	;# 
  9362     048E                     	;# 
  9363     048F                     	;# 
  9364     048F                     	;# 
  9365     0490                     	;# 
  9366     0491                     	;# 
  9367     0492                     	;# 
  9368     0492                     	;# 
  9369     0493                     	;# 
  9370     0494                     	;# 
  9371     0495                     	;# 
  9372     0495                     	;# 
  9373     0496                     	;# 
  9374     0497                     	;# 
  9375     0498                     	;# 
  9376     0499                     	;# 
  9377     049A                     	;# 
  9378     049B                     	;# 
  9379     049C                     	;# 
  9380     049D                     	;# 
  9381     050C                     	;# 
  9382     050C                     	;# 
  9383     050D                     	;# 
  9384     050E                     	;# 
  9385     050F                     	;# 
  9386     050F                     	;# 
  9387     0510                     	;# 
  9388     0511                     	;# 
  9389     0512                     	;# 
  9390     0512                     	;# 
  9391     0513                     	;# 
  9392     0514                     	;# 
  9393     0515                     	;# 
  9394     0515                     	;# 
  9395     0516                     	;# 
  9396     0517                     	;# 
  9397     0518                     	;# 
  9398     0519                     	;# 
  9399     051A                     	;# 
  9400     051B                     	;# 
  9401     051C                     	;# 
  9402     051D                     	;# 
  9403     058C                     	;# 
  9404     058C                     	;# 
  9405     058D                     	;# 
  9406     058E                     	;# 
  9407     058F                     	;# 
  9408     058F                     	;# 
  9409     0590                     	;# 
  9410     0591                     	;# 
  9411     0592                     	;# 
  9412     0593                     	;# 
  9413     059C                     	;# 
  9414     059C                     	;# 
  9415     059D                     	;# 
  9416     059D                     	;# 
  9417     059E                     	;# 
  9418     059F                     	;# 
  9419     060C                     	;# 
  9420     060C                     	;# 
  9421     060D                     	;# 
  9422     060D                     	;# 
  9423     060E                     	;# 
  9424     060F                     	;# 
  9425     0610                     	;# 
  9426     0611                     	;# 
  9427     0612                     	;# 
  9428     0613                     	;# 
  9429     0614                     	;# 
  9430     0616                     	;# 
  9431     0616                     	;# 
  9432     0617                     	;# 
  9433     0617                     	;# 
  9434     0618                     	;# 
  9435     0619                     	;# 
  9436     061A                     	;# 
  9437     061B                     	;# 
  9438     061C                     	;# 
  9439     061D                     	;# 
  9440     061E                     	;# 
  9441     068C                     	;# 
  9442     068D                     	;# 
  9443     068E                     	;# 
  9444     068F                     	;# 
  9445     0690                     	;# 
  9446     0691                     	;# 
  9447     0692                     	;# 
  9448     0693                     	;# 
  9449     0694                     	;# 
  9450     070C                     	;# 
  9451     070D                     	;# 
  9452     070E                     	;# 
  9453     070F                     	;# 
  9454     0710                     	;# 
  9455     0711                     	;# 
  9456     0712                     	;# 
  9457     0713                     	;# 
  9458     0714                     	;# 
  9459     0716                     	;# 
  9460     0717                     	;# 
  9461     0718                     	;# 
  9462     0719                     	;# 
  9463     071A                     	;# 
  9464     071B                     	;# 
  9465     071C                     	;# 
  9466     071D                     	;# 
  9467     071E                     	;# 
  9468     0796                     	;# 
  9469     0797                     	;# 
  9470     0798                     	;# 
  9471     0799                     	;# 
  9472     079A                     	;# 
  9473     079B                     	;# 
  9474     079C                     	;# 
  9475     079D                     	;# 
  9476     080C                     	;# 
  9477     080D                     	;# 
  9478     080E                     	;# 
  9479     080F                     	;# 
  9480     0810                     	;# 
  9481     0811                     	;# 
  9482     0813                     	;# 
  9483     0814                     	;# 
  9484     081A                     	;# 
  9485     081A                     	;# 
  9486     081B                     	;# 
  9487     081C                     	;# 
  9488     081C                     	;# 
  9489     081D                     	;# 
  9490     081E                     	;# 
  9491     081F                     	;# 
  9492     088C                     	;# 
  9493     088D                     	;# 
  9494     088E                     	;# 
  9495     088F                     	;# 
  9496     0890                     	;# 
  9497     0891                     	;# 
  9498     0892                     	;# 
  9499     0893                     	;# 
  9500     0895                     	;# 
  9501     0896                     	;# 
  9502     0897                     	;# 
  9503     0898                     	;# 
  9504     0899                     	;# 
  9505     089A                     	;# 
  9506     089B                     	;# 
  9507     090C                     	;# 
  9508     090E                     	;# 
  9509     090F                     	;# 
  9510     091F                     	;# 
  9511     098F                     	;# 
  9512     098F                     	;# 
  9513     0990                     	;# 
  9514     0991                     	;# 
  9515     0992                     	;# 
  9516     0993                     	;# 
  9517     0994                     	;# 
  9518     0995                     	;# 
  9519     0996                     	;# 
  9520     0997                     	;# 
  9521     0A19                     	;# 
  9522     0A19                     	;# 
  9523     0A1A                     	;# 
  9524     0A1A                     	;# 
  9525     0A1B                     	;# 
  9526     0A1B                     	;# 
  9527     0A1B                     	;# 
  9528     0A1C                     	;# 
  9529     0A1C                     	;# 
  9530     0A1D                     	;# 
  9531     0A1D                     	;# 
  9532     0A1E                     	;# 
  9533     0A1E                     	;# 
  9534     0A1F                     	;# 
  9535     0A1F                     	;# 
  9536     0A1F                     	;# 
  9537     1E0F                     	;# 
  9538     1E10                     	;# 
  9539     1E11                     	;# 
  9540     1E12                     	;# 
  9541     1E13                     	;# 
  9542     1E14                     	;# 
  9543     1E15                     	;# 
  9544     1E16                     	;# 
  9545     1E17                     	;# 
  9546     1E18                     	;# 
  9547     1E19                     	;# 
  9548     1E1A                     	;# 
  9549     1E1B                     	;# 
  9550     1E1C                     	;# 
  9551     1E1D                     	;# 
  9552     1E1E                     	;# 
  9553     1E1F                     	;# 
  9554     1E20                     	;# 
  9555     1E21                     	;# 
  9556     1E22                     	;# 
  9557     1E23                     	;# 
  9558     1E24                     	;# 
  9559     1E25                     	;# 
  9560     1E26                     	;# 
  9561     1E27                     	;# 
  9562     1E28                     	;# 
  9563     1E29                     	;# 
  9564     1E2A                     	;# 
  9565     1E2B                     	;# 
  9566     1E2C                     	;# 
  9567     1E2D                     	;# 
  9568     1E2E                     	;# 
  9569     1E2F                     	;# 
  9570     1E30                     	;# 
  9571     1E31                     	;# 
  9572     1E32                     	;# 
  9573     1E33                     	;# 
  9574     1E34                     	;# 
  9575     1E35                     	;# 
  9576     1E36                     	;# 
  9577     1E37                     	;# 
  9578     1E8F                     	;# 
  9579     1E90                     	;# 
  9580     1E91                     	;# 
  9581     1E92                     	;# 
  9582     1E93                     	;# 
  9583     1E94                     	;# 
  9584     1E95                     	;# 
  9585     1E96                     	;# 
  9586     1E97                     	;# 
  9587     1E9C                     	;# 
  9588     1E9D                     	;# 
  9589     1E9E                     	;# 
  9590     1EA1                     	;# 
  9591     1EA2                     	;# 
  9592     1EA3                     	;# 
  9593     1EA4                     	;# 
  9594     1EA5                     	;# 
  9595     1EA9                     	;# 
  9596     1EAA                     	;# 
  9597     1EAB                     	;# 
  9598     1EAC                     	;# 
  9599     1EB1                     	;# 
  9600     1EB2                     	;# 
  9601     1EB3                     	;# 
  9602     1EB8                     	;# 
  9603     1EB9                     	;# 
  9604     1EBA                     	;# 
  9605     1EBB                     	;# 
  9606     1EBC                     	;# 
  9607     1EBD                     	;# 
  9608     1EBE                     	;# 
  9609     1EC3                     	;# 
  9610     1EC5                     	;# 
  9611     1EC6                     	;# 
  9612     1EC7                     	;# 
  9613     1EC8                     	;# 
  9614     1EC9                     	;# 
  9615     1ECA                     	;# 
  9616     1ECB                     	;# 
  9617     1ECC                     	;# 
  9618     1ECD                     	;# 
  9619     1ECE                     	;# 
  9620     1F10                     	;# 
  9621     1F11                     	;# 
  9622     1F12                     	;# 
  9623     1F13                     	;# 
  9624     1F14                     	;# 
  9625     1F15                     	;# 
  9626     1F16                     	;# 
  9627     1F17                     	;# 
  9628     1F18                     	;# 
  9629     1F19                     	;# 
  9630     1F1A                     	;# 
  9631     1F1B                     	;# 
  9632     1F1C                     	;# 
  9633     1F1D                     	;# 
  9634     1F1E                     	;# 
  9635     1F1F                     	;# 
  9636     1F20                     	;# 
  9637     1F21                     	;# 
  9638     1F22                     	;# 
  9639     1F23                     	;# 
  9640     1F24                     	;# 
  9641     1F25                     	;# 
  9642     1F26                     	;# 
  9643     1F27                     	;# 
  9644     1F38                     	;# 
  9645     1F39                     	;# 
  9646     1F3A                     	;# 
  9647     1F3B                     	;# 
  9648     1F3C                     	;# 
  9649     1F3D                     	;# 
  9650     1F3E                     	;# 
  9651     1F3F                     	;# 
  9652     1F43                     	;# 
  9653     1F44                     	;# 
  9654     1F45                     	;# 
  9655     1F46                     	;# 
  9656     1F47                     	;# 
  9657     1F48                     	;# 
  9658     1F49                     	;# 
  9659     1F4A                     	;# 
  9660     1F4E                     	;# 
  9661     1F4F                     	;# 
  9662     1F50                     	;# 
  9663     1F51                     	;# 
  9664     1F52                     	;# 
  9665     1F53                     	;# 
  9666     1F54                     	;# 
  9667     1F55                     	;# 
  9668     1F65                     	;# 
  9669     1F66                     	;# 
  9670     1F67                     	;# 
  9671     1F68                     	;# 
  9672     1F69                     	;# 
  9673     1F6A                     	;# 
  9674     1F6B                     	;# 
  9675     1FE4                     	;# 
  9676     1FE5                     	;# 
  9677     1FE6                     	;# 
  9678     1FE7                     	;# 
  9679     1FE8                     	;# 
  9680     1FE8                     	;# 
  9681     1FE9                     	;# 
  9682     1FEA                     	;# 
  9683     1FEB                     	;# 
  9684     1FED                     	;# 
  9685     1FEE                     	;# 
  9686     1FEF                     	;# 
  9687     0000                     	;# 
  9688     0001                     	;# 
  9689     0002                     	;# 
  9690     0003                     	;# 
  9691     0004                     	;# 
  9692     0005                     	;# 
  9693     0006                     	;# 
  9694     0007                     	;# 
  9695     0008                     	;# 
  9696     0009                     	;# 
  9697     000A                     	;# 
  9698     000B                     	;# 
  9699     000C                     	;# 
  9700     000D                     	;# 
  9701     000E                     	;# 
  9702     0010                     	;# 
  9703     0012                     	;# 
  9704     0013                     	;# 
  9705     0014                     	;# 
  9706     0016                     	;# 
  9707     0018                     	;# 
  9708     0019                     	;# 
  9709     001A                     	;# 
  9710     001C                     	;# 
  9711     008C                     	;# 
  9712     008C                     	;# 
  9713     008D                     	;# 
  9714     008E                     	;# 
  9715     008E                     	;# 
  9716     008F                     	;# 
  9717     0090                     	;# 
  9718     0090                     	;# 
  9719     0091                     	;# 
  9720     0092                     	;# 
  9721     0092                     	;# 
  9722     0093                     	;# 
  9723     0094                     	;# 
  9724     0094                     	;# 
  9725     0095                     	;# 
  9726     0096                     	;# 
  9727     0096                     	;# 
  9728     0097                     	;# 
  9729     0098                     	;# 
  9730     0099                     	;# 
  9731     009A                     	;# 
  9732     009B                     	;# 
  9733     009B                     	;# 
  9734     009C                     	;# 
  9735     009D                     	;# 
  9736     009D                     	;# 
  9737     009E                     	;# 
  9738     009F                     	;# 
  9739     010C                     	;# 
  9740     010C                     	;# 
  9741     010D                     	;# 
  9742     010E                     	;# 
  9743     010F                     	;# 
  9744     010F                     	;# 
  9745     0110                     	;# 
  9746     0111                     	;# 
  9747     0112                     	;# 
  9748     0113                     	;# 
  9749     0114                     	;# 
  9750     0115                     	;# 
  9751     0116                     	;# 
  9752     0117                     	;# 
  9753     0118                     	;# 
  9754     0119                     	;# 
  9755     0119                     	;# 
  9756     0119                     	;# 
  9757     011A                     	;# 
  9758     011A                     	;# 
  9759     011A                     	;# 
  9760     011B                     	;# 
  9761     011B                     	;# 
  9762     011B                     	;# 
  9763     011B                     	;# 
  9764     011B                     	;# 
  9765     011C                     	;# 
  9766     011C                     	;# 
  9767     011C                     	;# 
  9768     011D                     	;# 
  9769     011D                     	;# 
  9770     011D                     	;# 
  9771     011E                     	;# 
  9772     011E                     	;# 
  9773     011E                     	;# 
  9774     011F                     	;# 
  9775     011F                     	;# 
  9776     011F                     	;# 
  9777     011F                     	;# 
  9778     011F                     	;# 
  9779     018C                     	;# 
  9780     018D                     	;# 
  9781     018E                     	;# 
  9782     018F                     	;# 
  9783     0190                     	;# 
  9784     0191                     	;# 
  9785     0192                     	;# 
  9786     0196                     	;# 
  9787     0197                     	;# 
  9788     0198                     	;# 
  9789     0199                     	;# 
  9790     019A                     	;# 
  9791     019B                     	;# 
  9792     019C                     	;# 
  9793     020C                     	;# 
  9794     020D                     	;# 
  9795     020E                     	;# 
  9796     020E                     	;# 
  9797     020F                     	;# 
  9798     020F                     	;# 
  9799     0210                     	;# 
  9800     0210                     	;# 
  9801     0211                     	;# 
  9802     0211                     	;# 
  9803     0212                     	;# 
  9804     0213                     	;# 
  9805     0214                     	;# 
  9806     0214                     	;# 
  9807     0215                     	;# 
  9808     0215                     	;# 
  9809     0216                     	;# 
  9810     0216                     	;# 
  9811     0217                     	;# 
  9812     0217                     	;# 
  9813     0218                     	;# 
  9814     0219                     	;# 
  9815     021A                     	;# 
  9816     021A                     	;# 
  9817     021B                     	;# 
  9818     021B                     	;# 
  9819     021C                     	;# 
  9820     021C                     	;# 
  9821     021D                     	;# 
  9822     021D                     	;# 
  9823     021E                     	;# 
  9824     021F                     	;# 
  9825     028C                     	;# 
  9826     028C                     	;# 
  9827     028D                     	;# 
  9828     028D                     	;# 
  9829     028E                     	;# 
  9830     028F                     	;# 
  9831     0290                     	;# 
  9832     0291                     	;# 
  9833     0292                     	;# 
  9834     0292                     	;# 
  9835     0293                     	;# 
  9836     0293                     	;# 
  9837     0294                     	;# 
  9838     0295                     	;# 
  9839     0296                     	;# 
  9840     0297                     	;# 
  9841     0298                     	;# 
  9842     0298                     	;# 
  9843     0299                     	;# 
  9844     0299                     	;# 
  9845     029A                     	;# 
  9846     029B                     	;# 
  9847     029C                     	;# 
  9848     029D                     	;# 
  9849     029F                     	;# 
  9850     030C                     	;# 
  9851     030C                     	;# 
  9852     030D                     	;# 
  9853     030E                     	;# 
  9854     030F                     	;# 
  9855     0310                     	;# 
  9856     0310                     	;# 
  9857     0311                     	;# 
  9858     0312                     	;# 
  9859     0313                     	;# 
  9860     0314                     	;# 
  9861     0314                     	;# 
  9862     0315                     	;# 
  9863     0316                     	;# 
  9864     0317                     	;# 
  9865     0318                     	;# 
  9866     0318                     	;# 
  9867     0319                     	;# 
  9868     031A                     	;# 
  9869     031B                     	;# 
  9870     031C                     	;# 
  9871     031C                     	;# 
  9872     031D                     	;# 
  9873     031E                     	;# 
  9874     031F                     	;# 
  9875     038C                     	;# 
  9876     038C                     	;# 
  9877     038D                     	;# 
  9878     038E                     	;# 
  9879     0390                     	;# 
  9880     0390                     	;# 
  9881     0391                     	;# 
  9882     0392                     	;# 
  9883     048C                     	;# 
  9884     048C                     	;# 
  9885     048D                     	;# 
  9886     048E                     	;# 
  9887     048F                     	;# 
  9888     048F                     	;# 
  9889     0490                     	;# 
  9890     0491                     	;# 
  9891     0492                     	;# 
  9892     0492                     	;# 
  9893     0493                     	;# 
  9894     0494                     	;# 
  9895     0495                     	;# 
  9896     0495                     	;# 
  9897     0496                     	;# 
  9898     0497                     	;# 
  9899     0498                     	;# 
  9900     0499                     	;# 
  9901     049A                     	;# 
  9902     049B                     	;# 
  9903     049C                     	;# 
  9904     049D                     	;# 
  9905     050C                     	;# 
  9906     050C                     	;# 
  9907     050D                     	;# 
  9908     050E                     	;# 
  9909     050F                     	;# 
  9910     050F                     	;# 
  9911     0510                     	;# 
  9912     0511                     	;# 
  9913     0512                     	;# 
  9914     0512                     	;# 
  9915     0513                     	;# 
  9916     0514                     	;# 
  9917     0515                     	;# 
  9918     0515                     	;# 
  9919     0516                     	;# 
  9920     0517                     	;# 
  9921     0518                     	;# 
  9922     0519                     	;# 
  9923     051A                     	;# 
  9924     051B                     	;# 
  9925     051C                     	;# 
  9926     051D                     	;# 
  9927     058C                     	;# 
  9928     058C                     	;# 
  9929     058D                     	;# 
  9930     058E                     	;# 
  9931     058F                     	;# 
  9932     058F                     	;# 
  9933     0590                     	;# 
  9934     0591                     	;# 
  9935     0592                     	;# 
  9936     0593                     	;# 
  9937     059C                     	;# 
  9938     059C                     	;# 
  9939     059D                     	;# 
  9940     059D                     	;# 
  9941     059E                     	;# 
  9942     059F                     	;# 
  9943     060C                     	;# 
  9944     060C                     	;# 
  9945     060D                     	;# 
  9946     060D                     	;# 
  9947     060E                     	;# 
  9948     060F                     	;# 
  9949     0610                     	;# 
  9950     0611                     	;# 
  9951     0612                     	;# 
  9952     0613                     	;# 
  9953     0614                     	;# 
  9954     0616                     	;# 
  9955     0616                     	;# 
  9956     0617                     	;# 
  9957     0617                     	;# 
  9958     0618                     	;# 
  9959     0619                     	;# 
  9960     061A                     	;# 
  9961     061B                     	;# 
  9962     061C                     	;# 
  9963     061D                     	;# 
  9964     061E                     	;# 
  9965     068C                     	;# 
  9966     068D                     	;# 
  9967     068E                     	;# 
  9968     068F                     	;# 
  9969     0690                     	;# 
  9970     0691                     	;# 
  9971     0692                     	;# 
  9972     0693                     	;# 
  9973     0694                     	;# 
  9974     070C                     	;# 
  9975     070D                     	;# 
  9976     070E                     	;# 
  9977     070F                     	;# 
  9978     0710                     	;# 
  9979     0711                     	;# 
  9980     0712                     	;# 
  9981     0713                     	;# 
  9982     0714                     	;# 
  9983     0716                     	;# 
  9984     0717                     	;# 
  9985     0718                     	;# 
  9986     0719                     	;# 
  9987     071A                     	;# 
  9988     071B                     	;# 
  9989     071C                     	;# 
  9990     071D                     	;# 
  9991     071E                     	;# 
  9992     0796                     	;# 
  9993     0797                     	;# 
  9994     0798                     	;# 
  9995     0799                     	;# 
  9996     079A                     	;# 
  9997     079B                     	;# 
  9998     079C                     	;# 
  9999     079D                     	;# 
 10000     080C                     	;# 
 10001     080D                     	;# 
 10002     080E                     	;# 
 10003     080F                     	;# 
 10004     0810                     	;# 
 10005     0811                     	;# 
 10006     0813                     	;# 
 10007     0814                     	;# 
 10008     081A                     	;# 
 10009     081A                     	;# 
 10010     081B                     	;# 
 10011     081C                     	;# 
 10012     081C                     	;# 
 10013     081D                     	;# 
 10014     081E                     	;# 
 10015     081F                     	;# 
 10016     088C                     	;# 
 10017     088D                     	;# 
 10018     088E                     	;# 
 10019     088F                     	;# 
 10020     0890                     	;# 
 10021     0891                     	;# 
 10022     0892                     	;# 
 10023     0893                     	;# 
 10024     0895                     	;# 
 10025     0896                     	;# 
 10026     0897                     	;# 
 10027     0898                     	;# 
 10028     0899                     	;# 
 10029     089A                     	;# 
 10030     089B                     	;# 
 10031     090C                     	;# 
 10032     090E                     	;# 
 10033     090F                     	;# 
 10034     091F                     	;# 
 10035     098F                     	;# 
 10036     098F                     	;# 
 10037     0990                     	;# 
 10038     0991                     	;# 
 10039     0992                     	;# 
 10040     0993                     	;# 
 10041     0994                     	;# 
 10042     0995                     	;# 
 10043     0996                     	;# 
 10044     0997                     	;# 
 10045     0A19                     	;# 
 10046     0A19                     	;# 
 10047     0A1A                     	;# 
 10048     0A1A                     	;# 
 10049     0A1B                     	;# 
 10050     0A1B                     	;# 
 10051     0A1B                     	;# 
 10052     0A1C                     	;# 
 10053     0A1C                     	;# 
 10054     0A1D                     	;# 
 10055     0A1D                     	;# 
 10056     0A1E                     	;# 
 10057     0A1E                     	;# 
 10058     0A1F                     	;# 
 10059     0A1F                     	;# 
 10060     0A1F                     	;# 
 10061     1E0F                     	;# 
 10062     1E10                     	;# 
 10063     1E11                     	;# 
 10064     1E12                     	;# 
 10065     1E13                     	;# 
 10066     1E14                     	;# 
 10067     1E15                     	;# 
 10068     1E16                     	;# 
 10069     1E17                     	;# 
 10070     1E18                     	;# 
 10071     1E19                     	;# 
 10072     1E1A                     	;# 
 10073     1E1B                     	;# 
 10074     1E1C                     	;# 
 10075     1E1D                     	;# 
 10076     1E1E                     	;# 
 10077     1E1F                     	;# 
 10078     1E20                     	;# 
 10079     1E21                     	;# 
 10080     1E22                     	;# 
 10081     1E23                     	;# 
 10082     1E24                     	;# 
 10083     1E25                     	;# 
 10084     1E26                     	;# 
 10085     1E27                     	;# 
 10086     1E28                     	;# 
 10087     1E29                     	;# 
 10088     1E2A                     	;# 
 10089     1E2B                     	;# 
 10090     1E2C                     	;# 
 10091     1E2D                     	;# 
 10092     1E2E                     	;# 
 10093     1E2F                     	;# 
 10094     1E30                     	;# 
 10095     1E31                     	;# 
 10096     1E32                     	;# 
 10097     1E33                     	;# 
 10098     1E34                     	;# 
 10099     1E35                     	;# 
 10100     1E36                     	;# 
 10101     1E37                     	;# 
 10102     1E8F                     	;# 
 10103     1E90                     	;# 
 10104     1E91                     	;# 
 10105     1E92                     	;# 
 10106     1E93                     	;# 
 10107     1E94                     	;# 
 10108     1E95                     	;# 
 10109     1E96                     	;# 
 10110     1E97                     	;# 
 10111     1E9C                     	;# 
 10112     1E9D                     	;# 
 10113     1E9E                     	;# 
 10114     1EA1                     	;# 
 10115     1EA2                     	;# 
 10116     1EA3                     	;# 
 10117     1EA4                     	;# 
 10118     1EA5                     	;# 
 10119     1EA9                     	;# 
 10120     1EAA                     	;# 
 10121     1EAB                     	;# 
 10122     1EAC                     	;# 
 10123     1EB1                     	;# 
 10124     1EB2                     	;# 
 10125     1EB3                     	;# 
 10126     1EB8                     	;# 
 10127     1EB9                     	;# 
 10128     1EBA                     	;# 
 10129     1EBB                     	;# 
 10130     1EBC                     	;# 
 10131     1EBD                     	;# 
 10132     1EBE                     	;# 
 10133     1EC3                     	;# 
 10134     1EC5                     	;# 
 10135     1EC6                     	;# 
 10136     1EC7                     	;# 
 10137     1EC8                     	;# 
 10138     1EC9                     	;# 
 10139     1ECA                     	;# 
 10140     1ECB                     	;# 
 10141     1ECC                     	;# 
 10142     1ECD                     	;# 
 10143     1ECE                     	;# 
 10144     1F10                     	;# 
 10145     1F11                     	;# 
 10146     1F12                     	;# 
 10147     1F13                     	;# 
 10148     1F14                     	;# 
 10149     1F15                     	;# 
 10150     1F16                     	;# 
 10151     1F17                     	;# 
 10152     1F18                     	;# 
 10153     1F19                     	;# 
 10154     1F1A                     	;# 
 10155     1F1B                     	;# 
 10156     1F1C                     	;# 
 10157     1F1D                     	;# 
 10158     1F1E                     	;# 
 10159     1F1F                     	;# 
 10160     1F20                     	;# 
 10161     1F21                     	;# 
 10162     1F22                     	;# 
 10163     1F23                     	;# 
 10164     1F24                     	;# 
 10165     1F25                     	;# 
 10166     1F26                     	;# 
 10167     1F27                     	;# 
 10168     1F38                     	;# 
 10169     1F39                     	;# 
 10170     1F3A                     	;# 
 10171     1F3B                     	;# 
 10172     1F3C                     	;# 
 10173     1F3D                     	;# 
 10174     1F3E                     	;# 
 10175     1F3F                     	;# 
 10176     1F43                     	;# 
 10177     1F44                     	;# 
 10178     1F45                     	;# 
 10179     1F46                     	;# 
 10180     1F47                     	;# 
 10181     1F48                     	;# 
 10182     1F49                     	;# 
 10183     1F4A                     	;# 
 10184     1F4E                     	;# 
 10185     1F4F                     	;# 
 10186     1F50                     	;# 
 10187     1F51                     	;# 
 10188     1F52                     	;# 
 10189     1F53                     	;# 
 10190     1F54                     	;# 
 10191     1F55                     	;# 
 10192     1F65                     	;# 
 10193     1F66                     	;# 
 10194     1F67                     	;# 
 10195     1F68                     	;# 
 10196     1F69                     	;# 
 10197     1F6A                     	;# 
 10198     1F6B                     	;# 
 10199     1FE4                     	;# 
 10200     1FE5                     	;# 
 10201     1FE6                     	;# 
 10202     1FE7                     	;# 
 10203     1FE8                     	;# 
 10204     1FE8                     	;# 
 10205     1FE9                     	;# 
 10206     1FEA                     	;# 
 10207     1FEB                     	;# 
 10208     1FED                     	;# 
 10209     1FEE                     	;# 
 10210     1FEF                     	;# 
 10211                           
 10212 ;; Function _do_I2C_RESET is unused but had its address taken
 10213     0000                     
 10214 ;; Function _do_I2C_IDLE is unused but had its address taken
 10215     0000                     
 10216 ;; Function _do_I2C_SEND_RESTART_READ is unused but had its address taken
 10217     0000                     
 10218 ;; Function _do_I2C_SEND_RESTART_WRITE is unused but had its address taken
 10219     0000                     
 10220 ;; Function _do_I2C_SEND_RESTART is unused but had its address taken
 10221     0000                     
 10222 ;; Function _do_I2C_SEND_STOP is unused but had its address taken
 10223     0000                     
 10224 ;; Function _do_I2C_SEND_ADR_READ is unused but had its address taken
 10225     0000                     
 10226 ;; Function _do_I2C_SEND_ADR_WRITE is unused but had its address taken
 10227     0000                     
 10228 ;; Function _do_I2C_RCEN is unused but had its address taken
 10229     0000                     
 10230 ;; Function _do_I2C_DO_ACK is unused but had its address taken
 10231     0000                     
 10232 ;; Function _do_I2C_DO_NACK_STOP is unused but had its address taken
 10233     0000                     
 10234 ;; Function _do_I2C_DO_NACK_RESTART is unused but had its address taken
 10235     0000                     
 10236 ;; Function _do_I2C_DO_ADDRESS_NACK is unused but had its address taken
 10237     0000                     
 10238 ;; Function _do_I2C_TX is unused but had its address taken
 10239     0000                     
 10240 ;; Function _do_I2C_RX is unused but had its address taken
 10241     0000                     
 10242 ;; Function _do_I2C_TX_EMPTY is unused but had its address taken
 10243     0000                     
 10244 ;; Function _i2c_ISR is unused but had its address taken
 10245     0000                     
 10246 ;; Function _i2c_busCollisionISR is unused but had its address taken
 10247     0000                     
 10248 ;; Function _returnStop is unused but had its address taken
 10249     0000                     
 10250 ;; Function _returnReset is unused but had its address taken
 10251     0000                     
 10252 ;; Function _EUSART2_is_tx_ready is unused but had its address taken
 10253     0000                     
 10254 ;; Function _EUSART1_is_tx_ready is unused but had its address taken
 10255     0000                     
 10256                           	psect	idataBANK0
 10257     0002                     __pidataBANK0:
 10258                           
 10259                           ;initializer for RN487X_GetInputsValues@F12901
 10260     0002  3430               	retlw	48
 10261     0003  3430               	retlw	48
 10262                           
 10263                           	psect	idataBANK2
 10264     114C                     __pidataBANK2:
 10265                           
 10266                           ;initializer for __hex
 10267     114C  3430               	retlw	48
 10268     114D  3431               	retlw	49
 10269     114E  3432               	retlw	50
 10270     114F  3433               	retlw	51
 10271     1150  3434               	retlw	52
 10272     1151  3435               	retlw	53
 10273     1152  3436               	retlw	54
 10274     1153  3437               	retlw	55
 10275     1154  3438               	retlw	56
 10276     1155  3439               	retlw	57
 10277     1156  3441               	retlw	65
 10278     1157  3442               	retlw	66
 10279     1158  3443               	retlw	67
 10280     1159  3444               	retlw	68
 10281     115A  3445               	retlw	69
 10282     115B  3446               	retlw	70
 10283     115C  3400               	retlw	0
 10284                           
 10285                           	psect	stringtext1
 10286     1800                     __pstringtext1:
 10287     1800                     _uart:
 10288     1800  344B               	retlw	low _EUSART1_Read
 10289     1801  3415               	retlw	high _EUSART1_Read
 10290     1802  3424               	retlw	low _EUSART1_Write
 10291     1803  3415               	retlw	high _EUSART1_Write
 10292     1804  3400               	retlw	0
 10293     1805  3400               	retlw	0
 10294     1806  3484               	retlw	low _EUSART1_is_rx_ready
 10295     1807  341F               	retlw	high _EUSART1_is_rx_ready
 10296     1808  3414               	retlw	low _EUSART1_SetTxInterruptHandler
 10297     1809  341F               	retlw	high _EUSART1_SetTxInterruptHandler
 10298     180A  3475               	retlw	low _EUSART1_Receive_ISR
 10299     180B  3408               	retlw	high _EUSART1_Receive_ISR
 10300     180C  340E               	retlw	low _EUSART1_SetRxInterruptHandler
 10301     180D  341F               	retlw	high _EUSART1_SetRxInterruptHandler
 10302     180E  3400               	retlw	low _EUSART1_is_tx_done
 10303     180F  3408               	retlw	high _EUSART1_is_tx_done
 10304     1810  3402               	retlw	low _EUSART1_Transmit_ISR
 10305     1811  3414               	retlw	high _EUSART1_Transmit_ISR
 10306     1812  342C               	retlw	low _EUSART1_Initialize
 10307     1813  3409               	retlw	high _EUSART1_Initialize
 10308     1814  34D7               	retlw	low _EUSART2_Read
 10309     1815  3414               	retlw	high _EUSART2_Read
 10310     1816  34FD               	retlw	low _EUSART2_Write
 10311     1817  3414               	retlw	high _EUSART2_Write
 10312     1818  3400               	retlw	0
 10313     1819  3400               	retlw	0
 10314     181A  347B               	retlw	low _EUSART2_is_rx_ready
 10315     181B  341F               	retlw	high _EUSART2_is_rx_ready
 10316     181C  3432               	retlw	low _EUSART2_SetTxInterruptHandler
 10317     181D  341F               	retlw	high _EUSART2_SetTxInterruptHandler
 10318     181E  343C               	retlw	low _EUSART2_Receive_ISR
 10319     181F  3408               	retlw	high _EUSART2_Receive_ISR
 10320     1820  342C               	retlw	low _EUSART2_SetRxInterruptHandler
 10321     1821  341F               	retlw	high _EUSART2_SetRxInterruptHandler
 10322     1822  3494               	retlw	low _EUSART2_is_tx_done
 10323     1823  341E               	retlw	high _EUSART2_is_tx_done
 10324     1824  34E0               	retlw	low _EUSART2_Transmit_ISR
 10325     1825  3413               	retlw	high _EUSART2_Transmit_ISR
 10326     1826  346A               	retlw	low _EUSART2_Initialize
 10327     1827  3409               	retlw	high _EUSART2_Initialize
 10328     1828                     __end_of_uart:
 10329                           
 10330                           	psect	stringtext2
 10331     1828                     __pstringtext2:
 10332     1828                     _i2c1_fsmStateTable:
 10333     1828  349D               	retlw	low _I2C1_DO_IDLE
 10334     1829  341E               	retlw	high _I2C1_DO_IDLE
 10335     182A  3472               	retlw	low _I2C1_DO_SEND_ADR_READ
 10336     182B  341F               	retlw	high _I2C1_DO_SEND_ADR_READ
 10337     182C  3451               	retlw	low _I2C1_DO_SEND_ADR_WRITE
 10338     182D  341F               	retlw	high _I2C1_DO_SEND_ADR_WRITE
 10339     182E  347D               	retlw	low _I2C1_DO_TX
 10340     182F  340C               	retlw	high _I2C1_DO_TX
 10341     1830  34E7               	retlw	low _I2C1_DO_RX
 10342     1831  3409               	retlw	high _I2C1_DO_RX
 10343     1832  344A               	retlw	low _I2C1_DO_RCEN
 10344     1833  341F               	retlw	high _I2C1_DO_RCEN
 10345     1834  34EE               	retlw	low _I2C1_DO_TX_EMPTY
 10346     1835  3415               	retlw	high _I2C1_DO_TX_EMPTY
 10347     1836  34A2               	retlw	low _I2C1_DO_SEND_RESTART_READ
 10348     1837  341E               	retlw	high _I2C1_DO_SEND_RESTART_READ
 10349     1838  34A7               	retlw	low _I2C1_DO_SEND_RESTART_WRITE
 10350     1839  341E               	retlw	high _I2C1_DO_SEND_RESTART_WRITE
 10351     183A  34AC               	retlw	low _I2C1_DO_SEND_RESTART
 10352     183B  341E               	retlw	high _I2C1_DO_SEND_RESTART
 10353     183C  34B1               	retlw	low _I2C1_DO_SEND_STOP
 10354     183D  341E               	retlw	high _I2C1_DO_SEND_STOP
 10355     183E  34B6               	retlw	low _I2C1_DO_RX_ACK
 10356     183F  341E               	retlw	high _I2C1_DO_RX_ACK
 10357     1840  34BB               	retlw	low _I2C1_DO_RX_NACK_STOP
 10358     1841  341E               	retlw	high _I2C1_DO_RX_NACK_STOP
 10359     1842  34C0               	retlw	low _I2C1_DO_RX_NACK_RESTART
 10360     1843  341E               	retlw	high _I2C1_DO_RX_NACK_RESTART
 10361     1844  34C5               	retlw	low _I2C1_DO_RESET
 10362     1845  341E               	retlw	high _I2C1_DO_RESET
 10363     1846  3472               	retlw	low _I2C1_DO_ADDRESS_NACK
 10364     1847  3415               	retlw	high _I2C1_DO_ADDRESS_NACK
 10365     1848                     __end_of_i2c1_fsmStateTable:
 10366                           
 10367                           	psect	stringtext3
 10368     1848                     __pstringtext3:
 10369     1848                     _fsmStateTable:
 10370     1848  3400               	retlw	0
 10371     1849  3400               	retlw	0
 10372     184A  3400               	retlw	0
 10373     184B  3400               	retlw	0
 10374     184C  3400               	retlw	0
 10375     184D  3400               	retlw	0
 10376     184E  3400               	retlw	0
 10377     184F  3400               	retlw	0
 10378     1850  3400               	retlw	0
 10379     1851  3400               	retlw	0
 10380     1852  3400               	retlw	0
 10381     1853  3400               	retlw	0
 10382     1854  3400               	retlw	0
 10383     1855  3400               	retlw	0
 10384     1856  3400               	retlw	0
 10385     1857  3400               	retlw	0
 10386     1858  3400               	retlw	0
 10387     1859  3400               	retlw	0
 10388     185A  3400               	retlw	0
 10389     185B  3400               	retlw	0
 10390     185C  3400               	retlw	0
 10391     185D  3400               	retlw	0
 10392     185E  3400               	retlw	0
 10393     185F  3400               	retlw	0
 10394     1860  3400               	retlw	0
 10395     1861  3400               	retlw	0
 10396     1862  3400               	retlw	0
 10397     1863  3400               	retlw	0
 10398     1864  3400               	retlw	0
 10399     1865  3400               	retlw	0
 10400     1866  3400               	retlw	0
 10401     1867  3400               	retlw	0
 10402     1868                     __end_of_fsmStateTable:
 10403                           
 10404                           	psect	stringtext4
 10405     1868                     __pstringtext4:
 10406     1868                     _RN487X:
 10407     1868  34F4               	retlw	low _RN487X_Write
 10408     1869  341F               	retlw	high _RN487X_Write
 10409     186A  3496               	retlw	low _RN487X_Read@rn487x_interface$F1381
 10410     186B  341F               	retlw	high _RN487X_Read@rn487x_interface$F1381
 10411     186C  34A0               	retlw	low _RN487X_is_tx_done
 10412     186D  341F               	retlw	high _RN487X_is_tx_done
 10413     186E  34AA               	retlw	low _RN487X_is_rx_ready
 10414     186F  341F               	retlw	high _RN487X_is_rx_ready
 10415     1870  34DE               	retlw	low _RN487X_IndicateRx
 10416     1871  341F               	retlw	high _RN487X_IndicateRx
 10417     1872  34E9               	retlw	low _RN487X_Reset
 10418     1873  341F               	retlw	high _RN487X_Reset
 10419     1874  340B               	retlw	low _RN487X_SetSystemMode
 10420     1875  3410               	retlw	high _RN487X_SetSystemMode
 10421     1876  3459               	retlw	low _RN487X_Delay
 10422     1877  341F               	retlw	high _RN487X_Delay
 10423     1878  346D               	retlw	low _RN487X_MessageHandler
 10424     1879  340A               	retlw	high _RN487X_MessageHandler
 10425     187A                     __end_of_RN487X:
 10426                           
 10427                           	psect	stringtext5
 10428     2026                     __pstringtext5:
 10429     2026                     _rn487x_driver_version:
 10430     2026  3416               	retlw	low (STR_1| (0+32768))
 10431     2027  34A0               	retlw	high (STR_1| (0+32768))
 10432     2028                     __end_of_rn487x_driver_version:
 10433                           
 10434                           	psect	stringtext6
 10435     2028                     __pstringtext6:
 10436     2028                     _protocol_version_number:
 10437     2028  3416               	retlw	low (STR_1| (0+32768))
 10438     2029  34A0               	retlw	high (STR_1| (0+32768))
 10439     202A                     __end_of_protocol_version_number:
 10440                           
 10441                           	psect	stringtext7
 10442     2000                     __pstringtext7:
 10443     2000                     RN487X_RebootCmd@reboot:
 10444     2000  3452               	retlw	82
 10445     2001  3465               	retlw	101
 10446     2002  3462               	retlw	98
 10447     2003  346F               	retlw	111
 10448     2004  346F               	retlw	111
 10449     2005  3474               	retlw	116
 10450     2006  3469               	retlw	105
 10451     2007  346E               	retlw	110
 10452     2008  3467               	retlw	103
 10453     2009  340D               	retlw	13
 10454     200A  340A               	retlw	10
 10455     200B                     __end_ofRN487X_RebootCmd@reboot:
 10456                           
 10457                           	psect	stringtext8
 10458     201C                     __pstringtext8:
 10459     201C                     RN487X_EnterDataMode@cmdPrompt:
 10460     201C  3445               	retlw	69
 10461     201D  344E               	retlw	78
 10462     201E  3444               	retlw	68
 10463     201F  340D               	retlw	13
 10464     2020  340A               	retlw	10
 10465     2021                     __end_ofRN487X_EnterDataMode@cmdPrompt:
 10466                           
 10467                           	psect	stringtext9
 10468     2021                     __pstringtext9:
 10469     2021                     RN487X_EnterCmdMode@cmdPrompt:
 10470     2021  3443               	retlw	67
 10471     2022  344D               	retlw	77
 10472     2023  3444               	retlw	68
 10473     2024  343E               	retlw	62
 10474     2025  3420               	retlw	32
 10475     2026                     __end_ofRN487X_EnterCmdMode@cmdPrompt:
 10476                           
 10477                           	psect	nvBANK1
 10478     00E9                     __pnvBANK1:
 10479     00E9                     _IOCAF6_InterruptHandler:
 10480     00E9                     	ds	2
 10481     00EB                     _EUSART2_RxDefaultInterruptHandler:
 10482     00EB                     	ds	2
 10483     00ED                     _EUSART2_TxDefaultInterruptHandler:
 10484     00ED                     	ds	2
 10485                           
 10486                           	psect	nvBANK2
 10487     015D                     __pnvBANK2:
 10488     015D                     _EUSART1_ErrorHandler:
 10489     015D                     	ds	2
 10490     015F                     _EUSART1_OverrunErrorHandler:
 10491     015F                     	ds	2
 10492     0161                     _EUSART1_FramingErrorHandler:
 10493     0161                     	ds	2
 10494     0163                     _EUSART1_RxDefaultInterruptHandler:
 10495     0163                     	ds	2
 10496     0165                     _EUSART1_TxDefaultInterruptHandler:
 10497     0165                     	ds	2
 10498     0167                     _EUSART2_ErrorHandler:
 10499     0167                     	ds	2
 10500     0169                     _EUSART2_OverrunErrorHandler:
 10501     0169                     	ds	2
 10502     016B                     _EUSART2_FramingErrorHandler:
 10503     016B                     	ds	2
 10504     0014                     _TRISC	set	20
 10505     0013                     _TRISB	set	19
 10506     0012                     _TRISA	set	18
 10507     0016                     _TRISE	set	22
 10508     001A                     _LATC	set	26
 10509     0019                     _LATB	set	25
 10510     0018                     _LATA	set	24
 10511     001C                     _LATE	set	28
 10512     0012                     _TRISAbits	set	18
 10513     001A                     _LATCbits	set	26
 10514     000B                     _INTCONbits	set	11
 10515     0018                     _LATAbits	set	24
 10516     000C                     _PORTAbits	set	12
 10517     0119                     _RC1REG	set	281
 10518     011D                     _RC1STAbits	set	285
 10519     011A                     _TX1REG	set	282
 10520     011E                     _TX1STAbits	set	286
 10521     011C                     _SP1BRGH	set	284
 10522     011B                     _SP1BRGL	set	283
 10523     011E                     _TX1STA	set	286
 10524     011D                     _RC1STA	set	285
 10525     011F                     _BAUD1CON	set	287
 10526     018F                     _SSP1STATbits	set	399
 10527     018E                     _SSP1MSK	set	398
 10528     018C                     _SSP1BUF	set	396
 10529     0191                     _SSP1CON2bits	set	401
 10530     018D                     _SSP1ADD	set	397
 10531     0191                     _SSP1CON2	set	401
 10532     0190                     _SSP1CON1	set	400
 10533     018F                     _SSP1STAT	set	399
 10534     0190                     _SSP1CON1bits	set	400
 10535     059E                     _T0CON0bits	set	1438
 10536     059E                     _T0CON0	set	1438
 10537     059C                     _TMR0L	set	1436
 10538     059D                     _TMR0H	set	1437
 10539     059F                     _T0CON1	set	1439
 10540     070F                     _PIR3bits	set	1807
 10541     070C                     _PIR0bits	set	1804
 10542     0716                     _PIE0bits	set	1814
 10543     0719                     _PIE3bits	set	1817
 10544     079D                     _PMD7	set	1949
 10545     079C                     _PMD6	set	1948
 10546     079B                     _PMD5	set	1947
 10547     079A                     _PMD4	set	1946
 10548     0799                     _PMD3	set	1945
 10549     0798                     _PMD2	set	1944
 10550     0797                     _PMD1	set	1943
 10551     0796                     _PMD0	set	1942
 10552     0892                     _OSCTUNE	set	2194
 10553     0890                     _OSCSTAT	set	2192
 10554     0893                     _OSCFRQ	set	2195
 10555     0891                     _OSCEN	set	2193
 10556     088F                     _OSCCON3	set	2191
 10557     088D                     _OSCCON1	set	2189
 10558     0A19                     _RC2REG	set	2585
 10559     0A1D                     _RC2STAbits	set	2589
 10560     0A1A                     _TX2REG	set	2586
 10561     0A1E                     _TX2STAbits	set	2590
 10562     0A1C                     _SP2BRGH	set	2588
 10563     0A1B                     _SP2BRGL	set	2587
 10564     0A1E                     _TX2STA	set	2590
 10565     0A1D                     _RC2STA	set	2589
 10566     0A1F                     _BAUD2CON	set	2591
 10567     1ECB                     _RX1DTPPS	set	7883
 10568     1EC6                     _SSP1DATPPS	set	7878
 10569     1ECD                     _RX2DTPPS	set	7885
 10570     1EC5                     _SSP1CLKPPS	set	7877
 10571     1F1C                     _RB4PPS	set	7964
 10572     1F24                     _RC4PPS	set	7972
 10573     1F1A                     _RB2PPS	set	7962
 10574     1F19                     _RB1PPS	set	7961
 10575     1F3D                     _IOCAPbits	set	7997
 10576     1F3E                     _IOCANbits	set	7998
 10577     1F3F                     _IOCAFbits	set	7999
 10578     1F52                     _INLVLC	set	8018
 10579     1F47                     _INLVLB	set	8007
 10580     1F3C                     _INLVLA	set	7996
 10581     1F51                     _SLRCONC	set	8017
 10582     1F46                     _SLRCONB	set	8006
 10583     1F3B                     _SLRCONA	set	7995
 10584     1F50                     _ODCONC	set	8016
 10585     1F45                     _ODCONB	set	8005
 10586     1F3A                     _ODCONA	set	7994
 10587     1F66                     _ODCONE	set	8038
 10588     1F4F                     _WPUC	set	8015
 10589     1F39                     _WPUA	set	7993
 10590     1F44                     _WPUB	set	8004
 10591     1F65                     _WPUE	set	8037
 10592     1F38                     _ANSELA	set	7992
 10593     1F43                     _ANSELB	set	8003
 10594     1F4E                     _ANSELC	set	8014
 10595                           
 10596                           	psect	stringtext10
 10597     187A                     __pstringtext10:
 10598     187A                     STR_4:
 10599     187A  3453               	retlw	83	;'S'
 10600     187B  3454               	retlw	84	;'T'
 10601     187C  3452               	retlw	82	;'R'
 10602     187D  3445               	retlw	69	;'E'
 10603     187E  3441               	retlw	65	;'A'
 10604     187F  344D               	retlw	77	;'M'
 10605     1880  345F               	retlw	95	;'_'
 10606     1881  344F               	retlw	79	;'O'
 10607     1882  3450               	retlw	80	;'P'
 10608     1883  3445               	retlw	69	;'E'
 10609     1884  344E               	retlw	78	;'N'
 10610     1885  3400               	retlw	0
 10611                           
 10612                           	psect	stringtext11
 10613     200B                     __pstringtext11:
 10614     200B                     STR_2:
 10615     200B  3444               	retlw	68	;'D'
 10616     200C  3449               	retlw	73	;'I'
 10617     200D  3453               	retlw	83	;'S'
 10618     200E  3443               	retlw	67	;'C'
 10619     200F  344F               	retlw	79	;'O'
 10620     2010  344E               	retlw	78	;'N'
 10621     2011  344E               	retlw	78	;'N'
 10622     2012  3445               	retlw	69	;'E'
 10623     2013  3443               	retlw	67	;'C'
 10624     2014  3454               	retlw	84	;'T'
 10625     2015  3400               	retlw	0
 10626                           
 10627                           	psect	stringtext12
 10628     2016                     __pstringtext12:
 10629     2016                     STR_1:
 10630     2016  3431               	retlw	49	;'1'
 10631     2017  342E               	retlw	46	;'.'
 10632     2018  3431               	retlw	49	;'1'
 10633     2019  342E               	retlw	46	;'.'
 10634     201A  3430               	retlw	48	;'0'
 10635     201B  3400               	retlw	0
 10636                           
 10637                           	psect	stringtext13
 10638     0000                     __pstringtext13:
 10639     2016                     
 10640                           	psect	cinit
 10641     0057                     start_initialization:	
 10642                           ; #config settings
 10643                           
 10644     0057                     __initialization:
 10645                           
 10646                           ; Initialize objects allocated to BANK0
 10647     0057  3180  2002  3180   	fcall	__pidataBANK0	;fetch initializer
 10648     005A  00EE               	movwf	__pdataBANK0& (0+127)
 10649     005B  3180  2003  3180   	fcall	__pidataBANK0+1	;fetch initializer
 10650     005E  00EF               	movwf	(__pdataBANK0+1)& (0+127)
 10651                           
 10652                           ; Initialize objects allocated to BANK2
 10653     005F  304C               	movlw	low __pidataBANK2
 10654     0060  0084               	movwf	4
 10655     0061  3091               	movlw	(high __pidataBANK2)| (0+128)
 10656     0062  0085               	movwf	5
 10657     0063  304C               	movlw	low __pdataBANK2
 10658     0064  0086               	movwf	6
 10659     0065  3001               	movlw	high __pdataBANK2
 10660     0066  0087               	movwf	7
 10661     0067  3011               	movlw	17
 10662     0068  319F  2744  3180   	fcall	init_ram
 10663                           
 10664                           ; Clear objects allocated to COMMON
 10665     006B  01FC               	clrf	__pbssCOMMON& (0+127)
 10666                           
 10667                           ; Clear objects allocated to BANK0
 10668     006C  304A               	movlw	low __pbssBANK0
 10669     006D  0084               	movwf	4
 10670     006E  3000               	movlw	high __pbssBANK0
 10671     006F  0085               	movwf	5
 10672     0070  3024               	movlw	36
 10673     0071  319F  273E  3180   	fcall	clear_ram0
 10674                           
 10675                           ; Clear objects allocated to BANK1
 10676     0074  30A0               	movlw	low __pbssBANK1
 10677     0075  0084               	movwf	4
 10678     0076  3000               	movlw	high __pbssBANK1
 10679     0077  0085               	movwf	5
 10680     0078  3049               	movlw	73
 10681     0079  319F  273E  3180   	fcall	clear_ram0
 10682                           
 10683                           ; Clear objects allocated to BANK2
 10684     007C  3020               	movlw	low __pbssBANK2
 10685     007D  0084               	movwf	4
 10686     007E  3001               	movlw	high __pbssBANK2
 10687     007F  0085               	movwf	5
 10688     0080  302C               	movlw	44
 10689     0081  319F  273E  3180   	fcall	clear_ram0
 10690                           
 10691                           ; Clear objects allocated to BANK3
 10692     0084  30A0               	movlw	low __pbssBANK3
 10693     0085  0084               	movwf	4
 10694     0086  3001               	movlw	high __pbssBANK3
 10695     0087  0085               	movwf	5
 10696     0088  3040               	movlw	64
 10697     0089  319F  273E  3180   	fcall	clear_ram0
 10698                           
 10699                           ; Clear objects allocated to BANK4
 10700     008C  3020               	movlw	low __pbssBANK4
 10701     008D  0084               	movwf	4
 10702     008E  3002               	movlw	high __pbssBANK4
 10703     008F  0085               	movwf	5
 10704     0090  3050               	movlw	80
 10705     0091  319F  273E  3180   	fcall	clear_ram0
 10706                           
 10707                           ; Clear objects allocated to BANK5
 10708     0094  30A0               	movlw	low __pbssBANK5
 10709     0095  0084               	movwf	4
 10710     0096  3002               	movlw	high __pbssBANK5
 10711     0097  0085               	movwf	5
 10712     0098  3050               	movlw	80
 10713     0099  319F  273E  3180   	fcall	clear_ram0
 10714                           
 10715                           ; Clear objects allocated to BANK6
 10716     009C  3020               	movlw	low __pbssBANK6
 10717     009D  0084               	movwf	4
 10718     009E  3003               	movlw	high __pbssBANK6
 10719     009F  0085               	movwf	5
 10720     00A0  3050               	movlw	80
 10721     00A1  319F  273E  3180   	fcall	clear_ram0
 10722     00A4                     end_of_initialization:	
 10723                           ;End of C runtime variable initialization code
 10724                           
 10725     00A4                     __end_of__initialization:
 10726     00A4  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 10727     00A5  0140               	movlb	0
 10728     00A6  3184  2CBD         	ljmp	_main	;jump to C main() function
 10729                           
 10730                           	psect	bssCOMMON
 10731     007C                     __pbssCOMMON:
 10732     007C                     _eusart2RxHead:
 10733     007C                     	ds	1
 10734                           
 10735                           	psect	bssBANK0
 10736     004A                     __pbssBANK0:
 10737     004A                     _manufactureId:
 10738     004A                     	ds	2
 10739     004C                     _timer0ReloadVal16bit:
 10740     004C                     	ds	2
 10741     004E                     _pHead:
 10742     004E                     	ds	2
 10743     0050                     _asyncBuffer:
 10744     0050                     	ds	2
 10745     0052                     LIGHTBLUE_ParseIncomingPacket@data:
 10746     0052                     	ds	2
 10747     0054                     _bitMap:
 10748     0054                     	ds	2
 10749     0056                     _serialIndex:
 10750     0056                     	ds	1
 10751     0057                     _eusart1RxLastError:
 10752     0057                     	ds	1
 10753     0058                     _eusart1RxCount:
 10754     0058                     	ds	1
 10755     0059                     _eusart1RxTail:
 10756     0059                     	ds	1
 10757     005A                     _eusart1RxHead:
 10758     005A                     	ds	1
 10759     005B                     _eusart1TxBufferRemaining:
 10760     005B                     	ds	1
 10761     005C                     _eusart1TxTail:
 10762     005C                     	ds	1
 10763     005D                     _eusart1TxHead:
 10764     005D                     	ds	1
 10765     005E                     _eusart2RxLastError:
 10766     005E                     	ds	1
 10767     005F                     _eusart2RxCount:
 10768     005F                     	ds	1
 10769     0060                     _eusart2RxTail:
 10770     0060                     	ds	1
 10771     0061                     _eusart2TxBufferRemaining:
 10772     0061                     	ds	1
 10773     0062                     _eusart2TxTail:
 10774     0062                     	ds	1
 10775     0063                     _eusart2TxHead:
 10776     0063                     	ds	1
 10777     0064                     RN487X_FilterData@asyncBuffering:
 10778     0064                     	ds	1
 10779     0065                     _dataReady:
 10780     0065                     	ds	1
 10781     0066                     _peek:
 10782     0066                     	ds	1
 10783     0067                     _asyncBufferSize:
 10784     0067                     	ds	1
 10785     0068                     _connected:
 10786     0068                     	ds	1
 10787     0069                     LIGHTBLUE_ParseIncomingPacket@packetID:
 10788     0069                     	ds	1
 10789     006A                     LIGHTBLUE_ParseIncomingPacket@length:
 10790     006A                     	ds	1
 10791     006B                     LIGHTBLUE_ParseIncomingPacket@parserState:
 10792     006B                     	ds	1
 10793     006C                     _sequenceNumber:
 10794     006C                     	ds	1
 10795     006D                     __deviceAddress:
 10796     006D                     	ds	1
 10797                           
 10798                           	psect	dataBANK0
 10799     006E                     __pdataBANK0:
 10800     006E                     RN487X_GetInputsValues@F12901:
 10801     006E                     	ds	2
 10802                           
 10803                           	psect	bssBANK1
 10804     00A0                     __pbssBANK1:
 10805     00A0                     _I2C1_Status:
 10806     00A0                     	ds	29
 10807     00BD                     _eusart1RxStatusBuffer:
 10808     00BD                     	ds	8
 10809     00C5                     _eusart1TxBuffer:
 10810     00C5                     	ds	8
 10811     00CD                     _eusart2RxStatusBuffer:
 10812     00CD                     	ds	8
 10813     00D5                     _eusart2RxBuffer:
 10814     00D5                     	ds	8
 10815     00DD                     _eusart2TxBuffer:
 10816     00DD                     	ds	8
 10817     00E5                     _i2c1_driver_i2cISR:
 10818     00E5                     	ds	2
 10819     00E7                     _i2c1_driver_busCollisionISR:
 10820     00E7                     	ds	2
 10821                           
 10822                           	psect	bssBANK2
 10823     0120                     __pbssBANK2:
 10824     0120                     _i2c_status:
 10825     0120                     	ds	36
 10826     0144                     _eusart1RxBuffer:
 10827     0144                     	ds	8
 10828                           
 10829                           	psect	dataBANK2
 10830     014C                     __pdataBANK2:
 10831     014C                     __hex:
 10832     014C                     	ds	17
 10833                           
 10834                           	psect	bssBANK3
 10835     01A0                     __pbssBANK3:
 10836     01A0                     _cmdBuf:
 10837     01A0                     	ds	64
 10838                           
 10839                           	psect	bssBANK4
 10840     0220                     __pbssBANK4:
 10841     0220                     _lightBlueSerial:
 10842     0220                     	ds	80
 10843                           
 10844                           	psect	bssBANK5
 10845     02A0                     __pbssBANK5:
 10846     02A0                     _statusBuffer:
 10847     02A0                     	ds	80
 10848                           
 10849                           	psect	bssBANK6
 10850     0320                     __pbssBANK6:
 10851     0320                     _statusBuffer@main$F3783:
 10852     0320                     	ds	80
 10853                           
 10854                           	psect	inittext
 10855     1F44                     init_ram:
 10856     1F44  00FE               	movwf	btemp
 10857     1F45                     initloop:
 10858     1F45  0012               	moviw fsr0++
 10859     1F46  001E               	movwi fsr1++
 10860     1F47  0BFE               	decfsz	btemp,f
 10861     1F48  2F45               	goto	initloop
 10862     1F49  3400               	retlw	0
 10863                           
 10864                           	psect	clrtext
 10865     1F3E                     clear_ram0:	
 10866                           ;	Called with FSR0 containing the base address, and
 10867                           ;	WREG with the size to clear
 10868                           
 10869     1F3E  0064               	clrwdt	;clear the watchdog before getting into this loop
 10870     1F3F                     clrloop0:
 10871     1F3F  0180               	clrf	0	;clear RAM location pointed to by FSR
 10872     1F40  3101               	addfsr 0,1
 10873     1F41  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
 10874     1F42  2F3F               	goto	clrloop0	;have we reached the end yet?
 10875     1F43  3400               	retlw	0	;all done for this memory range, return
 10876                           
 10877                           	psect	cstackBANK1
 10878     00EF                     __pcstackBANK1:
 10879     00EF                     _main$5440:
 10880                           
 10881                           ; 1 bytes @ 0x0
 10882     00EF                     	ds	1
 10883                           
 10884                           	psect	cstackCOMMON
 10885     0070                     __pcstackCOMMON:
 10886     0070                     ?_BMA253_NewAccelDataRdyY:
 10887     0070                     ?_BMA253_NewAccelDataRdyZ:	
 10888                           ; 1 bytes @ 0x0
 10889                           
 10890     0070                     ?_readRegister:	
 10891                           ; 1 bytes @ 0x0
 10892                           
 10893     0070                     ?_LIGHTBLUE_GetButtonValue:	
 10894                           ; 1 bytes @ 0x0
 10895                           
 10896     0070                     ?_LIGHTBLUE_GetDataLedValue:	
 10897                           ; 1 bytes @ 0x0
 10898                           
 10899     0070                     ?_LIGHTBLUE_GetErrorLedValue:	
 10900                           ; 1 bytes @ 0x0
 10901                           
 10902     0070                     ?_LIGHTBLUE_UpdateErrorLed:	
 10903                           ; 1 bytes @ 0x0
 10904                           
 10905     0070                     ?_RN487X_EnterCmdMode:	
 10906                           ; 1 bytes @ 0x0
 10907                           
 10908     0070                     ?_RN487X_EnterDataMode:	
 10909                           ; 1 bytes @ 0x0
 10910                           
 10911     0070                     ?_EUSART1_Read:	
 10912                           ; 1 bytes @ 0x0
 10913                           
 10914     0070                     ?_EUSART1_is_rx_ready:	
 10915                           ; 1 bytes @ 0x0
 10916                           
 10917     0070                     ?_EUSART1_Receive_ISR:	
 10918                           ; 1 bytes @ 0x0
 10919                           
 10920     0070                     ?_EUSART1_is_tx_done:	
 10921                           ; 1 bytes @ 0x0
 10922                           
 10923     0070                     ?_EUSART1_Transmit_ISR:	
 10924                           ; 1 bytes @ 0x0
 10925                           
 10926     0070                     ??_EUSART1_Transmit_ISR:	
 10927                           ; 1 bytes @ 0x0
 10928                           
 10929     0070                     ?_EUSART1_Initialize:	
 10930                           ; 1 bytes @ 0x0
 10931                           
 10932     0070                     ?_EUSART2_Read:	
 10933                           ; 1 bytes @ 0x0
 10934                           
 10935     0070                     ?_EUSART2_is_rx_ready:	
 10936                           ; 1 bytes @ 0x0
 10937                           
 10938     0070                     ?_EUSART2_Receive_ISR:	
 10939                           ; 1 bytes @ 0x0
 10940                           
 10941     0070                     ?_EUSART2_is_tx_done:	
 10942                           ; 1 bytes @ 0x0
 10943                           
 10944     0070                     ?_EUSART2_Transmit_ISR:	
 10945                           ; 1 bytes @ 0x0
 10946                           
 10947     0070                     ??_EUSART2_Transmit_ISR:	
 10948                           ; 1 bytes @ 0x0
 10949                           
 10950     0070                     ?_EUSART2_Initialize:	
 10951                           ; 1 bytes @ 0x0
 10952                           
 10953     0070                     ?_I2C1_Open:	
 10954                           ; 1 bytes @ 0x0
 10955                           
 10956     0070                     ?_I2C1_MasterWrite:	
 10957                           ; 1 bytes @ 0x0
 10958                           
 10959     0070                     ?_I2C1_Close:	
 10960                           ; 1 bytes @ 0x0
 10961                           
 10962     0070                     ?_I2C1_MasterRead:	
 10963                           ; 1 bytes @ 0x0
 10964                           
 10965     0070                     ?_RN487X_IsConnected:	
 10966                           ; 1 bytes @ 0x0
 10967                           
 10968     0070                     ?_RN487X_Read:	
 10969                           ; 1 bytes @ 0x0
 10970                           
 10971     0070                     ?_RN487X_DataReady:	
 10972                           ; 1 bytes @ 0x0
 10973                           
 10974     0070                     ?_RN487X_Read@rn487x_interface$F1382:	
 10975                           ; 1 bytes @ 0x0
 10976                           
 10977     0070                     ?_RN487X_is_tx_done:	
 10978                           ; 1 bytes @ 0x0
 10979                           
 10980     0070                     ?_RN487X_is_rx_ready:	
 10981                           ; 1 bytes @ 0x0
 10982                           
 10983     0070                     ?_RN487X_FilterData:	
 10984                           ; 1 bytes @ 0x0
 10985                           
 10986     0070                     ?_EUSART2_DefaultFramingErrorHandler:	
 10987                           ; 1 bytes @ 0x0
 10988                           
 10989     0070                     ??_EUSART2_DefaultFramingErrorHandler:	
 10990                           ; 1 bytes @ 0x0
 10991                           
 10992     0070                     ?_EUSART2_DefaultOverrunErrorHandler:	
 10993                           ; 1 bytes @ 0x0
 10994                           
 10995     0070                     ??_EUSART2_DefaultOverrunErrorHandler:	
 10996                           ; 1 bytes @ 0x0
 10997                           
 10998     0070                     ?_EUSART2_DefaultErrorHandler:	
 10999                           ; 1 bytes @ 0x0
 11000                           
 11001     0070                     ?_EUSART2_RxDataHandler:	
 11002                           ; 1 bytes @ 0x0
 11003                           
 11004     0070                     ??_EUSART2_RxDataHandler:	
 11005                           ; 1 bytes @ 0x0
 11006                           
 11007     0070                     ?_EUSART1_DefaultFramingErrorHandler:	
 11008                           ; 1 bytes @ 0x0
 11009                           
 11010     0070                     ??_EUSART1_DefaultFramingErrorHandler:	
 11011                           ; 1 bytes @ 0x0
 11012                           
 11013     0070                     ?_EUSART1_DefaultOverrunErrorHandler:	
 11014                           ; 1 bytes @ 0x0
 11015                           
 11016     0070                     ??_EUSART1_DefaultOverrunErrorHandler:	
 11017                           ; 1 bytes @ 0x0
 11018                           
 11019     0070                     ?_EUSART1_DefaultErrorHandler:	
 11020                           ; 1 bytes @ 0x0
 11021                           
 11022     0070                     ?_EUSART1_RxDataHandler:	
 11023                           ; 1 bytes @ 0x0
 11024                           
 11025     0070                     ??_EUSART1_RxDataHandler:	
 11026                           ; 1 bytes @ 0x0
 11027                           
 11028     0070                     ?_PIN_MANAGER_IOC:	
 11029                           ; 1 bytes @ 0x0
 11030                           
 11031     0070                     ??_PIN_MANAGER_IOC:	
 11032                           ; 1 bytes @ 0x0
 11033                           
 11034     0070                     ?_PMD_Initialize:	
 11035                           ; 1 bytes @ 0x0
 11036                           
 11037     0070                     ?_I2C1_Initialize:	
 11038                           ; 1 bytes @ 0x0
 11039                           
 11040     0070                     ?_PIN_MANAGER_Initialize:	
 11041                           ; 1 bytes @ 0x0
 11042                           
 11043     0070                     ?_OSCILLATOR_Initialize:	
 11044                           ; 1 bytes @ 0x0
 11045                           
 11046     0070                     ?_TMR0_Initialize:	
 11047                           ; 1 bytes @ 0x0
 11048                           
 11049     0070                     ?_IOCAF6_DefaultInterruptHandler:	
 11050                           ; 1 bytes @ 0x0
 11051                           
 11052     0070                     ??_IOCAF6_DefaultInterruptHandler:	
 11053                           ; 1 bytes @ 0x0
 11054                           
 11055     0070                     ?_IOCAF6_ISR:	
 11056                           ; 1 bytes @ 0x0
 11057                           
 11058     0070                     ??_IOCAF6_ISR:	
 11059                           ; 1 bytes @ 0x0
 11060                           
 11061     0070                     ?_I2C1_DO_IDLE:	
 11062                           ; 1 bytes @ 0x0
 11063                           
 11064     0070                     ?_I2C1_DO_SEND_ADR_READ:	
 11065                           ; 1 bytes @ 0x0
 11066                           
 11067     0070                     ?_I2C1_DO_SEND_ADR_WRITE:	
 11068                           ; 1 bytes @ 0x0
 11069                           
 11070     0070                     ?_I2C1_DO_TX:	
 11071                           ; 1 bytes @ 0x0
 11072                           
 11073     0070                     ?_I2C1_DO_RX:	
 11074                           ; 1 bytes @ 0x0
 11075                           
 11076     0070                     ?_I2C1_DO_RCEN:	
 11077                           ; 1 bytes @ 0x0
 11078                           
 11079     0070                     ?_I2C1_DO_TX_EMPTY:	
 11080                           ; 1 bytes @ 0x0
 11081                           
 11082     0070                     ?_I2C1_DO_SEND_RESTART_READ:	
 11083                           ; 1 bytes @ 0x0
 11084                           
 11085     0070                     ?_I2C1_DO_SEND_RESTART_WRITE:	
 11086                           ; 1 bytes @ 0x0
 11087                           
 11088     0070                     ?_I2C1_DO_SEND_RESTART:	
 11089                           ; 1 bytes @ 0x0
 11090                           
 11091     0070                     ?_I2C1_DO_SEND_STOP:	
 11092                           ; 1 bytes @ 0x0
 11093                           
 11094     0070                     ?_I2C1_DO_RX_ACK:	
 11095                           ; 1 bytes @ 0x0
 11096                           
 11097     0070                     ?_I2C1_DO_RX_NACK_STOP:	
 11098                           ; 1 bytes @ 0x0
 11099                           
 11100     0070                     ?_I2C1_DO_RX_NACK_RESTART:	
 11101                           ; 1 bytes @ 0x0
 11102                           
 11103     0070                     ?_I2C1_DO_RESET:	
 11104                           ; 1 bytes @ 0x0
 11105                           
 11106     0070                     ?_I2C1_DO_ADDRESS_NACK:	
 11107                           ; 1 bytes @ 0x0
 11108                           
 11109     0070                     ?_I2C1_MasterClearIrq:	
 11110                           ; 1 bytes @ 0x0
 11111                           
 11112     0070                     ?_I2C1_MasterOpen:	
 11113                           ; 1 bytes @ 0x0
 11114                           
 11115     0070                     ?_I2C1_MasterDisableIrq:	
 11116                           ; 1 bytes @ 0x0
 11117                           
 11118     0070                     ?_I2C1_MasterClose:	
 11119                           ; 1 bytes @ 0x0
 11120                           
 11121     0070                     ?_I2C1_MasterStart:	
 11122                           ; 1 bytes @ 0x0
 11123                           
 11124     0070                     ?_I2C1_Poller:	
 11125                           ; 1 bytes @ 0x0
 11126                           
 11127     0070                     ?_I2C1_MasterWaitForEvent:	
 11128                           ; 1 bytes @ 0x0
 11129                           
 11130     0070                     ?_I2C1_MasterFsm:	
 11131                           ; 1 bytes @ 0x0
 11132                           
 11133     0070                     ?_I2C1_MasterIsNack:	
 11134                           ; 1 bytes @ 0x0
 11135                           
 11136     0070                     ?_I2C1_MasterSendTxData:	
 11137                           ; 1 bytes @ 0x0
 11138                           
 11139     0070                     ?_I2C1_MasterGetRxData:	
 11140                           ; 1 bytes @ 0x0
 11141                           
 11142     0070                     ?_I2C1_MasterSendAck:	
 11143                           ; 1 bytes @ 0x0
 11144                           
 11145     0070                     ?_I2C1_MasterStartRx:	
 11146                           ; 1 bytes @ 0x0
 11147                           
 11148     0070                     ?_I2C1_MasterSetIrq:	
 11149                           ; 1 bytes @ 0x0
 11150                           
 11151     0070                     ?_I2C1_MasterEnableRestart:	
 11152                           ; 1 bytes @ 0x0
 11153                           
 11154     0070                     ?_I2C1_MasterStop:	
 11155                           ; 1 bytes @ 0x0
 11156                           
 11157     0070                     ?_I2C1_MasterSendNack:	
 11158                           ; 1 bytes @ 0x0
 11159                           
 11160     0070                     ?_begin:	
 11161                           ; 1 bytes @ 0x0
 11162                           
 11163     0070                     ?_isConnected:	
 11164                           ; 1 bytes @ 0x0
 11165                           
 11166     0070                     ?_setMagneticChannel:	
 11167                           ; 1 bytes @ 0x0
 11168                           
 11169     0070                     ?_setTemperatureEn:	
 11170                           ; 1 bytes @ 0x0
 11171                           
 11172     0070                     ?_setOperatingMode:	
 11173                           ; 1 bytes @ 0x0
 11174                           
 11175     0070                     ?_setXYAxisRange:	
 11176                           ; 1 bytes @ 0x0
 11177                           
 11178     0070                     ?_setZAxisRange:	
 11179                           ; 1 bytes @ 0x0
 11180                           
 11181     0070                     ?_getError:	
 11182                           ; 1 bytes @ 0x0
 11183                           
 11184     0070                     ?_getLowPower:	
 11185                           ; 1 bytes @ 0x0
 11186                           
 11187     0070                     ?_getOperatingMode:	
 11188                           ; 1 bytes @ 0x0
 11189                           
 11190     0070                     ?_getMagneticChannel:	
 11191                           ; 1 bytes @ 0x0
 11192                           
 11193     0070                     ?_getTemperatureEN:	
 11194                           ; 1 bytes @ 0x0
 11195                           
 11196     0070                     ?_getAngleEn:	
 11197                           ; 1 bytes @ 0x0
 11198                           
 11199     0070                     ?_BMA253_GetAccelDataY:	
 11200                           ; 1 bytes @ 0x0
 11201                           
 11202     0070                     ?_BMA253_GetAccelDataZ:	
 11203                           ; 1 bytes @ 0x0
 11204                           
 11205     0070                     ?_BMA253_GetAccelDataXYZ:	
 11206                           ; 1 bytes @ 0x0
 11207                           
 11208     0070                     ?_LIGHTBLUE_Initialize:	
 11209                           ; 1 bytes @ 0x0
 11210                           
 11211     0070                     ?_LIGHTBLUE_TemperatureSensor:	
 11212                           ; 1 bytes @ 0x0
 11213                           
 11214     0070                     ?_LIGHTBLUE_AccelSensor:	
 11215                           ; 1 bytes @ 0x0
 11216                           
 11217     0070                     ?_LIGHTBLUE_PushButton:	
 11218                           ; 1 bytes @ 0x0
 11219                           
 11220     0070                     ?_LIGHTBLUE_LedState:	
 11221                           ; 1 bytes @ 0x0
 11222                           
 11223     0070                     ?_LIGHTBLUE_SendProtocolVersion:	
 11224                           ; 1 bytes @ 0x0
 11225                           
 11226     0070                     ?_LIGHTBLUE_SendSerialData:	
 11227                           ; 1 bytes @ 0x0
 11228                           
 11229     0070                     ?_LIGHTBLUE_ParseIncomingPacket:	
 11230                           ; 1 bytes @ 0x0
 11231                           
 11232     0070                     ?_LIGHTBLUE_SetErrorLedValue:	
 11233                           ; 1 bytes @ 0x0
 11234                           
 11235     0070                     ?_rn487x_PrintMessageStart:	
 11236                           ; 1 bytes @ 0x0
 11237                           
 11238     0070                     ?_rn487x_PrintMessageEnd:	
 11239                           ; 1 bytes @ 0x0
 11240                           
 11241     0070                     ?_rn487x_PrintIndicatorCharacters:	
 11242                           ; 1 bytes @ 0x0
 11243                           
 11244     0070                     ?_RN487X_Init:	
 11245                           ; 1 bytes @ 0x0
 11246                           
 11247     0070                     ?_RN487X_ReadDefaultResponse:	
 11248                           ; 1 bytes @ 0x0
 11249                           
 11250     0070                     ?_INTERRUPT_InterruptManager:	
 11251                           ; 1 bytes @ 0x0
 11252                           
 11253     0070                     ?_SYSTEM_Initialize:	
 11254                           ; 1 bytes @ 0x0
 11255                           
 11256     0070                     ?_TMR0_HasOverflowOccured:	
 11257                           ; 1 bytes @ 0x0
 11258                           
 11259     0070                     ?_I2C1_MasterOperation:	
 11260                           ; 1 bytes @ 0x0
 11261                           
 11262     0070                     ?_getDeviceStatus:	
 11263                           ; 1 bytes @ 0x0
 11264                           
 11265     0070                     ?_main:	
 11266                           ; 1 bytes @ 0x0
 11267                           
 11268                           
 11269                           ; 2 bytes @ 0x0
 11270     0070                     	ds	1
 11271     0071                     ??_LIGHTBLUE_GetButtonValue:
 11272     0071                     ??_LIGHTBLUE_GetDataLedValue:	
 11273                           ; 1 bytes @ 0x1
 11274                           
 11275     0071                     ??_LIGHTBLUE_GetErrorLedValue:	
 11276                           ; 1 bytes @ 0x1
 11277                           
 11278     0071                     ??_EUSART1_Read:	
 11279                           ; 1 bytes @ 0x1
 11280                           
 11281     0071                     ?_EUSART1_Write:	
 11282                           ; 1 bytes @ 0x1
 11283                           
 11284     0071                     ??_EUSART1_is_rx_ready:	
 11285                           ; 1 bytes @ 0x1
 11286                           
 11287     0071                     ?_EUSART1_SetTxInterruptHandler:	
 11288                           ; 1 bytes @ 0x1
 11289                           
 11290     0071                     ??_EUSART1_Receive_ISR:	
 11291                           ; 1 bytes @ 0x1
 11292                           
 11293     0071                     ?_EUSART1_SetRxInterruptHandler:	
 11294                           ; 1 bytes @ 0x1
 11295                           
 11296     0071                     ??_EUSART1_is_tx_done:	
 11297                           ; 1 bytes @ 0x1
 11298                           
 11299     0071                     ??_EUSART2_Read:	
 11300                           ; 1 bytes @ 0x1
 11301                           
 11302     0071                     ?_EUSART2_Write:	
 11303                           ; 1 bytes @ 0x1
 11304                           
 11305     0071                     ??_EUSART2_is_rx_ready:	
 11306                           ; 1 bytes @ 0x1
 11307                           
 11308     0071                     ?_EUSART2_SetTxInterruptHandler:	
 11309                           ; 1 bytes @ 0x1
 11310                           
 11311     0071                     ??_EUSART2_Receive_ISR:	
 11312                           ; 1 bytes @ 0x1
 11313                           
 11314     0071                     ?_EUSART2_SetRxInterruptHandler:	
 11315                           ; 1 bytes @ 0x1
 11316                           
 11317     0071                     ??_EUSART2_is_tx_done:	
 11318                           ; 1 bytes @ 0x1
 11319                           
 11320     0071                     ?_I2C1_SetBuffer:	
 11321                           ; 1 bytes @ 0x1
 11322                           
 11323     0071                     ??_I2C1_Open:	
 11324                           ; 1 bytes @ 0x1
 11325                           
 11326     0071                     ??_I2C1_Close:	
 11327                           ; 1 bytes @ 0x1
 11328                           
 11329     0071                     ?_RN487X_SetAsyncMessageHandler:	
 11330                           ; 1 bytes @ 0x1
 11331                           
 11332     0071                     ??_RN487X_IsConnected:	
 11333                           ; 1 bytes @ 0x1
 11334                           
 11335     0071                     ??_RN487X_is_tx_done:	
 11336                           ; 1 bytes @ 0x1
 11337                           
 11338     0071                     ??_RN487X_is_rx_ready:	
 11339                           ; 1 bytes @ 0x1
 11340                           
 11341     0071                     ?_RN487X_IndicateRx:	
 11342                           ; 1 bytes @ 0x1
 11343                           
 11344     0071                     ?_RN487X_Reset:	
 11345                           ; 1 bytes @ 0x1
 11346                           
 11347     0071                     ?_RN487X_SetSystemMode:	
 11348                           ; 1 bytes @ 0x1
 11349                           
 11350     0071                     ?_DELAY_milliseconds:	
 11351                           ; 1 bytes @ 0x1
 11352                           
 11353     0071                     ?_strcpy:	
 11354                           ; 1 bytes @ 0x1
 11355                           
 11356     0071                     ?_EUSART2_SetFramingErrorHandler:	
 11357                           ; 1 bytes @ 0x1
 11358                           
 11359     0071                     ?_EUSART2_SetOverrunErrorHandler:	
 11360                           ; 1 bytes @ 0x1
 11361                           
 11362     0071                     ?_EUSART2_SetErrorHandler:	
 11363                           ; 1 bytes @ 0x1
 11364                           
 11365     0071                     ??_EUSART2_DefaultErrorHandler:	
 11366                           ; 1 bytes @ 0x1
 11367                           
 11368     0071                     ?_EUSART1_SetFramingErrorHandler:	
 11369                           ; 1 bytes @ 0x1
 11370                           
 11371     0071                     ?_EUSART1_SetOverrunErrorHandler:	
 11372                           ; 1 bytes @ 0x1
 11373                           
 11374     0071                     ?_EUSART1_SetErrorHandler:	
 11375                           ; 1 bytes @ 0x1
 11376                           
 11377     0071                     ??_EUSART1_DefaultErrorHandler:	
 11378                           ; 1 bytes @ 0x1
 11379                           
 11380     0071                     ??_PMD_Initialize:	
 11381                           ; 1 bytes @ 0x1
 11382                           
 11383     0071                     ??_I2C1_Initialize:	
 11384                           ; 1 bytes @ 0x1
 11385                           
 11386     0071                     ??_OSCILLATOR_Initialize:	
 11387                           ; 1 bytes @ 0x1
 11388                           
 11389     0071                     ??_TMR0_Initialize:	
 11390                           ; 1 bytes @ 0x1
 11391                           
 11392     0071                     ?_IOCAF6_SetInterruptHandler:	
 11393                           ; 1 bytes @ 0x1
 11394                           
 11395     0071                     ??_I2C1_DO_IDLE:	
 11396                           ; 1 bytes @ 0x1
 11397                           
 11398     0071                     ??_I2C1_DO_SEND_ADR_READ:	
 11399                           ; 1 bytes @ 0x1
 11400                           
 11401     0071                     ??_I2C1_DO_RCEN:	
 11402                           ; 1 bytes @ 0x1
 11403                           
 11404     0071                     ??_I2C1_DO_SEND_RESTART_READ:	
 11405                           ; 1 bytes @ 0x1
 11406                           
 11407     0071                     ??_I2C1_DO_SEND_RESTART_WRITE:	
 11408                           ; 1 bytes @ 0x1
 11409                           
 11410     0071                     ??_I2C1_DO_SEND_RESTART:	
 11411                           ; 1 bytes @ 0x1
 11412                           
 11413     0071                     ??_I2C1_DO_SEND_STOP:	
 11414                           ; 1 bytes @ 0x1
 11415                           
 11416     0071                     ??_I2C1_DO_RX_ACK:	
 11417                           ; 1 bytes @ 0x1
 11418                           
 11419     0071                     ??_I2C1_DO_RX_NACK_STOP:	
 11420                           ; 1 bytes @ 0x1
 11421                           
 11422     0071                     ??_I2C1_DO_RX_NACK_RESTART:	
 11423                           ; 1 bytes @ 0x1
 11424                           
 11425     0071                     ??_I2C1_DO_RESET:	
 11426                           ; 1 bytes @ 0x1
 11427                           
 11428     0071                     ??_I2C1_MasterClearIrq:	
 11429                           ; 1 bytes @ 0x1
 11430                           
 11431     0071                     ??_I2C1_MasterOpen:	
 11432                           ; 1 bytes @ 0x1
 11433                           
 11434     0071                     ??_I2C1_MasterDisableIrq:	
 11435                           ; 1 bytes @ 0x1
 11436                           
 11437     0071                     ??_I2C1_MasterClose:	
 11438                           ; 1 bytes @ 0x1
 11439                           
 11440     0071                     ??_I2C1_MasterStart:	
 11441                           ; 1 bytes @ 0x1
 11442                           
 11443     0071                     ?_I2C1_SetCallback:	
 11444                           ; 1 bytes @ 0x1
 11445                           
 11446     0071                     ??_I2C1_MasterWaitForEvent:	
 11447                           ; 1 bytes @ 0x1
 11448                           
 11449     0071                     ??_I2C1_MasterIsNack:	
 11450                           ; 1 bytes @ 0x1
 11451                           
 11452     0071                     ??_I2C1_MasterSendTxData:	
 11453                           ; 1 bytes @ 0x1
 11454                           
 11455     0071                     ??_I2C1_MasterGetRxData:	
 11456                           ; 1 bytes @ 0x1
 11457                           
 11458     0071                     ??_I2C1_MasterSendAck:	
 11459                           ; 1 bytes @ 0x1
 11460                           
 11461     0071                     ??_I2C1_MasterStartRx:	
 11462                           ; 1 bytes @ 0x1
 11463                           
 11464     0071                     ??_I2C1_MasterSetIrq:	
 11465                           ; 1 bytes @ 0x1
 11466                           
 11467     0071                     ??_I2C1_MasterEnableRestart:	
 11468                           ; 1 bytes @ 0x1
 11469                           
 11470     0071                     ??_I2C1_MasterStop:	
 11471                           ; 1 bytes @ 0x1
 11472                           
 11473     0071                     ??_I2C1_MasterSendNack:	
 11474                           ; 1 bytes @ 0x1
 11475                           
 11476     0071                     ?_bitWrite:	
 11477                           ; 1 bytes @ 0x1
 11478                           
 11479     0071                     ?_bitRead:	
 11480                           ; 1 bytes @ 0x1
 11481                           
 11482     0071                     ??_LIGHTBLUE_Initialize:	
 11483                           ; 1 bytes @ 0x1
 11484                           
 11485     0071                     ??_INTERRUPT_InterruptManager:	
 11486                           ; 1 bytes @ 0x1
 11487                           
 11488     0071                     ??_TMR0_HasOverflowOccured:	
 11489                           ; 1 bytes @ 0x1
 11490                           
 11491     0071                     ?_strlen:	
 11492                           ; 1 bytes @ 0x1
 11493                           
 11494     0071                     ?_swap:	
 11495                           ; 2 bytes @ 0x1
 11496                           
 11497     0071                     ?_strncmp:	
 11498                           ; 2 bytes @ 0x1
 11499                           
 11500     0071                     ?_strchr:	
 11501                           ; 2 bytes @ 0x1
 11502                           
 11503     0071                     RN487X_Reset@value:	
 11504                           ; 2 bytes @ 0x1
 11505                           
 11506     0071                     RN487X_IndicateRx@value:	
 11507                           ; 1 bytes @ 0x1
 11508                           
 11509     0071                     RN487X_SetSystemMode@mode:	
 11510                           ; 1 bytes @ 0x1
 11511                           
 11512     0071                     EUSART2_Write@txData:	
 11513                           ; 1 bytes @ 0x1
 11514                           
 11515     0071                     EUSART1_Write@txData:	
 11516                           ; 1 bytes @ 0x1
 11517                           
 11518     0071                     I2C1_Open@address:	
 11519                           ; 1 bytes @ 0x1
 11520                           
 11521     0071                     I2C1_Close@returnValue:	
 11522                           ; 1 bytes @ 0x1
 11523                           
 11524     0071                     I2C1_MasterSendTxData@data:	
 11525                           ; 1 bytes @ 0x1
 11526                           
 11527     0071                     RN487X_SetAsyncMessageHandler@pBuffer:	
 11528                           ; 1 bytes @ 0x1
 11529                           
 11530     0071                     EUSART2_SetFramingErrorHandler@interruptHandler:	
 11531                           ; 2 bytes @ 0x1
 11532                           
 11533     0071                     EUSART2_SetOverrunErrorHandler@interruptHandler:	
 11534                           ; 2 bytes @ 0x1
 11535                           
 11536     0071                     EUSART2_SetErrorHandler@interruptHandler:	
 11537                           ; 2 bytes @ 0x1
 11538                           
 11539     0071                     EUSART2_SetTxInterruptHandler@interruptHandler:	
 11540                           ; 2 bytes @ 0x1
 11541                           
 11542     0071                     EUSART2_SetRxInterruptHandler@interruptHandler:	
 11543                           ; 2 bytes @ 0x1
 11544                           
 11545     0071                     EUSART1_SetFramingErrorHandler@interruptHandler:	
 11546                           ; 2 bytes @ 0x1
 11547                           
 11548     0071                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
 11549                           ; 2 bytes @ 0x1
 11550                           
 11551     0071                     EUSART1_SetErrorHandler@interruptHandler:	
 11552                           ; 2 bytes @ 0x1
 11553                           
 11554     0071                     EUSART1_SetTxInterruptHandler@interruptHandler:	
 11555                           ; 2 bytes @ 0x1
 11556                           
 11557     0071                     EUSART1_SetRxInterruptHandler@interruptHandler:	
 11558                           ; 2 bytes @ 0x1
 11559                           
 11560     0071                     IOCAF6_SetInterruptHandler@InterruptHandler:	
 11561                           ; 2 bytes @ 0x1
 11562                           
 11563     0071                     I2C1_SetBuffer@bufferSize:	
 11564                           ; 2 bytes @ 0x1
 11565                           
 11566     0071                     I2C1_SetCallback@cb:	
 11567                           ; 2 bytes @ 0x1
 11568                           
 11569     0071                     DELAY_milliseconds@milliseconds:	
 11570                           ; 2 bytes @ 0x1
 11571                           
 11572     0071                     bitRead@reg:	
 11573                           ; 2 bytes @ 0x1
 11574                           
 11575     0071                     bitWrite@reg:	
 11576                           ; 2 bytes @ 0x1
 11577                           
 11578     0071                     swap@reg:	
 11579                           ; 2 bytes @ 0x1
 11580                           
 11581     0071                     strcpy@src:	
 11582                           ; 2 bytes @ 0x1
 11583                           
 11584     0071                     strlen@s:	
 11585                           ; 2 bytes @ 0x1
 11586                           
 11587     0071                     strchr@s:	
 11588                           ; 2 bytes @ 0x1
 11589                           
 11590     0071                     strncmp@l:	
 11591                           ; 2 bytes @ 0x1
 11592                           
 11593                           
 11594                           ; 2 bytes @ 0x1
 11595     0071                     	ds	1
 11596     0072                     ??_EUSART1_Write:
 11597     0072                     ??_EUSART2_Write:	
 11598                           ; 1 bytes @ 0x2
 11599                           
 11600     0072                     ??_RN487X_IndicateRx:	
 11601                           ; 1 bytes @ 0x2
 11602                           
 11603     0072                     ??_RN487X_Reset:	
 11604                           ; 1 bytes @ 0x2
 11605                           
 11606     0072                     ??_RN487X_SetSystemMode:	
 11607                           ; 1 bytes @ 0x2
 11608                           
 11609     0072                     ??_I2C1_DO_SEND_ADR_WRITE:	
 11610                           ; 1 bytes @ 0x2
 11611                           
 11612     0072                     EUSART2_Read@readValue:	
 11613                           ; 1 bytes @ 0x2
 11614                           
 11615     0072                     EUSART1_Read@readValue:	
 11616                           ; 1 bytes @ 0x2
 11617                           
 11618     0072                     I2C1_Open@returnValue:	
 11619                           ; 1 bytes @ 0x2
 11620                           
 11621                           
 11622                           ; 1 bytes @ 0x2
 11623     0072                     	ds	1
 11624     0073                     ??_strlen:
 11625     0073                     ??_EUSART1_SetTxInterruptHandler:	
 11626                           ; 1 bytes @ 0x3
 11627                           
 11628     0073                     ??_EUSART1_SetRxInterruptHandler:	
 11629                           ; 1 bytes @ 0x3
 11630                           
 11631     0073                     ??_EUSART1_Initialize:	
 11632                           ; 1 bytes @ 0x3
 11633                           
 11634     0073                     ??_EUSART2_SetTxInterruptHandler:	
 11635                           ; 1 bytes @ 0x3
 11636                           
 11637     0073                     ??_EUSART2_SetRxInterruptHandler:	
 11638                           ; 1 bytes @ 0x3
 11639                           
 11640     0073                     ??_EUSART2_Initialize:	
 11641                           ; 1 bytes @ 0x3
 11642                           
 11643     0073                     ??_I2C1_SetBuffer:	
 11644                           ; 1 bytes @ 0x3
 11645                           
 11646     0073                     ??_RN487X_Read@rn487x_interface$F1384:	
 11647                           ; 1 bytes @ 0x3
 11648                           
 11649     0073                     ??_DELAY_milliseconds:	
 11650                           ; 1 bytes @ 0x3
 11651                           
 11652     0073                     ??_strcpy:	
 11653                           ; 1 bytes @ 0x3
 11654                           
 11655     0073                     ??_EUSART2_SetFramingErrorHandler:	
 11656                           ; 1 bytes @ 0x3
 11657                           
 11658     0073                     ??_EUSART2_SetOverrunErrorHandler:	
 11659                           ; 1 bytes @ 0x3
 11660                           
 11661     0073                     ??_EUSART2_SetErrorHandler:	
 11662                           ; 1 bytes @ 0x3
 11663                           
 11664     0073                     ??_EUSART1_SetFramingErrorHandler:	
 11665                           ; 1 bytes @ 0x3
 11666                           
 11667     0073                     ??_EUSART1_SetOverrunErrorHandler:	
 11668                           ; 1 bytes @ 0x3
 11669                           
 11670     0073                     ??_EUSART1_SetErrorHandler:	
 11671                           ; 1 bytes @ 0x3
 11672                           
 11673     0073                     ??_PIN_MANAGER_Initialize:	
 11674                           ; 1 bytes @ 0x3
 11675                           
 11676     0073                     ??_IOCAF6_SetInterruptHandler:	
 11677                           ; 1 bytes @ 0x3
 11678                           
 11679     0073                     ??_swap:	
 11680                           ; 1 bytes @ 0x3
 11681                           
 11682     0073                     ??_rn487x_PrintMessageStart:	
 11683                           ; 1 bytes @ 0x3
 11684                           
 11685     0073                     ??_rn487x_PrintMessageEnd:	
 11686                           ; 1 bytes @ 0x3
 11687                           
 11688     0073                     ??_rn487x_PrintIndicatorCharacters:	
 11689                           ; 1 bytes @ 0x3
 11690                           
 11691     0073                     ?_RN487X_ReadMsg:	
 11692                           ; 1 bytes @ 0x3
 11693                           
 11694     0073                     ??_RN487X_ReadDefaultResponse:	
 11695                           ; 1 bytes @ 0x3
 11696                           
 11697     0073                     ??_SYSTEM_Initialize:	
 11698                           ; 1 bytes @ 0x3
 11699                           
 11700     0073                     rn487x_PrintIndicatorCharacters@messageType:	
 11701                           ; 1 bytes @ 0x3
 11702                           
 11703     0073                     RN487X_SetAsyncMessageHandler@len:	
 11704                           ; 1 bytes @ 0x3
 11705                           
 11706     0073                     I2C1_SetBuffer@buffer:	
 11707                           ; 1 bytes @ 0x3
 11708                           
 11709     0073                     I2C1_SetCallback@ptr:	
 11710                           ; 1 bytes @ 0x3
 11711                           
 11712     0073                     bitRead@position:	
 11713                           ; 1 bytes @ 0x3
 11714                           
 11715     0073                     bitWrite@position:	
 11716                           ; 1 bytes @ 0x3
 11717                           
 11718     0073                     RN487X_ReadMsg@expectedMsg:	
 11719                           ; 1 bytes @ 0x3
 11720                           
 11721     0073                     strchr@c:	
 11722                           ; 2 bytes @ 0x3
 11723                           
 11724     0073                     strncmp@r:	
 11725                           ; 2 bytes @ 0x3
 11726                           
 11727     0073                     RN487X_ReadDefaultResponse@resp:	
 11728                           ; 2 bytes @ 0x3
 11729                           
 11730                           
 11731                           ; 3 bytes @ 0x3
 11732     0073                     	ds	1
 11733     0074                     ??_RN487X_SetAsyncMessageHandler:
 11734     0074                     ?_RN487X_Delay:	
 11735                           ; 1 bytes @ 0x4
 11736                           
 11737     0074                     ??_I2C1_SetCallback:	
 11738                           ; 1 bytes @ 0x4
 11739                           
 11740     0074                     ??_bitRead:	
 11741                           ; 1 bytes @ 0x4
 11742                           
 11743     0074                     I2C1_SetCallback@idx:	
 11744                           ; 1 bytes @ 0x4
 11745                           
 11746     0074                     bitWrite@value:	
 11747                           ; 1 bytes @ 0x4
 11748                           
 11749     0074                     RN487X_Delay@delayCount:	
 11750                           ; 1 bytes @ 0x4
 11751                           
 11752     0074                     strlen@a:	
 11753                           ; 2 bytes @ 0x4
 11754                           
 11755                           
 11756                           ; 2 bytes @ 0x4
 11757     0074                     	ds	1
 11758     0075                     ?_I2C1_SetDataCompleteCallback:
 11759     0075                     ?_I2C1_SetAddressNackCallback:	
 11760                           ; 1 bytes @ 0x5
 11761                           
 11762     0075                     ??_bitWrite:	
 11763                           ; 1 bytes @ 0x5
 11764                           
 11765     0075                     ??_strchr:	
 11766                           ; 1 bytes @ 0x5
 11767                           
 11768     0075                     RN487X_ReadMsg@msgLen:	
 11769                           ; 1 bytes @ 0x5
 11770                           
 11771     0075                     strcpy@d:	
 11772                           ; 1 bytes @ 0x5
 11773                           
 11774     0075                     I2C1_SetDataCompleteCallback@cb:	
 11775                           ; 1 bytes @ 0x5
 11776                           
 11777     0075                     I2C1_SetAddressNackCallback@cb:	
 11778                           ; 2 bytes @ 0x5
 11779                           
 11780     0075                     strncmp@n:	
 11781                           ; 2 bytes @ 0x5
 11782                           
 11783                           
 11784                           ; 2 bytes @ 0x5
 11785     0075                     	ds	1
 11786     0076                     ?_LIGHTBLUE_SplitByte:
 11787     0076                     ?_RN487X_Write:	
 11788                           ; 1 bytes @ 0x6
 11789                           
 11790     0076                     ??_RN487X_Delay:	
 11791                           ; 1 bytes @ 0x6
 11792                           
 11793     0076                     ??_RN487X_Init:	
 11794                           ; 1 bytes @ 0x6
 11795                           
 11796     0076                     ??_RN487X_ReadMsg:	
 11797                           ; 1 bytes @ 0x6
 11798                           
 11799     0076                     LIGHTBLUE_SplitByte@value:	
 11800                           ; 1 bytes @ 0x6
 11801                           
 11802     0076                     RN487X_Write@txData:	
 11803                           ; 1 bytes @ 0x6
 11804                           
 11805     0076                     RN487X_ReadDefaultResponse@status:	
 11806                           ; 1 bytes @ 0x6
 11807                           
 11808     0076                     strcpy@dest:	
 11809                           ; 1 bytes @ 0x6
 11810                           
 11811                           
 11812                           ; 1 bytes @ 0x6
 11813     0076                     	ds	1
 11814     0077                     ?_LIGHTBLUE_SendPacket:
 11815     0077                     ??_LIGHTBLUE_SplitByte:	
 11816                           ; 1 bytes @ 0x7
 11817                           
 11818     0077                     ??_RN487X_Write:	
 11819                           ; 1 bytes @ 0x7
 11820                           
 11821     0077                     ??_strncmp:	
 11822                           ; 1 bytes @ 0x7
 11823                           
 11824     0077                     ??_LIGHTBLUE_SendSerialData:	
 11825                           ; 1 bytes @ 0x7
 11826                           
 11827     0077                     ?_rn487x_PrintMessage:	
 11828                           ; 1 bytes @ 0x7
 11829                           
 11830     0077                     ?_RN487X_SendCmd:	
 11831                           ; 1 bytes @ 0x7
 11832                           
 11833     0077                     LIGHTBLUE_SendPacket@payload:	
 11834                           ; 1 bytes @ 0x7
 11835                           
 11836     0077                     RN487X_SendCmd@cmdLen:	
 11837                           ; 1 bytes @ 0x7
 11838                           
 11839     0077                     I2C1_SetDataCompleteCallback@ptr:	
 11840                           ; 1 bytes @ 0x7
 11841                           
 11842     0077                     rn487x_PrintMessage@passedMessage:	
 11843                           ; 1 bytes @ 0x7
 11844                           
 11845     0077                     I2C1_SetAddressNackCallback@ptr:	
 11846                           ; 2 bytes @ 0x7
 11847                           
 11848                           
 11849                           ; 2 bytes @ 0x7
 11850     0077                     	ds	1
 11851     0078                     ??_LIGHTBLUE_SendPacket:
 11852     0078                     ??_I2C1_SetDataCompleteCallback:	
 11853                           ; 1 bytes @ 0x8
 11854                           
 11855     0078                     ?_rd1RegCompleteHandler:	
 11856                           ; 1 bytes @ 0x8
 11857                           
 11858     0078                     ?_rd2RegCompleteHandler:	
 11859                           ; 1 bytes @ 0x8
 11860                           
 11861     0078                     ?_wr1RegCompleteHandler:	
 11862                           ; 1 bytes @ 0x8
 11863                           
 11864     0078                     ?_wr2RegCompleteHandler:	
 11865                           ; 1 bytes @ 0x8
 11866                           
 11867     0078                     ?_rdBlkRegCompleteHandler:	
 11868                           ; 1 bytes @ 0x8
 11869                           
 11870     0078                     ?_I2C1_CallbackReturnStop:	
 11871                           ; 1 bytes @ 0x8
 11872                           
 11873     0078                     ?_I2C1_CallbackReturnReset:	
 11874                           ; 1 bytes @ 0x8
 11875                           
 11876     0078                     ?_wr1RegCompleteHandler@strncmp$F4856:	
 11877                           ; 1 bytes @ 0x8
 11878                           
 11879     0078                     ?_rd1RegCompleteHandler@strncmp$F4862:	
 11880                           ; 1 bytes @ 0x8
 11881                           
 11882     0078                     ?_rd2RegCompleteHandler@strncmp$F4865:	
 11883                           ; 1 bytes @ 0x8
 11884                           
 11885     0078                     ?_wr2RegCompleteHandler@strncmp$F4868:	
 11886                           ; 1 bytes @ 0x8
 11887                           
 11888     0078                     ?_rdBlkRegCompleteHandler@strncmp$F4874:	
 11889                           ; 1 bytes @ 0x8
 11890                           
 11891     0078                     ??_RN487X_SendCmd:	
 11892                           ; 1 bytes @ 0x8
 11893                           
 11894     0078                     ?_strstr:	
 11895                           ; 1 bytes @ 0x8
 11896                           
 11897     0078                     LIGHTBLUE_SendSerialData@length:	
 11898                           ; 2 bytes @ 0x8
 11899                           
 11900     0078                     LIGHTBLUE_SplitByte@payload:	
 11901                           ; 1 bytes @ 0x8
 11902                           
 11903     0078                     wr1RegCompleteHandler@p:	
 11904                           ; 1 bytes @ 0x8
 11905                           
 11906     0078                     rd1RegCompleteHandler@p:	
 11907                           ; 1 bytes @ 0x8
 11908                           
 11909     0078                     rd2RegCompleteHandler@p:	
 11910                           ; 1 bytes @ 0x8
 11911                           
 11912     0078                     wr2RegCompleteHandler@p:	
 11913                           ; 1 bytes @ 0x8
 11914                           
 11915     0078                     rdBlkRegCompleteHandler@p:	
 11916                           ; 1 bytes @ 0x8
 11917                           
 11918     0078                     rd1RegCompleteHandler@i2c1_master_example$F1239@ptr:	
 11919                           ; 1 bytes @ 0x8
 11920                           
 11921     0078                     rd2RegCompleteHandler@i2c1_master_example$F1250@ptr:	
 11922                           ; 1 bytes @ 0x8
 11923                           
 11924     0078                     wr1RegCompleteHandler@i2c1_master_example$F1256@ptr:	
 11925                           ; 1 bytes @ 0x8
 11926                           
 11927     0078                     wr2RegCompleteHandler@i2c1_master_example$F1262@ptr:	
 11928                           ; 1 bytes @ 0x8
 11929                           
 11930     0078                     rdBlkRegCompleteHandler@i2c1_master_example$F1273@ptr:	
 11931                           ; 1 bytes @ 0x8
 11932                           
 11933     0078                     RN487X_ReadMsg@resp:	
 11934                           ; 1 bytes @ 0x8
 11935                           
 11936     0078                     I2C1_CallbackReturnStop@funPtr:	
 11937                           ; 1 bytes @ 0x8
 11938                           
 11939     0078                     I2C1_CallbackReturnReset@funPtr:	
 11940                           ; 1 bytes @ 0x8
 11941                           
 11942     0078                     swap@upperByte:	
 11943                           ; 1 bytes @ 0x8
 11944                           
 11945     0078                     bitRead@mask:	
 11946                           ; 1 bytes @ 0x8
 11947                           
 11948     0078                     strstr@h:	
 11949                           ; 2 bytes @ 0x8
 11950                           
 11951                           
 11952                           ; 2 bytes @ 0x8
 11953     0078                     	ds	1
 11954     0079                     ?_LIGHTBLUE_SplitWord:
 11955     0079                     ??_I2C1_SetAddressNackCallback:	
 11956                           ; 1 bytes @ 0x9
 11957                           
 11958     0079                     ??_rd1RegCompleteHandler:	
 11959                           ; 1 bytes @ 0x9
 11960                           
 11961     0079                     ??_rd2RegCompleteHandler:	
 11962                           ; 1 bytes @ 0x9
 11963                           
 11964     0079                     ??_wr1RegCompleteHandler:	
 11965                           ; 1 bytes @ 0x9
 11966                           
 11967     0079                     ??_wr2RegCompleteHandler:	
 11968                           ; 1 bytes @ 0x9
 11969                           
 11970     0079                     ??_rdBlkRegCompleteHandler:	
 11971                           ; 1 bytes @ 0x9
 11972                           
 11973     0079                     ??_I2C1_DO_TX:	
 11974                           ; 1 bytes @ 0x9
 11975                           
 11976     0079                     ??_I2C1_DO_RX:	
 11977                           ; 1 bytes @ 0x9
 11978                           
 11979     0079                     ??_I2C1_DO_TX_EMPTY:	
 11980                           ; 1 bytes @ 0x9
 11981                           
 11982     0079                     ??_I2C1_DO_ADDRESS_NACK:	
 11983                           ; 1 bytes @ 0x9
 11984                           
 11985     0079                     ??_I2C1_CallbackReturnStop:	
 11986                           ; 1 bytes @ 0x9
 11987                           
 11988     0079                     ??_I2C1_CallbackReturnReset:	
 11989                           ; 1 bytes @ 0x9
 11990                           
 11991     0079                     ??_wr1RegCompleteHandler@strncmp$F4858:	
 11992                           ; 1 bytes @ 0x9
 11993                           
 11994     0079                     ??_rd1RegCompleteHandler@strncmp$F4864:	
 11995                           ; 1 bytes @ 0x9
 11996                           
 11997     0079                     ??_rd2RegCompleteHandler@strncmp$F4867:	
 11998                           ; 1 bytes @ 0x9
 11999                           
 12000     0079                     ??_wr2RegCompleteHandler@strncmp$F4870:	
 12001                           ; 1 bytes @ 0x9
 12002                           
 12003     0079                     ??_rdBlkRegCompleteHandler@strncmp$F4876:	
 12004                           ; 1 bytes @ 0x9
 12005                           
 12006     0079                     ??_rn487x_PrintMessage:	
 12007                           ; 1 bytes @ 0x9
 12008                           
 12009     0079                     LIGHTBLUE_SendSerialData@serialData:	
 12010                           ; 1 bytes @ 0x9
 12011                           
 12012     0079                     RN487X_SendCmd@index:	
 12013                           ; 1 bytes @ 0x9
 12014                           
 12015     0079                     RN487X_ReadMsg@index:	
 12016                           ; 1 bytes @ 0x9
 12017                           
 12018     0079                     swap@lowerByte:	
 12019                           ; 1 bytes @ 0x9
 12020                           
 12021     0079                     LIGHTBLUE_SplitWord@value:	
 12022                           ; 1 bytes @ 0x9
 12023                           
 12024     0079                     bitWrite@mask:	
 12025                           ; 2 bytes @ 0x9
 12026                           
 12027                           
 12028                           ; 2 bytes @ 0x9
 12029     0079                     	ds	1
 12030     007A                     LIGHTBLUE_SendPacket@packetID:
 12031     007A                     RN487X_SendCmd@cmd:	
 12032                           ; 1 bytes @ 0xA
 12033                           
 12034     007A                     strstr@n:	
 12035                           ; 1 bytes @ 0xA
 12036                           
 12037                           
 12038                           ; 2 bytes @ 0xA
 12039     007A                     	ds	1
 12040     007B                     ??_i2c_write1ByteRegister:
 12041     007B                     ??_i2c_read1ByteRegister:	
 12042                           ; 1 bytes @ 0xB
 12043                           
 12044     007B                     ??_BMA253_NewAccelDataRdyY:	
 12045                           ; 1 bytes @ 0xB
 12046                           
 12047     007B                     ??_BMA253_NewAccelDataRdyZ:	
 12048                           ; 1 bytes @ 0xB
 12049                           
 12050     007B                     ??_TMAG5273_GetTemperatureValue:	
 12051                           ; 1 bytes @ 0xB
 12052                           
 12053     007B                     ??_LIGHTBLUE_SplitWord:	
 12054                           ; 1 bytes @ 0xB
 12055                           
 12056     007B                     ??_LIGHTBLUE_UpdateErrorLed:	
 12057                           ; 1 bytes @ 0xB
 12058                           
 12059     007B                     ??_RN487X_EnterCmdMode:	
 12060                           ; 1 bytes @ 0xB
 12061                           
 12062     007B                     ??_RN487X_SetOutputs:	
 12063                           ; 1 bytes @ 0xB
 12064                           
 12065     007B                     ??_RN487X_EnterDataMode:	
 12066                           ; 1 bytes @ 0xB
 12067                           
 12068     007B                     ??_I2C1_MasterWrite:	
 12069                           ; 1 bytes @ 0xB
 12070                           
 12071     007B                     ??_I2C1_MasterRead:	
 12072                           ; 1 bytes @ 0xB
 12073                           
 12074     007B                     ??_I2C1_Poller:	
 12075                           ; 1 bytes @ 0xB
 12076                           
 12077     007B                     ??_isConnected:	
 12078                           ; 1 bytes @ 0xB
 12079                           
 12080     007B                     ??_TMAG5273_GetManufacture:	
 12081                           ; 1 bytes @ 0xB
 12082                           
 12083     007B                     ??_LIGHTBLUE_PushButton:	
 12084                           ; 1 bytes @ 0xB
 12085                           
 12086     007B                     ??_LIGHTBLUE_LedState:	
 12087                           ; 1 bytes @ 0xB
 12088                           
 12089     007B                     ??_LIGHTBLUE_SetErrorLedValue:	
 12090                           ; 1 bytes @ 0xB
 12091                           
 12092     007B                     ??_i2c_readNBytes:	
 12093                           ; 1 bytes @ 0xB
 12094                           
 12095     007B                     ??_I2C1_MasterOperation:	
 12096                           ; 1 bytes @ 0xB
 12097                           
 12098     007B                     BMA253_NewAccelDataRdyY@yNewData:	
 12099                           ; 1 bytes @ 0xB
 12100                           
 12101     007B                     BMA253_NewAccelDataRdyZ@zNewData:	
 12102                           ; 1 bytes @ 0xB
 12103                           
 12104     007B                     LIGHTBLUE_SplitWord@payload:	
 12105                           ; 1 bytes @ 0xB
 12106                           
 12107     007B                     i2c_write1ByteRegister@address:	
 12108                           ; 1 bytes @ 0xB
 12109                           
 12110     007B                     i2c_readNBytes@address:	
 12111                           ; 1 bytes @ 0xB
 12112                           
 12113                           
 12114                           ; 1 bytes @ 0xB
 12115     007B                     	ds	1
 12116     007C                     ??_readRegister:
 12117     007C                     ??_RN487X_Read:	
 12118                           ; 1 bytes @ 0xC
 12119                           
 12120     007C                     ??_RN487X_DataReady:	
 12121                           ; 1 bytes @ 0xC
 12122                           
 12123     007C                     ??_RN487X_MessageHandler:	
 12124                           ; 1 bytes @ 0xC
 12125                           
 12126     007C                     ??_begin:	
 12127                           ; 1 bytes @ 0xC
 12128                           
 12129     007C                     ??_LIGHTBLUE_TemperatureSensor:	
 12130                           ; 1 bytes @ 0xC
 12131                           
 12132     007C                     ??_LIGHTBLUE_AccelSensor:	
 12133                           ; 1 bytes @ 0xC
 12134                           
 12135     007C                     ??_writeRegister:	
 12136                           ; 1 bytes @ 0xC
 12137                           
 12138     007C                     ??_getDeviceStatus:	
 12139                           ; 1 bytes @ 0xC
 12140                           
 12141                           
 12142                           	psect	cstackBANK0
 12143     0020                     __pcstackBANK0:	
 12144                           ; 1 bytes @ 0xC
 12145                           
 12146     0020                     ?_RN487X_SetOutputs:
 12147     0020                     ??_strstr:	
 12148                           ; 1 bytes @ 0x0
 12149                           
 12150     0020                     ??_I2C1_MasterFsm:	
 12151                           ; 1 bytes @ 0x0
 12152                           
 12153     0020                     ??_LIGHTBLUE_SendProtocolVersion:	
 12154                           ; 1 bytes @ 0x0
 12155                           
 12156     0020                     LIGHTBLUE_PushButton@button:	
 12157                           ; 1 bytes @ 0x0
 12158                           
 12159     0020                     RN487X_SetOutputs@bitMap:	
 12160                           ; 1 bytes @ 0x0
 12161                           
 12162     0020                     LIGHTBLUE_LedState@payload:	
 12163                           ; 2 bytes @ 0x0
 12164                           
 12165     0020                     rn487x_PrintMessage@printCharacter:	
 12166                           ; 3 bytes @ 0x0
 12167                           
 12168                           
 12169                           ; 32 bytes @ 0x0
 12170     0020                     	ds	1
 12171     0021                     LIGHTBLUE_PushButton@payload:
 12172                           
 12173                           ; 3 bytes @ 0x1
 12174     0021                     	ds	1
 12175     0022                     RN487X_SetOutputs@ioLowNibble:
 12176     0022                     I2C1_MasterOperation@read:	
 12177                           ; 1 bytes @ 0x2
 12178                           
 12179     0022                     strstr@nl:	
 12180                           ; 1 bytes @ 0x2
 12181                           
 12182     0022                     LIGHTBLUE_SendProtocolVersion@payload:	
 12183                           ; 2 bytes @ 0x2
 12184                           
 12185                           
 12186                           ; 19 bytes @ 0x2
 12187     0022                     	ds	1
 12188     0023                     LIGHTBLUE_LedState@led:
 12189     0023                     RN487X_SetOutputs@stateLowNibble:	
 12190                           ; 1 bytes @ 0x3
 12191                           
 12192     0023                     I2C1_MasterOperation@returnValue:	
 12193                           ; 1 bytes @ 0x3
 12194                           
 12195                           
 12196                           ; 1 bytes @ 0x3
 12197     0023                     	ds	1
 12198     0024                     ?_i2c_write1ByteRegister:
 12199     0024                     ?_i2c_read1ByteRegister:	
 12200                           ; 1 bytes @ 0x4
 12201                           
 12202     0024                     ?_i2c_readNBytes:	
 12203                           ; 1 bytes @ 0x4
 12204                           
 12205     0024                     ?_i2c_read2ByteRegister:	
 12206                           ; 1 bytes @ 0x4
 12207                           
 12208     0024                     i2c_write1ByteRegister@reg:	
 12209                           ; 2 bytes @ 0x4
 12210                           
 12211     0024                     i2c_read1ByteRegister@reg:	
 12212                           ; 1 bytes @ 0x4
 12213                           
 12214     0024                     i2c_read2ByteRegister@reg:	
 12215                           ; 1 bytes @ 0x4
 12216                           
 12217     0024                     i2c_readNBytes@data:	
 12218                           ; 1 bytes @ 0x4
 12219                           
 12220     0024                     RN487X_SetOutputs@ioHighNibble:	
 12221                           ; 1 bytes @ 0x4
 12222                           
 12223                           
 12224                           ; 1 bytes @ 0x4
 12225     0024                     	ds	1
 12226     0025                     i2c_write1ByteRegister@data:
 12227     0025                     i2c_read1ByteRegister@address:	
 12228                           ; 1 bytes @ 0x5
 12229                           
 12230     0025                     RN487X_SetOutputs@stateHighNibble:	
 12231                           ; 1 bytes @ 0x5
 12232                           
 12233     0025                     i2c_readNBytes@len:	
 12234                           ; 1 bytes @ 0x5
 12235                           
 12236                           
 12237                           ; 2 bytes @ 0x5
 12238     0025                     	ds	1
 12239     0026                     ??_i2c_read2ByteRegister:
 12240     0026                     ?_writeRegister:	
 12241                           ; 1 bytes @ 0x6
 12242                           
 12243     0026                     LIGHTBLUE_SetErrorLedValue@value:	
 12244                           ; 1 bytes @ 0x6
 12245                           
 12246     0026                     i2c_read1ByteRegister@e:	
 12247                           ; 1 bytes @ 0x6
 12248                           
 12249     0026                     writeRegister@data:	
 12250                           ; 1 bytes @ 0x6
 12251                           
 12252                           
 12253                           ; 1 bytes @ 0x6
 12254     0026                     	ds	1
 12255     0027                     ?_LIGHTBLUE_PerformAction:
 12256     0027                     ?_readRegisters:	
 12257                           ; 1 bytes @ 0x7
 12258                           
 12259     0027                     LIGHTBLUE_PerformAction@data:	
 12260                           ; 1 bytes @ 0x7
 12261                           
 12262     0027                     readRegisters@dataBuffer:	
 12263                           ; 1 bytes @ 0x7
 12264                           
 12265     0027                     writeRegister@regAddress:	
 12266                           ; 1 bytes @ 0x7
 12267                           
 12268     0027                     i2c_read1ByteRegister@x:	
 12269                           ; 1 bytes @ 0x7
 12270                           
 12271                           
 12272                           ; 2 bytes @ 0x7
 12273     0027                     	ds	1
 12274     0028                     ??_LIGHTBLUE_PerformAction:
 12275     0028                     readRegisters@numBytes:	
 12276                           ; 1 bytes @ 0x8
 12277                           
 12278                           
 12279                           ; 1 bytes @ 0x8
 12280     0028                     	ds	1
 12281     0029                     ??_readRegisters:
 12282     0029                     LIGHTBLUE_PerformAction@id:	
 12283                           ; 1 bytes @ 0x9
 12284                           
 12285     0029                     i2c_read1ByteRegister@d2:	
 12286                           ; 1 bytes @ 0x9
 12287                           
 12288                           
 12289                           ; 1 bytes @ 0x9
 12290     0029                     	ds	1
 12291     002A                     ??_BMA253_GetAccelDataY:
 12292     002A                     ??_BMA253_GetAccelDataZ:	
 12293                           ; 1 bytes @ 0xA
 12294                           
 12295     002A                     LIGHTBLUE_PerformAction@led:	
 12296                           ; 1 bytes @ 0xA
 12297                           
 12298     002A                     i2c_read2ByteRegister@address:	
 12299                           ; 1 bytes @ 0xA
 12300                           
 12301                           
 12302                           ; 1 bytes @ 0xA
 12303     002A                     	ds	1
 12304     002B                     ??_LIGHTBLUE_ParseIncomingPacket:
 12305     002B                     readRegisters@regAddress:	
 12306                           ; 1 bytes @ 0xB
 12307                           
 12308     002B                     i2c_read2ByteRegister@result:	
 12309                           ; 1 bytes @ 0xB
 12310                           
 12311                           
 12312                           ; 2 bytes @ 0xB
 12313     002B                     	ds	1
 12314     002C                     readRegister@regAddress:
 12315                           
 12316                           ; 1 bytes @ 0xC
 12317     002C                     	ds	1
 12318     002D                     ?_TMAG5273_GetManufacture:
 12319     002D                     ?_TMAG5273_CalcTemperature:	
 12320                           ; 2 bytes @ 0xD
 12321                           
 12322     002D                     BMA253_GetAccelDataY@yAccelData:	
 12323                           ; 2 bytes @ 0xD
 12324                           
 12325     002D                     BMA253_GetAccelDataZ@zAccelData:	
 12326                           ; 1 bytes @ 0xD
 12327                           
 12328     002D                     readRegister@regVal:	
 12329                           ; 1 bytes @ 0xD
 12330                           
 12331     002D                     _LIGHTBLUE_ParseIncomingPacket$463:	
 12332                           ; 1 bytes @ 0xD
 12333                           
 12334                           
 12335                           ; 2 bytes @ 0xD
 12336     002D                     	ds	1
 12337     002E                     ??_getLowPower:
 12338     002E                     ??_getOperatingMode:	
 12339                           ; 1 bytes @ 0xE
 12340                           
 12341     002E                     ??_getMagneticChannel:	
 12342                           ; 1 bytes @ 0xE
 12343                           
 12344     002E                     ??_getTemperatureEN:	
 12345                           ; 1 bytes @ 0xE
 12346                           
 12347     002E                     ??_getAngleEn:	
 12348                           ; 1 bytes @ 0xE
 12349                           
 12350     002E                     BMA253_GetAccelDataY@lsbData:	
 12351                           ; 1 bytes @ 0xE
 12352                           
 12353     002E                     BMA253_GetAccelDataZ@lsbData:	
 12354                           ; 1 bytes @ 0xE
 12355                           
 12356     002E                     getDeviceStatus@deviceStatusReg:	
 12357                           ; 1 bytes @ 0xE
 12358                           
 12359                           
 12360                           ; 1 bytes @ 0xE
 12361     002E                     	ds	1
 12362     002F                     ??_getError:
 12363     002F                     ??_TMAG5273_CalcTemperature:	
 12364                           ; 1 bytes @ 0xF
 12365                           
 12366     002F                     BMA253_GetAccelDataY@msbData:	
 12367                           ; 1 bytes @ 0xF
 12368                           
 12369     002F                     BMA253_GetAccelDataZ@msbData:	
 12370                           ; 1 bytes @ 0xF
 12371                           
 12372     002F                     _LIGHTBLUE_ParseIncomingPacket$464:	
 12373                           ; 1 bytes @ 0xF
 12374                           
 12375     002F                     TMAG5273_GetManufacture@read:	
 12376                           ; 2 bytes @ 0xF
 12377                           
 12378                           
 12379                           ; 2 bytes @ 0xF
 12380     002F                     	ds	1
 12381     0030                     ??_BMA253_GetAccelDataXYZ:
 12382     0030                     getLowPower@lowPowerModeBit:	
 12383                           ; 1 bytes @ 0x10
 12384                           
 12385     0030                     getOperatingMode@opMode:	
 12386                           ; 1 bytes @ 0x10
 12387                           
 12388     0030                     getMagneticChannel@magChannel:	
 12389                           ; 1 bytes @ 0x10
 12390                           
 12391     0030                     getAngleEn@angleReg:	
 12392                           ; 1 bytes @ 0x10
 12393                           
 12394     0030                     getTemperatureEN@tempEN:	
 12395                           ; 1 bytes @ 0x10
 12396                           
 12397                           
 12398                           ; 1 bytes @ 0x10
 12399     0030                     	ds	1
 12400     0031                     BMA253_GetAccelDataXYZ@lSB:
 12401     0031                     getLowPower@lowPowerMode:	
 12402                           ; 1 bytes @ 0x11
 12403                           
 12404     0031                     getOperatingMode@opMode0:	
 12405                           ; 1 bytes @ 0x11
 12406                           
 12407     0031                     getMagneticChannel@magMode4:	
 12408                           ; 1 bytes @ 0x11
 12409                           
 12410     0031                     getAngleEn@angleDir2:	
 12411                           ; 1 bytes @ 0x11
 12412                           
 12413     0031                     getTemperatureEN@tempENreg:	
 12414                           ; 1 bytes @ 0x11
 12415                           
 12416     0031                     getError@undervoltageError:	
 12417                           ; 1 bytes @ 0x11
 12418                           
 12419     0031                     _LIGHTBLUE_ParseIncomingPacket$465:	
 12420                           ; 1 bytes @ 0x11
 12421                           
 12422                           
 12423                           ; 2 bytes @ 0x11
 12424     0031                     	ds	1
 12425     0032                     BMA253_GetAccelDataXYZ@mSB:
 12426     0032                     getOperatingMode@opMode1:	
 12427                           ; 1 bytes @ 0x12
 12428                           
 12429     0032                     getMagneticChannel@magMode5:	
 12430                           ; 1 bytes @ 0x12
 12431                           
 12432     0032                     getAngleEn@angleDir3:	
 12433                           ; 1 bytes @ 0x12
 12434                           
 12435     0032                     getError@otpCrcError:	
 12436                           ; 1 bytes @ 0x12
 12437                           
 12438     0032                     TMAG5273_CalcTemperature@lowerByte:	
 12439                           ; 1 bytes @ 0x12
 12440                           
 12441                           
 12442                           ; 1 bytes @ 0x12
 12443     0032                     	ds	1
 12444     0033                     BMA253_GetAccelDataXYZ@accelData:
 12445     0033                     LIGHTBLUE_ParseIncomingPacket@receivedByte:	
 12446                           ; 1 bytes @ 0x13
 12447                           
 12448     0033                     getMagneticChannel@magMode6:	
 12449                           ; 1 bytes @ 0x13
 12450                           
 12451     0033                     getError@intPinError:	
 12452                           ; 1 bytes @ 0x13
 12453                           
 12454     0033                     TMAG5273_CalcTemperature@temperatureData:	
 12455                           ; 1 bytes @ 0x13
 12456                           
 12457                           
 12458                           ; 2 bytes @ 0x13
 12459     0033                     	ds	1
 12460     0034                     getMagneticChannel@magMode7:
 12461     0034                     getError@oscillatorError:	
 12462                           ; 1 bytes @ 0x14
 12463                           
 12464     0034                     BMA253_GetAccelDataXYZ@sensorValue:	
 12465                           ; 1 bytes @ 0x14
 12466                           
 12467                           
 12468                           ; 2 bytes @ 0x14
 12469     0034                     	ds	1
 12470     0035                     ?_TMAG5273_GetTemperatureValue:
 12471     0035                     LIGHTBLUE_SendProtocolVersion@value:	
 12472                           ; 1 bytes @ 0x15
 12473                           
 12474     0035                     getError@statusReg:	
 12475                           ; 1 bytes @ 0x15
 12476                           
 12477     0035                     TMAG5273_GetTemperatureValue@temperature:	
 12478                           ; 1 bytes @ 0x15
 12479                           
 12480                           
 12481                           ; 2 bytes @ 0x15
 12482     0035                     	ds	1
 12483     0036                     ??_setMagneticChannel:
 12484     0036                     ??_setTemperatureEn:	
 12485                           ; 1 bytes @ 0x16
 12486                           
 12487     0036                     ??_setOperatingMode:	
 12488                           ; 1 bytes @ 0x16
 12489                           
 12490     0036                     ??_setXYAxisRange:	
 12491                           ; 1 bytes @ 0x16
 12492                           
 12493     0036                     ??_setZAxisRange:	
 12494                           ; 1 bytes @ 0x16
 12495                           
 12496     0036                     LIGHTBLUE_SendProtocolVersion@dataIndex:	
 12497                           ; 1 bytes @ 0x16
 12498                           
 12499     0036                     LIGHTBLUE_AccelSensor@payload:	
 12500                           ; 1 bytes @ 0x16
 12501                           
 12502                           
 12503                           ; 13 bytes @ 0x16
 12504     0036                     	ds	1
 12505     0037                     LIGHTBLUE_TemperatureSensor@payload:
 12506                           
 12507                           ; 5 bytes @ 0x17
 12508     0037                     	ds	1
 12509     0038                     setOperatingMode@opMode:
 12510     0038                     setMagneticChannel@channelMode:	
 12511                           ; 1 bytes @ 0x18
 12512                           
 12513     0038                     setXYAxisRange@xyAxisRange:	
 12514                           ; 1 bytes @ 0x18
 12515                           
 12516     0038                     setZAxisRange@zAxisRange:	
 12517                           ; 1 bytes @ 0x18
 12518                           
 12519     0038                     setTemperatureEn@temperatureEnable:	
 12520                           ; 1 bytes @ 0x18
 12521                           
 12522                           
 12523                           ; 1 bytes @ 0x18
 12524     0038                     	ds	1
 12525     0039                     setOperatingMode@mode:
 12526     0039                     setMagneticChannel@mode:	
 12527                           ; 2 bytes @ 0x19
 12528                           
 12529     0039                     setXYAxisRange@mode:	
 12530                           ; 2 bytes @ 0x19
 12531                           
 12532     0039                     setZAxisRange@mode:	
 12533                           ; 2 bytes @ 0x19
 12534                           
 12535     0039                     setTemperatureEn@mode:	
 12536                           ; 2 bytes @ 0x19
 12537                           
 12538                           
 12539                           ; 2 bytes @ 0x19
 12540     0039                     	ds	2
 12541     003B                     begin@testReg:
 12542                           
 12543                           ; 2 bytes @ 0x1B
 12544     003B                     	ds	1
 12545     003C                     LIGHTBLUE_TemperatureSensor@temperature:
 12546                           
 12547                           ; 2 bytes @ 0x1C
 12548     003C                     	ds	4
 12549     0040                     rn487x_PrintMessage@messageIndex:
 12550                           
 12551                           ; 1 bytes @ 0x20
 12552     0040                     	ds	1
 12553     0041                     ?_RN487X_MessageHandler:
 12554     0041                     RN487X_MessageHandler@message:	
 12555                           ; 1 bytes @ 0x21
 12556                           
 12557                           
 12558                           ; 2 bytes @ 0x21
 12559     0041                     	ds	2
 12560     0043                     RN487X_MessageHandler@messageType:
 12561     0043                     LIGHTBLUE_AccelSensor@accelData:	
 12562                           ; 1 bytes @ 0x23
 12563                           
 12564                           
 12565                           ; 6 bytes @ 0x23
 12566     0043                     	ds	1
 12567     0044                     ??_RN487X_FilterData:
 12568                           
 12569                           ; 1 bytes @ 0x24
 12570     0044                     	ds	4
 12571     0048                     RN487X_FilterData@readChar:
 12572                           
 12573                           ; 1 bytes @ 0x28
 12574     0048                     	ds	1
 12575     0049                     ??_main:
 12576                           
 12577                           ; 1 bytes @ 0x29
 12578     0049                     	ds	1
 12579                           
 12580                           	psect	maintext
 12581     04BD                     __pmaintext:	
 12582 ;;
 12583 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
 12584 ;;
 12585 ;; *************** function _main *****************
 12586 ;; Defined at:
 12587 ;;		line 72 in file "main.c"
 12588 ;; Parameters:    Size  Location     Type
 12589 ;;		None
 12590 ;; Auto vars:     Size  Location     Type
 12591 ;;		None
 12592 ;; Return value:  Size  Location     Type
 12593 ;;                  2  2041[None  ] int 
 12594 ;; Registers used:
 12595 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12596 ;; Tracked objects:
 12597 ;;		On entry : B3F/0
 12598 ;;		On exit  : 0/0
 12599 ;;		Unchanged: 0/0
 12600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12602 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12603 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12604 ;;      Totals:         0       1       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12605 ;;Total ram usage:        2 bytes
 12606 ;; Hardware stack levels required when called: 19
 12607 ;; This function calls:
 12608 ;;		_EUSART1_Read
 12609 ;;		_EUSART1_Write
 12610 ;;		_EUSART1_is_rx_ready
 12611 ;;		_EUSART2_Read
 12612 ;;		_EUSART2_Write
 12613 ;;		_EUSART2_is_rx_ready
 12614 ;;		_LIGHTBLUE_AccelSensor
 12615 ;;		_LIGHTBLUE_Initialize
 12616 ;;		_LIGHTBLUE_LedState
 12617 ;;		_LIGHTBLUE_ParseIncomingPacket
 12618 ;;		_LIGHTBLUE_PushButton
 12619 ;;		_LIGHTBLUE_SendProtocolVersion
 12620 ;;		_LIGHTBLUE_SendSerialData
 12621 ;;		_LIGHTBLUE_TemperatureSensor
 12622 ;;		_RN487X_DataReady
 12623 ;;		_RN487X_Init
 12624 ;;		_RN487X_IsConnected
 12625 ;;		_RN487X_Read
 12626 ;;		_RN487X_SetAsyncMessageHandler
 12627 ;;		_RN487X_Write
 12628 ;;		_SYSTEM_Initialize
 12629 ;;		_TMR0_HasOverflowOccured
 12630 ;;		_begin
 12631 ;; This function is called by:
 12632 ;;		Startup code after reset
 12633 ;; This function uses a non-reentrant model
 12634 ;;
 12635                           
 12636     04BD                     _main:	
 12637                           ;psect for function _main
 12638                           
 12639     04BD                     l15026:	
 12640                           ;incstack = 0
 12641 ;; hardware stack exceeded
 12642                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12643                           
 12644                           
 12645                           ;main.c: 75:     SYSTEM_Initialize();
 12646     04BD  3191  21D8  3184   	fcall	_SYSTEM_Initialize
 12647                           
 12648                           ;main.c: 76:     RN487X_SetAsyncMessageHandler(statusBuffer, sizeof(statusBuffer));
 12649     04C0  3020               	movlw	low _statusBuffer@main$F3783
 12650     04C1  00F1               	movwf	RN487X_SetAsyncMessageHandler@pBuffer
 12651     04C2  3003               	movlw	high _statusBuffer@main$F3783
 12652     04C3  00F2               	movwf	RN487X_SetAsyncMessageHandler@pBuffer+1
 12653     04C4  3050               	movlw	80
 12654     04C5  00F3               	movwf	RN487X_SetAsyncMessageHandler@len
 12655     04C6  3192  227B  3184   	fcall	_RN487X_SetAsyncMessageHandler
 12656     04C9                     l15028:
 12657                           
 12658                           ;main.c: 79:     (INTCONbits.GIE = 1);
 12659     04C9  178B               	bsf	11,7	;volatile
 12660     04CA                     l15030:
 12661                           
 12662                           ;main.c: 82:     (INTCONbits.PEIE = 1);
 12663     04CA  170B               	bsf	11,6	;volatile
 12664     04CB                     l15032:
 12665                           
 12666                           ;main.c: 84:     RN487X_Init();
 12667     04CB  3187  27A1  3184   	fcall	_RN487X_Init
 12668     04CE                     l15034:
 12669                           
 12670                           ;main.c: 85:     LIGHTBLUE_Initialize();
 12671     04CE  319E  26EA  3184   	fcall	_LIGHTBLUE_Initialize
 12672                           
 12673                           ;main.c: 86:     begin();
 12674     04D1  318E  267C  3184   	fcall	_begin
 12675     04D4                     l15036:
 12676                           
 12677                           ;main.c: 89:     {;main.c: 90:         if (RN487X_IsConnected() == 1)
 12678     04D4  319E  2679  3184   	fcall	_RN487X_IsConnected
 12679     04D7  3A01               	xorlw	1
 12680     04D8  1D03               	skipz
 12681     04D9  2CDB               	goto	u12201
 12682     04DA  2CDC               	goto	u12200
 12683     04DB                     u12201:
 12684     04DB  2D63               	goto	l2057
 12685     04DC                     u12200:
 12686     04DC                     l15038:
 12687                           
 12688                           ;main.c: 91:         {;main.c: 92:             if ((TMR0_HasOverflowOccured()) == 1)
 12689     04DC  319E  26D9  3184   	fcall	_TMR0_HasOverflowOccured
 12690     04DF  3A01               	xorlw	1
 12691     04E0  1D03               	skipz
 12692     04E1  2CE3               	goto	u12211
 12693     04E2  2CE4               	goto	u12210
 12694     04E3                     u12211:
 12695     04E3  2CFC               	goto	l2046
 12696     04E4                     u12210:
 12697     04E4                     l15040:
 12698                           
 12699                           ;main.c: 93:             {;main.c: 94:                 (PIR0bits.TMR0IF = 0);
 12700     04E4  014E               	movlb	14	; select bank14
 12701     04E5  128C               	bcf	12,5	;volatile
 12702     04E6                     l15042:
 12703                           
 12704                           ;main.c: 96:                 LIGHTBLUE_TemperatureSensor();
 12705     04E6  3192  22AC  3184   	fcall	_LIGHTBLUE_TemperatureSensor
 12706                           
 12707                           ;main.c: 97:                 LIGHTBLUE_AccelSensor();
 12708     04E9  3196  26A4  3184   	fcall	_LIGHTBLUE_AccelSensor
 12709                           
 12710                           ;main.c: 98:                 LIGHTBLUE_PushButton();
 12711     04EC  3191  215D  3184   	fcall	_LIGHTBLUE_PushButton
 12712                           
 12713                           ;main.c: 99:                 LIGHTBLUE_LedState();
 12714     04EF  3194  24B1  3184   	fcall	_LIGHTBLUE_LedState
 12715                           
 12716                           ;main.c: 100:                 LIGHTBLUE_SendProtocolVersion();
 12717     04F2  3197  2761  3184   	fcall	_LIGHTBLUE_SendProtocolVersion
 12718                           
 12719                           ;main.c: 101:             }
 12720     04F5  2CD4               	goto	l15036
 12721     04F6                     l15044:
 12722                           
 12723                           ;main.c: 105:                 {;main.c: 106:                     LIGHTBLUE_ParseIncoming
      +                          Packet(RN487X_Read());
 12724     04F6  3190  2017  3184   	fcall	_RN487X_Read
 12725     04F9  3185  2590  3184   	fcall	_LIGHTBLUE_ParseIncomingPacket
 12726     04FC                     l2046:	
 12727                           ;main.c: 107:                 }
 12728                           
 12729                           
 12730                           ;main.c: 104:                 while (RN487X_DataReady())
 12731     04FC  3193  2349  3184   	fcall	_RN487X_DataReady
 12732     04FF  3A00               	xorlw	0
 12733     0500  1D03               	skipz
 12734     0501  2D03               	goto	u12221
 12735     0502  2D04               	goto	u12220
 12736     0503                     u12221:
 12737     0503  2CF6               	goto	l15044
 12738     0504                     u12220:
 12739     0504  2D44               	goto	l15062
 12740     0505                     l15046:
 12741                           
 12742                           ;main.c: 109:                 {;main.c: 110:                     lightBlueSerial[serialI
      +                          ndex] = uart[UART_CDC].Read();
 12743     0505  3000               	movlw	low (_uart| (0+32768))
 12744     0506  0084               	movwf	4
 12745     0507  3098               	movlw	high (_uart| (0+32768))
 12746     0508  0085               	movwf	5
 12747     0509  3F01               	moviw [1]fsr0
 12748     050A  008A               	movwf	10
 12749     050B  3F00               	moviw [0]fsr0
 12750     050C  000A               	callw
 12751     050D  3184               	pagesel	$
 12752     050E  0140               	movlb	0	; select bank0
 12753     050F  00C9               	movwf	??_main
 12754     0510  0856               	movf	_serialIndex,w
 12755     0511  3E20               	addlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12756     0512  0086               	movwf	6
 12757     0513  3002               	movlw	2	; select bank4/5
 12758     0514  0087               	movwf	7
 12759     0515  0849               	movf	??_main,w
 12760     0516  0081               	movwf	1
 12761     0517                     l15048:
 12762                           
 12763                           ;main.c: 111:                     if ((lightBlueSerial[serialIndex] == '\r')
 12764     0517  0856               	movf	_serialIndex,w
 12765     0518  3E20               	addlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12766     0519  0086               	movwf	6
 12767     051A  3002               	movlw	2	; select bank4/5
 12768     051B  0087               	movwf	7
 12769     051C  300D               	movlw	13
 12770     051D  0601               	xorwf	1,w
 12771     051E  1903               	btfsc	3,2
 12772     051F  2D21               	goto	u12231
 12773     0520  2D22               	goto	u12230
 12774     0521                     u12231:
 12775     0521  2D33               	goto	l15054
 12776     0522                     u12230:
 12777     0522                     l15050:
 12778     0522  0856               	movf	_serialIndex,w
 12779     0523  3E20               	addlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12780     0524  0086               	movwf	6
 12781     0525  3002               	movlw	2	; select bank4/5
 12782     0526  0087               	movwf	7
 12783     0527  300A               	movlw	10
 12784     0528  0601               	xorwf	1,w
 12785     0529  1903               	btfsc	3,2
 12786     052A  2D2C               	goto	u12241
 12787     052B  2D2D               	goto	u12240
 12788     052C                     u12241:
 12789     052C  2D33               	goto	l15054
 12790     052D                     u12240:
 12791     052D                     l15052:
 12792     052D  304F               	movlw	79
 12793     052E  0656               	xorwf	_serialIndex,w
 12794     052F  1D03               	btfss	3,2
 12795     0530  2D32               	goto	u12251
 12796     0531  2D33               	goto	u12250
 12797     0532                     u12251:
 12798     0532  2D40               	goto	l15060
 12799     0533                     u12250:
 12800     0533                     l15054:
 12801                           
 12802                           ;main.c: 114:                     {;main.c: 115:                         lightBlueSerial
      +                          [serialIndex] = '\0';
 12803     0533  0856               	movf	_serialIndex,w
 12804     0534  3E20               	addlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12805     0535  0086               	movwf	6
 12806     0536  3002               	movlw	2	; select bank4/5
 12807     0537  0087               	movwf	7
 12808     0538  0181               	clrf	1
 12809     0539                     l15056:
 12810                           
 12811                           ;main.c: 116:                         LIGHTBLUE_SendSerialData(lightBlueSerial);
 12812     0539  3020               	movlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12813     053A  3186  265C  3184   	fcall	_LIGHTBLUE_SendSerialData
 12814     053D                     l15058:
 12815                           
 12816                           ;main.c: 117:                         serialIndex = 0;
 12817     053D  0140               	movlb	0	; select bank0
 12818     053E  01D6               	clrf	_serialIndex
 12819                           
 12820                           ;main.c: 118:                     }
 12821     053F  2D44               	goto	l15062
 12822     0540                     l15060:
 12823                           
 12824                           ;main.c: 120:                     {;main.c: 121:                         serialIndex++;
 12825     0540  3001               	movlw	1
 12826     0541  00C9               	movwf	??_main
 12827     0542  0849               	movf	??_main,w
 12828     0543  07D6               	addwf	_serialIndex,f
 12829     0544                     l15062:
 12830                           
 12831                           ;main.c: 108:                 while (uart[UART_CDC].DataReady())
 12832     0544  3006               	movlw	low ((_uart+6)| (0+32768))
 12833     0545  0084               	movwf	4
 12834     0546  3098               	movlw	high ((_uart+6)| (0+32768))
 12835     0547  0085               	movwf	5
 12836     0548  3F01               	moviw [1]fsr0
 12837     0549  008A               	movwf	10
 12838     054A  3F00               	moviw [0]fsr0
 12839     054B  000A               	callw
 12840     054C  3184               	pagesel	$
 12841     054D  3A00               	xorlw	0
 12842     054E  1D03               	skipz
 12843     054F  2D51               	goto	u12261
 12844     0550  2D52               	goto	u12260
 12845     0551                     u12261:
 12846     0551  2D05               	goto	l15046
 12847     0552                     u12260:
 12848     0552  2CD4               	goto	l15036
 12849     0553                     l15064:
 12850                           
 12851                           ;main.c: 130:             {;main.c: 131:                 uart[UART_CDC].Write(RN487X_Rea
      +                          d());
 12852     0553  3190  2017  3184   	fcall	_RN487X_Read
 12853     0556  0141               	movlb	1	; select bank1
 12854     0557  00EF               	movwf	_main$5440^(0+128)
 12855                           
 12856                           ;main.c: 130:             {;main.c: 131:                 uart[UART_CDC].Write(RN487X_Rea
      +                          d());
 12857     0558  086F               	movf	_main$5440^(0+128),w
 12858     0559  00F1               	movwf	EUSART2_Write@txData
 12859     055A  3002               	movlw	low ((_uart+2)| (0+32768))
 12860     055B  0084               	movwf	4
 12861     055C  3098               	movlw	high ((_uart+2)| (0+32768))
 12862     055D  0085               	movwf	5
 12863     055E  3F01               	moviw [1]fsr0
 12864     055F  008A               	movwf	10
 12865     0560  3F00               	moviw [0]fsr0
 12866     0561  000A               	callw
 12867     0562  3184               	pagesel	$
 12868     0563                     l2057:	
 12869                           ;main.c: 132:             }
 12870                           
 12871                           
 12872                           ;main.c: 129:             while(RN487X_DataReady())
 12873     0563  3193  2349  3184   	fcall	_RN487X_DataReady
 12874     0566  3A00               	xorlw	0
 12875     0567  1D03               	skipz
 12876     0568  2D6A               	goto	u12271
 12877     0569  2D6B               	goto	u12270
 12878     056A                     u12271:
 12879     056A  2D53               	goto	l15064
 12880     056B                     u12270:
 12881     056B  2D7F               	goto	l15068
 12882     056C                     l15066:
 12883                           
 12884                           ;main.c: 134:             {;main.c: 135:                 RN487X.Write(uart[UART_CDC].Rea
      +                          d());
 12885     056C  3000               	movlw	low (_uart| (0+32768))
 12886     056D  0084               	movwf	4
 12887     056E  3098               	movlw	high (_uart| (0+32768))
 12888     056F  0085               	movwf	5
 12889     0570  3F01               	moviw [1]fsr0
 12890     0571  008A               	movwf	10
 12891     0572  3F00               	moviw [0]fsr0
 12892     0573  000A               	callw
 12893     0574  3184               	pagesel	$
 12894     0575  00F6               	movwf	RN487X_Write@txData
 12895     0576  3068               	movlw	low (_RN487X| (0+32768))
 12896     0577  0084               	movwf	4
 12897     0578  3098               	movlw	high (_RN487X| (0+32768))
 12898     0579  0085               	movwf	5
 12899     057A  3F01               	moviw [1]fsr0
 12900     057B  008A               	movwf	10
 12901     057C  3F00               	moviw [0]fsr0
 12902     057D  000A               	callw
 12903     057E  3184               	pagesel	$
 12904     057F                     l15068:
 12905                           
 12906                           ;main.c: 133:             while (uart[UART_CDC].DataReady())
 12907     057F  3006               	movlw	low ((_uart+6)| (0+32768))
 12908     0580  0084               	movwf	4
 12909     0581  3098               	movlw	high ((_uart+6)| (0+32768))
 12910     0582  0085               	movwf	5
 12911     0583  3F01               	moviw [1]fsr0
 12912     0584  008A               	movwf	10
 12913     0585  3F00               	moviw [0]fsr0
 12914     0586  000A               	callw
 12915     0587  3184               	pagesel	$
 12916     0588  3A00               	xorlw	0
 12917     0589  1D03               	skipz
 12918     058A  2D8C               	goto	u12281
 12919     058B  2D8D               	goto	u12280
 12920     058C                     u12281:
 12921     058C  2D6C               	goto	l15066
 12922     058D                     u12280:
 12923     058D  2CD4               	goto	l15036
 12924     058E  3180  2855         	ljmp	start
 12925     0590                     __end_of_main:
 12926                           
 12927                           	psect	text1
 12928     0E7C                     __ptext1:	
 12929 ;; *************** function _begin *****************
 12930 ;; Defined at:
 12931 ;;		line 31 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 12932 ;; Parameters:    Size  Location     Type
 12933 ;;		None
 12934 ;; Auto vars:     Size  Location     Type
 12935 ;;  testReg         2   27[BANK0 ] unsigned short 
 12936 ;;  myRead          1    0        unsigned char 
 12937 ;; Return value:  Size  Location     Type
 12938 ;;                  1    wreg      char 
 12939 ;; Registers used:
 12940 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12941 ;; Tracked objects:
 12942 ;;		On entry : 0/0
 12943 ;;		On exit  : 0/0
 12944 ;;		Unchanged: 0/0
 12945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12947 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12949 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12950 ;;Total ram usage:        2 bytes
 12951 ;; Hardware stack levels used: 1
 12952 ;; Hardware stack levels required when called: 18
 12953 ;; This function calls:
 12954 ;;		_bitRead
 12955 ;;		_bitWrite
 12956 ;;		_getAngleEn
 12957 ;;		_getError
 12958 ;;		_getLowPower
 12959 ;;		_getMagneticChannel
 12960 ;;		_getOperatingMode
 12961 ;;		_getTemperatureEN
 12962 ;;		_isConnected
 12963 ;;		_setMagneticChannel
 12964 ;;		_setOperatingMode
 12965 ;;		_setTemperatureEn
 12966 ;;		_setXYAxisRange
 12967 ;;		_setZAxisRange
 12968 ;; This function is called by:
 12969 ;;		_main
 12970 ;; This function uses a non-reentrant model
 12971 ;;
 12972                           
 12973     0E7C                     _begin:	
 12974                           ;psect for function _begin
 12975                           
 12976     0E7C                     l14546:	
 12977                           ;incstack = 0
 12978 ;; hardware stack exceeded
 12979                           ; Regs used in _begin: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12980                           
 12981                           
 12982                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 33:     uint16_t testR
      +                          eg = 0b0001001110010001;
 12983     0E7C  3091               	movlw	145
 12984     0E7D  0140               	movlb	0	; select bank0
 12985     0E7E  00BB               	movwf	begin@testReg
 12986     0E7F  3013               	movlw	19
 12987     0E80  00BC               	movwf	begin@testReg+1
 12988     0E81                     l14548:
 12989     0E81                     l14550:
 12990                           
 12991                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 35:     bitWrite(&test
      +                          Reg, 2, 1);
 12992     0E81  303B               	movlw	low begin@testReg
 12993     0E82  00F1               	movwf	bitWrite@reg
 12994     0E83  3000               	movlw	high begin@testReg
 12995     0E84  00F2               	movwf	bitWrite@reg+1
 12996     0E85  3002               	movlw	2
 12997     0E86  00F3               	movwf	bitWrite@position
 12998     0E87  01F4               	clrf	bitWrite@value
 12999     0E88  0AF4               	incf	bitWrite@value,f
 13000     0E89  3194  248D  318E   	fcall	_bitWrite
 13001     0E8C                     l14552:
 13002     0E8C  303B               	movlw	low begin@testReg
 13003     0E8D  00F1               	movwf	bitRead@reg
 13004     0E8E  3000               	movlw	high begin@testReg
 13005     0E8F  00F2               	movwf	bitRead@reg+1
 13006     0E90  3002               	movlw	2
 13007     0E91  00F3               	movwf	bitRead@position
 13008     0E92  3194  2424  318E   	fcall	_bitRead
 13009     0E95                     l14554:
 13010     0E95  303B               	movlw	low begin@testReg
 13011     0E96  00F1               	movwf	bitRead@reg
 13012     0E97  3000               	movlw	high begin@testReg
 13013     0E98  00F2               	movwf	bitRead@reg+1
 13014     0E99  01F3               	clrf	bitRead@position
 13015     0E9A  0AF3               	incf	bitRead@position,f
 13016     0E9B  3194  2424  318E   	fcall	_bitRead
 13017     0E9E                     l14556:
 13018                           
 13019                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 43:     if (isConnecte
      +                          d() != 0) {
 13020     0E9E  3191  21AD  318E   	fcall	_isConnected
 13021     0EA1  3A00               	xorlw	0
 13022     0EA2  1903               	skipnz
 13023     0EA3  2EA5               	goto	u11621
 13024     0EA4  2EA6               	goto	u11620
 13025     0EA5                     u11621:
 13026     0EA5  2EA7               	goto	l14560
 13027     0EA6                     u11620:
 13028     0EA6  2EEB               	goto	l2117
 13029     0EA7                     l14560:
 13030                           
 13031                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 48:     setMagneticCha
      +                          nnel(0X7);
 13032     0EA7  3007               	movlw	7
 13033     0EA8  3180  20A8  318E   	fcall	_setMagneticChannel
 13034                           
 13035                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 49:     setTemperature
      +                          En(1);
 13036     0EAB  3001               	movlw	1
 13037     0EAC  3188  20B2  318E   	fcall	_setTemperatureEn
 13038                           
 13039                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 50:     setOperatingMo
      +                          de(0X2);
 13040     0EAF  3002               	movlw	2
 13041     0EB0  3187  2706  318E   	fcall	_setOperatingMode
 13042                           
 13043                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 53:     setXYAxisRange
      +                          (0X1);
 13044     0EB3  3001               	movlw	1
 13045     0EB4  3189  21A8  318E   	fcall	_setXYAxisRange
 13046                           
 13047                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 54:     setZAxisRange(
      +                          0X1);
 13048     0EB7  3001               	movlw	1
 13049     0EB8  3188  20EF  318E   	fcall	_setZAxisRange
 13050                           
 13051                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 57:     if (getError()
      +                           != 0) {
 13052     0EBB  318D  2577  318E   	fcall	_getError
 13053     0EBE  3A00               	xorlw	0
 13054     0EBF  1903               	skipnz
 13055     0EC0  2EC2               	goto	u11631
 13056     0EC1  2EC3               	goto	u11630
 13057     0EC2                     u11631:
 13058     0EC2  2EC4               	goto	l14564
 13059     0EC3                     u11630:
 13060     0EC3  2EEB               	goto	l2117
 13061     0EC4                     l14564:
 13062                           
 13063                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 62:     if (getLowPowe
      +                          r() != 0X0) {
 13064     0EC4  3191  21EE  318E   	fcall	_getLowPower
 13065     0EC7  3A00               	xorlw	0
 13066     0EC8  1903               	skipnz
 13067     0EC9  2ECB               	goto	u11641
 13068     0ECA  2ECC               	goto	u11640
 13069     0ECB                     u11641:
 13070     0ECB  2ECD               	goto	l14568
 13071     0ECC                     u11640:
 13072     0ECC  2EEB               	goto	l2117
 13073     0ECD                     l14568:
 13074                           
 13075                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 67:     if (getOperati
      +                          ngMode() != 0X2) {
 13076     0ECD  318C  24D0  318E   	fcall	_getOperatingMode
 13077     0ED0  3A02               	xorlw	2
 13078     0ED1  1903               	skipnz
 13079     0ED2  2ED4               	goto	u11651
 13080     0ED3  2ED5               	goto	u11650
 13081     0ED4                     u11651:
 13082     0ED4  2ED6               	goto	l14572
 13083     0ED5                     u11650:
 13084     0ED5  2EEB               	goto	l2117
 13085     0ED6                     l14572:
 13086                           
 13087                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 72:     if (getMagneti
      +                          cChannel() != 0X7) {
 13088     0ED6  3183  2377  318E   	fcall	_getMagneticChannel
 13089     0ED9  3A07               	xorlw	7
 13090     0EDA  1903               	skipnz
 13091     0EDB  2EDD               	goto	u11661
 13092     0EDC  2EDE               	goto	u11660
 13093     0EDD                     u11661:
 13094     0EDD  2EDF               	goto	l14576
 13095     0EDE                     u11660:
 13096     0EDE  2EEB               	goto	l2117
 13097     0EDF                     l14576:
 13098                           
 13099                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 77:     if (getTempera
      +                          tureEN() != 0X1) {
 13100     0EDF  3191  2198  318E   	fcall	_getTemperatureEN
 13101     0EE2  3A01               	xorlw	1
 13102     0EE3  1903               	skipnz
 13103     0EE4  2EE6               	goto	u11671
 13104     0EE5  2EE7               	goto	u11670
 13105     0EE6                     u11671:
 13106     0EE6  2EE8               	goto	l14580
 13107     0EE7                     u11670:
 13108     0EE7  2EEB               	goto	l2117
 13109     0EE8                     l14580:
 13110                           
 13111                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 82:     if (getAngleEn
      +                          () != 0X0) {
 13112     0EE8  318D  2523  318E   	fcall	_getAngleEn
 13113     0EEB                     l2117:
 13114     0EEB  0008               	return
 13115     0EEC                     __end_of_begin:
 13116                           
 13117                           	psect	text2
 13118     08EF                     __ptext2:	
 13119 ;; *************** function _setZAxisRange *****************
 13120 ;; Defined at:
 13121 ;;		line 1044 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13122 ;; Parameters:    Size  Location     Type
 13123 ;;  zAxisRange      1    wreg     unsigned char 
 13124 ;; Auto vars:     Size  Location     Type
 13125 ;;  zAxisRange      1   24[BANK0 ] unsigned char 
 13126 ;;  mode            2   25[BANK0 ] unsigned short 
 13127 ;; Return value:  Size  Location     Type
 13128 ;;                  1    wreg      char 
 13129 ;; Registers used:
 13130 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13131 ;; Tracked objects:
 13132 ;;		On entry : 0/0
 13133 ;;		On exit  : 0/0
 13134 ;;		Unchanged: 0/0
 13135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13137 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13138 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13139 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13140 ;;Total ram usage:        5 bytes
 13141 ;; Hardware stack levels used: 1
 13142 ;; Hardware stack levels required when called: 17
 13143 ;; This function calls:
 13144 ;;		_bitWrite
 13145 ;;		_getError
 13146 ;;		_readRegister
 13147 ;;		_writeRegister
 13148 ;; This function is called by:
 13149 ;;		_begin
 13150 ;; This function uses a non-reentrant model
 13151 ;;
 13152                           
 13153     08EF                     _setZAxisRange:	
 13154                           ;psect for function _setZAxisRange
 13155                           
 13156                           
 13157                           ;incstack = 0
 13158 ;; hardware stack exceeded
 13159                           ; Regs used in _setZAxisRange: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13160                           ;setZAxisRange@zAxisRange stored from wreg
 13161     08EF  0140               	movlb	0	; select bank0
 13162     08F0  00B8               	movwf	setZAxisRange@zAxisRange
 13163     08F1                     l14000:
 13164     08F1                     l14002:
 13165                           
 13166                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1046:     mode = readR
      +                          egister(TMAG5273_REG_SENSOR_CONFIG_2);
 13167     08F1  3003               	movlw	3
 13168     08F2  3190  2058  3188   	fcall	_readRegister
 13169     08F5  0140               	movlb	0	; select bank0
 13170     08F6  00B6               	movwf	??_setZAxisRange
 13171     08F7  01B7               	clrf	??_setZAxisRange+1
 13172     08F8  0836               	movf	??_setZAxisRange,w
 13173     08F9  00B9               	movwf	setZAxisRange@mode
 13174     08FA  0837               	movf	??_setZAxisRange+1,w
 13175     08FB  00BA               	movwf	setZAxisRange@mode+1
 13176     08FC                     l14004:
 13177                           
 13178                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1049:     if (zAxisRan
      +                          ge == 0X0)
 13179     08FC  0838               	movf	setZAxisRange@zAxisRange,w
 13180     08FD  1D03               	btfss	3,2
 13181     08FE  2900               	goto	u10771
 13182     08FF  2901               	goto	u10770
 13183     0900                     u10771:
 13184     0900  2912               	goto	l14010
 13185     0901                     u10770:
 13186     0901                     l14006:
 13187                           
 13188                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1050:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1052:         bitWrite(mode, 0, 0
      +                          );
 13189     0901  083A               	movf	setZAxisRange@mode+1,w
 13190     0902  00F2               	movwf	bitWrite@reg+1
 13191     0903  0839               	movf	setZAxisRange@mode,w
 13192     0904  00F1               	movwf	bitWrite@reg
 13193     0905  01F3               	clrf	bitWrite@position
 13194     0906  01F4               	clrf	bitWrite@value
 13195     0907  3194  248D  3188   	fcall	_bitWrite
 13196     090A                     l14008:
 13197                           
 13198                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1054:         writeReg
      +                          ister(TMAG5273_REG_SENSOR_CONFIG_2, mode);
 13199     090A  0140               	movlb	0	; select bank0
 13200     090B  0839               	movf	setZAxisRange@mode,w
 13201     090C  00A6               	movwf	writeRegister@data
 13202     090D  3003               	movlw	3
 13203     090E  3190  2000  3188   	fcall	_writeRegister
 13204                           
 13205                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1055:     } else if (z
      +                          AxisRange == 0X1)
 13206     0911  2928               	goto	l14016
 13207     0912                     l14010:
 13208     0912  0338               	decf	setZAxisRange@zAxisRange,w
 13209     0913  1D03               	btfss	3,2
 13210     0914  2916               	goto	u10781
 13211     0915  2917               	goto	u10780
 13212     0916                     u10781:
 13213     0916  2928               	goto	l14016
 13214     0917                     u10780:
 13215     0917                     l14012:
 13216                           
 13217                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1056:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1057:         bitWrite(mode, 0, 1
      +                          );
 13218     0917  083A               	movf	setZAxisRange@mode+1,w
 13219     0918  00F2               	movwf	bitWrite@reg+1
 13220     0919  0839               	movf	setZAxisRange@mode,w
 13221     091A  00F1               	movwf	bitWrite@reg
 13222     091B  01F3               	clrf	bitWrite@position
 13223     091C  01F4               	clrf	bitWrite@value
 13224     091D  0AF4               	incf	bitWrite@value,f
 13225     091E  3194  248D  3188   	fcall	_bitWrite
 13226     0921                     l14014:
 13227                           
 13228                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1058:         writeReg
      +                          ister(TMAG5273_REG_SENSOR_CONFIG_2, mode);
 13229     0921  0140               	movlb	0	; select bank0
 13230     0922  0839               	movf	setZAxisRange@mode,w
 13231     0923  00A6               	movwf	writeRegister@data
 13232     0924  3003               	movlw	3
 13233     0925  3190  2000  3188   	fcall	_writeRegister
 13234     0928                     l14016:
 13235                           
 13236                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1061:     return getEr
      +                          ror();;	Return value of _setZAxisRange is never used
 13237     0928  318D  2577  3188   	fcall	_getError
 13238     092B                     l2332:
 13239     092B  0008               	return
 13240     092C                     __end_of_setZAxisRange:
 13241                           
 13242                           	psect	text3
 13243     09A8                     __ptext3:	
 13244 ;; *************** function _setXYAxisRange *****************
 13245 ;; Defined at:
 13246 ;;		line 1017 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13247 ;; Parameters:    Size  Location     Type
 13248 ;;  xyAxisRange     1    wreg     unsigned char 
 13249 ;; Auto vars:     Size  Location     Type
 13250 ;;  xyAxisRange     1   24[BANK0 ] unsigned char 
 13251 ;;  mode            2   25[BANK0 ] unsigned short 
 13252 ;; Return value:  Size  Location     Type
 13253 ;;                  1    wreg      char 
 13254 ;; Registers used:
 13255 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13256 ;; Tracked objects:
 13257 ;;		On entry : 0/0
 13258 ;;		On exit  : 0/0
 13259 ;;		Unchanged: 0/0
 13260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13262 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13263 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13264 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13265 ;;Total ram usage:        5 bytes
 13266 ;; Hardware stack levels used: 1
 13267 ;; Hardware stack levels required when called: 17
 13268 ;; This function calls:
 13269 ;;		_bitWrite
 13270 ;;		_getError
 13271 ;;		_readRegister
 13272 ;;		_writeRegister
 13273 ;; This function is called by:
 13274 ;;		_begin
 13275 ;; This function uses a non-reentrant model
 13276 ;;
 13277                           
 13278     09A8                     _setXYAxisRange:	
 13279                           ;psect for function _setXYAxisRange
 13280                           
 13281                           
 13282                           ;incstack = 0
 13283 ;; hardware stack exceeded
 13284                           ; Regs used in _setXYAxisRange: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13285                           ;setXYAxisRange@xyAxisRange stored from wreg
 13286     09A8  0140               	movlb	0	; select bank0
 13287     09A9  00B8               	movwf	setXYAxisRange@xyAxisRange
 13288     09AA                     l13980:
 13289     09AA                     l13982:
 13290                           
 13291                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1019:     mode = readR
      +                          egister(TMAG5273_REG_SENSOR_CONFIG_2);
 13292     09AA  3003               	movlw	3
 13293     09AB  3190  2058  3189   	fcall	_readRegister
 13294     09AE  0140               	movlb	0	; select bank0
 13295     09AF  00B6               	movwf	??_setXYAxisRange
 13296     09B0  01B7               	clrf	??_setXYAxisRange+1
 13297     09B1  0836               	movf	??_setXYAxisRange,w
 13298     09B2  00B9               	movwf	setXYAxisRange@mode
 13299     09B3  0837               	movf	??_setXYAxisRange+1,w
 13300     09B4  00BA               	movwf	setXYAxisRange@mode+1
 13301     09B5                     l13984:
 13302                           
 13303                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1022:     if (xyAxisRa
      +                          nge == 0X0)
 13304     09B5  0838               	movf	setXYAxisRange@xyAxisRange,w
 13305     09B6  1D03               	btfss	3,2
 13306     09B7  29B9               	goto	u10751
 13307     09B8  29BA               	goto	u10750
 13308     09B9                     u10751:
 13309     09B9  29CC               	goto	l13990
 13310     09BA                     u10750:
 13311     09BA                     l13986:
 13312                           
 13313                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1023:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1025:         bitWrite(mode, 1, 0
      +                          );
 13314     09BA  083A               	movf	setXYAxisRange@mode+1,w
 13315     09BB  00F2               	movwf	bitWrite@reg+1
 13316     09BC  0839               	movf	setXYAxisRange@mode,w
 13317     09BD  00F1               	movwf	bitWrite@reg
 13318     09BE  01F3               	clrf	bitWrite@position
 13319     09BF  0AF3               	incf	bitWrite@position,f
 13320     09C0  01F4               	clrf	bitWrite@value
 13321     09C1  3194  248D  3189   	fcall	_bitWrite
 13322     09C4                     l13988:
 13323                           
 13324                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1027:         writeReg
      +                          ister(TMAG5273_REG_SENSOR_CONFIG_2, mode);
 13325     09C4  0140               	movlb	0	; select bank0
 13326     09C5  0839               	movf	setXYAxisRange@mode,w
 13327     09C6  00A6               	movwf	writeRegister@data
 13328     09C7  3003               	movlw	3
 13329     09C8  3190  2000  3189   	fcall	_writeRegister
 13330                           
 13331                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1028:     } else if (x
      +                          yAxisRange == 0X1)
 13332     09CB  29E3               	goto	l13996
 13333     09CC                     l13990:
 13334     09CC  0338               	decf	setXYAxisRange@xyAxisRange,w
 13335     09CD  1D03               	btfss	3,2
 13336     09CE  29D0               	goto	u10761
 13337     09CF  29D1               	goto	u10760
 13338     09D0                     u10761:
 13339     09D0  29E3               	goto	l13996
 13340     09D1                     u10760:
 13341     09D1                     l13992:
 13342                           
 13343                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1029:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1030:         bitWrite(mode, 1, 1
      +                          );
 13344     09D1  083A               	movf	setXYAxisRange@mode+1,w
 13345     09D2  00F2               	movwf	bitWrite@reg+1
 13346     09D3  0839               	movf	setXYAxisRange@mode,w
 13347     09D4  00F1               	movwf	bitWrite@reg
 13348     09D5  01F3               	clrf	bitWrite@position
 13349     09D6  0AF3               	incf	bitWrite@position,f
 13350     09D7  01F4               	clrf	bitWrite@value
 13351     09D8  0AF4               	incf	bitWrite@value,f
 13352     09D9  3194  248D  3189   	fcall	_bitWrite
 13353     09DC                     l13994:
 13354                           
 13355                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1031:         writeReg
      +                          ister(TMAG5273_REG_SENSOR_CONFIG_2, mode);
 13356     09DC  0140               	movlb	0	; select bank0
 13357     09DD  0839               	movf	setXYAxisRange@mode,w
 13358     09DE  00A6               	movwf	writeRegister@data
 13359     09DF  3003               	movlw	3
 13360     09E0  3190  2000  3189   	fcall	_writeRegister
 13361     09E3                     l13996:
 13362                           
 13363                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1034:     return getEr
      +                          ror();;	Return value of _setXYAxisRange is never used
 13364     09E3  318D  2577  3189   	fcall	_getError
 13365     09E6                     l2326:
 13366     09E6  0008               	return
 13367     09E7                     __end_of_setXYAxisRange:
 13368                           
 13369                           	psect	text4
 13370     08B2                     __ptext4:	
 13371 ;; *************** function _setTemperatureEn *****************
 13372 ;; Defined at:
 13373 ;;		line 1143 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13374 ;; Parameters:    Size  Location     Type
 13375 ;;  temperatureE    1    wreg     _Bool 
 13376 ;; Auto vars:     Size  Location     Type
 13377 ;;  temperatureE    1   24[BANK0 ] _Bool 
 13378 ;;  mode            2   25[BANK0 ] unsigned short 
 13379 ;; Return value:  Size  Location     Type
 13380 ;;                  1    wreg      char 
 13381 ;; Registers used:
 13382 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13383 ;; Tracked objects:
 13384 ;;		On entry : 0/0
 13385 ;;		On exit  : 0/0
 13386 ;;		Unchanged: 0/0
 13387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13389 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13390 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13391 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13392 ;;Total ram usage:        5 bytes
 13393 ;; Hardware stack levels used: 1
 13394 ;; Hardware stack levels required when called: 17
 13395 ;; This function calls:
 13396 ;;		_bitWrite
 13397 ;;		_getError
 13398 ;;		_readRegister
 13399 ;;		_writeRegister
 13400 ;; This function is called by:
 13401 ;;		_begin
 13402 ;; This function uses a non-reentrant model
 13403 ;;
 13404                           
 13405     08B2                     _setTemperatureEn:	
 13406                           ;psect for function _setTemperatureEn
 13407                           
 13408                           
 13409                           ;incstack = 0
 13410 ;; hardware stack exceeded
 13411                           ; Regs used in _setTemperatureEn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13412                           ;setTemperatureEn@temperatureEnable stored from wreg
 13413     08B2  0140               	movlb	0	; select bank0
 13414     08B3  00B8               	movwf	setTemperatureEn@temperatureEnable
 13415     08B4                     l13928:
 13416     08B4                     l13930:
 13417                           
 13418                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1145:     mode = readR
      +                          egister(TMAG5273_REG_T_CONFIG);
 13419     08B4  3007               	movlw	7
 13420     08B5  3190  2058  3188   	fcall	_readRegister
 13421     08B8  0140               	movlb	0	; select bank0
 13422     08B9  00B6               	movwf	??_setTemperatureEn
 13423     08BA  01B7               	clrf	??_setTemperatureEn+1
 13424     08BB  0836               	movf	??_setTemperatureEn,w
 13425     08BC  00B9               	movwf	setTemperatureEn@mode
 13426     08BD  0837               	movf	??_setTemperatureEn+1,w
 13427     08BE  00BA               	movwf	setTemperatureEn@mode+1
 13428     08BF                     l13932:
 13429                           
 13430                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1148:     if (temperat
      +                          ureEnable == 0)
 13431     08BF  0838               	movf	setTemperatureEn@temperatureEnable,w
 13432     08C0  1D03               	btfss	3,2
 13433     08C1  28C3               	goto	u10691
 13434     08C2  28C4               	goto	u10690
 13435     08C3                     u10691:
 13436     08C3  28D5               	goto	l13938
 13437     08C4                     u10690:
 13438     08C4                     l13934:
 13439                           
 13440                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1149:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1151:         bitWrite(mode, 0, 0
      +                          );
 13441     08C4  083A               	movf	setTemperatureEn@mode+1,w
 13442     08C5  00F2               	movwf	bitWrite@reg+1
 13443     08C6  0839               	movf	setTemperatureEn@mode,w
 13444     08C7  00F1               	movwf	bitWrite@reg
 13445     08C8  01F3               	clrf	bitWrite@position
 13446     08C9  01F4               	clrf	bitWrite@value
 13447     08CA  3194  248D  3188   	fcall	_bitWrite
 13448     08CD                     l13936:
 13449                           
 13450                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1153:         writeReg
      +                          ister(TMAG5273_REG_T_CONFIG, mode);
 13451     08CD  0140               	movlb	0	; select bank0
 13452     08CE  0839               	movf	setTemperatureEn@mode,w
 13453     08CF  00A6               	movwf	writeRegister@data
 13454     08D0  3007               	movlw	7
 13455     08D1  3190  2000  3188   	fcall	_writeRegister
 13456                           
 13457                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1154:     } else if (t
      +                          emperatureEnable == 1)
 13458     08D4  28EB               	goto	l13944
 13459     08D5                     l13938:
 13460     08D5  0338               	decf	setTemperatureEn@temperatureEnable,w
 13461     08D6  1D03               	btfss	3,2
 13462     08D7  28D9               	goto	u10701
 13463     08D8  28DA               	goto	u10700
 13464     08D9                     u10701:
 13465     08D9  28EB               	goto	l13944
 13466     08DA                     u10700:
 13467     08DA                     l13940:
 13468                           
 13469                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1155:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1156:         bitWrite(mode, 0, 1
      +                          );
 13470     08DA  083A               	movf	setTemperatureEn@mode+1,w
 13471     08DB  00F2               	movwf	bitWrite@reg+1
 13472     08DC  0839               	movf	setTemperatureEn@mode,w
 13473     08DD  00F1               	movwf	bitWrite@reg
 13474     08DE  01F3               	clrf	bitWrite@position
 13475     08DF  01F4               	clrf	bitWrite@value
 13476     08E0  0AF4               	incf	bitWrite@value,f
 13477     08E1  3194  248D  3188   	fcall	_bitWrite
 13478     08E4                     l13942:
 13479                           
 13480                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1157:         writeReg
      +                          ister(TMAG5273_REG_T_CONFIG, mode);
 13481     08E4  0140               	movlb	0	; select bank0
 13482     08E5  0839               	movf	setTemperatureEn@mode,w
 13483     08E6  00A6               	movwf	writeRegister@data
 13484     08E7  3007               	movlw	7
 13485     08E8  3190  2000  3188   	fcall	_writeRegister
 13486     08EB                     l13944:
 13487                           
 13488                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1160:     return getEr
      +                          ror();;	Return value of _setTemperatureEn is never used
 13489     08EB  318D  2577  3188   	fcall	_getError
 13490     08EE                     l2350:
 13491     08EE  0008               	return
 13492     08EF                     __end_of_setTemperatureEn:
 13493                           
 13494                           	psect	text5
 13495     0706                     __ptext5:	
 13496 ;; *************** function _setOperatingMode *****************
 13497 ;; Defined at:
 13498 ;;		line 536 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13499 ;; Parameters:    Size  Location     Type
 13500 ;;  opMode          1    wreg     unsigned char 
 13501 ;; Auto vars:     Size  Location     Type
 13502 ;;  opMode          1   24[BANK0 ] unsigned char 
 13503 ;;  mode            2   25[BANK0 ] unsigned short 
 13504 ;; Return value:  Size  Location     Type
 13505 ;;                  1    wreg      char 
 13506 ;; Registers used:
 13507 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13508 ;; Tracked objects:
 13509 ;;		On entry : 0/0
 13510 ;;		On exit  : 0/0
 13511 ;;		Unchanged: 0/0
 13512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13514 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13515 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13516 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13517 ;;Total ram usage:        5 bytes
 13518 ;; Hardware stack levels used: 1
 13519 ;; Hardware stack levels required when called: 17
 13520 ;; This function calls:
 13521 ;;		_bitWrite
 13522 ;;		_getError
 13523 ;;		_readRegister
 13524 ;;		_writeRegister
 13525 ;; This function is called by:
 13526 ;;		_begin
 13527 ;; This function uses a non-reentrant model
 13528 ;;
 13529                           
 13530     0706                     _setOperatingMode:	
 13531                           ;psect for function _setOperatingMode
 13532                           
 13533                           
 13534                           ;incstack = 0
 13535 ;; hardware stack exceeded
 13536                           ; Regs used in _setOperatingMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13537                           ;setOperatingMode@opMode stored from wreg
 13538     0706  0140               	movlb	0	; select bank0
 13539     0707  00B8               	movwf	setOperatingMode@opMode
 13540     0708                     l13948:
 13541     0708                     l13950:
 13542                           
 13543                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 538:     mode = readRe
      +                          gister(TMAG5273_REG_DEVICE_CONFIG_2);
 13544     0708  3001               	movlw	1
 13545     0709  3190  2058  3187   	fcall	_readRegister
 13546     070C  0140               	movlb	0	; select bank0
 13547     070D  00B6               	movwf	??_setOperatingMode
 13548     070E  01B7               	clrf	??_setOperatingMode+1
 13549     070F  0836               	movf	??_setOperatingMode,w
 13550     0710  00B9               	movwf	setOperatingMode@mode
 13551     0711  0837               	movf	??_setOperatingMode+1,w
 13552     0712  00BA               	movwf	setOperatingMode@mode+1
 13553     0713                     l13952:
 13554                           
 13555                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 541:     if (opMode ==
      +                           0)
 13556     0713  0838               	movf	setOperatingMode@opMode,w
 13557     0714  1D03               	btfss	3,2
 13558     0715  2F17               	goto	u10711
 13559     0716  2F18               	goto	u10710
 13560     0717                     u10711:
 13561     0717  2F34               	goto	l13958
 13562     0718                     u10710:
 13563     0718                     l13954:
 13564                           
 13565                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 542:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 544:         bitWrite(mode, 0, 0);
 13566     0718  083A               	movf	setOperatingMode@mode+1,w
 13567     0719  00F2               	movwf	bitWrite@reg+1
 13568     071A  0839               	movf	setOperatingMode@mode,w
 13569     071B  00F1               	movwf	bitWrite@reg
 13570     071C  01F3               	clrf	bitWrite@position
 13571     071D  01F4               	clrf	bitWrite@value
 13572     071E  3194  248D  3187   	fcall	_bitWrite
 13573                           
 13574                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 546:         bitWrite(
      +                          mode, 1, 0);
 13575     0721  0140               	movlb	0	; select bank0
 13576     0722  083A               	movf	setOperatingMode@mode+1,w
 13577     0723  00F2               	movwf	bitWrite@reg+1
 13578     0724  0839               	movf	setOperatingMode@mode,w
 13579     0725  00F1               	movwf	bitWrite@reg
 13580     0726  01F3               	clrf	bitWrite@position
 13581     0727  0AF3               	incf	bitWrite@position,f
 13582     0728  01F4               	clrf	bitWrite@value
 13583     0729  3194  248D  3187   	fcall	_bitWrite
 13584     072C                     l13956:
 13585                           
 13586                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 547:         writeRegi
      +                          ster(TMAG5273_REG_DEVICE_CONFIG_2, mode);
 13587     072C  0140               	movlb	0	; select bank0
 13588     072D  0839               	movf	setOperatingMode@mode,w
 13589     072E  00A6               	movwf	writeRegister@data
 13590     072F  3001               	movlw	1
 13591     0730  3190  2000  3187   	fcall	_writeRegister
 13592                           
 13593                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 548:     } else if (op
      +                          Mode == 0X1)
 13594     0733  2F9D               	goto	l13976
 13595     0734                     l13958:
 13596     0734  0338               	decf	setOperatingMode@opMode,w
 13597     0735  1D03               	btfss	3,2
 13598     0736  2F38               	goto	u10721
 13599     0737  2F39               	goto	u10720
 13600     0738                     u10721:
 13601     0738  2F56               	goto	l13964
 13602     0739                     u10720:
 13603     0739                     l13960:
 13604                           
 13605                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 549:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 551:         bitWrite(mode, 0, 1);
 13606     0739  083A               	movf	setOperatingMode@mode+1,w
 13607     073A  00F2               	movwf	bitWrite@reg+1
 13608     073B  0839               	movf	setOperatingMode@mode,w
 13609     073C  00F1               	movwf	bitWrite@reg
 13610     073D  01F3               	clrf	bitWrite@position
 13611     073E  01F4               	clrf	bitWrite@value
 13612     073F  0AF4               	incf	bitWrite@value,f
 13613     0740  3194  248D  3187   	fcall	_bitWrite
 13614                           
 13615                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 553:         bitWrite(
      +                          mode, 1, 0);
 13616     0743  0140               	movlb	0	; select bank0
 13617     0744  083A               	movf	setOperatingMode@mode+1,w
 13618     0745  00F2               	movwf	bitWrite@reg+1
 13619     0746  0839               	movf	setOperatingMode@mode,w
 13620     0747  00F1               	movwf	bitWrite@reg
 13621     0748  01F3               	clrf	bitWrite@position
 13622     0749  0AF3               	incf	bitWrite@position,f
 13623     074A  01F4               	clrf	bitWrite@value
 13624     074B  3194  248D  3187   	fcall	_bitWrite
 13625     074E                     l13962:
 13626                           
 13627                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 554:         writeRegi
      +                          ster(TMAG5273_REG_DEVICE_CONFIG_2, mode);
 13628     074E  0140               	movlb	0	; select bank0
 13629     074F  0839               	movf	setOperatingMode@mode,w
 13630     0750  00A6               	movwf	writeRegister@data
 13631     0751  3001               	movlw	1
 13632     0752  3190  2000  3187   	fcall	_writeRegister
 13633                           
 13634                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 555:     } else if (op
      +                          Mode == 0X2)
 13635     0755  2F9D               	goto	l13976
 13636     0756                     l13964:
 13637     0756  3002               	movlw	2
 13638     0757  0638               	xorwf	setOperatingMode@opMode,w
 13639     0758  1D03               	btfss	3,2
 13640     0759  2F5B               	goto	u10731
 13641     075A  2F5C               	goto	u10730
 13642     075B                     u10731:
 13643     075B  2F79               	goto	l13970
 13644     075C                     u10730:
 13645     075C                     l13966:
 13646                           
 13647                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 556:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 557:         bitWrite(mode, 0, 0);
 13648     075C  083A               	movf	setOperatingMode@mode+1,w
 13649     075D  00F2               	movwf	bitWrite@reg+1
 13650     075E  0839               	movf	setOperatingMode@mode,w
 13651     075F  00F1               	movwf	bitWrite@reg
 13652     0760  01F3               	clrf	bitWrite@position
 13653     0761  01F4               	clrf	bitWrite@value
 13654     0762  3194  248D  3187   	fcall	_bitWrite
 13655                           
 13656                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 558:         bitWrite(
      +                          mode, 1, 1);
 13657     0765  0140               	movlb	0	; select bank0
 13658     0766  083A               	movf	setOperatingMode@mode+1,w
 13659     0767  00F2               	movwf	bitWrite@reg+1
 13660     0768  0839               	movf	setOperatingMode@mode,w
 13661     0769  00F1               	movwf	bitWrite@reg
 13662     076A  01F3               	clrf	bitWrite@position
 13663     076B  0AF3               	incf	bitWrite@position,f
 13664     076C  01F4               	clrf	bitWrite@value
 13665     076D  0AF4               	incf	bitWrite@value,f
 13666     076E  3194  248D  3187   	fcall	_bitWrite
 13667     0771                     l13968:
 13668                           
 13669                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 559:         writeRegi
      +                          ster(TMAG5273_REG_DEVICE_CONFIG_2, mode);
 13670     0771  0140               	movlb	0	; select bank0
 13671     0772  0839               	movf	setOperatingMode@mode,w
 13672     0773  00A6               	movwf	writeRegister@data
 13673     0774  3001               	movlw	1
 13674     0775  3190  2000  3187   	fcall	_writeRegister
 13675                           
 13676                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 560:     } else if (op
      +                          Mode == 0X3)
 13677     0778  2F9D               	goto	l13976
 13678     0779                     l13970:
 13679     0779  3003               	movlw	3
 13680     077A  0638               	xorwf	setOperatingMode@opMode,w
 13681     077B  1D03               	btfss	3,2
 13682     077C  2F7E               	goto	u10741
 13683     077D  2F7F               	goto	u10740
 13684     077E                     u10741:
 13685     077E  2F9D               	goto	l2216
 13686     077F                     u10740:
 13687     077F                     l13972:
 13688                           
 13689                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 561:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 562:         bitWrite(mode, 0, 1);
 13690     077F  083A               	movf	setOperatingMode@mode+1,w
 13691     0780  00F2               	movwf	bitWrite@reg+1
 13692     0781  0839               	movf	setOperatingMode@mode,w
 13693     0782  00F1               	movwf	bitWrite@reg
 13694     0783  01F3               	clrf	bitWrite@position
 13695     0784  01F4               	clrf	bitWrite@value
 13696     0785  0AF4               	incf	bitWrite@value,f
 13697     0786  3194  248D  3187   	fcall	_bitWrite
 13698                           
 13699                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 563:         bitWrite(
      +                          mode, 1, 1);
 13700     0789  0140               	movlb	0	; select bank0
 13701     078A  083A               	movf	setOperatingMode@mode+1,w
 13702     078B  00F2               	movwf	bitWrite@reg+1
 13703     078C  0839               	movf	setOperatingMode@mode,w
 13704     078D  00F1               	movwf	bitWrite@reg
 13705     078E  01F3               	clrf	bitWrite@position
 13706     078F  0AF3               	incf	bitWrite@position,f
 13707     0790  01F4               	clrf	bitWrite@value
 13708     0791  0AF4               	incf	bitWrite@value,f
 13709     0792  3194  248D  3187   	fcall	_bitWrite
 13710     0795                     l13974:
 13711                           
 13712                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 564:         writeRegi
      +                          ster(TMAG5273_REG_DEVICE_CONFIG_2, mode);
 13713     0795  0140               	movlb	0	; select bank0
 13714     0796  0839               	movf	setOperatingMode@mode,w
 13715     0797  00A6               	movwf	writeRegister@data
 13716     0798  3001               	movlw	1
 13717     0799  3190  2000  3187   	fcall	_writeRegister
 13718     079C  2F9D               	goto	l13976
 13719     079D                     l2216:
 13720     079D                     l13976:
 13721                           
 13722                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 567:     return getErr
      +                          or();;	Return value of _setOperatingMode is never used
 13723     079D  318D  2577  3187   	fcall	_getError
 13724     07A0                     l2220:
 13725     07A0  0008               	return
 13726     07A1                     __end_of_setOperatingMode:
 13727                           
 13728                           	psect	text6
 13729     00A8                     __ptext6:	
 13730 ;; *************** function _setMagneticChannel *****************
 13731 ;; Defined at:
 13732 ;;		line 588 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13733 ;; Parameters:    Size  Location     Type
 13734 ;;  channelMode     1    wreg     unsigned char 
 13735 ;; Auto vars:     Size  Location     Type
 13736 ;;  channelMode     1   24[BANK0 ] unsigned char 
 13737 ;;  mode            2   25[BANK0 ] unsigned short 
 13738 ;; Return value:  Size  Location     Type
 13739 ;;                  1    wreg      char 
 13740 ;; Registers used:
 13741 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13742 ;; Tracked objects:
 13743 ;;		On entry : 0/0
 13744 ;;		On exit  : 0/0
 13745 ;;		Unchanged: 0/0
 13746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13748 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13749 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13750 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13751 ;;Total ram usage:        5 bytes
 13752 ;; Hardware stack levels used: 1
 13753 ;; Hardware stack levels required when called: 17
 13754 ;; This function calls:
 13755 ;;		_bitWrite
 13756 ;;		_getError
 13757 ;;		_readRegister
 13758 ;;		_writeRegister
 13759 ;; This function is called by:
 13760 ;;		_begin
 13761 ;; This function uses a non-reentrant model
 13762 ;;
 13763                           
 13764     00A8                     _setMagneticChannel:	
 13765                           ;psect for function _setMagneticChannel
 13766                           
 13767                           
 13768                           ;incstack = 0
 13769 ;; hardware stack exceeded
 13770                           ; Regs used in _setMagneticChannel: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13771                           ;setMagneticChannel@channelMode stored from wreg
 13772     00A8  0140               	movlb	0	; select bank0
 13773     00A9  00B8               	movwf	setMagneticChannel@channelMode
 13774     00AA                     l13848:
 13775     00AA                     l13850:
 13776                           
 13777                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 590:     mode = readRe
      +                          gister(TMAG5273_REG_SENSOR_CONFIG_1);
 13778     00AA  3002               	movlw	2
 13779     00AB  3190  2058  3180   	fcall	_readRegister
 13780     00AE  0140               	movlb	0	; select bank0
 13781     00AF  00B6               	movwf	??_setMagneticChannel
 13782     00B0  01B7               	clrf	??_setMagneticChannel+1
 13783     00B1  0836               	movf	??_setMagneticChannel,w
 13784     00B2  00B9               	movwf	setMagneticChannel@mode
 13785     00B3  0837               	movf	??_setMagneticChannel+1,w
 13786     00B4  00BA               	movwf	setMagneticChannel@mode+1
 13787     00B5                     l13852:
 13788                           
 13789                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 593:     if (channelMo
      +                          de == 0X0)
 13790     00B5  0838               	movf	setMagneticChannel@channelMode,w
 13791     00B6  1D03               	btfss	3,2
 13792     00B7  28B9               	goto	u10571
 13793     00B8  28BA               	goto	u10570
 13794     00B9                     u10571:
 13795     00B9  28ED               	goto	l13858
 13796     00BA                     u10570:
 13797     00BA                     l13854:
 13798                           
 13799                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 594:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 596:         bitWrite(mode, 4, 0);
 13800     00BA  083A               	movf	setMagneticChannel@mode+1,w
 13801     00BB  00F2               	movwf	bitWrite@reg+1
 13802     00BC  0839               	movf	setMagneticChannel@mode,w
 13803     00BD  00F1               	movwf	bitWrite@reg
 13804     00BE  3004               	movlw	4
 13805     00BF  00F3               	movwf	bitWrite@position
 13806     00C0  01F4               	clrf	bitWrite@value
 13807     00C1  3194  248D  3180   	fcall	_bitWrite
 13808                           
 13809                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 598:         bitWrite(
      +                          mode, 5, 0);
 13810     00C4  0140               	movlb	0	; select bank0
 13811     00C5  083A               	movf	setMagneticChannel@mode+1,w
 13812     00C6  00F2               	movwf	bitWrite@reg+1
 13813     00C7  0839               	movf	setMagneticChannel@mode,w
 13814     00C8  00F1               	movwf	bitWrite@reg
 13815     00C9  3005               	movlw	5
 13816     00CA  00F3               	movwf	bitWrite@position
 13817     00CB  01F4               	clrf	bitWrite@value
 13818     00CC  3194  248D  3180   	fcall	_bitWrite
 13819                           
 13820                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 600:         bitWrite(
      +                          mode, 6, 0);
 13821     00CF  0140               	movlb	0	; select bank0
 13822     00D0  083A               	movf	setMagneticChannel@mode+1,w
 13823     00D1  00F2               	movwf	bitWrite@reg+1
 13824     00D2  0839               	movf	setMagneticChannel@mode,w
 13825     00D3  00F1               	movwf	bitWrite@reg
 13826     00D4  3006               	movlw	6
 13827     00D5  00F3               	movwf	bitWrite@position
 13828     00D6  01F4               	clrf	bitWrite@value
 13829     00D7  3194  248D  3180   	fcall	_bitWrite
 13830                           
 13831                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 602:         bitWrite(
      +                          mode, 7, 0);
 13832     00DA  0140               	movlb	0	; select bank0
 13833     00DB  083A               	movf	setMagneticChannel@mode+1,w
 13834     00DC  00F2               	movwf	bitWrite@reg+1
 13835     00DD  0839               	movf	setMagneticChannel@mode,w
 13836     00DE  00F1               	movwf	bitWrite@reg
 13837     00DF  3007               	movlw	7
 13838     00E0  00F3               	movwf	bitWrite@position
 13839     00E1  01F4               	clrf	bitWrite@value
 13840     00E2  3194  248D  3180   	fcall	_bitWrite
 13841     00E5                     l13856:
 13842                           
 13843                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 604:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 13844     00E5  0140               	movlb	0	; select bank0
 13845     00E6  0839               	movf	setMagneticChannel@mode,w
 13846     00E7  00A6               	movwf	writeRegister@data
 13847     00E8  3002               	movlw	2
 13848     00E9  3190  2000  3180   	fcall	_writeRegister
 13849                           
 13850                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 606:     } else if (ch
      +                          annelMode == 0X1)
 13851     00EC  2B73               	goto	l13924
 13852     00ED                     l13858:
 13853     00ED  0338               	decf	setMagneticChannel@channelMode,w
 13854     00EE  1D03               	btfss	3,2
 13855     00EF  28F1               	goto	u10581
 13856     00F0  28F2               	goto	u10580
 13857     00F1                     u10581:
 13858     00F1  2926               	goto	l13864
 13859     00F2                     u10580:
 13860     00F2                     l13860:
 13861                           
 13862                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 607:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 608:         bitWrite(mode, 4, 1);
 13863     00F2  083A               	movf	setMagneticChannel@mode+1,w
 13864     00F3  00F2               	movwf	bitWrite@reg+1
 13865     00F4  0839               	movf	setMagneticChannel@mode,w
 13866     00F5  00F1               	movwf	bitWrite@reg
 13867     00F6  3004               	movlw	4
 13868     00F7  00F3               	movwf	bitWrite@position
 13869     00F8  01F4               	clrf	bitWrite@value
 13870     00F9  0AF4               	incf	bitWrite@value,f
 13871     00FA  3194  248D  3180   	fcall	_bitWrite
 13872                           
 13873                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 609:         bitWrite(
      +                          mode, 5, 0);
 13874     00FD  0140               	movlb	0	; select bank0
 13875     00FE  083A               	movf	setMagneticChannel@mode+1,w
 13876     00FF  00F2               	movwf	bitWrite@reg+1
 13877     0100  0839               	movf	setMagneticChannel@mode,w
 13878     0101  00F1               	movwf	bitWrite@reg
 13879     0102  3005               	movlw	5
 13880     0103  00F3               	movwf	bitWrite@position
 13881     0104  01F4               	clrf	bitWrite@value
 13882     0105  3194  248D  3180   	fcall	_bitWrite
 13883                           
 13884                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 610:         bitWrite(
      +                          mode, 6, 0);
 13885     0108  0140               	movlb	0	; select bank0
 13886     0109  083A               	movf	setMagneticChannel@mode+1,w
 13887     010A  00F2               	movwf	bitWrite@reg+1
 13888     010B  0839               	movf	setMagneticChannel@mode,w
 13889     010C  00F1               	movwf	bitWrite@reg
 13890     010D  3006               	movlw	6
 13891     010E  00F3               	movwf	bitWrite@position
 13892     010F  01F4               	clrf	bitWrite@value
 13893     0110  3194  248D  3180   	fcall	_bitWrite
 13894                           
 13895                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 611:         bitWrite(
      +                          mode, 7, 0);
 13896     0113  0140               	movlb	0	; select bank0
 13897     0114  083A               	movf	setMagneticChannel@mode+1,w
 13898     0115  00F2               	movwf	bitWrite@reg+1
 13899     0116  0839               	movf	setMagneticChannel@mode,w
 13900     0117  00F1               	movwf	bitWrite@reg
 13901     0118  3007               	movlw	7
 13902     0119  00F3               	movwf	bitWrite@position
 13903     011A  01F4               	clrf	bitWrite@value
 13904     011B  3194  248D  3180   	fcall	_bitWrite
 13905     011E                     l13862:
 13906                           
 13907                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 612:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 13908     011E  0140               	movlb	0	; select bank0
 13909     011F  0839               	movf	setMagneticChannel@mode,w
 13910     0120  00A6               	movwf	writeRegister@data
 13911     0121  3002               	movlw	2
 13912     0122  3190  2000  3180   	fcall	_writeRegister
 13913                           
 13914                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 613:     } else if (ch
      +                          annelMode == 0X2)
 13915     0125  2B73               	goto	l13924
 13916     0126                     l13864:
 13917     0126  3002               	movlw	2
 13918     0127  0638               	xorwf	setMagneticChannel@channelMode,w
 13919     0128  1D03               	btfss	3,2
 13920     0129  292B               	goto	u10591
 13921     012A  292C               	goto	u10590
 13922     012B                     u10591:
 13923     012B  2960               	goto	l13870
 13924     012C                     u10590:
 13925     012C                     l13866:
 13926                           
 13927                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 614:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 615:         bitWrite(mode, 4, 0);
 13928     012C  083A               	movf	setMagneticChannel@mode+1,w
 13929     012D  00F2               	movwf	bitWrite@reg+1
 13930     012E  0839               	movf	setMagneticChannel@mode,w
 13931     012F  00F1               	movwf	bitWrite@reg
 13932     0130  3004               	movlw	4
 13933     0131  00F3               	movwf	bitWrite@position
 13934     0132  01F4               	clrf	bitWrite@value
 13935     0133  3194  248D  3180   	fcall	_bitWrite
 13936                           
 13937                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 616:         bitWrite(
      +                          mode, 5, 1);
 13938     0136  0140               	movlb	0	; select bank0
 13939     0137  083A               	movf	setMagneticChannel@mode+1,w
 13940     0138  00F2               	movwf	bitWrite@reg+1
 13941     0139  0839               	movf	setMagneticChannel@mode,w
 13942     013A  00F1               	movwf	bitWrite@reg
 13943     013B  3005               	movlw	5
 13944     013C  00F3               	movwf	bitWrite@position
 13945     013D  01F4               	clrf	bitWrite@value
 13946     013E  0AF4               	incf	bitWrite@value,f
 13947     013F  3194  248D  3180   	fcall	_bitWrite
 13948                           
 13949                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 617:         bitWrite(
      +                          mode, 6, 0);
 13950     0142  0140               	movlb	0	; select bank0
 13951     0143  083A               	movf	setMagneticChannel@mode+1,w
 13952     0144  00F2               	movwf	bitWrite@reg+1
 13953     0145  0839               	movf	setMagneticChannel@mode,w
 13954     0146  00F1               	movwf	bitWrite@reg
 13955     0147  3006               	movlw	6
 13956     0148  00F3               	movwf	bitWrite@position
 13957     0149  01F4               	clrf	bitWrite@value
 13958     014A  3194  248D  3180   	fcall	_bitWrite
 13959                           
 13960                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 618:         bitWrite(
      +                          mode, 7, 0);
 13961     014D  0140               	movlb	0	; select bank0
 13962     014E  083A               	movf	setMagneticChannel@mode+1,w
 13963     014F  00F2               	movwf	bitWrite@reg+1
 13964     0150  0839               	movf	setMagneticChannel@mode,w
 13965     0151  00F1               	movwf	bitWrite@reg
 13966     0152  3007               	movlw	7
 13967     0153  00F3               	movwf	bitWrite@position
 13968     0154  01F4               	clrf	bitWrite@value
 13969     0155  3194  248D  3180   	fcall	_bitWrite
 13970     0158                     l13868:
 13971                           
 13972                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 619:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 13973     0158  0140               	movlb	0	; select bank0
 13974     0159  0839               	movf	setMagneticChannel@mode,w
 13975     015A  00A6               	movwf	writeRegister@data
 13976     015B  3002               	movlw	2
 13977     015C  3190  2000  3180   	fcall	_writeRegister
 13978                           
 13979                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 620:     } else if (ch
      +                          annelMode == 0X3)
 13980     015F  2B73               	goto	l13924
 13981     0160                     l13870:
 13982     0160  3003               	movlw	3
 13983     0161  0638               	xorwf	setMagneticChannel@channelMode,w
 13984     0162  1D03               	btfss	3,2
 13985     0163  2965               	goto	u10601
 13986     0164  2966               	goto	u10600
 13987     0165                     u10601:
 13988     0165  299B               	goto	l13876
 13989     0166                     u10600:
 13990     0166                     l13872:
 13991                           
 13992                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 621:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 622:         bitWrite(mode, 4, 1);
 13993     0166  083A               	movf	setMagneticChannel@mode+1,w
 13994     0167  00F2               	movwf	bitWrite@reg+1
 13995     0168  0839               	movf	setMagneticChannel@mode,w
 13996     0169  00F1               	movwf	bitWrite@reg
 13997     016A  3004               	movlw	4
 13998     016B  00F3               	movwf	bitWrite@position
 13999     016C  01F4               	clrf	bitWrite@value
 14000     016D  0AF4               	incf	bitWrite@value,f
 14001     016E  3194  248D  3180   	fcall	_bitWrite
 14002                           
 14003                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 623:         bitWrite(
      +                          mode, 5, 1);
 14004     0171  0140               	movlb	0	; select bank0
 14005     0172  083A               	movf	setMagneticChannel@mode+1,w
 14006     0173  00F2               	movwf	bitWrite@reg+1
 14007     0174  0839               	movf	setMagneticChannel@mode,w
 14008     0175  00F1               	movwf	bitWrite@reg
 14009     0176  3005               	movlw	5
 14010     0177  00F3               	movwf	bitWrite@position
 14011     0178  01F4               	clrf	bitWrite@value
 14012     0179  0AF4               	incf	bitWrite@value,f
 14013     017A  3194  248D  3180   	fcall	_bitWrite
 14014                           
 14015                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 624:         bitWrite(
      +                          mode, 6, 0);
 14016     017D  0140               	movlb	0	; select bank0
 14017     017E  083A               	movf	setMagneticChannel@mode+1,w
 14018     017F  00F2               	movwf	bitWrite@reg+1
 14019     0180  0839               	movf	setMagneticChannel@mode,w
 14020     0181  00F1               	movwf	bitWrite@reg
 14021     0182  3006               	movlw	6
 14022     0183  00F3               	movwf	bitWrite@position
 14023     0184  01F4               	clrf	bitWrite@value
 14024     0185  3194  248D  3180   	fcall	_bitWrite
 14025                           
 14026                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 625:         bitWrite(
      +                          mode, 7, 0);
 14027     0188  0140               	movlb	0	; select bank0
 14028     0189  083A               	movf	setMagneticChannel@mode+1,w
 14029     018A  00F2               	movwf	bitWrite@reg+1
 14030     018B  0839               	movf	setMagneticChannel@mode,w
 14031     018C  00F1               	movwf	bitWrite@reg
 14032     018D  3007               	movlw	7
 14033     018E  00F3               	movwf	bitWrite@position
 14034     018F  01F4               	clrf	bitWrite@value
 14035     0190  3194  248D  3180   	fcall	_bitWrite
 14036     0193                     l13874:
 14037                           
 14038                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 626:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14039     0193  0140               	movlb	0	; select bank0
 14040     0194  0839               	movf	setMagneticChannel@mode,w
 14041     0195  00A6               	movwf	writeRegister@data
 14042     0196  3002               	movlw	2
 14043     0197  3190  2000  3180   	fcall	_writeRegister
 14044                           
 14045                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 627:     } else if (ch
      +                          annelMode == 0X4)
 14046     019A  2B73               	goto	l13924
 14047     019B                     l13876:
 14048     019B  3004               	movlw	4
 14049     019C  0638               	xorwf	setMagneticChannel@channelMode,w
 14050     019D  1D03               	btfss	3,2
 14051     019E  29A0               	goto	u10611
 14052     019F  29A1               	goto	u10610
 14053     01A0                     u10611:
 14054     01A0  29D5               	goto	l13882
 14055     01A1                     u10610:
 14056     01A1                     l13878:
 14057                           
 14058                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 628:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 629:         bitWrite(mode, 4, 0);
 14059     01A1  083A               	movf	setMagneticChannel@mode+1,w
 14060     01A2  00F2               	movwf	bitWrite@reg+1
 14061     01A3  0839               	movf	setMagneticChannel@mode,w
 14062     01A4  00F1               	movwf	bitWrite@reg
 14063     01A5  3004               	movlw	4
 14064     01A6  00F3               	movwf	bitWrite@position
 14065     01A7  01F4               	clrf	bitWrite@value
 14066     01A8  3194  248D  3180   	fcall	_bitWrite
 14067                           
 14068                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 630:         bitWrite(
      +                          mode, 5, 0);
 14069     01AB  0140               	movlb	0	; select bank0
 14070     01AC  083A               	movf	setMagneticChannel@mode+1,w
 14071     01AD  00F2               	movwf	bitWrite@reg+1
 14072     01AE  0839               	movf	setMagneticChannel@mode,w
 14073     01AF  00F1               	movwf	bitWrite@reg
 14074     01B0  3005               	movlw	5
 14075     01B1  00F3               	movwf	bitWrite@position
 14076     01B2  01F4               	clrf	bitWrite@value
 14077     01B3  3194  248D  3180   	fcall	_bitWrite
 14078                           
 14079                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 631:         bitWrite(
      +                          mode, 6, 1);
 14080     01B6  0140               	movlb	0	; select bank0
 14081     01B7  083A               	movf	setMagneticChannel@mode+1,w
 14082     01B8  00F2               	movwf	bitWrite@reg+1
 14083     01B9  0839               	movf	setMagneticChannel@mode,w
 14084     01BA  00F1               	movwf	bitWrite@reg
 14085     01BB  3006               	movlw	6
 14086     01BC  00F3               	movwf	bitWrite@position
 14087     01BD  01F4               	clrf	bitWrite@value
 14088     01BE  0AF4               	incf	bitWrite@value,f
 14089     01BF  3194  248D  3180   	fcall	_bitWrite
 14090                           
 14091                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 632:         bitWrite(
      +                          mode, 7, 0);
 14092     01C2  0140               	movlb	0	; select bank0
 14093     01C3  083A               	movf	setMagneticChannel@mode+1,w
 14094     01C4  00F2               	movwf	bitWrite@reg+1
 14095     01C5  0839               	movf	setMagneticChannel@mode,w
 14096     01C6  00F1               	movwf	bitWrite@reg
 14097     01C7  3007               	movlw	7
 14098     01C8  00F3               	movwf	bitWrite@position
 14099     01C9  01F4               	clrf	bitWrite@value
 14100     01CA  3194  248D  3180   	fcall	_bitWrite
 14101     01CD                     l13880:
 14102                           
 14103                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 633:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14104     01CD  0140               	movlb	0	; select bank0
 14105     01CE  0839               	movf	setMagneticChannel@mode,w
 14106     01CF  00A6               	movwf	writeRegister@data
 14107     01D0  3002               	movlw	2
 14108     01D1  3190  2000  3180   	fcall	_writeRegister
 14109                           
 14110                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 634:     } else if (ch
      +                          annelMode == 0X5)
 14111     01D4  2B73               	goto	l13924
 14112     01D5                     l13882:
 14113     01D5  3005               	movlw	5
 14114     01D6  0638               	xorwf	setMagneticChannel@channelMode,w
 14115     01D7  1D03               	btfss	3,2
 14116     01D8  29DA               	goto	u10621
 14117     01D9  29DB               	goto	u10620
 14118     01DA                     u10621:
 14119     01DA  2A10               	goto	l13888
 14120     01DB                     u10620:
 14121     01DB                     l13884:
 14122                           
 14123                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 635:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 636:         bitWrite(mode, 4, 1);
 14124     01DB  083A               	movf	setMagneticChannel@mode+1,w
 14125     01DC  00F2               	movwf	bitWrite@reg+1
 14126     01DD  0839               	movf	setMagneticChannel@mode,w
 14127     01DE  00F1               	movwf	bitWrite@reg
 14128     01DF  3004               	movlw	4
 14129     01E0  00F3               	movwf	bitWrite@position
 14130     01E1  01F4               	clrf	bitWrite@value
 14131     01E2  0AF4               	incf	bitWrite@value,f
 14132     01E3  3194  248D  3180   	fcall	_bitWrite
 14133                           
 14134                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 637:         bitWrite(
      +                          mode, 5, 0);
 14135     01E6  0140               	movlb	0	; select bank0
 14136     01E7  083A               	movf	setMagneticChannel@mode+1,w
 14137     01E8  00F2               	movwf	bitWrite@reg+1
 14138     01E9  0839               	movf	setMagneticChannel@mode,w
 14139     01EA  00F1               	movwf	bitWrite@reg
 14140     01EB  3005               	movlw	5
 14141     01EC  00F3               	movwf	bitWrite@position
 14142     01ED  01F4               	clrf	bitWrite@value
 14143     01EE  3194  248D  3180   	fcall	_bitWrite
 14144                           
 14145                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 638:         bitWrite(
      +                          mode, 6, 1);
 14146     01F1  0140               	movlb	0	; select bank0
 14147     01F2  083A               	movf	setMagneticChannel@mode+1,w
 14148     01F3  00F2               	movwf	bitWrite@reg+1
 14149     01F4  0839               	movf	setMagneticChannel@mode,w
 14150     01F5  00F1               	movwf	bitWrite@reg
 14151     01F6  3006               	movlw	6
 14152     01F7  00F3               	movwf	bitWrite@position
 14153     01F8  01F4               	clrf	bitWrite@value
 14154     01F9  0AF4               	incf	bitWrite@value,f
 14155     01FA  3194  248D  3180   	fcall	_bitWrite
 14156                           
 14157                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 639:         bitWrite(
      +                          mode, 7, 0);
 14158     01FD  0140               	movlb	0	; select bank0
 14159     01FE  083A               	movf	setMagneticChannel@mode+1,w
 14160     01FF  00F2               	movwf	bitWrite@reg+1
 14161     0200  0839               	movf	setMagneticChannel@mode,w
 14162     0201  00F1               	movwf	bitWrite@reg
 14163     0202  3007               	movlw	7
 14164     0203  00F3               	movwf	bitWrite@position
 14165     0204  01F4               	clrf	bitWrite@value
 14166     0205  3194  248D  3180   	fcall	_bitWrite
 14167     0208                     l13886:
 14168                           
 14169                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 640:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14170     0208  0140               	movlb	0	; select bank0
 14171     0209  0839               	movf	setMagneticChannel@mode,w
 14172     020A  00A6               	movwf	writeRegister@data
 14173     020B  3002               	movlw	2
 14174     020C  3190  2000  3180   	fcall	_writeRegister
 14175                           
 14176                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 641:     } else if (ch
      +                          annelMode == 0X6)
 14177     020F  2B73               	goto	l13924
 14178     0210                     l13888:
 14179     0210  3006               	movlw	6
 14180     0211  0638               	xorwf	setMagneticChannel@channelMode,w
 14181     0212  1D03               	btfss	3,2
 14182     0213  2A15               	goto	u10631
 14183     0214  2A16               	goto	u10630
 14184     0215                     u10631:
 14185     0215  2A4B               	goto	l13894
 14186     0216                     u10630:
 14187     0216                     l13890:
 14188                           
 14189                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 642:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 643:         bitWrite(mode, 4, 0);
 14190     0216  083A               	movf	setMagneticChannel@mode+1,w
 14191     0217  00F2               	movwf	bitWrite@reg+1
 14192     0218  0839               	movf	setMagneticChannel@mode,w
 14193     0219  00F1               	movwf	bitWrite@reg
 14194     021A  3004               	movlw	4
 14195     021B  00F3               	movwf	bitWrite@position
 14196     021C  01F4               	clrf	bitWrite@value
 14197     021D  3194  248D  3180   	fcall	_bitWrite
 14198                           
 14199                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 644:         bitWrite(
      +                          mode, 5, 1);
 14200     0220  0140               	movlb	0	; select bank0
 14201     0221  083A               	movf	setMagneticChannel@mode+1,w
 14202     0222  00F2               	movwf	bitWrite@reg+1
 14203     0223  0839               	movf	setMagneticChannel@mode,w
 14204     0224  00F1               	movwf	bitWrite@reg
 14205     0225  3005               	movlw	5
 14206     0226  00F3               	movwf	bitWrite@position
 14207     0227  01F4               	clrf	bitWrite@value
 14208     0228  0AF4               	incf	bitWrite@value,f
 14209     0229  3194  248D  3180   	fcall	_bitWrite
 14210                           
 14211                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 645:         bitWrite(
      +                          mode, 6, 1);
 14212     022C  0140               	movlb	0	; select bank0
 14213     022D  083A               	movf	setMagneticChannel@mode+1,w
 14214     022E  00F2               	movwf	bitWrite@reg+1
 14215     022F  0839               	movf	setMagneticChannel@mode,w
 14216     0230  00F1               	movwf	bitWrite@reg
 14217     0231  3006               	movlw	6
 14218     0232  00F3               	movwf	bitWrite@position
 14219     0233  01F4               	clrf	bitWrite@value
 14220     0234  0AF4               	incf	bitWrite@value,f
 14221     0235  3194  248D  3180   	fcall	_bitWrite
 14222                           
 14223                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 646:         bitWrite(
      +                          mode, 7, 0);
 14224     0238  0140               	movlb	0	; select bank0
 14225     0239  083A               	movf	setMagneticChannel@mode+1,w
 14226     023A  00F2               	movwf	bitWrite@reg+1
 14227     023B  0839               	movf	setMagneticChannel@mode,w
 14228     023C  00F1               	movwf	bitWrite@reg
 14229     023D  3007               	movlw	7
 14230     023E  00F3               	movwf	bitWrite@position
 14231     023F  01F4               	clrf	bitWrite@value
 14232     0240  3194  248D  3180   	fcall	_bitWrite
 14233     0243                     l13892:
 14234                           
 14235                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 647:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14236     0243  0140               	movlb	0	; select bank0
 14237     0244  0839               	movf	setMagneticChannel@mode,w
 14238     0245  00A6               	movwf	writeRegister@data
 14239     0246  3002               	movlw	2
 14240     0247  3190  2000  3180   	fcall	_writeRegister
 14241                           
 14242                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 648:     } else if (ch
      +                          annelMode == 0X7)
 14243     024A  2B73               	goto	l13924
 14244     024B                     l13894:
 14245     024B  3007               	movlw	7
 14246     024C  0638               	xorwf	setMagneticChannel@channelMode,w
 14247     024D  1D03               	btfss	3,2
 14248     024E  2A50               	goto	u10641
 14249     024F  2A51               	goto	u10640
 14250     0250                     u10641:
 14251     0250  2A87               	goto	l13900
 14252     0251                     u10640:
 14253     0251                     l13896:
 14254                           
 14255                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 649:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 650:         bitWrite(mode, 4, 1);
 14256     0251  083A               	movf	setMagneticChannel@mode+1,w
 14257     0252  00F2               	movwf	bitWrite@reg+1
 14258     0253  0839               	movf	setMagneticChannel@mode,w
 14259     0254  00F1               	movwf	bitWrite@reg
 14260     0255  3004               	movlw	4
 14261     0256  00F3               	movwf	bitWrite@position
 14262     0257  01F4               	clrf	bitWrite@value
 14263     0258  0AF4               	incf	bitWrite@value,f
 14264     0259  3194  248D  3180   	fcall	_bitWrite
 14265                           
 14266                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 651:         bitWrite(
      +                          mode, 5, 1);
 14267     025C  0140               	movlb	0	; select bank0
 14268     025D  083A               	movf	setMagneticChannel@mode+1,w
 14269     025E  00F2               	movwf	bitWrite@reg+1
 14270     025F  0839               	movf	setMagneticChannel@mode,w
 14271     0260  00F1               	movwf	bitWrite@reg
 14272     0261  3005               	movlw	5
 14273     0262  00F3               	movwf	bitWrite@position
 14274     0263  01F4               	clrf	bitWrite@value
 14275     0264  0AF4               	incf	bitWrite@value,f
 14276     0265  3194  248D  3180   	fcall	_bitWrite
 14277                           
 14278                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 652:         bitWrite(
      +                          mode, 6, 1);
 14279     0268  0140               	movlb	0	; select bank0
 14280     0269  083A               	movf	setMagneticChannel@mode+1,w
 14281     026A  00F2               	movwf	bitWrite@reg+1
 14282     026B  0839               	movf	setMagneticChannel@mode,w
 14283     026C  00F1               	movwf	bitWrite@reg
 14284     026D  3006               	movlw	6
 14285     026E  00F3               	movwf	bitWrite@position
 14286     026F  01F4               	clrf	bitWrite@value
 14287     0270  0AF4               	incf	bitWrite@value,f
 14288     0271  3194  248D  3180   	fcall	_bitWrite
 14289                           
 14290                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 653:         bitWrite(
      +                          mode, 7, 0);
 14291     0274  0140               	movlb	0	; select bank0
 14292     0275  083A               	movf	setMagneticChannel@mode+1,w
 14293     0276  00F2               	movwf	bitWrite@reg+1
 14294     0277  0839               	movf	setMagneticChannel@mode,w
 14295     0278  00F1               	movwf	bitWrite@reg
 14296     0279  3007               	movlw	7
 14297     027A  00F3               	movwf	bitWrite@position
 14298     027B  01F4               	clrf	bitWrite@value
 14299     027C  3194  248D  3180   	fcall	_bitWrite
 14300     027F                     l13898:
 14301                           
 14302                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 654:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14303     027F  0140               	movlb	0	; select bank0
 14304     0280  0839               	movf	setMagneticChannel@mode,w
 14305     0281  00A6               	movwf	writeRegister@data
 14306     0282  3002               	movlw	2
 14307     0283  3190  2000  3180   	fcall	_writeRegister
 14308                           
 14309                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 655:     } else if (ch
      +                          annelMode == 0X8)
 14310     0286  2B73               	goto	l13924
 14311     0287                     l13900:
 14312     0287  3008               	movlw	8
 14313     0288  0638               	xorwf	setMagneticChannel@channelMode,w
 14314     0289  1D03               	btfss	3,2
 14315     028A  2A8C               	goto	u10651
 14316     028B  2A8D               	goto	u10650
 14317     028C                     u10651:
 14318     028C  2AC1               	goto	l13906
 14319     028D                     u10650:
 14320     028D                     l13902:
 14321                           
 14322                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 656:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 657:         bitWrite(mode, 4, 0);
 14323     028D  083A               	movf	setMagneticChannel@mode+1,w
 14324     028E  00F2               	movwf	bitWrite@reg+1
 14325     028F  0839               	movf	setMagneticChannel@mode,w
 14326     0290  00F1               	movwf	bitWrite@reg
 14327     0291  3004               	movlw	4
 14328     0292  00F3               	movwf	bitWrite@position
 14329     0293  01F4               	clrf	bitWrite@value
 14330     0294  3194  248D  3180   	fcall	_bitWrite
 14331                           
 14332                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 658:         bitWrite(
      +                          mode, 5, 0);
 14333     0297  0140               	movlb	0	; select bank0
 14334     0298  083A               	movf	setMagneticChannel@mode+1,w
 14335     0299  00F2               	movwf	bitWrite@reg+1
 14336     029A  0839               	movf	setMagneticChannel@mode,w
 14337     029B  00F1               	movwf	bitWrite@reg
 14338     029C  3005               	movlw	5
 14339     029D  00F3               	movwf	bitWrite@position
 14340     029E  01F4               	clrf	bitWrite@value
 14341     029F  3194  248D  3180   	fcall	_bitWrite
 14342                           
 14343                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 659:         bitWrite(
      +                          mode, 6, 0);
 14344     02A2  0140               	movlb	0	; select bank0
 14345     02A3  083A               	movf	setMagneticChannel@mode+1,w
 14346     02A4  00F2               	movwf	bitWrite@reg+1
 14347     02A5  0839               	movf	setMagneticChannel@mode,w
 14348     02A6  00F1               	movwf	bitWrite@reg
 14349     02A7  3006               	movlw	6
 14350     02A8  00F3               	movwf	bitWrite@position
 14351     02A9  01F4               	clrf	bitWrite@value
 14352     02AA  3194  248D  3180   	fcall	_bitWrite
 14353                           
 14354                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 660:         bitWrite(
      +                          mode, 7, 1);
 14355     02AD  0140               	movlb	0	; select bank0
 14356     02AE  083A               	movf	setMagneticChannel@mode+1,w
 14357     02AF  00F2               	movwf	bitWrite@reg+1
 14358     02B0  0839               	movf	setMagneticChannel@mode,w
 14359     02B1  00F1               	movwf	bitWrite@reg
 14360     02B2  3007               	movlw	7
 14361     02B3  00F3               	movwf	bitWrite@position
 14362     02B4  01F4               	clrf	bitWrite@value
 14363     02B5  0AF4               	incf	bitWrite@value,f
 14364     02B6  3194  248D  3180   	fcall	_bitWrite
 14365     02B9                     l13904:
 14366                           
 14367                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 661:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14368     02B9  0140               	movlb	0	; select bank0
 14369     02BA  0839               	movf	setMagneticChannel@mode,w
 14370     02BB  00A6               	movwf	writeRegister@data
 14371     02BC  3002               	movlw	2
 14372     02BD  3190  2000  3180   	fcall	_writeRegister
 14373                           
 14374                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 662:     } else if (ch
      +                          annelMode == 0X9)
 14375     02C0  2B73               	goto	l13924
 14376     02C1                     l13906:
 14377     02C1  3009               	movlw	9
 14378     02C2  0638               	xorwf	setMagneticChannel@channelMode,w
 14379     02C3  1D03               	btfss	3,2
 14380     02C4  2AC6               	goto	u10661
 14381     02C5  2AC7               	goto	u10660
 14382     02C6                     u10661:
 14383     02C6  2AFC               	goto	l13912
 14384     02C7                     u10660:
 14385     02C7                     l13908:
 14386                           
 14387                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 663:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 664:         bitWrite(mode, 4, 1);
 14388     02C7  083A               	movf	setMagneticChannel@mode+1,w
 14389     02C8  00F2               	movwf	bitWrite@reg+1
 14390     02C9  0839               	movf	setMagneticChannel@mode,w
 14391     02CA  00F1               	movwf	bitWrite@reg
 14392     02CB  3004               	movlw	4
 14393     02CC  00F3               	movwf	bitWrite@position
 14394     02CD  01F4               	clrf	bitWrite@value
 14395     02CE  0AF4               	incf	bitWrite@value,f
 14396     02CF  3194  248D  3180   	fcall	_bitWrite
 14397                           
 14398                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 665:         bitWrite(
      +                          mode, 5, 0);
 14399     02D2  0140               	movlb	0	; select bank0
 14400     02D3  083A               	movf	setMagneticChannel@mode+1,w
 14401     02D4  00F2               	movwf	bitWrite@reg+1
 14402     02D5  0839               	movf	setMagneticChannel@mode,w
 14403     02D6  00F1               	movwf	bitWrite@reg
 14404     02D7  3005               	movlw	5
 14405     02D8  00F3               	movwf	bitWrite@position
 14406     02D9  01F4               	clrf	bitWrite@value
 14407     02DA  3194  248D  3180   	fcall	_bitWrite
 14408                           
 14409                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 666:         bitWrite(
      +                          mode, 6, 0);
 14410     02DD  0140               	movlb	0	; select bank0
 14411     02DE  083A               	movf	setMagneticChannel@mode+1,w
 14412     02DF  00F2               	movwf	bitWrite@reg+1
 14413     02E0  0839               	movf	setMagneticChannel@mode,w
 14414     02E1  00F1               	movwf	bitWrite@reg
 14415     02E2  3006               	movlw	6
 14416     02E3  00F3               	movwf	bitWrite@position
 14417     02E4  01F4               	clrf	bitWrite@value
 14418     02E5  3194  248D  3180   	fcall	_bitWrite
 14419                           
 14420                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 667:         bitWrite(
      +                          mode, 7, 1);
 14421     02E8  0140               	movlb	0	; select bank0
 14422     02E9  083A               	movf	setMagneticChannel@mode+1,w
 14423     02EA  00F2               	movwf	bitWrite@reg+1
 14424     02EB  0839               	movf	setMagneticChannel@mode,w
 14425     02EC  00F1               	movwf	bitWrite@reg
 14426     02ED  3007               	movlw	7
 14427     02EE  00F3               	movwf	bitWrite@position
 14428     02EF  01F4               	clrf	bitWrite@value
 14429     02F0  0AF4               	incf	bitWrite@value,f
 14430     02F1  3194  248D  3180   	fcall	_bitWrite
 14431     02F4                     l13910:
 14432                           
 14433                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 668:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14434     02F4  0140               	movlb	0	; select bank0
 14435     02F5  0839               	movf	setMagneticChannel@mode,w
 14436     02F6  00A6               	movwf	writeRegister@data
 14437     02F7  3002               	movlw	2
 14438     02F8  3190  2000  3180   	fcall	_writeRegister
 14439                           
 14440                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 669:     } else if (ch
      +                          annelMode == 0XA)
 14441     02FB  2B73               	goto	l13924
 14442     02FC                     l13912:
 14443     02FC  300A               	movlw	10
 14444     02FD  0638               	xorwf	setMagneticChannel@channelMode,w
 14445     02FE  1D03               	btfss	3,2
 14446     02FF  2B01               	goto	u10671
 14447     0300  2B02               	goto	u10670
 14448     0301                     u10671:
 14449     0301  2B37               	goto	l13918
 14450     0302                     u10670:
 14451     0302                     l13914:
 14452                           
 14453                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 670:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 671:         bitWrite(mode, 4, 0);
 14454     0302  083A               	movf	setMagneticChannel@mode+1,w
 14455     0303  00F2               	movwf	bitWrite@reg+1
 14456     0304  0839               	movf	setMagneticChannel@mode,w
 14457     0305  00F1               	movwf	bitWrite@reg
 14458     0306  3004               	movlw	4
 14459     0307  00F3               	movwf	bitWrite@position
 14460     0308  01F4               	clrf	bitWrite@value
 14461     0309  3194  248D  3180   	fcall	_bitWrite
 14462                           
 14463                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 672:         bitWrite(
      +                          mode, 5, 1);
 14464     030C  0140               	movlb	0	; select bank0
 14465     030D  083A               	movf	setMagneticChannel@mode+1,w
 14466     030E  00F2               	movwf	bitWrite@reg+1
 14467     030F  0839               	movf	setMagneticChannel@mode,w
 14468     0310  00F1               	movwf	bitWrite@reg
 14469     0311  3005               	movlw	5
 14470     0312  00F3               	movwf	bitWrite@position
 14471     0313  01F4               	clrf	bitWrite@value
 14472     0314  0AF4               	incf	bitWrite@value,f
 14473     0315  3194  248D  3180   	fcall	_bitWrite
 14474                           
 14475                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 673:         bitWrite(
      +                          mode, 6, 0);
 14476     0318  0140               	movlb	0	; select bank0
 14477     0319  083A               	movf	setMagneticChannel@mode+1,w
 14478     031A  00F2               	movwf	bitWrite@reg+1
 14479     031B  0839               	movf	setMagneticChannel@mode,w
 14480     031C  00F1               	movwf	bitWrite@reg
 14481     031D  3006               	movlw	6
 14482     031E  00F3               	movwf	bitWrite@position
 14483     031F  01F4               	clrf	bitWrite@value
 14484     0320  3194  248D  3180   	fcall	_bitWrite
 14485                           
 14486                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 674:         bitWrite(
      +                          mode, 7, 1);
 14487     0323  0140               	movlb	0	; select bank0
 14488     0324  083A               	movf	setMagneticChannel@mode+1,w
 14489     0325  00F2               	movwf	bitWrite@reg+1
 14490     0326  0839               	movf	setMagneticChannel@mode,w
 14491     0327  00F1               	movwf	bitWrite@reg
 14492     0328  3007               	movlw	7
 14493     0329  00F3               	movwf	bitWrite@position
 14494     032A  01F4               	clrf	bitWrite@value
 14495     032B  0AF4               	incf	bitWrite@value,f
 14496     032C  3194  248D  3180   	fcall	_bitWrite
 14497     032F                     l13916:
 14498                           
 14499                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 675:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14500     032F  0140               	movlb	0	; select bank0
 14501     0330  0839               	movf	setMagneticChannel@mode,w
 14502     0331  00A6               	movwf	writeRegister@data
 14503     0332  3002               	movlw	2
 14504     0333  3190  2000  3180   	fcall	_writeRegister
 14505                           
 14506                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 676:     } else if (ch
      +                          annelMode == 0XB)
 14507     0336  2B73               	goto	l13924
 14508     0337                     l13918:
 14509     0337  300B               	movlw	11
 14510     0338  0638               	xorwf	setMagneticChannel@channelMode,w
 14511     0339  1D03               	btfss	3,2
 14512     033A  2B3C               	goto	u10681
 14513     033B  2B3D               	goto	u10680
 14514     033C                     u10681:
 14515     033C  2B73               	goto	l2240
 14516     033D                     u10680:
 14517     033D                     l13920:
 14518                           
 14519                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 677:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 678:         bitWrite(mode, 4, 1);
 14520     033D  083A               	movf	setMagneticChannel@mode+1,w
 14521     033E  00F2               	movwf	bitWrite@reg+1
 14522     033F  0839               	movf	setMagneticChannel@mode,w
 14523     0340  00F1               	movwf	bitWrite@reg
 14524     0341  3004               	movlw	4
 14525     0342  00F3               	movwf	bitWrite@position
 14526     0343  01F4               	clrf	bitWrite@value
 14527     0344  0AF4               	incf	bitWrite@value,f
 14528     0345  3194  248D  3180   	fcall	_bitWrite
 14529                           
 14530                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 679:         bitWrite(
      +                          mode, 5, 1);
 14531     0348  0140               	movlb	0	; select bank0
 14532     0349  083A               	movf	setMagneticChannel@mode+1,w
 14533     034A  00F2               	movwf	bitWrite@reg+1
 14534     034B  0839               	movf	setMagneticChannel@mode,w
 14535     034C  00F1               	movwf	bitWrite@reg
 14536     034D  3005               	movlw	5
 14537     034E  00F3               	movwf	bitWrite@position
 14538     034F  01F4               	clrf	bitWrite@value
 14539     0350  0AF4               	incf	bitWrite@value,f
 14540     0351  3194  248D  3180   	fcall	_bitWrite
 14541                           
 14542                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 680:         bitWrite(
      +                          mode, 6, 0);
 14543     0354  0140               	movlb	0	; select bank0
 14544     0355  083A               	movf	setMagneticChannel@mode+1,w
 14545     0356  00F2               	movwf	bitWrite@reg+1
 14546     0357  0839               	movf	setMagneticChannel@mode,w
 14547     0358  00F1               	movwf	bitWrite@reg
 14548     0359  3006               	movlw	6
 14549     035A  00F3               	movwf	bitWrite@position
 14550     035B  01F4               	clrf	bitWrite@value
 14551     035C  3194  248D  3180   	fcall	_bitWrite
 14552                           
 14553                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 681:         bitWrite(
      +                          mode, 7, 1);
 14554     035F  0140               	movlb	0	; select bank0
 14555     0360  083A               	movf	setMagneticChannel@mode+1,w
 14556     0361  00F2               	movwf	bitWrite@reg+1
 14557     0362  0839               	movf	setMagneticChannel@mode,w
 14558     0363  00F1               	movwf	bitWrite@reg
 14559     0364  3007               	movlw	7
 14560     0365  00F3               	movwf	bitWrite@position
 14561     0366  01F4               	clrf	bitWrite@value
 14562     0367  0AF4               	incf	bitWrite@value,f
 14563     0368  3194  248D  3180   	fcall	_bitWrite
 14564     036B                     l13922:
 14565                           
 14566                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 682:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14567     036B  0140               	movlb	0	; select bank0
 14568     036C  0839               	movf	setMagneticChannel@mode,w
 14569     036D  00A6               	movwf	writeRegister@data
 14570     036E  3002               	movlw	2
 14571     036F  3190  2000  3180   	fcall	_writeRegister
 14572     0372  2B73               	goto	l13924
 14573     0373                     l2240:
 14574     0373                     l13924:
 14575                           
 14576                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 685:     return getErr
      +                          or();;	Return value of _setMagneticChannel is never used
 14577     0373  318D  2577  3180   	fcall	_getError
 14578     0376                     l2246:
 14579     0376  0008               	return
 14580     0377                     __end_of_setMagneticChannel:
 14581                           
 14582                           	psect	text7
 14583     1000                     __ptext7:	
 14584 ;; *************** function _writeRegister *****************
 14585 ;; Defined at:
 14586 ;;		line 188 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 14587 ;; Parameters:    Size  Location     Type
 14588 ;;  regAddress      1    wreg     unsigned char 
 14589 ;;  data            1    6[BANK0 ] unsigned char 
 14590 ;; Auto vars:     Size  Location     Type
 14591 ;;  regAddress      1    7[BANK0 ] unsigned char 
 14592 ;; Return value:  Size  Location     Type
 14593 ;;                  1    wreg      unsigned char 
 14594 ;; Registers used:
 14595 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14596 ;; Tracked objects:
 14597 ;;		On entry : 0/0
 14598 ;;		On exit  : 0/0
 14599 ;;		Unchanged: 0/0
 14600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14601 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14602 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14604 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14605 ;;Total ram usage:        2 bytes
 14606 ;; Hardware stack levels used: 1
 14607 ;; Hardware stack levels required when called: 13
 14608 ;; This function calls:
 14609 ;;		_i2c_write1ByteRegister
 14610 ;; This function is called by:
 14611 ;;		_setOperatingMode
 14612 ;;		_setMagneticChannel
 14613 ;;		_setXYAxisRange
 14614 ;;		_setZAxisRange
 14615 ;;		_setTemperatureEn
 14616 ;;		_setupWakeUpAndSleep
 14617 ;;		_setCRCMode
 14618 ;;		_setMagTemp
 14619 ;;		_setConvAvg
 14620 ;;		_setIntThreshold
 14621 ;;		_setLowPower
 14622 ;;		_setGlitchFilter
 14623 ;;		_setTriggerMode
 14624 ;;		_setSleeptime
 14625 ;;		_setMagDir
 14626 ;;		_setMagnitudeGain
 14627 ;;		_setMagneticGain
 14628 ;;		_setMagneticOffset1
 14629 ;;		_setMagneticOffset2
 14630 ;;		_setAngleEn
 14631 ;;		_setXThreshold
 14632 ;;		_setYThreshold
 14633 ;;		_setZThreshold
 14634 ;;		_setTemperatureThreshold
 14635 ;;		_setInterruptResult
 14636 ;;		_setThresholdEn
 14637 ;;		_setIntPinState
 14638 ;;		_setInterruptMode
 14639 ;;		_setMaskInterrupt
 14640 ;;		_setI2CAddress
 14641 ;;		_setI2CAddressEN
 14642 ;; This function uses a non-reentrant model
 14643 ;;
 14644                           
 14645     1000                     _writeRegister:	
 14646                           ;psect for function _writeRegister
 14647                           
 14648                           
 14649                           ;incstack = 0
 14650                           ; Regs used in _writeRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14651                           ;writeRegister@regAddress stored from wreg
 14652     1000  0140               	movlb	0	; select bank0
 14653     1001  00A7               	movwf	writeRegister@regAddress
 14654     1002                     l13570:
 14655                           
 14656                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 191:     i2c_write1Byt
      +                          eRegister(0X22, regAddress, data);
 14657     1002  0827               	movf	writeRegister@regAddress,w
 14658     1003  00A4               	movwf	i2c_write1ByteRegister@reg
 14659     1004  0826               	movf	writeRegister@data,w
 14660     1005  00A5               	movwf	i2c_write1ByteRegister@data
 14661     1006  3022               	movlw	34
 14662     1007  3197  2700  3190   	fcall	_i2c_write1ByteRegister
 14663     100A                     l2139:
 14664     100A  0008               	return
 14665     100B                     __end_of_writeRegister:
 14666                           
 14667                           	psect	text8
 14668     1700                     __ptext8:	
 14669 ;; *************** function _i2c_write1ByteRegister *****************
 14670 ;; Defined at:
 14671 ;;		line 51 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 14672 ;; Parameters:    Size  Location     Type
 14673 ;;  address         1    wreg     unsigned char 
 14674 ;;  reg             1    4[BANK0 ] unsigned char 
 14675 ;;  data            1    5[BANK0 ] unsigned char 
 14676 ;; Auto vars:     Size  Location     Type
 14677 ;;  address         1   11[COMMON] unsigned char 
 14678 ;; Return value:  Size  Location     Type
 14679 ;;                  1    wreg      void 
 14680 ;; Registers used:
 14681 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14682 ;; Tracked objects:
 14683 ;;		On entry : 0/0
 14684 ;;		On exit  : 0/0
 14685 ;;		Unchanged: 0/0
 14686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14687 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14688 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14690 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14691 ;;Total ram usage:        3 bytes
 14692 ;; Hardware stack levels used: 1
 14693 ;; Hardware stack levels required when called: 12
 14694 ;; This function calls:
 14695 ;;		_I2C1_Close
 14696 ;;		_I2C1_MasterWrite
 14697 ;;		_I2C1_Open
 14698 ;;		_I2C1_SetAddressNackCallback
 14699 ;;		_I2C1_SetBuffer
 14700 ;;		_I2C1_SetDataCompleteCallback
 14701 ;; This function is called by:
 14702 ;;		_writeRegister
 14703 ;;		_BMA253_Initialize
 14704 ;; This function uses a non-reentrant model
 14705 ;;
 14706                           
 14707     1700                     _i2c_write1ByteRegister:	
 14708                           ;psect for function _i2c_write1ByteRegister
 14709                           
 14710                           
 14711                           ;incstack = 0
 14712                           ; Regs used in _i2c_write1ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14713                           ;i2c_write1ByteRegister@address stored from wreg
 14714     1700  00FB               	movwf	i2c_write1ByteRegister@address
 14715     1701                     l13328:
 14716     1701                     l13330:	
 14717                           ;mcc_generated_files/drivers/i2c_simple_master.c: 51: void i2c_write1ByteRegister(i2c1_a
      +                          ddress_t address, uint8_t reg, uint8_t data);mcc_generated_files/drivers/i2c_simple_mast
      +                          er.c: 52: {;mcc_generated_files/drivers/i2c_simple_master.c: 53:     while(!I2C1_Open(ad
      +                          dress));
 14718                           
 14719     1701  087B               	movf	i2c_write1ByteRegister@address,w
 14720     1702  3197  27CA  3197   	fcall	_I2C1_Open
 14721     1705  3A00               	xorlw	0
 14722     1706  1903               	skipnz
 14723     1707  2F09               	goto	u10111
 14724     1708  2F0A               	goto	u10110
 14725     1709                     u10111:
 14726     1709  2F01               	goto	l13330
 14727     170A                     u10110:
 14728     170A                     l13332:
 14729                           
 14730                           ;mcc_generated_files/drivers/i2c_simple_master.c: 54:     I2C1_SetDataCompleteCallback(w
      +                          r1RegCompleteHandler,&data);
 14731     170A  30B3               	movlw	low _wr1RegCompleteHandler
 14732     170B  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 14733     170C  3010               	movlw	high _wr1RegCompleteHandler
 14734     170D  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 14735     170E  3025               	movlw	(low (i2c_write1ByteRegister@data| 0))& (0+255)
 14736     170F  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 14737     1710  319F  27C8  3197   	fcall	_I2C1_SetDataCompleteCallback
 14738     1713                     l13334:
 14739                           
 14740                           ;mcc_generated_files/drivers/i2c_simple_master.c: 55:     I2C1_SetBuffer(&reg,1);
 14741     1713  3001               	movlw	1
 14742     1714  00F1               	movwf	I2C1_SetBuffer@bufferSize
 14743     1715  3000               	movlw	0
 14744     1716  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 14745     1717  3024               	movlw	(low (i2c_write1ByteRegister@reg| 0))& (0+255)
 14746     1718  3190  204A  3197   	fcall	_I2C1_SetBuffer
 14747     171B                     l13336:
 14748                           
 14749                           ;mcc_generated_files/drivers/i2c_simple_master.c: 56:     I2C1_SetAddressNackCallback(((
      +                          void*)0),((void*)0));
 14750     171B  3000               	movlw	0
 14751     171C  00F5               	movwf	I2C1_SetAddressNackCallback@cb
 14752     171D  00F6               	movwf	I2C1_SetAddressNackCallback@cb+1
 14753     171E  3000               	movlw	0
 14754     171F  00F7               	movwf	I2C1_SetAddressNackCallback@ptr
 14755     1720  00F8               	movwf	I2C1_SetAddressNackCallback@ptr+1
 14756     1721  319F  27D3  3197   	fcall	_I2C1_SetAddressNackCallback
 14757     1724                     l13338:
 14758                           
 14759                           ;mcc_generated_files/drivers/i2c_simple_master.c: 57:     I2C1_MasterWrite();
 14760     1724  319E  26CA  3197   	fcall	_I2C1_MasterWrite
 14761     1727                     l13340:	
 14762                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58:     while(I2C1_BUSY == I2C1_Close(
      +                          ));
 14763                           
 14764     1727  3192  2233  3197   	fcall	_I2C1_Close
 14765     172A  3A01               	xorlw	1
 14766     172B  1903               	skipnz
 14767     172C  2F2E               	goto	u10121
 14768     172D  2F2F               	goto	u10120
 14769     172E                     u10121:
 14770     172E  2F27               	goto	l13340
 14771     172F                     u10120:
 14772     172F                     l510:
 14773     172F  0008               	return
 14774     1730                     __end_of_i2c_write1ByteRegister:
 14775                           
 14776                           	psect	text9
 14777     0D77                     __ptext9:	
 14778 ;; *************** function _getError *****************
 14779 ;; Defined at:
 14780 ;;		line 2320 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 14781 ;; Parameters:    Size  Location     Type
 14782 ;;		None
 14783 ;; Auto vars:     Size  Location     Type
 14784 ;;  statusReg       1   21[BANK0 ] unsigned char 
 14785 ;;  oscillatorEr    1   20[BANK0 ] unsigned char 
 14786 ;;  intPinError     1   19[BANK0 ] unsigned char 
 14787 ;;  otpCrcError     1   18[BANK0 ] unsigned char 
 14788 ;;  undervoltage    1   17[BANK0 ] unsigned char 
 14789 ;; Return value:  Size  Location     Type
 14790 ;;                  1    wreg      char 
 14791 ;; Registers used:
 14792 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14793 ;; Tracked objects:
 14794 ;;		On entry : 0/0
 14795 ;;		On exit  : 0/0
 14796 ;;		Unchanged: 0/0
 14797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14799 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14800 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14801 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14802 ;;Total ram usage:        7 bytes
 14803 ;; Hardware stack levels used: 1
 14804 ;; Hardware stack levels required when called: 16
 14805 ;; This function calls:
 14806 ;;		_bitRead
 14807 ;;		_getDeviceStatus
 14808 ;; This function is called by:
 14809 ;;		_begin
 14810 ;;		_setOperatingMode
 14811 ;;		_setMagneticChannel
 14812 ;;		_setXYAxisRange
 14813 ;;		_setZAxisRange
 14814 ;;		_setTemperatureEn
 14815 ;;		_setupWakeUpAndSleep
 14816 ;;		_readWakeUpAndSleepData
 14817 ;;		_setCRCMode
 14818 ;;		_setMagTemp
 14819 ;;		_setConvAvg
 14820 ;;		_setReadMode
 14821 ;;		_setIntThreshold
 14822 ;;		_setLowPower
 14823 ;;		_setGlitchFilter
 14824 ;;		_setTriggerMode
 14825 ;;		_setSleeptime
 14826 ;;		_setMagDir
 14827 ;;		_setMagnitudeGain
 14828 ;;		_setMagneticGain
 14829 ;;		_setMagneticOffset1
 14830 ;;		_setMagneticOffset2
 14831 ;;		_setAngleEn
 14832 ;;		_setXThreshold
 14833 ;;		_setYThreshold
 14834 ;;		_setZThreshold
 14835 ;;		_setTemperatureThreshold
 14836 ;;		_setInterruptResult
 14837 ;;		_setThresholdEn
 14838 ;;		_setIntPinState
 14839 ;;		_setInterruptMode
 14840 ;;		_setMaskInterrupt
 14841 ;;		_setI2CAddress
 14842 ;;		_setI2CAddressEN
 14843 ;;		_setOscillatorError
 14844 ;; This function uses a non-reentrant model
 14845 ;;
 14846                           
 14847     0D77                     _getError:	
 14848                           ;psect for function _getError
 14849                           
 14850     0D77                     l13536:	
 14851                           ;incstack = 0
 14852 ;; hardware stack exceeded
 14853                           ; Regs used in _getError: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14854                           
 14855                           
 14856                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2322:     uint8_t stat
      +                          usReg = getDeviceStatus();
 14857     0D77  319F  2761  318D   	fcall	_getDeviceStatus
 14858     0D7A  0140               	movlb	0	; select bank0
 14859     0D7B  00B5               	movwf	getError@statusReg
 14860     0D7C                     l13538:
 14861                           
 14862                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2323:     uint8_t unde
      +                          rvoltageError = bitRead(statusReg, 0);
 14863     0D7C  0835               	movf	getError@statusReg,w
 14864     0D7D  00AF               	movwf	??_getError
 14865     0D7E  01B0               	clrf	??_getError+1
 14866     0D7F  082F               	movf	??_getError,w
 14867     0D80  00F1               	movwf	bitRead@reg
 14868     0D81  0830               	movf	??_getError+1,w
 14869     0D82  00F2               	movwf	bitRead@reg+1
 14870     0D83  01F3               	clrf	bitRead@position
 14871     0D84  3194  2424  318D   	fcall	_bitRead
 14872     0D87  0140               	movlb	0	; select bank0
 14873     0D88  00B1               	movwf	getError@undervoltageError
 14874     0D89                     l13540:
 14875                           
 14876                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2324:     uint8_t otpC
      +                          rcError = bitRead(statusReg, 1);
 14877     0D89  0835               	movf	getError@statusReg,w
 14878     0D8A  00AF               	movwf	??_getError
 14879     0D8B  01B0               	clrf	??_getError+1
 14880     0D8C  082F               	movf	??_getError,w
 14881     0D8D  00F1               	movwf	bitRead@reg
 14882     0D8E  0830               	movf	??_getError+1,w
 14883     0D8F  00F2               	movwf	bitRead@reg+1
 14884     0D90  01F3               	clrf	bitRead@position
 14885     0D91  0AF3               	incf	bitRead@position,f
 14886     0D92  3194  2424  318D   	fcall	_bitRead
 14887     0D95  0140               	movlb	0	; select bank0
 14888     0D96  00B2               	movwf	getError@otpCrcError
 14889     0D97                     l13542:
 14890                           
 14891                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2325:     uint8_t intP
      +                          inError = bitRead(statusReg, 2);
 14892     0D97  0835               	movf	getError@statusReg,w
 14893     0D98  00AF               	movwf	??_getError
 14894     0D99  01B0               	clrf	??_getError+1
 14895     0D9A  082F               	movf	??_getError,w
 14896     0D9B  00F1               	movwf	bitRead@reg
 14897     0D9C  0830               	movf	??_getError+1,w
 14898     0D9D  00F2               	movwf	bitRead@reg+1
 14899     0D9E  3002               	movlw	2
 14900     0D9F  00F3               	movwf	bitRead@position
 14901     0DA0  3194  2424  318D   	fcall	_bitRead
 14902     0DA3  0140               	movlb	0	; select bank0
 14903     0DA4  00B3               	movwf	getError@intPinError
 14904     0DA5                     l13544:
 14905                           
 14906                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2326:     uint8_t osci
      +                          llatorError = bitRead(statusReg, 3);
 14907     0DA5  0835               	movf	getError@statusReg,w
 14908     0DA6  00AF               	movwf	??_getError
 14909     0DA7  01B0               	clrf	??_getError+1
 14910     0DA8  082F               	movf	??_getError,w
 14911     0DA9  00F1               	movwf	bitRead@reg
 14912     0DAA  0830               	movf	??_getError+1,w
 14913     0DAB  00F2               	movwf	bitRead@reg+1
 14914     0DAC  3003               	movlw	3
 14915     0DAD  00F3               	movwf	bitRead@position
 14916     0DAE  3194  2424  318D   	fcall	_bitRead
 14917     0DB1  0140               	movlb	0	; select bank0
 14918     0DB2  00B4               	movwf	getError@oscillatorError
 14919     0DB3                     l13546:
 14920                           
 14921                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2329:     if ((undervo
      +                          ltageError != 0) && (otpCrcError != 0) && (intPinError != 0) && (oscillatorError != 0)) 
      +                          {
 14922     0DB3  0831               	movf	getError@undervoltageError,w
 14923     0DB4  1903               	btfsc	3,2
 14924     0DB5  2DB7               	goto	u10371
 14925     0DB6  2DB8               	goto	u10370
 14926     0DB7                     u10371:
 14927     0DB7  2DC9               	goto	l13560
 14928     0DB8                     u10370:
 14929     0DB8                     l13548:
 14930     0DB8  0832               	movf	getError@otpCrcError,w
 14931     0DB9  1903               	btfsc	3,2
 14932     0DBA  2DBC               	goto	u10381
 14933     0DBB  2DBD               	goto	u10380
 14934     0DBC                     u10381:
 14935     0DBC  2DC9               	goto	l13560
 14936     0DBD                     u10380:
 14937     0DBD                     l13550:
 14938     0DBD  0833               	movf	getError@intPinError,w
 14939     0DBE  1903               	btfsc	3,2
 14940     0DBF  2DC1               	goto	u10391
 14941     0DC0  2DC2               	goto	u10390
 14942     0DC1                     u10391:
 14943     0DC1  2DC9               	goto	l13560
 14944     0DC2                     u10390:
 14945     0DC2                     l13552:
 14946     0DC2  0834               	movf	getError@oscillatorError,w
 14947     0DC3  1903               	btfsc	3,2
 14948     0DC4  2DC6               	goto	u10401
 14949     0DC5  2DC7               	goto	u10400
 14950     0DC6                     u10401:
 14951     0DC6  2DC9               	goto	l13560
 14952     0DC7                     u10400:
 14953     0DC7                     l13554:
 14954                           
 14955                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2330:         return -
      +                          1;
 14956     0DC7  30FF               	movlw	255
 14957     0DC8  2DCA               	goto	l2640
 14958     0DC9                     l13560:
 14959                           
 14960                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2332:         return 0
      +                          ;
 14961     0DC9  3000               	movlw	0
 14962     0DCA                     l2640:
 14963     0DCA  0008               	return
 14964     0DCB                     __end_of_getError:
 14965                           
 14966                           	psect	text10
 14967     1F61                     __ptext10:	
 14968 ;; *************** function _getDeviceStatus *****************
 14969 ;; Defined at:
 14970 ;;		line 2306 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 14971 ;; Parameters:    Size  Location     Type
 14972 ;;		None
 14973 ;; Auto vars:     Size  Location     Type
 14974 ;;  deviceStatus    1   14[BANK0 ] unsigned char 
 14975 ;; Return value:  Size  Location     Type
 14976 ;;                  1    wreg      unsigned char 
 14977 ;; Registers used:
 14978 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14979 ;; Tracked objects:
 14980 ;;		On entry : 0/0
 14981 ;;		On exit  : 0/0
 14982 ;;		Unchanged: 0/0
 14983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14985 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14987 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14988 ;;Total ram usage:        1 bytes
 14989 ;; Hardware stack levels used: 1
 14990 ;; Hardware stack levels required when called: 15
 14991 ;; This function calls:
 14992 ;;		_readRegister
 14993 ;; This function is called by:
 14994 ;;		_getError
 14995 ;; This function uses a non-reentrant model
 14996 ;;
 14997                           
 14998     1F61                     _getDeviceStatus:	
 14999                           ;psect for function _getDeviceStatus
 15000                           
 15001     1F61                     l13418:	
 15002                           ;incstack = 0
 15003 ;; hardware stack exceeded
 15004                           ; Regs used in _getDeviceStatus: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15005                           
 15006                           
 15007                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2308:     uint8_t devi
      +                          ceStatusReg = readRegister(TMAG5273_REG_DEVICE_STATUS);
 15008     1F61  301C               	movlw	28
 15009     1F62  3190  2058  319F   	fcall	_readRegister
 15010     1F65  0140               	movlb	0	; select bank0
 15011     1F66  00AE               	movwf	getDeviceStatus@deviceStatusReg
 15012     1F67                     l13420:
 15013                           
 15014                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2310:     return devic
      +                          eStatusReg;
 15015     1F67  082E               	movf	getDeviceStatus@deviceStatusReg,w
 15016     1F68                     l2636:
 15017     1F68  0008               	return
 15018     1F69                     __end_of_getDeviceStatus:
 15019                           
 15020                           	psect	text11
 15021     148D                     __ptext11:	
 15022 ;; *************** function _bitWrite *****************
 15023 ;; Defined at:
 15024 ;;		line 2520 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15025 ;; Parameters:    Size  Location     Type
 15026 ;;  reg             2    1[COMMON] PTR unsigned short 
 15027 ;;		 -> begin@testReg(2), RAM(8192), 
 15028 ;;  position        1    3[COMMON] unsigned char 
 15029 ;;  value           1    4[COMMON] unsigned char 
 15030 ;; Auto vars:     Size  Location     Type
 15031 ;;  mask            2    9[COMMON] unsigned short 
 15032 ;; Return value:  Size  Location     Type
 15033 ;;                  1    wreg      void 
 15034 ;; Registers used:
 15035 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15036 ;; Tracked objects:
 15037 ;;		On entry : 0/0
 15038 ;;		On exit  : 0/0
 15039 ;;		Unchanged: 0/0
 15040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15041 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15042 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15043 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15044 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15045 ;;Total ram usage:       10 bytes
 15046 ;; Hardware stack levels used: 1
 15047 ;; Hardware stack levels required when called: 4
 15048 ;; This function calls:
 15049 ;;		Nothing
 15050 ;; This function is called by:
 15051 ;;		_begin
 15052 ;;		_setOperatingMode
 15053 ;;		_setMagneticChannel
 15054 ;;		_setXYAxisRange
 15055 ;;		_setZAxisRange
 15056 ;;		_setTemperatureEn
 15057 ;;		_setCRCMode
 15058 ;;		_setMagTemp
 15059 ;;		_setConvAvg
 15060 ;;		_setReadMode
 15061 ;;		_setIntThreshold
 15062 ;;		_setLowPower
 15063 ;;		_setGlitchFilter
 15064 ;;		_setTriggerMode
 15065 ;;		_setSleeptime
 15066 ;;		_setMagDir
 15067 ;;		_setMagnitudeGain
 15068 ;;		_setAngleEn
 15069 ;;		_setInterruptResult
 15070 ;;		_setThresholdEn
 15071 ;;		_setIntPinState
 15072 ;;		_setMaskInterrupt
 15073 ;;		_setI2CAddressEN
 15074 ;;		_setOscillatorError
 15075 ;; This function uses a non-reentrant model
 15076 ;;
 15077                           
 15078     148D                     _bitWrite:	
 15079                           ;psect for function _bitWrite
 15080                           
 15081     148D                     l13530:	
 15082                           ;incstack = 0
 15083                           ; Regs used in _bitWrite: [wreg+fsr1l+fsr1h+status,2+status,0]
 15084                           
 15085     148D                     l13532:
 15086                           
 15087                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2522:     mask = value
      +                           << position;
 15088     148D  0874               	movf	bitWrite@value,w
 15089     148E  00F5               	movwf	??_bitWrite
 15090     148F  01F6               	clrf	??_bitWrite+1
 15091     1490  0A73               	incf	bitWrite@position,w
 15092     1491  2C94               	goto	u10364
 15093     1492                     u10365:
 15094     1492  35F5               	lslf	??_bitWrite,f
 15095     1493  0DF6               	rlf	??_bitWrite+1,f
 15096     1494                     u10364:
 15097     1494  0B89               	decfsz	9,f
 15098     1495  2C92               	goto	u10365
 15099     1496  0875               	movf	??_bitWrite,w
 15100     1497  00F9               	movwf	bitWrite@mask
 15101     1498  0876               	movf	??_bitWrite+1,w
 15102     1499  00FA               	movwf	bitWrite@mask+1
 15103     149A                     l13534:
 15104                           
 15105                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2523:     *reg = *reg 
      +                          | mask;
 15106     149A  0871               	movf	bitWrite@reg,w
 15107     149B  0086               	movwf	6
 15108     149C  0872               	movf	bitWrite@reg+1,w
 15109     149D  0087               	movwf	7
 15110     149E  3F40               	moviw [0]fsr1
 15111     149F  00F5               	movwf	??_bitWrite
 15112     14A0  3F41               	moviw [1]fsr1
 15113     14A1  00F6               	movwf	??_bitWrite+1
 15114     14A2  0879               	movf	bitWrite@mask,w
 15115     14A3  0475               	iorwf	??_bitWrite,w
 15116     14A4  00F7               	movwf	??_bitWrite+2
 15117     14A5  087A               	movf	bitWrite@mask+1,w
 15118     14A6  0476               	iorwf	??_bitWrite+1,w
 15119     14A7  00F8               	movwf	??_bitWrite+3
 15120     14A8  0871               	movf	bitWrite@reg,w
 15121     14A9  0086               	movwf	6
 15122     14AA  0872               	movf	bitWrite@reg+1,w
 15123     14AB  0087               	movwf	7
 15124     14AC  0877               	movf	??_bitWrite+2,w
 15125     14AD  3FC0               	movwi [0]fsr1
 15126     14AE  0878               	movf	??_bitWrite+3,w
 15127     14AF  3FC1               	movwi [1]fsr1
 15128     14B0                     l2676:
 15129     14B0  0008               	return
 15130     14B1                     __end_of_bitWrite:
 15131                           
 15132                           	psect	text12
 15133     11AD                     __ptext12:	
 15134 ;; *************** function _isConnected *****************
 15135 ;; Defined at:
 15136 ;;		line 95 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15137 ;; Parameters:    Size  Location     Type
 15138 ;;		None
 15139 ;; Auto vars:     Size  Location     Type
 15140 ;;		None
 15141 ;; Return value:  Size  Location     Type
 15142 ;;                  1    wreg      char 
 15143 ;; Registers used:
 15144 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15145 ;; Tracked objects:
 15146 ;;		On entry : 0/0
 15147 ;;		On exit  : 0/0
 15148 ;;		Unchanged: 0/0
 15149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15154 ;;Total ram usage:        0 bytes
 15155 ;; Hardware stack levels used: 1
 15156 ;; Hardware stack levels required when called: 14
 15157 ;; This function calls:
 15158 ;;		_TMAG5273_GetManufacture
 15159 ;; This function is called by:
 15160 ;;		_begin
 15161 ;; This function uses a non-reentrant model
 15162 ;;
 15163                           
 15164     11AD                     _isConnected:	
 15165                           ;psect for function _isConnected
 15166                           
 15167     11AD                     l13836:	
 15168                           ;incstack = 0
 15169                           ; Regs used in _isConnected: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15170                           
 15171                           
 15172                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 103:     manufactureId
      +                           = TMAG5273_GetManufacture();
 15173     11AD  3192  22C5  3191   	fcall	_TMAG5273_GetManufacture
 15174     11B0  0140               	movlb	0	; select bank0
 15175     11B1  082E               	movf	?_TMAG5273_GetManufacture+1,w
 15176     11B2  00CB               	movwf	_manufactureId+1
 15177     11B3  082D               	movf	?_TMAG5273_GetManufacture,w
 15178     11B4  00CA               	movwf	_manufactureId
 15179     11B5                     l13838:
 15180                           
 15181                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 105:     if (manufactu
      +                          reId != 0x5449) {
 15182     11B5  3049               	movlw	73
 15183     11B6  064A               	xorwf	_manufactureId,w
 15184     11B7  3054               	movlw	84
 15185     11B8  1903               	skipnz
 15186     11B9  064B               	xorwf	_manufactureId+1,w
 15187     11BA  1903               	btfsc	3,2
 15188     11BB  29BD               	goto	u10561
 15189     11BC  29BE               	goto	u10560
 15190     11BD                     u10561:
 15191     11BD  29C0               	goto	l13844
 15192     11BE                     u10560:
 15193     11BE                     l13840:
 15194                           
 15195                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 106:         return -1
      +                          ;
 15196     11BE  30FF               	movlw	255
 15197     11BF  29C1               	goto	l2127
 15198     11C0                     l13844:
 15199                           
 15200                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 109:     return 0;
 15201     11C0  3000               	movlw	0
 15202     11C1                     l2127:
 15203     11C1  0008               	return
 15204     11C2                     __end_of_isConnected:
 15205                           
 15206                           	psect	text13
 15207     12C5                     __ptext13:	
 15208 ;; *************** function _TMAG5273_GetManufacture *****************
 15209 ;; Defined at:
 15210 ;;		line 2526 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15211 ;; Parameters:    Size  Location     Type
 15212 ;;		None
 15213 ;; Auto vars:     Size  Location     Type
 15214 ;;  read            2   15[BANK0 ] unsigned short 
 15215 ;; Return value:  Size  Location     Type
 15216 ;;                  2   13[BANK0 ] unsigned short 
 15217 ;; Registers used:
 15218 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15219 ;; Tracked objects:
 15220 ;;		On entry : 0/0
 15221 ;;		On exit  : 0/0
 15222 ;;		Unchanged: 0/0
 15223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15224 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15225 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15227 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15228 ;;Total ram usage:        4 bytes
 15229 ;; Hardware stack levels used: 1
 15230 ;; Hardware stack levels required when called: 13
 15231 ;; This function calls:
 15232 ;;		_i2c_read2ByteRegister
 15233 ;;		_swap
 15234 ;; This function is called by:
 15235 ;;		_isConnected
 15236 ;; This function uses a non-reentrant model
 15237 ;;
 15238                           
 15239     12C5                     _TMAG5273_GetManufacture:	
 15240                           ;psect for function _TMAG5273_GetManufacture
 15241                           
 15242     12C5                     l13564:	
 15243                           ;incstack = 0
 15244                           ; Regs used in _TMAG5273_GetManufacture: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15245                           
 15246                           
 15247                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2528:     uint16_t rea
      +                          d = i2c_read2ByteRegister(0X22, TMAG5273_REG_MANUFACTURER_ID_LSB);
 15248     12C5  300E               	movlw	14
 15249     12C6  0140               	movlb	0	; select bank0
 15250     12C7  00A4               	movwf	i2c_read2ByteRegister@reg
 15251     12C8  3022               	movlw	34
 15252     12C9  318A  222A  3192   	fcall	_i2c_read2ByteRegister
 15253     12CC  0140               	movlb	0	; select bank0
 15254     12CD  0825               	movf	?_i2c_read2ByteRegister+1,w
 15255     12CE  00B0               	movwf	TMAG5273_GetManufacture@read+1
 15256     12CF  0824               	movf	?_i2c_read2ByteRegister,w
 15257     12D0  00AF               	movwf	TMAG5273_GetManufacture@read
 15258     12D1                     l13566:
 15259                           
 15260                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2529:     return swap(
      +                          read);
 15261     12D1  0830               	movf	TMAG5273_GetManufacture@read+1,w
 15262     12D2  00F2               	movwf	swap@reg+1
 15263     12D3  082F               	movf	TMAG5273_GetManufacture@read,w
 15264     12D4  00F1               	movwf	swap@reg
 15265     12D5  3191  2184  3192   	fcall	_swap
 15266     12D8  0872               	movf	?_swap+1,w
 15267     12D9  0140               	movlb	0	; select bank0
 15268     12DA  00AE               	movwf	?_TMAG5273_GetManufacture+1
 15269     12DB  0871               	movf	?_swap,w
 15270     12DC  00AD               	movwf	?_TMAG5273_GetManufacture
 15271     12DD                     l2679:
 15272     12DD  0008               	return
 15273     12DE                     __end_of_TMAG5273_GetManufacture:
 15274                           
 15275                           	psect	text14
 15276     1184                     __ptext14:	
 15277 ;; *************** function _swap *****************
 15278 ;; Defined at:
 15279 ;;		line 2532 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15280 ;; Parameters:    Size  Location     Type
 15281 ;;  reg             2    1[COMMON] unsigned short 
 15282 ;; Auto vars:     Size  Location     Type
 15283 ;;  lowerByte       1    9[COMMON] unsigned char 
 15284 ;;  upperByte       1    8[COMMON] unsigned char 
 15285 ;; Return value:  Size  Location     Type
 15286 ;;                  2    1[COMMON] unsigned short 
 15287 ;; Registers used:
 15288 ;;		wreg, status,2
 15289 ;; Tracked objects:
 15290 ;;		On entry : 0/0
 15291 ;;		On exit  : 0/0
 15292 ;;		Unchanged: 0/0
 15293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15294 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15295 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15296 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15297 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15298 ;;Total ram usage:        9 bytes
 15299 ;; Hardware stack levels used: 1
 15300 ;; Hardware stack levels required when called: 4
 15301 ;; This function calls:
 15302 ;;		Nothing
 15303 ;; This function is called by:
 15304 ;;		_TMAG5273_GetManufacture
 15305 ;; This function uses a non-reentrant model
 15306 ;;
 15307                           
 15308     1184                     _swap:	
 15309                           ;psect for function _swap
 15310                           
 15311     1184                     l13424:	
 15312                           ;incstack = 0
 15313                           ; Regs used in _swap: [wreg+status,2]
 15314                           
 15315                           
 15316                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2533:     uint8_t uppe
      +                          rByte;;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2534:     uint8_
      +                          t lowerByte;;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2536:     
      +                          upperByte = ((reg & (0xFF00)) >> 8);
 15317     1184  0872               	movf	swap@reg+1,w
 15318     1185  00F8               	movwf	swap@upperByte
 15319     1186                     l13426:
 15320                           
 15321                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2537:     lowerByte = 
      +                          (uint8_t) reg;
 15322     1186  0871               	movf	swap@reg,w
 15323     1187  00F9               	movwf	swap@lowerByte
 15324     1188                     l13428:
 15325                           
 15326                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2539:     reg = ((int1
      +                          6_t) (lowerByte << 8) | upperByte);
 15327     1188  0878               	movf	swap@upperByte,w
 15328     1189  00F3               	movwf	??_swap
 15329     118A  01F4               	clrf	??_swap+1
 15330     118B  0879               	movf	swap@lowerByte,w
 15331     118C  00F5               	movwf	??_swap+2
 15332     118D  01F6               	clrf	??_swap+3
 15333     118E  0875               	movf	??_swap+2,w
 15334     118F  00F6               	movwf	??_swap+3
 15335     1190  01F5               	clrf	??_swap+2
 15336     1191  0873               	movf	??_swap,w
 15337     1192  0475               	iorwf	??_swap+2,w
 15338     1193  00F1               	movwf	swap@reg
 15339     1194  0874               	movf	??_swap+1,w
 15340     1195  0476               	iorwf	??_swap+3,w
 15341     1196  00F2               	movwf	swap@reg+1
 15342     1197                     l13430:
 15343     1197                     l2682:	
 15344                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2541:     return reg;
 15345                           
 15346     1197  0008               	return
 15347     1198                     __end_of_swap:
 15348                           
 15349                           	psect	text15
 15350     1198                     __ptext15:	
 15351 ;; *************** function _getTemperatureEN *****************
 15352 ;; Defined at:
 15353 ;;		line 2039 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15354 ;; Parameters:    Size  Location     Type
 15355 ;;		None
 15356 ;; Auto vars:     Size  Location     Type
 15357 ;;  tempENreg       1   17[BANK0 ] unsigned char 
 15358 ;;  tempEN          1   16[BANK0 ] unsigned char 
 15359 ;; Return value:  Size  Location     Type
 15360 ;;                  1    wreg      unsigned char 
 15361 ;; Registers used:
 15362 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15363 ;; Tracked objects:
 15364 ;;		On entry : 0/0
 15365 ;;		On exit  : 0/0
 15366 ;;		Unchanged: 0/0
 15367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15369 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15370 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15371 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15372 ;;Total ram usage:        4 bytes
 15373 ;; Hardware stack levels used: 1
 15374 ;; Hardware stack levels required when called: 15
 15375 ;; This function calls:
 15376 ;;		_bitRead
 15377 ;;		_readRegister
 15378 ;; This function is called by:
 15379 ;;		_begin
 15380 ;; This function uses a non-reentrant model
 15381 ;;
 15382                           
 15383     1198                     _getTemperatureEN:	
 15384                           ;psect for function _getTemperatureEN
 15385                           
 15386     1198                     l14264:	
 15387                           ;incstack = 0
 15388 ;; hardware stack exceeded
 15389                           ; Regs used in _getTemperatureEN: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15390                           
 15391     1198                     l14266:
 15392                           
 15393                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2041:     tempENreg = 
      +                          readRegister(TMAG5273_REG_T_CONFIG);
 15394     1198  3007               	movlw	7
 15395     1199  3190  2058  3191   	fcall	_readRegister
 15396     119C  0140               	movlb	0	; select bank0
 15397     119D  00B1               	movwf	getTemperatureEN@tempENreg
 15398     119E                     l14268:
 15399                           
 15400                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2043:     uint8_t temp
      +                          EN = bitRead(tempENreg, 0);
 15401     119E  0831               	movf	getTemperatureEN@tempENreg,w
 15402     119F  00AE               	movwf	??_getTemperatureEN
 15403     11A0  01AF               	clrf	??_getTemperatureEN+1
 15404     11A1  082E               	movf	??_getTemperatureEN,w
 15405     11A2  00F1               	movwf	bitRead@reg
 15406     11A3  082F               	movf	??_getTemperatureEN+1,w
 15407     11A4  00F2               	movwf	bitRead@reg+1
 15408     11A5  01F3               	clrf	bitRead@position
 15409     11A6  3194  2424  3191   	fcall	_bitRead
 15410     11A9  0140               	movlb	0	; select bank0
 15411     11AA  00B0               	movwf	getTemperatureEN@tempEN
 15412     11AB                     l14270:
 15413                           
 15414                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2045:     return tempE
      +                          N;
 15415     11AB  0830               	movf	getTemperatureEN@tempEN,w
 15416     11AC                     l2580:
 15417     11AC  0008               	return
 15418     11AD                     __end_of_getTemperatureEN:
 15419                           
 15420                           	psect	text16
 15421     0CD0                     __ptext16:	
 15422 ;; *************** function _getOperatingMode *****************
 15423 ;; Defined at:
 15424 ;;		line 1585 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15425 ;; Parameters:    Size  Location     Type
 15426 ;;		None
 15427 ;; Auto vars:     Size  Location     Type
 15428 ;;  opMode1         1   18[BANK0 ] unsigned char 
 15429 ;;  opMode0         1   17[BANK0 ] unsigned char 
 15430 ;;  opMode          1   16[BANK0 ] unsigned char 
 15431 ;; Return value:  Size  Location     Type
 15432 ;;                  1    wreg      unsigned char 
 15433 ;; Registers used:
 15434 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15435 ;; Tracked objects:
 15436 ;;		On entry : 0/0
 15437 ;;		On exit  : 0/0
 15438 ;;		Unchanged: 0/0
 15439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15441 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15442 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15443 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15444 ;;Total ram usage:        5 bytes
 15445 ;; Hardware stack levels used: 1
 15446 ;; Hardware stack levels required when called: 15
 15447 ;; This function calls:
 15448 ;;		_bitRead
 15449 ;;		_readRegister
 15450 ;; This function is called by:
 15451 ;;		_begin
 15452 ;; This function uses a non-reentrant model
 15453 ;;
 15454                           
 15455     0CD0                     _getOperatingMode:	
 15456                           ;psect for function _getOperatingMode
 15457                           
 15458     0CD0                     l14030:	
 15459                           ;incstack = 0
 15460 ;; hardware stack exceeded
 15461                           ; Regs used in _getOperatingMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15462                           
 15463     0CD0                     l14032:
 15464                           
 15465                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1587:     opMode = rea
      +                          dRegister(TMAG5273_REG_DEVICE_CONFIG_2);
 15466     0CD0  3001               	movlw	1
 15467     0CD1  3190  2058  318C   	fcall	_readRegister
 15468     0CD4  0140               	movlb	0	; select bank0
 15469     0CD5  00B0               	movwf	getOperatingMode@opMode
 15470     0CD6                     l14034:
 15471                           
 15472                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1589:     uint8_t opMo
      +                          de0 = bitRead(opMode, 0);
 15473     0CD6  0830               	movf	getOperatingMode@opMode,w
 15474     0CD7  00AE               	movwf	??_getOperatingMode
 15475     0CD8  01AF               	clrf	??_getOperatingMode+1
 15476     0CD9  082E               	movf	??_getOperatingMode,w
 15477     0CDA  00F1               	movwf	bitRead@reg
 15478     0CDB  082F               	movf	??_getOperatingMode+1,w
 15479     0CDC  00F2               	movwf	bitRead@reg+1
 15480     0CDD  01F3               	clrf	bitRead@position
 15481     0CDE  3194  2424  318C   	fcall	_bitRead
 15482     0CE1  0140               	movlb	0	; select bank0
 15483     0CE2  00B1               	movwf	getOperatingMode@opMode0
 15484     0CE3                     l14036:
 15485                           
 15486                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1590:     uint8_t opMo
      +                          de1 = bitRead(opMode, 1);
 15487     0CE3  0830               	movf	getOperatingMode@opMode,w
 15488     0CE4  00AE               	movwf	??_getOperatingMode
 15489     0CE5  01AF               	clrf	??_getOperatingMode+1
 15490     0CE6  082E               	movf	??_getOperatingMode,w
 15491     0CE7  00F1               	movwf	bitRead@reg
 15492     0CE8  082F               	movf	??_getOperatingMode+1,w
 15493     0CE9  00F2               	movwf	bitRead@reg+1
 15494     0CEA  01F3               	clrf	bitRead@position
 15495     0CEB  0AF3               	incf	bitRead@position,f
 15496     0CEC  3194  2424  318C   	fcall	_bitRead
 15497     0CEF  0140               	movlb	0	; select bank0
 15498     0CF0  00B2               	movwf	getOperatingMode@opMode1
 15499     0CF1                     l14038:
 15500                           
 15501                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1592:     if ((opMode0
      +                           == 0) && (opMode1 == 0))
 15502     0CF1  0831               	movf	getOperatingMode@opMode0,w
 15503     0CF2  1D03               	btfss	3,2
 15504     0CF3  2CF5               	goto	u10791
 15505     0CF4  2CF6               	goto	u10790
 15506     0CF5                     u10791:
 15507     0CF5  2CFD               	goto	l14048
 15508     0CF6                     u10790:
 15509     0CF6                     l14040:
 15510     0CF6  0832               	movf	getOperatingMode@opMode1,w
 15511     0CF7  1D03               	btfss	3,2
 15512     0CF8  2CFA               	goto	u10801
 15513     0CF9  2CFB               	goto	u10800
 15514     0CFA                     u10801:
 15515     0CFA  2CFD               	goto	l14048
 15516     0CFB                     u10800:
 15517     0CFB                     l14042:
 15518                           
 15519                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1593:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1595:         return 0;
 15520     0CFB  3000               	movlw	0
 15521     0CFC  2D22               	goto	l2452
 15522     0CFD                     l14048:
 15523     0CFD  0331               	decf	getOperatingMode@opMode0,w
 15524     0CFE  1D03               	btfss	3,2
 15525     0CFF  2D01               	goto	u10811
 15526     0D00  2D02               	goto	u10810
 15527     0D01                     u10811:
 15528     0D01  2D09               	goto	l14058
 15529     0D02                     u10810:
 15530     0D02                     l14050:
 15531     0D02  0832               	movf	getOperatingMode@opMode1,w
 15532     0D03  1D03               	btfss	3,2
 15533     0D04  2D06               	goto	u10821
 15534     0D05  2D07               	goto	u10820
 15535     0D06                     u10821:
 15536     0D06  2D09               	goto	l14058
 15537     0D07                     u10820:
 15538     0D07                     l14052:
 15539                           
 15540                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1597:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1599:         return 1;
 15541     0D07  3001               	movlw	1
 15542     0D08  2D22               	goto	l2452
 15543     0D09                     l14058:
 15544     0D09  0831               	movf	getOperatingMode@opMode0,w
 15545     0D0A  1D03               	btfss	3,2
 15546     0D0B  2D0D               	goto	u10831
 15547     0D0C  2D0E               	goto	u10830
 15548     0D0D                     u10831:
 15549     0D0D  2D15               	goto	l14068
 15550     0D0E                     u10830:
 15551     0D0E                     l14060:
 15552     0D0E  0332               	decf	getOperatingMode@opMode1,w
 15553     0D0F  1D03               	btfss	3,2
 15554     0D10  2D12               	goto	u10841
 15555     0D11  2D13               	goto	u10840
 15556     0D12                     u10841:
 15557     0D12  2D15               	goto	l14068
 15558     0D13                     u10840:
 15559     0D13                     l14062:
 15560                           
 15561                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1601:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1603:         return 2;
 15562     0D13  3002               	movlw	2
 15563     0D14  2D22               	goto	l2452
 15564     0D15                     l14068:
 15565     0D15  0331               	decf	getOperatingMode@opMode0,w
 15566     0D16  1D03               	btfss	3,2
 15567     0D17  2D19               	goto	u10851
 15568     0D18  2D1A               	goto	u10850
 15569     0D19                     u10851:
 15570     0D19  2D21               	goto	l2455
 15571     0D1A                     u10850:
 15572     0D1A                     l14070:
 15573     0D1A  0332               	decf	getOperatingMode@opMode1,w
 15574     0D1B  1D03               	btfss	3,2
 15575     0D1C  2D1E               	goto	u10861
 15576     0D1D  2D1F               	goto	u10860
 15577     0D1E                     u10861:
 15578     0D1E  2D21               	goto	l2455
 15579     0D1F                     u10860:
 15580     0D1F                     l14072:
 15581                           
 15582                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1605:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1607:         return 3;
 15583     0D1F  3003               	movlw	3
 15584     0D20  2D22               	goto	l2452
 15585     0D21                     l2455:
 15586     0D21  2CFB               	goto	l14042
 15587     0D22                     l2452:
 15588     0D22  0008               	return
 15589     0D23                     __end_of_getOperatingMode:
 15590                           
 15591                           	psect	text17
 15592     0377                     __ptext17:	
 15593 ;; *************** function _getMagneticChannel *****************
 15594 ;; Defined at:
 15595 ;;		line 1629 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15596 ;; Parameters:    Size  Location     Type
 15597 ;;		None
 15598 ;; Auto vars:     Size  Location     Type
 15599 ;;  magMode7        1   20[BANK0 ] unsigned char 
 15600 ;;  magMode6        1   19[BANK0 ] unsigned char 
 15601 ;;  magMode5        1   18[BANK0 ] unsigned char 
 15602 ;;  magMode4        1   17[BANK0 ] unsigned char 
 15603 ;;  magChannel      1   16[BANK0 ] unsigned char 
 15604 ;; Return value:  Size  Location     Type
 15605 ;;                  1    wreg      unsigned char 
 15606 ;; Registers used:
 15607 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15608 ;; Tracked objects:
 15609 ;;		On entry : 0/0
 15610 ;;		On exit  : 0/0
 15611 ;;		Unchanged: 0/0
 15612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15614 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15615 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15616 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15617 ;;Total ram usage:        7 bytes
 15618 ;; Hardware stack levels used: 1
 15619 ;; Hardware stack levels required when called: 15
 15620 ;; This function calls:
 15621 ;;		_bitRead
 15622 ;;		_readRegister
 15623 ;; This function is called by:
 15624 ;;		_begin
 15625 ;; This function uses a non-reentrant model
 15626 ;;
 15627                           
 15628     0377                     _getMagneticChannel:	
 15629                           ;psect for function _getMagneticChannel
 15630                           
 15631     0377                     l14080:	
 15632                           ;incstack = 0
 15633 ;; hardware stack exceeded
 15634                           ; Regs used in _getMagneticChannel: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15635                           
 15636     0377                     l14082:
 15637                           
 15638                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1631:     magChannel =
      +                           readRegister(TMAG5273_REG_SENSOR_CONFIG_1);
 15639     0377  3002               	movlw	2
 15640     0378  3190  2058  3183   	fcall	_readRegister
 15641     037B  0140               	movlb	0	; select bank0
 15642     037C  00B0               	movwf	getMagneticChannel@magChannel
 15643     037D                     l14084:
 15644                           
 15645                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1633:     uint8_t magM
      +                          ode4 = bitRead(magChannel, 4);
 15646     037D  0830               	movf	getMagneticChannel@magChannel,w
 15647     037E  00AE               	movwf	??_getMagneticChannel
 15648     037F  01AF               	clrf	??_getMagneticChannel+1
 15649     0380  082E               	movf	??_getMagneticChannel,w
 15650     0381  00F1               	movwf	bitRead@reg
 15651     0382  082F               	movf	??_getMagneticChannel+1,w
 15652     0383  00F2               	movwf	bitRead@reg+1
 15653     0384  3004               	movlw	4
 15654     0385  00F3               	movwf	bitRead@position
 15655     0386  3194  2424  3183   	fcall	_bitRead
 15656     0389  0140               	movlb	0	; select bank0
 15657     038A  00B1               	movwf	getMagneticChannel@magMode4
 15658     038B                     l14086:
 15659                           
 15660                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1634:     uint8_t magM
      +                          ode5 = bitRead(magChannel, 5);
 15661     038B  0830               	movf	getMagneticChannel@magChannel,w
 15662     038C  00AE               	movwf	??_getMagneticChannel
 15663     038D  01AF               	clrf	??_getMagneticChannel+1
 15664     038E  082E               	movf	??_getMagneticChannel,w
 15665     038F  00F1               	movwf	bitRead@reg
 15666     0390  082F               	movf	??_getMagneticChannel+1,w
 15667     0391  00F2               	movwf	bitRead@reg+1
 15668     0392  3005               	movlw	5
 15669     0393  00F3               	movwf	bitRead@position
 15670     0394  3194  2424  3183   	fcall	_bitRead
 15671     0397  0140               	movlb	0	; select bank0
 15672     0398  00B2               	movwf	getMagneticChannel@magMode5
 15673     0399                     l14088:
 15674                           
 15675                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1635:     uint8_t magM
      +                          ode6 = bitRead(magChannel, 6);
 15676     0399  0830               	movf	getMagneticChannel@magChannel,w
 15677     039A  00AE               	movwf	??_getMagneticChannel
 15678     039B  01AF               	clrf	??_getMagneticChannel+1
 15679     039C  082E               	movf	??_getMagneticChannel,w
 15680     039D  00F1               	movwf	bitRead@reg
 15681     039E  082F               	movf	??_getMagneticChannel+1,w
 15682     039F  00F2               	movwf	bitRead@reg+1
 15683     03A0  3006               	movlw	6
 15684     03A1  00F3               	movwf	bitRead@position
 15685     03A2  3194  2424  3183   	fcall	_bitRead
 15686     03A5  0140               	movlb	0	; select bank0
 15687     03A6  00B3               	movwf	getMagneticChannel@magMode6
 15688     03A7                     l14090:
 15689                           
 15690                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1636:     uint8_t magM
      +                          ode7 = bitRead(magChannel, 7);
 15691     03A7  0830               	movf	getMagneticChannel@magChannel,w
 15692     03A8  00AE               	movwf	??_getMagneticChannel
 15693     03A9  01AF               	clrf	??_getMagneticChannel+1
 15694     03AA  082E               	movf	??_getMagneticChannel,w
 15695     03AB  00F1               	movwf	bitRead@reg
 15696     03AC  082F               	movf	??_getMagneticChannel+1,w
 15697     03AD  00F2               	movwf	bitRead@reg+1
 15698     03AE  3007               	movlw	7
 15699     03AF  00F3               	movwf	bitRead@position
 15700     03B0  3194  2424  3183   	fcall	_bitRead
 15701     03B3  0140               	movlb	0	; select bank0
 15702     03B4  00B4               	movwf	getMagneticChannel@magMode7
 15703     03B5                     l14092:
 15704                           
 15705                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1638:     if ((magMode
      +                          4 == 0) && (magMode5 == 0) && (magMode6 == 0) && (magMode7 == 0))
 15706     03B5  0831               	movf	getMagneticChannel@magMode4,w
 15707     03B6  1D03               	btfss	3,2
 15708     03B7  2BB9               	goto	u10871
 15709     03B8  2BBA               	goto	u10870
 15710     03B9                     u10871:
 15711     03B9  2BCB               	goto	l14106
 15712     03BA                     u10870:
 15713     03BA                     l14094:
 15714     03BA  0832               	movf	getMagneticChannel@magMode5,w
 15715     03BB  1D03               	btfss	3,2
 15716     03BC  2BBE               	goto	u10881
 15717     03BD  2BBF               	goto	u10880
 15718     03BE                     u10881:
 15719     03BE  2BCB               	goto	l14106
 15720     03BF                     u10880:
 15721     03BF                     l14096:
 15722     03BF  0833               	movf	getMagneticChannel@magMode6,w
 15723     03C0  1D03               	btfss	3,2
 15724     03C1  2BC3               	goto	u10891
 15725     03C2  2BC4               	goto	u10890
 15726     03C3                     u10891:
 15727     03C3  2BCB               	goto	l14106
 15728     03C4                     u10890:
 15729     03C4                     l14098:
 15730     03C4  0834               	movf	getMagneticChannel@magMode7,w
 15731     03C5  1D03               	btfss	3,2
 15732     03C6  2BC8               	goto	u10901
 15733     03C7  2BC9               	goto	u10900
 15734     03C8                     u10901:
 15735     03C8  2BCB               	goto	l14106
 15736     03C9                     u10900:
 15737     03C9                     l14100:
 15738                           
 15739                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1639:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1640:         return 0;
 15740     03C9  3000               	movlw	0
 15741     03CA  2CBC               	goto	l2462
 15742     03CB                     l14106:
 15743     03CB  0331               	decf	getMagneticChannel@magMode4,w
 15744     03CC  1D03               	btfss	3,2
 15745     03CD  2BCF               	goto	u10911
 15746     03CE  2BD0               	goto	u10910
 15747     03CF                     u10911:
 15748     03CF  2BE1               	goto	l14120
 15749     03D0                     u10910:
 15750     03D0                     l14108:
 15751     03D0  0832               	movf	getMagneticChannel@magMode5,w
 15752     03D1  1D03               	btfss	3,2
 15753     03D2  2BD4               	goto	u10921
 15754     03D3  2BD5               	goto	u10920
 15755     03D4                     u10921:
 15756     03D4  2BE1               	goto	l14120
 15757     03D5                     u10920:
 15758     03D5                     l14110:
 15759     03D5  0833               	movf	getMagneticChannel@magMode6,w
 15760     03D6  1D03               	btfss	3,2
 15761     03D7  2BD9               	goto	u10931
 15762     03D8  2BDA               	goto	u10930
 15763     03D9                     u10931:
 15764     03D9  2BE1               	goto	l14120
 15765     03DA                     u10930:
 15766     03DA                     l14112:
 15767     03DA  0834               	movf	getMagneticChannel@magMode7,w
 15768     03DB  1D03               	btfss	3,2
 15769     03DC  2BDE               	goto	u10941
 15770     03DD  2BDF               	goto	u10940
 15771     03DE                     u10941:
 15772     03DE  2BE1               	goto	l14120
 15773     03DF                     u10940:
 15774     03DF                     l14114:
 15775                           
 15776                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1642:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1643:         return 1;
 15777     03DF  3001               	movlw	1
 15778     03E0  2CBC               	goto	l2462
 15779     03E1                     l14120:
 15780     03E1  0831               	movf	getMagneticChannel@magMode4,w
 15781     03E2  1D03               	btfss	3,2
 15782     03E3  2BE5               	goto	u10951
 15783     03E4  2BE6               	goto	u10950
 15784     03E5                     u10951:
 15785     03E5  2BF7               	goto	l14134
 15786     03E6                     u10950:
 15787     03E6                     l14122:
 15788     03E6  0332               	decf	getMagneticChannel@magMode5,w
 15789     03E7  1D03               	btfss	3,2
 15790     03E8  2BEA               	goto	u10961
 15791     03E9  2BEB               	goto	u10960
 15792     03EA                     u10961:
 15793     03EA  2BF7               	goto	l14134
 15794     03EB                     u10960:
 15795     03EB                     l14124:
 15796     03EB  0833               	movf	getMagneticChannel@magMode6,w
 15797     03EC  1D03               	btfss	3,2
 15798     03ED  2BEF               	goto	u10971
 15799     03EE  2BF0               	goto	u10970
 15800     03EF                     u10971:
 15801     03EF  2BF7               	goto	l14134
 15802     03F0                     u10970:
 15803     03F0                     l14126:
 15804     03F0  0834               	movf	getMagneticChannel@magMode7,w
 15805     03F1  1D03               	btfss	3,2
 15806     03F2  2BF4               	goto	u10981
 15807     03F3  2BF5               	goto	u10980
 15808     03F4                     u10981:
 15809     03F4  2BF7               	goto	l14134
 15810     03F5                     u10980:
 15811     03F5                     l14128:
 15812                           
 15813                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1645:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1646:         return 2;
 15814     03F5  3002               	movlw	2
 15815     03F6  2CBC               	goto	l2462
 15816     03F7                     l14134:
 15817     03F7  0331               	decf	getMagneticChannel@magMode4,w
 15818     03F8  1D03               	btfss	3,2
 15819     03F9  2BFB               	goto	u10991
 15820     03FA  2BFC               	goto	u10990
 15821     03FB                     u10991:
 15822     03FB  2C0D               	goto	l14148
 15823     03FC                     u10990:
 15824     03FC                     l14136:
 15825     03FC  0332               	decf	getMagneticChannel@magMode5,w
 15826     03FD  1D03               	btfss	3,2
 15827     03FE  2C00               	goto	u11001
 15828     03FF  2C01               	goto	u11000
 15829     0400                     u11001:
 15830     0400  2C0D               	goto	l14148
 15831     0401                     u11000:
 15832     0401                     l14138:
 15833     0401  0833               	movf	getMagneticChannel@magMode6,w
 15834     0402  1D03               	btfss	3,2
 15835     0403  2C05               	goto	u11011
 15836     0404  2C06               	goto	u11010
 15837     0405                     u11011:
 15838     0405  2C0D               	goto	l14148
 15839     0406                     u11010:
 15840     0406                     l14140:
 15841     0406  0834               	movf	getMagneticChannel@magMode7,w
 15842     0407  1D03               	btfss	3,2
 15843     0408  2C0A               	goto	u11021
 15844     0409  2C0B               	goto	u11020
 15845     040A                     u11021:
 15846     040A  2C0D               	goto	l14148
 15847     040B                     u11020:
 15848     040B                     l14142:
 15849                           
 15850                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1648:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1649:         return 3;
 15851     040B  3003               	movlw	3
 15852     040C  2CBC               	goto	l2462
 15853     040D                     l14148:
 15854     040D  0831               	movf	getMagneticChannel@magMode4,w
 15855     040E  1D03               	btfss	3,2
 15856     040F  2C11               	goto	u11031
 15857     0410  2C12               	goto	u11030
 15858     0411                     u11031:
 15859     0411  2C23               	goto	l14162
 15860     0412                     u11030:
 15861     0412                     l14150:
 15862     0412  0832               	movf	getMagneticChannel@magMode5,w
 15863     0413  1D03               	btfss	3,2
 15864     0414  2C16               	goto	u11041
 15865     0415  2C17               	goto	u11040
 15866     0416                     u11041:
 15867     0416  2C23               	goto	l14162
 15868     0417                     u11040:
 15869     0417                     l14152:
 15870     0417  0333               	decf	getMagneticChannel@magMode6,w
 15871     0418  1D03               	btfss	3,2
 15872     0419  2C1B               	goto	u11051
 15873     041A  2C1C               	goto	u11050
 15874     041B                     u11051:
 15875     041B  2C23               	goto	l14162
 15876     041C                     u11050:
 15877     041C                     l14154:
 15878     041C  0834               	movf	getMagneticChannel@magMode7,w
 15879     041D  1D03               	btfss	3,2
 15880     041E  2C20               	goto	u11061
 15881     041F  2C21               	goto	u11060
 15882     0420                     u11061:
 15883     0420  2C23               	goto	l14162
 15884     0421                     u11060:
 15885     0421                     l14156:
 15886                           
 15887                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1651:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1652:         return 4;
 15888     0421  3004               	movlw	4
 15889     0422  2CBC               	goto	l2462
 15890     0423                     l14162:
 15891     0423  0331               	decf	getMagneticChannel@magMode4,w
 15892     0424  1D03               	btfss	3,2
 15893     0425  2C27               	goto	u11071
 15894     0426  2C28               	goto	u11070
 15895     0427                     u11071:
 15896     0427  2C39               	goto	l14176
 15897     0428                     u11070:
 15898     0428                     l14164:
 15899     0428  0832               	movf	getMagneticChannel@magMode5,w
 15900     0429  1D03               	btfss	3,2
 15901     042A  2C2C               	goto	u11081
 15902     042B  2C2D               	goto	u11080
 15903     042C                     u11081:
 15904     042C  2C39               	goto	l14176
 15905     042D                     u11080:
 15906     042D                     l14166:
 15907     042D  0333               	decf	getMagneticChannel@magMode6,w
 15908     042E  1D03               	btfss	3,2
 15909     042F  2C31               	goto	u11091
 15910     0430  2C32               	goto	u11090
 15911     0431                     u11091:
 15912     0431  2C39               	goto	l14176
 15913     0432                     u11090:
 15914     0432                     l14168:
 15915     0432  0834               	movf	getMagneticChannel@magMode7,w
 15916     0433  1D03               	btfss	3,2
 15917     0434  2C36               	goto	u11101
 15918     0435  2C37               	goto	u11100
 15919     0436                     u11101:
 15920     0436  2C39               	goto	l14176
 15921     0437                     u11100:
 15922     0437                     l14170:
 15923                           
 15924                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1654:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1655:         return 5;
 15925     0437  3005               	movlw	5
 15926     0438  2CBC               	goto	l2462
 15927     0439                     l14176:
 15928     0439  0831               	movf	getMagneticChannel@magMode4,w
 15929     043A  1D03               	btfss	3,2
 15930     043B  2C3D               	goto	u11111
 15931     043C  2C3E               	goto	u11110
 15932     043D                     u11111:
 15933     043D  2C4F               	goto	l14190
 15934     043E                     u11110:
 15935     043E                     l14178:
 15936     043E  0332               	decf	getMagneticChannel@magMode5,w
 15937     043F  1D03               	btfss	3,2
 15938     0440  2C42               	goto	u11121
 15939     0441  2C43               	goto	u11120
 15940     0442                     u11121:
 15941     0442  2C4F               	goto	l14190
 15942     0443                     u11120:
 15943     0443                     l14180:
 15944     0443  0333               	decf	getMagneticChannel@magMode6,w
 15945     0444  1D03               	btfss	3,2
 15946     0445  2C47               	goto	u11131
 15947     0446  2C48               	goto	u11130
 15948     0447                     u11131:
 15949     0447  2C4F               	goto	l14190
 15950     0448                     u11130:
 15951     0448                     l14182:
 15952     0448  0834               	movf	getMagneticChannel@magMode7,w
 15953     0449  1D03               	btfss	3,2
 15954     044A  2C4C               	goto	u11141
 15955     044B  2C4D               	goto	u11140
 15956     044C                     u11141:
 15957     044C  2C4F               	goto	l14190
 15958     044D                     u11140:
 15959     044D                     l14184:
 15960                           
 15961                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1657:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1658:         return 6;
 15962     044D  3006               	movlw	6
 15963     044E  2CBC               	goto	l2462
 15964     044F                     l14190:
 15965     044F  0331               	decf	getMagneticChannel@magMode4,w
 15966     0450  1D03               	btfss	3,2
 15967     0451  2C53               	goto	u11151
 15968     0452  2C54               	goto	u11150
 15969     0453                     u11151:
 15970     0453  2C65               	goto	l14204
 15971     0454                     u11150:
 15972     0454                     l14192:
 15973     0454  0332               	decf	getMagneticChannel@magMode5,w
 15974     0455  1D03               	btfss	3,2
 15975     0456  2C58               	goto	u11161
 15976     0457  2C59               	goto	u11160
 15977     0458                     u11161:
 15978     0458  2C65               	goto	l14204
 15979     0459                     u11160:
 15980     0459                     l14194:
 15981     0459  0333               	decf	getMagneticChannel@magMode6,w
 15982     045A  1D03               	btfss	3,2
 15983     045B  2C5D               	goto	u11171
 15984     045C  2C5E               	goto	u11170
 15985     045D                     u11171:
 15986     045D  2C65               	goto	l14204
 15987     045E                     u11170:
 15988     045E                     l14196:
 15989     045E  0834               	movf	getMagneticChannel@magMode7,w
 15990     045F  1D03               	btfss	3,2
 15991     0460  2C62               	goto	u11181
 15992     0461  2C63               	goto	u11180
 15993     0462                     u11181:
 15994     0462  2C65               	goto	l14204
 15995     0463                     u11180:
 15996     0463                     l14198:
 15997                           
 15998                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1660:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1661:         return 7;
 15999     0463  3007               	movlw	7
 16000     0464  2CBC               	goto	l2462
 16001     0465                     l14204:
 16002     0465  0831               	movf	getMagneticChannel@magMode4,w
 16003     0466  1D03               	btfss	3,2
 16004     0467  2C69               	goto	u11191
 16005     0468  2C6A               	goto	u11190
 16006     0469                     u11191:
 16007     0469  2C7B               	goto	l14218
 16008     046A                     u11190:
 16009     046A                     l14206:
 16010     046A  0832               	movf	getMagneticChannel@magMode5,w
 16011     046B  1D03               	btfss	3,2
 16012     046C  2C6E               	goto	u11201
 16013     046D  2C6F               	goto	u11200
 16014     046E                     u11201:
 16015     046E  2C7B               	goto	l14218
 16016     046F                     u11200:
 16017     046F                     l14208:
 16018     046F  0833               	movf	getMagneticChannel@magMode6,w
 16019     0470  1D03               	btfss	3,2
 16020     0471  2C73               	goto	u11211
 16021     0472  2C74               	goto	u11210
 16022     0473                     u11211:
 16023     0473  2C7B               	goto	l14218
 16024     0474                     u11210:
 16025     0474                     l14210:
 16026     0474  0334               	decf	getMagneticChannel@magMode7,w
 16027     0475  1D03               	btfss	3,2
 16028     0476  2C78               	goto	u11221
 16029     0477  2C79               	goto	u11220
 16030     0478                     u11221:
 16031     0478  2C7B               	goto	l14218
 16032     0479                     u11220:
 16033     0479                     l14212:
 16034                           
 16035                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1663:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1664:         return 8;
 16036     0479  3008               	movlw	8
 16037     047A  2CBC               	goto	l2462
 16038     047B                     l14218:
 16039     047B  0331               	decf	getMagneticChannel@magMode4,w
 16040     047C  1D03               	btfss	3,2
 16041     047D  2C7F               	goto	u11231
 16042     047E  2C80               	goto	u11230
 16043     047F                     u11231:
 16044     047F  2C91               	goto	l14232
 16045     0480                     u11230:
 16046     0480                     l14220:
 16047     0480  0832               	movf	getMagneticChannel@magMode5,w
 16048     0481  1D03               	btfss	3,2
 16049     0482  2C84               	goto	u11241
 16050     0483  2C85               	goto	u11240
 16051     0484                     u11241:
 16052     0484  2C91               	goto	l14232
 16053     0485                     u11240:
 16054     0485                     l14222:
 16055     0485  0833               	movf	getMagneticChannel@magMode6,w
 16056     0486  1D03               	btfss	3,2
 16057     0487  2C89               	goto	u11251
 16058     0488  2C8A               	goto	u11250
 16059     0489                     u11251:
 16060     0489  2C91               	goto	l14232
 16061     048A                     u11250:
 16062     048A                     l14224:
 16063     048A  0334               	decf	getMagneticChannel@magMode7,w
 16064     048B  1D03               	btfss	3,2
 16065     048C  2C8E               	goto	u11261
 16066     048D  2C8F               	goto	u11260
 16067     048E                     u11261:
 16068     048E  2C91               	goto	l14232
 16069     048F                     u11260:
 16070     048F                     l14226:
 16071                           
 16072                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1666:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1667:         return 9;
 16073     048F  3009               	movlw	9
 16074     0490  2CBC               	goto	l2462
 16075     0491                     l14232:
 16076     0491  0831               	movf	getMagneticChannel@magMode4,w
 16077     0492  1D03               	btfss	3,2
 16078     0493  2C95               	goto	u11271
 16079     0494  2C96               	goto	u11270
 16080     0495                     u11271:
 16081     0495  2CA7               	goto	l14246
 16082     0496                     u11270:
 16083     0496                     l14234:
 16084     0496  0332               	decf	getMagneticChannel@magMode5,w
 16085     0497  1D03               	btfss	3,2
 16086     0498  2C9A               	goto	u11281
 16087     0499  2C9B               	goto	u11280
 16088     049A                     u11281:
 16089     049A  2CA7               	goto	l14246
 16090     049B                     u11280:
 16091     049B                     l14236:
 16092     049B  0833               	movf	getMagneticChannel@magMode6,w
 16093     049C  1D03               	btfss	3,2
 16094     049D  2C9F               	goto	u11291
 16095     049E  2CA0               	goto	u11290
 16096     049F                     u11291:
 16097     049F  2CA7               	goto	l14246
 16098     04A0                     u11290:
 16099     04A0                     l14238:
 16100     04A0  0334               	decf	getMagneticChannel@magMode7,w
 16101     04A1  1D03               	btfss	3,2
 16102     04A2  2CA4               	goto	u11301
 16103     04A3  2CA5               	goto	u11300
 16104     04A4                     u11301:
 16105     04A4  2CA7               	goto	l14246
 16106     04A5                     u11300:
 16107     04A5                     l14240:
 16108                           
 16109                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1669:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1670:         return 10;
 16110     04A5  300A               	movlw	10
 16111     04A6  2CBC               	goto	l2462
 16112     04A7                     l14246:
 16113     04A7  0331               	decf	getMagneticChannel@magMode4,w
 16114     04A8  1D03               	btfss	3,2
 16115     04A9  2CAB               	goto	u11311
 16116     04AA  2CAC               	goto	u11310
 16117     04AB                     u11311:
 16118     04AB  2BC9               	goto	l14100
 16119     04AC                     u11310:
 16120     04AC                     l14248:
 16121     04AC  0332               	decf	getMagneticChannel@magMode5,w
 16122     04AD  1D03               	btfss	3,2
 16123     04AE  2CB0               	goto	u11321
 16124     04AF  2CB1               	goto	u11320
 16125     04B0                     u11321:
 16126     04B0  2BC9               	goto	l14100
 16127     04B1                     u11320:
 16128     04B1                     l14250:
 16129     04B1  0833               	movf	getMagneticChannel@magMode6,w
 16130     04B2  1D03               	btfss	3,2
 16131     04B3  2CB5               	goto	u11331
 16132     04B4  2CB6               	goto	u11330
 16133     04B5                     u11331:
 16134     04B5  2BC9               	goto	l14100
 16135     04B6                     u11330:
 16136     04B6                     l14252:
 16137     04B6  0334               	decf	getMagneticChannel@magMode7,w
 16138     04B7  1D03               	btfss	3,2
 16139     04B8  2CBA               	goto	u11341
 16140     04B9  2CBB               	goto	u11340
 16141     04BA                     u11341:
 16142     04BA  2BC9               	goto	l14100
 16143     04BB                     u11340:
 16144     04BB                     l14254:
 16145                           
 16146                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1672:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1673:         return 11;
 16147     04BB  300B               	movlw	11
 16148     04BC                     l2462:
 16149     04BC  0008               	return
 16150     04BD                     __end_of_getMagneticChannel:
 16151                           
 16152                           	psect	text18
 16153     11EE                     __ptext18:	
 16154 ;; *************** function _getLowPower *****************
 16155 ;; Defined at:
 16156 ;;		line 1534 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 16157 ;; Parameters:    Size  Location     Type
 16158 ;;		None
 16159 ;; Auto vars:     Size  Location     Type
 16160 ;;  lowPowerMode    1   17[BANK0 ] unsigned char 
 16161 ;;  lowPowerMode    1   16[BANK0 ] unsigned char 
 16162 ;; Return value:  Size  Location     Type
 16163 ;;                  1    wreg      unsigned char 
 16164 ;; Registers used:
 16165 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16166 ;; Tracked objects:
 16167 ;;		On entry : 0/0
 16168 ;;		On exit  : 0/0
 16169 ;;		Unchanged: 0/0
 16170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16172 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16173 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16174 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16175 ;;Total ram usage:        4 bytes
 16176 ;; Hardware stack levels used: 1
 16177 ;; Hardware stack levels required when called: 15
 16178 ;; This function calls:
 16179 ;;		_bitRead
 16180 ;;		_readRegister
 16181 ;; This function is called by:
 16182 ;;		_begin
 16183 ;; This function uses a non-reentrant model
 16184 ;;
 16185                           
 16186     11EE                     _getLowPower:	
 16187                           ;psect for function _getLowPower
 16188                           
 16189     11EE                     l14020:	
 16190                           ;incstack = 0
 16191 ;; hardware stack exceeded
 16192                           ; Regs used in _getLowPower: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16193                           
 16194     11EE                     l14022:
 16195                           
 16196                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1536:     lowPowerMode
      +                           = readRegister(TMAG5273_REG_DEVICE_CONFIG_2);
 16197     11EE  3001               	movlw	1
 16198     11EF  3190  2058  3191   	fcall	_readRegister
 16199     11F2  0140               	movlb	0	; select bank0
 16200     11F3  00B1               	movwf	getLowPower@lowPowerMode
 16201     11F4                     l14024:
 16202                           
 16203                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1538:     uint8_t lowP
      +                          owerModeBit = bitRead(lowPowerMode, 4);
 16204     11F4  0831               	movf	getLowPower@lowPowerMode,w
 16205     11F5  00AE               	movwf	??_getLowPower
 16206     11F6  01AF               	clrf	??_getLowPower+1
 16207     11F7  082E               	movf	??_getLowPower,w
 16208     11F8  00F1               	movwf	bitRead@reg
 16209     11F9  082F               	movf	??_getLowPower+1,w
 16210     11FA  00F2               	movwf	bitRead@reg+1
 16211     11FB  3004               	movlw	4
 16212     11FC  00F3               	movwf	bitRead@position
 16213     11FD  3194  2424  3191   	fcall	_bitRead
 16214     1200  0140               	movlb	0	; select bank0
 16215     1201  00B0               	movwf	getLowPower@lowPowerModeBit
 16216     1202                     l14026:
 16217                           
 16218                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1540:     return lowPo
      +                          werModeBit;
 16219     1202  0830               	movf	getLowPower@lowPowerModeBit,w
 16220     1203                     l2442:
 16221     1203  0008               	return
 16222     1204                     __end_of_getLowPower:
 16223                           
 16224                           	psect	text19
 16225     0D23                     __ptext19:	
 16226 ;; *************** function _getAngleEn *****************
 16227 ;; Defined at:
 16228 ;;		line 1890 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 16229 ;; Parameters:    Size  Location     Type
 16230 ;;		None
 16231 ;; Auto vars:     Size  Location     Type
 16232 ;;  angleDir3       1   18[BANK0 ] unsigned char 
 16233 ;;  angleDir2       1   17[BANK0 ] unsigned char 
 16234 ;;  angleReg        1   16[BANK0 ] unsigned char 
 16235 ;; Return value:  Size  Location     Type
 16236 ;;                  1    wreg      unsigned char 
 16237 ;; Registers used:
 16238 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16239 ;; Tracked objects:
 16240 ;;		On entry : 0/0
 16241 ;;		On exit  : 0/0
 16242 ;;		Unchanged: 0/0
 16243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16245 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16246 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16247 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16248 ;;Total ram usage:        5 bytes
 16249 ;; Hardware stack levels used: 1
 16250 ;; Hardware stack levels required when called: 15
 16251 ;; This function calls:
 16252 ;;		_bitRead
 16253 ;;		_readRegister
 16254 ;; This function is called by:
 16255 ;;		_begin
 16256 ;;		_setMagneticOffset2
 16257 ;;		_getMagneticOffset2
 16258 ;; This function uses a non-reentrant model
 16259 ;;
 16260                           
 16261     0D23                     _getAngleEn:	
 16262                           ;psect for function _getAngleEn
 16263                           
 16264     0D23                     l14274:	
 16265                           ;incstack = 0
 16266 ;; hardware stack exceeded
 16267                           ; Regs used in _getAngleEn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16268                           
 16269     0D23                     l14276:
 16270                           
 16271                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1892:     angleReg = r
      +                          eadRegister(TMAG5273_REG_SENSOR_CONFIG_2);
 16272     0D23  3003               	movlw	3
 16273     0D24  3190  2058  318D   	fcall	_readRegister
 16274     0D27  0140               	movlb	0	; select bank0
 16275     0D28  00B0               	movwf	getAngleEn@angleReg
 16276     0D29                     l14278:
 16277                           
 16278                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1894:     uint8_t angl
      +                          eDir2 = bitRead(angleReg, 2);
 16279     0D29  0830               	movf	getAngleEn@angleReg,w
 16280     0D2A  00AE               	movwf	??_getAngleEn
 16281     0D2B  01AF               	clrf	??_getAngleEn+1
 16282     0D2C  082E               	movf	??_getAngleEn,w
 16283     0D2D  00F1               	movwf	bitRead@reg
 16284     0D2E  082F               	movf	??_getAngleEn+1,w
 16285     0D2F  00F2               	movwf	bitRead@reg+1
 16286     0D30  3002               	movlw	2
 16287     0D31  00F3               	movwf	bitRead@position
 16288     0D32  3194  2424  318D   	fcall	_bitRead
 16289     0D35  0140               	movlb	0	; select bank0
 16290     0D36  00B1               	movwf	getAngleEn@angleDir2
 16291     0D37                     l14280:
 16292                           
 16293                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1895:     uint8_t angl
      +                          eDir3 = bitRead(angleReg, 3);
 16294     0D37  0830               	movf	getAngleEn@angleReg,w
 16295     0D38  00AE               	movwf	??_getAngleEn
 16296     0D39  01AF               	clrf	??_getAngleEn+1
 16297     0D3A  082E               	movf	??_getAngleEn,w
 16298     0D3B  00F1               	movwf	bitRead@reg
 16299     0D3C  082F               	movf	??_getAngleEn+1,w
 16300     0D3D  00F2               	movwf	bitRead@reg+1
 16301     0D3E  3003               	movlw	3
 16302     0D3F  00F3               	movwf	bitRead@position
 16303     0D40  3194  2424  318D   	fcall	_bitRead
 16304     0D43  0140               	movlb	0	; select bank0
 16305     0D44  00B2               	movwf	getAngleEn@angleDir3
 16306     0D45                     l14282:
 16307                           
 16308                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1897:     if ((angleDi
      +                          r2 == 0) && (angleDir3 == 0))
 16309     0D45  0831               	movf	getAngleEn@angleDir2,w
 16310     0D46  1D03               	btfss	3,2
 16311     0D47  2D49               	goto	u11351
 16312     0D48  2D4A               	goto	u11350
 16313     0D49                     u11351:
 16314     0D49  2D51               	goto	l14292
 16315     0D4A                     u11350:
 16316     0D4A                     l14284:
 16317     0D4A  0832               	movf	getAngleEn@angleDir3,w
 16318     0D4B  1D03               	btfss	3,2
 16319     0D4C  2D4E               	goto	u11361
 16320     0D4D  2D4F               	goto	u11360
 16321     0D4E                     u11361:
 16322     0D4E  2D51               	goto	l14292
 16323     0D4F                     u11360:
 16324     0D4F                     l14286:
 16325                           
 16326                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1898:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1900:         return 0;
 16327     0D4F  3000               	movlw	0
 16328     0D50  2D76               	goto	l2547
 16329     0D51                     l14292:
 16330     0D51  0331               	decf	getAngleEn@angleDir2,w
 16331     0D52  1D03               	btfss	3,2
 16332     0D53  2D55               	goto	u11371
 16333     0D54  2D56               	goto	u11370
 16334     0D55                     u11371:
 16335     0D55  2D5D               	goto	l14302
 16336     0D56                     u11370:
 16337     0D56                     l14294:
 16338     0D56  0832               	movf	getAngleEn@angleDir3,w
 16339     0D57  1D03               	btfss	3,2
 16340     0D58  2D5A               	goto	u11381
 16341     0D59  2D5B               	goto	u11380
 16342     0D5A                     u11381:
 16343     0D5A  2D5D               	goto	l14302
 16344     0D5B                     u11380:
 16345     0D5B                     l14296:
 16346                           
 16347                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1902:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1904:         return 1;
 16348     0D5B  3001               	movlw	1
 16349     0D5C  2D76               	goto	l2547
 16350     0D5D                     l14302:
 16351     0D5D  0831               	movf	getAngleEn@angleDir2,w
 16352     0D5E  1D03               	btfss	3,2
 16353     0D5F  2D61               	goto	u11391
 16354     0D60  2D62               	goto	u11390
 16355     0D61                     u11391:
 16356     0D61  2D69               	goto	l14312
 16357     0D62                     u11390:
 16358     0D62                     l14304:
 16359     0D62  0332               	decf	getAngleEn@angleDir3,w
 16360     0D63  1D03               	btfss	3,2
 16361     0D64  2D66               	goto	u11401
 16362     0D65  2D67               	goto	u11400
 16363     0D66                     u11401:
 16364     0D66  2D69               	goto	l14312
 16365     0D67                     u11400:
 16366     0D67                     l14306:
 16367                           
 16368                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1906:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1908:         return 2;
 16369     0D67  3002               	movlw	2
 16370     0D68  2D76               	goto	l2547
 16371     0D69                     l14312:
 16372     0D69  0331               	decf	getAngleEn@angleDir2,w
 16373     0D6A  1D03               	btfss	3,2
 16374     0D6B  2D6D               	goto	u11411
 16375     0D6C  2D6E               	goto	u11410
 16376     0D6D                     u11411:
 16377     0D6D  2D75               	goto	l2550
 16378     0D6E                     u11410:
 16379     0D6E                     l14314:
 16380     0D6E  0332               	decf	getAngleEn@angleDir3,w
 16381     0D6F  1D03               	btfss	3,2
 16382     0D70  2D72               	goto	u11421
 16383     0D71  2D73               	goto	u11420
 16384     0D72                     u11421:
 16385     0D72  2D75               	goto	l2550
 16386     0D73                     u11420:
 16387     0D73                     l14316:
 16388                           
 16389                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1910:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1912:         return 3;
 16390     0D73  3003               	movlw	3
 16391     0D74  2D76               	goto	l2547
 16392     0D75                     l2550:
 16393     0D75  2D4F               	goto	l14286
 16394     0D76                     l2547:
 16395     0D76  0008               	return
 16396     0D77                     __end_of_getAngleEn:
 16397                           
 16398                           	psect	text20
 16399     1424                     __ptext20:	
 16400 ;; *************** function _bitRead *****************
 16401 ;; Defined at:
 16402 ;;		line 2510 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 16403 ;; Parameters:    Size  Location     Type
 16404 ;;  reg             2    1[COMMON] PTR unsigned short 
 16405 ;;		 -> begin@testReg(2), RAM(8192), 
 16406 ;;  position        1    3[COMMON] unsigned char 
 16407 ;; Auto vars:     Size  Location     Type
 16408 ;;  mask            2    8[COMMON] unsigned short 
 16409 ;; Return value:  Size  Location     Type
 16410 ;;                  1    wreg      unsigned char 
 16411 ;; Registers used:
 16412 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16413 ;; Tracked objects:
 16414 ;;		On entry : 0/0
 16415 ;;		On exit  : 0/0
 16416 ;;		Unchanged: 0/0
 16417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16418 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16419 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16420 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16421 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16422 ;;Total ram usage:        9 bytes
 16423 ;; Hardware stack levels used: 1
 16424 ;; Hardware stack levels required when called: 4
 16425 ;; This function calls:
 16426 ;;		Nothing
 16427 ;; This function is called by:
 16428 ;;		_begin
 16429 ;;		_getLowPower
 16430 ;;		_getOperatingMode
 16431 ;;		_getMagneticChannel
 16432 ;;		_getAngleEn
 16433 ;;		_getTemperatureEN
 16434 ;;		_getError
 16435 ;;		_getCRCMode
 16436 ;;		_getMagTemp
 16437 ;;		_getConvAvg
 16438 ;;		_getReadMode
 16439 ;;		_getIntThreshold
 16440 ;;		_getGlitchFiler
 16441 ;;		_getTriggerMode
 16442 ;;		_getSleeptime
 16443 ;;		_getMagDir
 16444 ;;		_getMagnitudeChannelSelect
 16445 ;;		_getXYAxisRange
 16446 ;;		_getZAxisRange
 16447 ;;		_getInterruptResult
 16448 ;;		_getThresholdEn
 16449 ;;		_getIntPinState
 16450 ;;		_getInterruptMode
 16451 ;;		_getMaskInt
 16452 ;;		_getPOR
 16453 ;;		_getDiagStatus
 16454 ;;		_getResultStatus
 16455 ;;		_getDeviceID
 16456 ;;		_getInterruptPinStatus
 16457 ;; This function uses a non-reentrant model
 16458 ;;
 16459                           
 16460     1424                     _bitRead:	
 16461                           ;psect for function _bitRead
 16462                           
 16463     1424                     l13404:	
 16464                           ;incstack = 0
 16465                           ; Regs used in _bitRead: [wreg+fsr1l+fsr1h+status,2+status,0]
 16466                           
 16467                           
 16468                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2511:     uint16_t mas
      +                          k = (1 << position) & *reg;
 16469     1424  0871               	movf	bitRead@reg,w
 16470     1425  0086               	movwf	6
 16471     1426  0872               	movf	bitRead@reg+1,w
 16472     1427  0087               	movwf	7
 16473     1428  3F40               	moviw [0]fsr1
 16474     1429  00F4               	movwf	??_bitRead
 16475     142A  3F41               	moviw [1]fsr1
 16476     142B  00F5               	movwf	??_bitRead+1
 16477     142C  3001               	movlw	1
 16478     142D  00F6               	movwf	??_bitRead+2
 16479     142E  3000               	movlw	0
 16480     142F  00F7               	movwf	??_bitRead+3
 16481     1430  0A73               	incf	bitRead@position,w
 16482     1431  2C34               	goto	u10254
 16483     1432                     u10255:
 16484     1432  35F6               	lslf	??_bitRead+2,f
 16485     1433  0DF7               	rlf	??_bitRead+3,f
 16486     1434                     u10254:
 16487     1434  0B89               	decfsz	9,f
 16488     1435  2C32               	goto	u10255
 16489     1436  0874               	movf	??_bitRead,w
 16490     1437  0576               	andwf	??_bitRead+2,w
 16491     1438  00F8               	movwf	bitRead@mask
 16492     1439  0875               	movf	??_bitRead+1,w
 16493     143A  0577               	andwf	??_bitRead+3,w
 16494     143B  00F9               	movwf	bitRead@mask+1
 16495     143C                     l13406:
 16496                           
 16497                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2513:     if (mask == 
      +                          0) {
 16498     143C  0878               	movf	bitRead@mask,w
 16499     143D  0479               	iorwf	bitRead@mask+1,w
 16500     143E  1D03               	btfss	3,2
 16501     143F  2C41               	goto	u10261
 16502     1440  2C42               	goto	u10260
 16503     1441                     u10261:
 16504     1441  2C44               	goto	l13414
 16505     1442                     u10260:
 16506     1442                     l13408:
 16507                           
 16508                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2514:         return 0
      +                          ;
 16509     1442  3000               	movlw	0
 16510     1443  2C45               	goto	l2672
 16511     1444                     l13414:
 16512                           
 16513                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2516:         return 1
      +                          ;
 16514     1444  3001               	movlw	1
 16515     1445                     l2672:
 16516     1445  0008               	return
 16517     1446                     __end_of_bitRead:
 16518                           
 16519                           	psect	text21
 16520     1ED9                     __ptext21:	
 16521 ;; *************** function _TMR0_HasOverflowOccured *****************
 16522 ;; Defined at:
 16523 ;;		line 127 in file "mcc_generated_files/tmr0.c"
 16524 ;; Parameters:    Size  Location     Type
 16525 ;;		None
 16526 ;; Auto vars:     Size  Location     Type
 16527 ;;		None
 16528 ;; Return value:  Size  Location     Type
 16529 ;;                  1    wreg      _Bool 
 16530 ;; Registers used:
 16531 ;;		wreg, status,2, status,0
 16532 ;; Tracked objects:
 16533 ;;		On entry : 0/0
 16534 ;;		On exit  : 0/0
 16535 ;;		Unchanged: 0/0
 16536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16541 ;;Total ram usage:        0 bytes
 16542 ;; Hardware stack levels used: 1
 16543 ;; Hardware stack levels required when called: 4
 16544 ;; This function calls:
 16545 ;;		Nothing
 16546 ;; This function is called by:
 16547 ;;		_main
 16548 ;; This function uses a non-reentrant model
 16549 ;;
 16550                           
 16551     1ED9                     _TMR0_HasOverflowOccured:	
 16552                           ;psect for function _TMR0_HasOverflowOccured
 16553                           
 16554     1ED9                     l14542:	
 16555                           ;incstack = 0
 16556                           ; Regs used in _TMR0_HasOverflowOccured: [wreg+status,2+status,0]
 16557                           
 16558                           
 16559                           ;mcc_generated_files/tmr0.c: 130:     return(PIR0bits.TMR0IF);
 16560     1ED9  014E               	movlb	14	; select bank14
 16561     1EDA  0E0C               	swapf	12,w	;volatile
 16562     1EDB  0C89               	rrf	9,f
 16563     1EDC  3901               	andlw	1
 16564     1EDD                     l1492:
 16565     1EDD  0008               	return
 16566     1EDE                     __end_of_TMR0_HasOverflowOccured:
 16567                           
 16568                           	psect	text22
 16569     11D8                     __ptext22:	
 16570 ;; *************** function _SYSTEM_Initialize *****************
 16571 ;; Defined at:
 16572 ;;		line 50 in file "mcc_generated_files/mcc.c"
 16573 ;; Parameters:    Size  Location     Type
 16574 ;;		None
 16575 ;; Auto vars:     Size  Location     Type
 16576 ;;		None
 16577 ;; Return value:  Size  Location     Type
 16578 ;;                  1    wreg      void 
 16579 ;; Registers used:
 16580 ;;		wreg, status,2, status,0, pclath, cstack
 16581 ;; Tracked objects:
 16582 ;;		On entry : 0/0
 16583 ;;		On exit  : 0/0
 16584 ;;		Unchanged: 0/0
 16585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16590 ;;Total ram usage:        0 bytes
 16591 ;; Hardware stack levels used: 1
 16592 ;; Hardware stack levels required when called: 6
 16593 ;; This function calls:
 16594 ;;		_EUSART1_Initialize
 16595 ;;		_EUSART2_Initialize
 16596 ;;		_I2C1_Initialize
 16597 ;;		_OSCILLATOR_Initialize
 16598 ;;		_PIN_MANAGER_Initialize
 16599 ;;		_PMD_Initialize
 16600 ;;		_TMR0_Initialize
 16601 ;; This function is called by:
 16602 ;;		_main
 16603 ;; This function uses a non-reentrant model
 16604 ;;
 16605                           
 16606     11D8                     _SYSTEM_Initialize:	
 16607                           ;psect for function _SYSTEM_Initialize
 16608                           
 16609     11D8                     l14528:	
 16610                           ;incstack = 0
 16611                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16612                           
 16613                           
 16614                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 16615     11D8  319F  27BE  3191   	fcall	_PMD_Initialize
 16616     11DB                     l14530:
 16617                           
 16618                           ;mcc_generated_files/mcc.c: 53:     I2C1_Initialize();
 16619     11DB  319F  278D  3191   	fcall	_I2C1_Initialize
 16620     11DE                     l14532:
 16621                           
 16622                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 16623     11DE  318A  22F9  3191   	fcall	_PIN_MANAGER_Initialize
 16624     11E1                     l14534:
 16625                           
 16626                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 16627     11E1  319F  27B4  3191   	fcall	_OSCILLATOR_Initialize
 16628     11E4                     l14536:
 16629                           
 16630                           ;mcc_generated_files/mcc.c: 56:     TMR0_Initialize();
 16631     11E4  3191  2170  3191   	fcall	_TMR0_Initialize
 16632     11E7                     l14538:
 16633                           
 16634                           ;mcc_generated_files/mcc.c: 57:     EUSART1_Initialize();
 16635     11E7  3189  212C  3191   	fcall	_EUSART1_Initialize
 16636     11EA                     l14540:
 16637                           
 16638                           ;mcc_generated_files/mcc.c: 58:     EUSART2_Initialize();
 16639     11EA  3189  216A  3191   	fcall	_EUSART2_Initialize
 16640     11ED                     l1352:
 16641     11ED  0008               	return
 16642     11EE                     __end_of_SYSTEM_Initialize:
 16643                           
 16644                           	psect	text23
 16645     1170                     __ptext23:	
 16646 ;; *************** function _TMR0_Initialize *****************
 16647 ;; Defined at:
 16648 ;;		line 65 in file "mcc_generated_files/tmr0.c"
 16649 ;; Parameters:    Size  Location     Type
 16650 ;;		None
 16651 ;; Auto vars:     Size  Location     Type
 16652 ;;		None
 16653 ;; Return value:  Size  Location     Type
 16654 ;;                  1    wreg      void 
 16655 ;; Registers used:
 16656 ;;		wreg
 16657 ;; Tracked objects:
 16658 ;;		On entry : 0/0
 16659 ;;		On exit  : 0/0
 16660 ;;		Unchanged: 0/0
 16661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16666 ;;Total ram usage:        0 bytes
 16667 ;; Hardware stack levels used: 1
 16668 ;; Hardware stack levels required when called: 4
 16669 ;; This function calls:
 16670 ;;		Nothing
 16671 ;; This function is called by:
 16672 ;;		_SYSTEM_Initialize
 16673 ;; This function uses a non-reentrant model
 16674 ;;
 16675                           
 16676     1170                     _TMR0_Initialize:	
 16677                           ;psect for function _TMR0_Initialize
 16678                           
 16679     1170                     l13832:	
 16680                           ;incstack = 0
 16681                           ; Regs used in _TMR0_Initialize: [wreg]
 16682                           
 16683                           
 16684                           ;mcc_generated_files/tmr0.c: 70:     T0CON1 = 0x47;
 16685     1170  3047               	movlw	71
 16686     1171  014B               	movlb	11	; select bank11
 16687     1172  009F               	movwf	31	;volatile
 16688                           
 16689                           ;mcc_generated_files/tmr0.c: 73:     TMR0H = 0x0B;
 16690     1173  300B               	movlw	11
 16691     1174  009D               	movwf	29	;volatile
 16692                           
 16693                           ;mcc_generated_files/tmr0.c: 76:     TMR0L = 0xDC;
 16694     1175  30DC               	movlw	220
 16695     1176  009C               	movwf	28	;volatile
 16696                           
 16697                           ;mcc_generated_files/tmr0.c: 79:     timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
 16698     1177  081D               	movf	29,w	;volatile
 16699     1178  0140               	movlb	0	; select bank0
 16700     1179  00CD               	movwf	_timer0ReloadVal16bit+1	;volatile
 16701     117A  014B               	movlb	11	; select bank11
 16702     117B  081C               	movf	28,w	;volatile
 16703     117C  0140               	movlb	0	; select bank0
 16704     117D  00CC               	movwf	_timer0ReloadVal16bit	;volatile
 16705     117E                     l13834:
 16706                           
 16707                           ;mcc_generated_files/tmr0.c: 82:     PIR0bits.TMR0IF = 0;
 16708     117E  014E               	movlb	14	; select bank14
 16709     117F  128C               	bcf	12,5	;volatile
 16710                           
 16711                           ;mcc_generated_files/tmr0.c: 85:     T0CON0 = 0x90;
 16712     1180  3090               	movlw	144
 16713     1181  014B               	movlb	11	; select bank11
 16714     1182  009E               	movwf	30	;volatile
 16715     1183                     l1474:
 16716     1183  0008               	return
 16717     1184                     __end_of_TMR0_Initialize:
 16718                           
 16719                           	psect	text24
 16720     1FBE                     __ptext24:	
 16721 ;; *************** function _PMD_Initialize *****************
 16722 ;; Defined at:
 16723 ;;		line 77 in file "mcc_generated_files/mcc.c"
 16724 ;; Parameters:    Size  Location     Type
 16725 ;;		None
 16726 ;; Auto vars:     Size  Location     Type
 16727 ;;		None
 16728 ;; Return value:  Size  Location     Type
 16729 ;;                  1    wreg      void 
 16730 ;; Registers used:
 16731 ;;		status,2
 16732 ;; Tracked objects:
 16733 ;;		On entry : 0/0
 16734 ;;		On exit  : 0/0
 16735 ;;		Unchanged: 0/0
 16736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16741 ;;Total ram usage:        0 bytes
 16742 ;; Hardware stack levels used: 1
 16743 ;; Hardware stack levels required when called: 4
 16744 ;; This function calls:
 16745 ;;		Nothing
 16746 ;; This function is called by:
 16747 ;;		_SYSTEM_Initialize
 16748 ;; This function uses a non-reentrant model
 16749 ;;
 16750                           
 16751     1FBE                     _PMD_Initialize:	
 16752                           ;psect for function _PMD_Initialize
 16753                           
 16754     1FBE                     l13746:	
 16755                           ;incstack = 0
 16756                           ; Regs used in _PMD_Initialize: [status,2]
 16757                           
 16758                           
 16759                           ;mcc_generated_files/mcc.c: 80:     PMD0 = 0x00;
 16760     1FBE  014F               	movlb	15	; select bank15
 16761     1FBF  0196               	clrf	22	;volatile
 16762                           
 16763                           ;mcc_generated_files/mcc.c: 82:     PMD1 = 0x00;
 16764     1FC0  0197               	clrf	23	;volatile
 16765                           
 16766                           ;mcc_generated_files/mcc.c: 84:     PMD2 = 0x00;
 16767     1FC1  0198               	clrf	24	;volatile
 16768                           
 16769                           ;mcc_generated_files/mcc.c: 86:     PMD3 = 0x00;
 16770     1FC2  0199               	clrf	25	;volatile
 16771                           
 16772                           ;mcc_generated_files/mcc.c: 88:     PMD4 = 0x00;
 16773     1FC3  019A               	clrf	26	;volatile
 16774                           
 16775                           ;mcc_generated_files/mcc.c: 90:     PMD5 = 0x00;
 16776     1FC4  019B               	clrf	27	;volatile
 16777                           
 16778                           ;mcc_generated_files/mcc.c: 92:     PMD6 = 0x00;
 16779     1FC5  019C               	clrf	28	;volatile
 16780                           
 16781                           ;mcc_generated_files/mcc.c: 94:     PMD7 = 0x00;
 16782     1FC6  019D               	clrf	29	;volatile
 16783     1FC7                     l1358:
 16784     1FC7  0008               	return
 16785     1FC8                     __end_of_PMD_Initialize:
 16786                           
 16787                           	psect	text25
 16788     0AF9                     __ptext25:	
 16789 ;; *************** function _PIN_MANAGER_Initialize *****************
 16790 ;; Defined at:
 16791 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 16792 ;; Parameters:    Size  Location     Type
 16793 ;;		None
 16794 ;; Auto vars:     Size  Location     Type
 16795 ;;		None
 16796 ;; Return value:  Size  Location     Type
 16797 ;;                  1    wreg      void 
 16798 ;; Registers used:
 16799 ;;		wreg, status,2, status,0, pclath, cstack
 16800 ;; Tracked objects:
 16801 ;;		On entry : 0/0
 16802 ;;		On exit  : 0/0
 16803 ;;		Unchanged: 0/0
 16804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16809 ;;Total ram usage:        0 bytes
 16810 ;; Hardware stack levels used: 1
 16811 ;; Hardware stack levels required when called: 5
 16812 ;; This function calls:
 16813 ;;		_IOCAF6_SetInterruptHandler
 16814 ;; This function is called by:
 16815 ;;		_SYSTEM_Initialize
 16816 ;; This function uses a non-reentrant model
 16817 ;;
 16818                           
 16819     0AF9                     _PIN_MANAGER_Initialize:	
 16820                           ;psect for function _PIN_MANAGER_Initialize
 16821                           
 16822     0AF9                     l13756:	
 16823                           ;incstack = 0
 16824                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16825                           
 16826                           
 16827                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x00;
 16828     0AF9  0140               	movlb	0	; select bank0
 16829     0AFA  019C               	clrf	28	;volatile
 16830     0AFB                     l13758:
 16831                           
 16832                           ;mcc_generated_files/pin_manager.c: 63:     LATA = 0x31;
 16833     0AFB  3031               	movlw	49
 16834     0AFC  0098               	movwf	24	;volatile
 16835     0AFD                     l13760:
 16836                           
 16837                           ;mcc_generated_files/pin_manager.c: 64:     LATB = 0x00;
 16838     0AFD  0199               	clrf	25	;volatile
 16839                           
 16840                           ;mcc_generated_files/pin_manager.c: 65:     LATC = 0xC1;
 16841     0AFE  30C1               	movlw	193
 16842     0AFF  009A               	movwf	26	;volatile
 16843                           
 16844                           ;mcc_generated_files/pin_manager.c: 70:     TRISE = 0x08;
 16845     0B00  3008               	movlw	8
 16846     0B01  0096               	movwf	22	;volatile
 16847                           
 16848                           ;mcc_generated_files/pin_manager.c: 71:     TRISA = 0xDE;
 16849     0B02  30DE               	movlw	222
 16850     0B03  0092               	movwf	18	;volatile
 16851                           
 16852                           ;mcc_generated_files/pin_manager.c: 72:     TRISB = 0xEF;
 16853     0B04  30EF               	movlw	239
 16854     0B05  0093               	movwf	19	;volatile
 16855                           
 16856                           ;mcc_generated_files/pin_manager.c: 73:     TRISC = 0x25;
 16857     0B06  3025               	movlw	37
 16858     0B07  0094               	movwf	20	;volatile
 16859     0B08                     l13762:
 16860                           
 16861                           ;mcc_generated_files/pin_manager.c: 78:     ANSELC = 0x00;
 16862     0B08  017E               	movlb	62	; select bank62
 16863     0B09  01CE               	clrf	78	;volatile
 16864     0B0A                     l13764:
 16865                           
 16866                           ;mcc_generated_files/pin_manager.c: 79:     ANSELB = 0xC9;
 16867     0B0A  30C9               	movlw	201
 16868     0B0B  00C3               	movwf	67	;volatile
 16869     0B0C                     l13766:
 16870                           
 16871                           ;mcc_generated_files/pin_manager.c: 80:     ANSELA = 0x0E;
 16872     0B0C  300E               	movlw	14
 16873     0B0D  00B8               	movwf	56	;volatile
 16874     0B0E                     l13768:
 16875                           
 16876                           ;mcc_generated_files/pin_manager.c: 85:     WPUE = 0x00;
 16877     0B0E  01E5               	clrf	101	;volatile
 16878     0B0F                     l13770:
 16879                           
 16880                           ;mcc_generated_files/pin_manager.c: 86:     WPUB = 0x00;
 16881     0B0F  01C4               	clrf	68	;volatile
 16882     0B10                     l13772:
 16883                           
 16884                           ;mcc_generated_files/pin_manager.c: 87:     WPUA = 0x00;
 16885     0B10  01B9               	clrf	57	;volatile
 16886     0B11                     l13774:
 16887                           
 16888                           ;mcc_generated_files/pin_manager.c: 88:     WPUC = 0x00;
 16889     0B11  01CF               	clrf	79	;volatile
 16890     0B12                     l13776:
 16891                           
 16892                           ;mcc_generated_files/pin_manager.c: 93:     ODCONE = 0x00;
 16893     0B12  01E6               	clrf	102	;volatile
 16894     0B13                     l13778:
 16895                           
 16896                           ;mcc_generated_files/pin_manager.c: 94:     ODCONA = 0x00;
 16897     0B13  01BA               	clrf	58	;volatile
 16898     0B14                     l13780:
 16899                           
 16900                           ;mcc_generated_files/pin_manager.c: 95:     ODCONB = 0x00;
 16901     0B14  01C5               	clrf	69	;volatile
 16902     0B15                     l13782:
 16903                           
 16904                           ;mcc_generated_files/pin_manager.c: 96:     ODCONC = 0x00;
 16905     0B15  01D0               	clrf	80	;volatile
 16906     0B16                     l13784:
 16907                           
 16908                           ;mcc_generated_files/pin_manager.c: 101:     SLRCONA = 0xFF;
 16909     0B16  30FF               	movlw	255
 16910     0B17  00BB               	movwf	59	;volatile
 16911     0B18                     l13786:
 16912                           
 16913                           ;mcc_generated_files/pin_manager.c: 102:     SLRCONB = 0xFF;
 16914     0B18  30FF               	movlw	255
 16915     0B19  00C6               	movwf	70	;volatile
 16916     0B1A                     l13788:
 16917                           
 16918                           ;mcc_generated_files/pin_manager.c: 103:     SLRCONC = 0xFF;
 16919     0B1A  30FF               	movlw	255
 16920     0B1B  00D1               	movwf	81	;volatile
 16921     0B1C                     l13790:
 16922                           
 16923                           ;mcc_generated_files/pin_manager.c: 108:     INLVLA = 0x3F;
 16924     0B1C  303F               	movlw	63
 16925     0B1D  00BC               	movwf	60	;volatile
 16926     0B1E                     l13792:
 16927                           
 16928                           ;mcc_generated_files/pin_manager.c: 109:     INLVLB = 0x3F;
 16929     0B1E  303F               	movlw	63
 16930     0B1F  00C7               	movwf	71	;volatile
 16931     0B20                     l13794:
 16932                           
 16933                           ;mcc_generated_files/pin_manager.c: 110:     INLVLC = 0x3F;
 16934     0B20  303F               	movlw	63
 16935     0B21  00D2               	movwf	82	;volatile
 16936     0B22                     l13796:
 16937                           
 16938                           ;mcc_generated_files/pin_manager.c: 117:     IOCAFbits.IOCAF6 = 0;
 16939     0B22  133F               	bcf	63,6	;volatile
 16940     0B23                     l13798:
 16941                           
 16942                           ;mcc_generated_files/pin_manager.c: 119:     IOCANbits.IOCAN6 = 0;
 16943     0B23  133E               	bcf	62,6	;volatile
 16944     0B24                     l13800:
 16945                           
 16946                           ;mcc_generated_files/pin_manager.c: 121:     IOCAPbits.IOCAP6 = 1;
 16947     0B24  173D               	bsf	61,6	;volatile
 16948     0B25                     l13802:
 16949                           
 16950                           ;mcc_generated_files/pin_manager.c: 126:     IOCAF6_SetInterruptHandler(IOCAF6_DefaultIn
      +                          terruptHandler);
 16951     0B25  30FF               	movlw	low _IOCAF6_DefaultInterruptHandler
 16952     0B26  00F1               	movwf	IOCAF6_SetInterruptHandler@InterruptHandler
 16953     0B27  3007               	movlw	high _IOCAF6_DefaultInterruptHandler
 16954     0B28  00F2               	movwf	IOCAF6_SetInterruptHandler@InterruptHandler+1
 16955     0B29  319F  2738  318A   	fcall	_IOCAF6_SetInterruptHandler
 16956     0B2C                     l13804:
 16957                           
 16958                           ;mcc_generated_files/pin_manager.c: 129:     PIE0bits.IOCIE = 1;
 16959     0B2C  014E               	movlb	14	; select bank14
 16960     0B2D  1616               	bsf	22,4	;volatile
 16961     0B2E                     l13806:
 16962                           
 16963                           ;mcc_generated_files/pin_manager.c: 132:     SSP1CLKPPS = 0x09;
 16964     0B2E  3009               	movlw	9
 16965     0B2F  017D               	movlb	61	; select bank61
 16966     0B30  00C5               	movwf	69	;volatile
 16967     0B31                     l13808:
 16968                           
 16969                           ;mcc_generated_files/pin_manager.c: 133:     RB1PPS = 0x13;
 16970     0B31  3013               	movlw	19
 16971     0B32  017E               	movlb	62	; select bank62
 16972     0B33  0099               	movwf	25	;volatile
 16973     0B34                     l13810:
 16974                           
 16975                           ;mcc_generated_files/pin_manager.c: 134:     RB2PPS = 0x14;
 16976     0B34  3014               	movlw	20
 16977     0B35  009A               	movwf	26	;volatile
 16978     0B36                     l13812:
 16979                           
 16980                           ;mcc_generated_files/pin_manager.c: 135:     RC4PPS = 0x25;
 16981     0B36  3025               	movlw	37
 16982     0B37  00A4               	movwf	36	;volatile
 16983     0B38                     l13814:
 16984                           
 16985                           ;mcc_generated_files/pin_manager.c: 136:     RB4PPS = 0x0F;
 16986     0B38  300F               	movlw	15
 16987     0B39  009C               	movwf	28	;volatile
 16988     0B3A                     l13816:
 16989                           
 16990                           ;mcc_generated_files/pin_manager.c: 137:     RX2DTPPS = 0x15;
 16991     0B3A  3015               	movlw	21
 16992     0B3B  017D               	movlb	61	; select bank61
 16993     0B3C  00CD               	movwf	77	;volatile
 16994     0B3D                     l13818:
 16995                           
 16996                           ;mcc_generated_files/pin_manager.c: 138:     SSP1DATPPS = 0x0A;
 16997     0B3D  300A               	movlw	10
 16998     0B3E  00C6               	movwf	70	;volatile
 16999     0B3F                     l13820:
 17000                           
 17001                           ;mcc_generated_files/pin_manager.c: 139:     RX1DTPPS = 0x0D;
 17002     0B3F  300D               	movlw	13
 17003     0B40  00CB               	movwf	75	;volatile
 17004     0B41                     l1443:
 17005     0B41  0008               	return
 17006     0B42                     __end_of_PIN_MANAGER_Initialize:
 17007                           
 17008                           	psect	text26
 17009     1F38                     __ptext26:	
 17010 ;; *************** function _IOCAF6_SetInterruptHandler *****************
 17011 ;; Defined at:
 17012 ;;		line 169 in file "mcc_generated_files/pin_manager.c"
 17013 ;; Parameters:    Size  Location     Type
 17014 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
 17015 ;;		 -> IOCAF6_DefaultInterruptHandler(1), 
 17016 ;; Auto vars:     Size  Location     Type
 17017 ;;		None
 17018 ;; Return value:  Size  Location     Type
 17019 ;;                  1    wreg      void 
 17020 ;; Registers used:
 17021 ;;		wreg
 17022 ;; Tracked objects:
 17023 ;;		On entry : 0/0
 17024 ;;		On exit  : 0/0
 17025 ;;		Unchanged: 0/0
 17026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17027 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17030 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17031 ;;Total ram usage:        2 bytes
 17032 ;; Hardware stack levels used: 1
 17033 ;; Hardware stack levels required when called: 4
 17034 ;; This function calls:
 17035 ;;		Nothing
 17036 ;; This function is called by:
 17037 ;;		_PIN_MANAGER_Initialize
 17038 ;; This function uses a non-reentrant model
 17039 ;;
 17040                           
 17041     1F38                     _IOCAF6_SetInterruptHandler:	
 17042                           ;psect for function _IOCAF6_SetInterruptHandler
 17043                           
 17044     1F38                     l13528:	
 17045                           ;incstack = 0
 17046                           ; Regs used in _IOCAF6_SetInterruptHandler: [wreg]
 17047                           
 17048                           
 17049                           ;mcc_generated_files/pin_manager.c: 170:     IOCAF6_InterruptHandler = InterruptHandler;
 17050     1F38  0872               	movf	IOCAF6_SetInterruptHandler@InterruptHandler+1,w
 17051     1F39  0141               	movlb	1	; select bank1
 17052     1F3A  00EA               	movwf	(_IOCAF6_InterruptHandler+1)^(0+128)
 17053     1F3B  0871               	movf	IOCAF6_SetInterruptHandler@InterruptHandler,w
 17054     1F3C  00E9               	movwf	_IOCAF6_InterruptHandler^(0+128)
 17055     1F3D                     l1454:
 17056     1F3D  0008               	return
 17057     1F3E                     __end_of_IOCAF6_SetInterruptHandler:
 17058                           
 17059                           	psect	text27
 17060     1FB4                     __ptext27:	
 17061 ;; *************** function _OSCILLATOR_Initialize *****************
 17062 ;; Defined at:
 17063 ;;		line 61 in file "mcc_generated_files/mcc.c"
 17064 ;; Parameters:    Size  Location     Type
 17065 ;;		None
 17066 ;; Auto vars:     Size  Location     Type
 17067 ;;		None
 17068 ;; Return value:  Size  Location     Type
 17069 ;;                  1    wreg      void 
 17070 ;; Registers used:
 17071 ;;		wreg, status,2
 17072 ;; Tracked objects:
 17073 ;;		On entry : 0/0
 17074 ;;		On exit  : 0/0
 17075 ;;		Unchanged: 0/0
 17076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17081 ;;Total ram usage:        0 bytes
 17082 ;; Hardware stack levels used: 1
 17083 ;; Hardware stack levels required when called: 4
 17084 ;; This function calls:
 17085 ;;		Nothing
 17086 ;; This function is called by:
 17087 ;;		_SYSTEM_Initialize
 17088 ;; This function uses a non-reentrant model
 17089 ;;
 17090                           
 17091     1FB4                     _OSCILLATOR_Initialize:	
 17092                           ;psect for function _OSCILLATOR_Initialize
 17093                           
 17094     1FB4                     l13822:	
 17095                           ;incstack = 0
 17096                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 17097                           
 17098                           
 17099                           ;mcc_generated_files/mcc.c: 64:     OSCCON1 = 0x60;
 17100     1FB4  3060               	movlw	96
 17101     1FB5  0151               	movlb	17	; select bank17
 17102     1FB6  008D               	movwf	13	;volatile
 17103     1FB7                     l13824:
 17104                           
 17105                           ;mcc_generated_files/mcc.c: 66:     OSCCON3 = 0x00;
 17106     1FB7  018F               	clrf	15	;volatile
 17107     1FB8                     l13826:
 17108                           
 17109                           ;mcc_generated_files/mcc.c: 68:     OSCEN = 0x00;
 17110     1FB8  0191               	clrf	17	;volatile
 17111                           
 17112                           ;mcc_generated_files/mcc.c: 70:     OSCFRQ = 0x06;
 17113     1FB9  3006               	movlw	6
 17114     1FBA  0093               	movwf	19	;volatile
 17115     1FBB                     l13828:
 17116                           
 17117                           ;mcc_generated_files/mcc.c: 72:     OSCSTAT = 0x00;
 17118     1FBB  0190               	clrf	16	;volatile
 17119     1FBC                     l13830:
 17120                           
 17121                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
 17122     1FBC  0192               	clrf	18	;volatile
 17123     1FBD                     l1355:
 17124     1FBD  0008               	return
 17125     1FBE                     __end_of_OSCILLATOR_Initialize:
 17126                           
 17127                           	psect	text28
 17128     1F8D                     __ptext28:	
 17129 ;; *************** function _I2C1_Initialize *****************
 17130 ;; Defined at:
 17131 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 17132 ;; Parameters:    Size  Location     Type
 17133 ;;		None
 17134 ;; Auto vars:     Size  Location     Type
 17135 ;;		None
 17136 ;; Return value:  Size  Location     Type
 17137 ;;                  1    wreg      void 
 17138 ;; Registers used:
 17139 ;;		wreg, status,2
 17140 ;; Tracked objects:
 17141 ;;		On entry : 0/0
 17142 ;;		On exit  : 0/0
 17143 ;;		Unchanged: 0/0
 17144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17149 ;;Total ram usage:        0 bytes
 17150 ;; Hardware stack levels used: 1
 17151 ;; Hardware stack levels required when called: 4
 17152 ;; This function calls:
 17153 ;;		Nothing
 17154 ;; This function is called by:
 17155 ;;		_SYSTEM_Initialize
 17156 ;; This function uses a non-reentrant model
 17157 ;;
 17158                           
 17159     1F8D                     _I2C1_Initialize:	
 17160                           ;psect for function _I2C1_Initialize
 17161                           
 17162     1F8D                     l13748:	
 17163                           ;incstack = 0
 17164                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 17165                           
 17166                           
 17167                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x00;
 17168     1F8D  0143               	movlb	3	; select bank3
 17169     1F8E  018F               	clrf	15	;volatile
 17170     1F8F                     l13750:
 17171                           
 17172                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 17173     1F8F  3008               	movlw	8
 17174     1F90  0090               	movwf	16	;volatile
 17175     1F91                     l13752:
 17176                           
 17177                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 17178     1F91  0191               	clrf	17	;volatile
 17179                           
 17180                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x4F;
 17181     1F92  304F               	movlw	79
 17182     1F93  008D               	movwf	13	;volatile
 17183     1F94                     l13754:
 17184                           
 17185                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 17186     1F94  1290               	bcf	16,5	;volatile
 17187     1F95                     l1742:
 17188     1F95  0008               	return
 17189     1F96                     __end_of_I2C1_Initialize:
 17190                           
 17191                           	psect	text29
 17192     096A                     __ptext29:	
 17193 ;; *************** function _EUSART2_Initialize *****************
 17194 ;; Defined at:
 17195 ;;		line 88 in file "mcc_generated_files/eusart2.c"
 17196 ;; Parameters:    Size  Location     Type
 17197 ;;		None
 17198 ;; Auto vars:     Size  Location     Type
 17199 ;;		None
 17200 ;; Return value:  Size  Location     Type
 17201 ;;                  1    wreg      void 
 17202 ;; Registers used:
 17203 ;;		wreg, status,2, status,0, pclath, cstack
 17204 ;; Tracked objects:
 17205 ;;		On entry : 0/0
 17206 ;;		On exit  : 0/0
 17207 ;;		Unchanged: 0/0
 17208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17213 ;;Total ram usage:        0 bytes
 17214 ;; Hardware stack levels used: 1
 17215 ;; Hardware stack levels required when called: 5
 17216 ;; This function calls:
 17217 ;;		_EUSART2_SetErrorHandler
 17218 ;;		_EUSART2_SetFramingErrorHandler
 17219 ;;		_EUSART2_SetOverrunErrorHandler
 17220 ;;		_EUSART2_SetRxInterruptHandler
 17221 ;;		_EUSART2_SetTxInterruptHandler
 17222 ;; This function is called by:
 17223 ;;		_SYSTEM_Initialize
 17224 ;; This function uses a non-reentrant model
 17225 ;;
 17226                           
 17227     096A                     _EUSART2_Initialize:	
 17228                           ;psect for function _EUSART2_Initialize
 17229                           
 17230     096A                     l13678:	
 17231                           ;incstack = 0
 17232                           ; Regs used in _EUSART2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17233                           
 17234                           
 17235                           ;mcc_generated_files/eusart2.c: 91:     PIE3bits.RC2IE = 0;
 17236     096A  014E               	movlb	14	; select bank14
 17237     096B  1399               	bcf	25,7	;volatile
 17238     096C                     l13680:
 17239                           
 17240                           ;mcc_generated_files/eusart2.c: 92:     EUSART2_SetRxInterruptHandler(EUSART2_Receive_IS
      +                          R);
 17241     096C  303C               	movlw	low _EUSART2_Receive_ISR
 17242     096D  00F1               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler
 17243     096E  3008               	movlw	high _EUSART2_Receive_ISR
 17244     096F  00F2               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler+1
 17245     0970  319F  272C  3189   	fcall	_EUSART2_SetRxInterruptHandler
 17246     0973                     l13682:
 17247                           
 17248                           ;mcc_generated_files/eusart2.c: 93:     PIE3bits.TX2IE = 0;
 17249     0973  014E               	movlb	14	; select bank14
 17250     0974  1319               	bcf	25,6	;volatile
 17251                           
 17252                           ;mcc_generated_files/eusart2.c: 94:     EUSART2_SetTxInterruptHandler(EUSART2_Transmit_I
      +                          SR);
 17253     0975  30E0               	movlw	low _EUSART2_Transmit_ISR
 17254     0976  00F1               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler
 17255     0977  3013               	movlw	high _EUSART2_Transmit_ISR
 17256     0978  00F2               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler+1
 17257     0979  319F  2732  3189   	fcall	_EUSART2_SetTxInterruptHandler
 17258     097C                     l13684:
 17259                           
 17260                           ;mcc_generated_files/eusart2.c: 98:     BAUD2CON = 0x08;
 17261     097C  3008               	movlw	8
 17262     097D  0154               	movlb	20	; select bank20
 17263     097E  009F               	movwf	31	;volatile
 17264     097F                     l13686:
 17265                           
 17266                           ;mcc_generated_files/eusart2.c: 101:     RC2STA = 0x90;
 17267     097F  3090               	movlw	144
 17268     0980  009D               	movwf	29	;volatile
 17269     0981                     l13688:
 17270                           
 17271                           ;mcc_generated_files/eusart2.c: 104:     TX2STA = 0x24;
 17272     0981  3024               	movlw	36
 17273     0982  009E               	movwf	30	;volatile
 17274     0983                     l13690:
 17275                           
 17276                           ;mcc_generated_files/eusart2.c: 107:     SP2BRGL = 0x40;
 17277     0983  3040               	movlw	64
 17278     0984  009B               	movwf	27	;volatile
 17279     0985                     l13692:
 17280                           
 17281                           ;mcc_generated_files/eusart2.c: 110:     SP2BRGH = 0x03;
 17282     0985  3003               	movlw	3
 17283     0986  009C               	movwf	28	;volatile
 17284     0987                     l13694:
 17285                           
 17286                           ;mcc_generated_files/eusart2.c: 113:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultF
      +                          ramingErrorHandler);
 17287     0987  3059               	movlw	low _EUSART2_DefaultFramingErrorHandler
 17288     0988  00F1               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler
 17289     0989  301E               	movlw	high _EUSART2_DefaultFramingErrorHandler
 17290     098A  00F2               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler+1
 17291     098B  319F  2720  3189   	fcall	_EUSART2_SetFramingErrorHandler
 17292     098E                     l13696:
 17293                           
 17294                           ;mcc_generated_files/eusart2.c: 114:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultO
      +                          verrunErrorHandler);
 17295     098E  3088               	movlw	low _EUSART2_DefaultOverrunErrorHandler
 17296     098F  00F1               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler
 17297     0990  301E               	movlw	high _EUSART2_DefaultOverrunErrorHandler
 17298     0991  00F2               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler+1
 17299     0992  319F  2726  3189   	fcall	_EUSART2_SetOverrunErrorHandler
 17300     0995                     l13698:
 17301                           
 17302                           ;mcc_generated_files/eusart2.c: 115:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHan
      +                          dler);
 17303     0995  3084               	movlw	low _EUSART2_DefaultErrorHandler
 17304     0996  00F1               	movwf	EUSART2_SetErrorHandler@interruptHandler
 17305     0997  301E               	movlw	high _EUSART2_DefaultErrorHandler
 17306     0998  00F2               	movwf	EUSART2_SetErrorHandler@interruptHandler+1
 17307     0999  319F  271A  3189   	fcall	_EUSART2_SetErrorHandler
 17308     099C                     l13700:
 17309                           
 17310                           ;mcc_generated_files/eusart2.c: 117:     eusart2RxLastError.status = 0;
 17311     099C  0140               	movlb	0	; select bank0
 17312     099D  01DE               	clrf	_eusart2RxLastError	;volatile
 17313     099E                     l13702:
 17314                           
 17315                           ;mcc_generated_files/eusart2.c: 120:     eusart2TxHead = 0;
 17316     099E  01E3               	clrf	_eusart2TxHead	;volatile
 17317     099F                     l13704:
 17318                           
 17319                           ;mcc_generated_files/eusart2.c: 121:     eusart2TxTail = 0;
 17320     099F  01E2               	clrf	_eusart2TxTail	;volatile
 17321     09A0                     l13706:
 17322                           
 17323                           ;mcc_generated_files/eusart2.c: 122:     eusart2TxBufferRemaining = sizeof(eusart2TxBuff
      +                          er);
 17324     09A0  3008               	movlw	8
 17325     09A1  00E1               	movwf	_eusart2TxBufferRemaining	;volatile
 17326                           
 17327                           ;mcc_generated_files/eusart2.c: 124:     eusart2RxHead = 0;
 17328     09A2  01FC               	clrf	_eusart2RxHead	;volatile
 17329                           
 17330                           ;mcc_generated_files/eusart2.c: 125:     eusart2RxTail = 0;
 17331     09A3  01E0               	clrf	_eusart2RxTail	;volatile
 17332                           
 17333                           ;mcc_generated_files/eusart2.c: 126:     eusart2RxCount = 0;
 17334     09A4  01DF               	clrf	_eusart2RxCount	;volatile
 17335     09A5                     l13708:
 17336                           
 17337                           ;mcc_generated_files/eusart2.c: 129:     PIE3bits.RC2IE = 1;
 17338     09A5  014E               	movlb	14	; select bank14
 17339     09A6  1799               	bsf	25,7	;volatile
 17340     09A7                     l1051:
 17341     09A7  0008               	return
 17342     09A8                     __end_of_EUSART2_Initialize:
 17343                           
 17344                           	psect	text30
 17345     1F32                     __ptext30:	
 17346 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
 17347 ;; Defined at:
 17348 ;;		line 276 in file "mcc_generated_files/eusart2.c"
 17349 ;; Parameters:    Size  Location     Type
 17350 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17351 ;;		 -> EUSART2_Transmit_ISR(1), EUSART1_Transmit_ISR(1), 
 17352 ;; Auto vars:     Size  Location     Type
 17353 ;;		None
 17354 ;; Return value:  Size  Location     Type
 17355 ;;                  1    wreg      void 
 17356 ;; Registers used:
 17357 ;;		wreg
 17358 ;; Tracked objects:
 17359 ;;		On entry : 0/0
 17360 ;;		On exit  : 0/0
 17361 ;;		Unchanged: 0/0
 17362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17363 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17366 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17367 ;;Total ram usage:        2 bytes
 17368 ;; Hardware stack levels used: 1
 17369 ;; Hardware stack levels required when called: 4
 17370 ;; This function calls:
 17371 ;;		Nothing
 17372 ;; This function is called by:
 17373 ;;		_EUSART2_Initialize
 17374 ;; This function uses a non-reentrant model
 17375 ;;
 17376                           
 17377     1F32                     _EUSART2_SetTxInterruptHandler:	
 17378                           ;psect for function _EUSART2_SetTxInterruptHandler
 17379                           
 17380     1F32                     l13500:	
 17381                           ;incstack = 0
 17382                           ; Regs used in _EUSART2_SetTxInterruptHandler: [wreg]
 17383                           
 17384                           
 17385                           ;mcc_generated_files/eusart2.c: 277:     EUSART2_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 17386     1F32  0872               	movf	EUSART2_SetTxInterruptHandler@interruptHandler+1,w
 17387     1F33  0141               	movlb	1	; select bank1
 17388     1F34  00EE               	movwf	(_EUSART2_TxDefaultInterruptHandler+1)^(0+128)
 17389     1F35  0871               	movf	EUSART2_SetTxInterruptHandler@interruptHandler,w
 17390     1F36  00ED               	movwf	_EUSART2_TxDefaultInterruptHandler^(0+128)
 17391     1F37                     l1117:
 17392     1F37  0008               	return
 17393     1F38                     __end_of_EUSART2_SetTxInterruptHandler:
 17394                           
 17395                           	psect	text31
 17396     1F2C                     __ptext31:	
 17397 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
 17398 ;; Defined at:
 17399 ;;		line 280 in file "mcc_generated_files/eusart2.c"
 17400 ;; Parameters:    Size  Location     Type
 17401 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17402 ;;		 -> EUSART2_Receive_ISR(1), EUSART1_Receive_ISR(1), 
 17403 ;; Auto vars:     Size  Location     Type
 17404 ;;		None
 17405 ;; Return value:  Size  Location     Type
 17406 ;;                  1    wreg      void 
 17407 ;; Registers used:
 17408 ;;		wreg
 17409 ;; Tracked objects:
 17410 ;;		On entry : 0/0
 17411 ;;		On exit  : 0/0
 17412 ;;		Unchanged: 0/0
 17413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17414 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17417 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17418 ;;Total ram usage:        2 bytes
 17419 ;; Hardware stack levels used: 1
 17420 ;; Hardware stack levels required when called: 4
 17421 ;; This function calls:
 17422 ;;		Nothing
 17423 ;; This function is called by:
 17424 ;;		_EUSART2_Initialize
 17425 ;; This function uses a non-reentrant model
 17426 ;;
 17427                           
 17428     1F2C                     _EUSART2_SetRxInterruptHandler:	
 17429                           ;psect for function _EUSART2_SetRxInterruptHandler
 17430                           
 17431     1F2C                     l13498:	
 17432                           ;incstack = 0
 17433                           ; Regs used in _EUSART2_SetRxInterruptHandler: [wreg]
 17434                           
 17435                           
 17436                           ;mcc_generated_files/eusart2.c: 281:     EUSART2_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 17437     1F2C  0872               	movf	EUSART2_SetRxInterruptHandler@interruptHandler+1,w
 17438     1F2D  0141               	movlb	1	; select bank1
 17439     1F2E  00EC               	movwf	(_EUSART2_RxDefaultInterruptHandler+1)^(0+128)
 17440     1F2F  0871               	movf	EUSART2_SetRxInterruptHandler@interruptHandler,w
 17441     1F30  00EB               	movwf	_EUSART2_RxDefaultInterruptHandler^(0+128)
 17442     1F31                     l1120:
 17443     1F31  0008               	return
 17444     1F32                     __end_of_EUSART2_SetRxInterruptHandler:
 17445                           
 17446                           	psect	text32
 17447     1F26                     __ptext32:	
 17448 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
 17449 ;; Defined at:
 17450 ;;		line 268 in file "mcc_generated_files/eusart2.c"
 17451 ;; Parameters:    Size  Location     Type
 17452 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17453 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
 17454 ;; Auto vars:     Size  Location     Type
 17455 ;;		None
 17456 ;; Return value:  Size  Location     Type
 17457 ;;                  1    wreg      void 
 17458 ;; Registers used:
 17459 ;;		wreg
 17460 ;; Tracked objects:
 17461 ;;		On entry : 0/0
 17462 ;;		On exit  : 0/0
 17463 ;;		Unchanged: 0/0
 17464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17465 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17468 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17469 ;;Total ram usage:        2 bytes
 17470 ;; Hardware stack levels used: 1
 17471 ;; Hardware stack levels required when called: 4
 17472 ;; This function calls:
 17473 ;;		Nothing
 17474 ;; This function is called by:
 17475 ;;		_EUSART2_Initialize
 17476 ;; This function uses a non-reentrant model
 17477 ;;
 17478                           
 17479     1F26                     _EUSART2_SetOverrunErrorHandler:	
 17480                           ;psect for function _EUSART2_SetOverrunErrorHandler
 17481                           
 17482     1F26                     l13504:	
 17483                           ;incstack = 0
 17484                           ; Regs used in _EUSART2_SetOverrunErrorHandler: [wreg]
 17485                           
 17486                           
 17487                           ;mcc_generated_files/eusart2.c: 269:     EUSART2_OverrunErrorHandler = interruptHandler;
 17488     1F26  0872               	movf	EUSART2_SetOverrunErrorHandler@interruptHandler+1,w
 17489     1F27  0142               	movlb	2	; select bank2
 17490     1F28  00EA               	movwf	(_EUSART2_OverrunErrorHandler+1)^(0+256)
 17491     1F29  0871               	movf	EUSART2_SetOverrunErrorHandler@interruptHandler,w
 17492     1F2A  00E9               	movwf	_EUSART2_OverrunErrorHandler^(0+256)
 17493     1F2B                     l1111:
 17494     1F2B  0008               	return
 17495     1F2C                     __end_of_EUSART2_SetOverrunErrorHandler:
 17496                           
 17497                           	psect	text33
 17498     1F20                     __ptext33:	
 17499 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
 17500 ;; Defined at:
 17501 ;;		line 264 in file "mcc_generated_files/eusart2.c"
 17502 ;; Parameters:    Size  Location     Type
 17503 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17504 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
 17505 ;; Auto vars:     Size  Location     Type
 17506 ;;		None
 17507 ;; Return value:  Size  Location     Type
 17508 ;;                  1    wreg      void 
 17509 ;; Registers used:
 17510 ;;		wreg
 17511 ;; Tracked objects:
 17512 ;;		On entry : 0/0
 17513 ;;		On exit  : 0/0
 17514 ;;		Unchanged: 0/0
 17515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17516 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17519 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17520 ;;Total ram usage:        2 bytes
 17521 ;; Hardware stack levels used: 1
 17522 ;; Hardware stack levels required when called: 4
 17523 ;; This function calls:
 17524 ;;		Nothing
 17525 ;; This function is called by:
 17526 ;;		_EUSART2_Initialize
 17527 ;; This function uses a non-reentrant model
 17528 ;;
 17529                           
 17530     1F20                     _EUSART2_SetFramingErrorHandler:	
 17531                           ;psect for function _EUSART2_SetFramingErrorHandler
 17532                           
 17533     1F20                     l13502:	
 17534                           ;incstack = 0
 17535                           ; Regs used in _EUSART2_SetFramingErrorHandler: [wreg]
 17536                           
 17537                           
 17538                           ;mcc_generated_files/eusart2.c: 265:     EUSART2_FramingErrorHandler = interruptHandler;
 17539     1F20  0872               	movf	EUSART2_SetFramingErrorHandler@interruptHandler+1,w
 17540     1F21  0142               	movlb	2	; select bank2
 17541     1F22  00EC               	movwf	(_EUSART2_FramingErrorHandler+1)^(0+256)
 17542     1F23  0871               	movf	EUSART2_SetFramingErrorHandler@interruptHandler,w
 17543     1F24  00EB               	movwf	_EUSART2_FramingErrorHandler^(0+256)
 17544     1F25                     l1108:
 17545     1F25  0008               	return
 17546     1F26                     __end_of_EUSART2_SetFramingErrorHandler:
 17547                           
 17548                           	psect	text34
 17549     1F1A                     __ptext34:	
 17550 ;; *************** function _EUSART2_SetErrorHandler *****************
 17551 ;; Defined at:
 17552 ;;		line 272 in file "mcc_generated_files/eusart2.c"
 17553 ;; Parameters:    Size  Location     Type
 17554 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17555 ;;		 -> EUSART2_DefaultErrorHandler(1), 
 17556 ;; Auto vars:     Size  Location     Type
 17557 ;;		None
 17558 ;; Return value:  Size  Location     Type
 17559 ;;                  1    wreg      void 
 17560 ;; Registers used:
 17561 ;;		wreg
 17562 ;; Tracked objects:
 17563 ;;		On entry : 0/0
 17564 ;;		On exit  : 0/0
 17565 ;;		Unchanged: 0/0
 17566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17567 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17570 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17571 ;;Total ram usage:        2 bytes
 17572 ;; Hardware stack levels used: 1
 17573 ;; Hardware stack levels required when called: 4
 17574 ;; This function calls:
 17575 ;;		Nothing
 17576 ;; This function is called by:
 17577 ;;		_EUSART2_Initialize
 17578 ;; This function uses a non-reentrant model
 17579 ;;
 17580                           
 17581     1F1A                     _EUSART2_SetErrorHandler:	
 17582                           ;psect for function _EUSART2_SetErrorHandler
 17583                           
 17584     1F1A                     l13506:	
 17585                           ;incstack = 0
 17586                           ; Regs used in _EUSART2_SetErrorHandler: [wreg]
 17587                           
 17588                           
 17589                           ;mcc_generated_files/eusart2.c: 273:     EUSART2_ErrorHandler = interruptHandler;
 17590     1F1A  0872               	movf	EUSART2_SetErrorHandler@interruptHandler+1,w
 17591     1F1B  0142               	movlb	2	; select bank2
 17592     1F1C  00E8               	movwf	(_EUSART2_ErrorHandler+1)^(0+256)
 17593     1F1D  0871               	movf	EUSART2_SetErrorHandler@interruptHandler,w
 17594     1F1E  00E7               	movwf	_EUSART2_ErrorHandler^(0+256)
 17595     1F1F                     l1114:
 17596     1F1F  0008               	return
 17597     1F20                     __end_of_EUSART2_SetErrorHandler:
 17598                           
 17599                           	psect	text35
 17600     092C                     __ptext35:	
 17601 ;; *************** function _EUSART1_Initialize *****************
 17602 ;; Defined at:
 17603 ;;		line 88 in file "mcc_generated_files/eusart1.c"
 17604 ;; Parameters:    Size  Location     Type
 17605 ;;		None
 17606 ;; Auto vars:     Size  Location     Type
 17607 ;;		None
 17608 ;; Return value:  Size  Location     Type
 17609 ;;                  1    wreg      void 
 17610 ;; Registers used:
 17611 ;;		wreg, status,2, status,0, pclath, cstack
 17612 ;; Tracked objects:
 17613 ;;		On entry : 0/0
 17614 ;;		On exit  : 0/0
 17615 ;;		Unchanged: 0/0
 17616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17621 ;;Total ram usage:        0 bytes
 17622 ;; Hardware stack levels used: 1
 17623 ;; Hardware stack levels required when called: 5
 17624 ;; This function calls:
 17625 ;;		_EUSART1_SetErrorHandler
 17626 ;;		_EUSART1_SetFramingErrorHandler
 17627 ;;		_EUSART1_SetOverrunErrorHandler
 17628 ;;		_EUSART1_SetRxInterruptHandler
 17629 ;;		_EUSART1_SetTxInterruptHandler
 17630 ;; This function is called by:
 17631 ;;		_SYSTEM_Initialize
 17632 ;; This function uses a non-reentrant model
 17633 ;;
 17634                           
 17635     092C                     _EUSART1_Initialize:	
 17636                           ;psect for function _EUSART1_Initialize
 17637                           
 17638     092C                     l13714:	
 17639                           ;incstack = 0
 17640                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17641                           
 17642                           
 17643                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
 17644     092C  014E               	movlb	14	; select bank14
 17645     092D  1299               	bcf	25,5	;volatile
 17646     092E                     l13716:
 17647                           
 17648                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 17649     092E  3075               	movlw	low _EUSART1_Receive_ISR
 17650     092F  00F1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 17651     0930  3008               	movlw	high _EUSART1_Receive_ISR
 17652     0931  00F2               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 17653     0932  319F  270E  3189   	fcall	_EUSART1_SetRxInterruptHandler
 17654     0935                     l13718:
 17655                           
 17656                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
 17657     0935  014E               	movlb	14	; select bank14
 17658     0936  1219               	bcf	25,4	;volatile
 17659                           
 17660                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
 17661     0937  3002               	movlw	low _EUSART1_Transmit_ISR
 17662     0938  00F1               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler
 17663     0939  3014               	movlw	high _EUSART1_Transmit_ISR
 17664     093A  00F2               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1
 17665     093B  319F  2714  3189   	fcall	_EUSART1_SetTxInterruptHandler
 17666     093E                     l13720:
 17667                           
 17668                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
 17669     093E  3008               	movlw	8
 17670     093F  0142               	movlb	2	; select bank2
 17671     0940  009F               	movwf	31	;volatile
 17672     0941                     l13722:
 17673                           
 17674                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
 17675     0941  3090               	movlw	144
 17676     0942  009D               	movwf	29	;volatile
 17677     0943                     l13724:
 17678                           
 17679                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
 17680     0943  3024               	movlw	36
 17681     0944  009E               	movwf	30	;volatile
 17682     0945                     l13726:
 17683                           
 17684                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x40;
 17685     0945  3040               	movlw	64
 17686     0946  009B               	movwf	27	;volatile
 17687     0947                     l13728:
 17688                           
 17689                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x03;
 17690     0947  3003               	movlw	3
 17691     0948  009C               	movwf	28	;volatile
 17692     0949                     l13730:
 17693                           
 17694                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 17695     0949  3058               	movlw	low _EUSART1_DefaultFramingErrorHandler
 17696     094A  00F1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
 17697     094B  301E               	movlw	high _EUSART1_DefaultFramingErrorHandler
 17698     094C  00F2               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
 17699     094D  319F  2702  3189   	fcall	_EUSART1_SetFramingErrorHandler
 17700     0950                     l13732:
 17701                           
 17702                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 17703     0950  3080               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 17704     0951  00F1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
 17705     0952  301E               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 17706     0953  00F2               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
 17707     0954  319F  2708  3189   	fcall	_EUSART1_SetOverrunErrorHandler
 17708     0957                     l13734:
 17709                           
 17710                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 17711     0957  307C               	movlw	low _EUSART1_DefaultErrorHandler
 17712     0958  00F1               	movwf	EUSART1_SetErrorHandler@interruptHandler
 17713     0959  301E               	movlw	high _EUSART1_DefaultErrorHandler
 17714     095A  00F2               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
 17715     095B  319E  26FC  3189   	fcall	_EUSART1_SetErrorHandler
 17716     095E                     l13736:
 17717                           
 17718                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
 17719     095E  0140               	movlb	0	; select bank0
 17720     095F  01D7               	clrf	_eusart1RxLastError	;volatile
 17721     0960                     l13738:
 17722                           
 17723                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
 17724     0960  01DD               	clrf	_eusart1TxHead	;volatile
 17725     0961                     l13740:
 17726                           
 17727                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
 17728     0961  01DC               	clrf	_eusart1TxTail	;volatile
 17729     0962                     l13742:
 17730                           
 17731                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
 17732     0962  3008               	movlw	8
 17733     0963  00DB               	movwf	_eusart1TxBufferRemaining	;volatile
 17734                           
 17735                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
 17736     0964  01DA               	clrf	_eusart1RxHead	;volatile
 17737                           
 17738                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
 17739     0965  01D9               	clrf	_eusart1RxTail	;volatile
 17740                           
 17741                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
 17742     0966  01D8               	clrf	_eusart1RxCount	;volatile
 17743     0967                     l13744:
 17744                           
 17745                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
 17746     0967  014E               	movlb	14	; select bank14
 17747     0968  1699               	bsf	25,5	;volatile
 17748     0969                     l1195:
 17749     0969  0008               	return
 17750     096A                     __end_of_EUSART1_Initialize:
 17751                           
 17752                           	psect	text36
 17753     1F14                     __ptext36:	
 17754 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
 17755 ;; Defined at:
 17756 ;;		line 285 in file "mcc_generated_files/eusart1.c"
 17757 ;; Parameters:    Size  Location     Type
 17758 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17759 ;;		 -> EUSART2_Transmit_ISR(1), EUSART1_Transmit_ISR(1), 
 17760 ;; Auto vars:     Size  Location     Type
 17761 ;;		None
 17762 ;; Return value:  Size  Location     Type
 17763 ;;                  1    wreg      void 
 17764 ;; Registers used:
 17765 ;;		wreg
 17766 ;; Tracked objects:
 17767 ;;		On entry : 0/0
 17768 ;;		On exit  : 0/0
 17769 ;;		Unchanged: 0/0
 17770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17771 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17774 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17775 ;;Total ram usage:        2 bytes
 17776 ;; Hardware stack levels used: 1
 17777 ;; Hardware stack levels required when called: 4
 17778 ;; This function calls:
 17779 ;;		Nothing
 17780 ;; This function is called by:
 17781 ;;		_EUSART1_Initialize
 17782 ;; This function uses a non-reentrant model
 17783 ;;
 17784                           
 17785     1F14                     _EUSART1_SetTxInterruptHandler:	
 17786                           ;psect for function _EUSART1_SetTxInterruptHandler
 17787                           
 17788     1F14                     l13520:	
 17789                           ;incstack = 0
 17790                           ; Regs used in _EUSART1_SetTxInterruptHandler: [wreg]
 17791                           
 17792                           
 17793                           ;mcc_generated_files/eusart1.c: 286:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 17794     1F14  0872               	movf	EUSART1_SetTxInterruptHandler@interruptHandler+1,w
 17795     1F15  0142               	movlb	2	; select bank2
 17796     1F16  00E6               	movwf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+256)
 17797     1F17  0871               	movf	EUSART1_SetTxInterruptHandler@interruptHandler,w
 17798     1F18  00E5               	movwf	_EUSART1_TxDefaultInterruptHandler^(0+256)
 17799     1F19                     l1267:
 17800     1F19  0008               	return
 17801     1F1A                     __end_of_EUSART1_SetTxInterruptHandler:
 17802                           
 17803                           	psect	text37
 17804     1F0E                     __ptext37:	
 17805 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 17806 ;; Defined at:
 17807 ;;		line 289 in file "mcc_generated_files/eusart1.c"
 17808 ;; Parameters:    Size  Location     Type
 17809 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17810 ;;		 -> EUSART2_Receive_ISR(1), EUSART1_Receive_ISR(1), 
 17811 ;; Auto vars:     Size  Location     Type
 17812 ;;		None
 17813 ;; Return value:  Size  Location     Type
 17814 ;;                  1    wreg      void 
 17815 ;; Registers used:
 17816 ;;		wreg
 17817 ;; Tracked objects:
 17818 ;;		On entry : 0/0
 17819 ;;		On exit  : 0/0
 17820 ;;		Unchanged: 0/0
 17821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17822 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17825 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17826 ;;Total ram usage:        2 bytes
 17827 ;; Hardware stack levels used: 1
 17828 ;; Hardware stack levels required when called: 4
 17829 ;; This function calls:
 17830 ;;		Nothing
 17831 ;; This function is called by:
 17832 ;;		_EUSART1_Initialize
 17833 ;; This function uses a non-reentrant model
 17834 ;;
 17835                           
 17836     1F0E                     _EUSART1_SetRxInterruptHandler:	
 17837                           ;psect for function _EUSART1_SetRxInterruptHandler
 17838                           
 17839     1F0E                     l13518:	
 17840                           ;incstack = 0
 17841                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
 17842                           
 17843                           
 17844                           ;mcc_generated_files/eusart1.c: 290:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 17845     1F0E  0872               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
 17846     1F0F  0142               	movlb	2	; select bank2
 17847     1F10  00E4               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256)
 17848     1F11  0871               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
 17849     1F12  00E3               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+256)
 17850     1F13                     l1270:
 17851     1F13  0008               	return
 17852     1F14                     __end_of_EUSART1_SetRxInterruptHandler:
 17853                           
 17854                           	psect	text38
 17855     1F08                     __ptext38:	
 17856 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 17857 ;; Defined at:
 17858 ;;		line 277 in file "mcc_generated_files/eusart1.c"
 17859 ;; Parameters:    Size  Location     Type
 17860 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17861 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 17862 ;; Auto vars:     Size  Location     Type
 17863 ;;		None
 17864 ;; Return value:  Size  Location     Type
 17865 ;;                  1    wreg      void 
 17866 ;; Registers used:
 17867 ;;		wreg
 17868 ;; Tracked objects:
 17869 ;;		On entry : 0/0
 17870 ;;		On exit  : 0/0
 17871 ;;		Unchanged: 0/0
 17872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17873 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17876 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17877 ;;Total ram usage:        2 bytes
 17878 ;; Hardware stack levels used: 1
 17879 ;; Hardware stack levels required when called: 4
 17880 ;; This function calls:
 17881 ;;		Nothing
 17882 ;; This function is called by:
 17883 ;;		_EUSART1_Initialize
 17884 ;; This function uses a non-reentrant model
 17885 ;;
 17886                           
 17887     1F08                     _EUSART1_SetOverrunErrorHandler:	
 17888                           ;psect for function _EUSART1_SetOverrunErrorHandler
 17889                           
 17890     1F08                     l13524:	
 17891                           ;incstack = 0
 17892                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
 17893                           
 17894                           
 17895                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_OverrunErrorHandler = interruptHandler;
 17896     1F08  0872               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
 17897     1F09  0142               	movlb	2	; select bank2
 17898     1F0A  00E0               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+256)
 17899     1F0B  0871               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
 17900     1F0C  00DF               	movwf	_EUSART1_OverrunErrorHandler^(0+256)
 17901     1F0D                     l1261:
 17902     1F0D  0008               	return
 17903     1F0E                     __end_of_EUSART1_SetOverrunErrorHandler:
 17904                           
 17905                           	psect	text39
 17906     1F02                     __ptext39:	
 17907 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 17908 ;; Defined at:
 17909 ;;		line 273 in file "mcc_generated_files/eusart1.c"
 17910 ;; Parameters:    Size  Location     Type
 17911 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17912 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 17913 ;; Auto vars:     Size  Location     Type
 17914 ;;		None
 17915 ;; Return value:  Size  Location     Type
 17916 ;;                  1    wreg      void 
 17917 ;; Registers used:
 17918 ;;		wreg
 17919 ;; Tracked objects:
 17920 ;;		On entry : 0/0
 17921 ;;		On exit  : 0/0
 17922 ;;		Unchanged: 0/0
 17923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17924 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17927 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17928 ;;Total ram usage:        2 bytes
 17929 ;; Hardware stack levels used: 1
 17930 ;; Hardware stack levels required when called: 4
 17931 ;; This function calls:
 17932 ;;		Nothing
 17933 ;; This function is called by:
 17934 ;;		_EUSART1_Initialize
 17935 ;; This function uses a non-reentrant model
 17936 ;;
 17937                           
 17938     1F02                     _EUSART1_SetFramingErrorHandler:	
 17939                           ;psect for function _EUSART1_SetFramingErrorHandler
 17940                           
 17941     1F02                     l13522:	
 17942                           ;incstack = 0
 17943                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
 17944                           
 17945                           
 17946                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_FramingErrorHandler = interruptHandler;
 17947     1F02  0872               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
 17948     1F03  0142               	movlb	2	; select bank2
 17949     1F04  00E2               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+256)
 17950     1F05  0871               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
 17951     1F06  00E1               	movwf	_EUSART1_FramingErrorHandler^(0+256)
 17952     1F07                     l1258:
 17953     1F07  0008               	return
 17954     1F08                     __end_of_EUSART1_SetFramingErrorHandler:
 17955                           
 17956                           	psect	text40
 17957     1EFC                     __ptext40:	
 17958 ;; *************** function _EUSART1_SetErrorHandler *****************
 17959 ;; Defined at:
 17960 ;;		line 281 in file "mcc_generated_files/eusart1.c"
 17961 ;; Parameters:    Size  Location     Type
 17962 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17963 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 17964 ;; Auto vars:     Size  Location     Type
 17965 ;;		None
 17966 ;; Return value:  Size  Location     Type
 17967 ;;                  1    wreg      void 
 17968 ;; Registers used:
 17969 ;;		wreg
 17970 ;; Tracked objects:
 17971 ;;		On entry : 0/0
 17972 ;;		On exit  : 0/0
 17973 ;;		Unchanged: 0/0
 17974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17975 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17978 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17979 ;;Total ram usage:        2 bytes
 17980 ;; Hardware stack levels used: 1
 17981 ;; Hardware stack levels required when called: 4
 17982 ;; This function calls:
 17983 ;;		Nothing
 17984 ;; This function is called by:
 17985 ;;		_EUSART1_Initialize
 17986 ;; This function uses a non-reentrant model
 17987 ;;
 17988                           
 17989     1EFC                     _EUSART1_SetErrorHandler:	
 17990                           ;psect for function _EUSART1_SetErrorHandler
 17991                           
 17992     1EFC                     l13526:	
 17993                           ;incstack = 0
 17994                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
 17995                           
 17996                           
 17997                           ;mcc_generated_files/eusart1.c: 282:     EUSART1_ErrorHandler = interruptHandler;
 17998     1EFC  0872               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
 17999     1EFD  0142               	movlb	2	; select bank2
 18000     1EFE  00DE               	movwf	(_EUSART1_ErrorHandler+1)^(0+256)
 18001     1EFF  0871               	movf	EUSART1_SetErrorHandler@interruptHandler,w
 18002     1F00  00DD               	movwf	_EUSART1_ErrorHandler^(0+256)
 18003     1F01                     l1264:
 18004     1F01  0008               	return
 18005     1F02                     __end_of_EUSART1_SetErrorHandler:
 18006                           
 18007                           	psect	text41
 18008     127B                     __ptext41:	
 18009 ;; *************** function _RN487X_SetAsyncMessageHandler *****************
 18010 ;; Defined at:
 18011 ;;		line 328 in file "mcc_generated_files/rn487x/rn487x.c"
 18012 ;; Parameters:    Size  Location     Type
 18013 ;;  pBuffer         2    1[COMMON] PTR unsigned char 
 18014 ;;		 -> statusBuffer@main$F3783(80), statusBuffer(80), 
 18015 ;;  len             1    3[COMMON] unsigned char 
 18016 ;; Auto vars:     Size  Location     Type
 18017 ;;		None
 18018 ;; Return value:  Size  Location     Type
 18019 ;;                  1    wreg      _Bool 
 18020 ;; Registers used:
 18021 ;;		wreg, status,2, status,0
 18022 ;; Tracked objects:
 18023 ;;		On entry : 0/0
 18024 ;;		On exit  : 0/0
 18025 ;;		Unchanged: 0/0
 18026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18027 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18030 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18031 ;;Total ram usage:        3 bytes
 18032 ;; Hardware stack levels used: 1
 18033 ;; Hardware stack levels required when called: 4
 18034 ;; This function calls:
 18035 ;;		Nothing
 18036 ;; This function is called by:
 18037 ;;		_main
 18038 ;;		_RN487X_Example_Initialized
 18039 ;; This function uses a non-reentrant model
 18040 ;;
 18041                           
 18042     127B                     _RN487X_SetAsyncMessageHandler:	
 18043                           ;psect for function _RN487X_SetAsyncMessageHandler
 18044                           
 18045     127B                     l14470:	
 18046                           ;incstack = 0
 18047                           ; Regs used in _RN487X_SetAsyncMessageHandler: [wreg+status,2+status,0]
 18048                           
 18049                           
 18050                           ;mcc_generated_files/rn487x/rn487x.c: 328: _Bool RN487X_SetAsyncMessageHandler(char* pBu
      +                          ffer, uint8_t len);mcc_generated_files/rn487x/rn487x.c: 329: {;mcc_generated_files/rn487
      +                          x/rn487x.c: 330:     if ((pBuffer != ((void*)0)) && (len > 1))
 18051     127B  0871               	movf	RN487X_SetAsyncMessageHandler@pBuffer,w
 18052     127C  0472               	iorwf	RN487X_SetAsyncMessageHandler@pBuffer+1,w
 18053     127D  1903               	btfsc	3,2
 18054     127E  2A80               	goto	u11551
 18055     127F  2A81               	goto	u11550
 18056     1280                     u11551:
 18057     1280  2A91               	goto	l14484
 18058     1281                     u11550:
 18059     1281                     l14472:
 18060     1281  3002               	movlw	2
 18061     1282  0273               	subwf	RN487X_SetAsyncMessageHandler@len,w
 18062     1283  1C03               	skipc
 18063     1284  2A86               	goto	u11561
 18064     1285  2A87               	goto	u11560
 18065     1286                     u11561:
 18066     1286  2A91               	goto	l14484
 18067     1287                     u11560:
 18068     1287                     l14474:
 18069                           
 18070                           ;mcc_generated_files/rn487x/rn487x.c: 331:     {;mcc_generated_files/rn487x/rn487x.c: 33
      +                          2:       asyncBuffer = pBuffer;
 18071     1287  0872               	movf	RN487X_SetAsyncMessageHandler@pBuffer+1,w
 18072     1288  0140               	movlb	0	; select bank0
 18073     1289  00D1               	movwf	_asyncBuffer+1
 18074     128A  0871               	movf	RN487X_SetAsyncMessageHandler@pBuffer,w
 18075     128B  00D0               	movwf	_asyncBuffer
 18076     128C                     l14476:
 18077                           
 18078                           ;mcc_generated_files/rn487x/rn487x.c: 333:       asyncBufferSize = len - 1;
 18079     128C  0873               	movf	RN487X_SetAsyncMessageHandler@len,w
 18080     128D  3EFF               	addlw	255
 18081     128E  00E7               	movwf	_asyncBufferSize
 18082     128F                     l14478:
 18083                           
 18084                           ;mcc_generated_files/rn487x/rn487x.c: 334:       return 1;
 18085     128F  3001               	movlw	1
 18086     1290  2A92               	goto	l952
 18087     1291                     l14484:
 18088                           
 18089                           ;mcc_generated_files/rn487x/rn487x.c: 337:     {;mcc_generated_files/rn487x/rn487x.c: 33
      +                          8:         return 0;
 18090     1291  3000               	movlw	0
 18091     1292                     l952:
 18092     1292  0008               	return
 18093     1293                     __end_of_RN487X_SetAsyncMessageHandler:
 18094                           
 18095                           	psect	text42
 18096     1017                     __ptext42:	
 18097 ;; *************** function _RN487X_Read *****************
 18098 ;; Defined at:
 18099 ;;		line 356 in file "mcc_generated_files/rn487x/rn487x.c"
 18100 ;; Parameters:    Size  Location     Type
 18101 ;;		None
 18102 ;; Auto vars:     Size  Location     Type
 18103 ;;		None
 18104 ;; Return value:  Size  Location     Type
 18105 ;;                  1    wreg      unsigned char 
 18106 ;; Registers used:
 18107 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18108 ;; Tracked objects:
 18109 ;;		On entry : 0/0
 18110 ;;		On exit  : 0/0
 18111 ;;		Unchanged: 0/0
 18112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18117 ;;Total ram usage:        0 bytes
 18118 ;; Hardware stack levels used: 1
 18119 ;; Hardware stack levels required when called: 9
 18120 ;; This function calls:
 18121 ;;		_RN487X_DataReady
 18122 ;; This function is called by:
 18123 ;;		_main
 18124 ;;		_RN487X_Example_TransparentUart
 18125 ;; This function uses a non-reentrant model
 18126 ;;
 18127                           
 18128     1017                     _RN487X_Read:	
 18129                           ;psect for function _RN487X_Read
 18130                           
 18131     1017                     l14492:	
 18132                           ;incstack = 0
 18133                           ; Regs used in _RN487X_Read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18134                           
 18135     1017                     l14494:	
 18136                           ;mcc_generated_files/rn487x/rn487x.c: 358:     while(RN487X_DataReady() == 0);
 18137                           
 18138     1017  3193  2349  3190   	fcall	_RN487X_DataReady
 18139     101A  3A00               	xorlw	0
 18140     101B  1903               	skipnz
 18141     101C  281E               	goto	u11571
 18142     101D  281F               	goto	u11570
 18143     101E                     u11571:
 18144     101E  2817               	goto	l14494
 18145     101F                     u11570:
 18146     101F                     l14496:
 18147                           
 18148                           ;mcc_generated_files/rn487x/rn487x.c: 359:     dataReady = 0;
 18149     101F  0140               	movlb	0	; select bank0
 18150     1020  01E5               	clrf	_dataReady
 18151     1021                     l14498:
 18152                           
 18153                           ;mcc_generated_files/rn487x/rn487x.c: 360:     return peek;
 18154     1021  0866               	movf	_peek,w
 18155     1022                     l964:
 18156     1022  0008               	return
 18157     1023                     __end_of_RN487X_Read:
 18158                           
 18159                           	psect	text43
 18160     1349                     __ptext43:	
 18161 ;; *************** function _RN487X_DataReady *****************
 18162 ;; Defined at:
 18163 ;;		line 342 in file "mcc_generated_files/rn487x/rn487x.c"
 18164 ;; Parameters:    Size  Location     Type
 18165 ;;		None
 18166 ;; Auto vars:     Size  Location     Type
 18167 ;;		None
 18168 ;; Return value:  Size  Location     Type
 18169 ;;                  1    wreg      _Bool 
 18170 ;; Registers used:
 18171 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18172 ;; Tracked objects:
 18173 ;;		On entry : 0/0
 18174 ;;		On exit  : 0/0
 18175 ;;		Unchanged: 0/0
 18176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18181 ;;Total ram usage:        0 bytes
 18182 ;; Hardware stack levels used: 1
 18183 ;; Hardware stack levels required when called: 8
 18184 ;; This function calls:
 18185 ;;		_RN487X_FilterData
 18186 ;;		_RN487X_is_rx_ready
 18187 ;; This function is called by:
 18188 ;;		_RN487X_Read
 18189 ;;		_main
 18190 ;;		_RN487X_Example_TransparentUart
 18191 ;; This function uses a non-reentrant model
 18192 ;;
 18193                           
 18194     1349                     _RN487X_DataReady:	
 18195                           ;psect for function _RN487X_DataReady
 18196                           
 18197     1349                     l13656:	
 18198                           ;incstack = 0
 18199                           ; Regs used in _RN487X_DataReady: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18200                           
 18201                           
 18202                           ;mcc_generated_files/rn487x/rn487x.c: 344:     if (dataReady)
 18203     1349  0140               	movlb	0	; select bank0
 18204     134A  0865               	movf	_dataReady,w
 18205     134B  1903               	btfsc	3,2
 18206     134C  2B4E               	goto	u10511
 18207     134D  2B4F               	goto	u10510
 18208     134E                     u10511:
 18209     134E  2B51               	goto	l13662
 18210     134F                     u10510:
 18211     134F                     l13658:
 18212                           
 18213                           ;mcc_generated_files/rn487x/rn487x.c: 345:     {;mcc_generated_files/rn487x/rn487x.c: 34
      +                          6:         return 1;
 18214     134F  3001               	movlw	1
 18215     1350  2B64               	goto	l957
 18216     1351                     l13662:
 18217                           
 18218                           ;mcc_generated_files/rn487x/rn487x.c: 349:     if (RN487X.DataReady())
 18219     1351  306E               	movlw	low ((_RN487X+6)| (0+32768))
 18220     1352  0084               	movwf	4
 18221     1353  3098               	movlw	high ((_RN487X+6)| (0+32768))
 18222     1354  0085               	movwf	5
 18223     1355  3F01               	moviw [1]fsr0
 18224     1356  008A               	movwf	10
 18225     1357  3F00               	moviw [0]fsr0
 18226     1358  000A               	callw
 18227     1359  3193               	pagesel	$
 18228     135A  3A00               	xorlw	0
 18229     135B  1903               	skipnz
 18230     135C  2B5E               	goto	u10521
 18231     135D  2B5F               	goto	u10520
 18232     135E                     u10521:
 18233     135E  2B63               	goto	l13668
 18234     135F                     u10520:
 18235     135F                     l13664:
 18236                           
 18237                           ;mcc_generated_files/rn487x/rn487x.c: 350:     {;mcc_generated_files/rn487x/rn487x.c: 35
      +                          1:         return RN487X_FilterData();
 18238     135F  318E  2620  3193   	fcall	_RN487X_FilterData
 18239     1362  2B64               	goto	l957
 18240     1363                     l13668:
 18241                           
 18242                           ;mcc_generated_files/rn487x/rn487x.c: 353:     return 0;
 18243     1363  3000               	movlw	0
 18244     1364                     l957:
 18245     1364  0008               	return
 18246     1365                     __end_of_RN487X_DataReady:
 18247                           
 18248                           	psect	text44
 18249     0E20                     __ptext44:	
 18250 ;; *************** function _RN487X_FilterData *****************
 18251 ;; Defined at:
 18252 ;;		line 363 in file "mcc_generated_files/rn487x/rn487x.c"
 18253 ;; Parameters:    Size  Location     Type
 18254 ;;		None
 18255 ;; Auto vars:     Size  Location     Type
 18256 ;;  readChar        1   40[BANK0 ] unsigned char 
 18257 ;; Return value:  Size  Location     Type
 18258 ;;                  1    wreg      _Bool 
 18259 ;; Registers used:
 18260 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18261 ;; Tracked objects:
 18262 ;;		On entry : 0/0
 18263 ;;		On exit  : 0/0
 18264 ;;		Unchanged: 0/0
 18265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18267 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18268 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18269 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18270 ;;Total ram usage:        5 bytes
 18271 ;; Hardware stack levels used: 1
 18272 ;; Hardware stack levels required when called: 7
 18273 ;; This function calls:
 18274 ;;		_RN487X_MessageHandler
 18275 ;;		_RN487X_Read@rn487x_interface$F1381
 18276 ;; This function is called by:
 18277 ;;		_RN487X_DataReady
 18278 ;; This function uses a non-reentrant model
 18279 ;;
 18280                           
 18281     0E20                     _RN487X_FilterData:	
 18282                           ;psect for function _RN487X_FilterData
 18283                           
 18284     0E20                     l13470:	
 18285                           ;incstack = 0
 18286                           ; Regs used in _RN487X_FilterData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18287                           
 18288                           
 18289                           ;mcc_generated_files/rn487x/rn487x.c: 365:     static _Bool asyncBuffering = 0;;mcc_gene
      +                          rated_files/rn487x/rn487x.c: 367:     uint8_t readChar = RN487X.Read();
 18290     0E20  306A               	movlw	low ((_RN487X+2)| (0+32768))
 18291     0E21  0084               	movwf	4
 18292     0E22  3098               	movlw	high ((_RN487X+2)| (0+32768))
 18293     0E23  0085               	movwf	5
 18294     0E24  3F01               	moviw [1]fsr0
 18295     0E25  008A               	movwf	10
 18296     0E26  3F00               	moviw [0]fsr0
 18297     0E27  000A               	callw
 18298     0E28  318E               	pagesel	$
 18299     0E29  0140               	movlb	0	; select bank0
 18300     0E2A  00C8               	movwf	RN487X_FilterData@readChar
 18301     0E2B                     l13472:
 18302                           
 18303                           ;mcc_generated_files/rn487x/rn487x.c: 369:     if(asyncBuffering == 1)
 18304     0E2B  0364               	decf	RN487X_FilterData@asyncBuffering,w
 18305     0E2C  1D03               	btfss	3,2
 18306     0E2D  2E2F               	goto	u10311
 18307     0E2E  2E30               	goto	u10310
 18308     0E2F                     u10311:
 18309     0E2F  2E68               	goto	l13488
 18310     0E30                     u10310:
 18311     0E30                     l13474:
 18312                           
 18313                           ;mcc_generated_files/rn487x/rn487x.c: 370:     {;mcc_generated_files/rn487x/rn487x.c: 37
      +                          1:         if(readChar == ('%'))
 18314     0E30  3025               	movlw	37
 18315     0E31  0648               	xorwf	RN487X_FilterData@readChar,w
 18316     0E32  1D03               	btfss	3,2
 18317     0E33  2E35               	goto	u10321
 18318     0E34  2E36               	goto	u10320
 18319     0E35                     u10321:
 18320     0E35  2E4A               	goto	l13482
 18321     0E36                     u10320:
 18322     0E36                     l13476:
 18323                           
 18324                           ;mcc_generated_files/rn487x/rn487x.c: 372:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 373:             asyncBuffering = 0;
 18325     0E36  01E4               	clrf	RN487X_FilterData@asyncBuffering
 18326     0E37                     l13478:
 18327                           
 18328                           ;mcc_generated_files/rn487x/rn487x.c: 374:             *pHead = '\0';
 18329     0E37  084E               	movf	_pHead,w
 18330     0E38  0086               	movwf	6
 18331     0E39  084F               	movf	_pHead+1,w
 18332     0E3A  0087               	movwf	7
 18333     0E3B  0181               	clrf	1
 18334     0E3C                     l13480:
 18335                           
 18336                           ;mcc_generated_files/rn487x/rn487x.c: 375:             RN487X.AsyncHandler(asyncBuffer);
 18337     0E3C  0851               	movf	_asyncBuffer+1,w
 18338     0E3D  00C2               	movwf	RN487X_MessageHandler@message+1
 18339     0E3E  0850               	movf	_asyncBuffer,w
 18340     0E3F  00C1               	movwf	RN487X_MessageHandler@message
 18341     0E40  3078               	movlw	low ((_RN487X+16)| (0+32768))
 18342     0E41  0084               	movwf	4
 18343     0E42  3098               	movlw	high ((_RN487X+16)| (0+32768))
 18344     0E43  0085               	movwf	5
 18345     0E44  3F01               	moviw [1]fsr0
 18346     0E45  008A               	movwf	10
 18347     0E46  3F00               	moviw [0]fsr0
 18348     0E47  000A               	callw
 18349     0E48  318E               	pagesel	$
 18350                           
 18351                           ;mcc_generated_files/rn487x/rn487x.c: 376:         }
 18352     0E49  2E79               	goto	l973
 18353     0E4A                     l13482:
 18354     0E4A  0867               	movf	_asyncBufferSize,w
 18355     0E4B  00C4               	movwf	??_RN487X_FilterData
 18356     0E4C  01C5               	clrf	??_RN487X_FilterData+1
 18357     0E4D  0844               	movf	??_RN487X_FilterData,w
 18358     0E4E  0750               	addwf	_asyncBuffer,w
 18359     0E4F  00C6               	movwf	??_RN487X_FilterData+2
 18360     0E50  0845               	movf	??_RN487X_FilterData+1,w
 18361     0E51  3D51               	addwfc	_asyncBuffer+1,w
 18362     0E52  00C7               	movwf	??_RN487X_FilterData+3
 18363     0E53  0847               	movf	??_RN487X_FilterData+3,w
 18364     0E54  024F               	subwf	_pHead+1,w
 18365     0E55  1D03               	skipz
 18366     0E56  2E59               	goto	u10335
 18367     0E57  0846               	movf	??_RN487X_FilterData+2,w
 18368     0E58  024E               	subwf	_pHead,w
 18369     0E59                     u10335:
 18370     0E59  1803               	skipnc
 18371     0E5A  2E5C               	goto	u10331
 18372     0E5B  2E5D               	goto	u10330
 18373     0E5C                     u10331:
 18374     0E5C  2E79               	goto	l973
 18375     0E5D                     u10330:
 18376     0E5D                     l13484:
 18377                           
 18378                           ;mcc_generated_files/rn487x/rn487x.c: 378:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 379:             *pHead++ = readChar;
 18379     0E5D  084E               	movf	_pHead,w
 18380     0E5E  0086               	movwf	6
 18381     0E5F  084F               	movf	_pHead+1,w
 18382     0E60  0087               	movwf	7
 18383     0E61  0848               	movf	RN487X_FilterData@readChar,w
 18384     0E62  0081               	movwf	1
 18385     0E63                     l13486:
 18386     0E63  3001               	movlw	1
 18387     0E64  07CE               	addwf	_pHead,f
 18388     0E65  3000               	movlw	0
 18389     0E66  3DCF               	addwfc	_pHead+1,f
 18390     0E67  2E79               	goto	l973
 18391     0E68                     l13488:
 18392                           
 18393                           ;mcc_generated_files/rn487x/rn487x.c: 383:     {;mcc_generated_files/rn487x/rn487x.c: 38
      +                          4:         if (readChar == ('%'))
 18394     0E68  3025               	movlw	37
 18395     0E69  0648               	xorwf	RN487X_FilterData@readChar,w
 18396     0E6A  1D03               	btfss	3,2
 18397     0E6B  2E6D               	goto	u10341
 18398     0E6C  2E6E               	goto	u10340
 18399     0E6D                     u10341:
 18400     0E6D  2E75               	goto	l974
 18401     0E6E                     u10340:
 18402     0E6E                     l13490:
 18403                           
 18404                           ;mcc_generated_files/rn487x/rn487x.c: 385:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 386:             asyncBuffering = 1;
 18405     0E6E  01E4               	clrf	RN487X_FilterData@asyncBuffering
 18406     0E6F  0AE4               	incf	RN487X_FilterData@asyncBuffering,f
 18407     0E70                     l13492:
 18408                           
 18409                           ;mcc_generated_files/rn487x/rn487x.c: 387:             pHead = asyncBuffer;
 18410     0E70  0851               	movf	_asyncBuffer+1,w
 18411     0E71  00CF               	movwf	_pHead+1
 18412     0E72  0850               	movf	_asyncBuffer,w
 18413     0E73  00CE               	movwf	_pHead
 18414                           
 18415                           ;mcc_generated_files/rn487x/rn487x.c: 388:         }
 18416     0E74  2E79               	goto	l973
 18417     0E75                     l974:	
 18418                           ;mcc_generated_files/rn487x/rn487x.c: 389:         else
 18419                           
 18420                           
 18421                           ;mcc_generated_files/rn487x/rn487x.c: 390:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 391:             dataReady = 1;
 18422     0E75  01E5               	clrf	_dataReady
 18423     0E76  0AE5               	incf	_dataReady,f
 18424     0E77                     l13494:
 18425                           
 18426                           ;mcc_generated_files/rn487x/rn487x.c: 392:             peek = readChar;
 18427     0E77  0848               	movf	RN487X_FilterData@readChar,w
 18428     0E78  00E6               	movwf	_peek
 18429     0E79                     l973:	
 18430                           ;mcc_generated_files/rn487x/rn487x.c: 394:     }
 18431                           
 18432                           
 18433                           ;mcc_generated_files/rn487x/rn487x.c: 395:     return dataReady;
 18434     0E79  0140               	movlb	0	; select bank0
 18435     0E7A  0865               	movf	_dataReady,w
 18436     0E7B                     l976:
 18437     0E7B  0008               	return
 18438     0E7C                     __end_of_RN487X_FilterData:
 18439                           
 18440                           	psect	text45
 18441     0A6D                     __ptext45:	
 18442 ;; *************** function _RN487X_MessageHandler *****************
 18443 ;; Defined at:
 18444 ;;		line 368 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 18445 ;; Parameters:    Size  Location     Type
 18446 ;;  message         2   33[BANK0 ] PTR unsigned char 
 18447 ;;		 -> statusBuffer@main$F3783(80), statusBuffer(80), NULL(0), 
 18448 ;; Auto vars:     Size  Location     Type
 18449 ;;  messageType     1   35[BANK0 ] enum E12962
 18450 ;; Return value:  Size  Location     Type
 18451 ;;                  1    wreg      void 
 18452 ;; Registers used:
 18453 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18454 ;; Tracked objects:
 18455 ;;		On entry : 0/0
 18456 ;;		On exit  : 0/0
 18457 ;;		Unchanged: 0/0
 18458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18459 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18460 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18462 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18463 ;;Total ram usage:        3 bytes
 18464 ;; Hardware stack levels used: 1
 18465 ;; Hardware stack levels required when called: 6
 18466 ;; This function calls:
 18467 ;;		_rn487x_PrintIndicatorCharacters
 18468 ;;		_rn487x_PrintMessage
 18469 ;;		_rn487x_PrintMessageEnd
 18470 ;;		_rn487x_PrintMessageStart
 18471 ;;		_strstr
 18472 ;; This function is called by:
 18473 ;;		_RN487X_FilterData
 18474 ;; This function uses a non-reentrant model
 18475 ;;
 18476                           
 18477     0A6D                     _RN487X_MessageHandler:	
 18478                           ;psect for function _RN487X_MessageHandler
 18479                           
 18480     0A6D                     l13380:	
 18481                           ;incstack = 0
 18482                           ; Regs used in _RN487X_MessageHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18483                           
 18484                           
 18485                           ;mcc_generated_files/rn487x/rn487x_interface.c: 368: static void RN487X_MessageHandler(c
      +                          har* message);mcc_generated_files/rn487x/rn487x_interface.c: 369: {;mcc_generated_files/
      +                          rn487x/rn487x_interface.c: 370:     RN487X_MESSAGE_TYPE messageType;;mcc_generated_files
      +                          /rn487x/rn487x_interface.c: 371:     rn487x_PrintMessageStart();
 18486     0A6D  3196  261B  318A   	fcall	_rn487x_PrintMessageStart
 18487                           
 18488                           ;mcc_generated_files/rn487x/rn487x_interface.c: 372:     if (strstr(message, "DISCONNECT
      +                          "))
 18489     0A70  0140               	movlb	0	; select bank0
 18490     0A71  0842               	movf	RN487X_MessageHandler@message+1,w
 18491     0A72  00F9               	movwf	strstr@h+1
 18492     0A73  0841               	movf	RN487X_MessageHandler@message,w
 18493     0A74  00F8               	movwf	strstr@h
 18494     0A75  300B               	movlw	low (STR_2| (0+32768))
 18495     0A76  00FA               	movwf	strstr@n
 18496     0A77  30A0               	movlw	high (STR_2| (0+32768))
 18497     0A78  00FB               	movwf	strstr@n+1
 18498     0A79  318D  25CB  318A   	fcall	_strstr
 18499     0A7C  0878               	movf	?_strstr,w
 18500     0A7D  0479               	iorwf	?_strstr+1,w
 18501     0A7E  1903               	btfsc	3,2
 18502     0A7F  2A81               	goto	u10191
 18503     0A80  2A82               	goto	u10190
 18504     0A81                     u10191:
 18505     0A81  2A86               	goto	l13384
 18506     0A82                     u10190:
 18507     0A82                     l13382:
 18508                           
 18509                           ;mcc_generated_files/rn487x/rn487x_interface.c: 373:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 374:         messageType = DISCONNECT_MSG;
 18510     0A82  0140               	movlb	0	; select bank0
 18511     0A83  01C3               	clrf	RN487X_MessageHandler@messageType
 18512                           
 18513                           ;mcc_generated_files/rn487x/rn487x_interface.c: 375:         connected = 0;
 18514     0A84  01E8               	clrf	_connected
 18515                           
 18516                           ;mcc_generated_files/rn487x/rn487x_interface.c: 376:     }
 18517     0A85  2AA1               	goto	l13390
 18518     0A86                     l13384:
 18519     0A86  0140               	movlb	0	; select bank0
 18520     0A87  0842               	movf	RN487X_MessageHandler@message+1,w
 18521     0A88  00F9               	movwf	strstr@h+1
 18522     0A89  0841               	movf	RN487X_MessageHandler@message,w
 18523     0A8A  00F8               	movwf	strstr@h
 18524     0A8B  307A               	movlw	low (STR_4| (0+32768))
 18525     0A8C  00FA               	movwf	strstr@n
 18526     0A8D  3098               	movlw	high (STR_4| (0+32768))
 18527     0A8E  00FB               	movwf	strstr@n+1
 18528     0A8F  318D  25CB  318A   	fcall	_strstr
 18529     0A92  0878               	movf	?_strstr,w
 18530     0A93  0479               	iorwf	?_strstr+1,w
 18531     0A94  1903               	btfsc	3,2
 18532     0A95  2A97               	goto	u10201
 18533     0A96  2A98               	goto	u10200
 18534     0A97                     u10201:
 18535     0A97  2A9E               	goto	l13388
 18536     0A98                     u10200:
 18537     0A98                     l13386:
 18538                           
 18539                           ;mcc_generated_files/rn487x/rn487x_interface.c: 378:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 379:         messageType = STREAM_OPEN_MSG;
 18540     0A98  0140               	movlb	0	; select bank0
 18541     0A99  01C3               	clrf	RN487X_MessageHandler@messageType
 18542     0A9A  0AC3               	incf	RN487X_MessageHandler@messageType,f
 18543                           
 18544                           ;mcc_generated_files/rn487x/rn487x_interface.c: 380:         connected = 1;
 18545     0A9B  01E8               	clrf	_connected
 18546     0A9C  0AE8               	incf	_connected,f
 18547                           
 18548                           ;mcc_generated_files/rn487x/rn487x_interface.c: 381:     }
 18549     0A9D  2AA1               	goto	l13390
 18550     0A9E                     l13388:
 18551                           
 18552                           ;mcc_generated_files/rn487x/rn487x_interface.c: 383:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 384:         messageType = GENERAL_MSG;
 18553     0A9E  3002               	movlw	2
 18554     0A9F  0140               	movlb	0	; select bank0
 18555     0AA0  00C3               	movwf	RN487X_MessageHandler@messageType
 18556     0AA1                     l13390:
 18557                           
 18558                           ;mcc_generated_files/rn487x/rn487x_interface.c: 386:     rn487x_PrintMessage(message);
 18559     0AA1  0842               	movf	RN487X_MessageHandler@message+1,w
 18560     0AA2  00F8               	movwf	rn487x_PrintMessage@passedMessage+1
 18561     0AA3  0841               	movf	RN487X_MessageHandler@message,w
 18562     0AA4  00F7               	movwf	rn487x_PrintMessage@passedMessage
 18563     0AA5  3197  2795  318A   	fcall	_rn487x_PrintMessage
 18564     0AA8                     l13392:
 18565                           
 18566                           ;mcc_generated_files/rn487x/rn487x_interface.c: 387:     rn487x_PrintMessageEnd();
 18567     0AA8  318B  238D  318A   	fcall	_rn487x_PrintMessageEnd
 18568     0AAB                     l13394:
 18569                           
 18570                           ;mcc_generated_files/rn487x/rn487x_interface.c: 388:     rn487x_PrintIndicatorCharacters
      +                          (messageType);
 18571     0AAB  0140               	movlb	0	; select bank0
 18572     0AAC  0843               	movf	RN487X_MessageHandler@messageType,w
 18573     0AAD  3194  2446  318A   	fcall	_rn487x_PrintIndicatorCharacters
 18574     0AB0                     l855:
 18575     0AB0  0008               	return
 18576     0AB1                     __end_of_RN487X_MessageHandler:
 18577                           
 18578                           	psect	text46
 18579     0DCB                     __ptext46:	
 18580 ;; *************** function _strstr *****************
 18581 ;; Defined at:
 18582 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strstr.c"
 18583 ;; Parameters:    Size  Location     Type
 18584 ;;  h               2    8[COMMON] PTR const unsigned char 
 18585 ;;		 -> statusBuffer@main$F3783(80), statusBuffer(80), NULL(0), 
 18586 ;;  n               2   10[COMMON] PTR const unsigned char 
 18587 ;;		 -> STR_5(12), STR_3(11), 
 18588 ;; Auto vars:     Size  Location     Type
 18589 ;;  nl              2    2[BANK0 ] unsigned int 
 18590 ;; Return value:  Size  Location     Type
 18591 ;;                  2    8[COMMON] PTR unsigned char 
 18592 ;; Registers used:
 18593 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18594 ;; Tracked objects:
 18595 ;;		On entry : 0/0
 18596 ;;		On exit  : 0/0
 18597 ;;		Unchanged: 0/0
 18598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18599 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18600 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18601 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18602 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18603 ;;Total ram usage:        8 bytes
 18604 ;; Hardware stack levels used: 1
 18605 ;; Hardware stack levels required when called: 5
 18606 ;; This function calls:
 18607 ;;		_strchr
 18608 ;;		_strlen
 18609 ;;		_strncmp
 18610 ;; This function is called by:
 18611 ;;		_RN487X_MessageHandler
 18612 ;; This function uses a non-reentrant model
 18613 ;;
 18614                           
 18615     0DCB                     _strstr:	
 18616                           ;psect for function _strstr
 18617                           
 18618     0DCB                     l13310:	
 18619                           ;incstack = 0
 18620                           ; Regs used in _strstr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18621                           
 18622     0DCB  087A               	movf	strstr@n,w
 18623     0DCC  047B               	iorwf	strstr@n+1,w
 18624     0DCD  1903               	btfsc	3,2
 18625     0DCE  2DD0               	goto	u10071
 18626     0DCF  2DD1               	goto	u10070
 18627     0DD0                     u10071:
 18628     0DD0  2E1D               	goto	l13324
 18629     0DD1                     u10070:
 18630     0DD1                     l13312:
 18631     0DD1  087B               	movf	strstr@n+1,w
 18632     0DD2  00F2               	movwf	strlen@s+1
 18633     0DD3  087A               	movf	strstr@n,w
 18634     0DD4  00F1               	movwf	strlen@s
 18635     0DD5  3192  2293  318D   	fcall	_strlen
 18636     0DD8  0872               	movf	?_strlen+1,w
 18637     0DD9  0140               	movlb	0	; select bank0
 18638     0DDA  00A3               	movwf	strstr@nl+1
 18639     0DDB  0871               	movf	?_strlen,w
 18640     0DDC  00A2               	movwf	strstr@nl
 18641     0DDD  2E0E               	goto	l13320
 18642     0DDE                     l13314:
 18643     0DDE  0879               	movf	strstr@h+1,w
 18644     0DDF  00F2               	movwf	strncmp@l+1
 18645     0DE0  0878               	movf	strstr@h,w
 18646     0DE1  00F1               	movwf	strncmp@l
 18647     0DE2  087B               	movf	strstr@n+1,w
 18648     0DE3  00F4               	movwf	strncmp@r+1
 18649     0DE4  087A               	movf	strstr@n,w
 18650     0DE5  00F3               	movwf	strncmp@r
 18651     0DE6  0140               	movlb	0	; select bank0
 18652     0DE7  0823               	movf	strstr@nl+1,w
 18653     0DE8  00F6               	movwf	strncmp@n+1
 18654     0DE9  0822               	movf	strstr@nl,w
 18655     0DEA  00F5               	movwf	strncmp@n
 18656     0DEB  318C  242B  318D   	fcall	_strncmp
 18657     0DEE  0871               	movf	?_strncmp,w
 18658     0DEF  0472               	iorwf	?_strncmp+1,w
 18659     0DF0  1D03               	btfss	3,2
 18660     0DF1  2DF3               	goto	u10081
 18661     0DF2  2DF4               	goto	u10080
 18662     0DF3                     u10081:
 18663     0DF3  2DF5               	goto	l13318
 18664     0DF4                     u10080:
 18665     0DF4                     l13316:
 18666     0DF4  2E1F               	goto	l3324
 18667     0DF5                     l13318:
 18668     0DF5  0878               	movf	strstr@h,w
 18669     0DF6  3E01               	addlw	1
 18670     0DF7  00F1               	movwf	strchr@s
 18671     0DF8  3000               	movlw	0
 18672     0DF9  3D79               	addwfc	strstr@h+1,w
 18673     0DFA  00F2               	movwf	strchr@s+1
 18674     0DFB  087A               	movf	strstr@n,w
 18675     0DFC  0084               	movwf	4
 18676     0DFD  087B               	movf	strstr@n+1,w
 18677     0DFE  0085               	movwf	5
 18678     0DFF  0800               	movf	0,w	;code access
 18679     0E00  0140               	movlb	0	; select bank0
 18680     0E01  00A0               	movwf	??_strstr
 18681     0E02  01A1               	clrf	??_strstr+1
 18682     0E03  0820               	movf	??_strstr,w
 18683     0E04  00F3               	movwf	strchr@c
 18684     0E05  0821               	movf	??_strstr+1,w
 18685     0E06  00F4               	movwf	strchr@c+1
 18686     0E07  3193  2382  318D   	fcall	_strchr
 18687     0E0A  0872               	movf	?_strchr+1,w
 18688     0E0B  00F9               	movwf	strstr@h+1
 18689     0E0C  0871               	movf	?_strchr,w
 18690     0E0D  00F8               	movwf	strstr@h
 18691     0E0E                     l13320:
 18692     0E0E  0878               	movf	strstr@h,w
 18693     0E0F  0479               	iorwf	strstr@h+1,w
 18694     0E10  1903               	btfsc	3,2
 18695     0E11  2E13               	goto	u10091
 18696     0E12  2E14               	goto	u10090
 18697     0E13                     u10091:
 18698     0E13  2E1D               	goto	l13324
 18699     0E14                     u10090:
 18700     0E14                     l13322:
 18701     0E14  0878               	movf	strstr@h,w
 18702     0E15  0086               	movwf	6
 18703     0E16  0879               	movf	strstr@h+1,w
 18704     0E17  0087               	movwf	7
 18705     0E18  0801               	movf	1,w
 18706     0E19  1D03               	btfss	3,2
 18707     0E1A  2E1C               	goto	u10101
 18708     0E1B  2E1D               	goto	u10100
 18709     0E1C                     u10101:
 18710     0E1C  2DDE               	goto	l13314
 18711     0E1D                     u10100:
 18712     0E1D                     l13324:
 18713     0E1D  01F8               	clrf	?_strstr
 18714     0E1E  01F9               	clrf	?_strstr+1
 18715     0E1F                     l3324:
 18716     0E1F  0008               	return
 18717     0E20                     __end_of_strstr:
 18718                           
 18719                           	psect	text47
 18720     0C2B                     __ptext47:	
 18721 ;; *************** function _strncmp *****************
 18722 ;; Defined at:
 18723 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strncmp.c"
 18724 ;; Parameters:    Size  Location     Type
 18725 ;;  l               2    1[COMMON] PTR const unsigned char 
 18726 ;;		 -> statusBuffer@main$F3783(80), statusBuffer(80), NULL(0), 
 18727 ;;  r               2    3[COMMON] PTR const unsigned char 
 18728 ;;		 -> STR_5(12), STR_3(11), 
 18729 ;;  n               2    5[COMMON] unsigned int 
 18730 ;; Auto vars:     Size  Location     Type
 18731 ;;		None
 18732 ;; Return value:  Size  Location     Type
 18733 ;;                  2    1[COMMON] int 
 18734 ;; Registers used:
 18735 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 18736 ;; Tracked objects:
 18737 ;;		On entry : 0/0
 18738 ;;		On exit  : 0/0
 18739 ;;		Unchanged: 0/0
 18740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18741 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18743 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18744 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18745 ;;Total ram usage:        7 bytes
 18746 ;; Hardware stack levels used: 1
 18747 ;; Hardware stack levels required when called: 4
 18748 ;; This function calls:
 18749 ;;		Nothing
 18750 ;; This function is called by:
 18751 ;;		_strstr
 18752 ;; This function uses a non-reentrant model
 18753 ;;
 18754                           
 18755     0C2B                     _strncmp:	
 18756                           ;psect for function _strncmp
 18757                           
 18758     0C2B                     l13156:	
 18759                           ;incstack = 0
 18760                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
 18761                           
 18762     0C2B  3001               	movlw	1
 18763     0C2C  02F5               	subwf	strncmp@n,f
 18764     0C2D  3000               	movlw	0
 18765     0C2E  3BF6               	subwfb	strncmp@n+1,f
 18766     0C2F  0A75               	incf	strncmp@n,w
 18767     0C30  1D03               	skipz
 18768     0C31  2C36               	goto	u9911
 18769     0C32  0A76               	incf	strncmp@n+1,w
 18770     0C33  1D03               	btfss	3,2
 18771     0C34  2C36               	goto	u9911
 18772     0C35  2C37               	goto	u9910
 18773     0C36                     u9911:
 18774     0C36  2C46               	goto	l13164
 18775     0C37                     u9910:
 18776     0C37                     l13158:
 18777     0C37  01F1               	clrf	?_strncmp
 18778     0C38  01F2               	clrf	?_strncmp+1
 18779     0C39  2C7C               	goto	l3337
 18780     0C3A                     l13162:
 18781     0C3A  3001               	movlw	1
 18782     0C3B  07F1               	addwf	strncmp@l,f
 18783     0C3C  3000               	movlw	0
 18784     0C3D  3DF2               	addwfc	strncmp@l+1,f
 18785     0C3E  3001               	movlw	1
 18786     0C3F  07F3               	addwf	strncmp@r,f
 18787     0C40  3000               	movlw	0
 18788     0C41  3DF4               	addwfc	strncmp@r+1,f
 18789     0C42  3001               	movlw	1
 18790     0C43  02F5               	subwf	strncmp@n,f
 18791     0C44  3000               	movlw	0
 18792     0C45  3BF6               	subwfb	strncmp@n+1,f
 18793     0C46                     l13164:
 18794     0C46  0871               	movf	strncmp@l,w
 18795     0C47  0086               	movwf	6
 18796     0C48  0872               	movf	strncmp@l+1,w
 18797     0C49  0087               	movwf	7
 18798     0C4A  0801               	movf	1,w
 18799     0C4B  1903               	btfsc	3,2
 18800     0C4C  2C4E               	goto	u9921
 18801     0C4D  2C4F               	goto	u9920
 18802     0C4E                     u9921:
 18803     0C4E  2C6E               	goto	l13172
 18804     0C4F                     u9920:
 18805     0C4F                     l13166:
 18806     0C4F  0873               	movf	strncmp@r,w
 18807     0C50  0084               	movwf	4
 18808     0C51  0874               	movf	strncmp@r+1,w
 18809     0C52  0085               	movwf	5
 18810     0C53  0012               	moviw fsr0++
 18811     0C54  1903               	btfsc	3,2
 18812     0C55  2C57               	goto	u9931
 18813     0C56  2C58               	goto	u9930
 18814     0C57                     u9931:
 18815     0C57  2C6E               	goto	l13172
 18816     0C58                     u9930:
 18817     0C58                     l13168:
 18818     0C58  0875               	movf	strncmp@n,w
 18819     0C59  0476               	iorwf	strncmp@n+1,w
 18820     0C5A  1903               	btfsc	3,2
 18821     0C5B  2C5D               	goto	u9941
 18822     0C5C  2C5E               	goto	u9940
 18823     0C5D                     u9941:
 18824     0C5D  2C6E               	goto	l13172
 18825     0C5E                     u9940:
 18826     0C5E                     l13170:
 18827     0C5E  0873               	movf	strncmp@r,w
 18828     0C5F  0084               	movwf	4
 18829     0C60  0874               	movf	strncmp@r+1,w
 18830     0C61  0085               	movwf	5
 18831     0C62  0800               	movf	0,w	;code access
 18832     0C63  00F7               	movwf	??_strncmp
 18833     0C64  0871               	movf	strncmp@l,w
 18834     0C65  0086               	movwf	6
 18835     0C66  0872               	movf	strncmp@l+1,w
 18836     0C67  0087               	movwf	7
 18837     0C68  0801               	movf	1,w
 18838     0C69  0677               	xorwf	??_strncmp,w
 18839     0C6A  1903               	skipnz
 18840     0C6B  2C6D               	goto	u9951
 18841     0C6C  2C6E               	goto	u9950
 18842     0C6D                     u9951:
 18843     0C6D  2C3A               	goto	l13162
 18844     0C6E                     u9950:
 18845     0C6E                     l13172:
 18846     0C6E  0871               	movf	strncmp@l,w
 18847     0C6F  0086               	movwf	6
 18848     0C70  0872               	movf	strncmp@l+1,w
 18849     0C71  0087               	movwf	7
 18850     0C72  0873               	movf	strncmp@r,w
 18851     0C73  0084               	movwf	4
 18852     0C74  0874               	movf	strncmp@r+1,w
 18853     0C75  0085               	movwf	5
 18854     0C76  0800               	movf	0,w	;code access
 18855     0C77  0201               	subwf	1,w
 18856     0C78  00F1               	movwf	?_strncmp
 18857     0C79  01F2               	clrf	?_strncmp+1
 18858     0C7A  1C03               	skipc
 18859     0C7B  03F2               	decf	?_strncmp+1,f
 18860     0C7C                     l3337:
 18861     0C7C  0008               	return
 18862     0C7D                     __end_of_strncmp:
 18863                           
 18864                           	psect	text48
 18865     1382                     __ptext48:	
 18866 ;; *************** function _strchr *****************
 18867 ;; Defined at:
 18868 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strchr.c"
 18869 ;; Parameters:    Size  Location     Type
 18870 ;;  s               2    1[COMMON] PTR const unsigned char 
 18871 ;;		 -> statusBuffer@main$F3783(80), statusBuffer(80), NULL(0), 
 18872 ;;  c               2    3[COMMON] int 
 18873 ;; Auto vars:     Size  Location     Type
 18874 ;;		None
 18875 ;; Return value:  Size  Location     Type
 18876 ;;                  2    1[COMMON] PTR unsigned char 
 18877 ;; Registers used:
 18878 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18879 ;; Tracked objects:
 18880 ;;		On entry : 0/0
 18881 ;;		On exit  : 0/0
 18882 ;;		Unchanged: 0/0
 18883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18884 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18886 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18887 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18888 ;;Total ram usage:        6 bytes
 18889 ;; Hardware stack levels used: 1
 18890 ;; Hardware stack levels required when called: 4
 18891 ;; This function calls:
 18892 ;;		Nothing
 18893 ;; This function is called by:
 18894 ;;		_strstr
 18895 ;; This function uses a non-reentrant model
 18896 ;;
 18897                           
 18898     1382                     _strchr:	
 18899                           ;psect for function _strchr
 18900                           
 18901     1382                     l3330:	
 18902                           ;incstack = 0
 18903                           ; Regs used in _strchr: [wreg+fsr1l+fsr1h+status,2+status,0]
 18904                           
 18905     1382                     l13176:
 18906     1382  0871               	movf	strchr@s,w
 18907     1383  0086               	movwf	6
 18908     1384  0872               	movf	strchr@s+1,w
 18909     1385  0087               	movwf	7
 18910     1386  0801               	movf	1,w
 18911     1387  0673               	xorwf	strchr@c,w
 18912     1388  1D03               	skipz
 18913     1389  2B8B               	goto	u9961
 18914     138A  2B8C               	goto	u9960
 18915     138B                     u9961:
 18916     138B  2B8D               	goto	l13180
 18917     138C                     u9960:
 18918     138C                     l13178:
 18919     138C  2B9F               	goto	l3332
 18920     138D                     l13180:
 18921     138D  0872               	movf	strchr@s+1,w
 18922     138E  00F6               	movwf	??_strchr+1
 18923     138F  0871               	movf	strchr@s,w
 18924     1390  00F5               	movwf	??_strchr
 18925     1391  0AF1               	incf	strchr@s,f
 18926     1392  1903               	skipnz
 18927     1393  0AF2               	incf	strchr@s+1,f
 18928     1394  0875               	movf	??_strchr,w
 18929     1395  0086               	movwf	6
 18930     1396  0876               	movf	??_strchr+1,w
 18931     1397  0087               	movwf	7
 18932     1398  0801               	movf	1,w
 18933     1399  1D03               	btfss	3,2
 18934     139A  2B9C               	goto	u9971
 18935     139B  2B9D               	goto	u9970
 18936     139C                     u9971:
 18937     139C  2B82               	goto	l3330
 18938     139D                     u9970:
 18939     139D                     l13182:
 18940     139D  01F1               	clrf	?_strchr
 18941     139E  01F2               	clrf	?_strchr+1
 18942     139F                     l3332:
 18943     139F  0008               	return
 18944     13A0                     __end_of_strchr:
 18945                           
 18946                           	psect	text49
 18947     161B                     __ptext49:	
 18948 ;; *************** function _rn487x_PrintMessageStart *****************
 18949 ;; Defined at:
 18950 ;;		line 323 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 18951 ;; Parameters:    Size  Location     Type
 18952 ;;		None
 18953 ;; Auto vars:     Size  Location     Type
 18954 ;;		None
 18955 ;; Return value:  Size  Location     Type
 18956 ;;                  1    wreg      void 
 18957 ;; Registers used:
 18958 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18959 ;; Tracked objects:
 18960 ;;		On entry : 0/0
 18961 ;;		On exit  : 0/0
 18962 ;;		Unchanged: 0/0
 18963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18968 ;;Total ram usage:        0 bytes
 18969 ;; Hardware stack levels used: 1
 18970 ;; Hardware stack levels required when called: 5
 18971 ;; This function calls:
 18972 ;;		_EUSART1_Write
 18973 ;;		_EUSART2_Write
 18974 ;; This function is called by:
 18975 ;;		_RN487X_MessageHandler
 18976 ;; This function uses a non-reentrant model
 18977 ;;
 18978                           
 18979     161B                     _rn487x_PrintMessageStart:	
 18980                           ;psect for function _rn487x_PrintMessageStart
 18981                           
 18982     161B                     l13288:	
 18983                           ;incstack = 0
 18984                           ; Regs used in _rn487x_PrintMessageStart: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18985                           
 18986                           
 18987                           ;mcc_generated_files/rn487x/rn487x_interface.c: 325:     uart[UART_CDC].Write('<');
 18988     161B  303C               	movlw	60
 18989     161C  00F1               	movwf	EUSART2_Write@txData
 18990     161D  3002               	movlw	low ((_uart+2)| (0+32768))
 18991     161E  0084               	movwf	4
 18992     161F  3098               	movlw	high ((_uart+2)| (0+32768))
 18993     1620  0085               	movwf	5
 18994     1621  3F01               	moviw [1]fsr0
 18995     1622  008A               	movwf	10
 18996     1623  3F00               	moviw [0]fsr0
 18997     1624  000A               	callw
 18998     1625  3196               	pagesel	$
 18999                           
 19000                           ;mcc_generated_files/rn487x/rn487x_interface.c: 326:     uart[UART_CDC].Write('<');
 19001     1626  303C               	movlw	60
 19002     1627  00F1               	movwf	EUSART2_Write@txData
 19003     1628  3002               	movlw	low ((_uart+2)| (0+32768))
 19004     1629  0084               	movwf	4
 19005     162A  3098               	movlw	high ((_uart+2)| (0+32768))
 19006     162B  0085               	movwf	5
 19007     162C  3F01               	moviw [1]fsr0
 19008     162D  008A               	movwf	10
 19009     162E  3F00               	moviw [0]fsr0
 19010     162F  000A               	callw
 19011     1630  3196               	pagesel	$
 19012                           
 19013                           ;mcc_generated_files/rn487x/rn487x_interface.c: 327:     uart[UART_CDC].Write('<');
 19014     1631  303C               	movlw	60
 19015     1632  00F1               	movwf	EUSART2_Write@txData
 19016     1633  3002               	movlw	low ((_uart+2)| (0+32768))
 19017     1634  0084               	movwf	4
 19018     1635  3098               	movlw	high ((_uart+2)| (0+32768))
 19019     1636  0085               	movwf	5
 19020     1637  3F01               	moviw [1]fsr0
 19021     1638  008A               	movwf	10
 19022     1639  3F00               	moviw [0]fsr0
 19023     163A  000A               	callw
 19024     163B  3196               	pagesel	$
 19025                           
 19026                           ;mcc_generated_files/rn487x/rn487x_interface.c: 328:     uart[UART_CDC].Write(' ');
 19027     163C  3020               	movlw	32
 19028     163D  00F1               	movwf	EUSART2_Write@txData
 19029     163E  3002               	movlw	low ((_uart+2)| (0+32768))
 19030     163F  0084               	movwf	4
 19031     1640  3098               	movlw	high ((_uart+2)| (0+32768))
 19032     1641  0085               	movwf	5
 19033     1642  3F01               	moviw [1]fsr0
 19034     1643  008A               	movwf	10
 19035     1644  3F00               	moviw [0]fsr0
 19036     1645  000A               	callw
 19037     1646  3196               	pagesel	$
 19038     1647                     l832:
 19039     1647  0008               	return
 19040     1648                     __end_of_rn487x_PrintMessageStart:
 19041                           
 19042                           	psect	text50
 19043     0B8D                     __ptext50:	
 19044 ;; *************** function _rn487x_PrintMessageEnd *****************
 19045 ;; Defined at:
 19046 ;;		line 331 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19047 ;; Parameters:    Size  Location     Type
 19048 ;;		None
 19049 ;; Auto vars:     Size  Location     Type
 19050 ;;		None
 19051 ;; Return value:  Size  Location     Type
 19052 ;;                  1    wreg      void 
 19053 ;; Registers used:
 19054 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19055 ;; Tracked objects:
 19056 ;;		On entry : 0/0
 19057 ;;		On exit  : 0/0
 19058 ;;		Unchanged: 0/0
 19059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19064 ;;Total ram usage:        0 bytes
 19065 ;; Hardware stack levels used: 1
 19066 ;; Hardware stack levels required when called: 5
 19067 ;; This function calls:
 19068 ;;		_EUSART1_Write
 19069 ;;		_EUSART2_Write
 19070 ;; This function is called by:
 19071 ;;		_RN487X_MessageHandler
 19072 ;; This function uses a non-reentrant model
 19073 ;;
 19074                           
 19075     0B8D                     _rn487x_PrintMessageEnd:	
 19076                           ;psect for function _rn487x_PrintMessageEnd
 19077                           
 19078     0B8D                     l13290:	
 19079                           ;incstack = 0
 19080                           ; Regs used in _rn487x_PrintMessageEnd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19081                           
 19082                           
 19083                           ;mcc_generated_files/rn487x/rn487x_interface.c: 333:     uart[UART_CDC].Write(' ');
 19084     0B8D  3020               	movlw	32
 19085     0B8E  00F1               	movwf	EUSART2_Write@txData
 19086     0B8F  3002               	movlw	low ((_uart+2)| (0+32768))
 19087     0B90  0084               	movwf	4
 19088     0B91  3098               	movlw	high ((_uart+2)| (0+32768))
 19089     0B92  0085               	movwf	5
 19090     0B93  3F01               	moviw [1]fsr0
 19091     0B94  008A               	movwf	10
 19092     0B95  3F00               	moviw [0]fsr0
 19093     0B96  000A               	callw
 19094     0B97  318B               	pagesel	$
 19095                           
 19096                           ;mcc_generated_files/rn487x/rn487x_interface.c: 334:     uart[UART_CDC].Write('>');
 19097     0B98  303E               	movlw	62
 19098     0B99  00F1               	movwf	EUSART2_Write@txData
 19099     0B9A  3002               	movlw	low ((_uart+2)| (0+32768))
 19100     0B9B  0084               	movwf	4
 19101     0B9C  3098               	movlw	high ((_uart+2)| (0+32768))
 19102     0B9D  0085               	movwf	5
 19103     0B9E  3F01               	moviw [1]fsr0
 19104     0B9F  008A               	movwf	10
 19105     0BA0  3F00               	moviw [0]fsr0
 19106     0BA1  000A               	callw
 19107     0BA2  318B               	pagesel	$
 19108                           
 19109                           ;mcc_generated_files/rn487x/rn487x_interface.c: 335:     uart[UART_CDC].Write('>');
 19110     0BA3  303E               	movlw	62
 19111     0BA4  00F1               	movwf	EUSART2_Write@txData
 19112     0BA5  3002               	movlw	low ((_uart+2)| (0+32768))
 19113     0BA6  0084               	movwf	4
 19114     0BA7  3098               	movlw	high ((_uart+2)| (0+32768))
 19115     0BA8  0085               	movwf	5
 19116     0BA9  3F01               	moviw [1]fsr0
 19117     0BAA  008A               	movwf	10
 19118     0BAB  3F00               	moviw [0]fsr0
 19119     0BAC  000A               	callw
 19120     0BAD  318B               	pagesel	$
 19121                           
 19122                           ;mcc_generated_files/rn487x/rn487x_interface.c: 336:     uart[UART_CDC].Write('>');
 19123     0BAE  303E               	movlw	62
 19124     0BAF  00F1               	movwf	EUSART2_Write@txData
 19125     0BB0  3002               	movlw	low ((_uart+2)| (0+32768))
 19126     0BB1  0084               	movwf	4
 19127     0BB2  3098               	movlw	high ((_uart+2)| (0+32768))
 19128     0BB3  0085               	movwf	5
 19129     0BB4  3F01               	moviw [1]fsr0
 19130     0BB5  008A               	movwf	10
 19131     0BB6  3F00               	moviw [0]fsr0
 19132     0BB7  000A               	callw
 19133     0BB8  318B               	pagesel	$
 19134                           
 19135                           ;mcc_generated_files/rn487x/rn487x_interface.c: 337:     uart[UART_CDC].Write(' ');
 19136     0BB9  3020               	movlw	32
 19137     0BBA  00F1               	movwf	EUSART2_Write@txData
 19138     0BBB  3002               	movlw	low ((_uart+2)| (0+32768))
 19139     0BBC  0084               	movwf	4
 19140     0BBD  3098               	movlw	high ((_uart+2)| (0+32768))
 19141     0BBE  0085               	movwf	5
 19142     0BBF  3F01               	moviw [1]fsr0
 19143     0BC0  008A               	movwf	10
 19144     0BC1  3F00               	moviw [0]fsr0
 19145     0BC2  000A               	callw
 19146     0BC3  318B               	pagesel	$
 19147                           
 19148                           ;mcc_generated_files/rn487x/rn487x_interface.c: 338:     uart[UART_CDC].Write('\r');
 19149     0BC4  300D               	movlw	13
 19150     0BC5  00F1               	movwf	EUSART2_Write@txData
 19151     0BC6  3002               	movlw	low ((_uart+2)| (0+32768))
 19152     0BC7  0084               	movwf	4
 19153     0BC8  3098               	movlw	high ((_uart+2)| (0+32768))
 19154     0BC9  0085               	movwf	5
 19155     0BCA  3F01               	moviw [1]fsr0
 19156     0BCB  008A               	movwf	10
 19157     0BCC  3F00               	moviw [0]fsr0
 19158     0BCD  000A               	callw
 19159     0BCE  318B               	pagesel	$
 19160                           
 19161                           ;mcc_generated_files/rn487x/rn487x_interface.c: 339:     uart[UART_CDC].Write('\n');
 19162     0BCF  300A               	movlw	10
 19163     0BD0  00F1               	movwf	EUSART2_Write@txData
 19164     0BD1  3002               	movlw	low ((_uart+2)| (0+32768))
 19165     0BD2  0084               	movwf	4
 19166     0BD3  3098               	movlw	high ((_uart+2)| (0+32768))
 19167     0BD4  0085               	movwf	5
 19168     0BD5  3F01               	moviw [1]fsr0
 19169     0BD6  008A               	movwf	10
 19170     0BD7  3F00               	moviw [0]fsr0
 19171     0BD8  000A               	callw
 19172     0BD9  318B               	pagesel	$
 19173     0BDA                     l835:
 19174     0BDA  0008               	return
 19175     0BDB                     __end_of_rn487x_PrintMessageEnd:
 19176                           
 19177                           	psect	text51
 19178     1795                     __ptext51:	
 19179 ;; *************** function _rn487x_PrintMessage *****************
 19180 ;; Defined at:
 19181 ;;		line 358 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19182 ;; Parameters:    Size  Location     Type
 19183 ;;  passedMessag    2    7[COMMON] PTR unsigned char 
 19184 ;;		 -> statusBuffer@main$F3783(80), statusBuffer(80), NULL(0), 
 19185 ;; Auto vars:     Size  Location     Type
 19186 ;;  messageIndex    1   32[BANK0 ] unsigned char 
 19187 ;;  printCharact   32    0[BANK0 ] unsigned char [32]
 19188 ;; Return value:  Size  Location     Type
 19189 ;;                  1    wreg      void 
 19190 ;; Registers used:
 19191 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19192 ;; Tracked objects:
 19193 ;;		On entry : 0/0
 19194 ;;		On exit  : 0/0
 19195 ;;		Unchanged: 0/0
 19196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19197 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19198 ;;      Locals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19199 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19200 ;;      Totals:         4      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19201 ;;Total ram usage:       37 bytes
 19202 ;; Hardware stack levels used: 1
 19203 ;; Hardware stack levels required when called: 5
 19204 ;; This function calls:
 19205 ;;		_EUSART1_Write
 19206 ;;		_EUSART2_Write
 19207 ;;		_strcpy
 19208 ;;		_strlen
 19209 ;; This function is called by:
 19210 ;;		_RN487X_MessageHandler
 19211 ;; This function uses a non-reentrant model
 19212 ;;
 19213                           
 19214     1795                     _rn487x_PrintMessage:	
 19215                           ;psect for function _rn487x_PrintMessage
 19216                           
 19217     1795                     l13300:	
 19218                           ;incstack = 0
 19219                           ; Regs used in _rn487x_PrintMessage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19220                           
 19221                           
 19222                           ;mcc_generated_files/rn487x/rn487x_interface.c: 358: static __attribute__((inline)) void
      +                           rn487x_PrintMessage(char* passedMessage);mcc_generated_files/rn487x/rn487x_interface.c:
      +                           359: {;mcc_generated_files/rn487x/rn487x_interface.c: 360:     char printCharacter [(32
      +                          )];;mcc_generated_files/rn487x/rn487x_interface.c: 361:     strcpy(printCharacter, passe
      +                          dMessage);
 19223     1795  0878               	movf	rn487x_PrintMessage@passedMessage+1,w
 19224     1796  00F2               	movwf	strcpy@src+1
 19225     1797  0877               	movf	rn487x_PrintMessage@passedMessage,w
 19226     1798  00F1               	movwf	strcpy@src
 19227     1799  3020               	movlw	(low (rn487x_PrintMessage@printCharacter| 0))& (0+255)
 19228     179A  3192  22F8  3197   	fcall	_strcpy
 19229     179D                     l13302:
 19230                           
 19231                           ;mcc_generated_files/rn487x/rn487x_interface.c: 362:     for (uint8_t messageIndex = 0; 
      +                          messageIndex < strlen(passedMessage); messageIndex++)
 19232     179D  0140               	movlb	0	; select bank0
 19233     179E  01C0               	clrf	rn487x_PrintMessage@messageIndex
 19234     179F  2FB4               	goto	l13308
 19235     17A0                     l13304:
 19236                           
 19237                           ;mcc_generated_files/rn487x/rn487x_interface.c: 363:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 364:         uart[UART_CDC].Write(printCharacter[messageIndex]);
 19238     17A0  0840               	movf	rn487x_PrintMessage@messageIndex,w
 19239     17A1  3E20               	addlw	(low (rn487x_PrintMessage@printCharacter| 0))& (0+255)
 19240     17A2  0086               	movwf	6
 19241     17A3  0187               	clrf	7
 19242     17A4  0801               	movf	1,w
 19243     17A5  00F1               	movwf	EUSART2_Write@txData
 19244     17A6  3002               	movlw	low ((_uart+2)| (0+32768))
 19245     17A7  0084               	movwf	4
 19246     17A8  3098               	movlw	high ((_uart+2)| (0+32768))
 19247     17A9  0085               	movwf	5
 19248     17AA  3F01               	moviw [1]fsr0
 19249     17AB  008A               	movwf	10
 19250     17AC  3F00               	moviw [0]fsr0
 19251     17AD  000A               	callw
 19252     17AE  3197               	pagesel	$
 19253     17AF                     l13306:
 19254                           
 19255                           ;mcc_generated_files/rn487x/rn487x_interface.c: 365:     }
 19256     17AF  3001               	movlw	1
 19257     17B0  00F9               	movwf	??_rn487x_PrintMessage
 19258     17B1  0879               	movf	??_rn487x_PrintMessage,w
 19259     17B2  0140               	movlb	0	; select bank0
 19260     17B3  07C0               	addwf	rn487x_PrintMessage@messageIndex,f
 19261     17B4                     l13308:
 19262     17B4  0878               	movf	rn487x_PrintMessage@passedMessage+1,w
 19263     17B5  00F2               	movwf	strlen@s+1
 19264     17B6  0877               	movf	rn487x_PrintMessage@passedMessage,w
 19265     17B7  00F1               	movwf	strlen@s
 19266     17B8  3192  2293  3197   	fcall	_strlen
 19267     17BB  0140               	movlb	0	; select bank0
 19268     17BC  0840               	movf	rn487x_PrintMessage@messageIndex,w
 19269     17BD  00F9               	movwf	??_rn487x_PrintMessage
 19270     17BE  01FA               	clrf	??_rn487x_PrintMessage+1
 19271     17BF  0872               	movf	?_strlen+1,w
 19272     17C0  027A               	subwf	??_rn487x_PrintMessage+1,w
 19273     17C1  1D03               	skipz
 19274     17C2  2FC5               	goto	u10065
 19275     17C3  0871               	movf	?_strlen,w
 19276     17C4  0279               	subwf	??_rn487x_PrintMessage,w
 19277     17C5                     u10065:
 19278     17C5  1C03               	skipc
 19279     17C6  2FC8               	goto	u10061
 19280     17C7  2FC9               	goto	u10060
 19281     17C8                     u10061:
 19282     17C8  2FA0               	goto	l13304
 19283     17C9                     u10060:
 19284     17C9                     l848:
 19285     17C9  0008               	return
 19286     17CA                     __end_of_rn487x_PrintMessage:
 19287                           
 19288                           	psect	text52
 19289     12F8                     __ptext52:	
 19290 ;; *************** function _strcpy *****************
 19291 ;; Defined at:
 19292 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strcpy.c"
 19293 ;; Parameters:    Size  Location     Type
 19294 ;;  dest            1    wreg     PTR unsigned char 
 19295 ;;		 -> rn487x_PrintMessage@printCharacter(32), 
 19296 ;;  src             2    1[COMMON] PTR const unsigned char 
 19297 ;;		 -> statusBuffer@main$F3783(80), statusBuffer(80), NULL(0), 
 19298 ;; Auto vars:     Size  Location     Type
 19299 ;;  dest            1    6[COMMON] PTR unsigned char 
 19300 ;;		 -> rn487x_PrintMessage@printCharacter(32), 
 19301 ;;  d               1    5[COMMON] PTR unsigned char 
 19302 ;;		 -> rn487x_PrintMessage@printCharacter(32), 
 19303 ;; Return value:  Size  Location     Type
 19304 ;;                  1    wreg      PTR unsigned char 
 19305 ;; Registers used:
 19306 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 19307 ;; Tracked objects:
 19308 ;;		On entry : 0/0
 19309 ;;		On exit  : 0/0
 19310 ;;		Unchanged: 0/0
 19311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19312 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19313 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19314 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19315 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19316 ;;Total ram usage:        6 bytes
 19317 ;; Hardware stack levels used: 1
 19318 ;; Hardware stack levels required when called: 4
 19319 ;; This function calls:
 19320 ;;		Nothing
 19321 ;; This function is called by:
 19322 ;;		_rn487x_PrintMessage
 19323 ;; This function uses a non-reentrant model
 19324 ;;
 19325                           
 19326     12F8                     _strcpy:	
 19327                           ;psect for function _strcpy
 19328                           
 19329                           
 19330                           ;incstack = 0
 19331                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0]
 19332                           ;strcpy@dest stored from wreg
 19333     12F8  00F6               	movwf	strcpy@dest
 19334     12F9                     l13086:
 19335     12F9  0876               	movf	strcpy@dest,w
 19336     12FA  00F5               	movwf	strcpy@d
 19337     12FB                     l13088:
 19338     12FB  0875               	movf	strcpy@d,w
 19339     12FC  0086               	movwf	6
 19340     12FD  0187               	clrf	7
 19341     12FE  0AF5               	incf	strcpy@d,f
 19342     12FF  0872               	movf	strcpy@src+1,w
 19343     1300  00F4               	movwf	??_strcpy+1
 19344     1301  0871               	movf	strcpy@src,w
 19345     1302  00F3               	movwf	??_strcpy
 19346     1303  0AF1               	incf	strcpy@src,f
 19347     1304  1903               	skipnz
 19348     1305  0AF2               	incf	strcpy@src+1,f
 19349     1306  0873               	movf	??_strcpy,w
 19350     1307  0084               	movwf	4
 19351     1308  0874               	movf	??_strcpy+1,w
 19352     1309  0085               	movwf	5
 19353     130A  0800               	movf	0,w
 19354     130B  3FC0               	movwi [0]fsr1
 19355     130C  0889               	movf	9,f
 19356     130D  1D03               	btfss	3,2
 19357     130E  2B10               	goto	u9821
 19358     130F  2B11               	goto	u9820
 19359     1310                     u9821:
 19360     1310  2AFB               	goto	l13088
 19361     1311                     u9820:
 19362     1311                     l3305:
 19363     1311  0008               	return
 19364     1312                     __end_of_strcpy:
 19365                           
 19366                           	psect	text53
 19367     1446                     __ptext53:	
 19368 ;; *************** function _rn487x_PrintIndicatorCharacters *****************
 19369 ;; Defined at:
 19370 ;;		line 342 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19371 ;; Parameters:    Size  Location     Type
 19372 ;;  messageType     1    wreg     enum E12962
 19373 ;; Auto vars:     Size  Location     Type
 19374 ;;  messageType     1    3[COMMON] enum E12962
 19375 ;; Return value:  Size  Location     Type
 19376 ;;                  1    wreg      void 
 19377 ;; Registers used:
 19378 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19379 ;; Tracked objects:
 19380 ;;		On entry : 0/0
 19381 ;;		On exit  : 0/0
 19382 ;;		Unchanged: 0/0
 19383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19385 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19387 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19388 ;;Total ram usage:        1 bytes
 19389 ;; Hardware stack levels used: 1
 19390 ;; Hardware stack levels required when called: 5
 19391 ;; This function calls:
 19392 ;;		_EUSART1_Write
 19393 ;;		_EUSART2_Write
 19394 ;; This function is called by:
 19395 ;;		_RN487X_MessageHandler
 19396 ;; This function uses a non-reentrant model
 19397 ;;
 19398                           
 19399     1446                     _rn487x_PrintIndicatorCharacters:	
 19400                           ;psect for function _rn487x_PrintIndicatorCharacters
 19401                           
 19402                           
 19403                           ;incstack = 0
 19404                           ; Regs used in _rn487x_PrintIndicatorCharacters: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 19405                           ;rn487x_PrintIndicatorCharacters@messageType stored from wreg
 19406     1446  00F3               	movwf	rn487x_PrintIndicatorCharacters@messageType
 19407     1447                     l13292:
 19408                           
 19409                           ;mcc_generated_files/rn487x/rn487x_interface.c: 342: static __attribute__((inline)) void
      +                           rn487x_PrintIndicatorCharacters(RN487X_MESSAGE_TYPE messageType);mcc_generated_files/rn
      +                          487x/rn487x_interface.c: 343: {;mcc_generated_files/rn487x/rn487x_interface.c: 344:     
      +                          if (DISCONNECT_MSG == messageType)
 19410     1447  0873               	movf	rn487x_PrintIndicatorCharacters@messageType,w
 19411     1448  1D03               	btfss	3,2
 19412     1449  2C4B               	goto	u10041
 19413     144A  2C4C               	goto	u10040
 19414     144B                     u10041:
 19415     144B  2C58               	goto	l13296
 19416     144C                     u10040:
 19417     144C                     l13294:
 19418                           
 19419                           ;mcc_generated_files/rn487x/rn487x_interface.c: 345:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 346:         uart[UART_CDC].Write('[');
 19420     144C  305B               	movlw	91
 19421     144D  00F1               	movwf	EUSART2_Write@txData
 19422     144E  3002               	movlw	low ((_uart+2)| (0+32768))
 19423     144F  0084               	movwf	4
 19424     1450  3098               	movlw	high ((_uart+2)| (0+32768))
 19425     1451  0085               	movwf	5
 19426     1452  3F01               	moviw [1]fsr0
 19427     1453  008A               	movwf	10
 19428     1454  3F00               	moviw [0]fsr0
 19429     1455  000A               	callw
 19430     1456  3194               	pagesel	$
 19431                           
 19432                           ;mcc_generated_files/rn487x/rn487x_interface.c: 347:     }
 19433     1457  2C68               	goto	l842
 19434     1458                     l13296:
 19435     1458  0373               	decf	rn487x_PrintIndicatorCharacters@messageType,w
 19436     1459  1D03               	btfss	3,2
 19437     145A  2C5C               	goto	u10051
 19438     145B  2C5D               	goto	u10050
 19439     145C                     u10051:
 19440     145C  2C68               	goto	l842
 19441     145D                     u10050:
 19442     145D                     l13298:
 19443                           
 19444                           ;mcc_generated_files/rn487x/rn487x_interface.c: 349:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 350:         uart[UART_CDC].Write(']');
 19445     145D  305D               	movlw	93
 19446     145E  00F1               	movwf	EUSART2_Write@txData
 19447     145F  3002               	movlw	low ((_uart+2)| (0+32768))
 19448     1460  0084               	movwf	4
 19449     1461  3098               	movlw	high ((_uart+2)| (0+32768))
 19450     1462  0085               	movwf	5
 19451     1463  3F01               	moviw [1]fsr0
 19452     1464  008A               	movwf	10
 19453     1465  3F00               	moviw [0]fsr0
 19454     1466  000A               	callw
 19455     1467  3194               	pagesel	$
 19456     1468                     l842:	
 19457                           ;mcc_generated_files/rn487x/rn487x_interface.c: 351:     }
 19458                           
 19459     1468  0008               	return
 19460     1469                     __end_of_rn487x_PrintIndicatorCharacters:
 19461                           
 19462                           	psect	text54
 19463     1E79                     __ptext54:	
 19464 ;; *************** function _RN487X_IsConnected *****************
 19465 ;; Defined at:
 19466 ;;		line 243 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19467 ;; Parameters:    Size  Location     Type
 19468 ;;		None
 19469 ;; Auto vars:     Size  Location     Type
 19470 ;;		None
 19471 ;; Return value:  Size  Location     Type
 19472 ;;                  1    wreg      _Bool 
 19473 ;; Registers used:
 19474 ;;		wreg
 19475 ;; Tracked objects:
 19476 ;;		On entry : 0/0
 19477 ;;		On exit  : 0/0
 19478 ;;		Unchanged: 0/0
 19479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19484 ;;Total ram usage:        0 bytes
 19485 ;; Hardware stack levels used: 1
 19486 ;; Hardware stack levels required when called: 4
 19487 ;; This function calls:
 19488 ;;		Nothing
 19489 ;; This function is called by:
 19490 ;;		_main
 19491 ;;		_RN487X_Example_TransparentUart
 19492 ;; This function uses a non-reentrant model
 19493 ;;
 19494                           
 19495     1E79                     _RN487X_IsConnected:	
 19496                           ;psect for function _RN487X_IsConnected
 19497                           
 19498     1E79                     l14488:	
 19499                           ;incstack = 0
 19500                           ; Regs used in _RN487X_IsConnected: [wreg]
 19501                           
 19502                           
 19503                           ;mcc_generated_files/rn487x/rn487x_interface.c: 245:     return connected;
 19504     1E79  0140               	movlb	0	; select bank0
 19505     1E7A  0868               	movf	_connected,w
 19506     1E7B                     l783:
 19507     1E7B  0008               	return
 19508     1E7C                     __end_of_RN487X_IsConnected:
 19509                           
 19510                           	psect	text55
 19511     07A1                     __ptext55:	
 19512 ;; *************** function _RN487X_Init *****************
 19513 ;; Defined at:
 19514 ;;		line 54 in file "mcc_generated_files/rn487x/rn487x.c"
 19515 ;; Parameters:    Size  Location     Type
 19516 ;;		None
 19517 ;; Auto vars:     Size  Location     Type
 19518 ;;		None
 19519 ;; Return value:  Size  Location     Type
 19520 ;;                  1    wreg      _Bool 
 19521 ;; Registers used:
 19522 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19523 ;; Tracked objects:
 19524 ;;		On entry : 0/0
 19525 ;;		On exit  : 0/0
 19526 ;;		Unchanged: 0/0
 19527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19532 ;;Total ram usage:        0 bytes
 19533 ;; Hardware stack levels used: 1
 19534 ;; Hardware stack levels required when called: 6
 19535 ;; This function calls:
 19536 ;;		_RN487X_Delay
 19537 ;;		_RN487X_IndicateRx
 19538 ;;		_RN487X_Read@rn487x_interface$F1381
 19539 ;;		_RN487X_Reset
 19540 ;;		_RN487X_SetSystemMode
 19541 ;;		_RN487X_is_rx_ready
 19542 ;; This function is called by:
 19543 ;;		_main
 19544 ;; This function uses a non-reentrant model
 19545 ;;
 19546                           
 19547     07A1                     _RN487X_Init:	
 19548                           ;psect for function _RN487X_Init
 19549                           
 19550     07A1                     l14502:	
 19551                           ;incstack = 0
 19552                           ; Regs used in _RN487X_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19553                           
 19554                           
 19555                           ;mcc_generated_files/rn487x/rn487x.c: 57:     RN487X.SetSystemMode(APPLICATION_MODE);
 19556     07A1  01F1               	clrf	RN487X_SetSystemMode@mode
 19557     07A2  0AF1               	incf	RN487X_SetSystemMode@mode,f
 19558     07A3  3074               	movlw	low ((_RN487X+12)| (0+32768))
 19559     07A4  0084               	movwf	4
 19560     07A5  3098               	movlw	high ((_RN487X+12)| (0+32768))
 19561     07A6  0085               	movwf	5
 19562     07A7  3F01               	moviw [1]fsr0
 19563     07A8  008A               	movwf	10
 19564     07A9  3F00               	moviw [0]fsr0
 19565     07AA  000A               	callw
 19566     07AB  3187               	pagesel	$
 19567                           
 19568                           ;mcc_generated_files/rn487x/rn487x.c: 59:     RN487X.ResetModule(1);
 19569     07AC  01F1               	clrf	RN487X_Reset@value
 19570     07AD  0AF1               	incf	RN487X_Reset@value,f
 19571     07AE  3072               	movlw	low ((_RN487X+10)| (0+32768))
 19572     07AF  0084               	movwf	4
 19573     07B0  3098               	movlw	high ((_RN487X+10)| (0+32768))
 19574     07B1  0085               	movwf	5
 19575     07B2  3F01               	moviw [1]fsr0
 19576     07B3  008A               	movwf	10
 19577     07B4  3F00               	moviw [0]fsr0
 19578     07B5  000A               	callw
 19579     07B6  3187               	pagesel	$
 19580                           
 19581                           ;mcc_generated_files/rn487x/rn487x.c: 61:     RN487X.DelayMs((1));
 19582     07B7  3001               	movlw	1
 19583     07B8  00F4               	movwf	RN487X_Delay@delayCount
 19584     07B9  3000               	movlw	0
 19585     07BA  00F5               	movwf	RN487X_Delay@delayCount+1
 19586     07BB  3076               	movlw	low ((_RN487X+14)| (0+32768))
 19587     07BC  0084               	movwf	4
 19588     07BD  3098               	movlw	high ((_RN487X+14)| (0+32768))
 19589     07BE  0085               	movwf	5
 19590     07BF  3F01               	moviw [1]fsr0
 19591     07C0  008A               	movwf	10
 19592     07C1  3F00               	moviw [0]fsr0
 19593     07C2  000A               	callw
 19594     07C3  3187               	pagesel	$
 19595                           
 19596                           ;mcc_generated_files/rn487x/rn487x.c: 63:     RN487X.ResetModule(0);
 19597     07C4  01F1               	clrf	RN487X_Reset@value
 19598     07C5  3072               	movlw	low ((_RN487X+10)| (0+32768))
 19599     07C6  0084               	movwf	4
 19600     07C7  3098               	movlw	high ((_RN487X+10)| (0+32768))
 19601     07C8  0085               	movwf	5
 19602     07C9  3F01               	moviw [1]fsr0
 19603     07CA  008A               	movwf	10
 19604     07CB  3F00               	moviw [0]fsr0
 19605     07CC  000A               	callw
 19606     07CD  3187               	pagesel	$
 19607                           
 19608                           ;mcc_generated_files/rn487x/rn487x.c: 66:     RN487X.IndicateRx(1);
 19609     07CE  01F1               	clrf	RN487X_IndicateRx@value
 19610     07CF  0AF1               	incf	RN487X_IndicateRx@value,f
 19611     07D0  3070               	movlw	low ((_RN487X+8)| (0+32768))
 19612     07D1  0084               	movwf	4
 19613     07D2  3098               	movlw	high ((_RN487X+8)| (0+32768))
 19614     07D3  0085               	movwf	5
 19615     07D4  3F01               	moviw [1]fsr0
 19616     07D5  008A               	movwf	10
 19617     07D6  3F00               	moviw [0]fsr0
 19618     07D7  000A               	callw
 19619     07D8  3187               	pagesel	$
 19620                           
 19621                           ;mcc_generated_files/rn487x/rn487x.c: 68:     RN487X.DelayMs((200));
 19622     07D9  30C8               	movlw	200
 19623     07DA  00F4               	movwf	RN487X_Delay@delayCount
 19624     07DB  3000               	movlw	0
 19625     07DC  00F5               	movwf	RN487X_Delay@delayCount+1
 19626     07DD  3076               	movlw	low ((_RN487X+14)| (0+32768))
 19627     07DE  0084               	movwf	4
 19628     07DF  3098               	movlw	high ((_RN487X+14)| (0+32768))
 19629     07E0  0085               	movwf	5
 19630     07E1  3F01               	moviw [1]fsr0
 19631     07E2  008A               	movwf	10
 19632     07E3  3F00               	moviw [0]fsr0
 19633     07E4  000A               	callw
 19634     07E5  3187               	pagesel	$
 19635                           
 19636                           ;mcc_generated_files/rn487x/rn487x.c: 71:     while (RN487X.DataReady())
 19637     07E6  2FF0               	goto	l14506
 19638     07E7                     l14504:
 19639                           
 19640                           ;mcc_generated_files/rn487x/rn487x.c: 72:     {;mcc_generated_files/rn487x/rn487x.c: 73:
      +                                   RN487X.Read();
 19641     07E7  306A               	movlw	low ((_RN487X+2)| (0+32768))
 19642     07E8  0084               	movwf	4
 19643     07E9  3098               	movlw	high ((_RN487X+2)| (0+32768))
 19644     07EA  0085               	movwf	5
 19645     07EB  3F01               	moviw [1]fsr0
 19646     07EC  008A               	movwf	10
 19647     07ED  3F00               	moviw [0]fsr0
 19648     07EE  000A               	callw
 19649     07EF  3187               	pagesel	$
 19650     07F0                     l14506:
 19651                           
 19652                           ;mcc_generated_files/rn487x/rn487x.c: 71:     while (RN487X.DataReady())
 19653     07F0  306E               	movlw	low ((_RN487X+6)| (0+32768))
 19654     07F1  0084               	movwf	4
 19655     07F2  3098               	movlw	high ((_RN487X+6)| (0+32768))
 19656     07F3  0085               	movwf	5
 19657     07F4  3F01               	moviw [1]fsr0
 19658     07F5  008A               	movwf	10
 19659     07F6  3F00               	moviw [0]fsr0
 19660     07F7  000A               	callw
 19661     07F8  3187               	pagesel	$
 19662     07F9  3A00               	xorlw	0
 19663     07FA  1D03               	skipz
 19664     07FB  2FFD               	goto	u11581
 19665     07FC  2FFE               	goto	u11580
 19666     07FD                     u11581:
 19667     07FD  2FE7               	goto	l14504
 19668     07FE                     u11580:
 19669     07FE                     l879:
 19670     07FE  0008               	return
 19671     07FF                     __end_of_RN487X_Init:
 19672                           
 19673                           	psect	text56
 19674     1FAA                     __ptext56:	
 19675 ;; *************** function _RN487X_is_rx_ready *****************
 19676 ;; Defined at:
 19677 ;;		line 267 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19678 ;; Parameters:    Size  Location     Type
 19679 ;;		None
 19680 ;; Auto vars:     Size  Location     Type
 19681 ;;		None
 19682 ;; Return value:  Size  Location     Type
 19683 ;;                  1    wreg      _Bool 
 19684 ;; Registers used:
 19685 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 19686 ;; Tracked objects:
 19687 ;;		On entry : 0/0
 19688 ;;		On exit  : 0/0
 19689 ;;		Unchanged: 0/0
 19690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19695 ;;Total ram usage:        0 bytes
 19696 ;; Hardware stack levels used: 1
 19697 ;; Hardware stack levels required when called: 5
 19698 ;; This function calls:
 19699 ;;		_EUSART1_is_rx_ready
 19700 ;;		_EUSART2_is_rx_ready
 19701 ;; This function is called by:
 19702 ;;		_RN487X_DataReady
 19703 ;;		_RN487X_Init
 19704 ;; This function uses a non-reentrant model
 19705 ;;
 19706                           
 19707     1FAA                     _RN487X_is_rx_ready:	
 19708                           ;psect for function _RN487X_is_rx_ready
 19709                           
 19710     1FAA                     l13466:	
 19711                           ;incstack = 0
 19712                           ; Regs used in _RN487X_is_rx_ready: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 19713                           
 19714                           
 19715                           ;mcc_generated_files/rn487x/rn487x_interface.c: 269:     return uart[UART_BLE].DataReady
      +                          ();
 19716     1FAA  301A               	movlw	low ((_uart+26)| (0+32768))
 19717     1FAB  0084               	movwf	4
 19718     1FAC  3098               	movlw	high ((_uart+26)| (0+32768))
 19719     1FAD  0085               	movwf	5
 19720     1FAE  3F01               	moviw [1]fsr0
 19721     1FAF  008A               	movwf	10
 19722     1FB0  3F00               	moviw [0]fsr0
 19723     1FB1  000A               	callw
 19724     1FB2  319F               	pagesel	$
 19725     1FB3                     l795:
 19726     1FB3  0008               	return
 19727     1FB4                     __end_of_RN487X_is_rx_ready:
 19728                           
 19729                           	psect	text57
 19730     1F84                     __ptext57:	
 19731 ;; *************** function _EUSART1_is_rx_ready *****************
 19732 ;; Defined at:
 19733 ;;		line 137 in file "mcc_generated_files/eusart1.c"
 19734 ;; Parameters:    Size  Location     Type
 19735 ;;		None
 19736 ;; Auto vars:     Size  Location     Type
 19737 ;;		None
 19738 ;; Return value:  Size  Location     Type
 19739 ;;                  1    wreg      _Bool 
 19740 ;; Registers used:
 19741 ;;		wreg, status,2, status,0
 19742 ;; Tracked objects:
 19743 ;;		On entry : 0/0
 19744 ;;		On exit  : 0/0
 19745 ;;		Unchanged: 0/0
 19746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19751 ;;Total ram usage:        0 bytes
 19752 ;; Hardware stack levels used: 1
 19753 ;; Hardware stack levels required when called: 4
 19754 ;; This function calls:
 19755 ;;		Nothing
 19756 ;; This function is called by:
 19757 ;;		_RN487X_is_rx_ready
 19758 ;;		_RN487X_Example_TransparentUart
 19759 ;;		_main
 19760 ;; This function uses a non-reentrant model
 19761 ;;
 19762                           
 19763     1F84                     _EUSART1_is_rx_ready:	
 19764                           ;psect for function _EUSART1_is_rx_ready
 19765                           
 19766     1F84                     l13400:	
 19767                           ;incstack = 0
 19768                           ; Regs used in _EUSART1_is_rx_ready: [wreg+status,2+status,0]
 19769                           
 19770                           
 19771                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
 19772     1F84  0140               	movlb	0	; select bank0
 19773     1F85  0858               	movf	_eusart1RxCount,w	;volatile
 19774     1F86  1D03               	btfss	3,2
 19775     1F87  2F89               	goto	u10231
 19776     1F88  2F8B               	goto	u10230
 19777     1F89                     u10231:
 19778     1F89  3001               	movlw	1
 19779     1F8A  2F8C               	goto	u10240
 19780     1F8B                     u10230:
 19781     1F8B  3000               	movlw	0
 19782     1F8C                     u10240:
 19783     1F8C                     l1201:
 19784     1F8C  0008               	return
 19785     1F8D                     __end_of_EUSART1_is_rx_ready:
 19786                           
 19787                           	psect	text58
 19788     1F7B                     __ptext58:	
 19789 ;; *************** function _EUSART2_is_rx_ready *****************
 19790 ;; Defined at:
 19791 ;;		line 137 in file "mcc_generated_files/eusart2.c"
 19792 ;; Parameters:    Size  Location     Type
 19793 ;;		None
 19794 ;; Auto vars:     Size  Location     Type
 19795 ;;		None
 19796 ;; Return value:  Size  Location     Type
 19797 ;;                  1    wreg      _Bool 
 19798 ;; Registers used:
 19799 ;;		wreg, status,2, status,0
 19800 ;; Tracked objects:
 19801 ;;		On entry : 0/0
 19802 ;;		On exit  : 0/0
 19803 ;;		Unchanged: 0/0
 19804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19809 ;;Total ram usage:        0 bytes
 19810 ;; Hardware stack levels used: 1
 19811 ;; Hardware stack levels required when called: 4
 19812 ;; This function calls:
 19813 ;;		Nothing
 19814 ;; This function is called by:
 19815 ;;		_RN487X_is_rx_ready
 19816 ;;		_RN487X_Example_TransparentUart
 19817 ;;		_main
 19818 ;; This function uses a non-reentrant model
 19819 ;;
 19820                           
 19821     1F7B                     _EUSART2_is_rx_ready:	
 19822                           ;psect for function _EUSART2_is_rx_ready
 19823                           
 19824     1F7B                     l13396:	
 19825                           ;incstack = 0
 19826                           ; Regs used in _EUSART2_is_rx_ready: [wreg+status,2+status,0]
 19827                           
 19828                           
 19829                           ;mcc_generated_files/eusart2.c: 139:     return (eusart2RxCount ? 1 : 0);
 19830     1F7B  0140               	movlb	0	; select bank0
 19831     1F7C  085F               	movf	_eusart2RxCount,w	;volatile
 19832     1F7D  1D03               	btfss	3,2
 19833     1F7E  2F80               	goto	u10211
 19834     1F7F  2F82               	goto	u10210
 19835     1F80                     u10211:
 19836     1F80  3001               	movlw	1
 19837     1F81  2F83               	goto	u10220
 19838     1F82                     u10210:
 19839     1F82  3000               	movlw	0
 19840     1F83                     u10220:
 19841     1F83                     l1057:
 19842     1F83  0008               	return
 19843     1F84                     __end_of_EUSART2_is_rx_ready:
 19844                           
 19845                           	psect	text59
 19846     100B                     __ptext59:	
 19847 ;; *************** function _RN487X_SetSystemMode *****************
 19848 ;; Defined at:
 19849 ;;		line 301 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19850 ;; Parameters:    Size  Location     Type
 19851 ;;  mode            1    1[COMMON] enum E204
 19852 ;; Auto vars:     Size  Location     Type
 19853 ;;		None
 19854 ;; Return value:  Size  Location     Type
 19855 ;;                  1    wreg      void 
 19856 ;; Registers used:
 19857 ;;		wreg, status,2, status,0
 19858 ;; Tracked objects:
 19859 ;;		On entry : 0/0
 19860 ;;		On exit  : 0/0
 19861 ;;		Unchanged: 0/0
 19862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19863 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19866 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19867 ;;Total ram usage:        1 bytes
 19868 ;; Hardware stack levels used: 1
 19869 ;; Hardware stack levels required when called: 4
 19870 ;; This function calls:
 19871 ;;		Nothing
 19872 ;; This function is called by:
 19873 ;;		_RN487X_Init
 19874 ;; This function uses a non-reentrant model
 19875 ;;
 19876                           
 19877     100B                     _RN487X_SetSystemMode:	
 19878                           ;psect for function _RN487X_SetSystemMode
 19879                           
 19880     100B                     l819:	
 19881                           ;incstack = 0
 19882                           ; Regs used in _RN487X_SetSystemMode: [wreg+status,2+status,0]
 19883                           ;mcc_generated_files/rn487x/rn487x_interface.c: 301: static void RN487X_SetSystemMode(RN
      +                          487X_SYSTEM_MODES_t mode);mcc_generated_files/rn487x/rn487x_interface.c: 302: {;mcc_gene
      +                          rated_files/rn487x/rn487x_interface.c: 304:     do { TRISAbits.TRISA7 = 0; } while(0);
 19884                           
 19885     100B  0140               	movlb	0	; select bank0
 19886     100C  1392               	bcf	18,7	;volatile
 19887     100D                     l13676:
 19888                           
 19889                           ;mcc_generated_files/rn487x/rn487x_interface.c: 306:     if (APPLICATION_MODE == mode)
 19890     100D  0371               	decf	RN487X_SetSystemMode@mode,w
 19891     100E  1D03               	btfss	3,2
 19892     100F  2811               	goto	u10551
 19893     1010  2812               	goto	u10550
 19894     1011                     u10551:
 19895     1011  2814               	goto	l825
 19896     1012                     u10550:
 19897     1012                     l822:	
 19898                           ;mcc_generated_files/rn487x/rn487x_interface.c: 307:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 308:         do { LATAbits.LATA7 = 1; } while(0);
 19899                           
 19900     1012  1798               	bsf	24,7	;volatile
 19901     1013  2815               	goto	l827
 19902     1014                     l825:	
 19903                           ;mcc_generated_files/rn487x/rn487x_interface.c: 311:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 312:         do { LATAbits.LATA7 = 0; } while(0);
 19904                           
 19905     1014  1398               	bcf	24,7	;volatile
 19906     1015                     l827:	
 19907                           ;mcc_generated_files/rn487x/rn487x_interface.c: 316:     do { TRISAbits.TRISA7 = 1; } wh
      +                          ile(0);
 19908                           
 19909     1015  1792               	bsf	18,7	;volatile
 19910     1016                     l829:
 19911     1016  0008               	return
 19912     1017                     __end_of_RN487X_SetSystemMode:
 19913                           
 19914                           	psect	text60
 19915     1FE9                     __ptext60:	
 19916 ;; *************** function _RN487X_Reset *****************
 19917 ;; Defined at:
 19918 ;;		line 277 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19919 ;; Parameters:    Size  Location     Type
 19920 ;;  value           1    1[COMMON] _Bool 
 19921 ;; Auto vars:     Size  Location     Type
 19922 ;;		None
 19923 ;; Return value:  Size  Location     Type
 19924 ;;                  1    wreg      void 
 19925 ;; Registers used:
 19926 ;;		wreg, status,2, status,0
 19927 ;; Tracked objects:
 19928 ;;		On entry : 0/0
 19929 ;;		On exit  : 0/0
 19930 ;;		Unchanged: 0/0
 19931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19932 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19935 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19936 ;;Total ram usage:        1 bytes
 19937 ;; Hardware stack levels used: 1
 19938 ;; Hardware stack levels required when called: 4
 19939 ;; This function calls:
 19940 ;;		Nothing
 19941 ;; This function is called by:
 19942 ;;		_RN487X_Init
 19943 ;; This function uses a non-reentrant model
 19944 ;;
 19945                           
 19946     1FE9                     _RN487X_Reset:	
 19947                           ;psect for function _RN487X_Reset
 19948                           
 19949     1FE9                     l13672:	
 19950                           ;incstack = 0
 19951                           ; Regs used in _RN487X_Reset: [wreg+status,2+status,0]
 19952                           
 19953                           
 19954                           ;mcc_generated_files/rn487x/rn487x_interface.c: 277: static void RN487X_Reset(_Bool valu
      +                          e);mcc_generated_files/rn487x/rn487x_interface.c: 278: {;mcc_generated_files/rn487x/rn48
      +                          7x_interface.c: 279:     if (1 == value)
 19955     1FE9  0371               	decf	RN487X_Reset@value,w
 19956     1FEA  1D03               	btfss	3,2
 19957     1FEB  2FED               	goto	u10531
 19958     1FEC  2FEE               	goto	u10530
 19959     1FED                     u10531:
 19960     1FED  2FF1               	goto	l805
 19961     1FEE                     u10530:
 19962     1FEE                     l802:	
 19963                           ;mcc_generated_files/rn487x/rn487x_interface.c: 280:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 281:         do { LATAbits.LATA0 = 0; } while(0);
 19964                           
 19965     1FEE  0140               	movlb	0	; select bank0
 19966     1FEF  1018               	bcf	24,0	;volatile
 19967     1FF0  2FF3               	goto	l807
 19968     1FF1                     l805:	
 19969                           ;mcc_generated_files/rn487x/rn487x_interface.c: 284:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 285:         do { LATAbits.LATA0 = 1; } while(0);
 19970                           
 19971     1FF1  0140               	movlb	0	; select bank0
 19972     1FF2  1418               	bsf	24,0	;volatile
 19973     1FF3                     l807:
 19974     1FF3  0008               	return
 19975     1FF4                     __end_of_RN487X_Reset:
 19976                           
 19977                           	psect	text61
 19978     1FDE                     __ptext61:	
 19979 ;; *************** function _RN487X_IndicateRx *****************
 19980 ;; Defined at:
 19981 ;;		line 289 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19982 ;; Parameters:    Size  Location     Type
 19983 ;;  value           1    1[COMMON] _Bool 
 19984 ;; Auto vars:     Size  Location     Type
 19985 ;;		None
 19986 ;; Return value:  Size  Location     Type
 19987 ;;                  1    wreg      void 
 19988 ;; Registers used:
 19989 ;;		wreg, status,2, status,0
 19990 ;; Tracked objects:
 19991 ;;		On entry : 0/0
 19992 ;;		On exit  : 0/0
 19993 ;;		Unchanged: 0/0
 19994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19995 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19998 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19999 ;;Total ram usage:        1 bytes
 20000 ;; Hardware stack levels used: 1
 20001 ;; Hardware stack levels required when called: 4
 20002 ;; This function calls:
 20003 ;;		Nothing
 20004 ;; This function is called by:
 20005 ;;		_RN487X_Init
 20006 ;; This function uses a non-reentrant model
 20007 ;;
 20008                           
 20009     1FDE                     _RN487X_IndicateRx:	
 20010                           ;psect for function _RN487X_IndicateRx
 20011                           
 20012     1FDE                     l13674:	
 20013                           ;incstack = 0
 20014                           ; Regs used in _RN487X_IndicateRx: [wreg+status,2+status,0]
 20015                           
 20016                           
 20017                           ;mcc_generated_files/rn487x/rn487x_interface.c: 289: static void RN487X_IndicateRx(_Bool
      +                           value);mcc_generated_files/rn487x/rn487x_interface.c: 290: {;mcc_generated_files/rn487x
      +                          /rn487x_interface.c: 291:     if (1 == value)
 20018     1FDE  0371               	decf	RN487X_IndicateRx@value,w
 20019     1FDF  1D03               	btfss	3,2
 20020     1FE0  2FE2               	goto	u10541
 20021     1FE1  2FE3               	goto	u10540
 20022     1FE2                     u10541:
 20023     1FE2  2FE6               	goto	l814
 20024     1FE3                     u10540:
 20025     1FE3                     l811:	
 20026                           ;mcc_generated_files/rn487x/rn487x_interface.c: 292:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 293:         do { LATCbits.LATC6 = 0; } while(0);
 20027                           
 20028     1FE3  0140               	movlb	0	; select bank0
 20029     1FE4  131A               	bcf	26,6	;volatile
 20030     1FE5  2FE8               	goto	l816
 20031     1FE6                     l814:	
 20032                           ;mcc_generated_files/rn487x/rn487x_interface.c: 296:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 297:         do { LATCbits.LATC6 = 1; } while(0);
 20033                           
 20034     1FE6  0140               	movlb	0	; select bank0
 20035     1FE7  171A               	bsf	26,6	;volatile
 20036     1FE8                     l816:
 20037     1FE8  0008               	return
 20038     1FE9                     __end_of_RN487X_IndicateRx:
 20039                           
 20040                           	psect	text62
 20041     12AC                     __ptext62:	
 20042 ;; *************** function _LIGHTBLUE_TemperatureSensor *****************
 20043 ;; Defined at:
 20044 ;;		line 311 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20045 ;; Parameters:    Size  Location     Type
 20046 ;;		None
 20047 ;; Auto vars:     Size  Location     Type
 20048 ;;  payload         5   23[BANK0 ] unsigned char [5]
 20049 ;;  temperature     2   28[BANK0 ] short 
 20050 ;; Return value:  Size  Location     Type
 20051 ;;                  1    wreg      void 
 20052 ;; Registers used:
 20053 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20054 ;; Tracked objects:
 20055 ;;		On entry : 0/0
 20056 ;;		On exit  : 0/0
 20057 ;;		Unchanged: 0/0
 20058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20060 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20062 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20063 ;;Total ram usage:        7 bytes
 20064 ;; Hardware stack levels used: 1
 20065 ;; Hardware stack levels required when called: 15
 20066 ;; This function calls:
 20067 ;;		_LIGHTBLUE_SendPacket
 20068 ;;		_LIGHTBLUE_SplitWord
 20069 ;;		_TMAG5273_GetTemperatureValue
 20070 ;; This function is called by:
 20071 ;;		_main
 20072 ;; This function uses a non-reentrant model
 20073 ;;
 20074                           
 20075     12AC                     _LIGHTBLUE_TemperatureSensor:	
 20076                           ;psect for function _LIGHTBLUE_TemperatureSensor
 20077                           
 20078     12AC                     l14326:	
 20079                           ;incstack = 0
 20080                           ; Regs used in _LIGHTBLUE_TemperatureSensor: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 20081                           
 20082                           
 20083                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 312:     char payload[5];;mcc_gene
      +                          rated_files/application/LIGHTBLUE_service.c: 313:     int16_t temperature;;mcc_generated
      +                          _files/application/LIGHTBLUE_service.c: 315:     *payload = '\0';
 20084     12AC  0140               	movlb	0	; select bank0
 20085     12AD  01B7               	clrf	LIGHTBLUE_TemperatureSensor@payload
 20086     12AE                     l14328:
 20087                           
 20088                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 319:     TMAG5273_GetTemperatureVa
      +                          lue(temperature);
 20089     12AE  083D               	movf	LIGHTBLUE_TemperatureSensor@temperature+1,w
 20090     12AF  00B6               	movwf	TMAG5273_GetTemperatureValue@temperature+1
 20091     12B0  083C               	movf	LIGHTBLUE_TemperatureSensor@temperature,w
 20092     12B1  00B5               	movwf	TMAG5273_GetTemperatureValue@temperature
 20093     12B2  3190  203D  3192   	fcall	_TMAG5273_GetTemperatureValue
 20094     12B5                     l14330:
 20095                           
 20096                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 321:     LIGHTBLUE_SplitWord(paylo
      +                          ad, temperature);
 20097     12B5  0140               	movlb	0	; select bank0
 20098     12B6  083D               	movf	LIGHTBLUE_TemperatureSensor@temperature+1,w
 20099     12B7  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 20100     12B8  083C               	movf	LIGHTBLUE_TemperatureSensor@temperature,w
 20101     12B9  00F9               	movwf	LIGHTBLUE_SplitWord@value
 20102     12BA  3037               	movlw	(low (LIGHTBLUE_TemperatureSensor@payload| 0))& (0+255)
 20103     12BB  3190  2066  3192   	fcall	_LIGHTBLUE_SplitWord
 20104     12BE                     l14332:
 20105                           
 20106                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 323:     LIGHTBLUE_SendPacket(TEMP
      +                          ERATURE_DATA_ID, payload);
 20107     12BE  3037               	movlw	(low (LIGHTBLUE_TemperatureSensor@payload| 0))& (0+255)
 20108     12BF  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 20109     12C0  3054               	movlw	84
 20110     12C1  318F  2774  3192   	fcall	_LIGHTBLUE_SendPacket
 20111     12C4                     l124:
 20112     12C4  0008               	return
 20113     12C5                     __end_of_LIGHTBLUE_TemperatureSensor:
 20114                           
 20115                           	psect	text63
 20116     103D                     __ptext63:	
 20117 ;; *************** function _TMAG5273_GetTemperatureValue *****************
 20118 ;; Defined at:
 20119 ;;		line 2549 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 20120 ;; Parameters:    Size  Location     Type
 20121 ;;  temperature     2   21[BANK0 ] PTR short 
 20122 ;;		 -> RAM(8192), 
 20123 ;; Auto vars:     Size  Location     Type
 20124 ;;		None
 20125 ;; Return value:  Size  Location     Type
 20126 ;;                  1    wreg      void 
 20127 ;; Registers used:
 20128 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20129 ;; Tracked objects:
 20130 ;;		On entry : 0/0
 20131 ;;		On exit  : 0/0
 20132 ;;		Unchanged: 0/0
 20133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20134 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20137 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20138 ;;Total ram usage:        2 bytes
 20139 ;; Hardware stack levels used: 1
 20140 ;; Hardware stack levels required when called: 14
 20141 ;; This function calls:
 20142 ;;		_TMAG5273_CalcTemperature
 20143 ;; This function is called by:
 20144 ;;		_LIGHTBLUE_TemperatureSensor
 20145 ;; This function uses a non-reentrant model
 20146 ;;
 20147                           
 20148     103D                     _TMAG5273_GetTemperatureValue:	
 20149                           ;psect for function _TMAG5273_GetTemperatureValue
 20150                           
 20151     103D                     l13608:	
 20152                           ;incstack = 0
 20153                           ; Regs used in _TMAG5273_GetTemperatureValue: [wreg-fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 20154                           
 20155                           
 20156                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2550:     *temperature
      +                           = TMAG5273_CalcTemperature();
 20157     103D  3193  2365  3190   	fcall	_TMAG5273_CalcTemperature
 20158     1040  0140               	movlb	0	; select bank0
 20159     1041  0835               	movf	TMAG5273_GetTemperatureValue@temperature,w
 20160     1042  0086               	movwf	6
 20161     1043  0836               	movf	TMAG5273_GetTemperatureValue@temperature+1,w
 20162     1044  0087               	movwf	7
 20163     1045  082D               	movf	?_TMAG5273_CalcTemperature,w
 20164     1046  3FC0               	movwi [0]fsr1
 20165     1047  082E               	movf	?_TMAG5273_CalcTemperature+1,w
 20166     1048  3FC1               	movwi [1]fsr1
 20167     1049                     l2688:
 20168     1049  0008               	return
 20169     104A                     __end_of_TMAG5273_GetTemperatureValue:
 20170                           
 20171                           	psect	text64
 20172     1365                     __ptext64:	
 20173 ;; *************** function _TMAG5273_CalcTemperature *****************
 20174 ;; Defined at:
 20175 ;;		line 2553 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 20176 ;; Parameters:    Size  Location     Type
 20177 ;;		None
 20178 ;; Auto vars:     Size  Location     Type
 20179 ;;  temperatureD    2   19[BANK0 ] short 
 20180 ;;  lowerByte       1   18[BANK0 ] unsigned char 
 20181 ;;  upperByte       1    0        unsigned char 
 20182 ;; Return value:  Size  Location     Type
 20183 ;;                  2   13[BANK0 ] short 
 20184 ;; Registers used:
 20185 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20186 ;; Tracked objects:
 20187 ;;		On entry : 0/0
 20188 ;;		On exit  : 0/0
 20189 ;;		Unchanged: 0/0
 20190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20191 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20192 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20193 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20194 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20195 ;;Total ram usage:        8 bytes
 20196 ;; Hardware stack levels used: 1
 20197 ;; Hardware stack levels required when called: 13
 20198 ;; This function calls:
 20199 ;;		_i2c_read2ByteRegister
 20200 ;; This function is called by:
 20201 ;;		_TMAG5273_GetTemperatureValue
 20202 ;; This function uses a non-reentrant model
 20203 ;;
 20204                           
 20205     1365                     _TMAG5273_CalcTemperature:	
 20206                           ;psect for function _TMAG5273_CalcTemperature
 20207                           
 20208     1365                     l13574:	
 20209                           ;incstack = 0
 20210                           ; Regs used in _TMAG5273_CalcTemperature: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20211                           
 20212                           
 20213                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2554:     int16_t temp
      +                          eratureData;;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2555:     
      +                          uint8_t upperByte;;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2556
      +                          :     uint8_t lowerByte;;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c
      +                          : 2558:     temperatureData = i2c_read2ByteRegister(0X22, TMAG5273_REG_T_MSB_RESULT);
 20214     1365  3010               	movlw	16
 20215     1366  0140               	movlb	0	; select bank0
 20216     1367  00A4               	movwf	i2c_read2ByteRegister@reg
 20217     1368  3022               	movlw	34
 20218     1369  318A  222A  3193   	fcall	_i2c_read2ByteRegister
 20219     136C  0140               	movlb	0	; select bank0
 20220     136D  0825               	movf	?_i2c_read2ByteRegister+1,w
 20221     136E  00B4               	movwf	TMAG5273_CalcTemperature@temperatureData+1
 20222     136F  0824               	movf	?_i2c_read2ByteRegister,w
 20223     1370  00B3               	movwf	TMAG5273_CalcTemperature@temperatureData
 20224     1371                     l13576:
 20225     1371                     l13578:
 20226                           
 20227                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2560:     lowerByte = 
      +                          (uint8_t) temperatureData;
 20228     1371  0833               	movf	TMAG5273_CalcTemperature@temperatureData,w
 20229     1372  00B2               	movwf	TMAG5273_CalcTemperature@lowerByte
 20230     1373                     l13580:
 20231                           
 20232                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2562:     temperatureD
      +                          ata = ((int16_t) (lowerByte << 8) | upperByte);
 20233     1373  0832               	movf	TMAG5273_CalcTemperature@lowerByte,w
 20234     1374  00AF               	movwf	??_TMAG5273_CalcTemperature
 20235     1375  01B0               	clrf	??_TMAG5273_CalcTemperature+1
 20236     1376  082F               	movf	??_TMAG5273_CalcTemperature,w
 20237     1377  00B0               	movwf	??_TMAG5273_CalcTemperature+1
 20238     1378  01AF               	clrf	??_TMAG5273_CalcTemperature
 20239     1379  082F               	movf	??_TMAG5273_CalcTemperature,w
 20240     137A  00B3               	movwf	TMAG5273_CalcTemperature@temperatureData
 20241     137B  0830               	movf	??_TMAG5273_CalcTemperature+1,w
 20242     137C  00B4               	movwf	TMAG5273_CalcTemperature@temperatureData+1
 20243     137D                     l13582:
 20244                           
 20245                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2564:     return tempe
      +                          ratureData;
 20246     137D  0834               	movf	TMAG5273_CalcTemperature@temperatureData+1,w
 20247     137E  00AE               	movwf	?_TMAG5273_CalcTemperature+1
 20248     137F  0833               	movf	TMAG5273_CalcTemperature@temperatureData,w
 20249     1380  00AD               	movwf	?_TMAG5273_CalcTemperature
 20250     1381                     l2691:
 20251     1381  0008               	return
 20252     1382                     __end_of_TMAG5273_CalcTemperature:
 20253                           
 20254                           	psect	text65
 20255     0A2A                     __ptext65:	
 20256 ;; *************** function _i2c_read2ByteRegister *****************
 20257 ;; Defined at:
 20258 ;;		line 135 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 20259 ;; Parameters:    Size  Location     Type
 20260 ;;  address         1    wreg     unsigned char 
 20261 ;;  reg             1    4[BANK0 ] unsigned char 
 20262 ;; Auto vars:     Size  Location     Type
 20263 ;;  address         1   10[BANK0 ] unsigned char 
 20264 ;;  result          2   11[BANK0 ] unsigned short 
 20265 ;; Return value:  Size  Location     Type
 20266 ;;                  2    4[BANK0 ] unsigned short 
 20267 ;; Registers used:
 20268 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20269 ;; Tracked objects:
 20270 ;;		On entry : 0/0
 20271 ;;		On exit  : 0/0
 20272 ;;		Unchanged: 0/0
 20273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20274 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20275 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20276 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20277 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20278 ;;Total ram usage:        9 bytes
 20279 ;; Hardware stack levels used: 1
 20280 ;; Hardware stack levels required when called: 12
 20281 ;; This function calls:
 20282 ;;		_I2C1_Close
 20283 ;;		_I2C1_MasterWrite
 20284 ;;		_I2C1_Open
 20285 ;;		_I2C1_SetAddressNackCallback
 20286 ;;		_I2C1_SetBuffer
 20287 ;;		_I2C1_SetDataCompleteCallback
 20288 ;; This function is called by:
 20289 ;;		_TMAG5273_GetManufacture
 20290 ;;		_TMAG5273_CalcTemperature
 20291 ;;		_MCP9844_GetManufacture
 20292 ;;		_MCP9844_GetDevice
 20293 ;;		_MCP9844_CalcTemperature
 20294 ;;		_TMAG5273_GetDevice
 20295 ;; This function uses a non-reentrant model
 20296 ;;
 20297                           
 20298     0A2A                     _i2c_read2ByteRegister:	
 20299                           ;psect for function _i2c_read2ByteRegister
 20300                           
 20301                           
 20302                           ;incstack = 0
 20303                           ; Regs used in _i2c_read2ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20304                           ;i2c_read2ByteRegister@address stored from wreg
 20305     0A2A  0140               	movlb	0	; select bank0
 20306     0A2B  00AA               	movwf	i2c_read2ByteRegister@address
 20307     0A2C                     l13354:
 20308     0A2C                     l13356:	
 20309                           ;mcc_generated_files/drivers/i2c_simple_master.c: 135: uint16_t i2c_read2ByteRegister(i2
      +                          c1_address_t address, uint8_t reg);mcc_generated_files/drivers/i2c_simple_master.c: 136:
      +                           {;mcc_generated_files/drivers/i2c_simple_master.c: 138:     uint16_t result;;mcc_genera
      +                          ted_files/drivers/i2c_simple_master.c: 140:     while(!I2C1_Open(address));
 20310                           
 20311     0A2C  0140               	movlb	0	; select bank0
 20312     0A2D  082A               	movf	i2c_read2ByteRegister@address,w
 20313     0A2E  3197  27CA  318A   	fcall	_I2C1_Open
 20314     0A31  3A00               	xorlw	0
 20315     0A32  1903               	skipnz
 20316     0A33  2A35               	goto	u10171
 20317     0A34  2A36               	goto	u10170
 20318     0A35                     u10171:
 20319     0A35  2A2C               	goto	l13356
 20320     0A36                     u10170:
 20321     0A36                     l13358:
 20322                           
 20323                           ;mcc_generated_files/drivers/i2c_simple_master.c: 141:     I2C1_SetDataCompleteCallback(
      +                          rd2RegCompleteHandler,&result);
 20324     0A36  30D5               	movlw	low _rd2RegCompleteHandler
 20325     0A37  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 20326     0A38  3010               	movlw	high _rd2RegCompleteHandler
 20327     0A39  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 20328     0A3A  302B               	movlw	(low (i2c_read2ByteRegister@result| 0))& (0+255)
 20329     0A3B  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 20330     0A3C  319F  27C8  318A   	fcall	_I2C1_SetDataCompleteCallback
 20331     0A3F                     l13360:
 20332                           
 20333                           ;mcc_generated_files/drivers/i2c_simple_master.c: 142:     I2C1_SetBuffer(&reg,1);
 20334     0A3F  3001               	movlw	1
 20335     0A40  00F1               	movwf	I2C1_SetBuffer@bufferSize
 20336     0A41  3000               	movlw	0
 20337     0A42  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 20338     0A43  3024               	movlw	(low (i2c_read2ByteRegister@reg| 0))& (0+255)
 20339     0A44  3190  204A  318A   	fcall	_I2C1_SetBuffer
 20340     0A47                     l13362:
 20341                           
 20342                           ;mcc_generated_files/drivers/i2c_simple_master.c: 143:     I2C1_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
 20343     0A47  3000               	movlw	0
 20344     0A48  00F5               	movwf	I2C1_SetAddressNackCallback@cb
 20345     0A49  00F6               	movwf	I2C1_SetAddressNackCallback@cb+1
 20346     0A4A  3000               	movlw	0
 20347     0A4B  00F7               	movwf	I2C1_SetAddressNackCallback@ptr
 20348     0A4C  00F8               	movwf	I2C1_SetAddressNackCallback@ptr+1
 20349     0A4D  319F  27D3  318A   	fcall	_I2C1_SetAddressNackCallback
 20350     0A50                     l13364:
 20351                           
 20352                           ;mcc_generated_files/drivers/i2c_simple_master.c: 144:     I2C1_MasterWrite();
 20353     0A50  319E  26CA  318A   	fcall	_I2C1_MasterWrite
 20354     0A53                     l13366:	
 20355                           ;mcc_generated_files/drivers/i2c_simple_master.c: 145:     while(I2C1_BUSY == I2C1_Close
      +                          ());
 20356                           
 20357     0A53  3192  2233  318A   	fcall	_I2C1_Close
 20358     0A56  3A01               	xorlw	1
 20359     0A57  1903               	skipnz
 20360     0A58  2A5A               	goto	u10181
 20361     0A59  2A5B               	goto	u10180
 20362     0A5A                     u10181:
 20363     0A5A  2A53               	goto	l13366
 20364     0A5B                     u10180:
 20365     0A5B                     l13368:
 20366                           
 20367                           ;mcc_generated_files/drivers/i2c_simple_master.c: 147:     return (result << 8 | result 
      +                          >> 8);
 20368     0A5B  0140               	movlb	0	; select bank0
 20369     0A5C  082C               	movf	i2c_read2ByteRegister@result+1,w
 20370     0A5D  00A7               	movwf	??_i2c_read2ByteRegister+1
 20371     0A5E  082B               	movf	i2c_read2ByteRegister@result,w
 20372     0A5F  00A6               	movwf	??_i2c_read2ByteRegister
 20373     0A60  0827               	movf	??_i2c_read2ByteRegister+1,w
 20374     0A61  00A6               	movwf	??_i2c_read2ByteRegister
 20375     0A62  01A7               	clrf	??_i2c_read2ByteRegister+1
 20376     0A63  082B               	movf	i2c_read2ByteRegister@result,w
 20377     0A64  00A9               	movwf	??_i2c_read2ByteRegister+3
 20378     0A65  01A8               	clrf	??_i2c_read2ByteRegister+2
 20379     0A66  0826               	movf	??_i2c_read2ByteRegister,w
 20380     0A67  0428               	iorwf	??_i2c_read2ByteRegister+2,w
 20381     0A68  00A4               	movwf	?_i2c_read2ByteRegister
 20382     0A69  0827               	movf	??_i2c_read2ByteRegister+1,w
 20383     0A6A  0429               	iorwf	??_i2c_read2ByteRegister+3,w
 20384     0A6B  00A5               	movwf	?_i2c_read2ByteRegister+1
 20385     0A6C                     l546:
 20386     0A6C  0008               	return
 20387     0A6D                     __end_of_i2c_read2ByteRegister:
 20388                           
 20389                           	psect	text66
 20390     065C                     __ptext66:	
 20391 ;; *************** function _LIGHTBLUE_SendSerialData *****************
 20392 ;; Defined at:
 20393 ;;		line 385 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20394 ;; Parameters:    Size  Location     Type
 20395 ;;  serialData      1    wreg     PTR unsigned char 
 20396 ;;		 -> lightBlueSerial(80), 
 20397 ;; Auto vars:     Size  Location     Type
 20398 ;;  serialData      1    9[COMMON] PTR unsigned char 
 20399 ;;		 -> lightBlueSerial(80), 
 20400 ;;  length          1    8[COMMON] unsigned char 
 20401 ;; Return value:  Size  Location     Type
 20402 ;;                  1    wreg      void 
 20403 ;; Registers used:
 20404 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20405 ;; Tracked objects:
 20406 ;;		On entry : 0/0
 20407 ;;		On exit  : 0/0
 20408 ;;		Unchanged: 0/0
 20409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20411 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20412 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20413 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20414 ;;Total ram usage:        3 bytes
 20415 ;; Hardware stack levels used: 1
 20416 ;; Hardware stack levels required when called: 6
 20417 ;; This function calls:
 20418 ;;		_RN487X_Write
 20419 ;;		_strlen
 20420 ;; This function is called by:
 20421 ;;		_main
 20422 ;; This function uses a non-reentrant model
 20423 ;;
 20424                           
 20425     065C                     _LIGHTBLUE_SendSerialData:	
 20426                           ;psect for function _LIGHTBLUE_SendSerialData
 20427                           
 20428                           
 20429                           ;incstack = 0
 20430                           ; Regs used in _LIGHTBLUE_SendSerialData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20431                           ;LIGHTBLUE_SendSerialData@serialData stored from wreg
 20432     065C  00F9               	movwf	LIGHTBLUE_SendSerialData@serialData
 20433     065D                     l14380:
 20434                           
 20435                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 386:     uint8_t length = strlen(s
      +                          erialData) * 2;
 20436     065D  0879               	movf	LIGHTBLUE_SendSerialData@serialData,w
 20437     065E  00F1               	movwf	strlen@s
 20438     065F  3002               	movlw	2
 20439     0660  00F2               	movwf	strlen@s+1
 20440     0661  3192  2293  3186   	fcall	_strlen
 20441     0664  0871               	movf	?_strlen,w
 20442     0665  0709               	addwf	9,w
 20443     0666  00F8               	movwf	LIGHTBLUE_SendSerialData@length
 20444     0667                     l14382:
 20445                           
 20446                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 388:     RN487X.Write(('['));
 20447     0667  305B               	movlw	91
 20448     0668  00F6               	movwf	RN487X_Write@txData
 20449     0669  3068               	movlw	low (_RN487X| (0+32768))
 20450     066A  0084               	movwf	4
 20451     066B  3098               	movlw	high (_RN487X| (0+32768))
 20452     066C  0085               	movwf	5
 20453     066D  3F01               	moviw [1]fsr0
 20454     066E  008A               	movwf	10
 20455     066F  3F00               	moviw [0]fsr0
 20456     0670  000A               	callw
 20457     0671  3186               	pagesel	$
 20458     0672                     l14384:
 20459                           
 20460                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 389:     RN487X.Write((_hex[(seque
      +                          nceNumber++) & 0xF]));
 20461     0672  0140               	movlb	0	; select bank0
 20462     0673  086C               	movf	_sequenceNumber,w
 20463     0674  390F               	andlw	15
 20464     0675  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 20465     0676  0086               	movwf	6
 20466     0677  3001               	movlw	1	; select bank2/3
 20467     0678  0087               	movwf	7
 20468     0679  0801               	movf	1,w
 20469     067A  00F6               	movwf	RN487X_Write@txData
 20470     067B  3068               	movlw	low (_RN487X| (0+32768))
 20471     067C  0084               	movwf	4
 20472     067D  3098               	movlw	high (_RN487X| (0+32768))
 20473     067E  0085               	movwf	5
 20474     067F  3F01               	moviw [1]fsr0
 20475     0680  008A               	movwf	10
 20476     0681  3F00               	moviw [0]fsr0
 20477     0682  000A               	callw
 20478     0683  3186               	pagesel	$
 20479     0684                     l14386:
 20480     0684  3001               	movlw	1
 20481     0685  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 20482     0686  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 20483     0687  0140               	movlb	0	; select bank0
 20484     0688  07EC               	addwf	_sequenceNumber,f
 20485     0689                     l14388:
 20486                           
 20487                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 390:     RN487X.Write(SERIAL_DATA_
      +                          ID);
 20488     0689  3053               	movlw	83
 20489     068A  00F6               	movwf	RN487X_Write@txData
 20490     068B  3068               	movlw	low (_RN487X| (0+32768))
 20491     068C  0084               	movwf	4
 20492     068D  3098               	movlw	high (_RN487X| (0+32768))
 20493     068E  0085               	movwf	5
 20494     068F  3F01               	moviw [1]fsr0
 20495     0690  008A               	movwf	10
 20496     0691  3F00               	moviw [0]fsr0
 20497     0692  000A               	callw
 20498     0693  3186               	pagesel	$
 20499     0694                     l14390:
 20500                           
 20501                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 391:     RN487X.Write((_hex[(lengt
      +                          h >> 4) & 0xF]));
 20502     0694  0878               	movf	LIGHTBLUE_SendSerialData@length,w
 20503     0695  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 20504     0696  3004               	movlw	4
 20505     0697                     u11445:
 20506     0697  36F7               	lsrf	??_LIGHTBLUE_SendSerialData,f
 20507     0698  0B89               	decfsz	9,f
 20508     0699  2E97               	goto	u11445
 20509     069A  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 20510     069B  390F               	andlw	15
 20511     069C  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 20512     069D  0086               	movwf	6
 20513     069E  3001               	movlw	1	; select bank2/3
 20514     069F  0087               	movwf	7
 20515     06A0  0801               	movf	1,w
 20516     06A1  00F6               	movwf	RN487X_Write@txData
 20517     06A2  3068               	movlw	low (_RN487X| (0+32768))
 20518     06A3  0084               	movwf	4
 20519     06A4  3098               	movlw	high (_RN487X| (0+32768))
 20520     06A5  0085               	movwf	5
 20521     06A6  3F01               	moviw [1]fsr0
 20522     06A7  008A               	movwf	10
 20523     06A8  3F00               	moviw [0]fsr0
 20524     06A9  000A               	callw
 20525     06AA  3186               	pagesel	$
 20526     06AB                     l14392:
 20527                           
 20528                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 392:     RN487X.Write((_hex[(lengt
      +                          h) & 0xF]));
 20529     06AB  0878               	movf	LIGHTBLUE_SendSerialData@length,w
 20530     06AC  390F               	andlw	15
 20531     06AD  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 20532     06AE  0086               	movwf	6
 20533     06AF  3001               	movlw	1	; select bank2/3
 20534     06B0  0087               	movwf	7
 20535     06B1  0801               	movf	1,w
 20536     06B2  00F6               	movwf	RN487X_Write@txData
 20537     06B3  3068               	movlw	low (_RN487X| (0+32768))
 20538     06B4  0084               	movwf	4
 20539     06B5  3098               	movlw	high (_RN487X| (0+32768))
 20540     06B6  0085               	movwf	5
 20541     06B7  3F01               	moviw [1]fsr0
 20542     06B8  008A               	movwf	10
 20543     06B9  3F00               	moviw [0]fsr0
 20544     06BA  000A               	callw
 20545     06BB  3186               	pagesel	$
 20546                           
 20547                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 393:     while (*serialData) {
 20548     06BC  2EF1               	goto	l14398
 20549     06BD                     l14394:
 20550                           
 20551                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 394:         RN487X.Write((_hex[(*
      +                          serialData >> 4) & 0xF]));
 20552     06BD  0879               	movf	LIGHTBLUE_SendSerialData@serialData,w
 20553     06BE  0086               	movwf	6
 20554     06BF  3002               	movlw	2	; select bank4/5
 20555     06C0  0087               	movwf	7
 20556     06C1  0801               	movf	1,w
 20557     06C2  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 20558     06C3  3004               	movlw	4
 20559     06C4                     u11455:
 20560     06C4  36F7               	lsrf	??_LIGHTBLUE_SendSerialData,f
 20561     06C5  0B89               	decfsz	9,f
 20562     06C6  2EC4               	goto	u11455
 20563     06C7  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 20564     06C8  390F               	andlw	15
 20565     06C9  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 20566     06CA  0086               	movwf	6
 20567     06CB  3001               	movlw	1	; select bank2/3
 20568     06CC  0087               	movwf	7
 20569     06CD  0801               	movf	1,w
 20570     06CE  00F6               	movwf	RN487X_Write@txData
 20571     06CF  3068               	movlw	low (_RN487X| (0+32768))
 20572     06D0  0084               	movwf	4
 20573     06D1  3098               	movlw	high (_RN487X| (0+32768))
 20574     06D2  0085               	movwf	5
 20575     06D3  3F01               	moviw [1]fsr0
 20576     06D4  008A               	movwf	10
 20577     06D5  3F00               	moviw [0]fsr0
 20578     06D6  000A               	callw
 20579     06D7  3186               	pagesel	$
 20580                           
 20581                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 395:         RN487X.Write((_hex[(*
      +                          serialData++) & 0xF]));
 20582     06D8  0879               	movf	LIGHTBLUE_SendSerialData@serialData,w
 20583     06D9  0086               	movwf	6
 20584     06DA  3002               	movlw	2	; select bank4/5
 20585     06DB  0087               	movwf	7
 20586     06DC  0801               	movf	1,w
 20587     06DD  390F               	andlw	15
 20588     06DE  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 20589     06DF  0086               	movwf	6
 20590     06E0  3001               	movlw	1	; select bank2/3
 20591     06E1  0087               	movwf	7
 20592     06E2  0801               	movf	1,w
 20593     06E3  00F6               	movwf	RN487X_Write@txData
 20594     06E4  3068               	movlw	low (_RN487X| (0+32768))
 20595     06E5  0084               	movwf	4
 20596     06E6  3098               	movlw	high (_RN487X| (0+32768))
 20597     06E7  0085               	movwf	5
 20598     06E8  3F01               	moviw [1]fsr0
 20599     06E9  008A               	movwf	10
 20600     06EA  3F00               	moviw [0]fsr0
 20601     06EB  000A               	callw
 20602     06EC  3186               	pagesel	$
 20603     06ED                     l14396:
 20604     06ED  3001               	movlw	1
 20605     06EE  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 20606     06EF  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 20607     06F0  07F9               	addwf	LIGHTBLUE_SendSerialData@serialData,f
 20608     06F1                     l14398:
 20609                           
 20610                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 393:     while (*serialData) {
 20611     06F1  0879               	movf	LIGHTBLUE_SendSerialData@serialData,w
 20612     06F2  0086               	movwf	6
 20613     06F3  3002               	movlw	2	; select bank4/5
 20614     06F4  0087               	movwf	7
 20615     06F5  0801               	movf	1,w
 20616     06F6  1D03               	btfss	3,2
 20617     06F7  2EF9               	goto	u11461
 20618     06F8  2EFA               	goto	u11460
 20619     06F9                     u11461:
 20620     06F9  2EBD               	goto	l14394
 20621     06FA                     u11460:
 20622     06FA                     l14400:
 20623                           
 20624                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 397:     RN487X.Write((']'));
 20625     06FA  305D               	movlw	93
 20626     06FB  00F6               	movwf	RN487X_Write@txData
 20627     06FC  3068               	movlw	low (_RN487X| (0+32768))
 20628     06FD  0084               	movwf	4
 20629     06FE  3098               	movlw	high (_RN487X| (0+32768))
 20630     06FF  0085               	movwf	5
 20631     0700  3F01               	moviw [1]fsr0
 20632     0701  008A               	movwf	10
 20633     0702  3F00               	moviw [0]fsr0
 20634     0703  000A               	callw
 20635     0704  3186               	pagesel	$
 20636     0705                     l145:
 20637     0705  0008               	return
 20638     0706                     __end_of_LIGHTBLUE_SendSerialData:
 20639                           
 20640                           	psect	text67
 20641     1761                     __ptext67:	
 20642 ;; *************** function _LIGHTBLUE_SendProtocolVersion *****************
 20643 ;; Defined at:
 20644 ;;		line 370 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20645 ;; Parameters:    Size  Location     Type
 20646 ;;		None
 20647 ;; Auto vars:     Size  Location     Type
 20648 ;;  payload        19    2[BANK0 ] unsigned char [19]
 20649 ;;  dataIndex       1   22[BANK0 ] unsigned char 
 20650 ;;  value           1   21[BANK0 ] unsigned char 
 20651 ;; Return value:  Size  Location     Type
 20652 ;;                  1    wreg      void 
 20653 ;; Registers used:
 20654 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20655 ;; Tracked objects:
 20656 ;;		On entry : 0/0
 20657 ;;		On exit  : 0/0
 20658 ;;		Unchanged: 0/0
 20659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20661 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20662 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20663 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20664 ;;Total ram usage:       23 bytes
 20665 ;; Hardware stack levels used: 1
 20666 ;; Hardware stack levels required when called: 7
 20667 ;; This function calls:
 20668 ;;		_LIGHTBLUE_SendPacket
 20669 ;;		_LIGHTBLUE_SplitByte
 20670 ;;		_strlen
 20671 ;; This function is called by:
 20672 ;;		_main
 20673 ;; This function uses a non-reentrant model
 20674 ;;
 20675                           
 20676     1761                     _LIGHTBLUE_SendProtocolVersion:	
 20677                           ;psect for function _LIGHTBLUE_SendProtocolVersion
 20678                           
 20679     1761                     l14368:	
 20680                           ;incstack = 0
 20681                           ; Regs used in _LIGHTBLUE_SendProtocolVersion: [wreg-fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 20682                           
 20683                           
 20684                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 371:     char payload[19];;mcc_gen
      +                          erated_files/application/LIGHTBLUE_service.c: 372:     uint8_t value;;mcc_generated_file
      +                          s/application/LIGHTBLUE_service.c: 373:     uint8_t dataIndex;;mcc_generated_files/appli
      +                          cation/LIGHTBLUE_service.c: 375:     *payload = '\0';
 20685     1761  0140               	movlb	0	; select bank0
 20686     1762  01A2               	clrf	LIGHTBLUE_SendProtocolVersion@payload
 20687                           
 20688                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 377:     for (dataIndex = 0; dataI
      +                          ndex < strlen(protocol_version_number); dataIndex++) {
 20689     1763  01B6               	clrf	LIGHTBLUE_SendProtocolVersion@dataIndex
 20690     1764  2F79               	goto	l14376
 20691     1765                     l14370:
 20692                           
 20693                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 378:         value = protocol_vers
      +                          ion_number[dataIndex];
 20694     1765  0836               	movf	LIGHTBLUE_SendProtocolVersion@dataIndex,w
 20695     1766  3E16               	addlw	low (STR_1| (0+32768))
 20696     1767  0084               	movwf	4
 20697     1768  30A0               	movlw	high (STR_1| (0+32768))
 20698     1769  1803               	skipnc
 20699     176A  3E01               	addlw	1
 20700     176B  0085               	movwf	5
 20701     176C  0800               	movf	0,w	;code access
 20702     176D  00B5               	movwf	LIGHTBLUE_SendProtocolVersion@value
 20703     176E                     l14372:
 20704                           
 20705                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 379:         LIGHTBLUE_SplitByte(p
      +                          ayload, value);
 20706     176E  0835               	movf	LIGHTBLUE_SendProtocolVersion@value,w
 20707     176F  00F6               	movwf	LIGHTBLUE_SplitByte@value
 20708     1770  3022               	movlw	(low (LIGHTBLUE_SendProtocolVersion@payload| 0))& (0+255)
 20709     1771  3197  2730  3197   	fcall	_LIGHTBLUE_SplitByte
 20710     1774                     l14374:
 20711                           
 20712                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 380:     }
 20713     1774  3001               	movlw	1
 20714     1775  0140               	movlb	0	; select bank0
 20715     1776  00A0               	movwf	??_LIGHTBLUE_SendProtocolVersion
 20716     1777  0820               	movf	??_LIGHTBLUE_SendProtocolVersion,w
 20717     1778  07B6               	addwf	LIGHTBLUE_SendProtocolVersion@dataIndex,f
 20718     1779                     l14376:
 20719     1779  3016               	movlw	low (STR_1| (0+32768))
 20720     177A  00F1               	movwf	strlen@s
 20721     177B  30A0               	movlw	high (STR_1| (0+32768))
 20722     177C  00F2               	movwf	strlen@s+1
 20723     177D  3192  2293  3197   	fcall	_strlen
 20724     1780  0140               	movlb	0	; select bank0
 20725     1781  0836               	movf	LIGHTBLUE_SendProtocolVersion@dataIndex,w
 20726     1782  00A0               	movwf	??_LIGHTBLUE_SendProtocolVersion
 20727     1783  01A1               	clrf	??_LIGHTBLUE_SendProtocolVersion+1
 20728     1784  0872               	movf	?_strlen+1,w
 20729     1785  0221               	subwf	??_LIGHTBLUE_SendProtocolVersion+1,w
 20730     1786  1D03               	skipz
 20731     1787  2F8A               	goto	u11435
 20732     1788  0871               	movf	?_strlen,w
 20733     1789  0220               	subwf	??_LIGHTBLUE_SendProtocolVersion,w
 20734     178A                     u11435:
 20735     178A  1C03               	skipc
 20736     178B  2F8D               	goto	u11431
 20737     178C  2F8E               	goto	u11430
 20738     178D                     u11431:
 20739     178D  2F65               	goto	l14370
 20740     178E                     u11430:
 20741     178E                     l14378:
 20742                           
 20743                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 382:     LIGHTBLUE_SendPacket(PROT
      +                          OCOL_VERSION_ID, payload);
 20744     178E  3022               	movlw	(low (LIGHTBLUE_SendProtocolVersion@payload| 0))& (0+255)
 20745     178F  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 20746     1790  3056               	movlw	86
 20747     1791  318F  2774  3197   	fcall	_LIGHTBLUE_SendPacket
 20748     1794                     l139:
 20749     1794  0008               	return
 20750     1795                     __end_of_LIGHTBLUE_SendProtocolVersion:
 20751                           
 20752                           	psect	text68
 20753     115D                     __ptext68:	
 20754 ;; *************** function _LIGHTBLUE_PushButton *****************
 20755 ;; Defined at:
 20756 ;;		line 342 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20757 ;; Parameters:    Size  Location     Type
 20758 ;;		None
 20759 ;; Auto vars:     Size  Location     Type
 20760 ;;  payload         3    1[BANK0 ] unsigned char [3]
 20761 ;;  button          1    0[BANK0 ] unsigned char 
 20762 ;; Return value:  Size  Location     Type
 20763 ;;                  1    wreg      void 
 20764 ;; Registers used:
 20765 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20766 ;; Tracked objects:
 20767 ;;		On entry : 0/0
 20768 ;;		On exit  : 0/0
 20769 ;;		Unchanged: 0/0
 20770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20772 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20774 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20775 ;;Total ram usage:        4 bytes
 20776 ;; Hardware stack levels used: 1
 20777 ;; Hardware stack levels required when called: 7
 20778 ;; This function calls:
 20779 ;;		_LIGHTBLUE_GetButtonValue
 20780 ;;		_LIGHTBLUE_SendPacket
 20781 ;;		_LIGHTBLUE_SplitByte
 20782 ;; This function is called by:
 20783 ;;		_main
 20784 ;; This function uses a non-reentrant model
 20785 ;;
 20786                           
 20787     115D                     _LIGHTBLUE_PushButton:	
 20788                           ;psect for function _LIGHTBLUE_PushButton
 20789                           
 20790     115D                     l14346:	
 20791                           ;incstack = 0
 20792                           ; Regs used in _LIGHTBLUE_PushButton: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20793                           
 20794                           
 20795                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 343:     char payload[3];;mcc_gene
      +                          rated_files/application/LIGHTBLUE_service.c: 344:     uint8_t button = LIGHTBLUE_GetButt
      +                          onValue();
 20796     115D  319E  26F6  3191   	fcall	_LIGHTBLUE_GetButtonValue
 20797     1160  0140               	movlb	0	; select bank0
 20798     1161  00A0               	movwf	LIGHTBLUE_PushButton@button
 20799     1162                     l14348:
 20800                           
 20801                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 346:     *payload = '\0';
 20802     1162  01A1               	clrf	LIGHTBLUE_PushButton@payload
 20803     1163                     l14350:
 20804                           
 20805                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 347:     LIGHTBLUE_SplitByte(paylo
      +                          ad, button);
 20806     1163  0820               	movf	LIGHTBLUE_PushButton@button,w
 20807     1164  00F6               	movwf	LIGHTBLUE_SplitByte@value
 20808     1165  3021               	movlw	(low (LIGHTBLUE_PushButton@payload| 0))& (0+255)
 20809     1166  3197  2730  3191   	fcall	_LIGHTBLUE_SplitByte
 20810     1169                     l14352:
 20811                           
 20812                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 349:     LIGHTBLUE_SendPacket(BUTT
      +                          ON_STATE_ID, payload);
 20813     1169  3021               	movlw	(low (LIGHTBLUE_PushButton@payload| 0))& (0+255)
 20814     116A  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 20815     116B  3050               	movlw	80
 20816     116C  318F  2774  3191   	fcall	_LIGHTBLUE_SendPacket
 20817     116F                     l130:
 20818     116F  0008               	return
 20819     1170                     __end_of_LIGHTBLUE_PushButton:
 20820                           
 20821                           	psect	text69
 20822     1EF6                     __ptext69:	
 20823 ;; *************** function _LIGHTBLUE_GetButtonValue *****************
 20824 ;; Defined at:
 20825 ;;		line 475 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20826 ;; Parameters:    Size  Location     Type
 20827 ;;		None
 20828 ;; Auto vars:     Size  Location     Type
 20829 ;;		None
 20830 ;; Return value:  Size  Location     Type
 20831 ;;                  1    wreg      unsigned char 
 20832 ;; Registers used:
 20833 ;;		wreg, status,2, status,0
 20834 ;; Tracked objects:
 20835 ;;		On entry : 0/0
 20836 ;;		On exit  : 0/0
 20837 ;;		Unchanged: 0/0
 20838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20843 ;;Total ram usage:        0 bytes
 20844 ;; Hardware stack levels used: 1
 20845 ;; Hardware stack levels required when called: 4
 20846 ;; This function calls:
 20847 ;;		Nothing
 20848 ;; This function is called by:
 20849 ;;		_LIGHTBLUE_PushButton
 20850 ;; This function uses a non-reentrant model
 20851 ;;
 20852                           
 20853     1EF6                     _LIGHTBLUE_GetButtonValue:	
 20854                           ;psect for function _LIGHTBLUE_GetButtonValue
 20855                           
 20856     1EF6                     l13630:	
 20857                           ;incstack = 0
 20858                           ; Regs used in _LIGHTBLUE_GetButtonValue: [wreg+status,2+status,0]
 20859                           
 20860                           
 20861                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 476:     return (0x01) - PORTAbits
      +                          .RA7;
 20862     1EF6  0140               	movlb	0	; select bank0
 20863     1EF7  0D0C               	rlf	12,w	;volatile
 20864     1EF8  0D0C               	rlf	12,w	;volatile
 20865     1EF9  3901               	andlw	1
 20866     1EFA  3C01               	sublw	1
 20867     1EFB                     l202:
 20868     1EFB  0008               	return
 20869     1EFC                     __end_of_LIGHTBLUE_GetButtonValue:
 20870                           
 20871                           	psect	text70
 20872     0590                     __ptext70:	
 20873 ;; *************** function _LIGHTBLUE_ParseIncomingPacket *****************
 20874 ;; Defined at:
 20875 ;;		line 400 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20876 ;; Parameters:    Size  Location     Type
 20877 ;;  receivedByte    1    wreg     unsigned char 
 20878 ;; Auto vars:     Size  Location     Type
 20879 ;;  receivedByte    1   19[BANK0 ] unsigned char 
 20880 ;; Return value:  Size  Location     Type
 20881 ;;                  1    wreg      void 
 20882 ;; Registers used:
 20883 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20884 ;; Tracked objects:
 20885 ;;		On entry : 0/0
 20886 ;;		On exit  : 0/0
 20887 ;;		Unchanged: 0/0
 20888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20890 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20891 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20892 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20893 ;;Total ram usage:        9 bytes
 20894 ;; Hardware stack levels used: 1
 20895 ;; Hardware stack levels required when called: 11
 20896 ;; This function calls:
 20897 ;;		_LIGHTBLUE_PerformAction
 20898 ;; This function is called by:
 20899 ;;		_main
 20900 ;; This function uses a non-reentrant model
 20901 ;;
 20902                           
 20903     0590                     _LIGHTBLUE_ParseIncomingPacket:	
 20904                           ;psect for function _LIGHTBLUE_ParseIncomingPacket
 20905                           
 20906                           
 20907                           ;incstack = 0
 20908                           ; Regs used in _LIGHTBLUE_ParseIncomingPacket: [wreg-fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 20909                           ;LIGHTBLUE_ParseIncomingPacket@receivedByte stored from wreg
 20910     0590  0140               	movlb	0	; select bank0
 20911     0591  00B3               	movwf	LIGHTBLUE_ParseIncomingPacket@receivedByte
 20912     0592                     l14402:
 20913                           
 20914                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 401:     static PACKET_PARSER_STAT
      +                          E_t parserState = IDLE;;mcc_generated_files/application/LIGHTBLUE_service.c: 402:     st
      +                          atic uint8_t length = 0;;mcc_generated_files/application/LIGHTBLUE_service.c: 403:     s
      +                          tatic uint16_t data = 0;;mcc_generated_files/application/LIGHTBLUE_service.c: 404:     s
      +                          tatic char packetID = '\0';;mcc_generated_files/application/LIGHTBLUE_service.c: 406:   
      +                            switch (parserState) {
 20915     0592  2E3C               	goto	l14462
 20916     0593                     l14404:
 20917                           
 20918                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 409:             parserState = PAC
      +                          KET_ID;
 20919     0593  3002               	movlw	2
 20920     0594  00EB               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 20921                           
 20922                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 410:             break;
 20923     0595  2E5B               	goto	l187
 20924     0596                     l14406:
 20925                           
 20926                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 412:             packetID = receiv
      +                          edByte;
 20927     0596  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20928     0597  00E9               	movwf	LIGHTBLUE_ParseIncomingPacket@packetID
 20929                           
 20930                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 413:             parserState = PAY
      +                          LOAD_SIZE_0;
 20931     0598  3003               	movlw	3
 20932     0599  00EB               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 20933                           
 20934                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 414:             break;
 20935     059A  2E5B               	goto	l187
 20936     059B                     l14408:
 20937                           
 20938                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 416:             length = (((recei
      +                          vedByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 10);
 20939     059B  303A               	movlw	58
 20940     059C  0233               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20941     059D  1C03               	skipc
 20942     059E  2DA0               	goto	u11471
 20943     059F  2DA1               	goto	u11470
 20944     05A0                     u11471:
 20945     05A0  2DAA               	goto	l14412
 20946     05A1                     u11470:
 20947     05A1                     l14410:
 20948     05A1  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20949     05A2  395F               	andlw	95
 20950     05A3  3EC9               	addlw	201
 20951     05A4  00AD               	movwf	_LIGHTBLUE_ParseIncomingPacket$463
 20952     05A5  30FF               	movlw	255
 20953     05A6  1803               	skipnc
 20954     05A7  3000               	movlw	0
 20955     05A8  00AE               	movwf	_LIGHTBLUE_ParseIncomingPacket$463+1
 20956     05A9  2DB1               	goto	l164
 20957     05AA                     l14412:
 20958     05AA  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20959     05AB  3ED0               	addlw	208
 20960     05AC  00AD               	movwf	_LIGHTBLUE_ParseIncomingPacket$463
 20961     05AD  30FF               	movlw	255
 20962     05AE  1803               	skipnc
 20963     05AF  3000               	movlw	0
 20964     05B0  00AE               	movwf	_LIGHTBLUE_ParseIncomingPacket$463+1
 20965     05B1                     l164:
 20966     05B1  082D               	movf	_LIGHTBLUE_ParseIncomingPacket$463,w
 20967     05B2  00EA               	movwf	LIGHTBLUE_ParseIncomingPacket@length
 20968                           
 20969                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 417:             parserState = PAY
      +                          LOAD_SIZE_1;
 20970     05B3  3004               	movlw	4
 20971     05B4  00EB               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 20972                           
 20973                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 418:             break;
 20974     05B5  2E5B               	goto	l187
 20975     05B6                     l14414:
 20976                           
 20977                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 420:             length = (length 
      +                          << 4) + (((receivedByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 
      +                          10);
 20978     05B6  303A               	movlw	58
 20979     05B7  0233               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20980     05B8  1C03               	skipc
 20981     05B9  2DBB               	goto	u11481
 20982     05BA  2DBC               	goto	u11480
 20983     05BB                     u11481:
 20984     05BB  2DC5               	goto	l14418
 20985     05BC                     u11480:
 20986     05BC                     l14416:
 20987     05BC  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20988     05BD  395F               	andlw	95
 20989     05BE  3EC9               	addlw	201
 20990     05BF  00AF               	movwf	_LIGHTBLUE_ParseIncomingPacket$464
 20991     05C0  30FF               	movlw	255
 20992     05C1  1803               	skipnc
 20993     05C2  3000               	movlw	0
 20994     05C3  00B0               	movwf	_LIGHTBLUE_ParseIncomingPacket$464+1
 20995     05C4  2DCC               	goto	l14420
 20996     05C5                     l14418:
 20997     05C5  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20998     05C6  3ED0               	addlw	208
 20999     05C7  00AF               	movwf	_LIGHTBLUE_ParseIncomingPacket$464
 21000     05C8  30FF               	movlw	255
 21001     05C9  1803               	skipnc
 21002     05CA  3000               	movlw	0
 21003     05CB  00B0               	movwf	_LIGHTBLUE_ParseIncomingPacket$464+1
 21004     05CC                     l14420:
 21005     05CC  086A               	movf	LIGHTBLUE_ParseIncomingPacket@length,w
 21006     05CD  00AB               	movwf	??_LIGHTBLUE_ParseIncomingPacket
 21007     05CE  3003               	movlw	3
 21008     05CF                     u11495:
 21009     05CF  35AB               	lslf	??_LIGHTBLUE_ParseIncomingPacket,f
 21010     05D0  3EFF               	addlw	-1
 21011     05D1  1D03               	skipz
 21012     05D2  2DCF               	goto	u11495
 21013     05D3  352B               	lslf	??_LIGHTBLUE_ParseIncomingPacket,w
 21014     05D4  072F               	addwf	_LIGHTBLUE_ParseIncomingPacket$464,w
 21015     05D5  00EA               	movwf	LIGHTBLUE_ParseIncomingPacket@length
 21016     05D6                     l14422:
 21017                           
 21018                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 421:             parserState = PAY
      +                          LOAD_0;
 21019     05D6  3005               	movlw	5
 21020     05D7  00EB               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 21021                           
 21022                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 422:             break;
 21023     05D8  2E5B               	goto	l187
 21024     05D9                     l14424:
 21025                           
 21026                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 424:             data = (((receive
      +                          dByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 10);
 21027     05D9  303A               	movlw	58
 21028     05DA  0233               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 21029     05DB  1C03               	skipc
 21030     05DC  2DDE               	goto	u11501
 21031     05DD  2DDF               	goto	u11500
 21032     05DE                     u11501:
 21033     05DE  2DE8               	goto	l14428
 21034     05DF                     u11500:
 21035     05DF                     l14426:
 21036     05DF  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 21037     05E0  395F               	andlw	95
 21038     05E1  3EC9               	addlw	201
 21039     05E2  00D2               	movwf	LIGHTBLUE_ParseIncomingPacket@data
 21040     05E3  30FF               	movlw	255
 21041     05E4  1803               	skipnc
 21042     05E5  3000               	movlw	0
 21043     05E6  00D3               	movwf	LIGHTBLUE_ParseIncomingPacket@data+1
 21044     05E7  2DEF               	goto	l14430
 21045     05E8                     l14428:
 21046     05E8  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 21047     05E9  3ED0               	addlw	208
 21048     05EA  00D2               	movwf	LIGHTBLUE_ParseIncomingPacket@data
 21049     05EB  30FF               	movlw	255
 21050     05EC  1803               	skipnc
 21051     05ED  3000               	movlw	0
 21052     05EE  00D3               	movwf	LIGHTBLUE_ParseIncomingPacket@data+1
 21053     05EF                     l14430:
 21054                           
 21055                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 425:             length--;
 21056     05EF  3001               	movlw	1
 21057     05F0  02EA               	subwf	LIGHTBLUE_ParseIncomingPacket@length,f
 21058     05F1                     l14432:
 21059                           
 21060                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 426:             if (length == 0) 
      +                          {
 21061     05F1  086A               	movf	LIGHTBLUE_ParseIncomingPacket@length,w
 21062     05F2  1D03               	btfss	3,2
 21063     05F3  2DF5               	goto	u11511
 21064     05F4  2DF6               	goto	u11510
 21065     05F5                     u11511:
 21066     05F5  2DF8               	goto	l14436
 21067     05F6                     u11510:
 21068     05F6                     l14434:
 21069                           
 21070                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 427:                 parserState =
      +                           IDLE;
 21071     05F6  01EB               	clrf	LIGHTBLUE_ParseIncomingPacket@parserState
 21072                           
 21073                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 428:             } else {
 21074     05F7  2E5B               	goto	l187
 21075     05F8                     l14436:
 21076                           
 21077                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 429:                 parserState =
      +                           PAYLOAD_1;
 21078     05F8  3006               	movlw	6
 21079     05F9  00EB               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 21080     05FA  2E5B               	goto	l187
 21081     05FB                     l14438:
 21082                           
 21083                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 433:             data = (data << 4
      +                          ) + (((receivedByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 10);
 21084     05FB  303A               	movlw	58
 21085     05FC  0233               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 21086     05FD  1C03               	skipc
 21087     05FE  2E00               	goto	u11521
 21088     05FF  2E01               	goto	u11520
 21089     0600                     u11521:
 21090     0600  2E0A               	goto	l14442
 21091     0601                     u11520:
 21092     0601                     l14440:
 21093     0601  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 21094     0602  395F               	andlw	95
 21095     0603  3EC9               	addlw	201
 21096     0604  00B1               	movwf	_LIGHTBLUE_ParseIncomingPacket$465
 21097     0605  30FF               	movlw	255
 21098     0606  1803               	skipnc
 21099     0607  3000               	movlw	0
 21100     0608  00B2               	movwf	_LIGHTBLUE_ParseIncomingPacket$465+1
 21101     0609  2E11               	goto	l14444
 21102     060A                     l14442:
 21103     060A  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 21104     060B  3ED0               	addlw	208
 21105     060C  00B1               	movwf	_LIGHTBLUE_ParseIncomingPacket$465
 21106     060D  30FF               	movlw	255
 21107     060E  1803               	skipnc
 21108     060F  3000               	movlw	0
 21109     0610  00B2               	movwf	_LIGHTBLUE_ParseIncomingPacket$465+1
 21110     0611                     l14444:
 21111     0611  0853               	movf	LIGHTBLUE_ParseIncomingPacket@data+1,w
 21112     0612  00AC               	movwf	??_LIGHTBLUE_ParseIncomingPacket+1
 21113     0613  0852               	movf	LIGHTBLUE_ParseIncomingPacket@data,w
 21114     0614  00AB               	movwf	??_LIGHTBLUE_ParseIncomingPacket
 21115     0615  0EAB               	swapf	??_LIGHTBLUE_ParseIncomingPacket,f
 21116     0616  0EAC               	swapf	??_LIGHTBLUE_ParseIncomingPacket+1,f
 21117     0617  30F0               	movlw	240
 21118     0618  05AC               	andwf	??_LIGHTBLUE_ParseIncomingPacket+1,f
 21119     0619  082B               	movf	??_LIGHTBLUE_ParseIncomingPacket,w
 21120     061A  390F               	andlw	15
 21121     061B  04AC               	iorwf	??_LIGHTBLUE_ParseIncomingPacket+1,f
 21122     061C  30F0               	movlw	240
 21123     061D  05AB               	andwf	??_LIGHTBLUE_ParseIncomingPacket,f
 21124     061E  0831               	movf	_LIGHTBLUE_ParseIncomingPacket$465,w
 21125     061F  072B               	addwf	??_LIGHTBLUE_ParseIncomingPacket,w
 21126     0620  00D2               	movwf	LIGHTBLUE_ParseIncomingPacket@data
 21127     0621  0832               	movf	_LIGHTBLUE_ParseIncomingPacket$465+1,w
 21128     0622  3D2C               	addwfc	??_LIGHTBLUE_ParseIncomingPacket+1,w
 21129     0623  00D3               	movwf	LIGHTBLUE_ParseIncomingPacket@data+1
 21130     0624                     l14446:
 21131                           
 21132                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 434:             LIGHTBLUE_Perform
      +                          Action(packetID, data);
 21133     0624  0852               	movf	LIGHTBLUE_ParseIncomingPacket@data,w
 21134     0625  00A7               	movwf	LIGHTBLUE_PerformAction@data
 21135     0626  0869               	movf	LIGHTBLUE_ParseIncomingPacket@packetID,w
 21136     0627  3188  2004  3185   	fcall	_LIGHTBLUE_PerformAction
 21137     062A                     l14448:
 21138                           
 21139                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 435:             length--;
 21140     062A  3001               	movlw	1
 21141     062B  0140               	movlb	0	; select bank0
 21142     062C  02EA               	subwf	LIGHTBLUE_ParseIncomingPacket@length,f
 21143     062D                     l14450:
 21144                           
 21145                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 436:             if (length == 0) 
      +                          {
 21146     062D  086A               	movf	LIGHTBLUE_ParseIncomingPacket@length,w
 21147     062E  1D03               	btfss	3,2
 21148     062F  2E31               	goto	u11531
 21149     0630  2E32               	goto	u11530
 21150     0631                     u11531:
 21151     0631  2DD6               	goto	l14422
 21152     0632                     u11530:
 21153     0632  2DF6               	goto	l14434
 21154     0633                     l14456:
 21155                           
 21156                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 444:             if (receivedByte 
      +                          == ('[')) {
 21157     0633  305B               	movlw	91
 21158     0634  0633               	xorwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 21159     0635  1D03               	btfss	3,2
 21160     0636  2E38               	goto	u11541
 21161     0637  2E39               	goto	u11540
 21162     0638                     u11541:
 21163     0638  2E5B               	goto	l187
 21164     0639                     u11540:
 21165     0639                     l14458:
 21166                           
 21167                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 445:                 parserState =
      +                           SEQUENCE_NUMBER;
 21168     0639  01EB               	clrf	LIGHTBLUE_ParseIncomingPacket@parserState
 21169     063A  0AEB               	incf	LIGHTBLUE_ParseIncomingPacket@parserState,f
 21170     063B  2E5B               	goto	l187
 21171     063C                     l14462:
 21172     063C  086B               	movf	LIGHTBLUE_ParseIncomingPacket@parserState,w
 21173     063D  00AB               	movwf	??_LIGHTBLUE_ParseIncomingPacket
 21174     063E  01AC               	clrf	??_LIGHTBLUE_ParseIncomingPacket+1
 21175                           
 21176                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21177                           ; Switch size 1, requested type "simple"
 21178                           ; Number of cases is 1, Range of values is 0 to 0
 21179                           ; switch strategies available:
 21180                           ; Name         Instructions Cycles
 21181                           ; simple_byte            4     3 (average)
 21182                           ; direct_byte            8     6 (fixed)
 21183                           ; jumptable            260     6 (fixed)
 21184                           ;	Chosen strategy is simple_byte
 21185     063F  082C               	movf	??_LIGHTBLUE_ParseIncomingPacket+1,w
 21186     0640  3A00               	xorlw	0	; case 0
 21187     0641  1903               	skipnz
 21188     0642  2E44               	goto	l16642
 21189     0643  2E33               	goto	l14456
 21190     0644                     l16642:
 21191                           
 21192                           ; Switch size 1, requested type "simple"
 21193                           ; Number of cases is 7, Range of values is 0 to 6
 21194                           ; switch strategies available:
 21195                           ; Name         Instructions Cycles
 21196                           ; direct_byte           20     6 (fixed)
 21197                           ; simple_byte           22    12 (average)
 21198                           ; jumptable            260     6 (fixed)
 21199                           ;	Chosen strategy is simple_byte
 21200     0644  082B               	movf	??_LIGHTBLUE_ParseIncomingPacket,w
 21201     0645  3A00               	xorlw	0	; case 0
 21202     0646  1903               	skipnz
 21203     0647  2E33               	goto	l14456
 21204     0648  3A01               	xorlw	1	; case 1
 21205     0649  1903               	skipnz
 21206     064A  2D93               	goto	l14404
 21207     064B  3A03               	xorlw	3	; case 2
 21208     064C  1903               	skipnz
 21209     064D  2D96               	goto	l14406
 21210     064E  3A01               	xorlw	1	; case 3
 21211     064F  1903               	skipnz
 21212     0650  2D9B               	goto	l14408
 21213     0651  3A07               	xorlw	7	; case 4
 21214     0652  1903               	skipnz
 21215     0653  2DB6               	goto	l14414
 21216     0654  3A01               	xorlw	1	; case 5
 21217     0655  1903               	skipnz
 21218     0656  2DD9               	goto	l14424
 21219     0657  3A03               	xorlw	3	; case 6
 21220     0658  1903               	skipnz
 21221     0659  2DFB               	goto	l14438
 21222     065A  2E33               	goto	l14456
 21223     065B                     l187:
 21224     065B  0008               	return
 21225     065C                     __end_of_LIGHTBLUE_ParseIncomingPacket:
 21226                           
 21227                           	psect	text71
 21228     0804                     __ptext71:	
 21229 ;; *************** function _LIGHTBLUE_PerformAction *****************
 21230 ;; Defined at:
 21231 ;;		line 499 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 21232 ;; Parameters:    Size  Location     Type
 21233 ;;  id              1    wreg     unsigned char 
 21234 ;;  data            1    7[BANK0 ] unsigned char 
 21235 ;; Auto vars:     Size  Location     Type
 21236 ;;  id              1    9[BANK0 ] unsigned char 
 21237 ;;  led             1   10[BANK0 ] unsigned char 
 21238 ;; Return value:  Size  Location     Type
 21239 ;;                  1    wreg      void 
 21240 ;; Registers used:
 21241 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21242 ;; Tracked objects:
 21243 ;;		On entry : 0/0
 21244 ;;		On exit  : 0/0
 21245 ;;		Unchanged: 0/0
 21246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21247 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21248 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21249 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21250 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21251 ;;Total ram usage:        4 bytes
 21252 ;; Hardware stack levels used: 1
 21253 ;; Hardware stack levels required when called: 10
 21254 ;; This function calls:
 21255 ;;		_EUSART1_Write
 21256 ;;		_EUSART2_Write
 21257 ;;		_LIGHTBLUE_SetErrorLedValue
 21258 ;; This function is called by:
 21259 ;;		_LIGHTBLUE_ParseIncomingPacket
 21260 ;; This function uses a non-reentrant model
 21261 ;;
 21262                           
 21263     0804                     _LIGHTBLUE_PerformAction:	
 21264                           ;psect for function _LIGHTBLUE_PerformAction
 21265                           
 21266                           
 21267                           ;incstack = 0
 21268                           ; Regs used in _LIGHTBLUE_PerformAction: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21269                           ;LIGHTBLUE_PerformAction@id stored from wreg
 21270     0804  0140               	movlb	0	; select bank0
 21271     0805  00A9               	movwf	LIGHTBLUE_PerformAction@id
 21272     0806                     l13642:
 21273                           
 21274                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 500:     uint8_t led;;mcc_generate
      +                          d_files/application/LIGHTBLUE_service.c: 502:     switch (id) {
 21275     0806  2833               	goto	l13654
 21276     0807                     l13644:
 21277                           
 21278                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 504:             led = (data >> 4)
      +                           & (0x01);
 21279     0807  0827               	movf	LIGHTBLUE_PerformAction@data,w
 21280     0808  00A8               	movwf	??_LIGHTBLUE_PerformAction
 21281     0809  3004               	movlw	4
 21282     080A                     u10465:
 21283     080A  36A8               	lsrf	??_LIGHTBLUE_PerformAction,f
 21284     080B  0B89               	decfsz	9,f
 21285     080C  280A               	goto	u10465
 21286     080D  0828               	movf	??_LIGHTBLUE_PerformAction,w
 21287     080E  3901               	andlw	1
 21288     080F  00AA               	movwf	LIGHTBLUE_PerformAction@led
 21289                           
 21290                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 505:             if (led == (0x00)
      +                          ) {
 21291     0810  082A               	movf	LIGHTBLUE_PerformAction@led,w
 21292     0811  1D03               	btfss	3,2
 21293     0812  2814               	goto	u10471
 21294     0813  2815               	goto	u10470
 21295     0814                     u10471:
 21296     0814  281D               	goto	l13648
 21297     0815                     u10470:
 21298     0815                     l13646:
 21299                           
 21300                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 506:                 if ((data & (
      +                          0x01)) == (0x00)) {
 21301     0815  1827               	btfsc	LIGHTBLUE_PerformAction@data,0
 21302     0816  2818               	goto	u10481
 21303     0817  2819               	goto	u10480
 21304     0818                     u10481:
 21305     0818  281B               	goto	l224
 21306     0819                     u10480:
 21307     0819                     l221:	
 21308                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 507:                     do { LATA
      +                          bits.LATA5 = 1; } while(0);
 21309                           
 21310     0819  1698               	bsf	24,5	;volatile
 21311     081A  283B               	goto	l230
 21312     081B                     l224:	
 21313                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 509:                     do { LATA
      +                          bits.LATA5 = 0; } while(0);
 21314                           
 21315     081B  1298               	bcf	24,5	;volatile
 21316     081C  283B               	goto	l230
 21317     081D                     l13648:
 21318                           
 21319                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 512:                 LIGHTBLUE_Set
      +                          ErrorLedValue(data & (0x01));
 21320     081D  1827               	btfsc	LIGHTBLUE_PerformAction@data,0
 21321     081E  2820               	goto	u10491
 21322     081F  2822               	goto	u10490
 21323     0820                     u10491:
 21324     0820  3001               	movlw	1
 21325     0821  2823               	goto	u10500
 21326     0822                     u10490:
 21327     0822  3000               	movlw	0
 21328     0823                     u10500:
 21329     0823  3190  2083  3188   	fcall	_LIGHTBLUE_SetErrorLedValue
 21330     0826  283B               	goto	l230
 21331     0827                     l13650:
 21332                           
 21333                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 516:             uart[UART_CDC].Wr
      +                          ite(data);
 21334     0827  0827               	movf	LIGHTBLUE_PerformAction@data,w
 21335     0828  00F1               	movwf	EUSART2_Write@txData
 21336     0829  3002               	movlw	low ((_uart+2)| (0+32768))
 21337     082A  0084               	movwf	4
 21338     082B  3098               	movlw	high ((_uart+2)| (0+32768))
 21339     082C  0085               	movwf	5
 21340     082D  3F01               	moviw [1]fsr0
 21341     082E  008A               	movwf	10
 21342     082F  3F00               	moviw [0]fsr0
 21343     0830  000A               	callw
 21344     0831  3188               	pagesel	$
 21345                           
 21346                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 517:             break;
 21347     0832  283B               	goto	l230
 21348     0833                     l13654:
 21349     0833  0829               	movf	LIGHTBLUE_PerformAction@id,w
 21350                           
 21351                           ; Switch size 1, requested type "simple"
 21352                           ; Number of cases is 2, Range of values is 76 to 83
 21353                           ; switch strategies available:
 21354                           ; Name         Instructions Cycles
 21355                           ; simple_byte            7     4 (average)
 21356                           ; direct_byte           25     9 (fixed)
 21357                           ; jumptable            263     9 (fixed)
 21358                           ;	Chosen strategy is simple_byte
 21359     0834  3A4C               	xorlw	76	; case 76
 21360     0835  1903               	skipnz
 21361     0836  2807               	goto	l13644
 21362     0837  3A1F               	xorlw	31	; case 83
 21363     0838  1903               	skipnz
 21364     0839  2827               	goto	l13650
 21365     083A  283B               	goto	l230
 21366     083B                     l230:
 21367     083B  0008               	return
 21368     083C                     __end_of_LIGHTBLUE_PerformAction:
 21369                           
 21370                           	psect	text72
 21371     1083                     __ptext72:	
 21372 ;; *************** function _LIGHTBLUE_SetErrorLedValue *****************
 21373 ;; Defined at:
 21374 ;;		line 487 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 21375 ;; Parameters:    Size  Location     Type
 21376 ;;  value           1    wreg     _Bool 
 21377 ;; Auto vars:     Size  Location     Type
 21378 ;;  value           1    6[BANK0 ] _Bool 
 21379 ;; Return value:  Size  Location     Type
 21380 ;;                  1    wreg      void 
 21381 ;; Registers used:
 21382 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21383 ;; Tracked objects:
 21384 ;;		On entry : 0/0
 21385 ;;		On exit  : 0/0
 21386 ;;		Unchanged: 0/0
 21387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21389 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21390 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21391 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21392 ;;Total ram usage:        2 bytes
 21393 ;; Hardware stack levels used: 1
 21394 ;; Hardware stack levels required when called: 9
 21395 ;; This function calls:
 21396 ;;		_LIGHTBLUE_UpdateErrorLed
 21397 ;; This function is called by:
 21398 ;;		_LIGHTBLUE_PerformAction
 21399 ;; This function uses a non-reentrant model
 21400 ;;
 21401                           
 21402     1083                     _LIGHTBLUE_SetErrorLedValue:	
 21403                           ;psect for function _LIGHTBLUE_SetErrorLedValue
 21404                           
 21405                           
 21406                           ;incstack = 0
 21407                           ; Regs used in _LIGHTBLUE_SetErrorLedValue: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21408                           ;LIGHTBLUE_SetErrorLedValue@value stored from wreg
 21409     1083  0140               	movlb	0	; select bank0
 21410     1084  00A6               	movwf	LIGHTBLUE_SetErrorLedValue@value
 21411     1085                     l13462:
 21412                           
 21413                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 488:     (bitMap.ioStateBitMap.p2_
      +                          2_state) = (0x01) - value;
 21414     1085  3001               	movlw	1
 21415     1086  00FB               	movwf	??_LIGHTBLUE_SetErrorLedValue
 21416     1087  0826               	movf	LIGHTBLUE_SetErrorLedValue@value,w
 21417     1088  02FB               	subwf	??_LIGHTBLUE_SetErrorLedValue,f
 21418     1089  0855               	movf	_bitMap+1,w	;volatile
 21419     108A  067B               	xorwf	??_LIGHTBLUE_SetErrorLedValue,w
 21420     108B  39FE               	andlw	-2
 21421     108C  067B               	xorwf	??_LIGHTBLUE_SetErrorLedValue,w
 21422     108D  00D5               	movwf	_bitMap+1	;volatile
 21423     108E                     l13464:
 21424                           
 21425                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 489:     LIGHTBLUE_UpdateErrorLed(
      +                          );
 21426     108E  3193  232D  3190   	fcall	_LIGHTBLUE_UpdateErrorLed
 21427     1091                     l211:
 21428     1091  0008               	return
 21429     1092                     __end_of_LIGHTBLUE_SetErrorLedValue:
 21430                           
 21431                           	psect	text73
 21432     132D                     __ptext73:	
 21433 ;; *************** function _LIGHTBLUE_UpdateErrorLed *****************
 21434 ;; Defined at:
 21435 ;;		line 492 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 21436 ;; Parameters:    Size  Location     Type
 21437 ;;		None
 21438 ;; Auto vars:     Size  Location     Type
 21439 ;;		None
 21440 ;; Return value:  Size  Location     Type
 21441 ;;                  1    wreg      void 
 21442 ;; Registers used:
 21443 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21444 ;; Tracked objects:
 21445 ;;		On entry : 0/0
 21446 ;;		On exit  : 0/0
 21447 ;;		Unchanged: 0/0
 21448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21453 ;;Total ram usage:        0 bytes
 21454 ;; Hardware stack levels used: 1
 21455 ;; Hardware stack levels required when called: 8
 21456 ;; This function calls:
 21457 ;;		_RN487X_Delay
 21458 ;;		_RN487X_EnterCmdMode
 21459 ;;		_RN487X_EnterDataMode
 21460 ;;		_RN487X_SetOutputs
 21461 ;; This function is called by:
 21462 ;;		_LIGHTBLUE_SetErrorLedValue
 21463 ;; This function uses a non-reentrant model
 21464 ;;
 21465                           
 21466     132D                     _LIGHTBLUE_UpdateErrorLed:	
 21467                           ;psect for function _LIGHTBLUE_UpdateErrorLed
 21468                           
 21469     132D                     l13372:	
 21470                           ;incstack = 0
 21471                           ; Regs used in _LIGHTBLUE_UpdateErrorLed: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21472                           
 21473                           
 21474                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 493:     RN487X_EnterCmdMode();
 21475     132D  3192  2204  3193   	fcall	_RN487X_EnterCmdMode
 21476     1330                     l13374:
 21477                           
 21478                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 494:     RN487X.DelayMs((20));
 21479     1330  3014               	movlw	20
 21480     1331  00F4               	movwf	RN487X_Delay@delayCount
 21481     1332  3000               	movlw	0
 21482     1333  00F5               	movwf	RN487X_Delay@delayCount+1
 21483     1334  3076               	movlw	low ((_RN487X+14)| (0+32768))
 21484     1335  0084               	movwf	4
 21485     1336  3098               	movlw	high ((_RN487X+14)| (0+32768))
 21486     1337  0085               	movwf	5
 21487     1338  3F01               	moviw [1]fsr0
 21488     1339  008A               	movwf	10
 21489     133A  3F00               	moviw [0]fsr0
 21490     133B  000A               	callw
 21491     133C  3193               	pagesel	$
 21492     133D                     l13376:
 21493                           
 21494                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 495:     RN487X_SetOutputs(bitMap)
      +                          ;
 21495     133D  0140               	movlb	0	; select bank0
 21496     133E  0855               	movf	_bitMap+1,w	;volatile
 21497     133F  00A1               	movwf	RN487X_SetOutputs@bitMap+1
 21498     1340  0854               	movf	_bitMap,w	;volatile
 21499     1341  00A0               	movwf	RN487X_SetOutputs@bitMap
 21500     1342  318A  22B1  3193   	fcall	_RN487X_SetOutputs
 21501     1345                     l13378:
 21502                           
 21503                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 496:     RN487X_EnterDataMode();
 21504     1345  3193  2312  3193   	fcall	_RN487X_EnterDataMode
 21505     1348                     l214:
 21506     1348  0008               	return
 21507     1349                     __end_of_LIGHTBLUE_UpdateErrorLed:
 21508                           
 21509                           	psect	text74
 21510     0AB1                     __ptext74:	
 21511 ;; *************** function _RN487X_SetOutputs *****************
 21512 ;; Defined at:
 21513 ;;		line 223 in file "mcc_generated_files/rn487x/rn487x.c"
 21514 ;; Parameters:    Size  Location     Type
 21515 ;;  bitMap          2    0[BANK0 ] struct .
 21516 ;; Auto vars:     Size  Location     Type
 21517 ;;  stateHighNib    1    5[BANK0 ] unsigned char 
 21518 ;;  ioHighNibble    1    4[BANK0 ] unsigned char 
 21519 ;;  stateLowNibb    1    3[BANK0 ] unsigned char 
 21520 ;;  ioLowNibble     1    2[BANK0 ] unsigned char 
 21521 ;; Return value:  Size  Location     Type
 21522 ;;                  1    wreg      _Bool 
 21523 ;; Registers used:
 21524 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21525 ;; Tracked objects:
 21526 ;;		On entry : 0/0
 21527 ;;		On exit  : 0/0
 21528 ;;		Unchanged: 0/0
 21529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21530 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21531 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21533 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21534 ;;Total ram usage:        6 bytes
 21535 ;; Hardware stack levels used: 1
 21536 ;; Hardware stack levels required when called: 7
 21537 ;; This function calls:
 21538 ;;		_RN487X_ReadDefaultResponse
 21539 ;;		_RN487X_SendCmd
 21540 ;; This function is called by:
 21541 ;;		_LIGHTBLUE_UpdateErrorLed
 21542 ;; This function uses a non-reentrant model
 21543 ;;
 21544                           
 21545     0AB1                     _RN487X_SetOutputs:	
 21546                           ;psect for function _RN487X_SetOutputs
 21547                           
 21548     0AB1                     l13232:	
 21549                           ;incstack = 0
 21550                           ; Regs used in _RN487X_SetOutputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21551                           
 21552                           
 21553                           ;mcc_generated_files/rn487x/rn487x.c: 226:     char ioLowNibble = '0';
 21554     0AB1  3030               	movlw	48
 21555     0AB2  0140               	movlb	0	; select bank0
 21556     0AB3  00A2               	movwf	RN487X_SetOutputs@ioLowNibble
 21557                           
 21558                           ;mcc_generated_files/rn487x/rn487x.c: 227:     char stateHighNibble = '0';
 21559     0AB4  3030               	movlw	48
 21560     0AB5  00A5               	movwf	RN487X_SetOutputs@stateHighNibble
 21561                           
 21562                           ;mcc_generated_files/rn487x/rn487x.c: 228:     char stateLowNibble = '0';
 21563     0AB6  3030               	movlw	48
 21564     0AB7  00A3               	movwf	RN487X_SetOutputs@stateLowNibble
 21565     0AB8                     l13234:
 21566                           
 21567                           ;mcc_generated_files/rn487x/rn487x.c: 231:     if (bitMap.ioBitMap.p1_3)
 21568     0AB8  1E20               	btfss	RN487X_SetOutputs@bitMap,4
 21569     0AB9  2ABB               	goto	u10021
 21570     0ABA  2ABC               	goto	u10020
 21571     0ABB                     u10021:
 21572     0ABB  2ABF               	goto	l13238
 21573     0ABC                     u10020:
 21574     0ABC                     l13236:
 21575                           
 21576                           ;mcc_generated_files/rn487x/rn487x.c: 232:     {;mcc_generated_files/rn487x/rn487x.c: 23
      +                          3:         ioHighNibble = '1';
 21577     0ABC  3031               	movlw	49
 21578     0ABD  00A4               	movwf	RN487X_SetOutputs@ioHighNibble
 21579                           
 21580                           ;mcc_generated_files/rn487x/rn487x.c: 234:     }
 21581     0ABE  2AC1               	goto	l13240
 21582     0ABF                     l13238:
 21583                           
 21584                           ;mcc_generated_files/rn487x/rn487x.c: 236:     {;mcc_generated_files/rn487x/rn487x.c: 23
      +                          7:         ioHighNibble = '0';
 21585     0ABF  3030               	movlw	48
 21586     0AC0  00A4               	movwf	RN487X_SetOutputs@ioHighNibble
 21587     0AC1                     l13240:
 21588                           
 21589                           ;mcc_generated_files/rn487x/rn487x.c: 239:     ioLowNibble = ( (0x0F & bitMap.ioBitMap.g
      +                          pioBitMap) + '0');
 21590     0AC1  0820               	movf	RN487X_SetOutputs@bitMap,w
 21591     0AC2  390F               	andlw	15
 21592     0AC3  3E30               	addlw	48
 21593     0AC4  00A2               	movwf	RN487X_SetOutputs@ioLowNibble
 21594     0AC5                     l13242:
 21595                           
 21596                           ;mcc_generated_files/rn487x/rn487x.c: 242:     if (bitMap.ioStateBitMap.p1_3_state)
 21597     0AC5  1E21               	btfss	RN487X_SetOutputs@bitMap+1,4
 21598     0AC6  2AC8               	goto	u10031
 21599     0AC7  2AC9               	goto	u10030
 21600     0AC8                     u10031:
 21601     0AC8  2ACC               	goto	l13246
 21602     0AC9                     u10030:
 21603     0AC9                     l13244:
 21604                           
 21605                           ;mcc_generated_files/rn487x/rn487x.c: 243:     {;mcc_generated_files/rn487x/rn487x.c: 24
      +                          4:         stateHighNibble = '1';
 21606     0AC9  3031               	movlw	49
 21607     0ACA  00A5               	movwf	RN487X_SetOutputs@stateHighNibble
 21608                           
 21609                           ;mcc_generated_files/rn487x/rn487x.c: 245:     }
 21610     0ACB  2ACE               	goto	l13248
 21611     0ACC                     l13246:
 21612                           
 21613                           ;mcc_generated_files/rn487x/rn487x.c: 247:     {;mcc_generated_files/rn487x/rn487x.c: 24
      +                          8:         stateHighNibble = '0';
 21614     0ACC  3030               	movlw	48
 21615     0ACD  00A5               	movwf	RN487X_SetOutputs@stateHighNibble
 21616     0ACE                     l13248:
 21617                           
 21618                           ;mcc_generated_files/rn487x/rn487x.c: 250:     stateLowNibble = ( (0x0F & bitMap.ioState
      +                          BitMap.gpioStateBitMap) + '0');
 21619     0ACE  0821               	movf	RN487X_SetOutputs@bitMap+1,w
 21620     0ACF  390F               	andlw	15
 21621     0AD0  3E30               	addlw	48
 21622     0AD1  00A3               	movwf	RN487X_SetOutputs@stateLowNibble
 21623     0AD2                     l13250:
 21624                           
 21625                           ;mcc_generated_files/rn487x/rn487x.c: 252:     cmdBuf[0] = '|';
 21626     0AD2  307C               	movlw	124
 21627     0AD3  0143               	movlb	3	; select bank3
 21628     0AD4  00A0               	movwf	_cmdBuf^(0+384)
 21629     0AD5                     l13252:
 21630                           
 21631                           ;mcc_generated_files/rn487x/rn487x.c: 253:     cmdBuf[1] = 'O';
 21632     0AD5  304F               	movlw	79
 21633     0AD6  00A1               	movwf	(_cmdBuf^(0+384)+1)
 21634     0AD7                     l13254:
 21635                           
 21636                           ;mcc_generated_files/rn487x/rn487x.c: 254:     cmdBuf[2] = ',';
 21637     0AD7  302C               	movlw	44
 21638     0AD8  00A2               	movwf	(_cmdBuf^(0+384)+2)
 21639     0AD9                     l13256:
 21640                           
 21641                           ;mcc_generated_files/rn487x/rn487x.c: 255:     cmdBuf[3] = ioHighNibble;
 21642     0AD9  0140               	movlb	0	; select bank0
 21643     0ADA  0824               	movf	RN487X_SetOutputs@ioHighNibble,w
 21644     0ADB  0143               	movlb	3	; select bank3
 21645     0ADC  00A3               	movwf	(_cmdBuf^(0+384)+3)
 21646     0ADD                     l13258:
 21647                           
 21648                           ;mcc_generated_files/rn487x/rn487x.c: 256:     cmdBuf[4] = ioLowNibble;
 21649     0ADD  0140               	movlb	0	; select bank0
 21650     0ADE  0822               	movf	RN487X_SetOutputs@ioLowNibble,w
 21651     0ADF  0143               	movlb	3	; select bank3
 21652     0AE0  00A4               	movwf	(_cmdBuf^(0+384)+4)
 21653     0AE1                     l13260:
 21654                           
 21655                           ;mcc_generated_files/rn487x/rn487x.c: 257:     cmdBuf[5] = ',';
 21656     0AE1  302C               	movlw	44
 21657     0AE2  00A5               	movwf	(_cmdBuf^(0+384)+5)
 21658     0AE3                     l13262:
 21659                           
 21660                           ;mcc_generated_files/rn487x/rn487x.c: 258:     cmdBuf[6] = stateHighNibble;
 21661     0AE3  0140               	movlb	0	; select bank0
 21662     0AE4  0825               	movf	RN487X_SetOutputs@stateHighNibble,w
 21663     0AE5  0143               	movlb	3	; select bank3
 21664     0AE6  00A6               	movwf	(_cmdBuf^(0+384)+6)
 21665     0AE7                     l13264:
 21666                           
 21667                           ;mcc_generated_files/rn487x/rn487x.c: 259:     cmdBuf[7] = stateLowNibble;
 21668     0AE7  0140               	movlb	0	; select bank0
 21669     0AE8  0823               	movf	RN487X_SetOutputs@stateLowNibble,w
 21670     0AE9  0143               	movlb	3	; select bank3
 21671     0AEA  00A7               	movwf	(_cmdBuf^(0+384)+7)
 21672     0AEB                     l13266:
 21673                           
 21674                           ;mcc_generated_files/rn487x/rn487x.c: 260:     cmdBuf[8] = '\r';
 21675     0AEB  300D               	movlw	13
 21676     0AEC  00A8               	movwf	(_cmdBuf^(0+384)+8)
 21677     0AED                     l13268:
 21678                           
 21679                           ;mcc_generated_files/rn487x/rn487x.c: 261:     cmdBuf[9] = '\n';
 21680     0AED  300A               	movlw	10
 21681     0AEE  00A9               	movwf	(_cmdBuf^(0+384)+9)
 21682     0AEF                     l13270:
 21683                           
 21684                           ;mcc_generated_files/rn487x/rn487x.c: 263:     RN487X_SendCmd(cmdBuf, 10);
 21685     0AEF  300A               	movlw	10
 21686     0AF0  00F7               	movwf	RN487X_SendCmd@cmdLen
 21687     0AF1  30A0               	movlw	(low (_cmdBuf| (0+256)))& (0+255)
 21688     0AF2  3196  26D2  318A   	fcall	_RN487X_SendCmd
 21689     0AF5                     l13272:
 21690                           
 21691                           ;mcc_generated_files/rn487x/rn487x.c: 264:     return RN487X_ReadDefaultResponse();;	Ret
      +                          urn value of _RN487X_SetOutputs is never used
 21692     0AF5  318E  26EC  318A   	fcall	_RN487X_ReadDefaultResponse
 21693     0AF8                     l933:
 21694     0AF8  0008               	return
 21695     0AF9                     __end_of_RN487X_SetOutputs:
 21696                           
 21697                           	psect	text75
 21698     0EEC                     __ptext75:	
 21699 ;; *************** function _RN487X_ReadDefaultResponse *****************
 21700 ;; Defined at:
 21701 ;;		line 125 in file "mcc_generated_files/rn487x/rn487x.c"
 21702 ;; Parameters:    Size  Location     Type
 21703 ;;		None
 21704 ;; Auto vars:     Size  Location     Type
 21705 ;;  resp            3    3[COMMON] unsigned char [3]
 21706 ;;  status          1    6[COMMON] _Bool 
 21707 ;; Return value:  Size  Location     Type
 21708 ;;                  1    wreg      _Bool 
 21709 ;; Registers used:
 21710 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21711 ;; Tracked objects:
 21712 ;;		On entry : 0/0
 21713 ;;		On exit  : 0/0
 21714 ;;		Unchanged: 0/0
 21715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21717 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21719 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21720 ;;Total ram usage:        4 bytes
 21721 ;; Hardware stack levels used: 1
 21722 ;; Hardware stack levels required when called: 6
 21723 ;; This function calls:
 21724 ;;		_RN487X_Read@rn487x_interface$F1381
 21725 ;; This function is called by:
 21726 ;;		_RN487X_SetOutputs
 21727 ;;		_RN487X_Disconnect
 21728 ;; This function uses a non-reentrant model
 21729 ;;
 21730                           
 21731     0EEC                     _RN487X_ReadDefaultResponse:	
 21732                           ;psect for function _RN487X_ReadDefaultResponse
 21733                           
 21734     0EEC                     l13118:	
 21735                           ;incstack = 0
 21736                           ; Regs used in _RN487X_ReadDefaultResponse: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21737                           
 21738                           
 21739                           ;mcc_generated_files/rn487x/rn487x.c: 127:     uint8_t resp[3];;mcc_generated_files/rn48
      +                          7x/rn487x.c: 128:     _Bool status = 0;
 21740     0EEC  01F6               	clrf	RN487X_ReadDefaultResponse@status
 21741     0EED                     l13120:
 21742                           
 21743                           ;mcc_generated_files/rn487x/rn487x.c: 130:     resp[0] = RN487X.Read();
 21744     0EED  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21745     0EEE  0084               	movwf	4
 21746     0EEF  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21747     0EF0  0085               	movwf	5
 21748     0EF1  3F01               	moviw [1]fsr0
 21749     0EF2  008A               	movwf	10
 21750     0EF3  3F00               	moviw [0]fsr0
 21751     0EF4  000A               	callw
 21752     0EF5  318E               	pagesel	$
 21753     0EF6  00F3               	movwf	RN487X_ReadDefaultResponse@resp
 21754     0EF7                     l13122:
 21755                           
 21756                           ;mcc_generated_files/rn487x/rn487x.c: 131:     resp[1] = RN487X.Read();
 21757     0EF7  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21758     0EF8  0084               	movwf	4
 21759     0EF9  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21760     0EFA  0085               	movwf	5
 21761     0EFB  3F01               	moviw [1]fsr0
 21762     0EFC  008A               	movwf	10
 21763     0EFD  3F00               	moviw [0]fsr0
 21764     0EFE  000A               	callw
 21765     0EFF  318E               	pagesel	$
 21766     0F00  00F4               	movwf	RN487X_ReadDefaultResponse@resp+1
 21767     0F01                     l13124:
 21768                           
 21769                           ;mcc_generated_files/rn487x/rn487x.c: 132:     resp[2] = RN487X.Read();
 21770     0F01  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21771     0F02  0084               	movwf	4
 21772     0F03  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21773     0F04  0085               	movwf	5
 21774     0F05  3F01               	moviw [1]fsr0
 21775     0F06  008A               	movwf	10
 21776     0F07  3F00               	moviw [0]fsr0
 21777     0F08  000A               	callw
 21778     0F09  318E               	pagesel	$
 21779     0F0A  00F5               	movwf	RN487X_ReadDefaultResponse@resp+2
 21780                           
 21781                           ;mcc_generated_files/rn487x/rn487x.c: 134:     switch (resp[0])
 21782     0F0B  2F2B               	goto	l13144
 21783     0F0C                     l13126:
 21784                           
 21785                           ;mcc_generated_files/rn487x/rn487x.c: 137:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 138:             if ((resp[1] == 'O') && (resp[2] == 'K'))
 21786     0F0C  304F               	movlw	79
 21787     0F0D  0674               	xorwf	RN487X_ReadDefaultResponse@resp+1,w
 21788     0F0E  1D03               	btfss	3,2
 21789     0F0F  2F11               	goto	u9871
 21790     0F10  2F12               	goto	u9870
 21791     0F11                     u9871:
 21792     0F11  2F33               	goto	l13146
 21793     0F12                     u9870:
 21794     0F12                     l13128:
 21795     0F12  304B               	movlw	75
 21796     0F13  0675               	xorwf	RN487X_ReadDefaultResponse@resp+2,w
 21797     0F14  1D03               	btfss	3,2
 21798     0F15  2F17               	goto	u9881
 21799     0F16  2F18               	goto	u9880
 21800     0F17                     u9881:
 21801     0F17  2F33               	goto	l13146
 21802     0F18                     u9880:
 21803     0F18                     l13130:
 21804                           
 21805                           ;mcc_generated_files/rn487x/rn487x.c: 139:                 status = 1;
 21806     0F18  01F6               	clrf	RN487X_ReadDefaultResponse@status
 21807     0F19  0AF6               	incf	RN487X_ReadDefaultResponse@status,f
 21808     0F1A  2F33               	goto	l13146
 21809     0F1B                     l13132:
 21810                           
 21811                           ;mcc_generated_files/rn487x/rn487x.c: 144:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 145:             if ((resp[1] == 'r') && (resp[2] == 'r'))
 21812     0F1B  3072               	movlw	114
 21813     0F1C  0674               	xorwf	RN487X_ReadDefaultResponse@resp+1,w
 21814     0F1D  1D03               	btfss	3,2
 21815     0F1E  2F20               	goto	u9891
 21816     0F1F  2F21               	goto	u9890
 21817     0F20                     u9891:
 21818     0F20  2F33               	goto	l13146
 21819     0F21                     u9890:
 21820     0F21                     l13134:
 21821     0F21  3072               	movlw	114
 21822     0F22  0675               	xorwf	RN487X_ReadDefaultResponse@resp+2,w
 21823     0F23  1D03               	btfss	3,2
 21824     0F24  2F26               	goto	u9901
 21825     0F25  2F27               	goto	u9900
 21826     0F26                     u9901:
 21827     0F26  2F33               	goto	l13146
 21828     0F27                     u9900:
 21829     0F27                     l13136:
 21830                           
 21831                           ;mcc_generated_files/rn487x/rn487x.c: 146:                 status = 0;
 21832     0F27  01F6               	clrf	RN487X_ReadDefaultResponse@status
 21833     0F28  2F33               	goto	l13146
 21834     0F29                     l13138:
 21835                           
 21836                           ;mcc_generated_files/rn487x/rn487x.c: 151:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 152:             return status;
 21837     0F29  3000               	movlw	0
 21838     0F2A  2F73               	goto	l908
 21839     0F2B                     l13144:
 21840     0F2B  0873               	movf	RN487X_ReadDefaultResponse@resp,w
 21841                           
 21842                           ; Switch size 1, requested type "simple"
 21843                           ; Number of cases is 2, Range of values is 65 to 69
 21844                           ; switch strategies available:
 21845                           ; Name         Instructions Cycles
 21846                           ; simple_byte            7     4 (average)
 21847                           ; direct_byte           19     9 (fixed)
 21848                           ; jumptable            263     9 (fixed)
 21849                           ;	Chosen strategy is simple_byte
 21850     0F2C  3A41               	xorlw	65	; case 65
 21851     0F2D  1903               	skipnz
 21852     0F2E  2F0C               	goto	l13126
 21853     0F2F  3A04               	xorlw	4	; case 69
 21854     0F30  1903               	skipnz
 21855     0F31  2F1B               	goto	l13132
 21856     0F32  2F29               	goto	l13138
 21857     0F33                     l13146:
 21858                           
 21859                           ;mcc_generated_files/rn487x/rn487x.c: 157:     RN487X.Read();
 21860     0F33  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21861     0F34  0084               	movwf	4
 21862     0F35  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21863     0F36  0085               	movwf	5
 21864     0F37  3F01               	moviw [1]fsr0
 21865     0F38  008A               	movwf	10
 21866     0F39  3F00               	moviw [0]fsr0
 21867     0F3A  000A               	callw
 21868     0F3B  318E               	pagesel	$
 21869                           
 21870                           ;mcc_generated_files/rn487x/rn487x.c: 158:     RN487X.Read();
 21871     0F3C  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21872     0F3D  0084               	movwf	4
 21873     0F3E  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21874     0F3F  0085               	movwf	5
 21875     0F40  3F01               	moviw [1]fsr0
 21876     0F41  008A               	movwf	10
 21877     0F42  3F00               	moviw [0]fsr0
 21878     0F43  000A               	callw
 21879     0F44  318E               	pagesel	$
 21880                           
 21881                           ;mcc_generated_files/rn487x/rn487x.c: 161:     RN487X.Read();
 21882     0F45  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21883     0F46  0084               	movwf	4
 21884     0F47  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21885     0F48  0085               	movwf	5
 21886     0F49  3F01               	moviw [1]fsr0
 21887     0F4A  008A               	movwf	10
 21888     0F4B  3F00               	moviw [0]fsr0
 21889     0F4C  000A               	callw
 21890     0F4D  318E               	pagesel	$
 21891                           
 21892                           ;mcc_generated_files/rn487x/rn487x.c: 162:     RN487X.Read();
 21893     0F4E  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21894     0F4F  0084               	movwf	4
 21895     0F50  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21896     0F51  0085               	movwf	5
 21897     0F52  3F01               	moviw [1]fsr0
 21898     0F53  008A               	movwf	10
 21899     0F54  3F00               	moviw [0]fsr0
 21900     0F55  000A               	callw
 21901     0F56  318E               	pagesel	$
 21902                           
 21903                           ;mcc_generated_files/rn487x/rn487x.c: 163:     RN487X.Read();
 21904     0F57  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21905     0F58  0084               	movwf	4
 21906     0F59  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21907     0F5A  0085               	movwf	5
 21908     0F5B  3F01               	moviw [1]fsr0
 21909     0F5C  008A               	movwf	10
 21910     0F5D  3F00               	moviw [0]fsr0
 21911     0F5E  000A               	callw
 21912     0F5F  318E               	pagesel	$
 21913                           
 21914                           ;mcc_generated_files/rn487x/rn487x.c: 164:     RN487X.Read();
 21915     0F60  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21916     0F61  0084               	movwf	4
 21917     0F62  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21918     0F63  0085               	movwf	5
 21919     0F64  3F01               	moviw [1]fsr0
 21920     0F65  008A               	movwf	10
 21921     0F66  3F00               	moviw [0]fsr0
 21922     0F67  000A               	callw
 21923     0F68  318E               	pagesel	$
 21924                           
 21925                           ;mcc_generated_files/rn487x/rn487x.c: 165:     RN487X.Read();
 21926     0F69  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21927     0F6A  0084               	movwf	4
 21928     0F6B  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21929     0F6C  0085               	movwf	5
 21930     0F6D  3F01               	moviw [1]fsr0
 21931     0F6E  008A               	movwf	10
 21932     0F6F  3F00               	moviw [0]fsr0
 21933     0F70  000A               	callw
 21934     0F71  318E               	pagesel	$
 21935     0F72                     l13148:
 21936                           
 21937                           ;mcc_generated_files/rn487x/rn487x.c: 167:     return status;
 21938     0F72  0876               	movf	RN487X_ReadDefaultResponse@status,w
 21939     0F73                     l908:
 21940     0F73  0008               	return
 21941     0F74                     __end_of_RN487X_ReadDefaultResponse:
 21942                           
 21943                           	psect	text76
 21944     1312                     __ptext76:	
 21945 ;; *************** function _RN487X_EnterDataMode *****************
 21946 ;; Defined at:
 21947 ;;		line 208 in file "mcc_generated_files/rn487x/rn487x.c"
 21948 ;; Parameters:    Size  Location     Type
 21949 ;;		None
 21950 ;; Auto vars:     Size  Location     Type
 21951 ;;		None
 21952 ;; Return value:  Size  Location     Type
 21953 ;;                  1    wreg      _Bool 
 21954 ;; Registers used:
 21955 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21956 ;; Tracked objects:
 21957 ;;		On entry : 0/0
 21958 ;;		On exit  : 0/0
 21959 ;;		Unchanged: 0/0
 21960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21965 ;;Total ram usage:        0 bytes
 21966 ;; Hardware stack levels used: 1
 21967 ;; Hardware stack levels required when called: 7
 21968 ;; This function calls:
 21969 ;;		_RN487X_ReadMsg
 21970 ;;		_RN487X_SendCmd
 21971 ;; This function is called by:
 21972 ;;		_LIGHTBLUE_UpdateErrorLed
 21973 ;; This function uses a non-reentrant model
 21974 ;;
 21975                           
 21976     1312                     _RN487X_EnterDataMode:	
 21977                           ;psect for function _RN487X_EnterDataMode
 21978                           
 21979     1312                     l13276:	
 21980                           ;incstack = 0
 21981                           ; Regs used in _RN487X_EnterDataMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21982                           
 21983                           
 21984                           ;mcc_generated_files/rn487x/rn487x.c: 210:     const uint8_t cmdPrompt[] = {'E', 'N', 'D
      +                          ', '\r', '\n'};;mcc_generated_files/rn487x/rn487x.c: 212:     cmdBuf[0] = '-';
 21985     1312  302D               	movlw	45
 21986     1313  0143               	movlb	3	; select bank3
 21987     1314  00A0               	movwf	_cmdBuf^(0+384)
 21988                           
 21989                           ;mcc_generated_files/rn487x/rn487x.c: 213:     cmdBuf[1] = '-';
 21990     1315  302D               	movlw	45
 21991     1316  00A1               	movwf	(_cmdBuf^(0+384)+1)
 21992                           
 21993                           ;mcc_generated_files/rn487x/rn487x.c: 214:     cmdBuf[2] = '-';
 21994     1317  302D               	movlw	45
 21995     1318  00A2               	movwf	(_cmdBuf^(0+384)+2)
 21996                           
 21997                           ;mcc_generated_files/rn487x/rn487x.c: 215:     cmdBuf[3] = '\r';
 21998     1319  300D               	movlw	13
 21999     131A  00A3               	movwf	(_cmdBuf^(0+384)+3)
 22000                           
 22001                           ;mcc_generated_files/rn487x/rn487x.c: 216:     cmdBuf[4] = '\n';
 22002     131B  300A               	movlw	10
 22003     131C  00A4               	movwf	(_cmdBuf^(0+384)+4)
 22004     131D                     l13278:
 22005                           
 22006                           ;mcc_generated_files/rn487x/rn487x.c: 218:     RN487X_SendCmd(cmdBuf, 5);
 22007     131D  3005               	movlw	5
 22008     131E  00F7               	movwf	RN487X_SendCmd@cmdLen
 22009     131F  30A0               	movlw	(low (_cmdBuf| (0+256)))& (0+255)
 22010     1320  3196  26D2  3193   	fcall	_RN487X_SendCmd
 22011     1323                     l13280:
 22012                           
 22013                           ;mcc_generated_files/rn487x/rn487x.c: 220:     return RN487X_ReadMsg(cmdPrompt, sizeof (
      +                          cmdPrompt));;	Return value of _RN487X_EnterDataMode is never used
 22014     1323  301C               	movlw	low (RN487X_EnterDataMode@cmdPrompt| (0+32768))
 22015     1324  00F3               	movwf	RN487X_ReadMsg@expectedMsg
 22016     1325  30A0               	movlw	high (RN487X_EnterDataMode@cmdPrompt| (0+32768))
 22017     1326  00F4               	movwf	RN487X_ReadMsg@expectedMsg+1
 22018     1327  3005               	movlw	5
 22019     1328  00F5               	movwf	RN487X_ReadMsg@msgLen
 22020     1329  3195  25C3  3193   	fcall	_RN487X_ReadMsg
 22021     132C                     l926:
 22022     132C  0008               	return
 22023     132D                     __end_of_RN487X_EnterDataMode:
 22024                           
 22025                           	psect	text77
 22026     1204                     __ptext77:	
 22027 ;; *************** function _RN487X_EnterCmdMode *****************
 22028 ;; Defined at:
 22029 ;;		line 195 in file "mcc_generated_files/rn487x/rn487x.c"
 22030 ;; Parameters:    Size  Location     Type
 22031 ;;		None
 22032 ;; Auto vars:     Size  Location     Type
 22033 ;;		None
 22034 ;; Return value:  Size  Location     Type
 22035 ;;                  1    wreg      _Bool 
 22036 ;; Registers used:
 22037 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22038 ;; Tracked objects:
 22039 ;;		On entry : 0/0
 22040 ;;		On exit  : 0/0
 22041 ;;		Unchanged: 0/0
 22042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22047 ;;Total ram usage:        0 bytes
 22048 ;; Hardware stack levels used: 1
 22049 ;; Hardware stack levels required when called: 7
 22050 ;; This function calls:
 22051 ;;		_RN487X_ReadMsg
 22052 ;;		_RN487X_SendCmd
 22053 ;; This function is called by:
 22054 ;;		_LIGHTBLUE_UpdateErrorLed
 22055 ;; This function uses a non-reentrant model
 22056 ;;
 22057                           
 22058     1204                     _RN487X_EnterCmdMode:	
 22059                           ;psect for function _RN487X_EnterCmdMode
 22060                           
 22061     1204                     l13224:	
 22062                           ;incstack = 0
 22063                           ; Regs used in _RN487X_EnterCmdMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22064                           
 22065                           
 22066                           ;mcc_generated_files/rn487x/rn487x.c: 197:     const uint8_t cmdPrompt[] = {'C', 'M', 'D
      +                          ', '>', ' '};;mcc_generated_files/rn487x/rn487x.c: 199:     cmdBuf[0] = '$';
 22067     1204  3024               	movlw	36
 22068     1205  0143               	movlb	3	; select bank3
 22069     1206  00A0               	movwf	_cmdBuf^(0+384)
 22070                           
 22071                           ;mcc_generated_files/rn487x/rn487x.c: 200:     cmdBuf[1] = '$';
 22072     1207  3024               	movlw	36
 22073     1208  00A1               	movwf	(_cmdBuf^(0+384)+1)
 22074                           
 22075                           ;mcc_generated_files/rn487x/rn487x.c: 201:     cmdBuf[2] = '$';
 22076     1209  3024               	movlw	36
 22077     120A  00A2               	movwf	(_cmdBuf^(0+384)+2)
 22078     120B                     l13226:
 22079                           
 22080                           ;mcc_generated_files/rn487x/rn487x.c: 203:     RN487X_SendCmd(cmdBuf, 3);
 22081     120B  3003               	movlw	3
 22082     120C  00F7               	movwf	RN487X_SendCmd@cmdLen
 22083     120D  30A0               	movlw	(low (_cmdBuf| (0+256)))& (0+255)
 22084     120E  3196  26D2  3192   	fcall	_RN487X_SendCmd
 22085     1211                     l13228:
 22086                           
 22087                           ;mcc_generated_files/rn487x/rn487x.c: 205:     return RN487X_ReadMsg(cmdPrompt, sizeof (
      +                          cmdPrompt));;	Return value of _RN487X_EnterCmdMode is never used
 22088     1211  3021               	movlw	low (RN487X_EnterCmdMode@cmdPrompt| (0+32768))
 22089     1212  00F3               	movwf	RN487X_ReadMsg@expectedMsg
 22090     1213  30A0               	movlw	high (RN487X_EnterCmdMode@cmdPrompt| (0+32768))
 22091     1214  00F4               	movwf	RN487X_ReadMsg@expectedMsg+1
 22092     1215  3005               	movlw	5
 22093     1216  00F5               	movwf	RN487X_ReadMsg@msgLen
 22094     1217  3195  25C3  3192   	fcall	_RN487X_ReadMsg
 22095     121A                     l921:
 22096     121A  0008               	return
 22097     121B                     __end_of_RN487X_EnterCmdMode:
 22098                           
 22099                           	psect	text78
 22100     16D2                     __ptext78:	
 22101 ;; *************** function _RN487X_SendCmd *****************
 22102 ;; Defined at:
 22103 ;;		line 79 in file "mcc_generated_files/rn487x/rn487x.c"
 22104 ;; Parameters:    Size  Location     Type
 22105 ;;  cmd             1    wreg     PTR const unsigned char 
 22106 ;;		 -> cmdBuf(64), 
 22107 ;;  cmdLen          1    7[COMMON] unsigned char 
 22108 ;; Auto vars:     Size  Location     Type
 22109 ;;  cmd             1   10[COMMON] PTR const unsigned char 
 22110 ;;		 -> cmdBuf(64), 
 22111 ;;  index           1    9[COMMON] unsigned char 
 22112 ;; Return value:  Size  Location     Type
 22113 ;;                  1    wreg      void 
 22114 ;; Registers used:
 22115 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22116 ;; Tracked objects:
 22117 ;;		On entry : 0/0
 22118 ;;		On exit  : 0/0
 22119 ;;		Unchanged: 0/0
 22120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22121 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22122 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22123 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22124 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22125 ;;Total ram usage:        4 bytes
 22126 ;; Hardware stack levels used: 1
 22127 ;; Hardware stack levels required when called: 6
 22128 ;; This function calls:
 22129 ;;		_RN487X_Write
 22130 ;;		_RN487X_is_tx_done
 22131 ;; This function is called by:
 22132 ;;		_RN487X_EnterCmdMode
 22133 ;;		_RN487X_EnterDataMode
 22134 ;;		_RN487X_SetOutputs
 22135 ;;		_RN487X_GetCmd
 22136 ;;		_RN487X_GetInputsValues
 22137 ;;		_RN487X_RebootCmd
 22138 ;;		_RN487X_Disconnect
 22139 ;; This function uses a non-reentrant model
 22140 ;;
 22141                           
 22142     16D2                     _RN487X_SendCmd:	
 22143                           ;psect for function _RN487X_SendCmd
 22144                           
 22145                           
 22146                           ;incstack = 0
 22147                           ; Regs used in _RN487X_SendCmd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22148                           ;RN487X_SendCmd@cmd stored from wreg
 22149     16D2  00FA               	movwf	RN487X_SendCmd@cmd
 22150     16D3                     l13090:
 22151                           
 22152                           ;mcc_generated_files/rn487x/rn487x.c: 79: void RN487X_SendCmd(const uint8_t *cmd, uint8_
      +                          t cmdLen);mcc_generated_files/rn487x/rn487x.c: 80: {;mcc_generated_files/rn487x/rn487x.c
      +                          : 81:     uint8_t index = 0;
 22153     16D3  01F9               	clrf	RN487X_SendCmd@index
 22154                           
 22155                           ;mcc_generated_files/rn487x/rn487x.c: 83:     while (index < cmdLen)
 22156     16D4  2EF9               	goto	l13098
 22157     16D5                     l13092:
 22158                           
 22159                           ;mcc_generated_files/rn487x/rn487x.c: 84:     {;mcc_generated_files/rn487x/rn487x.c: 85:
      +                                   if (RN487X.TransmitDone())
 22160     16D5  306C               	movlw	low ((_RN487X+4)| (0+32768))
 22161     16D6  0084               	movwf	4
 22162     16D7  3098               	movlw	high ((_RN487X+4)| (0+32768))
 22163     16D8  0085               	movwf	5
 22164     16D9  3F01               	moviw [1]fsr0
 22165     16DA  008A               	movwf	10
 22166     16DB  3F00               	moviw [0]fsr0
 22167     16DC  000A               	callw
 22168     16DD  3196               	pagesel	$
 22169     16DE  3A00               	xorlw	0
 22170     16DF  1903               	skipnz
 22171     16E0  2EE2               	goto	u9831
 22172     16E1  2EE3               	goto	u9830
 22173     16E2                     u9831:
 22174     16E2  2EF9               	goto	l13098
 22175     16E3                     u9830:
 22176     16E3                     l13094:
 22177                           
 22178                           ;mcc_generated_files/rn487x/rn487x.c: 86:         {;mcc_generated_files/rn487x/rn487x.c:
      +                           87:             RN487X.Write(cmd[index]);
 22179     16E3  0879               	movf	RN487X_SendCmd@index,w
 22180     16E4  077A               	addwf	RN487X_SendCmd@cmd,w
 22181     16E5  00F8               	movwf	??_RN487X_SendCmd
 22182     16E6  0878               	movf	??_RN487X_SendCmd,w
 22183     16E7  0086               	movwf	6
 22184     16E8  3001               	movlw	1	; select bank2/3
 22185     16E9  0087               	movwf	7
 22186     16EA  0801               	movf	1,w
 22187     16EB  00F6               	movwf	RN487X_Write@txData
 22188     16EC  3068               	movlw	low (_RN487X| (0+32768))
 22189     16ED  0084               	movwf	4
 22190     16EE  3098               	movlw	high (_RN487X| (0+32768))
 22191     16EF  0085               	movwf	5
 22192     16F0  3F01               	moviw [1]fsr0
 22193     16F1  008A               	movwf	10
 22194     16F2  3F00               	moviw [0]fsr0
 22195     16F3  000A               	callw
 22196     16F4  3196               	pagesel	$
 22197     16F5                     l13096:
 22198                           
 22199                           ;mcc_generated_files/rn487x/rn487x.c: 88:             index++;
 22200     16F5  3001               	movlw	1
 22201     16F6  00F8               	movwf	??_RN487X_SendCmd
 22202     16F7  0878               	movf	??_RN487X_SendCmd,w
 22203     16F8  07F9               	addwf	RN487X_SendCmd@index,f
 22204     16F9                     l13098:
 22205                           
 22206                           ;mcc_generated_files/rn487x/rn487x.c: 83:     while (index < cmdLen)
 22207     16F9  0877               	movf	RN487X_SendCmd@cmdLen,w
 22208     16FA  0279               	subwf	RN487X_SendCmd@index,w
 22209     16FB  1C03               	skipc
 22210     16FC  2EFE               	goto	u9841
 22211     16FD  2EFF               	goto	u9840
 22212     16FE                     u9841:
 22213     16FE  2ED5               	goto	l13092
 22214     16FF                     u9840:
 22215     16FF                     l886:
 22216     16FF  0008               	return
 22217     1700                     __end_of_RN487X_SendCmd:
 22218                           
 22219                           	psect	text79
 22220     1FA0                     __ptext79:	
 22221 ;; *************** function _RN487X_is_tx_done *****************
 22222 ;; Defined at:
 22223 ;;		line 262 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 22224 ;; Parameters:    Size  Location     Type
 22225 ;;		None
 22226 ;; Auto vars:     Size  Location     Type
 22227 ;;		None
 22228 ;; Return value:  Size  Location     Type
 22229 ;;                  1    wreg      _Bool 
 22230 ;; Registers used:
 22231 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 22232 ;; Tracked objects:
 22233 ;;		On entry : 0/0
 22234 ;;		On exit  : 0/0
 22235 ;;		Unchanged: 0/0
 22236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22241 ;;Total ram usage:        0 bytes
 22242 ;; Hardware stack levels used: 1
 22243 ;; Hardware stack levels required when called: 5
 22244 ;; This function calls:
 22245 ;;		_EUSART1_is_tx_done
 22246 ;;		_EUSART2_is_tx_done
 22247 ;; This function is called by:
 22248 ;;		_RN487X_SendCmd
 22249 ;; This function uses a non-reentrant model
 22250 ;;
 22251                           
 22252     1FA0                     _RN487X_is_tx_done:	
 22253                           ;psect for function _RN487X_is_tx_done
 22254                           
 22255     1FA0                     l13060:	
 22256                           ;incstack = 0
 22257                           ; Regs used in _RN487X_is_tx_done: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 22258                           
 22259                           
 22260                           ;mcc_generated_files/rn487x/rn487x_interface.c: 264:     return uart[UART_BLE].TransmitD
      +                          one();
 22261     1FA0  3022               	movlw	low ((_uart+34)| (0+32768))
 22262     1FA1  0084               	movwf	4
 22263     1FA2  3098               	movlw	high ((_uart+34)| (0+32768))
 22264     1FA3  0085               	movwf	5
 22265     1FA4  3F01               	moviw [1]fsr0
 22266     1FA5  008A               	movwf	10
 22267     1FA6  3F00               	moviw [0]fsr0
 22268     1FA7  000A               	callw
 22269     1FA8  319F               	pagesel	$
 22270     1FA9                     l792:
 22271     1FA9  0008               	return
 22272     1FAA                     __end_of_RN487X_is_tx_done:
 22273                           
 22274                           	psect	text80
 22275     0800                     __ptext80:	
 22276 ;; *************** function _EUSART1_is_tx_done *****************
 22277 ;; Defined at:
 22278 ;;		line 142 in file "mcc_generated_files/eusart1.c"
 22279 ;; Parameters:    Size  Location     Type
 22280 ;;		None
 22281 ;; Auto vars:     Size  Location     Type
 22282 ;;		None
 22283 ;; Return value:  Size  Location     Type
 22284 ;;                  1    wreg      _Bool 
 22285 ;; Registers used:
 22286 ;;		wreg, status,2, status,0
 22287 ;; Tracked objects:
 22288 ;;		On entry : 0/0
 22289 ;;		On exit  : 0/0
 22290 ;;		Unchanged: 0/0
 22291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22296 ;;Total ram usage:        0 bytes
 22297 ;; Hardware stack levels used: 1
 22298 ;; Hardware stack levels required when called: 4
 22299 ;; This function calls:
 22300 ;;		Nothing
 22301 ;; This function is called by:
 22302 ;;		_RN487X_is_tx_done
 22303 ;; This function uses a non-reentrant model
 22304 ;;
 22305                           
 22306     0800                     _EUSART1_is_tx_done:	
 22307                           ;psect for function _EUSART1_is_tx_done
 22308                           
 22309     0800                     l13000:	
 22310                           ;incstack = 0
 22311                           ; Regs used in _EUSART1_is_tx_done: [wreg+status,2+status,0]
 22312                           
 22313                           
 22314                           ;mcc_generated_files/eusart1.c: 144:     return TX1STAbits.TRMT;
 22315     0800  0142               	movlb	2	; select bank2
 22316     0801  0C1E               	rrf	30,w	;volatile
 22317     0802  3901               	andlw	1
 22318     0803                     l1204:
 22319     0803  0008               	return
 22320     0804                     __end_of_EUSART1_is_tx_done:
 22321                           
 22322                           	psect	text81
 22323     1E94                     __ptext81:	
 22324 ;; *************** function _EUSART2_is_tx_done *****************
 22325 ;; Defined at:
 22326 ;;		line 142 in file "mcc_generated_files/eusart2.c"
 22327 ;; Parameters:    Size  Location     Type
 22328 ;;		None
 22329 ;; Auto vars:     Size  Location     Type
 22330 ;;		None
 22331 ;; Return value:  Size  Location     Type
 22332 ;;                  1    wreg      _Bool 
 22333 ;; Registers used:
 22334 ;;		wreg, status,2, status,0
 22335 ;; Tracked objects:
 22336 ;;		On entry : 0/0
 22337 ;;		On exit  : 0/0
 22338 ;;		Unchanged: 0/0
 22339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22344 ;;Total ram usage:        0 bytes
 22345 ;; Hardware stack levels used: 1
 22346 ;; Hardware stack levels required when called: 4
 22347 ;; This function calls:
 22348 ;;		Nothing
 22349 ;; This function is called by:
 22350 ;;		_RN487X_is_tx_done
 22351 ;; This function uses a non-reentrant model
 22352 ;;
 22353                           
 22354     1E94                     _EUSART2_is_tx_done:	
 22355                           ;psect for function _EUSART2_is_tx_done
 22356                           
 22357     1E94                     l12956:	
 22358                           ;incstack = 0
 22359                           ; Regs used in _EUSART2_is_tx_done: [wreg+status,2+status,0]
 22360                           
 22361                           
 22362                           ;mcc_generated_files/eusart2.c: 144:     return TX2STAbits.TRMT;
 22363     1E94  0154               	movlb	20	; select bank20
 22364     1E95  0C1E               	rrf	30,w	;volatile
 22365     1E96  3901               	andlw	1
 22366     1E97                     l1060:
 22367     1E97  0008               	return
 22368     1E98                     __end_of_EUSART2_is_tx_done:
 22369                           
 22370                           	psect	text82
 22371     15C3                     __ptext82:	
 22372 ;; *************** function _RN487X_ReadMsg *****************
 22373 ;; Defined at:
 22374 ;;		line 108 in file "mcc_generated_files/rn487x/rn487x.c"
 22375 ;; Parameters:    Size  Location     Type
 22376 ;;  expectedMsg     2    3[COMMON] PTR const unsigned char 
 22377 ;;		 -> RN487X_RebootCmd@reboot(11), RN487X_GetInputsValues@ioValue(2), RN487X_EnterDataMode@cmdPrompt(5), RN487X_EnterC
      +mdMode@cmdPrompt(5), 
 22378 ;;  msgLen          1    5[COMMON] unsigned char 
 22379 ;; Auto vars:     Size  Location     Type
 22380 ;;  index           1    9[COMMON] unsigned char 
 22381 ;;  resp            1    8[COMMON] unsigned char 
 22382 ;; Return value:  Size  Location     Type
 22383 ;;                  1    wreg      _Bool 
 22384 ;; Registers used:
 22385 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22386 ;; Tracked objects:
 22387 ;;		On entry : 0/0
 22388 ;;		On exit  : 0/0
 22389 ;;		Unchanged: 0/0
 22390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22391 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22392 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22393 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22394 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22395 ;;Total ram usage:        7 bytes
 22396 ;; Hardware stack levels used: 1
 22397 ;; Hardware stack levels required when called: 6
 22398 ;; This function calls:
 22399 ;;		_RN487X_Read@rn487x_interface$F1381
 22400 ;; This function is called by:
 22401 ;;		_RN487X_EnterCmdMode
 22402 ;;		_RN487X_EnterDataMode
 22403 ;;		_RN487X_GetInputsValues
 22404 ;;		_RN487X_RebootCmd
 22405 ;; This function uses a non-reentrant model
 22406 ;;
 22407                           
 22408     15C3                     _RN487X_ReadMsg:	
 22409                           ;psect for function _RN487X_ReadMsg
 22410                           
 22411     15C3                     l13100:	
 22412                           ;incstack = 0
 22413                           ; Regs used in _RN487X_ReadMsg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22414                           
 22415                           
 22416                           ;mcc_generated_files/rn487x/rn487x.c: 108: _Bool RN487X_ReadMsg(const uint8_t *expectedM
      +                          sg, uint8_t msgLen);mcc_generated_files/rn487x/rn487x.c: 109: {;mcc_generated_files/rn48
      +                          7x/rn487x.c: 110:     uint8_t index;;mcc_generated_files/rn487x/rn487x.c: 111:     uint8
      +                          _t resp;;mcc_generated_files/rn487x/rn487x.c: 113:     for (index = 0; index < msgLen; i
      +                          ndex++)
 22417     15C3  01F9               	clrf	RN487X_ReadMsg@index
 22418     15C4  2DE6               	goto	l13112
 22419     15C5                     l13102:
 22420                           
 22421                           ;mcc_generated_files/rn487x/rn487x.c: 114:     {;mcc_generated_files/rn487x/rn487x.c: 11
      +                          5:         resp = RN487X.Read();
 22422     15C5  306A               	movlw	low ((_RN487X+2)| (0+32768))
 22423     15C6  0084               	movwf	4
 22424     15C7  3098               	movlw	high ((_RN487X+2)| (0+32768))
 22425     15C8  0085               	movwf	5
 22426     15C9  3F01               	moviw [1]fsr0
 22427     15CA  008A               	movwf	10
 22428     15CB  3F00               	moviw [0]fsr0
 22429     15CC  000A               	callw
 22430     15CD  3195               	pagesel	$
 22431     15CE  00F8               	movwf	RN487X_ReadMsg@resp
 22432     15CF                     l13104:
 22433                           
 22434                           ;mcc_generated_files/rn487x/rn487x.c: 116:         if (resp != expectedMsg[index])
 22435     15CF  0874               	movf	RN487X_ReadMsg@expectedMsg+1,w
 22436     15D0  00F7               	movwf	??_RN487X_ReadMsg+1
 22437     15D1  0873               	movf	RN487X_ReadMsg@expectedMsg,w
 22438     15D2  00F6               	movwf	??_RN487X_ReadMsg
 22439     15D3  0879               	movf	RN487X_ReadMsg@index,w
 22440     15D4  0776               	addwf	??_RN487X_ReadMsg,w
 22441     15D5  0084               	movwf	4
 22442     15D6  0877               	movf	??_RN487X_ReadMsg+1,w
 22443     15D7  1803               	skipnc
 22444     15D8  0A77               	incf	??_RN487X_ReadMsg+1,w
 22445     15D9  0085               	movwf	5
 22446     15DA  0800               	movf	0,w	;code access
 22447     15DB  0678               	xorwf	RN487X_ReadMsg@resp,w
 22448     15DC  1903               	skipnz
 22449     15DD  2DDF               	goto	u9851
 22450     15DE  2DE0               	goto	u9850
 22451     15DF                     u9851:
 22452     15DF  2DE2               	goto	l13110
 22453     15E0                     u9850:
 22454     15E0                     l13106:
 22455                           
 22456                           ;mcc_generated_files/rn487x/rn487x.c: 117:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 118:             return 0;
 22457     15E0  3000               	movlw	0
 22458     15E1  2DED               	goto	l897
 22459     15E2                     l13110:
 22460                           
 22461                           ;mcc_generated_files/rn487x/rn487x.c: 120:     }
 22462     15E2  3001               	movlw	1
 22463     15E3  00F6               	movwf	??_RN487X_ReadMsg
 22464     15E4  0876               	movf	??_RN487X_ReadMsg,w
 22465     15E5  07F9               	addwf	RN487X_ReadMsg@index,f
 22466     15E6                     l13112:
 22467     15E6  0875               	movf	RN487X_ReadMsg@msgLen,w
 22468     15E7  0279               	subwf	RN487X_ReadMsg@index,w
 22469     15E8  1C03               	skipc
 22470     15E9  2DEB               	goto	u9861
 22471     15EA  2DEC               	goto	u9860
 22472     15EB                     u9861:
 22473     15EB  2DC5               	goto	l13102
 22474     15EC                     u9860:
 22475     15EC                     l13114:
 22476                           
 22477                           ;mcc_generated_files/rn487x/rn487x.c: 122:     return 1;
 22478     15EC  3001               	movlw	1
 22479     15ED                     l897:
 22480     15ED  0008               	return
 22481     15EE                     __end_of_RN487X_ReadMsg:
 22482                           
 22483                           	psect	text83
 22484     1F96                     __ptext83:	
 22485 ;; *************** function _RN487X_Read@rn487x_interface$F1381 *****************
 22486 ;; Defined at:
 22487 ;;		line 257 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 22488 ;; Parameters:    Size  Location     Type
 22489 ;;		None
 22490 ;; Auto vars:     Size  Location     Type
 22491 ;;		None
 22492 ;; Return value:  Size  Location     Type
 22493 ;;                  1    wreg      unsigned char 
 22494 ;; Registers used:
 22495 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22496 ;; Tracked objects:
 22497 ;;		On entry : 0/0
 22498 ;;		On exit  : 0/0
 22499 ;;		Unchanged: 0/0
 22500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22505 ;;Total ram usage:        0 bytes
 22506 ;; Hardware stack levels used: 1
 22507 ;; Hardware stack levels required when called: 5
 22508 ;; This function calls:
 22509 ;;		_EUSART1_Read
 22510 ;;		_EUSART2_Read
 22511 ;; This function is called by:
 22512 ;;		_RN487X_ReadMsg
 22513 ;;		_RN487X_ReadDefaultResponse
 22514 ;;		_RN487X_FilterData
 22515 ;;		_RN487X_Init
 22516 ;;		_RN487X_GetCmd
 22517 ;;		_RN487X_WaitForMsg
 22518 ;; This function uses a non-reentrant model
 22519 ;;
 22520                           
 22521     1F96                     _RN487X_Read@rn487x_interface$F1381:	
 22522                           ;psect for function _RN487X_Read@rn487x_interface$F1381
 22523                           
 22524     1F96                     l13056:	
 22525                           ;incstack = 0
 22526                           ; Regs used in _RN487X_Read@rn487x_interface$F1381: [wreg-fsr1h+status,2+status,0+pclath
      +                          +cstack]
 22527                           
 22528                           
 22529                           ;mcc_generated_files/rn487x/rn487x_interface.c: 259:     return uart[UART_BLE].Read();
 22530     1F96  3014               	movlw	low ((_uart+20)| (0+32768))
 22531     1F97  0084               	movwf	4
 22532     1F98  3098               	movlw	high ((_uart+20)| (0+32768))
 22533     1F99  0085               	movwf	5
 22534     1F9A  3F01               	moviw [1]fsr0
 22535     1F9B  008A               	movwf	10
 22536     1F9C  3F00               	moviw [0]fsr0
 22537     1F9D  000A               	callw
 22538     1F9E  319F               	pagesel	$
 22539     1F9F                     l789:
 22540     1F9F  0008               	return
 22541     1FA0                     __end_of_RN487X_Read@rn487x_interface$F1381:
 22542                           
 22543                           	psect	text84
 22544     154B                     __ptext84:	
 22545 ;; *************** function _EUSART1_Read *****************
 22546 ;; Defined at:
 22547 ;;		line 151 in file "mcc_generated_files/eusart1.c"
 22548 ;; Parameters:    Size  Location     Type
 22549 ;;		None
 22550 ;; Auto vars:     Size  Location     Type
 22551 ;;  readValue       1    2[COMMON] unsigned char 
 22552 ;; Return value:  Size  Location     Type
 22553 ;;                  1    wreg      unsigned char 
 22554 ;; Registers used:
 22555 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 22556 ;; Tracked objects:
 22557 ;;		On entry : 0/0
 22558 ;;		On exit  : 0/0
 22559 ;;		Unchanged: 0/0
 22560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22562 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22563 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22564 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22565 ;;Total ram usage:        2 bytes
 22566 ;; Hardware stack levels used: 1
 22567 ;; Hardware stack levels required when called: 4
 22568 ;; This function calls:
 22569 ;;		Nothing
 22570 ;; This function is called by:
 22571 ;;		_getch
 22572 ;;		_RN487X_Read@rn487x_interface$F1381
 22573 ;;		_RN487X_Example_TransparentUart
 22574 ;;		_main
 22575 ;; This function uses a non-reentrant model
 22576 ;;
 22577                           
 22578     154B                     _EUSART1_Read:	
 22579                           ;psect for function _EUSART1_Read
 22580                           
 22581     154B                     l13004:	
 22582                           ;incstack = 0
 22583                           ; Regs used in _EUSART1_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 22584                           
 22585     154B                     l13006:	
 22586                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 22587                           
 22588                           
 22589                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 22590     154B  0140               	movlb	0	; select bank0
 22591     154C  0858               	movf	_eusart1RxCount,w	;volatile
 22592     154D  1903               	btfsc	3,2
 22593     154E  2D50               	goto	u9731
 22594     154F  2D51               	goto	u9730
 22595     1550                     u9731:
 22596     1550  2D4B               	goto	l13006
 22597     1551                     u9730:
 22598     1551                     l13008:
 22599                           
 22600                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 22601     1551  0859               	movf	_eusart1RxTail,w	;volatile
 22602     1552  3EBD               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 22603     1553  0086               	movwf	6
 22604     1554  0187               	clrf	7
 22605     1555  0801               	movf	1,w
 22606     1556  00D7               	movwf	_eusart1RxLastError	;volatile
 22607                           
 22608                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
 22609     1557  0859               	movf	_eusart1RxTail,w
 22610     1558  3E44               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 22611     1559  0086               	movwf	6
 22612     155A  3001               	movlw	1	; select bank2/3
 22613     155B  0087               	movwf	7
 22614     155C  0801               	movf	1,w
 22615     155D  00F2               	movwf	EUSART1_Read@readValue
 22616     155E                     l13010:
 22617     155E  3001               	movlw	1
 22618     155F  00F1               	movwf	??_EUSART1_Read
 22619     1560  0871               	movf	??_EUSART1_Read,w
 22620     1561  07D9               	addwf	_eusart1RxTail,f	;volatile
 22621     1562                     l13012:
 22622                           
 22623                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 22624     1562  3008               	movlw	8
 22625     1563  0259               	subwf	_eusart1RxTail,w	;volatile
 22626     1564  1C03               	skipc
 22627     1565  2D67               	goto	u9741
 22628     1566  2D68               	goto	u9740
 22629     1567                     u9741:
 22630     1567  2D69               	goto	l13016
 22631     1568                     u9740:
 22632     1568                     l13014:
 22633                           
 22634                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
 22635     1568  01D9               	clrf	_eusart1RxTail	;volatile
 22636     1569                     l13016:
 22637                           
 22638                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
 22639     1569  014E               	movlb	14	; select bank14
 22640     156A  1299               	bcf	25,5	;volatile
 22641     156B                     l13018:
 22642                           
 22643                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
 22644     156B  3001               	movlw	1
 22645     156C  0140               	movlb	0	; select bank0
 22646     156D  02D8               	subwf	_eusart1RxCount,f	;volatile
 22647     156E                     l13020:
 22648                           
 22649                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
 22650     156E  014E               	movlb	14	; select bank14
 22651     156F  1699               	bsf	25,5	;volatile
 22652     1570                     l13022:
 22653                           
 22654                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
 22655     1570  0872               	movf	EUSART1_Read@readValue,w
 22656     1571                     l1214:
 22657     1571  0008               	return
 22658     1572                     __end_of_EUSART1_Read:
 22659                           
 22660                           	psect	text85
 22661     14D7                     __ptext85:	
 22662 ;; *************** function _EUSART2_Read *****************
 22663 ;; Defined at:
 22664 ;;		line 151 in file "mcc_generated_files/eusart2.c"
 22665 ;; Parameters:    Size  Location     Type
 22666 ;;		None
 22667 ;; Auto vars:     Size  Location     Type
 22668 ;;  readValue       1    2[COMMON] unsigned char 
 22669 ;; Return value:  Size  Location     Type
 22670 ;;                  1    wreg      unsigned char 
 22671 ;; Registers used:
 22672 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 22673 ;; Tracked objects:
 22674 ;;		On entry : 0/0
 22675 ;;		On exit  : 0/0
 22676 ;;		Unchanged: 0/0
 22677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22679 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22680 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22681 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22682 ;;Total ram usage:        2 bytes
 22683 ;; Hardware stack levels used: 1
 22684 ;; Hardware stack levels required when called: 4
 22685 ;; This function calls:
 22686 ;;		Nothing
 22687 ;; This function is called by:
 22688 ;;		_RN487X_Read@rn487x_interface$F1381
 22689 ;;		_RN487X_Example_TransparentUart
 22690 ;;		_main
 22691 ;; This function uses a non-reentrant model
 22692 ;;
 22693                           
 22694     14D7                     _EUSART2_Read:	
 22695                           ;psect for function _EUSART2_Read
 22696                           
 22697     14D7                     l12960:	
 22698                           ;incstack = 0
 22699                           ; Regs used in _EUSART2_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 22700                           
 22701     14D7                     l12962:	
 22702                           ;mcc_generated_files/eusart2.c: 155:     while(0 == eusart2RxCount)
 22703                           
 22704                           
 22705                           ;mcc_generated_files/eusart2.c: 155:     while(0 == eusart2RxCount)
 22706     14D7  0140               	movlb	0	; select bank0
 22707     14D8  085F               	movf	_eusart2RxCount,w	;volatile
 22708     14D9  1903               	btfsc	3,2
 22709     14DA  2CDC               	goto	u9681
 22710     14DB  2CDD               	goto	u9680
 22711     14DC                     u9681:
 22712     14DC  2CD7               	goto	l12962
 22713     14DD                     u9680:
 22714     14DD                     l12964:
 22715                           
 22716                           ;mcc_generated_files/eusart2.c: 159:     eusart2RxLastError = eusart2RxStatusBuffer[eusa
      +                          rt2RxTail];
 22717     14DD  0860               	movf	_eusart2RxTail,w	;volatile
 22718     14DE  3ECD               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 22719     14DF  0086               	movwf	6
 22720     14E0  0187               	clrf	7
 22721     14E1  0801               	movf	1,w
 22722     14E2  00DE               	movwf	_eusart2RxLastError	;volatile
 22723                           
 22724                           ;mcc_generated_files/eusart2.c: 161:     readValue = eusart2RxBuffer[eusart2RxTail++];
 22725     14E3  0860               	movf	_eusart2RxTail,w
 22726     14E4  3ED5               	addlw	(low (_eusart2RxBuffer| 0))& (0+255)
 22727     14E5  0086               	movwf	6
 22728     14E6  0187               	clrf	7
 22729     14E7  0801               	movf	1,w
 22730     14E8  00F2               	movwf	EUSART2_Read@readValue
 22731     14E9                     l12966:
 22732     14E9  3001               	movlw	1
 22733     14EA  00F1               	movwf	??_EUSART2_Read
 22734     14EB  0871               	movf	??_EUSART2_Read,w
 22735     14EC  07E0               	addwf	_eusart2RxTail,f	;volatile
 22736     14ED                     l12968:
 22737                           
 22738                           ;mcc_generated_files/eusart2.c: 162:     if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
 22739     14ED  3008               	movlw	8
 22740     14EE  0260               	subwf	_eusart2RxTail,w	;volatile
 22741     14EF  1C03               	skipc
 22742     14F0  2CF2               	goto	u9691
 22743     14F1  2CF3               	goto	u9690
 22744     14F2                     u9691:
 22745     14F2  2CF4               	goto	l12972
 22746     14F3                     u9690:
 22747     14F3                     l12970:
 22748                           
 22749                           ;mcc_generated_files/eusart2.c: 163:     {;mcc_generated_files/eusart2.c: 164:         e
      +                          usart2RxTail = 0;
 22750     14F3  01E0               	clrf	_eusart2RxTail	;volatile
 22751     14F4                     l12972:
 22752                           
 22753                           ;mcc_generated_files/eusart2.c: 166:     PIE3bits.RC2IE = 0;
 22754     14F4  014E               	movlb	14	; select bank14
 22755     14F5  1399               	bcf	25,7	;volatile
 22756     14F6                     l12974:
 22757                           
 22758                           ;mcc_generated_files/eusart2.c: 167:     eusart2RxCount--;
 22759     14F6  3001               	movlw	1
 22760     14F7  0140               	movlb	0	; select bank0
 22761     14F8  02DF               	subwf	_eusart2RxCount,f	;volatile
 22762     14F9                     l12976:
 22763                           
 22764                           ;mcc_generated_files/eusart2.c: 168:     PIE3bits.RC2IE = 1;
 22765     14F9  014E               	movlb	14	; select bank14
 22766     14FA  1799               	bsf	25,7	;volatile
 22767     14FB                     l12978:
 22768                           
 22769                           ;mcc_generated_files/eusart2.c: 170:     return readValue;
 22770     14FB  0872               	movf	EUSART2_Read@readValue,w
 22771     14FC                     l1070:
 22772     14FC  0008               	return
 22773     14FD                     __end_of_EUSART2_Read:
 22774                           
 22775                           	psect	text86
 22776     1F59                     __ptext86:	
 22777 ;; *************** function _RN487X_Delay *****************
 22778 ;; Defined at:
 22779 ;;		line 272 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 22780 ;; Parameters:    Size  Location     Type
 22781 ;;  delayCount      2    4[COMMON] unsigned short 
 22782 ;; Auto vars:     Size  Location     Type
 22783 ;;		None
 22784 ;; Return value:  Size  Location     Type
 22785 ;;                  1    wreg      void 
 22786 ;; Registers used:
 22787 ;;		wreg, status,2, status,0, pclath, cstack
 22788 ;; Tracked objects:
 22789 ;;		On entry : 0/0
 22790 ;;		On exit  : 0/0
 22791 ;;		Unchanged: 0/0
 22792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22793 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22796 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22797 ;;Total ram usage:        2 bytes
 22798 ;; Hardware stack levels used: 1
 22799 ;; Hardware stack levels required when called: 5
 22800 ;; This function calls:
 22801 ;;		_DELAY_milliseconds
 22802 ;; This function is called by:
 22803 ;;		_LIGHTBLUE_UpdateErrorLed
 22804 ;;		_RN487X_Init
 22805 ;; This function uses a non-reentrant model
 22806 ;;
 22807                           
 22808     1F59                     _RN487X_Delay:	
 22809                           ;psect for function _RN487X_Delay
 22810                           
 22811     1F59                     l13284:	
 22812                           ;incstack = 0
 22813                           ; Regs used in _RN487X_Delay: [wreg+status,2+status,0+pclath+cstack]
 22814                           
 22815                           
 22816                           ;mcc_generated_files/rn487x/rn487x_interface.c: 272: static __attribute__((inline)) void
      +                           RN487X_Delay(uint16_t delayCount);mcc_generated_files/rn487x/rn487x_interface.c: 273: {
      +                          ;mcc_generated_files/rn487x/rn487x_interface.c: 274:     return DELAY_milliseconds(delay
      +                          Count);;	Return value of _RN487X_Delay is never used
 22817     1F59  0875               	movf	RN487X_Delay@delayCount+1,w
 22818     1F5A  00F2               	movwf	DELAY_milliseconds@milliseconds+1
 22819     1F5B  0874               	movf	RN487X_Delay@delayCount,w
 22820     1F5C  00F1               	movwf	DELAY_milliseconds@milliseconds
 22821     1F5D  3191  21C2  319F   	fcall	_DELAY_milliseconds
 22822     1F60                     l798:
 22823     1F60  0008               	return
 22824     1F61                     __end_of_RN487X_Delay:
 22825                           
 22826                           	psect	text87
 22827     11C2                     __ptext87:	
 22828 ;; *************** function _DELAY_milliseconds *****************
 22829 ;; Defined at:
 22830 ;;		line 38 in file "mcc_generated_files/delay.c"
 22831 ;; Parameters:    Size  Location     Type
 22832 ;;  milliseconds    2    1[COMMON] unsigned short 
 22833 ;; Auto vars:     Size  Location     Type
 22834 ;;		None
 22835 ;; Return value:  Size  Location     Type
 22836 ;;                  1    wreg      void 
 22837 ;; Registers used:
 22838 ;;		wreg, status,2, status,0
 22839 ;; Tracked objects:
 22840 ;;		On entry : 0/0
 22841 ;;		On exit  : 0/0
 22842 ;;		Unchanged: 0/0
 22843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22844 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22846 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22847 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22848 ;;Total ram usage:        3 bytes
 22849 ;; Hardware stack levels used: 1
 22850 ;; Hardware stack levels required when called: 4
 22851 ;; This function calls:
 22852 ;;		Nothing
 22853 ;; This function is called by:
 22854 ;;		_RN487X_Delay
 22855 ;; This function uses a non-reentrant model
 22856 ;;
 22857                           
 22858     11C2                     _DELAY_milliseconds:	
 22859                           ;psect for function _DELAY_milliseconds
 22860                           
 22861     11C2                     l13080:	
 22862                           ;incstack = 0
 22863                           ; Regs used in _DELAY_milliseconds: [wreg+status,2+status,0]
 22864                           
 22865                           
 22866                           ;mcc_generated_files/delay.c: 39:     while(milliseconds--){
 22867     11C2  29CB               	goto	l13084
 22868     11C3                     l13082:
 22869                           
 22870                           ;mcc_generated_files/delay.c: 40:         _delay((unsigned long)((1)*(32000000/4000.0)))
      +                          ;
 22871     11C3  300B               	movlw	11
 22872     11C4  00F3               	movwf	??_DELAY_milliseconds
 22873     11C5  3062               	movlw	98
 22874     11C6                     u14047:
 22875     11C6  0B89               	decfsz	9,f
 22876     11C7  29C6               	goto	u14047
 22877     11C8  0BF3               	decfsz	??_DELAY_milliseconds,f
 22878     11C9  29C6               	goto	u14047
 22879     11CA  3200               	nop2
 22880     11CB                     l13084:
 22881                           
 22882                           ;mcc_generated_files/delay.c: 39:     while(milliseconds--){
 22883     11CB  3001               	movlw	1
 22884     11CC  02F1               	subwf	DELAY_milliseconds@milliseconds,f
 22885     11CD  3000               	movlw	0
 22886     11CE  3BF2               	subwfb	DELAY_milliseconds@milliseconds+1,f
 22887     11CF  0A71               	incf	DELAY_milliseconds@milliseconds,w
 22888     11D0  1D03               	skipz
 22889     11D1  29D6               	goto	u9811
 22890     11D2  0A72               	incf	DELAY_milliseconds@milliseconds+1,w
 22891     11D3  1D03               	btfss	3,2
 22892     11D4  29D6               	goto	u9811
 22893     11D5  29D7               	goto	u9810
 22894     11D6                     u9811:
 22895     11D6  29C3               	goto	l13082
 22896     11D7                     u9810:
 22897     11D7                     l1980:
 22898     11D7  0008               	return
 22899     11D8                     __end_of_DELAY_milliseconds:
 22900                           
 22901                           	psect	text88
 22902     14B1                     __ptext88:	
 22903 ;; *************** function _LIGHTBLUE_LedState *****************
 22904 ;; Defined at:
 22905 ;;		line 352 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 22906 ;; Parameters:    Size  Location     Type
 22907 ;;		None
 22908 ;; Auto vars:     Size  Location     Type
 22909 ;;  payload         3    0[BANK0 ] unsigned char [3]
 22910 ;;  led             1    3[BANK0 ] unsigned char 
 22911 ;; Return value:  Size  Location     Type
 22912 ;;                  1    wreg      void 
 22913 ;; Registers used:
 22914 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22915 ;; Tracked objects:
 22916 ;;		On entry : 0/0
 22917 ;;		On exit  : 0/0
 22918 ;;		Unchanged: 0/0
 22919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22921 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22923 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22924 ;;Total ram usage:        4 bytes
 22925 ;; Hardware stack levels used: 1
 22926 ;; Hardware stack levels required when called: 7
 22927 ;; This function calls:
 22928 ;;		_LIGHTBLUE_GetDataLedValue
 22929 ;;		_LIGHTBLUE_GetErrorLedValue
 22930 ;;		_LIGHTBLUE_SendPacket
 22931 ;;		_LIGHTBLUE_SplitByte
 22932 ;; This function is called by:
 22933 ;;		_main
 22934 ;; This function uses a non-reentrant model
 22935 ;;
 22936                           
 22937     14B1                     _LIGHTBLUE_LedState:	
 22938                           ;psect for function _LIGHTBLUE_LedState
 22939                           
 22940     14B1                     l14354:	
 22941                           ;incstack = 0
 22942                           ; Regs used in _LIGHTBLUE_LedState: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22943                           
 22944                           
 22945                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 353:     char payload[3];;mcc_gene
      +                          rated_files/application/LIGHTBLUE_service.c: 354:     uint8_t led;;mcc_generated_files/a
      +                          pplication/LIGHTBLUE_service.c: 356:     led = (0x00) + LIGHTBLUE_GetDataLedValue();
 22946     14B1  319E  26F0  3194   	fcall	_LIGHTBLUE_GetDataLedValue
 22947     14B4  0140               	movlb	0	; select bank0
 22948     14B5  00A3               	movwf	LIGHTBLUE_LedState@led
 22949     14B6                     l14356:
 22950                           
 22951                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 358:     *payload = '\0';
 22952     14B6  01A0               	clrf	LIGHTBLUE_LedState@payload
 22953     14B7                     l14358:
 22954                           
 22955                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 359:     LIGHTBLUE_SplitByte(paylo
      +                          ad, led);
 22956     14B7  0823               	movf	LIGHTBLUE_LedState@led,w
 22957     14B8  00F6               	movwf	LIGHTBLUE_SplitByte@value
 22958     14B9  3020               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 22959     14BA  3197  2730  3194   	fcall	_LIGHTBLUE_SplitByte
 22960     14BD                     l14360:
 22961                           
 22962                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 361:     LIGHTBLUE_SendPacket(LED_
      +                          STATE_ID, payload);
 22963     14BD  3020               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 22964     14BE  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 22965     14BF  304C               	movlw	76
 22966     14C0  318F  2774  3194   	fcall	_LIGHTBLUE_SendPacket
 22967     14C3                     l14362:
 22968                           
 22969                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 363:     led = (0x10) + LIGHTBLUE_
      +                          GetErrorLedValue();
 22970     14C3  319E  26D4  3194   	fcall	_LIGHTBLUE_GetErrorLedValue
 22971     14C6  3E10               	addlw	16
 22972     14C7  0140               	movlb	0	; select bank0
 22973     14C8  00A3               	movwf	LIGHTBLUE_LedState@led
 22974                           
 22975                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 364:     *payload = '\0';
 22976     14C9  01A0               	clrf	LIGHTBLUE_LedState@payload
 22977     14CA                     l14364:
 22978                           
 22979                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 365:     LIGHTBLUE_SplitByte(paylo
      +                          ad, led);
 22980     14CA  0823               	movf	LIGHTBLUE_LedState@led,w
 22981     14CB  00F6               	movwf	LIGHTBLUE_SplitByte@value
 22982     14CC  3020               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 22983     14CD  3197  2730  3194   	fcall	_LIGHTBLUE_SplitByte
 22984     14D0                     l14366:
 22985                           
 22986                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 367:     LIGHTBLUE_SendPacket(LED_
      +                          STATE_ID, payload);
 22987     14D0  3020               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 22988     14D1  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 22989     14D2  304C               	movlw	76
 22990     14D3  318F  2774  3194   	fcall	_LIGHTBLUE_SendPacket
 22991     14D6                     l133:
 22992     14D6  0008               	return
 22993     14D7                     __end_of_LIGHTBLUE_LedState:
 22994                           
 22995                           	psect	text89
 22996     1ED4                     __ptext89:	
 22997 ;; *************** function _LIGHTBLUE_GetErrorLedValue *****************
 22998 ;; Defined at:
 22999 ;;		line 483 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 23000 ;; Parameters:    Size  Location     Type
 23001 ;;		None
 23002 ;; Auto vars:     Size  Location     Type
 23003 ;;		None
 23004 ;; Return value:  Size  Location     Type
 23005 ;;                  1    wreg      unsigned char 
 23006 ;; Registers used:
 23007 ;;		wreg, status,2, status,0
 23008 ;; Tracked objects:
 23009 ;;		On entry : 0/0
 23010 ;;		On exit  : 0/0
 23011 ;;		Unchanged: 0/0
 23012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23017 ;;Total ram usage:        0 bytes
 23018 ;; Hardware stack levels used: 1
 23019 ;; Hardware stack levels required when called: 4
 23020 ;; This function calls:
 23021 ;;		Nothing
 23022 ;; This function is called by:
 23023 ;;		_LIGHTBLUE_LedState
 23024 ;; This function uses a non-reentrant model
 23025 ;;
 23026                           
 23027     1ED4                     _LIGHTBLUE_GetErrorLedValue:	
 23028                           ;psect for function _LIGHTBLUE_GetErrorLedValue
 23029                           
 23030     1ED4                     l13638:	
 23031                           ;incstack = 0
 23032                           ; Regs used in _LIGHTBLUE_GetErrorLedValue: [wreg+status,2+status,0]
 23033                           
 23034                           
 23035                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 484:     return (0x01) - (bitMap.i
      +                          oStateBitMap.p2_2_state);
 23036     1ED4  0140               	movlb	0	; select bank0
 23037     1ED5  0855               	movf	_bitMap+1,w	;volatile
 23038     1ED6  3901               	andlw	1
 23039     1ED7  3C01               	sublw	1
 23040     1ED8                     l208:
 23041     1ED8  0008               	return
 23042     1ED9                     __end_of_LIGHTBLUE_GetErrorLedValue:
 23043                           
 23044                           	psect	text90
 23045     1EF0                     __ptext90:	
 23046 ;; *************** function _LIGHTBLUE_GetDataLedValue *****************
 23047 ;; Defined at:
 23048 ;;		line 479 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 23049 ;; Parameters:    Size  Location     Type
 23050 ;;		None
 23051 ;; Auto vars:     Size  Location     Type
 23052 ;;		None
 23053 ;; Return value:  Size  Location     Type
 23054 ;;                  1    wreg      unsigned char 
 23055 ;; Registers used:
 23056 ;;		wreg, status,2, status,0
 23057 ;; Tracked objects:
 23058 ;;		On entry : 0/0
 23059 ;;		On exit  : 0/0
 23060 ;;		Unchanged: 0/0
 23061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23066 ;;Total ram usage:        0 bytes
 23067 ;; Hardware stack levels used: 1
 23068 ;; Hardware stack levels required when called: 4
 23069 ;; This function calls:
 23070 ;;		Nothing
 23071 ;; This function is called by:
 23072 ;;		_LIGHTBLUE_LedState
 23073 ;; This function uses a non-reentrant model
 23074 ;;
 23075                           
 23076     1EF0                     _LIGHTBLUE_GetDataLedValue:	
 23077                           ;psect for function _LIGHTBLUE_GetDataLedValue
 23078                           
 23079     1EF0                     l13634:	
 23080                           ;incstack = 0
 23081                           ; Regs used in _LIGHTBLUE_GetDataLedValue: [wreg+status,2+status,0]
 23082                           
 23083                           
 23084                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 480:     return (0x01) - PORTAbits
      +                          .RA5;
 23085     1EF0  0140               	movlb	0	; select bank0
 23086     1EF1  0E0C               	swapf	12,w	;volatile
 23087     1EF2  0C89               	rrf	9,f
 23088     1EF3  3901               	andlw	1
 23089     1EF4  3C01               	sublw	1
 23090     1EF5                     l205:
 23091     1EF5  0008               	return
 23092     1EF6                     __end_of_LIGHTBLUE_GetDataLedValue:
 23093                           
 23094                           	psect	text91
 23095     1EEA                     __ptext91:	
 23096 ;; *************** function _LIGHTBLUE_Initialize *****************
 23097 ;; Defined at:
 23098 ;;		line 306 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 23099 ;; Parameters:    Size  Location     Type
 23100 ;;		None
 23101 ;; Auto vars:     Size  Location     Type
 23102 ;;		None
 23103 ;; Return value:  Size  Location     Type
 23104 ;;                  1    wreg      void 
 23105 ;; Registers used:
 23106 ;;		wreg
 23107 ;; Tracked objects:
 23108 ;;		On entry : 0/0
 23109 ;;		On exit  : 0/0
 23110 ;;		Unchanged: 0/0
 23111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23116 ;;Total ram usage:        0 bytes
 23117 ;; Hardware stack levels used: 1
 23118 ;; Hardware stack levels required when called: 4
 23119 ;; This function calls:
 23120 ;;		Nothing
 23121 ;; This function is called by:
 23122 ;;		_main
 23123 ;; This function uses a non-reentrant model
 23124 ;;
 23125                           
 23126     1EEA                     _LIGHTBLUE_Initialize:	
 23127                           ;psect for function _LIGHTBLUE_Initialize
 23128                           
 23129     1EEA                     l14324:	
 23130                           ;incstack = 0
 23131                           ; Regs used in _LIGHTBLUE_Initialize: [wreg]
 23132                           
 23133                           
 23134                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 307:     bitMap.ioBitMap.gpioBitMa
      +                          p = 0x01;
 23135     1EEA  3001               	movlw	1
 23136     1EEB  0140               	movlb	0	; select bank0
 23137     1EEC  00D4               	movwf	_bitMap	;volatile
 23138                           
 23139                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 308:     bitMap.ioStateBitMap.gpio
      +                          StateBitMap = 0x01;
 23140     1EED  3001               	movlw	1
 23141     1EEE  00D5               	movwf	_bitMap+1	;volatile
 23142     1EEF                     l121:
 23143     1EEF  0008               	return
 23144     1EF0                     __end_of_LIGHTBLUE_Initialize:
 23145                           
 23146                           	psect	text92
 23147     16A4                     __ptext92:	
 23148 ;; *************** function _LIGHTBLUE_AccelSensor *****************
 23149 ;; Defined at:
 23150 ;;		line 326 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 23151 ;; Parameters:    Size  Location     Type
 23152 ;;		None
 23153 ;; Auto vars:     Size  Location     Type
 23154 ;;  payload        13   22[BANK0 ] unsigned char [13]
 23155 ;;  accelData       6   35[BANK0 ] struct .
 23156 ;; Return value:  Size  Location     Type
 23157 ;;                  1    wreg      void 
 23158 ;; Registers used:
 23159 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23160 ;; Tracked objects:
 23161 ;;		On entry : 0/0
 23162 ;;		On exit  : 0/0
 23163 ;;		Unchanged: 0/0
 23164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23166 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23168 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23169 ;;Total ram usage:       19 bytes
 23170 ;; Hardware stack levels used: 1
 23171 ;; Hardware stack levels required when called: 16
 23172 ;; This function calls:
 23173 ;;		_BMA253_GetAccelDataXYZ
 23174 ;;		_LIGHTBLUE_SendPacket
 23175 ;;		_LIGHTBLUE_SplitWord
 23176 ;; This function is called by:
 23177 ;;		_main
 23178 ;; This function uses a non-reentrant model
 23179 ;;
 23180                           
 23181     16A4                     _LIGHTBLUE_AccelSensor:	
 23182                           ;psect for function _LIGHTBLUE_AccelSensor
 23183                           
 23184     16A4                     l14334:	
 23185                           ;incstack = 0
 23186 ;; hardware stack exceeded
 23187                           ; Regs used in _LIGHTBLUE_AccelSensor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23188                           
 23189                           
 23190                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 327:     char payload[13];;mcc_gen
      +                          erated_files/application/LIGHTBLUE_service.c: 328:     BMA253_ACCEL_DATA_t accelData;;mc
      +                          c_generated_files/application/LIGHTBLUE_service.c: 331:     *payload = '\0';
 23191     16A4  0140               	movlb	0	; select bank0
 23192     16A5  01B6               	clrf	LIGHTBLUE_AccelSensor@payload
 23193     16A6                     l14336:
 23194                           
 23195                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 332:     BMA253_GetAccelDataXYZ(&a
      +                          ccelData);
 23196     16A6  3043               	movlw	(low (LIGHTBLUE_AccelSensor@accelData| 0))& (0+255)
 23197     16A7  318B  23DB  3196   	fcall	_BMA253_GetAccelDataXYZ
 23198     16AA                     l14338:
 23199                           
 23200                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 335:     LIGHTBLUE_SplitWord(paylo
      +                          ad, (accelData.x & 0x0FFF));
 23201     16AA  30FF               	movlw	255
 23202     16AB  0140               	movlb	0	; select bank0
 23203     16AC  0543               	andwf	LIGHTBLUE_AccelSensor@accelData,w
 23204     16AD  00F9               	movwf	LIGHTBLUE_SplitWord@value
 23205     16AE  300F               	movlw	15
 23206     16AF  0544               	andwf	LIGHTBLUE_AccelSensor@accelData+1,w
 23207     16B0  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 23208     16B1  3036               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 23209     16B2  3190  2066  3196   	fcall	_LIGHTBLUE_SplitWord
 23210     16B5                     l14340:
 23211                           
 23212                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 336:     LIGHTBLUE_SplitWord(paylo
      +                          ad, (accelData.y & 0x0FFF));
 23213     16B5  30FF               	movlw	255
 23214     16B6  0140               	movlb	0	; select bank0
 23215     16B7  0545               	andwf	LIGHTBLUE_AccelSensor@accelData+2,w
 23216     16B8  00F9               	movwf	LIGHTBLUE_SplitWord@value
 23217     16B9  300F               	movlw	15
 23218     16BA  0546               	andwf	LIGHTBLUE_AccelSensor@accelData+3,w
 23219     16BB  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 23220     16BC  3036               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 23221     16BD  3190  2066  3196   	fcall	_LIGHTBLUE_SplitWord
 23222     16C0                     l14342:
 23223                           
 23224                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 337:     LIGHTBLUE_SplitWord(paylo
      +                          ad, (accelData.z & 0x0FFF));
 23225     16C0  30FF               	movlw	255
 23226     16C1  0140               	movlb	0	; select bank0
 23227     16C2  0547               	andwf	LIGHTBLUE_AccelSensor@accelData+4,w
 23228     16C3  00F9               	movwf	LIGHTBLUE_SplitWord@value
 23229     16C4  300F               	movlw	15
 23230     16C5  0548               	andwf	LIGHTBLUE_AccelSensor@accelData+5,w
 23231     16C6  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 23232     16C7  3036               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 23233     16C8  3190  2066  3196   	fcall	_LIGHTBLUE_SplitWord
 23234     16CB                     l14344:
 23235                           
 23236                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 339:     LIGHTBLUE_SendPacket(ACCE
      +                          L_DATA_ID, payload);
 23237     16CB  3036               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 23238     16CC  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 23239     16CD  3058               	movlw	88
 23240     16CE  318F  2774  3196   	fcall	_LIGHTBLUE_SendPacket
 23241     16D1                     l127:
 23242     16D1  0008               	return
 23243     16D2                     __end_of_LIGHTBLUE_AccelSensor:
 23244                           
 23245                           	psect	text93
 23246     1066                     __ptext93:	
 23247 ;; *************** function _LIGHTBLUE_SplitWord *****************
 23248 ;; Defined at:
 23249 ;;		line 463 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 23250 ;; Parameters:    Size  Location     Type
 23251 ;;  payload         1    wreg     PTR unsigned char 
 23252 ;;		 -> LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), 
 23253 ;;  value           2    9[COMMON] short 
 23254 ;; Auto vars:     Size  Location     Type
 23255 ;;  payload         1   11[COMMON] PTR unsigned char 
 23256 ;;		 -> LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), 
 23257 ;; Return value:  Size  Location     Type
 23258 ;;                  1    wreg      void 
 23259 ;; Registers used:
 23260 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23261 ;; Tracked objects:
 23262 ;;		On entry : 0/0
 23263 ;;		On exit  : 0/0
 23264 ;;		Unchanged: 0/0
 23265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23266 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23267 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23269 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23270 ;;Total ram usage:        3 bytes
 23271 ;; Hardware stack levels used: 1
 23272 ;; Hardware stack levels required when called: 6
 23273 ;; This function calls:
 23274 ;;		_LIGHTBLUE_SplitByte
 23275 ;; This function is called by:
 23276 ;;		_LIGHTBLUE_TemperatureSensor
 23277 ;;		_LIGHTBLUE_AccelSensor
 23278 ;; This function uses a non-reentrant model
 23279 ;;
 23280                           
 23281     1066                     _LIGHTBLUE_SplitWord:	
 23282                           ;psect for function _LIGHTBLUE_SplitWord
 23283                           
 23284                           
 23285                           ;incstack = 0
 23286                           ; Regs used in _LIGHTBLUE_SplitWord: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23287                           ;LIGHTBLUE_SplitWord@payload stored from wreg
 23288     1066  00FB               	movwf	LIGHTBLUE_SplitWord@payload
 23289     1067                     l13610:
 23290                           
 23291                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 464:     LIGHTBLUE_SplitByte(paylo
      +                          ad, value);
 23292     1067  0879               	movf	LIGHTBLUE_SplitWord@value,w
 23293     1068  00F6               	movwf	LIGHTBLUE_SplitByte@value
 23294     1069  087B               	movf	LIGHTBLUE_SplitWord@payload,w
 23295     106A  3197  2730  3190   	fcall	_LIGHTBLUE_SplitByte
 23296                           
 23297                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 465:     LIGHTBLUE_SplitByte(paylo
      +                          ad, value >> 8);
 23298     106D  087A               	movf	LIGHTBLUE_SplitWord@value+1,w
 23299     106E  00F6               	movwf	LIGHTBLUE_SplitByte@value
 23300     106F  087B               	movf	LIGHTBLUE_SplitWord@payload,w
 23301     1070  3197  2730  3190   	fcall	_LIGHTBLUE_SplitByte
 23302     1073                     l196:
 23303     1073  0008               	return
 23304     1074                     __end_of_LIGHTBLUE_SplitWord:
 23305                           
 23306                           	psect	text94
 23307     1730                     __ptext94:	
 23308 ;; *************** function _LIGHTBLUE_SplitByte *****************
 23309 ;; Defined at:
 23310 ;;		line 468 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 23311 ;; Parameters:    Size  Location     Type
 23312 ;;  payload         1    wreg     PTR unsigned char 
 23313 ;;		 -> LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), LIGHTBLUE_PushButton@payload(3), LIGHT
      +BLUE_AccelSensor@payload(13), 
 23314 ;;		 -> LIGHTBLUE_TemperatureSensor@payload(5), 
 23315 ;;  value           1    6[COMMON] char 
 23316 ;; Auto vars:     Size  Location     Type
 23317 ;;  payload         1    8[COMMON] PTR unsigned char 
 23318 ;;		 -> LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), LIGHTBLUE_PushButton@payload(3), LIGHT
      +BLUE_AccelSensor@payload(13), 
 23319 ;;		 -> LIGHTBLUE_TemperatureSensor@payload(5), 
 23320 ;; Return value:  Size  Location     Type
 23321 ;;                  1    wreg      void 
 23322 ;; Registers used:
 23323 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23324 ;; Tracked objects:
 23325 ;;		On entry : 0/0
 23326 ;;		On exit  : 0/0
 23327 ;;		Unchanged: 0/0
 23328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23329 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23330 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23331 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23332 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23333 ;;Total ram usage:        3 bytes
 23334 ;; Hardware stack levels used: 1
 23335 ;; Hardware stack levels required when called: 5
 23336 ;; This function calls:
 23337 ;;		_strlen
 23338 ;; This function is called by:
 23339 ;;		_LIGHTBLUE_PushButton
 23340 ;;		_LIGHTBLUE_LedState
 23341 ;;		_LIGHTBLUE_SendProtocolVersion
 23342 ;;		_LIGHTBLUE_SplitWord
 23343 ;; This function uses a non-reentrant model
 23344 ;;
 23345                           
 23346     1730                     _LIGHTBLUE_SplitByte:	
 23347                           ;psect for function _LIGHTBLUE_SplitByte
 23348                           
 23349                           
 23350                           ;incstack = 0
 23351                           ; Regs used in _LIGHTBLUE_SplitByte: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23352                           ;LIGHTBLUE_SplitByte@payload stored from wreg
 23353     1730  00F8               	movwf	LIGHTBLUE_SplitByte@payload
 23354     1731                     l13450:
 23355                           
 23356                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 469:     payload += strlen(payload
      +                          );
 23357     1731  0878               	movf	LIGHTBLUE_SplitByte@payload,w
 23358     1732  00F1               	movwf	strlen@s
 23359     1733  01F2               	clrf	strlen@s+1
 23360     1734  3192  2293  3197   	fcall	_strlen
 23361     1737  0871               	movf	?_strlen,w
 23362     1738  00F7               	movwf	??_LIGHTBLUE_SplitByte
 23363     1739  0877               	movf	??_LIGHTBLUE_SplitByte,w
 23364     173A  07F8               	addwf	LIGHTBLUE_SplitByte@payload,f
 23365     173B                     l13452:
 23366                           
 23367                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 470:     *payload++ = (_hex[(value
      +                           >> 4) & 0xF]);
 23368     173B  0878               	movf	LIGHTBLUE_SplitByte@payload,w
 23369     173C  0086               	movwf	6
 23370     173D  0187               	clrf	7
 23371     173E  0E76               	swapf	LIGHTBLUE_SplitByte@value,w
 23372     173F  390F               	andlw	15
 23373     1740  1989               	btfsc	9,3
 23374     1741  38F0               	iorlw	240
 23375     1742  390F               	andlw	15
 23376     1743  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 23377     1744  0084               	movwf	4
 23378     1745  3001               	movlw	1	; select bank2/3
 23379     1746  0085               	movwf	5
 23380     1747  0800               	movf	0,w
 23381     1748  0081               	movwf	1
 23382     1749                     l13454:
 23383     1749  3001               	movlw	1
 23384     174A  00F7               	movwf	??_LIGHTBLUE_SplitByte
 23385     174B  0877               	movf	??_LIGHTBLUE_SplitByte,w
 23386     174C  07F8               	addwf	LIGHTBLUE_SplitByte@payload,f
 23387     174D                     l13456:
 23388                           
 23389                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 471:     *payload++ = (_hex[(value
      +                          ) & 0xF]);
 23390     174D  0878               	movf	LIGHTBLUE_SplitByte@payload,w
 23391     174E  0086               	movwf	6
 23392     174F  0187               	clrf	7
 23393     1750  0876               	movf	LIGHTBLUE_SplitByte@value,w
 23394     1751  390F               	andlw	15
 23395     1752  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 23396     1753  0084               	movwf	4
 23397     1754  3001               	movlw	1	; select bank2/3
 23398     1755  0085               	movwf	5
 23399     1756  0800               	movf	0,w
 23400     1757  0081               	movwf	1
 23401     1758                     l13458:
 23402     1758  3001               	movlw	1
 23403     1759  00F7               	movwf	??_LIGHTBLUE_SplitByte
 23404     175A  0877               	movf	??_LIGHTBLUE_SplitByte,w
 23405     175B  07F8               	addwf	LIGHTBLUE_SplitByte@payload,f
 23406     175C                     l13460:
 23407                           
 23408                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 472:     *payload = '\0';
 23409     175C  0878               	movf	LIGHTBLUE_SplitByte@payload,w
 23410     175D  0086               	movwf	6
 23411     175E  0187               	clrf	7
 23412     175F  0181               	clrf	1
 23413     1760                     l199:
 23414     1760  0008               	return
 23415     1761                     __end_of_LIGHTBLUE_SplitByte:
 23416                           
 23417                           	psect	text95
 23418     0F74                     __ptext95:	
 23419 ;; *************** function _LIGHTBLUE_SendPacket *****************
 23420 ;; Defined at:
 23421 ;;		line 451 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 23422 ;; Parameters:    Size  Location     Type
 23423 ;;  packetID        1    wreg     unsigned char 
 23424 ;;  payload         1    7[COMMON] PTR unsigned char 
 23425 ;;		 -> LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), LIGHTBLUE_PushButton@payload(3), LIGHT
      +BLUE_AccelSensor@payload(13), 
 23426 ;;		 -> LIGHTBLUE_TemperatureSensor@payload(5), 
 23427 ;; Auto vars:     Size  Location     Type
 23428 ;;  packetID        1   10[COMMON] unsigned char 
 23429 ;; Return value:  Size  Location     Type
 23430 ;;                  1    wreg      void 
 23431 ;; Registers used:
 23432 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23433 ;; Tracked objects:
 23434 ;;		On entry : 0/0
 23435 ;;		On exit  : 0/0
 23436 ;;		Unchanged: 0/0
 23437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23438 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23439 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23440 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23441 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23442 ;;Total ram usage:        4 bytes
 23443 ;; Hardware stack levels used: 1
 23444 ;; Hardware stack levels required when called: 6
 23445 ;; This function calls:
 23446 ;;		_RN487X_Write
 23447 ;;		_strlen
 23448 ;; This function is called by:
 23449 ;;		_LIGHTBLUE_TemperatureSensor
 23450 ;;		_LIGHTBLUE_AccelSensor
 23451 ;;		_LIGHTBLUE_PushButton
 23452 ;;		_LIGHTBLUE_LedState
 23453 ;;		_LIGHTBLUE_SendProtocolVersion
 23454 ;; This function uses a non-reentrant model
 23455 ;;
 23456                           
 23457     0F74                     _LIGHTBLUE_SendPacket:	
 23458                           ;psect for function _LIGHTBLUE_SendPacket
 23459                           
 23460                           
 23461                           ;incstack = 0
 23462                           ; Regs used in _LIGHTBLUE_SendPacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23463                           ;LIGHTBLUE_SendPacket@packetID stored from wreg
 23464     0F74  00FA               	movwf	LIGHTBLUE_SendPacket@packetID
 23465     0F75                     l13612:
 23466                           
 23467                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 452:     RN487X.Write(('['));
 23468     0F75  305B               	movlw	91
 23469     0F76  00F6               	movwf	RN487X_Write@txData
 23470     0F77  3068               	movlw	low (_RN487X| (0+32768))
 23471     0F78  0084               	movwf	4
 23472     0F79  3098               	movlw	high (_RN487X| (0+32768))
 23473     0F7A  0085               	movwf	5
 23474     0F7B  3F01               	moviw [1]fsr0
 23475     0F7C  008A               	movwf	10
 23476     0F7D  3F00               	moviw [0]fsr0
 23477     0F7E  000A               	callw
 23478     0F7F  318F               	pagesel	$
 23479                           
 23480                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 453:     RN487X.Write((_hex[(seque
      +                          nceNumber++) & 0xF]));
 23481     0F80  0140               	movlb	0	; select bank0
 23482     0F81  086C               	movf	_sequenceNumber,w
 23483     0F82  390F               	andlw	15
 23484     0F83  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 23485     0F84  0086               	movwf	6
 23486     0F85  3001               	movlw	1	; select bank2/3
 23487     0F86  0087               	movwf	7
 23488     0F87  0801               	movf	1,w
 23489     0F88  00F6               	movwf	RN487X_Write@txData
 23490     0F89  3068               	movlw	low (_RN487X| (0+32768))
 23491     0F8A  0084               	movwf	4
 23492     0F8B  3098               	movlw	high (_RN487X| (0+32768))
 23493     0F8C  0085               	movwf	5
 23494     0F8D  3F01               	moviw [1]fsr0
 23495     0F8E  008A               	movwf	10
 23496     0F8F  3F00               	moviw [0]fsr0
 23497     0F90  000A               	callw
 23498     0F91  318F               	pagesel	$
 23499     0F92                     l13614:
 23500     0F92  3001               	movlw	1
 23501     0F93  00F8               	movwf	??_LIGHTBLUE_SendPacket
 23502     0F94  0878               	movf	??_LIGHTBLUE_SendPacket,w
 23503     0F95  0140               	movlb	0	; select bank0
 23504     0F96  07EC               	addwf	_sequenceNumber,f
 23505     0F97                     l13616:
 23506                           
 23507                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 454:     RN487X.Write(packetID);
 23508     0F97  087A               	movf	LIGHTBLUE_SendPacket@packetID,w
 23509     0F98  00F6               	movwf	RN487X_Write@txData
 23510     0F99  3068               	movlw	low (_RN487X| (0+32768))
 23511     0F9A  0084               	movwf	4
 23512     0F9B  3098               	movlw	high (_RN487X| (0+32768))
 23513     0F9C  0085               	movwf	5
 23514     0F9D  3F01               	moviw [1]fsr0
 23515     0F9E  008A               	movwf	10
 23516     0F9F  3F00               	moviw [0]fsr0
 23517     0FA0  000A               	callw
 23518     0FA1  318F               	pagesel	$
 23519     0FA2                     l13618:
 23520                           
 23521                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 455:     RN487X.Write((_hex[(strle
      +                          n(payload) >> 4) & 0xF]));
 23522     0FA2  0877               	movf	LIGHTBLUE_SendPacket@payload,w
 23523     0FA3  00F1               	movwf	strlen@s
 23524     0FA4  01F2               	clrf	strlen@s+1
 23525     0FA5  3192  2293  318F   	fcall	_strlen
 23526     0FA8  0871               	movf	?_strlen,w
 23527     0FA9  00F8               	movwf	??_LIGHTBLUE_SendPacket
 23528     0FAA  0872               	movf	?_strlen+1,w
 23529     0FAB  00F9               	movwf	??_LIGHTBLUE_SendPacket+1
 23530     0FAC  3004               	movlw	4
 23531     0FAD                     u10445:
 23532     0FAD  36F9               	lsrf	??_LIGHTBLUE_SendPacket+1,f
 23533     0FAE  0CF8               	rrf	??_LIGHTBLUE_SendPacket,f
 23534     0FAF  0B89               	decfsz	9,f
 23535     0FB0  2FAD               	goto	u10445
 23536     0FB1  0878               	movf	??_LIGHTBLUE_SendPacket,w
 23537     0FB2  390F               	andlw	15
 23538     0FB3  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 23539     0FB4  0086               	movwf	6
 23540     0FB5  3001               	movlw	1	; select bank2/3
 23541     0FB6  0087               	movwf	7
 23542     0FB7  0801               	movf	1,w
 23543     0FB8  00F6               	movwf	RN487X_Write@txData
 23544     0FB9  3068               	movlw	low (_RN487X| (0+32768))
 23545     0FBA  0084               	movwf	4
 23546     0FBB  3098               	movlw	high (_RN487X| (0+32768))
 23547     0FBC  0085               	movwf	5
 23548     0FBD  3F01               	moviw [1]fsr0
 23549     0FBE  008A               	movwf	10
 23550     0FBF  3F00               	moviw [0]fsr0
 23551     0FC0  000A               	callw
 23552     0FC1  318F               	pagesel	$
 23553     0FC2                     l13620:
 23554                           
 23555                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 456:     RN487X.Write((_hex[(strle
      +                          n(payload)) & 0xF]));
 23556     0FC2  0877               	movf	LIGHTBLUE_SendPacket@payload,w
 23557     0FC3  00F1               	movwf	strlen@s
 23558     0FC4  01F2               	clrf	strlen@s+1
 23559     0FC5  3192  2293  318F   	fcall	_strlen
 23560     0FC8  0871               	movf	?_strlen,w
 23561     0FC9  390F               	andlw	15
 23562     0FCA  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 23563     0FCB  0086               	movwf	6
 23564     0FCC  3001               	movlw	1	; select bank2/3
 23565     0FCD  0087               	movwf	7
 23566     0FCE  0801               	movf	1,w
 23567     0FCF  00F6               	movwf	RN487X_Write@txData
 23568     0FD0  3068               	movlw	low (_RN487X| (0+32768))
 23569     0FD1  0084               	movwf	4
 23570     0FD2  3098               	movlw	high (_RN487X| (0+32768))
 23571     0FD3  0085               	movwf	5
 23572     0FD4  3F01               	moviw [1]fsr0
 23573     0FD5  008A               	movwf	10
 23574     0FD6  3F00               	moviw [0]fsr0
 23575     0FD7  000A               	callw
 23576     0FD8  318F               	pagesel	$
 23577                           
 23578                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 457:     while (*payload) {
 23579     0FD9  2FEC               	goto	l13626
 23580     0FDA                     l13622:
 23581                           
 23582                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 458:         RN487X.Write((*(uint8
      +                          _t *) payload++));
 23583     0FDA  0877               	movf	LIGHTBLUE_SendPacket@payload,w
 23584     0FDB  0086               	movwf	6
 23585     0FDC  0187               	clrf	7
 23586     0FDD  0801               	movf	1,w
 23587     0FDE  00F6               	movwf	RN487X_Write@txData
 23588     0FDF  3068               	movlw	low (_RN487X| (0+32768))
 23589     0FE0  0084               	movwf	4
 23590     0FE1  3098               	movlw	high (_RN487X| (0+32768))
 23591     0FE2  0085               	movwf	5
 23592     0FE3  3F01               	moviw [1]fsr0
 23593     0FE4  008A               	movwf	10
 23594     0FE5  3F00               	moviw [0]fsr0
 23595     0FE6  000A               	callw
 23596     0FE7  318F               	pagesel	$
 23597     0FE8                     l13624:
 23598     0FE8  3001               	movlw	1
 23599     0FE9  00F8               	movwf	??_LIGHTBLUE_SendPacket
 23600     0FEA  0878               	movf	??_LIGHTBLUE_SendPacket,w
 23601     0FEB  07F7               	addwf	LIGHTBLUE_SendPacket@payload,f
 23602     0FEC                     l13626:
 23603                           
 23604                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 457:     while (*payload) {
 23605     0FEC  0877               	movf	LIGHTBLUE_SendPacket@payload,w
 23606     0FED  0086               	movwf	6
 23607     0FEE  0187               	clrf	7
 23608     0FEF  0801               	movf	1,w
 23609     0FF0  1D03               	btfss	3,2
 23610     0FF1  2FF3               	goto	u10451
 23611     0FF2  2FF4               	goto	u10450
 23612     0FF3                     u10451:
 23613     0FF3  2FDA               	goto	l13622
 23614     0FF4                     u10450:
 23615     0FF4                     l13628:
 23616                           
 23617                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 460:     RN487X.Write((']'));
 23618     0FF4  305D               	movlw	93
 23619     0FF5  00F6               	movwf	RN487X_Write@txData
 23620     0FF6  3068               	movlw	low (_RN487X| (0+32768))
 23621     0FF7  0084               	movwf	4
 23622     0FF8  3098               	movlw	high (_RN487X| (0+32768))
 23623     0FF9  0085               	movwf	5
 23624     0FFA  3F01               	moviw [1]fsr0
 23625     0FFB  008A               	movwf	10
 23626     0FFC  3F00               	moviw [0]fsr0
 23627     0FFD  000A               	callw
 23628     0FFE  318F               	pagesel	$
 23629     0FFF                     l193:
 23630     0FFF  0008               	return
 23631     1000                     __end_of_LIGHTBLUE_SendPacket:
 23632                           
 23633                           	psect	text96
 23634     1293                     __ptext96:	
 23635 ;; *************** function _strlen *****************
 23636 ;; Defined at:
 23637 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strlen.c"
 23638 ;; Parameters:    Size  Location     Type
 23639 ;;  s               2    1[COMMON] PTR const unsigned char 
 23640 ;;		 -> lightBlueSerial(80), statusBuffer@main$F3783(80), STR_5(12), STR_3(11), 
 23641 ;;		 -> statusBuffer(80), NULL(0), LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), 
 23642 ;;		 -> LIGHTBLUE_PushButton@payload(3), LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), STR_
      +1(6), 
 23643 ;; Auto vars:     Size  Location     Type
 23644 ;;  a               2    4[COMMON] PTR const unsigned char 
 23645 ;;		 -> lightBlueSerial(80), statusBuffer@main$F3783(80), STR_5(12), STR_3(11), 
 23646 ;;		 -> statusBuffer(80), NULL(0), LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), 
 23647 ;;		 -> LIGHTBLUE_PushButton@payload(3), LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), STR_
      +1(6), 
 23648 ;; Return value:  Size  Location     Type
 23649 ;;                  2    1[COMMON] unsigned int 
 23650 ;; Registers used:
 23651 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 23652 ;; Tracked objects:
 23653 ;;		On entry : 0/0
 23654 ;;		On exit  : 0/0
 23655 ;;		Unchanged: 0/0
 23656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23657 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23658 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23659 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23660 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23661 ;;Total ram usage:        5 bytes
 23662 ;; Hardware stack levels used: 1
 23663 ;; Hardware stack levels required when called: 4
 23664 ;; This function calls:
 23665 ;;		Nothing
 23666 ;; This function is called by:
 23667 ;;		_LIGHTBLUE_SendProtocolVersion
 23668 ;;		_LIGHTBLUE_SendSerialData
 23669 ;;		_LIGHTBLUE_SendPacket
 23670 ;;		_LIGHTBLUE_SplitByte
 23671 ;;		_rn487x_PrintMessage
 23672 ;;		_strstr
 23673 ;; This function uses a non-reentrant model
 23674 ;;
 23675                           
 23676     1293                     _strlen:	
 23677                           ;psect for function _strlen
 23678                           
 23679     1293                     l13064:	
 23680                           ;incstack = 0
 23681                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 23682                           
 23683     1293  0872               	movf	strlen@s+1,w
 23684     1294  00F5               	movwf	strlen@a+1
 23685     1295  0871               	movf	strlen@s,w
 23686     1296  00F4               	movwf	strlen@a
 23687     1297  2A9C               	goto	l13068
 23688     1298                     l13066:
 23689     1298  3001               	movlw	1
 23690     1299  07F1               	addwf	strlen@s,f
 23691     129A  3000               	movlw	0
 23692     129B  3DF2               	addwfc	strlen@s+1,f
 23693     129C                     l13068:
 23694     129C  0871               	movf	strlen@s,w
 23695     129D  0084               	movwf	4
 23696     129E  0872               	movf	strlen@s+1,w
 23697     129F  0085               	movwf	5
 23698     12A0  0012               	moviw fsr0++
 23699     12A1  1D03               	btfss	3,2
 23700     12A2  2AA4               	goto	u9801
 23701     12A3  2AA5               	goto	u9800
 23702     12A4                     u9801:
 23703     12A4  2A98               	goto	l13066
 23704     12A5                     u9800:
 23705     12A5                     l13070:
 23706     12A5  0874               	movf	strlen@a,w
 23707     12A6  0271               	subwf	strlen@s,w
 23708     12A7  00F1               	movwf	?_strlen
 23709     12A8  0875               	movf	strlen@a+1,w
 23710     12A9  3B72               	subwfb	strlen@s+1,w
 23711     12AA  00F2               	movwf	?_strlen+1
 23712     12AB                     l3311:
 23713     12AB  0008               	return
 23714     12AC                     __end_of_strlen:
 23715                           
 23716                           	psect	text97
 23717     1FF4                     __ptext97:	
 23718 ;; *************** function _RN487X_Write *****************
 23719 ;; Defined at:
 23720 ;;		line 252 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 23721 ;; Parameters:    Size  Location     Type
 23722 ;;  txData          1    6[COMMON] unsigned char 
 23723 ;; Auto vars:     Size  Location     Type
 23724 ;;		None
 23725 ;; Return value:  Size  Location     Type
 23726 ;;                  1    wreg      void 
 23727 ;; Registers used:
 23728 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23729 ;; Tracked objects:
 23730 ;;		On entry : 0/0
 23731 ;;		On exit  : 0/0
 23732 ;;		Unchanged: 0/0
 23733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23734 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23737 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23738 ;;Total ram usage:        1 bytes
 23739 ;; Hardware stack levels used: 1
 23740 ;; Hardware stack levels required when called: 5
 23741 ;; This function calls:
 23742 ;;		_EUSART1_Write
 23743 ;;		_EUSART2_Write
 23744 ;; This function is called by:
 23745 ;;		_RN487X_SendCmd
 23746 ;;		_LIGHTBLUE_SendPacket
 23747 ;;		_LIGHTBLUE_SendSerialData
 23748 ;;		_RN487X_Example_TransparentUart
 23749 ;;		_main
 23750 ;; This function uses a non-reentrant model
 23751 ;;
 23752                           
 23753     1FF4                     _RN487X_Write:	
 23754                           ;psect for function _RN487X_Write
 23755                           
 23756     1FF4                     l13054:	
 23757                           ;incstack = 0
 23758                           ; Regs used in _RN487X_Write: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23759                           
 23760                           
 23761                           ;mcc_generated_files/rn487x/rn487x_interface.c: 252: static __attribute__((inline)) void
      +                           RN487X_Write(uint8_t txData);mcc_generated_files/rn487x/rn487x_interface.c: 253: {;mcc_
      +                          generated_files/rn487x/rn487x_interface.c: 254:     uart[UART_BLE].Write(txData);
 23762     1FF4  0876               	movf	RN487X_Write@txData,w
 23763     1FF5  00F1               	movwf	EUSART2_Write@txData
 23764     1FF6  3016               	movlw	low ((_uart+22)| (0+32768))
 23765     1FF7  0084               	movwf	4
 23766     1FF8  3098               	movlw	high ((_uart+22)| (0+32768))
 23767     1FF9  0085               	movwf	5
 23768     1FFA  3F01               	moviw [1]fsr0
 23769     1FFB  008A               	movwf	10
 23770     1FFC  3F00               	moviw [0]fsr0
 23771     1FFD  000A               	callw
 23772     1FFE  319F               	pagesel	$
 23773     1FFF                     l786:
 23774     1FFF  0008               	return
 23775     2000                     __end_of_RN487X_Write:
 23776                           
 23777                           	psect	text98
 23778     1524                     __ptext98:	
 23779 ;; *************** function _EUSART1_Write *****************
 23780 ;; Defined at:
 23781 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 23782 ;; Parameters:    Size  Location     Type
 23783 ;;  txData          1    1[COMMON] unsigned char 
 23784 ;; Auto vars:     Size  Location     Type
 23785 ;;		None
 23786 ;; Return value:  Size  Location     Type
 23787 ;;                  1    wreg      void 
 23788 ;; Registers used:
 23789 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23790 ;; Tracked objects:
 23791 ;;		On entry : 0/0
 23792 ;;		On exit  : 0/0
 23793 ;;		Unchanged: 0/0
 23794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23795 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23797 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23798 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23799 ;;Total ram usage:        2 bytes
 23800 ;; Hardware stack levels used: 1
 23801 ;; Hardware stack levels required when called: 4
 23802 ;; This function calls:
 23803 ;;		Nothing
 23804 ;; This function is called by:
 23805 ;;		_putch
 23806 ;;		_RN487X_Write
 23807 ;;		_rn487x_PrintMessageStart
 23808 ;;		_rn487x_PrintMessageEnd
 23809 ;;		_rn487x_PrintIndicatorCharacters
 23810 ;;		_rn487x_PrintMessage
 23811 ;;		_LIGHTBLUE_PerformAction
 23812 ;;		_RN487X_Example_TransparentUart
 23813 ;;		_main
 23814 ;; This function uses a non-reentrant model
 23815 ;;
 23816                           
 23817     1524                     _EUSART1_Write:	
 23818                           ;psect for function _EUSART1_Write
 23819                           
 23820     1524                     l13026:	
 23821                           ;incstack = 0
 23822                           ; Regs used in _EUSART1_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 23823                           
 23824     1524                     l13028:	
 23825                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 23826                           
 23827                           
 23828                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 23829     1524  0140               	movlb	0	; select bank0
 23830     1525  085B               	movf	_eusart1TxBufferRemaining,w	;volatile
 23831     1526  1903               	btfsc	3,2
 23832     1527  2D29               	goto	u9751
 23833     1528  2D2A               	goto	u9750
 23834     1529                     u9751:
 23835     1529  2D24               	goto	l13028
 23836     152A                     u9750:
 23837     152A                     l1219:
 23838                           
 23839                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
 23840     152A  014E               	movlb	14	; select bank14
 23841     152B  1A19               	btfsc	25,4	;volatile
 23842     152C  2D2E               	goto	u9761
 23843     152D  2D2F               	goto	u9760
 23844     152E                     u9761:
 23845     152E  2D33               	goto	l1220
 23846     152F                     u9760:
 23847     152F                     l13030:
 23848                           
 23849                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
 23850     152F  0871               	movf	EUSART1_Write@txData,w
 23851     1530  0142               	movlb	2	; select bank2
 23852     1531  009A               	movwf	26	;volatile
 23853                           
 23854                           ;mcc_generated_files/eusart1.c: 182:     }
 23855     1532  2D48               	goto	l13042
 23856     1533                     l1220:	
 23857                           ;mcc_generated_files/eusart1.c: 183:     else
 23858                           
 23859                           
 23860                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
 23861     1533  1219               	bcf	25,4	;volatile
 23862     1534                     l13032:
 23863                           
 23864                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 23865     1534  0140               	movlb	0	; select bank0
 23866     1535  085D               	movf	_eusart1TxHead,w
 23867     1536  3EC5               	addlw	(low (_eusart1TxBuffer| 0))& (0+255)
 23868     1537  0086               	movwf	6
 23869     1538  0187               	clrf	7
 23870     1539  0871               	movf	EUSART1_Write@txData,w
 23871     153A  0081               	movwf	1
 23872     153B                     l13034:
 23873     153B  3001               	movlw	1
 23874     153C  00F2               	movwf	??_EUSART1_Write
 23875     153D  0872               	movf	??_EUSART1_Write,w
 23876     153E  07DD               	addwf	_eusart1TxHead,f	;volatile
 23877     153F                     l13036:
 23878                           
 23879                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 23880     153F  3008               	movlw	8
 23881     1540  025D               	subwf	_eusart1TxHead,w	;volatile
 23882     1541  1C03               	skipc
 23883     1542  2D44               	goto	u9771
 23884     1543  2D45               	goto	u9770
 23885     1544                     u9771:
 23886     1544  2D46               	goto	l13040
 23887     1545                     u9770:
 23888     1545                     l13038:
 23889                           
 23890                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 23891     1545  01DD               	clrf	_eusart1TxHead	;volatile
 23892     1546                     l13040:
 23893                           
 23894                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 23895     1546  3001               	movlw	1
 23896     1547  02DB               	subwf	_eusart1TxBufferRemaining,f	;volatile
 23897     1548                     l13042:
 23898                           
 23899                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
 23900     1548  014E               	movlb	14	; select bank14
 23901     1549  1619               	bsf	25,4	;volatile
 23902     154A                     l1223:
 23903     154A  0008               	return
 23904     154B                     __end_of_EUSART1_Write:
 23905                           
 23906                           	psect	text99
 23907     14FD                     __ptext99:	
 23908 ;; *************** function _EUSART2_Write *****************
 23909 ;; Defined at:
 23910 ;;		line 173 in file "mcc_generated_files/eusart2.c"
 23911 ;; Parameters:    Size  Location     Type
 23912 ;;  txData          1    1[COMMON] unsigned char 
 23913 ;; Auto vars:     Size  Location     Type
 23914 ;;		None
 23915 ;; Return value:  Size  Location     Type
 23916 ;;                  1    wreg      void 
 23917 ;; Registers used:
 23918 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23919 ;; Tracked objects:
 23920 ;;		On entry : 0/0
 23921 ;;		On exit  : 0/0
 23922 ;;		Unchanged: 0/0
 23923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23924 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23926 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23927 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23928 ;;Total ram usage:        2 bytes
 23929 ;; Hardware stack levels used: 1
 23930 ;; Hardware stack levels required when called: 4
 23931 ;; This function calls:
 23932 ;;		Nothing
 23933 ;; This function is called by:
 23934 ;;		_RN487X_Write
 23935 ;;		_rn487x_PrintMessageStart
 23936 ;;		_rn487x_PrintMessageEnd
 23937 ;;		_rn487x_PrintIndicatorCharacters
 23938 ;;		_rn487x_PrintMessage
 23939 ;;		_LIGHTBLUE_PerformAction
 23940 ;;		_RN487X_Example_TransparentUart
 23941 ;;		_main
 23942 ;; This function uses a non-reentrant model
 23943 ;;
 23944                           
 23945     14FD                     _EUSART2_Write:	
 23946                           ;psect for function _EUSART2_Write
 23947                           
 23948     14FD                     l12982:	
 23949                           ;incstack = 0
 23950                           ; Regs used in _EUSART2_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 23951                           
 23952     14FD                     l12984:	
 23953                           ;mcc_generated_files/eusart2.c: 173: void EUSART2_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart2.c: 174: {;mcc_generated_files/eusart2.c: 175:     while(0 == eusart2TxBuffer
      +                          Remaining)
 23954                           
 23955                           
 23956                           ;mcc_generated_files/eusart2.c: 175:     while(0 == eusart2TxBufferRemaining)
 23957     14FD  0140               	movlb	0	; select bank0
 23958     14FE  0861               	movf	_eusart2TxBufferRemaining,w	;volatile
 23959     14FF  1903               	btfsc	3,2
 23960     1500  2D02               	goto	u9701
 23961     1501  2D03               	goto	u9700
 23962     1502                     u9701:
 23963     1502  2CFD               	goto	l12984
 23964     1503                     u9700:
 23965     1503                     l1075:
 23966                           
 23967                           ;mcc_generated_files/eusart2.c: 179:     if(0 == PIE3bits.TX2IE)
 23968     1503  014E               	movlb	14	; select bank14
 23969     1504  1B19               	btfsc	25,6	;volatile
 23970     1505  2D07               	goto	u9711
 23971     1506  2D08               	goto	u9710
 23972     1507                     u9711:
 23973     1507  2D0C               	goto	l1076
 23974     1508                     u9710:
 23975     1508                     l12986:
 23976                           
 23977                           ;mcc_generated_files/eusart2.c: 180:     {;mcc_generated_files/eusart2.c: 181:         T
      +                          X2REG = txData;
 23978     1508  0871               	movf	EUSART2_Write@txData,w
 23979     1509  0154               	movlb	20	; select bank20
 23980     150A  009A               	movwf	26	;volatile
 23981                           
 23982                           ;mcc_generated_files/eusart2.c: 182:     }
 23983     150B  2D21               	goto	l12998
 23984     150C                     l1076:	
 23985                           ;mcc_generated_files/eusart2.c: 183:     else
 23986                           
 23987                           
 23988                           ;mcc_generated_files/eusart2.c: 184:     {;mcc_generated_files/eusart2.c: 185:         P
      +                          IE3bits.TX2IE = 0;
 23989     150C  1319               	bcf	25,6	;volatile
 23990     150D                     l12988:
 23991                           
 23992                           ;mcc_generated_files/eusart2.c: 186:         eusart2TxBuffer[eusart2TxHead++] = txData;
 23993     150D  0140               	movlb	0	; select bank0
 23994     150E  0863               	movf	_eusart2TxHead,w
 23995     150F  3EDD               	addlw	(low (_eusart2TxBuffer| 0))& (0+255)
 23996     1510  0086               	movwf	6
 23997     1511  0187               	clrf	7
 23998     1512  0871               	movf	EUSART2_Write@txData,w
 23999     1513  0081               	movwf	1
 24000     1514                     l12990:
 24001     1514  3001               	movlw	1
 24002     1515  00F2               	movwf	??_EUSART2_Write
 24003     1516  0872               	movf	??_EUSART2_Write,w
 24004     1517  07E3               	addwf	_eusart2TxHead,f	;volatile
 24005     1518                     l12992:
 24006                           
 24007                           ;mcc_generated_files/eusart2.c: 187:         if(sizeof(eusart2TxBuffer) <= eusart2TxHead
      +                          )
 24008     1518  3008               	movlw	8
 24009     1519  0263               	subwf	_eusart2TxHead,w	;volatile
 24010     151A  1C03               	skipc
 24011     151B  2D1D               	goto	u9721
 24012     151C  2D1E               	goto	u9720
 24013     151D                     u9721:
 24014     151D  2D1F               	goto	l12996
 24015     151E                     u9720:
 24016     151E                     l12994:
 24017                           
 24018                           ;mcc_generated_files/eusart2.c: 188:         {;mcc_generated_files/eusart2.c: 189:      
      +                                 eusart2TxHead = 0;
 24019     151E  01E3               	clrf	_eusart2TxHead	;volatile
 24020     151F                     l12996:
 24021                           
 24022                           ;mcc_generated_files/eusart2.c: 191:         eusart2TxBufferRemaining--;
 24023     151F  3001               	movlw	1
 24024     1520  02E1               	subwf	_eusart2TxBufferRemaining,f	;volatile
 24025     1521                     l12998:
 24026                           
 24027                           ;mcc_generated_files/eusart2.c: 193:     PIE3bits.TX2IE = 1;
 24028     1521  014E               	movlb	14	; select bank14
 24029     1522  1719               	bsf	25,6	;volatile
 24030     1523                     l1079:
 24031     1523  0008               	return
 24032     1524                     __end_of_EUSART2_Write:
 24033                           
 24034                           	psect	text100
 24035     0BDB                     __ptext100:	
 24036 ;; *************** function _BMA253_GetAccelDataXYZ *****************
 24037 ;; Defined at:
 24038 ;;		line 118 in file "mcc_generated_files/application/BMA253_accel.c"
 24039 ;; Parameters:    Size  Location     Type
 24040 ;;  accelData       1    wreg     PTR struct .
 24041 ;;		 -> LIGHTBLUE_AccelSensor@accelData(6), 
 24042 ;; Auto vars:     Size  Location     Type
 24043 ;;  accelData       1   19[BANK0 ] PTR struct .
 24044 ;;		 -> LIGHTBLUE_AccelSensor@accelData(6), 
 24045 ;;  sensorValue     2   20[BANK0 ] short 
 24046 ;;  mSB             1   18[BANK0 ] char 
 24047 ;;  lSB             1   17[BANK0 ] char 
 24048 ;; Return value:  Size  Location     Type
 24049 ;;                  1    wreg      void 
 24050 ;; Registers used:
 24051 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24052 ;; Tracked objects:
 24053 ;;		On entry : 0/0
 24054 ;;		On exit  : 0/0
 24055 ;;		Unchanged: 0/0
 24056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24058 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24059 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24060 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24061 ;;Total ram usage:        6 bytes
 24062 ;; Hardware stack levels used: 1
 24063 ;; Hardware stack levels required when called: 15
 24064 ;; This function calls:
 24065 ;;		_BMA253_GetAccelDataY
 24066 ;;		_BMA253_GetAccelDataZ
 24067 ;;		_BMA253_NewAccelDataRdyY
 24068 ;;		_BMA253_NewAccelDataRdyZ
 24069 ;;		_readRegister
 24070 ;; This function is called by:
 24071 ;;		_LIGHTBLUE_AccelSensor
 24072 ;; This function uses a non-reentrant model
 24073 ;;
 24074                           
 24075     0BDB                     _BMA253_GetAccelDataXYZ:	
 24076                           ;psect for function _BMA253_GetAccelDataXYZ
 24077                           
 24078                           
 24079                           ;incstack = 0
 24080 ;; hardware stack exceeded
 24081                           ; Regs used in _BMA253_GetAccelDataXYZ: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24082                           ;BMA253_GetAccelDataXYZ@accelData stored from wreg
 24083     0BDB  0140               	movlb	0	; select bank0
 24084     0BDC  00B3               	movwf	BMA253_GetAccelDataXYZ@accelData
 24085     0BDD                     l13586:
 24086                           
 24087                           ;mcc_generated_files/application/BMA253_accel.c: 121:     int8_t mSB = 0;
 24088     0BDD  01B2               	clrf	BMA253_GetAccelDataXYZ@mSB
 24089     0BDE                     l13588:
 24090                           
 24091                           ;mcc_generated_files/application/BMA253_accel.c: 123:     lSB = readRegister(TMAG5273_RE
      +                          G_X_LSB_RESULT);
 24092     0BDE  3013               	movlw	19
 24093     0BDF  3190  2058  318B   	fcall	_readRegister
 24094     0BE2  0140               	movlb	0	; select bank0
 24095     0BE3  00B1               	movwf	BMA253_GetAccelDataXYZ@lSB
 24096     0BE4                     l13590:
 24097                           
 24098                           ;mcc_generated_files/application/BMA253_accel.c: 124:     mSB = readRegister(TMAG5273_RE
      +                          G_X_MSB_RESULT);
 24099     0BE4  3012               	movlw	18
 24100     0BE5  3190  2058  318B   	fcall	_readRegister
 24101     0BE8  0140               	movlb	0	; select bank0
 24102     0BE9  00B2               	movwf	BMA253_GetAccelDataXYZ@mSB
 24103     0BEA                     l13592:
 24104                           
 24105                           ;mcc_generated_files/application/BMA253_accel.c: 126:     int16_t sensorValue;;mcc_gener
      +                          ated_files/application/BMA253_accel.c: 128:     sensorValue = mSB >> 8 | lSB;
 24106     0BEA  0832               	movf	BMA253_GetAccelDataXYZ@mSB,w
 24107     0BEB  00B0               	movwf	??_BMA253_GetAccelDataXYZ
 24108     0BEC  3008               	movlw	8
 24109     0BED                     u10415:
 24110     0BED  1003               	clrc
 24111     0BEE  1BB0               	btfsc	??_BMA253_GetAccelDataXYZ,7
 24112     0BEF  1403               	setc
 24113     0BF0  0CB0               	rrf	??_BMA253_GetAccelDataXYZ,f
 24114     0BF1  0B89               	decfsz	9,f
 24115     0BF2  2BED               	goto	u10415
 24116     0BF3  0830               	movf	??_BMA253_GetAccelDataXYZ,w
 24117     0BF4  0431               	iorwf	BMA253_GetAccelDataXYZ@lSB,w
 24118     0BF5  00B4               	movwf	BMA253_GetAccelDataXYZ@sensorValue
 24119     0BF6  01B5               	clrf	BMA253_GetAccelDataXYZ@sensorValue+1
 24120     0BF7  1BB4               	btfsc	BMA253_GetAccelDataXYZ@sensorValue,7
 24121     0BF8  03B5               	decf	BMA253_GetAccelDataXYZ@sensorValue+1,f
 24122     0BF9                     l13594:
 24123                           
 24124                           ;mcc_generated_files/application/BMA253_accel.c: 130:     accelData->x = sensorValue;
 24125     0BF9  0833               	movf	BMA253_GetAccelDataXYZ@accelData,w
 24126     0BFA  0086               	movwf	6
 24127     0BFB  0187               	clrf	7
 24128     0BFC  0834               	movf	BMA253_GetAccelDataXYZ@sensorValue,w
 24129     0BFD  3FC0               	movwi [0]fsr1
 24130     0BFE  0835               	movf	BMA253_GetAccelDataXYZ@sensorValue+1,w
 24131     0BFF  3FC1               	movwi [1]fsr1
 24132     0C00                     l13596:	
 24133                           ;mcc_generated_files/application/BMA253_accel.c: 132:     while (!BMA253_NewAccelDataRdy
      +                          Y())
 24134                           
 24135                           
 24136                           ;mcc_generated_files/application/BMA253_accel.c: 132:     while (!BMA253_NewAccelDataRdy
      +                          Y())
 24137     0C00  3191  212A  318B   	fcall	_BMA253_NewAccelDataRdyY
 24138     0C03  3A00               	xorlw	0
 24139     0C04  1903               	skipnz
 24140     0C05  2C07               	goto	u10421
 24141     0C06  2C08               	goto	u10420
 24142     0C07                     u10421:
 24143     0C07  2C00               	goto	l13596
 24144     0C08                     u10420:
 24145     0C08                     l13598:
 24146                           
 24147                           ;mcc_generated_files/application/BMA253_accel.c: 137:     BMA253_GetAccelDataY(&sensorVa
      +                          lue);
 24148     0C08  3034               	movlw	(low (BMA253_GetAccelDataXYZ@sensorValue| 0))& (0+255)
 24149     0C09  3196  2648  318B   	fcall	_BMA253_GetAccelDataY
 24150     0C0C                     l13600:
 24151                           
 24152                           ;mcc_generated_files/application/BMA253_accel.c: 138:     accelData->y = sensorValue;
 24153     0C0C  0140               	movlb	0	; select bank0
 24154     0C0D  0833               	movf	BMA253_GetAccelDataXYZ@accelData,w
 24155     0C0E  3E02               	addlw	2
 24156     0C0F  0086               	movwf	6
 24157     0C10  0187               	clrf	7
 24158     0C11  0834               	movf	BMA253_GetAccelDataXYZ@sensorValue,w
 24159     0C12  3FC0               	movwi [0]fsr1
 24160     0C13  0835               	movf	BMA253_GetAccelDataXYZ@sensorValue+1,w
 24161     0C14  3FC1               	movwi [1]fsr1
 24162     0C15                     l13602:	
 24163                           ;mcc_generated_files/application/BMA253_accel.c: 140:      while (!BMA253_NewAccelDataRd
      +                          yZ())
 24164                           
 24165                           
 24166                           ;mcc_generated_files/application/BMA253_accel.c: 140:      while (!BMA253_NewAccelDataRd
      +                          yZ())
 24167     0C15  3191  213B  318B   	fcall	_BMA253_NewAccelDataRdyZ
 24168     0C18  3A00               	xorlw	0
 24169     0C19  1903               	skipnz
 24170     0C1A  2C1C               	goto	u10431
 24171     0C1B  2C1D               	goto	u10430
 24172     0C1C                     u10431:
 24173     0C1C  2C15               	goto	l13602
 24174     0C1D                     u10430:
 24175     0C1D                     l13604:
 24176                           
 24177                           ;mcc_generated_files/application/BMA253_accel.c: 145:     BMA253_GetAccelDataZ(&sensorVa
      +                          lue);
 24178     0C1D  3034               	movlw	(low (BMA253_GetAccelDataXYZ@sensorValue| 0))& (0+255)
 24179     0C1E  3196  2676  318B   	fcall	_BMA253_GetAccelDataZ
 24180     0C21                     l13606:
 24181                           
 24182                           ;mcc_generated_files/application/BMA253_accel.c: 146:     accelData->z = sensorValue;
 24183     0C21  0140               	movlb	0	; select bank0
 24184     0C22  0833               	movf	BMA253_GetAccelDataXYZ@accelData,w
 24185     0C23  3E04               	addlw	4
 24186     0C24  0086               	movwf	6
 24187     0C25  0187               	clrf	7
 24188     0C26  0834               	movf	BMA253_GetAccelDataXYZ@sensorValue,w
 24189     0C27  3FC0               	movwi [0]fsr1
 24190     0C28  0835               	movf	BMA253_GetAccelDataXYZ@sensorValue+1,w
 24191     0C29  3FC1               	movwi [1]fsr1
 24192     0C2A                     l44:
 24193     0C2A  0008               	return
 24194     0C2B                     __end_of_BMA253_GetAccelDataXYZ:
 24195                           
 24196                           	psect	text101
 24197     1058                     __ptext101:	
 24198 ;; *************** function _readRegister *****************
 24199 ;; Defined at:
 24200 ;;		line 175 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 24201 ;; Parameters:    Size  Location     Type
 24202 ;;  regAddress      1    wreg     unsigned char 
 24203 ;; Auto vars:     Size  Location     Type
 24204 ;;  regAddress      1   12[BANK0 ] unsigned char 
 24205 ;;  regVal          1   13[BANK0 ] unsigned char 
 24206 ;; Return value:  Size  Location     Type
 24207 ;;                  1    wreg      unsigned char 
 24208 ;; Registers used:
 24209 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24210 ;; Tracked objects:
 24211 ;;		On entry : 0/0
 24212 ;;		On exit  : 0/0
 24213 ;;		Unchanged: 0/0
 24214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24216 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24218 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24219 ;;Total ram usage:        2 bytes
 24220 ;; Hardware stack levels used: 1
 24221 ;; Hardware stack levels required when called: 14
 24222 ;; This function calls:
 24223 ;;		_readRegisters
 24224 ;; This function is called by:
 24225 ;;		_BMA253_GetAccelDataXYZ
 24226 ;;		_setOperatingMode
 24227 ;;		_setMagneticChannel
 24228 ;;		_setXYAxisRange
 24229 ;;		_setZAxisRange
 24230 ;;		_setTemperatureEn
 24231 ;;		_getLowPower
 24232 ;;		_getOperatingMode
 24233 ;;		_getMagneticChannel
 24234 ;;		_getAngleEn
 24235 ;;		_getTemperatureEN
 24236 ;;		_getDeviceStatus
 24237 ;;		_setCRCMode
 24238 ;;		_setMagTemp
 24239 ;;		_setConvAvg
 24240 ;;		_setReadMode
 24241 ;;		_setIntThreshold
 24242 ;;		_setLowPower
 24243 ;;		_setGlitchFilter
 24244 ;;		_setTriggerMode
 24245 ;;		_setSleeptime
 24246 ;;		_setMagDir
 24247 ;;		_setMagnitudeGain
 24248 ;;		_setAngleEn
 24249 ;;		_setInterruptResult
 24250 ;;		_setThresholdEn
 24251 ;;		_setIntPinState
 24252 ;;		_setInterruptMode
 24253 ;;		_setMaskInterrupt
 24254 ;;		_setI2CAddressEN
 24255 ;;		_setOscillatorError
 24256 ;;		_getCRCMode
 24257 ;;		_getMagTemp
 24258 ;;		_getConvAvg
 24259 ;;		_getReadMode
 24260 ;;		_getIntThreshold
 24261 ;;		_getGlitchFiler
 24262 ;;		_getTriggerMode
 24263 ;;		_getSleeptime
 24264 ;;		_getMagDir
 24265 ;;		_getMagnitudeChannelSelect
 24266 ;;		_getMagneticGain
 24267 ;;		_getMagneticOffset1
 24268 ;;		_getMagneticOffset2
 24269 ;;		_getXYAxisRange
 24270 ;;		_getZAxisRange
 24271 ;;		_getXThreshold
 24272 ;;		_getYThreshold
 24273 ;;		_getZThreshold
 24274 ;;		_getTemperatureThreshold
 24275 ;;		_getInterruptResult
 24276 ;;		_getThresholdEn
 24277 ;;		_getIntPinState
 24278 ;;		_getInterruptMode
 24279 ;;		_getMaskInt
 24280 ;;		_getSetCount
 24281 ;;		_getPOR
 24282 ;;		_getDiagStatus
 24283 ;;		_getResultStatus
 24284 ;;		_getI2CAddress
 24285 ;;		_getDeviceID
 24286 ;;		_getInterruptPinStatus
 24287 ;;		_getXData
 24288 ;;		_getYData
 24289 ;;		_getZData
 24290 ;;		_getAngleResult
 24291 ;;		_getMagnitudeResult
 24292 ;; This function uses a non-reentrant model
 24293 ;;
 24294                           
 24295     1058                     _readRegister:	
 24296                           ;psect for function _readRegister
 24297                           
 24298                           
 24299                           ;incstack = 0
 24300 ;; hardware stack exceeded
 24301                           ; Regs used in _readRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24302                           ;readRegister@regAddress stored from wreg
 24303     1058  0140               	movlb	0	; select bank0
 24304     1059  00AC               	movwf	readRegister@regAddress
 24305     105A                     l13216:
 24306                           
 24307                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 176:     uint8_t regVa
      +                          l = 0;
 24308     105A  01AD               	clrf	readRegister@regVal
 24309     105B                     l13218:
 24310                           
 24311                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 177:     readRegisters
      +                          (regAddress, &regVal, 1);
 24312     105B  302D               	movlw	(low (readRegister@regVal| 0))& (0+255)
 24313     105C  00A7               	movwf	readRegisters@dataBuffer
 24314     105D  01A8               	clrf	readRegisters@numBytes
 24315     105E  0AA8               	incf	readRegisters@numBytes,f
 24316     105F  082C               	movf	readRegister@regAddress,w
 24317     1060  3190  2092  3190   	fcall	_readRegisters
 24318     1063                     l13220:
 24319                           
 24320                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 180:     return regVal
      +                          ;
 24321     1063  0140               	movlb	0	; select bank0
 24322     1064  082D               	movf	readRegister@regVal,w
 24323     1065                     l2136:
 24324     1065  0008               	return
 24325     1066                     __end_of_readRegister:
 24326                           
 24327                           	psect	text102
 24328     1092                     __ptext102:	
 24329 ;; *************** function _readRegisters *****************
 24330 ;; Defined at:
 24331 ;;		line 119 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 24332 ;; Parameters:    Size  Location     Type
 24333 ;;  regAddress      1    wreg     unsigned char 
 24334 ;;  dataBuffer      1    7[BANK0 ] PTR unsigned char 
 24335 ;;		 -> getTemp@databuffer(2), getManufacturerID@databuffer(2), readWakeUpAndSleepData@wakeupRegisterRead(8), readRegist
      +er@regVal(1), 
 24336 ;;  numBytes        1    8[BANK0 ] unsigned char 
 24337 ;; Auto vars:     Size  Location     Type
 24338 ;;  regAddress      1   11[BANK0 ] unsigned char 
 24339 ;; Return value:  Size  Location     Type
 24340 ;;                  1    wreg      char 
 24341 ;; Registers used:
 24342 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24343 ;; Tracked objects:
 24344 ;;		On entry : 0/0
 24345 ;;		On exit  : 0/0
 24346 ;;		Unchanged: 0/0
 24347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24348 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24349 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24350 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24351 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24352 ;;Total ram usage:        5 bytes
 24353 ;; Hardware stack levels used: 1
 24354 ;; Hardware stack levels required when called: 13
 24355 ;; This function calls:
 24356 ;;		_i2c_readNBytes
 24357 ;; This function is called by:
 24358 ;;		_readRegister
 24359 ;;		_readWakeUpAndSleepData
 24360 ;;		_getManufacturerID
 24361 ;;		_getTemp
 24362 ;; This function uses a non-reentrant model
 24363 ;;
 24364                           
 24365     1092                     _readRegisters:	
 24366                           ;psect for function _readRegisters
 24367                           
 24368                           
 24369                           ;incstack = 0
 24370 ;; hardware stack exceeded
 24371                           ; Regs used in _readRegisters: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24372                           ;readRegisters@regAddress stored from wreg
 24373     1092  0140               	movlb	0	; select bank0
 24374     1093  00AB               	movwf	readRegisters@regAddress
 24375     1094                     l13152:
 24376                           
 24377                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 138:     i2c_readNByte
      +                          s(regAddress, &dataBuffer, numBytes);
 24378     1094  3027               	movlw	(low (readRegisters@dataBuffer| 0))& (0+255)
 24379     1095  00A4               	movwf	i2c_readNBytes@data
 24380     1096  0828               	movf	readRegisters@numBytes,w
 24381     1097  00A9               	movwf	??_readRegisters
 24382     1098  01AA               	clrf	??_readRegisters+1
 24383     1099  0829               	movf	??_readRegisters,w
 24384     109A  00A5               	movwf	i2c_readNBytes@len
 24385     109B  082A               	movf	??_readRegisters+1,w
 24386     109C  00A6               	movwf	i2c_readNBytes@len+1
 24387     109D  082B               	movf	readRegisters@regAddress,w
 24388     109E  3193  23A0  3190   	fcall	_i2c_readNBytes
 24389     10A1                     l2130:
 24390     10A1  0008               	return
 24391     10A2                     __end_of_readRegisters:
 24392                           
 24393                           	psect	text103
 24394     13A0                     __ptext103:	
 24395 ;; *************** function _i2c_readNBytes *****************
 24396 ;; Defined at:
 24397 ;;		line 228 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 24398 ;; Parameters:    Size  Location     Type
 24399 ;;  address         1    wreg     unsigned char 
 24400 ;;  data            1    4[BANK0 ] PTR void 
 24401 ;;		 -> readRegisters@dataBuffer(1), 
 24402 ;;  len             2    5[BANK0 ] unsigned int 
 24403 ;; Auto vars:     Size  Location     Type
 24404 ;;  address         1   11[COMMON] unsigned char 
 24405 ;; Return value:  Size  Location     Type
 24406 ;;                  1    wreg      void 
 24407 ;; Registers used:
 24408 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24409 ;; Tracked objects:
 24410 ;;		On entry : 0/0
 24411 ;;		On exit  : 0/0
 24412 ;;		Unchanged: 0/0
 24413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24414 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24415 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24417 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24418 ;;Total ram usage:        4 bytes
 24419 ;; Hardware stack levels used: 1
 24420 ;; Hardware stack levels required when called: 12
 24421 ;; This function calls:
 24422 ;;		_I2C1_Close
 24423 ;;		_I2C1_MasterRead
 24424 ;;		_I2C1_Open
 24425 ;;		_I2C1_SetBuffer
 24426 ;; This function is called by:
 24427 ;;		_readRegisters
 24428 ;; This function uses a non-reentrant model
 24429 ;;
 24430                           
 24431     13A0                     _i2c_readNBytes:	
 24432                           ;psect for function _i2c_readNBytes
 24433                           
 24434                           
 24435                           ;incstack = 0
 24436 ;; hardware stack exceeded
 24437                           ; Regs used in _i2c_readNBytes: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24438                           ;i2c_readNBytes@address stored from wreg
 24439     13A0  00FB               	movwf	i2c_readNBytes@address
 24440     13A1                     l13044:
 24441     13A1                     l13046:	
 24442                           ;mcc_generated_files/drivers/i2c_simple_master.c: 228: void i2c_readNBytes(i2c1_address_
      +                          t address, void *data, size_t len);mcc_generated_files/drivers/i2c_simple_master.c: 229:
      +                           {;mcc_generated_files/drivers/i2c_simple_master.c: 230:     while(!I2C1_Open(address));
 24443                           
 24444     13A1  087B               	movf	i2c_readNBytes@address,w
 24445     13A2  3197  27CA  3193   	fcall	_I2C1_Open
 24446     13A5  3A00               	xorlw	0
 24447     13A6  1903               	skipnz
 24448     13A7  2BA9               	goto	u9781
 24449     13A8  2BAA               	goto	u9780
 24450     13A9                     u9781:
 24451     13A9  2BA1               	goto	l13046
 24452     13AA                     u9780:
 24453     13AA                     l13048:
 24454                           
 24455                           ;mcc_generated_files/drivers/i2c_simple_master.c: 231:     I2C1_SetBuffer(data,len);
 24456     13AA  0140               	movlb	0	; select bank0
 24457     13AB  0826               	movf	i2c_readNBytes@len+1,w
 24458     13AC  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 24459     13AD  0825               	movf	i2c_readNBytes@len,w
 24460     13AE  00F1               	movwf	I2C1_SetBuffer@bufferSize
 24461     13AF  0824               	movf	i2c_readNBytes@data,w
 24462     13B0  3190  204A  3193   	fcall	_I2C1_SetBuffer
 24463     13B3                     l13050:
 24464                           
 24465                           ;mcc_generated_files/drivers/i2c_simple_master.c: 232:     I2C1_MasterRead();
 24466     13B3  319E  26CF  3193   	fcall	_I2C1_MasterRead
 24467     13B6                     l13052:	
 24468                           ;mcc_generated_files/drivers/i2c_simple_master.c: 233:     while(I2C1_BUSY == I2C1_Close
      +                          ());
 24469                           
 24470     13B6  3192  2233  3193   	fcall	_I2C1_Close
 24471     13B9  3A01               	xorlw	1
 24472     13BA  1903               	skipnz
 24473     13BB  2BBD               	goto	u9791
 24474     13BC  2BBE               	goto	u9790
 24475     13BD                     u9791:
 24476     13BD  2BB6               	goto	l13052
 24477     13BE                     u9790:
 24478     13BE                     l579:
 24479     13BE  0008               	return
 24480     13BF                     __end_of_i2c_readNBytes:
 24481                           
 24482                           	psect	text104
 24483     1ECF                     __ptext104:	
 24484 ;; *************** function _I2C1_MasterRead *****************
 24485 ;; Defined at:
 24486 ;;		line 246 in file "mcc_generated_files/i2c1_master.c"
 24487 ;; Parameters:    Size  Location     Type
 24488 ;;		None
 24489 ;; Auto vars:     Size  Location     Type
 24490 ;;		None
 24491 ;; Return value:  Size  Location     Type
 24492 ;;                  1    wreg      enum E358
 24493 ;; Registers used:
 24494 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24495 ;; Tracked objects:
 24496 ;;		On entry : 0/0
 24497 ;;		On exit  : 0/0
 24498 ;;		Unchanged: 0/0
 24499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24504 ;;Total ram usage:        0 bytes
 24505 ;; Hardware stack levels used: 1
 24506 ;; Hardware stack levels required when called: 11
 24507 ;; This function calls:
 24508 ;;		_I2C1_MasterOperation
 24509 ;; This function is called by:
 24510 ;;		_i2c_readNBytes
 24511 ;;		_I2C1_ReadNBytes
 24512 ;; This function uses a non-reentrant model
 24513 ;;
 24514                           
 24515     1ECF                     _I2C1_MasterRead:	
 24516                           ;psect for function _I2C1_MasterRead
 24517                           
 24518     1ECF                     l12952:	
 24519                           ;incstack = 0
 24520 ;; hardware stack exceeded
 24521                           ; Regs used in _I2C1_MasterRead: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24522                           
 24523                           
 24524                           ;mcc_generated_files/i2c1_master.c: 248:     return I2C1_MasterOperation(1);;	Return val
      +                          ue of _I2C1_MasterRead is never used
 24525     1ECF  3001               	movlw	1
 24526     1ED0  3193  23BF  319E   	fcall	_I2C1_MasterOperation
 24527     1ED3                     l1759:
 24528     1ED3  0008               	return
 24529     1ED4                     __end_of_I2C1_MasterRead:
 24530                           
 24531                           	psect	text105
 24532     1676                     __ptext105:	
 24533 ;; *************** function _BMA253_GetAccelDataZ *****************
 24534 ;; Defined at:
 24535 ;;		line 104 in file "mcc_generated_files/application/BMA253_accel.c"
 24536 ;; Parameters:    Size  Location     Type
 24537 ;;  zAccelData      1    wreg     PTR short 
 24538 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 24539 ;; Auto vars:     Size  Location     Type
 24540 ;;  zAccelData      1   13[BANK0 ] PTR short 
 24541 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 24542 ;;  msbData         1   15[BANK0 ] unsigned char 
 24543 ;;  lsbData         1   14[BANK0 ] unsigned char 
 24544 ;; Return value:  Size  Location     Type
 24545 ;;                  1    wreg      void 
 24546 ;; Registers used:
 24547 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24548 ;; Tracked objects:
 24549 ;;		On entry : 0/0
 24550 ;;		On exit  : 0/0
 24551 ;;		Unchanged: 0/0
 24552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24554 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24555 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24556 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24557 ;;Total ram usage:        6 bytes
 24558 ;; Hardware stack levels used: 1
 24559 ;; Hardware stack levels required when called: 14
 24560 ;; This function calls:
 24561 ;;		_BMA253_NewAccelDataRdyZ
 24562 ;;		_i2c_read1ByteRegister
 24563 ;; This function is called by:
 24564 ;;		_BMA253_GetAccelDataXYZ
 24565 ;; This function uses a non-reentrant model
 24566 ;;
 24567                           
 24568     1676                     _BMA253_GetAccelDataZ:	
 24569                           ;psect for function _BMA253_GetAccelDataZ
 24570                           
 24571                           
 24572                           ;incstack = 0
 24573 ;; hardware stack exceeded
 24574                           ; Regs used in _BMA253_GetAccelDataZ: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24575                           ;BMA253_GetAccelDataZ@zAccelData stored from wreg
 24576     1676  0140               	movlb	0	; select bank0
 24577     1677  00AD               	movwf	BMA253_GetAccelDataZ@zAccelData
 24578     1678                     l13442:
 24579     1678                     l13444:	
 24580                           ;mcc_generated_files/application/BMA253_accel.c: 104: void BMA253_GetAccelDataZ(int16_t 
      +                          *zAccelData);mcc_generated_files/application/BMA253_accel.c: 105: {;mcc_generated_files/
      +                          application/BMA253_accel.c: 106:     uint8_t lsbData;;mcc_generated_files/application/BM
      +                          A253_accel.c: 107:     uint8_t msbData;;mcc_generated_files/application/BMA253_accel.c: 
      +                          108:     while(!BMA253_NewAccelDataRdyZ())
 24581                           
 24582                           
 24583                           ;mcc_generated_files/application/BMA253_accel.c: 108:     while(!BMA253_NewAccelDataRdyZ
      +                          ())
 24584     1678  3191  213B  3196   	fcall	_BMA253_NewAccelDataRdyZ
 24585     167B  3A00               	xorlw	0
 24586     167C  1903               	skipnz
 24587     167D  2E7F               	goto	u10291
 24588     167E  2E80               	goto	u10290
 24589     167F                     u10291:
 24590     167F  2E78               	goto	l13444
 24591     1680                     u10290:
 24592     1680                     l13446:
 24593                           
 24594                           ;mcc_generated_files/application/BMA253_accel.c: 113:     lsbData = i2c_read1ByteRegiste
      +                          r((0x19), (0x06));
 24595     1680  3006               	movlw	6
 24596     1681  0140               	movlb	0	; select bank0
 24597     1682  00A4               	movwf	i2c_read1ByteRegister@reg
 24598     1683  3019               	movlw	25
 24599     1684  318B  2342  3196   	fcall	_i2c_read1ByteRegister
 24600     1687  0140               	movlb	0	; select bank0
 24601     1688  00AE               	movwf	BMA253_GetAccelDataZ@lsbData
 24602                           
 24603                           ;mcc_generated_files/application/BMA253_accel.c: 114:     msbData = i2c_read1ByteRegiste
      +                          r((0x19), (0x07));
 24604     1689  3007               	movlw	7
 24605     168A  00A4               	movwf	i2c_read1ByteRegister@reg
 24606     168B  3019               	movlw	25
 24607     168C  318B  2342  3196   	fcall	_i2c_read1ByteRegister
 24608     168F  0140               	movlb	0	; select bank0
 24609     1690  00AF               	movwf	BMA253_GetAccelDataZ@msbData
 24610     1691                     l13448:
 24611                           
 24612                           ;mcc_generated_files/application/BMA253_accel.c: 115:     *zAccelData = ( (((int16_t)msb
      +                          Data) << 8) | (lsbData) ) >> 4;
 24613     1691  082F               	movf	BMA253_GetAccelDataZ@msbData,w
 24614     1692  00AB               	movwf	??_BMA253_GetAccelDataZ+1
 24615     1693  082E               	movf	BMA253_GetAccelDataZ@lsbData,w
 24616     1694  00AA               	movwf	??_BMA253_GetAccelDataZ
 24617     1695  3004               	movlw	4
 24618     1696  00AC               	movwf	??_BMA253_GetAccelDataZ+2
 24619     1697                     u10305:
 24620     1697  0D2B               	rlf	??_BMA253_GetAccelDataZ+1,w
 24621     1698  0CAB               	rrf	??_BMA253_GetAccelDataZ+1,f
 24622     1699  0CAA               	rrf	??_BMA253_GetAccelDataZ,f
 24623     169A  0BAC               	decfsz	??_BMA253_GetAccelDataZ+2,f
 24624     169B  2E97               	goto	u10305
 24625     169C  082D               	movf	BMA253_GetAccelDataZ@zAccelData,w
 24626     169D  0086               	movwf	6
 24627     169E  0187               	clrf	7
 24628     169F  082A               	movf	??_BMA253_GetAccelDataZ,w
 24629     16A0  3FC0               	movwi [0]fsr1
 24630     16A1  082B               	movf	??_BMA253_GetAccelDataZ+1,w
 24631     16A2  3FC1               	movwi [1]fsr1
 24632     16A3                     l35:
 24633     16A3  0008               	return
 24634     16A4                     __end_of_BMA253_GetAccelDataZ:
 24635                           
 24636                           	psect	text106
 24637     113B                     __ptext106:	
 24638 ;; *************** function _BMA253_NewAccelDataRdyZ *****************
 24639 ;; Defined at:
 24640 ;;		line 172 in file "mcc_generated_files/application/BMA253_accel.c"
 24641 ;; Parameters:    Size  Location     Type
 24642 ;;		None
 24643 ;; Auto vars:     Size  Location     Type
 24644 ;;  zNewData        1   11[COMMON] _Bool 
 24645 ;; Return value:  Size  Location     Type
 24646 ;;                  1    wreg      _Bool 
 24647 ;; Registers used:
 24648 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24649 ;; Tracked objects:
 24650 ;;		On entry : 0/0
 24651 ;;		On exit  : 0/0
 24652 ;;		Unchanged: 0/0
 24653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24655 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24657 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24658 ;;Total ram usage:        1 bytes
 24659 ;; Hardware stack levels used: 1
 24660 ;; Hardware stack levels required when called: 13
 24661 ;; This function calls:
 24662 ;;		_i2c_read1ByteRegister
 24663 ;; This function is called by:
 24664 ;;		_BMA253_GetAccelDataZ
 24665 ;;		_BMA253_GetAccelDataXYZ
 24666 ;; This function uses a non-reentrant model
 24667 ;;
 24668                           
 24669     113B                     _BMA253_NewAccelDataRdyZ:	
 24670                           ;psect for function _BMA253_NewAccelDataRdyZ
 24671                           
 24672     113B                     l13348:	
 24673                           ;incstack = 0
 24674                           ; Regs used in _BMA253_NewAccelDataRdyZ: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24675                           
 24676                           
 24677                           ;mcc_generated_files/application/BMA253_accel.c: 174:     _Bool zNewData;;mcc_generated_
      +                          files/application/BMA253_accel.c: 176:     zNewData = (i2c_read1ByteRegister((0x19), (0x
      +                          06)) & (0x01));
 24678     113B  3006               	movlw	6
 24679     113C  0140               	movlb	0	; select bank0
 24680     113D  00A4               	movwf	i2c_read1ByteRegister@reg
 24681     113E  3019               	movlw	25
 24682     113F  318B  2342  3191   	fcall	_i2c_read1ByteRegister
 24683     1142  3901               	andlw	1
 24684     1143  1D03               	btfss	3,2
 24685     1144  2946               	goto	u10151
 24686     1145  2948               	goto	u10150
 24687     1146                     u10151:
 24688     1146  3001               	movlw	1
 24689     1147  2949               	goto	u10160
 24690     1148                     u10150:
 24691     1148  3000               	movlw	0
 24692     1149                     u10160:
 24693     1149  00FB               	movwf	BMA253_NewAccelDataRdyZ@zNewData
 24694     114A                     l13350:
 24695                           
 24696                           ;mcc_generated_files/application/BMA253_accel.c: 178:     return zNewData;
 24697     114A  087B               	movf	BMA253_NewAccelDataRdyZ@zNewData,w
 24698     114B                     l56:
 24699     114B  0008               	return
 24700     114C                     __end_of_BMA253_NewAccelDataRdyZ:
 24701                           
 24702                           	psect	text107
 24703     1648                     __ptext107:	
 24704 ;; *************** function _BMA253_GetAccelDataY *****************
 24705 ;; Defined at:
 24706 ;;		line 90 in file "mcc_generated_files/application/BMA253_accel.c"
 24707 ;; Parameters:    Size  Location     Type
 24708 ;;  yAccelData      1    wreg     PTR short 
 24709 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 24710 ;; Auto vars:     Size  Location     Type
 24711 ;;  yAccelData      1   13[BANK0 ] PTR short 
 24712 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 24713 ;;  msbData         1   15[BANK0 ] unsigned char 
 24714 ;;  lsbData         1   14[BANK0 ] unsigned char 
 24715 ;; Return value:  Size  Location     Type
 24716 ;;                  1    wreg      void 
 24717 ;; Registers used:
 24718 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24719 ;; Tracked objects:
 24720 ;;		On entry : 0/0
 24721 ;;		On exit  : 0/0
 24722 ;;		Unchanged: 0/0
 24723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24725 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24726 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24727 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24728 ;;Total ram usage:        6 bytes
 24729 ;; Hardware stack levels used: 1
 24730 ;; Hardware stack levels required when called: 14
 24731 ;; This function calls:
 24732 ;;		_BMA253_NewAccelDataRdyY
 24733 ;;		_i2c_read1ByteRegister
 24734 ;; This function is called by:
 24735 ;;		_BMA253_GetAccelDataXYZ
 24736 ;; This function uses a non-reentrant model
 24737 ;;
 24738                           
 24739     1648                     _BMA253_GetAccelDataY:	
 24740                           ;psect for function _BMA253_GetAccelDataY
 24741                           
 24742                           
 24743                           ;incstack = 0
 24744 ;; hardware stack exceeded
 24745                           ; Regs used in _BMA253_GetAccelDataY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24746                           ;BMA253_GetAccelDataY@yAccelData stored from wreg
 24747     1648  0140               	movlb	0	; select bank0
 24748     1649  00AD               	movwf	BMA253_GetAccelDataY@yAccelData
 24749     164A                     l13434:
 24750     164A                     l13436:	
 24751                           ;mcc_generated_files/application/BMA253_accel.c: 90: void BMA253_GetAccelDataY(int16_t *
      +                          yAccelData);mcc_generated_files/application/BMA253_accel.c: 91: {;mcc_generated_files/ap
      +                          plication/BMA253_accel.c: 92:     uint8_t lsbData;;mcc_generated_files/application/BMA25
      +                          3_accel.c: 93:     uint8_t msbData;;mcc_generated_files/application/BMA253_accel.c: 94: 
      +                              while(!BMA253_NewAccelDataRdyY())
 24752                           
 24753                           
 24754                           ;mcc_generated_files/application/BMA253_accel.c: 94:     while(!BMA253_NewAccelDataRdyY(
      +                          ))
 24755     164A  3191  212A  3196   	fcall	_BMA253_NewAccelDataRdyY
 24756     164D  3A00               	xorlw	0
 24757     164E  1903               	skipnz
 24758     164F  2E51               	goto	u10271
 24759     1650  2E52               	goto	u10270
 24760     1651                     u10271:
 24761     1651  2E4A               	goto	l13436
 24762     1652                     u10270:
 24763     1652                     l13438:
 24764                           
 24765                           ;mcc_generated_files/application/BMA253_accel.c: 99:     lsbData = i2c_read1ByteRegister
      +                          ((0x19), (0x04));
 24766     1652  3004               	movlw	4
 24767     1653  0140               	movlb	0	; select bank0
 24768     1654  00A4               	movwf	i2c_read1ByteRegister@reg
 24769     1655  3019               	movlw	25
 24770     1656  318B  2342  3196   	fcall	_i2c_read1ByteRegister
 24771     1659  0140               	movlb	0	; select bank0
 24772     165A  00AE               	movwf	BMA253_GetAccelDataY@lsbData
 24773                           
 24774                           ;mcc_generated_files/application/BMA253_accel.c: 100:     msbData = i2c_read1ByteRegiste
      +                          r((0x19), (0x05));
 24775     165B  3005               	movlw	5
 24776     165C  00A4               	movwf	i2c_read1ByteRegister@reg
 24777     165D  3019               	movlw	25
 24778     165E  318B  2342  3196   	fcall	_i2c_read1ByteRegister
 24779     1661  0140               	movlb	0	; select bank0
 24780     1662  00AF               	movwf	BMA253_GetAccelDataY@msbData
 24781     1663                     l13440:
 24782                           
 24783                           ;mcc_generated_files/application/BMA253_accel.c: 101:     *yAccelData = ( (((int16_t)msb
      +                          Data) << 8) | (lsbData) ) >> 4;
 24784     1663  082F               	movf	BMA253_GetAccelDataY@msbData,w
 24785     1664  00AB               	movwf	??_BMA253_GetAccelDataY+1
 24786     1665  082E               	movf	BMA253_GetAccelDataY@lsbData,w
 24787     1666  00AA               	movwf	??_BMA253_GetAccelDataY
 24788     1667  3004               	movlw	4
 24789     1668  00AC               	movwf	??_BMA253_GetAccelDataY+2
 24790     1669                     u10285:
 24791     1669  0D2B               	rlf	??_BMA253_GetAccelDataY+1,w
 24792     166A  0CAB               	rrf	??_BMA253_GetAccelDataY+1,f
 24793     166B  0CAA               	rrf	??_BMA253_GetAccelDataY,f
 24794     166C  0BAC               	decfsz	??_BMA253_GetAccelDataY+2,f
 24795     166D  2E69               	goto	u10285
 24796     166E  082D               	movf	BMA253_GetAccelDataY@yAccelData,w
 24797     166F  0086               	movwf	6
 24798     1670  0187               	clrf	7
 24799     1671  082A               	movf	??_BMA253_GetAccelDataY,w
 24800     1672  3FC0               	movwi [0]fsr1
 24801     1673  082B               	movf	??_BMA253_GetAccelDataY+1,w
 24802     1674  3FC1               	movwi [1]fsr1
 24803     1675                     l29:
 24804     1675  0008               	return
 24805     1676                     __end_of_BMA253_GetAccelDataY:
 24806                           
 24807                           	psect	text108
 24808     112A                     __ptext108:	
 24809 ;; *************** function _BMA253_NewAccelDataRdyY *****************
 24810 ;; Defined at:
 24811 ;;		line 163 in file "mcc_generated_files/application/BMA253_accel.c"
 24812 ;; Parameters:    Size  Location     Type
 24813 ;;		None
 24814 ;; Auto vars:     Size  Location     Type
 24815 ;;  yNewData        1   11[COMMON] _Bool 
 24816 ;; Return value:  Size  Location     Type
 24817 ;;                  1    wreg      _Bool 
 24818 ;; Registers used:
 24819 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24820 ;; Tracked objects:
 24821 ;;		On entry : 0/0
 24822 ;;		On exit  : 0/0
 24823 ;;		Unchanged: 0/0
 24824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24826 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24828 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24829 ;;Total ram usage:        1 bytes
 24830 ;; Hardware stack levels used: 1
 24831 ;; Hardware stack levels required when called: 13
 24832 ;; This function calls:
 24833 ;;		_i2c_read1ByteRegister
 24834 ;; This function is called by:
 24835 ;;		_BMA253_GetAccelDataY
 24836 ;;		_BMA253_GetAccelDataXYZ
 24837 ;; This function uses a non-reentrant model
 24838 ;;
 24839                           
 24840     112A                     _BMA253_NewAccelDataRdyY:	
 24841                           ;psect for function _BMA253_NewAccelDataRdyY
 24842                           
 24843     112A                     l13342:	
 24844                           ;incstack = 0
 24845                           ; Regs used in _BMA253_NewAccelDataRdyY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24846                           
 24847                           
 24848                           ;mcc_generated_files/application/BMA253_accel.c: 165:     _Bool yNewData;;mcc_generated_
      +                          files/application/BMA253_accel.c: 167:     yNewData = (i2c_read1ByteRegister((0x19), (0x
      +                          04)) & (0x01));
 24849     112A  3004               	movlw	4
 24850     112B  0140               	movlb	0	; select bank0
 24851     112C  00A4               	movwf	i2c_read1ByteRegister@reg
 24852     112D  3019               	movlw	25
 24853     112E  318B  2342  3191   	fcall	_i2c_read1ByteRegister
 24854     1131  3901               	andlw	1
 24855     1132  1D03               	btfss	3,2
 24856     1133  2935               	goto	u10131
 24857     1134  2937               	goto	u10130
 24858     1135                     u10131:
 24859     1135  3001               	movlw	1
 24860     1136  2938               	goto	u10140
 24861     1137                     u10130:
 24862     1137  3000               	movlw	0
 24863     1138                     u10140:
 24864     1138  00FB               	movwf	BMA253_NewAccelDataRdyY@yNewData
 24865     1139                     l13344:
 24866                           
 24867                           ;mcc_generated_files/application/BMA253_accel.c: 169:     return yNewData;
 24868     1139  087B               	movf	BMA253_NewAccelDataRdyY@yNewData,w
 24869     113A                     l53:
 24870     113A  0008               	return
 24871     113B                     __end_of_BMA253_NewAccelDataRdyY:
 24872                           
 24873                           	psect	text109
 24874     0B42                     __ptext109:	
 24875 ;; *************** function _i2c_read1ByteRegister *****************
 24876 ;; Defined at:
 24877 ;;		line 97 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 24878 ;; Parameters:    Size  Location     Type
 24879 ;;  address         1    wreg     unsigned char 
 24880 ;;  reg             1    4[BANK0 ] unsigned char 
 24881 ;; Auto vars:     Size  Location     Type
 24882 ;;  address         1    5[BANK0 ] unsigned char 
 24883 ;;  x               2    7[BANK0 ] int 
 24884 ;;  d2              1    9[BANK0 ] unsigned char 
 24885 ;;  e               1    6[BANK0 ] enum E358
 24886 ;; Return value:  Size  Location     Type
 24887 ;;                  1    wreg      unsigned char 
 24888 ;; Registers used:
 24889 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24890 ;; Tracked objects:
 24891 ;;		On entry : 0/0
 24892 ;;		On exit  : 0/0
 24893 ;;		Unchanged: 0/0
 24894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24895 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24896 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24898 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24899 ;;Total ram usage:        6 bytes
 24900 ;; Hardware stack levels used: 1
 24901 ;; Hardware stack levels required when called: 12
 24902 ;; This function calls:
 24903 ;;		_I2C1_Close
 24904 ;;		_I2C1_MasterWrite
 24905 ;;		_I2C1_Open
 24906 ;;		_I2C1_SetAddressNackCallback
 24907 ;;		_I2C1_SetBuffer
 24908 ;;		_I2C1_SetDataCompleteCallback
 24909 ;; This function is called by:
 24910 ;;		_BMA253_GetAccelDataY
 24911 ;;		_BMA253_GetAccelDataZ
 24912 ;;		_BMA253_NewAccelDataRdyY
 24913 ;;		_BMA253_NewAccelDataRdyZ
 24914 ;;		_BMA253_GetAccelDataX
 24915 ;;		_BMA253_GetAccelChipId
 24916 ;;		_BMA253_NewAccelDataRdyX
 24917 ;; This function uses a non-reentrant model
 24918 ;;
 24919                           
 24920     0B42                     _i2c_read1ByteRegister:	
 24921                           ;psect for function _i2c_read1ByteRegister
 24922                           
 24923                           
 24924                           ;incstack = 0
 24925                           ; Regs used in _i2c_read1ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24926                           ;i2c_read1ByteRegister@address stored from wreg
 24927     0B42  0140               	movlb	0	; select bank0
 24928     0B43  00A5               	movwf	i2c_read1ByteRegister@address
 24929     0B44                     l13186:
 24930                           
 24931                           ;mcc_generated_files/drivers/i2c_simple_master.c: 97: uint8_t i2c_read1ByteRegister(i2c1
      +                          _address_t address, uint8_t reg);mcc_generated_files/drivers/i2c_simple_master.c: 98: {;
      +                          mcc_generated_files/drivers/i2c_simple_master.c: 99:     uint8_t d2=42;
 24932     0B44  302A               	movlw	42
 24933     0B45  00A9               	movwf	i2c_read1ByteRegister@d2
 24934                           
 24935                           ;mcc_generated_files/drivers/i2c_simple_master.c: 100:     i2c1_error_t e;;mcc_generated
      +                          _files/drivers/i2c_simple_master.c: 101:     int x;;mcc_generated_files/drivers/i2c_simp
      +                          le_master.c: 103:     for(x = 2; x != 0; x--)
 24936     0B46  3002               	movlw	2
 24937     0B47  00A7               	movwf	i2c_read1ByteRegister@x
 24938     0B48  3000               	movlw	0
 24939     0B49  00A8               	movwf	i2c_read1ByteRegister@x+1
 24940     0B4A                     l13192:
 24941     0B4A  0140               	movlb	0	; select bank0
 24942     0B4B  0825               	movf	i2c_read1ByteRegister@address,w
 24943     0B4C  3197  27CA  318B   	fcall	_I2C1_Open
 24944     0B4F  3A00               	xorlw	0
 24945     0B50  1903               	skipnz
 24946     0B51  2B53               	goto	u9981
 24947     0B52  2B54               	goto	u9980
 24948     0B53                     u9981:
 24949     0B53  2B4A               	goto	l13192
 24950     0B54                     u9980:
 24951     0B54                     l13194:
 24952                           
 24953                           ;mcc_generated_files/drivers/i2c_simple_master.c: 106:         I2C1_SetDataCompleteCallb
      +                          ack(rd1RegCompleteHandler,&d2);
 24954     0B54  30C4               	movlw	low _rd1RegCompleteHandler
 24955     0B55  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 24956     0B56  3010               	movlw	high _rd1RegCompleteHandler
 24957     0B57  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 24958     0B58  3029               	movlw	(low (i2c_read1ByteRegister@d2| 0))& (0+255)
 24959     0B59  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 24960     0B5A  319F  27C8  318B   	fcall	_I2C1_SetDataCompleteCallback
 24961     0B5D                     l13196:
 24962                           
 24963                           ;mcc_generated_files/drivers/i2c_simple_master.c: 107:         I2C1_SetBuffer(&reg,1);
 24964     0B5D  3001               	movlw	1
 24965     0B5E  00F1               	movwf	I2C1_SetBuffer@bufferSize
 24966     0B5F  3000               	movlw	0
 24967     0B60  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 24968     0B61  3024               	movlw	(low (i2c_read1ByteRegister@reg| 0))& (0+255)
 24969     0B62  3190  204A  318B   	fcall	_I2C1_SetBuffer
 24970     0B65                     l13198:
 24971                           
 24972                           ;mcc_generated_files/drivers/i2c_simple_master.c: 108:         I2C1_SetAddressNackCallba
      +                          ck(((void*)0),((void*)0));
 24973     0B65  3000               	movlw	0
 24974     0B66  00F5               	movwf	I2C1_SetAddressNackCallback@cb
 24975     0B67  00F6               	movwf	I2C1_SetAddressNackCallback@cb+1
 24976     0B68  3000               	movlw	0
 24977     0B69  00F7               	movwf	I2C1_SetAddressNackCallback@ptr
 24978     0B6A  00F8               	movwf	I2C1_SetAddressNackCallback@ptr+1
 24979     0B6B  319F  27D3  318B   	fcall	_I2C1_SetAddressNackCallback
 24980     0B6E                     l13200:
 24981                           
 24982                           ;mcc_generated_files/drivers/i2c_simple_master.c: 109:         I2C1_MasterWrite();
 24983     0B6E  319E  26CA  318B   	fcall	_I2C1_MasterWrite
 24984     0B71                     l13202:	
 24985                           ;mcc_generated_files/drivers/i2c_simple_master.c: 110:         while(I2C1_BUSY == (e = I
      +                          2C1_Close()));
 24986                           
 24987     0B71  3192  2233  318B   	fcall	_I2C1_Close
 24988     0B74  0140               	movlb	0	; select bank0
 24989     0B75  00A6               	movwf	i2c_read1ByteRegister@e
 24990     0B76  0326               	decf	i2c_read1ByteRegister@e,w
 24991     0B77  1903               	btfsc	3,2
 24992     0B78  2B7A               	goto	u9991
 24993     0B79  2B7B               	goto	u9990
 24994     0B7A                     u9991:
 24995     0B7A  2B71               	goto	l13202
 24996     0B7B                     u9990:
 24997     0B7B                     l13204:
 24998                           
 24999                           ;mcc_generated_files/drivers/i2c_simple_master.c: 111:         if(e==I2C1_NOERR) break;
 25000     0B7B  0826               	movf	i2c_read1ByteRegister@e,w
 25001     0B7C  1D03               	btfss	3,2
 25002     0B7D  2B7F               	goto	u10001
 25003     0B7E  2B80               	goto	u10000
 25004     0B7F                     u10001:
 25005     0B7F  2B81               	goto	l13208
 25006     0B80                     u10000:
 25007     0B80  2B8B               	goto	l13212
 25008     0B81                     l13208:
 25009                           
 25010                           ;mcc_generated_files/drivers/i2c_simple_master.c: 112:     }
 25011     0B81  30FF               	movlw	255
 25012     0B82  07A7               	addwf	i2c_read1ByteRegister@x,f
 25013     0B83  30FF               	movlw	255
 25014     0B84  3DA8               	addwfc	i2c_read1ByteRegister@x+1,f
 25015     0B85                     l13210:
 25016     0B85  0827               	movf	i2c_read1ByteRegister@x,w
 25017     0B86  0428               	iorwf	i2c_read1ByteRegister@x+1,w
 25018     0B87  1D03               	btfss	3,2
 25019     0B88  2B8A               	goto	u10011
 25020     0B89  2B8B               	goto	u10010
 25021     0B8A                     u10011:
 25022     0B8A  2B4A               	goto	l13192
 25023     0B8B                     u10010:
 25024     0B8B                     l13212:
 25025                           
 25026                           ;mcc_generated_files/drivers/i2c_simple_master.c: 115:     return d2;
 25027     0B8B  0829               	movf	i2c_read1ByteRegister@d2,w
 25028     0B8C                     l534:
 25029     0B8C  0008               	return
 25030     0B8D                     __end_of_i2c_read1ByteRegister:
 25031                           
 25032                           	psect	text110
 25033     1FD3                     __ptext110:	
 25034 ;; *************** function _I2C1_SetAddressNackCallback *****************
 25035 ;; Defined at:
 25036 ;;		line 283 in file "mcc_generated_files/i2c1_master.c"
 25037 ;; Parameters:    Size  Location     Type
 25038 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 25039 ;;		 -> NULL(1), 
 25040 ;;  ptr             2    7[COMMON] PTR void 
 25041 ;;		 -> NULL(0), 
 25042 ;; Auto vars:     Size  Location     Type
 25043 ;;		None
 25044 ;; Return value:  Size  Location     Type
 25045 ;;                  1    wreg      void 
 25046 ;; Registers used:
 25047 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25048 ;; Tracked objects:
 25049 ;;		On entry : 0/0
 25050 ;;		On exit  : 0/0
 25051 ;;		Unchanged: 0/0
 25052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25053 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25056 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25057 ;;Total ram usage:        4 bytes
 25058 ;; Hardware stack levels used: 1
 25059 ;; Hardware stack levels required when called: 5
 25060 ;; This function calls:
 25061 ;;		_I2C1_SetCallback
 25062 ;; This function is called by:
 25063 ;;		_i2c_write1ByteRegister
 25064 ;;		_i2c_read1ByteRegister
 25065 ;;		_i2c_read2ByteRegister
 25066 ;;		_i2c_writeNBytes
 25067 ;;		_i2c_write2ByteRegister
 25068 ;;		_i2c_readDataBlock
 25069 ;;		_I2C1_Read1ByteRegister
 25070 ;;		_I2C1_Read2ByteRegister
 25071 ;;		_I2C1_Write1ByteRegister
 25072 ;;		_I2C1_Write2ByteRegister
 25073 ;;		_I2C1_WriteNBytes
 25074 ;;		_I2C1_ReadDataBlock
 25075 ;; This function uses a non-reentrant model
 25076 ;;
 25077                           
 25078     1FD3                     _I2C1_SetAddressNackCallback:	
 25079                           ;psect for function _I2C1_SetAddressNackCallback
 25080                           
 25081     1FD3                     l13074:	
 25082                           ;incstack = 0
 25083                           ; Regs used in _I2C1_SetAddressNackCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 25084                           
 25085                           
 25086                           ;mcc_generated_files/i2c1_master.c: 283: void I2C1_SetAddressNackCallback(i2c1_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c1_master.c: 284: {;mcc_generated_files/i2c1_mast
      +                          er.c: 285:     I2C1_SetCallback(I2C1_ADDR_NACK, cb, ptr);
 25087     1FD3  0876               	movf	I2C1_SetAddressNackCallback@cb+1,w
 25088     1FD4  00F2               	movwf	I2C1_SetCallback@cb+1
 25089     1FD5  0875               	movf	I2C1_SetAddressNackCallback@cb,w
 25090     1FD6  00F1               	movwf	I2C1_SetCallback@cb
 25091     1FD7  0877               	movf	I2C1_SetAddressNackCallback@ptr,w
 25092     1FD8  00F3               	movwf	I2C1_SetCallback@ptr
 25093     1FD9  3002               	movlw	2
 25094     1FDA  3194  2469  319F   	fcall	_I2C1_SetCallback
 25095     1FDD                     l1778:
 25096     1FDD  0008               	return
 25097     1FDE                     __end_of_I2C1_SetAddressNackCallback:
 25098                           
 25099                           	psect	text111
 25100     17CA                     __ptext111:	
 25101 ;; *************** function _I2C1_Open *****************
 25102 ;; Defined at:
 25103 ;;		line 176 in file "mcc_generated_files/i2c1_master.c"
 25104 ;; Parameters:    Size  Location     Type
 25105 ;;  address         1    wreg     unsigned char 
 25106 ;; Auto vars:     Size  Location     Type
 25107 ;;  address         1    1[COMMON] unsigned char 
 25108 ;;  returnValue     1    2[COMMON] enum E358
 25109 ;; Return value:  Size  Location     Type
 25110 ;;                  1    wreg      enum E358
 25111 ;; Registers used:
 25112 ;;		wreg, status,2, status,0, pclath, cstack
 25113 ;; Tracked objects:
 25114 ;;		On entry : 0/0
 25115 ;;		On exit  : 0/0
 25116 ;;		Unchanged: 0/0
 25117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25119 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25121 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25122 ;;Total ram usage:        2 bytes
 25123 ;; Hardware stack levels used: 1
 25124 ;; Hardware stack levels required when called: 5
 25125 ;; This function calls:
 25126 ;;		_I2C1_MasterClearIrq
 25127 ;;		_I2C1_MasterOpen
 25128 ;; This function is called by:
 25129 ;;		_i2c_write1ByteRegister
 25130 ;;		_i2c_read1ByteRegister
 25131 ;;		_i2c_read2ByteRegister
 25132 ;;		_i2c_readNBytes
 25133 ;;		_i2c_writeNBytes
 25134 ;;		_i2c_write2ByteRegister
 25135 ;;		_i2c_readDataBlock
 25136 ;;		_I2C1_Read1ByteRegister
 25137 ;;		_I2C1_Read2ByteRegister
 25138 ;;		_I2C1_Write1ByteRegister
 25139 ;;		_I2C1_Write2ByteRegister
 25140 ;;		_I2C1_WriteNBytes
 25141 ;;		_I2C1_ReadNBytes
 25142 ;;		_I2C1_ReadDataBlock
 25143 ;; This function uses a non-reentrant model
 25144 ;;
 25145                           
 25146     17CA                     _I2C1_Open:	
 25147                           ;psect for function _I2C1_Open
 25148                           
 25149                           
 25150                           ;incstack = 0
 25151                           ; Regs used in _I2C1_Open: [wreg+status,2+status,0+pclath+cstack]
 25152                           ;I2C1_Open@address stored from wreg
 25153     17CA  00F1               	movwf	I2C1_Open@address
 25154     17CB                     l12902:
 25155                           
 25156                           ;mcc_generated_files/i2c1_master.c: 176: i2c1_error_t I2C1_Open(i2c1_address_t address);
      +                          mcc_generated_files/i2c1_master.c: 177: {;mcc_generated_files/i2c1_master.c: 178:     i2
      +                          c1_error_t returnValue = I2C1_BUSY;
 25157     17CB  01F2               	clrf	I2C1_Open@returnValue
 25158     17CC  0AF2               	incf	I2C1_Open@returnValue,f
 25159                           
 25160                           ;mcc_generated_files/i2c1_master.c: 180:     if(!I2C1_Status.inUse)
 25161     17CD  0141               	movlb	1	; select bank1
 25162     17CE  193C               	btfsc	(_I2C1_Status^(0+128)+28),2
 25163     17CF  2FD1               	goto	u9661
 25164     17D0  2FD2               	goto	u9660
 25165     17D1                     u9661:
 25166     17D1  2FFE               	goto	l1745
 25167     17D2                     u9660:
 25168     17D2                     l12904:
 25169                           
 25170                           ;mcc_generated_files/i2c1_master.c: 181:     {;mcc_generated_files/i2c1_master.c: 182:  
      +                                 I2C1_Status.address = address;
 25171     17D2  0871               	movf	I2C1_Open@address,w
 25172     17D3  00B6               	movwf	(_I2C1_Status^(0+128)+22)
 25173     17D4                     l12906:
 25174                           
 25175                           ;mcc_generated_files/i2c1_master.c: 183:         I2C1_Status.busy = 0;
 25176     17D4  10BC               	bcf	(_I2C1_Status^(0+128)+28),1
 25177     17D5                     l12908:
 25178                           
 25179                           ;mcc_generated_files/i2c1_master.c: 184:         I2C1_Status.inUse = 1;
 25180     17D5  153C               	bsf	(_I2C1_Status^(0+128)+28),2
 25181     17D6                     l12910:
 25182                           
 25183                           ;mcc_generated_files/i2c1_master.c: 185:         I2C1_Status.addressNackCheck = 0;
 25184     17D6  103C               	bcf	(_I2C1_Status^(0+128)+28),0
 25185                           
 25186                           ;mcc_generated_files/i2c1_master.c: 186:         I2C1_Status.state = I2C1_RESET;
 25187     17D7  300E               	movlw	14
 25188     17D8  00BA               	movwf	(_I2C1_Status^(0+128)+26)
 25189                           
 25190                           ;mcc_generated_files/i2c1_master.c: 187:         I2C1_Status.time_out_value = 500;
 25191     17D9  30F4               	movlw	244
 25192     17DA  00B4               	movwf	(_I2C1_Status^(0+128)+20)
 25193     17DB  3001               	movlw	1
 25194     17DC  00B5               	movwf	(_I2C1_Status^(0+128)+21)
 25195     17DD                     l12912:
 25196                           
 25197                           ;mcc_generated_files/i2c1_master.c: 188:         I2C1_Status.bufferFree = 1;
 25198     17DD  15BC               	bsf	(_I2C1_Status^(0+128)+28),3
 25199                           
 25200                           ;mcc_generated_files/i2c1_master.c: 191:         I2C1_Status.callbackTable[I2C1_DATA_COM
      +                          PLETE]=I2C1_CallbackReturnStop;
 25201     17DE  305A               	movlw	low _I2C1_CallbackReturnStop
 25202     17DF  00A0               	movwf	_I2C1_Status^(0+128)
 25203     17E0  301E               	movlw	high _I2C1_CallbackReturnStop
 25204     17E1  00A1               	movwf	(_I2C1_Status^(0+128)+1)
 25205     17E2                     l12914:
 25206                           
 25207                           ;mcc_generated_files/i2c1_master.c: 192:         I2C1_Status.callbackPayload[I2C1_DATA_C
      +                          OMPLETE] = ((void*)0);
 25208     17E2  01AC               	clrf	(low ((_I2C1_Status| 0+12)))^(0+128)
 25209     17E3                     l12916:
 25210                           
 25211                           ;mcc_generated_files/i2c1_master.c: 193:         I2C1_Status.callbackTable[I2C1_WRITE_CO
      +                          LLISION]=I2C1_CallbackReturnStop;
 25212     17E3  305A               	movlw	low _I2C1_CallbackReturnStop
 25213     17E4  00A2               	movwf	(low ((_I2C1_Status| 0+2)))^(0+128)
 25214     17E5  301E               	movlw	high _I2C1_CallbackReturnStop
 25215     17E6  00A3               	movwf	((low ((_I2C1_Status| 0+2)))^(0+128)+1)
 25216                           
 25217                           ;mcc_generated_files/i2c1_master.c: 194:         I2C1_Status.callbackPayload[I2C1_WRITE_
      +                          COLLISION] = ((void*)0);
 25218     17E7  01AD               	clrf	(low ((_I2C1_Status| 0+13)))^(0+128)
 25219     17E8                     l12918:
 25220                           
 25221                           ;mcc_generated_files/i2c1_master.c: 195:         I2C1_Status.callbackTable[I2C1_ADDR_NAC
      +                          K]=I2C1_CallbackReturnStop;
 25222     17E8  305A               	movlw	low _I2C1_CallbackReturnStop
 25223     17E9  00A4               	movwf	(low ((_I2C1_Status| 0+4)))^(0+128)
 25224     17EA  301E               	movlw	high _I2C1_CallbackReturnStop
 25225     17EB  00A5               	movwf	((low ((_I2C1_Status| 0+4)))^(0+128)+1)
 25226     17EC                     l12920:
 25227                           
 25228                           ;mcc_generated_files/i2c1_master.c: 196:         I2C1_Status.callbackPayload[I2C1_ADDR_N
      +                          ACK] = ((void*)0);
 25229     17EC  01AE               	clrf	(low ((_I2C1_Status| 0+14)))^(0+128)
 25230                           
 25231                           ;mcc_generated_files/i2c1_master.c: 197:         I2C1_Status.callbackTable[I2C1_DATA_NAC
      +                          K]=I2C1_CallbackReturnStop;
 25232     17ED  305A               	movlw	low _I2C1_CallbackReturnStop
 25233     17EE  00A6               	movwf	(low ((_I2C1_Status| 0+6)))^(0+128)
 25234     17EF  301E               	movlw	high _I2C1_CallbackReturnStop
 25235     17F0  00A7               	movwf	((low ((_I2C1_Status| 0+6)))^(0+128)+1)
 25236     17F1                     l12922:
 25237                           
 25238                           ;mcc_generated_files/i2c1_master.c: 198:         I2C1_Status.callbackPayload[I2C1_DATA_N
      +                          ACK] = ((void*)0);
 25239     17F1  01AF               	clrf	(low ((_I2C1_Status| 0+15)))^(0+128)
 25240     17F2                     l12924:
 25241                           
 25242                           ;mcc_generated_files/i2c1_master.c: 199:         I2C1_Status.callbackTable[I2C1_TIMEOUT]
      +                          =I2C1_CallbackReturnReset;
 25243     17F2  305C               	movlw	low _I2C1_CallbackReturnReset
 25244     17F3  00A8               	movwf	(low ((_I2C1_Status| 0+8)))^(0+128)
 25245     17F4  301E               	movlw	high _I2C1_CallbackReturnReset
 25246     17F5  00A9               	movwf	((low ((_I2C1_Status| 0+8)))^(0+128)+1)
 25247                           
 25248                           ;mcc_generated_files/i2c1_master.c: 200:         I2C1_Status.callbackPayload[I2C1_TIMEOU
      +                          T] = ((void*)0);
 25249     17F6  01B0               	clrf	(low ((_I2C1_Status| 0+16)))^(0+128)
 25250     17F7                     l12926:
 25251                           
 25252                           ;mcc_generated_files/i2c1_master.c: 202:         I2C1_MasterClearIrq();
 25253     17F7  319E  265E  3197   	fcall	_I2C1_MasterClearIrq
 25254     17FA                     l12928:
 25255                           
 25256                           ;mcc_generated_files/i2c1_master.c: 203:         I2C1_MasterOpen();
 25257     17FA  3190  2030  3197   	fcall	_I2C1_MasterOpen
 25258     17FD                     l12930:
 25259                           
 25260                           ;mcc_generated_files/i2c1_master.c: 204:         returnValue = I2C1_NOERR;
 25261     17FD  01F2               	clrf	I2C1_Open@returnValue
 25262     17FE                     l1745:	
 25263                           ;mcc_generated_files/i2c1_master.c: 205:     }
 25264                           
 25265                           
 25266                           ;mcc_generated_files/i2c1_master.c: 206:     return returnValue;
 25267     17FE  0872               	movf	I2C1_Open@returnValue,w
 25268     17FF                     l1746:
 25269     17FF  0008               	return
 25270     1800                     __end_of_I2C1_Open:
 25271                           
 25272                           	psect	text112
 25273     1030                     __ptext112:	
 25274 ;; *************** function _I2C1_MasterOpen *****************
 25275 ;; Defined at:
 25276 ;;		line 543 in file "mcc_generated_files/i2c1_master.c"
 25277 ;; Parameters:    Size  Location     Type
 25278 ;;		None
 25279 ;; Auto vars:     Size  Location     Type
 25280 ;;		None
 25281 ;; Return value:  Size  Location     Type
 25282 ;;                  1    wreg      _Bool 
 25283 ;; Registers used:
 25284 ;;		wreg, status,2
 25285 ;; Tracked objects:
 25286 ;;		On entry : 0/0
 25287 ;;		On exit  : 0/0
 25288 ;;		Unchanged: 0/0
 25289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25294 ;;Total ram usage:        0 bytes
 25295 ;; Hardware stack levels used: 1
 25296 ;; Hardware stack levels required when called: 4
 25297 ;; This function calls:
 25298 ;;		Nothing
 25299 ;; This function is called by:
 25300 ;;		_I2C1_Open
 25301 ;; This function uses a non-reentrant model
 25302 ;;
 25303                           
 25304     1030                     _I2C1_MasterOpen:	
 25305                           ;psect for function _I2C1_MasterOpen
 25306                           
 25307     1030                     l12866:	
 25308                           ;incstack = 0
 25309                           ; Regs used in _I2C1_MasterOpen: [wreg+status,2]
 25310                           
 25311                           
 25312                           ;mcc_generated_files/i2c1_master.c: 545:     if(!SSP1CON1bits.SSPEN)
 25313     1030  0143               	movlb	3	; select bank3
 25314     1031  1A90               	btfsc	16,5	;volatile
 25315     1032  2834               	goto	u9631
 25316     1033  2835               	goto	u9630
 25317     1034                     u9631:
 25318     1034  283C               	goto	l1911
 25319     1035                     u9630:
 25320     1035                     l12868:
 25321                           
 25322                           ;mcc_generated_files/i2c1_master.c: 546:     {;mcc_generated_files/i2c1_master.c: 547:  
      +                                 SSP1STAT = 0x00;
 25323     1035  018F               	clrf	15	;volatile
 25324     1036                     l12870:
 25325                           
 25326                           ;mcc_generated_files/i2c1_master.c: 548:         SSP1CON1 = 0x08;
 25327     1036  3008               	movlw	8
 25328     1037  0090               	movwf	16	;volatile
 25329     1038                     l12872:
 25330                           
 25331                           ;mcc_generated_files/i2c1_master.c: 549:         SSP1CON2 = 0x00;
 25332     1038  0191               	clrf	17	;volatile
 25333                           
 25334                           ;mcc_generated_files/i2c1_master.c: 550:         SSP1ADD = 0x4F;
 25335     1039  304F               	movlw	79
 25336     103A  008D               	movwf	13	;volatile
 25337     103B                     l12874:
 25338                           
 25339                           ;mcc_generated_files/i2c1_master.c: 551:         SSP1CON1bits.SSPEN = 1;
 25340     103B  1690               	bsf	16,5	;volatile
 25341     103C                     l1911:
 25342     103C  0008               	return
 25343     103D                     __end_of_I2C1_MasterOpen:
 25344                           
 25345                           	psect	text113
 25346     1ECA                     __ptext113:	
 25347 ;; *************** function _I2C1_MasterWrite *****************
 25348 ;; Defined at:
 25349 ;;		line 251 in file "mcc_generated_files/i2c1_master.c"
 25350 ;; Parameters:    Size  Location     Type
 25351 ;;		None
 25352 ;; Auto vars:     Size  Location     Type
 25353 ;;		None
 25354 ;; Return value:  Size  Location     Type
 25355 ;;                  1    wreg      enum E358
 25356 ;; Registers used:
 25357 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25358 ;; Tracked objects:
 25359 ;;		On entry : 0/0
 25360 ;;		On exit  : 0/0
 25361 ;;		Unchanged: 0/0
 25362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25367 ;;Total ram usage:        0 bytes
 25368 ;; Hardware stack levels used: 1
 25369 ;; Hardware stack levels required when called: 11
 25370 ;; This function calls:
 25371 ;;		_I2C1_MasterOperation
 25372 ;; This function is called by:
 25373 ;;		_i2c_write1ByteRegister
 25374 ;;		_i2c_read1ByteRegister
 25375 ;;		_i2c_read2ByteRegister
 25376 ;;		_i2c_writeNBytes
 25377 ;;		_i2c_write2ByteRegister
 25378 ;;		_i2c_readDataBlock
 25379 ;;		_I2C1_Read1ByteRegister
 25380 ;;		_I2C1_Read2ByteRegister
 25381 ;;		_I2C1_Write1ByteRegister
 25382 ;;		_I2C1_Write2ByteRegister
 25383 ;;		_I2C1_WriteNBytes
 25384 ;;		_I2C1_ReadDataBlock
 25385 ;; This function uses a non-reentrant model
 25386 ;;
 25387                           
 25388     1ECA                     _I2C1_MasterWrite:	
 25389                           ;psect for function _I2C1_MasterWrite
 25390                           
 25391     1ECA                     l13076:	
 25392                           ;incstack = 0
 25393                           ; Regs used in _I2C1_MasterWrite: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25394                           
 25395                           
 25396                           ;mcc_generated_files/i2c1_master.c: 253:     return I2C1_MasterOperation(0);;	Return val
      +                          ue of _I2C1_MasterWrite is never used
 25397     1ECA  3000               	movlw	0
 25398     1ECB  3193  23BF  319E   	fcall	_I2C1_MasterOperation
 25399     1ECE                     l1762:
 25400     1ECE  0008               	return
 25401     1ECF                     __end_of_I2C1_MasterWrite:
 25402                           
 25403                           	psect	text114
 25404     13BF                     __ptext114:	
 25405 ;; *************** function _I2C1_MasterOperation *****************
 25406 ;; Defined at:
 25407 ;;		line 224 in file "mcc_generated_files/i2c1_master.c"
 25408 ;; Parameters:    Size  Location     Type
 25409 ;;  read            1    wreg     _Bool 
 25410 ;; Auto vars:     Size  Location     Type
 25411 ;;  read            1    2[BANK0 ] _Bool 
 25412 ;;  returnValue     1    3[BANK0 ] enum E358
 25413 ;; Return value:  Size  Location     Type
 25414 ;;                  1    wreg      enum E358
 25415 ;; Registers used:
 25416 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25417 ;; Tracked objects:
 25418 ;;		On entry : 0/0
 25419 ;;		On exit  : 0/0
 25420 ;;		Unchanged: 0/0
 25421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25423 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25425 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25426 ;;Total ram usage:        2 bytes
 25427 ;; Hardware stack levels used: 1
 25428 ;; Hardware stack levels required when called: 10
 25429 ;; This function calls:
 25430 ;;		_I2C1_MasterStart
 25431 ;;		_I2C1_Poller
 25432 ;; This function is called by:
 25433 ;;		_I2C1_MasterRead
 25434 ;;		_I2C1_MasterWrite
 25435 ;; This function uses a non-reentrant model
 25436 ;;
 25437                           
 25438     13BF                     _I2C1_MasterOperation:	
 25439                           ;psect for function _I2C1_MasterOperation
 25440                           
 25441                           
 25442                           ;incstack = 0
 25443                           ; Regs used in _I2C1_MasterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25444                           ;I2C1_MasterOperation@read stored from wreg
 25445     13BF  0140               	movlb	0	; select bank0
 25446     13C0  00A2               	movwf	I2C1_MasterOperation@read
 25447     13C1                     l12882:
 25448                           
 25449                           ;mcc_generated_files/i2c1_master.c: 224: i2c1_error_t I2C1_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c1_master.c: 225: {;mcc_generated_files/i2c1_master.c: 226:     i2c
      +                          1_error_t returnValue = I2C1_BUSY;
 25450     13C1  01A3               	clrf	I2C1_MasterOperation@returnValue
 25451     13C2  0AA3               	incf	I2C1_MasterOperation@returnValue,f
 25452                           
 25453                           ;mcc_generated_files/i2c1_master.c: 227:     if(!I2C1_Status.busy)
 25454     13C3  0141               	movlb	1	; select bank1
 25455     13C4  18BC               	btfsc	(_I2C1_Status^(0+128)+28),1
 25456     13C5  2BC7               	goto	u9641
 25457     13C6  2BC8               	goto	u9640
 25458     13C7                     u9641:
 25459     13C7  2BDD               	goto	l12898
 25460     13C8                     u9640:
 25461     13C8                     l12884:
 25462                           
 25463                           ;mcc_generated_files/i2c1_master.c: 228:     {;mcc_generated_files/i2c1_master.c: 229:  
      +                                 I2C1_Status.busy = 1;
 25464     13C8  14BC               	bsf	(_I2C1_Status^(0+128)+28),1
 25465     13C9                     l12886:
 25466                           
 25467                           ;mcc_generated_files/i2c1_master.c: 230:         returnValue = I2C1_NOERR;
 25468     13C9  0140               	movlb	0	; select bank0
 25469     13CA  01A3               	clrf	I2C1_MasterOperation@returnValue
 25470     13CB                     l12888:
 25471                           
 25472                           ;mcc_generated_files/i2c1_master.c: 232:         if(read)
 25473     13CB  0822               	movf	I2C1_MasterOperation@read,w
 25474     13CC  1903               	btfsc	3,2
 25475     13CD  2BCF               	goto	u9651
 25476     13CE  2BD0               	goto	u9650
 25477     13CF                     u9651:
 25478     13CF  2BD4               	goto	l12892
 25479     13D0                     u9650:
 25480     13D0                     l12890:
 25481                           
 25482                           ;mcc_generated_files/i2c1_master.c: 233:         {;mcc_generated_files/i2c1_master.c: 23
      +                          4:             I2C1_Status.state = I2C1_SEND_ADR_READ;
 25483     13D0  0141               	movlb	1	; select bank1
 25484     13D1  01BA               	clrf	(_I2C1_Status^(0+128)+26)
 25485     13D2  0ABA               	incf	(_I2C1_Status^(0+128)+26),f
 25486                           
 25487                           ;mcc_generated_files/i2c1_master.c: 235:         }
 25488     13D3  2BD7               	goto	l12894
 25489     13D4                     l12892:
 25490                           
 25491                           ;mcc_generated_files/i2c1_master.c: 237:         {;mcc_generated_files/i2c1_master.c: 23
      +                          8:             I2C1_Status.state = I2C1_SEND_ADR_WRITE;
 25492     13D4  3002               	movlw	2
 25493     13D5  0141               	movlb	1	; select bank1
 25494     13D6  00BA               	movwf	(_I2C1_Status^(0+128)+26)
 25495     13D7                     l12894:
 25496                           
 25497                           ;mcc_generated_files/i2c1_master.c: 240:         I2C1_MasterStart();
 25498     13D7  319E  2667  3193   	fcall	_I2C1_MasterStart
 25499     13DA                     l12896:
 25500                           
 25501                           ;mcc_generated_files/i2c1_master.c: 241:         I2C1_Poller();
 25502     13DA  3190  2023  3193   	fcall	_I2C1_Poller
 25503     13DD                     l12898:
 25504                           
 25505                           ;mcc_generated_files/i2c1_master.c: 243:     return returnValue;
 25506     13DD  0140               	movlb	0	; select bank0
 25507     13DE  0823               	movf	I2C1_MasterOperation@returnValue,w
 25508     13DF                     l1756:
 25509     13DF  0008               	return
 25510     13E0                     __end_of_I2C1_MasterOperation:
 25511                           
 25512                           	psect	text115
 25513     1023                     __ptext115:	
 25514 ;; *************** function _I2C1_Poller *****************
 25515 ;; Defined at:
 25516 ;;		line 312 in file "mcc_generated_files/i2c1_master.c"
 25517 ;; Parameters:    Size  Location     Type
 25518 ;;		None
 25519 ;; Auto vars:     Size  Location     Type
 25520 ;;		None
 25521 ;; Return value:  Size  Location     Type
 25522 ;;                  1    wreg      void 
 25523 ;; Registers used:
 25524 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25525 ;; Tracked objects:
 25526 ;;		On entry : 0/0
 25527 ;;		On exit  : 0/0
 25528 ;;		Unchanged: 0/0
 25529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25534 ;;Total ram usage:        0 bytes
 25535 ;; Hardware stack levels used: 1
 25536 ;; Hardware stack levels required when called: 9
 25537 ;; This function calls:
 25538 ;;		_I2C1_MasterFsm
 25539 ;;		_I2C1_MasterWaitForEvent
 25540 ;; This function is called by:
 25541 ;;		_I2C1_MasterOperation
 25542 ;; This function uses a non-reentrant model
 25543 ;;
 25544                           
 25545     1023                     _I2C1_Poller:	
 25546                           ;psect for function _I2C1_Poller
 25547                           
 25548     1023                     l12858:	
 25549                           ;incstack = 0
 25550                           ; Regs used in _I2C1_Poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25551                           
 25552                           
 25553                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 25554     1023  282A               	goto	l12864
 25555     1024                     l12860:
 25556                           
 25557                           ;mcc_generated_files/i2c1_master.c: 315:     {;mcc_generated_files/i2c1_master.c: 316:  
      +                                 I2C1_MasterWaitForEvent();
 25558     1024  319E  26E4  3190   	fcall	_I2C1_MasterWaitForEvent
 25559     1027                     l12862:
 25560                           
 25561                           ;mcc_generated_files/i2c1_master.c: 317:         I2C1_MasterFsm();
 25562     1027  3195  259A  3190   	fcall	_I2C1_MasterFsm
 25563     102A                     l12864:
 25564                           
 25565                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 25566     102A  0141               	movlb	1	; select bank1
 25567     102B  18BC               	btfsc	(_I2C1_Status^(0+128)+28),1
 25568     102C  282E               	goto	u9621
 25569     102D  282F               	goto	u9620
 25570     102E                     u9621:
 25571     102E  2824               	goto	l12860
 25572     102F                     u9620:
 25573     102F                     l1795:
 25574     102F  0008               	return
 25575     1030                     __end_of_I2C1_Poller:
 25576                           
 25577                           	psect	text116
 25578     1EE4                     __ptext116:	
 25579 ;; *************** function _I2C1_MasterWaitForEvent *****************
 25580 ;; Defined at:
 25581 ;;		line 650 in file "mcc_generated_files/i2c1_master.c"
 25582 ;; Parameters:    Size  Location     Type
 25583 ;;		None
 25584 ;; Auto vars:     Size  Location     Type
 25585 ;;		None
 25586 ;; Return value:  Size  Location     Type
 25587 ;;                  1    wreg      void 
 25588 ;; Registers used:
 25589 ;;		None
 25590 ;; Tracked objects:
 25591 ;;		On entry : 0/0
 25592 ;;		On exit  : 0/0
 25593 ;;		Unchanged: 0/0
 25594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25599 ;;Total ram usage:        0 bytes
 25600 ;; Hardware stack levels used: 1
 25601 ;; Hardware stack levels required when called: 4
 25602 ;; This function calls:
 25603 ;;		Nothing
 25604 ;; This function is called by:
 25605 ;;		_I2C1_Poller
 25606 ;; This function uses a non-reentrant model
 25607 ;;
 25608                           
 25609     1EE4                     _I2C1_MasterWaitForEvent:	
 25610                           ;psect for function _I2C1_MasterWaitForEvent
 25611                           
 25612     1EE4                     l1968:	
 25613                           ;incstack = 0
 25614                           ; Regs used in _I2C1_MasterWaitForEvent: []
 25615                           ;mcc_generated_files/i2c1_master.c: 652:     while(1)
 25616                           
 25617                           
 25618                           ;mcc_generated_files/i2c1_master.c: 653:     {;mcc_generated_files/i2c1_master.c: 654:  
      +                                 if(PIR3bits.SSP1IF)
 25619     1EE4  014E               	movlb	14	; select bank14
 25620     1EE5  1C0F               	btfss	15,0	;volatile
 25621     1EE6  2EE8               	goto	u9591
 25622     1EE7  2EE9               	goto	u9590
 25623     1EE8                     u9591:
 25624     1EE8  2EE4               	goto	l1968
 25625     1EE9                     u9590:
 25626     1EE9                     l1972:
 25627     1EE9  0008               	return
 25628     1EEA                     __end_of_I2C1_MasterWaitForEvent:
 25629                           
 25630                           	psect	text117
 25631     159A                     __ptext117:	
 25632 ;; *************** function _I2C1_MasterFsm *****************
 25633 ;; Defined at:
 25634 ;;		line 321 in file "mcc_generated_files/i2c1_master.c"
 25635 ;; Parameters:    Size  Location     Type
 25636 ;;		None
 25637 ;; Auto vars:     Size  Location     Type
 25638 ;;		None
 25639 ;; Return value:  Size  Location     Type
 25640 ;;                  1    wreg      void 
 25641 ;; Registers used:
 25642 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25643 ;; Tracked objects:
 25644 ;;		On entry : 0/0
 25645 ;;		On exit  : 0/0
 25646 ;;		Unchanged: 0/0
 25647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25650 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25651 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25652 ;;Total ram usage:        2 bytes
 25653 ;; Hardware stack levels used: 1
 25654 ;; Hardware stack levels required when called: 8
 25655 ;; This function calls:
 25656 ;;		_I2C1_DO_ADDRESS_NACK
 25657 ;;		_I2C1_DO_IDLE
 25658 ;;		_I2C1_DO_RCEN
 25659 ;;		_I2C1_DO_RESET
 25660 ;;		_I2C1_DO_RX
 25661 ;;		_I2C1_DO_RX_ACK
 25662 ;;		_I2C1_DO_RX_NACK_RESTART
 25663 ;;		_I2C1_DO_RX_NACK_STOP
 25664 ;;		_I2C1_DO_SEND_ADR_READ
 25665 ;;		_I2C1_DO_SEND_ADR_WRITE
 25666 ;;		_I2C1_DO_SEND_RESTART
 25667 ;;		_I2C1_DO_SEND_RESTART_READ
 25668 ;;		_I2C1_DO_SEND_RESTART_WRITE
 25669 ;;		_I2C1_DO_SEND_STOP
 25670 ;;		_I2C1_DO_TX
 25671 ;;		_I2C1_DO_TX_EMPTY
 25672 ;;		_I2C1_MasterClearIrq
 25673 ;;		_I2C1_MasterIsNack
 25674 ;; This function is called by:
 25675 ;;		_I2C1_Poller
 25676 ;; This function uses a non-reentrant model
 25677 ;;
 25678                           
 25679     159A                     _I2C1_MasterFsm:	
 25680                           ;psect for function _I2C1_MasterFsm
 25681                           
 25682     159A                     l12846:	
 25683                           ;incstack = 0
 25684                           ; Regs used in _I2C1_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25685                           
 25686                           
 25687                           ;mcc_generated_files/i2c1_master.c: 323:     I2C1_MasterClearIrq();
 25688     159A  319E  265E  3195   	fcall	_I2C1_MasterClearIrq
 25689     159D                     l12848:
 25690                           
 25691                           ;mcc_generated_files/i2c1_master.c: 325:     if(I2C1_Status.addressNackCheck && I2C1_Mas
      +                          terIsNack())
 25692     159D  0141               	movlb	1	; select bank1
 25693     159E  1C3C               	btfss	(_I2C1_Status^(0+128)+28),0
 25694     159F  2DA1               	goto	u9601
 25695     15A0  2DA2               	goto	u9600
 25696     15A1                     u9601:
 25697     15A1  2DAD               	goto	l12854
 25698     15A2                     u9600:
 25699     15A2                     l12850:
 25700     15A2  319E  26DE  3195   	fcall	_I2C1_MasterIsNack
 25701     15A5  3A00               	xorlw	0
 25702     15A6  1903               	skipnz
 25703     15A7  2DA9               	goto	u9611
 25704     15A8  2DAA               	goto	u9610
 25705     15A9                     u9611:
 25706     15A9  2DAD               	goto	l12854
 25707     15AA                     u9610:
 25708     15AA                     l12852:
 25709                           
 25710                           ;mcc_generated_files/i2c1_master.c: 326:     {;mcc_generated_files/i2c1_master.c: 327:  
      +                                 I2C1_Status.state = I2C1_ADDRESS_NACK;
 25711     15AA  300F               	movlw	15
 25712     15AB  0141               	movlb	1	; select bank1
 25713     15AC  00BA               	movwf	(_I2C1_Status^(0+128)+26)
 25714     15AD                     l12854:
 25715                           
 25716                           ;mcc_generated_files/i2c1_master.c: 329:     I2C1_Status.state = i2c1_fsmStateTable[I2C1
      +                          _Status.state]();
 25717     15AD  0141               	movlb	1	; select bank1
 25718     15AE  083A               	movf	(_I2C1_Status^(0+128)+26),w
 25719     15AF  0140               	movlb	0	; select bank0
 25720     15B0  00A0               	movwf	??_I2C1_MasterFsm
 25721     15B1  01A1               	clrf	??_I2C1_MasterFsm+1
 25722     15B2  35A0               	lslf	??_I2C1_MasterFsm,f
 25723     15B3  0DA1               	rlf	??_I2C1_MasterFsm+1,f
 25724     15B4  3028               	movlw	low _i2c1_fsmStateTable
 25725     15B5  0720               	addwf	??_I2C1_MasterFsm,w
 25726     15B6  0084               	movwf	4
 25727     15B7  3018               	movlw	high _i2c1_fsmStateTable
 25728     15B8  3D21               	addwfc	??_I2C1_MasterFsm+1,w
 25729     15B9  3880               	iorlw	128
 25730     15BA  0085               	movwf	5
 25731     15BB  3F01               	moviw [1]fsr0
 25732     15BC  008A               	movwf	10
 25733     15BD  3F00               	moviw [0]fsr0
 25734     15BE  000A               	callw
 25735     15BF  3195               	pagesel	$
 25736     15C0  0141               	movlb	1	; select bank1
 25737     15C1  00BA               	movwf	(_I2C1_Status^(0+128)+26)
 25738     15C2                     l1799:
 25739     15C2  0008               	return
 25740     15C3                     __end_of_I2C1_MasterFsm:
 25741                           
 25742                           	psect	text118
 25743     1572                     __ptext118:	
 25744 ;; *************** function _I2C1_DO_ADDRESS_NACK *****************
 25745 ;; Defined at:
 25746 ;;		line 500 in file "mcc_generated_files/i2c1_master.c"
 25747 ;; Parameters:    Size  Location     Type
 25748 ;;		None
 25749 ;; Auto vars:     Size  Location     Type
 25750 ;;		None
 25751 ;; Return value:  Size  Location     Type
 25752 ;;                  1    wreg      enum E12565
 25753 ;; Registers used:
 25754 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25755 ;; Tracked objects:
 25756 ;;		On entry : 0/0
 25757 ;;		On exit  : 0/0
 25758 ;;		Unchanged: 0/0
 25759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25762 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25763 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25764 ;;Total ram usage:        2 bytes
 25765 ;; Hardware stack levels used: 1
 25766 ;; Hardware stack levels required when called: 7
 25767 ;; This function calls:
 25768 ;;		NULL
 25769 ;;		_I2C1_CallbackReturnReset
 25770 ;;		_I2C1_CallbackReturnStop
 25771 ;;		_I2C1_DO_SEND_RESTART
 25772 ;;		_I2C1_DO_SEND_STOP
 25773 ;;		_rd1RegCompleteHandler
 25774 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1239
 25775 ;;		_rd2RegCompleteHandler
 25776 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1250
 25777 ;;		_rdBlkRegCompleteHandler
 25778 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1273
 25779 ;;		_wr1RegCompleteHandler
 25780 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1256
 25781 ;;		_wr2RegCompleteHandler
 25782 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1262
 25783 ;; This function is called by:
 25784 ;;		_I2C1_MasterFsm
 25785 ;; This function uses a non-reentrant model
 25786 ;;
 25787                           
 25788     1572                     _I2C1_DO_ADDRESS_NACK:	
 25789                           ;psect for function _I2C1_DO_ADDRESS_NACK
 25790                           
 25791     1572                     l12822:	
 25792                           ;incstack = 0
 25793                           ; Regs used in _I2C1_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25794                           
 25795                           
 25796                           ;mcc_generated_files/i2c1_master.c: 502:     I2C1_Status.addressNackCheck = 0;
 25797     1572  0141               	movlb	1	; select bank1
 25798     1573  103C               	bcf	(_I2C1_Status^(0+128)+28),0
 25799     1574                     l12824:
 25800                           
 25801                           ;mcc_generated_files/i2c1_master.c: 503:     I2C1_Status.error = I2C1_FAIL;
 25802     1574  3002               	movlw	2
 25803     1575  00BB               	movwf	(_I2C1_Status^(0+128)+27)
 25804                           
 25805                           ;mcc_generated_files/i2c1_master.c: 504:     switch(I2C1_Status.callbackTable[I2C1_ADDR_
      +                          NACK](I2C1_Status.callbackPayload[I2C1_ADDR_NACK]))
 25806     1576  2D7F               	goto	l12836
 25807     1577                     l12826:
 25808                           
 25809                           ;mcc_generated_files/i2c1_master.c: 508:             return I2C1_DO_SEND_RESTART();
 25810     1577  319E  26AC  3195   	fcall	_I2C1_DO_SEND_RESTART
 25811     157A  2D99               	goto	l1890
 25812     157B                     l12830:
 25813                           
 25814                           ;mcc_generated_files/i2c1_master.c: 510:             return I2C1_DO_SEND_STOP();
 25815     157B  319E  26B1  3195   	fcall	_I2C1_DO_SEND_STOP
 25816     157E  2D99               	goto	l1890
 25817     157F                     l12836:
 25818     157F  082E               	movf	(low ((_I2C1_Status| 0+14)))^(0+128),w
 25819     1580  00F8               	movwf	I2C1_CallbackReturnReset@funPtr
 25820     1581  3004               	movlw	4
 25821     1582  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 25822     1583  0086               	movwf	6
 25823     1584  0187               	clrf	7
 25824     1585  3F41               	moviw [1]fsr1
 25825     1586  008A               	movwf	10
 25826     1587  3F40               	moviw [0]fsr1
 25827     1588  000A               	callw
 25828     1589  3195               	pagesel	$
 25829     158A  00F9               	movwf	??_I2C1_DO_ADDRESS_NACK
 25830     158B  01FA               	clrf	??_I2C1_DO_ADDRESS_NACK+1
 25831                           
 25832                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25833                           ; Switch size 1, requested type "simple"
 25834                           ; Number of cases is 1, Range of values is 0 to 0
 25835                           ; switch strategies available:
 25836                           ; Name         Instructions Cycles
 25837                           ; simple_byte            4     3 (average)
 25838                           ; direct_byte            8     6 (fixed)
 25839                           ; jumptable            260     6 (fixed)
 25840                           ;	Chosen strategy is simple_byte
 25841     158C  087A               	movf	??_I2C1_DO_ADDRESS_NACK+1,w
 25842     158D  3A00               	xorlw	0	; case 0
 25843     158E  1903               	skipnz
 25844     158F  2D91               	goto	l16644
 25845     1590  2D7B               	goto	l12830
 25846     1591                     l16644:
 25847                           
 25848                           ; Switch size 1, requested type "simple"
 25849                           ; Number of cases is 2, Range of values is 2 to 3
 25850                           ; switch strategies available:
 25851                           ; Name         Instructions Cycles
 25852                           ; simple_byte            7     4 (average)
 25853                           ; direct_byte           13     9 (fixed)
 25854                           ; jumptable            263     9 (fixed)
 25855                           ;	Chosen strategy is simple_byte
 25856     1591  0879               	movf	??_I2C1_DO_ADDRESS_NACK,w
 25857     1592  3A02               	xorlw	2	; case 2
 25858     1593  1903               	skipnz
 25859     1594  2D77               	goto	l12826
 25860     1595  3A01               	xorlw	1	; case 3
 25861     1596  1903               	skipnz
 25862     1597  2D77               	goto	l12826
 25863     1598  2D7B               	goto	l12830
 25864     1599                     l1890:
 25865     1599  0008               	return
 25866     159A                     __end_of_I2C1_DO_ADDRESS_NACK:
 25867                           
 25868                           	psect	text119
 25869     1EC5                     __ptext119:	
 25870 ;; *************** function _I2C1_DO_RESET *****************
 25871 ;; Defined at:
 25872 ;;		line 494 in file "mcc_generated_files/i2c1_master.c"
 25873 ;; Parameters:    Size  Location     Type
 25874 ;;		None
 25875 ;; Auto vars:     Size  Location     Type
 25876 ;;		None
 25877 ;; Return value:  Size  Location     Type
 25878 ;;                  1    wreg      enum E12565
 25879 ;; Registers used:
 25880 ;;		wreg, status,2
 25881 ;; Tracked objects:
 25882 ;;		On entry : 0/0
 25883 ;;		On exit  : 0/0
 25884 ;;		Unchanged: 0/0
 25885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25890 ;;Total ram usage:        0 bytes
 25891 ;; Hardware stack levels used: 1
 25892 ;; Hardware stack levels required when called: 4
 25893 ;; This function calls:
 25894 ;;		Nothing
 25895 ;; This function is called by:
 25896 ;;		_I2C1_MasterFsm
 25897 ;; This function uses a non-reentrant model
 25898 ;;
 25899                           
 25900     1EC5                     _I2C1_DO_RESET:	
 25901                           ;psect for function _I2C1_DO_RESET
 25902                           
 25903     1EC5                     l12814:	
 25904                           ;incstack = 0
 25905                           ; Regs used in _I2C1_DO_RESET: [wreg+status,2]
 25906                           
 25907                           
 25908                           ;mcc_generated_files/i2c1_master.c: 496:     I2C1_Status.busy = 0;
 25909     1EC5  0141               	movlb	1	; select bank1
 25910     1EC6  10BC               	bcf	(_I2C1_Status^(0+128)+28),1
 25911     1EC7                     l12816:
 25912                           
 25913                           ;mcc_generated_files/i2c1_master.c: 497:     I2C1_Status.error = I2C1_NOERR;
 25914     1EC7  01BB               	clrf	(_I2C1_Status^(0+128)+27)
 25915     1EC8                     l12818:
 25916                           
 25917                           ;mcc_generated_files/i2c1_master.c: 498:     return I2C1_RESET;
 25918     1EC8  300E               	movlw	14
 25919     1EC9                     l1884:
 25920     1EC9  0008               	return
 25921     1ECA                     __end_of_I2C1_DO_RESET:
 25922                           
 25923                           	psect	text120
 25924     1EC0                     __ptext120:	
 25925 ;; *************** function _I2C1_DO_RX_NACK_RESTART *****************
 25926 ;; Defined at:
 25927 ;;		line 488 in file "mcc_generated_files/i2c1_master.c"
 25928 ;; Parameters:    Size  Location     Type
 25929 ;;		None
 25930 ;; Auto vars:     Size  Location     Type
 25931 ;;		None
 25932 ;; Return value:  Size  Location     Type
 25933 ;;                  1    wreg      enum E12565
 25934 ;; Registers used:
 25935 ;;		wreg, status,2, status,0, pclath, cstack
 25936 ;; Tracked objects:
 25937 ;;		On entry : 0/0
 25938 ;;		On exit  : 0/0
 25939 ;;		Unchanged: 0/0
 25940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25945 ;;Total ram usage:        0 bytes
 25946 ;; Hardware stack levels used: 1
 25947 ;; Hardware stack levels required when called: 5
 25948 ;; This function calls:
 25949 ;;		_I2C1_MasterSendNack
 25950 ;; This function is called by:
 25951 ;;		_I2C1_DO_RX
 25952 ;;		_I2C1_MasterFsm
 25953 ;; This function uses a non-reentrant model
 25954 ;;
 25955                           
 25956     1EC0                     _I2C1_DO_RX_NACK_RESTART:	
 25957                           ;psect for function _I2C1_DO_RX_NACK_RESTART
 25958                           
 25959     1EC0                     l12652:	
 25960                           ;incstack = 0
 25961                           ; Regs used in _I2C1_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 25962                           
 25963                           
 25964                           ;mcc_generated_files/i2c1_master.c: 490:     I2C1_MasterSendNack();
 25965     1EC0  319E  268C  319E   	fcall	_I2C1_MasterSendNack
 25966     1EC3                     l12654:
 25967                           
 25968                           ;mcc_generated_files/i2c1_master.c: 491:     return I2C1_SEND_RESTART;
 25969     1EC3  3009               	movlw	9
 25970     1EC4                     l1881:
 25971     1EC4  0008               	return
 25972     1EC5                     __end_of_I2C1_DO_RX_NACK_RESTART:
 25973                           
 25974                           	psect	text121
 25975     1EBB                     __ptext121:	
 25976 ;; *************** function _I2C1_DO_RX_NACK_STOP *****************
 25977 ;; Defined at:
 25978 ;;		line 482 in file "mcc_generated_files/i2c1_master.c"
 25979 ;; Parameters:    Size  Location     Type
 25980 ;;		None
 25981 ;; Auto vars:     Size  Location     Type
 25982 ;;		None
 25983 ;; Return value:  Size  Location     Type
 25984 ;;                  1    wreg      enum E12565
 25985 ;; Registers used:
 25986 ;;		wreg, status,2, status,0, pclath, cstack
 25987 ;; Tracked objects:
 25988 ;;		On entry : 0/0
 25989 ;;		On exit  : 0/0
 25990 ;;		Unchanged: 0/0
 25991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25996 ;;Total ram usage:        0 bytes
 25997 ;; Hardware stack levels used: 1
 25998 ;; Hardware stack levels required when called: 5
 25999 ;; This function calls:
 26000 ;;		_I2C1_MasterSendNack
 26001 ;; This function is called by:
 26002 ;;		_I2C1_DO_RX
 26003 ;;		_I2C1_MasterFsm
 26004 ;; This function uses a non-reentrant model
 26005 ;;
 26006                           
 26007     1EBB                     _I2C1_DO_RX_NACK_STOP:	
 26008                           ;psect for function _I2C1_DO_RX_NACK_STOP
 26009                           
 26010     1EBB                     l12658:	
 26011                           ;incstack = 0
 26012                           ; Regs used in _I2C1_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 26013                           
 26014                           
 26015                           ;mcc_generated_files/i2c1_master.c: 484:     I2C1_MasterSendNack();
 26016     1EBB  319E  268C  319E   	fcall	_I2C1_MasterSendNack
 26017     1EBE                     l12660:
 26018                           
 26019                           ;mcc_generated_files/i2c1_master.c: 485:     return I2C1_SEND_STOP;
 26020     1EBE  300A               	movlw	10
 26021     1EBF                     l1878:
 26022     1EBF  0008               	return
 26023     1EC0                     __end_of_I2C1_DO_RX_NACK_STOP:
 26024                           
 26025                           	psect	text122
 26026     1EB6                     __ptext122:	
 26027 ;; *************** function _I2C1_DO_RX_ACK *****************
 26028 ;; Defined at:
 26029 ;;		line 475 in file "mcc_generated_files/i2c1_master.c"
 26030 ;; Parameters:    Size  Location     Type
 26031 ;;		None
 26032 ;; Auto vars:     Size  Location     Type
 26033 ;;		None
 26034 ;; Return value:  Size  Location     Type
 26035 ;;                  1    wreg      enum E12565
 26036 ;; Registers used:
 26037 ;;		wreg, status,2, status,0, pclath, cstack
 26038 ;; Tracked objects:
 26039 ;;		On entry : 0/0
 26040 ;;		On exit  : 0/0
 26041 ;;		Unchanged: 0/0
 26042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26047 ;;Total ram usage:        0 bytes
 26048 ;; Hardware stack levels used: 1
 26049 ;; Hardware stack levels required when called: 5
 26050 ;; This function calls:
 26051 ;;		_I2C1_MasterSendAck
 26052 ;; This function is called by:
 26053 ;;		_I2C1_MasterFsm
 26054 ;; This function uses a non-reentrant model
 26055 ;;
 26056                           
 26057     1EB6                     _I2C1_DO_RX_ACK:	
 26058                           ;psect for function _I2C1_DO_RX_ACK
 26059                           
 26060     1EB6                     l12808:	
 26061                           ;incstack = 0
 26062                           ; Regs used in _I2C1_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
 26063                           
 26064                           
 26065                           ;mcc_generated_files/i2c1_master.c: 477:     I2C1_MasterSendAck();
 26066     1EB6  319E  2690  319E   	fcall	_I2C1_MasterSendAck
 26067     1EB9                     l12810:
 26068                           
 26069                           ;mcc_generated_files/i2c1_master.c: 478:     return I2C1_RCEN;
 26070     1EB9  3005               	movlw	5
 26071     1EBA                     l1875:
 26072     1EBA  0008               	return
 26073     1EBB                     __end_of_I2C1_DO_RX_ACK:
 26074                           
 26075                           	psect	text123
 26076     1EB1                     __ptext123:	
 26077 ;; *************** function _I2C1_DO_SEND_STOP *****************
 26078 ;; Defined at:
 26079 ;;		line 469 in file "mcc_generated_files/i2c1_master.c"
 26080 ;; Parameters:    Size  Location     Type
 26081 ;;		None
 26082 ;; Auto vars:     Size  Location     Type
 26083 ;;		None
 26084 ;; Return value:  Size  Location     Type
 26085 ;;                  1    wreg      enum E12565
 26086 ;; Registers used:
 26087 ;;		wreg, status,2, status,0, pclath, cstack
 26088 ;; Tracked objects:
 26089 ;;		On entry : 0/0
 26090 ;;		On exit  : 0/0
 26091 ;;		Unchanged: 0/0
 26092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26097 ;;Total ram usage:        0 bytes
 26098 ;; Hardware stack levels used: 1
 26099 ;; Hardware stack levels required when called: 5
 26100 ;; This function calls:
 26101 ;;		_I2C1_MasterStop
 26102 ;; This function is called by:
 26103 ;;		_I2C1_DO_TX
 26104 ;;		_I2C1_DO_TX_EMPTY
 26105 ;;		_I2C1_DO_ADDRESS_NACK
 26106 ;;		_I2C1_MasterFsm
 26107 ;; This function uses a non-reentrant model
 26108 ;;
 26109                           
 26110     1EB1                     _I2C1_DO_SEND_STOP:	
 26111                           ;psect for function _I2C1_DO_SEND_STOP
 26112                           
 26113     1EB1                     l12640:	
 26114                           ;incstack = 0
 26115                           ; Regs used in _I2C1_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 26116                           
 26117                           
 26118                           ;mcc_generated_files/i2c1_master.c: 471:     I2C1_MasterStop();
 26119     1EB1  319E  266D  319E   	fcall	_I2C1_MasterStop
 26120     1EB4                     l12642:
 26121                           
 26122                           ;mcc_generated_files/i2c1_master.c: 472:     return I2C1_IDLE;
 26123     1EB4  3000               	movlw	0
 26124     1EB5                     l1872:
 26125     1EB5  0008               	return
 26126     1EB6                     __end_of_I2C1_DO_SEND_STOP:
 26127                           
 26128                           	psect	text124
 26129     1EAC                     __ptext124:	
 26130 ;; *************** function _I2C1_DO_SEND_RESTART *****************
 26131 ;; Defined at:
 26132 ;;		line 463 in file "mcc_generated_files/i2c1_master.c"
 26133 ;; Parameters:    Size  Location     Type
 26134 ;;		None
 26135 ;; Auto vars:     Size  Location     Type
 26136 ;;		None
 26137 ;; Return value:  Size  Location     Type
 26138 ;;                  1    wreg      enum E12565
 26139 ;; Registers used:
 26140 ;;		wreg, status,2, status,0, pclath, cstack
 26141 ;; Tracked objects:
 26142 ;;		On entry : 0/0
 26143 ;;		On exit  : 0/0
 26144 ;;		Unchanged: 0/0
 26145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26150 ;;Total ram usage:        0 bytes
 26151 ;; Hardware stack levels used: 1
 26152 ;; Hardware stack levels required when called: 5
 26153 ;; This function calls:
 26154 ;;		_I2C1_MasterEnableRestart
 26155 ;; This function is called by:
 26156 ;;		_I2C1_DO_TX_EMPTY
 26157 ;;		_I2C1_DO_ADDRESS_NACK
 26158 ;;		_I2C1_MasterFsm
 26159 ;; This function uses a non-reentrant model
 26160 ;;
 26161                           
 26162     1EAC                     _I2C1_DO_SEND_RESTART:	
 26163                           ;psect for function _I2C1_DO_SEND_RESTART
 26164                           
 26165     1EAC                     l12666:	
 26166                           ;incstack = 0
 26167                           ; Regs used in _I2C1_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 26168                           
 26169                           
 26170                           ;mcc_generated_files/i2c1_master.c: 465:     I2C1_MasterEnableRestart();
 26171     1EAC  319E  266A  319E   	fcall	_I2C1_MasterEnableRestart
 26172     1EAF                     l12668:
 26173                           
 26174                           ;mcc_generated_files/i2c1_master.c: 466:     return I2C1_SEND_ADR_READ;
 26175     1EAF  3001               	movlw	1
 26176     1EB0                     l1869:
 26177     1EB0  0008               	return
 26178     1EB1                     __end_of_I2C1_DO_SEND_RESTART:
 26179                           
 26180                           	psect	text125
 26181     1EA7                     __ptext125:	
 26182 ;; *************** function _I2C1_DO_SEND_RESTART_WRITE *****************
 26183 ;; Defined at:
 26184 ;;		line 456 in file "mcc_generated_files/i2c1_master.c"
 26185 ;; Parameters:    Size  Location     Type
 26186 ;;		None
 26187 ;; Auto vars:     Size  Location     Type
 26188 ;;		None
 26189 ;; Return value:  Size  Location     Type
 26190 ;;                  1    wreg      enum E12565
 26191 ;; Registers used:
 26192 ;;		wreg, status,2, status,0, pclath, cstack
 26193 ;; Tracked objects:
 26194 ;;		On entry : 0/0
 26195 ;;		On exit  : 0/0
 26196 ;;		Unchanged: 0/0
 26197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26202 ;;Total ram usage:        0 bytes
 26203 ;; Hardware stack levels used: 1
 26204 ;; Hardware stack levels required when called: 5
 26205 ;; This function calls:
 26206 ;;		_I2C1_MasterEnableRestart
 26207 ;; This function is called by:
 26208 ;;		_I2C1_DO_TX
 26209 ;;		_I2C1_MasterFsm
 26210 ;; This function uses a non-reentrant model
 26211 ;;
 26212                           
 26213     1EA7                     _I2C1_DO_SEND_RESTART_WRITE:	
 26214                           ;psect for function _I2C1_DO_SEND_RESTART_WRITE
 26215                           
 26216     1EA7                     l12634:	
 26217                           ;incstack = 0
 26218                           ; Regs used in _I2C1_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 26219                           
 26220                           
 26221                           ;mcc_generated_files/i2c1_master.c: 458:     I2C1_MasterEnableRestart();
 26222     1EA7  319E  266A  319E   	fcall	_I2C1_MasterEnableRestart
 26223     1EAA                     l12636:
 26224                           
 26225                           ;mcc_generated_files/i2c1_master.c: 459:     return I2C1_SEND_ADR_WRITE;
 26226     1EAA  3002               	movlw	2
 26227     1EAB                     l1866:
 26228     1EAB  0008               	return
 26229     1EAC                     __end_of_I2C1_DO_SEND_RESTART_WRITE:
 26230                           
 26231                           	psect	text126
 26232     1EA2                     __ptext126:	
 26233 ;; *************** function _I2C1_DO_SEND_RESTART_READ *****************
 26234 ;; Defined at:
 26235 ;;		line 450 in file "mcc_generated_files/i2c1_master.c"
 26236 ;; Parameters:    Size  Location     Type
 26237 ;;		None
 26238 ;; Auto vars:     Size  Location     Type
 26239 ;;		None
 26240 ;; Return value:  Size  Location     Type
 26241 ;;                  1    wreg      enum E12565
 26242 ;; Registers used:
 26243 ;;		wreg, status,2, status,0, pclath, cstack
 26244 ;; Tracked objects:
 26245 ;;		On entry : 0/0
 26246 ;;		On exit  : 0/0
 26247 ;;		Unchanged: 0/0
 26248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26253 ;;Total ram usage:        0 bytes
 26254 ;; Hardware stack levels used: 1
 26255 ;; Hardware stack levels required when called: 5
 26256 ;; This function calls:
 26257 ;;		_I2C1_MasterEnableRestart
 26258 ;; This function is called by:
 26259 ;;		_I2C1_DO_TX
 26260 ;;		_I2C1_MasterFsm
 26261 ;; This function uses a non-reentrant model
 26262 ;;
 26263                           
 26264     1EA2                     _I2C1_DO_SEND_RESTART_READ:	
 26265                           ;psect for function _I2C1_DO_SEND_RESTART_READ
 26266                           
 26267     1EA2                     l12628:	
 26268                           ;incstack = 0
 26269                           ; Regs used in _I2C1_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 26270                           
 26271                           
 26272                           ;mcc_generated_files/i2c1_master.c: 452:     I2C1_MasterEnableRestart();
 26273     1EA2  319E  266A  319E   	fcall	_I2C1_MasterEnableRestart
 26274     1EA5                     l12630:
 26275                           
 26276                           ;mcc_generated_files/i2c1_master.c: 453:     return I2C1_SEND_ADR_READ;
 26277     1EA5  3001               	movlw	1
 26278     1EA6                     l1863:
 26279     1EA6  0008               	return
 26280     1EA7                     __end_of_I2C1_DO_SEND_RESTART_READ:
 26281                           
 26282                           	psect	text127
 26283     1F4A                     __ptext127:	
 26284 ;; *************** function _I2C1_DO_RCEN *****************
 26285 ;; Defined at:
 26286 ;;		line 402 in file "mcc_generated_files/i2c1_master.c"
 26287 ;; Parameters:    Size  Location     Type
 26288 ;;		None
 26289 ;; Auto vars:     Size  Location     Type
 26290 ;;		None
 26291 ;; Return value:  Size  Location     Type
 26292 ;;                  1    wreg      enum E12565
 26293 ;; Registers used:
 26294 ;;		wreg, status,2, status,0, pclath, cstack
 26295 ;; Tracked objects:
 26296 ;;		On entry : 0/0
 26297 ;;		On exit  : 0/0
 26298 ;;		Unchanged: 0/0
 26299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26304 ;;Total ram usage:        0 bytes
 26305 ;; Hardware stack levels used: 1
 26306 ;; Hardware stack levels required when called: 5
 26307 ;; This function calls:
 26308 ;;		_I2C1_MasterStartRx
 26309 ;; This function is called by:
 26310 ;;		_I2C1_MasterFsm
 26311 ;; This function uses a non-reentrant model
 26312 ;;
 26313                           
 26314     1F4A                     _I2C1_DO_RCEN:	
 26315                           ;psect for function _I2C1_DO_RCEN
 26316                           
 26317     1F4A                     l12774:	
 26318                           ;incstack = 0
 26319                           ; Regs used in _I2C1_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
 26320                           
 26321                           
 26322                           ;mcc_generated_files/i2c1_master.c: 404:     I2C1_Status.addressNackCheck = 0;
 26323     1F4A  0141               	movlb	1	; select bank1
 26324     1F4B  103C               	bcf	(_I2C1_Status^(0+128)+28),0
 26325     1F4C                     l12776:
 26326                           
 26327                           ;mcc_generated_files/i2c1_master.c: 405:     I2C1_MasterStartRx();
 26328     1F4C  319E  2670  319F   	fcall	_I2C1_MasterStartRx
 26329     1F4F                     l12778:
 26330                           
 26331                           ;mcc_generated_files/i2c1_master.c: 406:     return I2C1_RX;
 26332     1F4F  3004               	movlw	4
 26333     1F50                     l1839:
 26334     1F50  0008               	return
 26335     1F51                     __end_of_I2C1_DO_RCEN:
 26336                           
 26337                           	psect	text128
 26338     09E7                     __ptext128:	
 26339 ;; *************** function _I2C1_DO_RX *****************
 26340 ;; Defined at:
 26341 ;;		line 378 in file "mcc_generated_files/i2c1_master.c"
 26342 ;; Parameters:    Size  Location     Type
 26343 ;;		None
 26344 ;; Auto vars:     Size  Location     Type
 26345 ;;		None
 26346 ;; Return value:  Size  Location     Type
 26347 ;;                  1    wreg      enum E12565
 26348 ;; Registers used:
 26349 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 26350 ;; Tracked objects:
 26351 ;;		On entry : 0/0
 26352 ;;		On exit  : 0/0
 26353 ;;		Unchanged: 0/0
 26354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26357 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26358 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26359 ;;Total ram usage:        2 bytes
 26360 ;; Hardware stack levels used: 1
 26361 ;; Hardware stack levels required when called: 7
 26362 ;; This function calls:
 26363 ;;		NULL
 26364 ;;		_I2C1_CallbackReturnReset
 26365 ;;		_I2C1_CallbackReturnStop
 26366 ;;		_I2C1_DO_RX_NACK_RESTART
 26367 ;;		_I2C1_DO_RX_NACK_STOP
 26368 ;;		_I2C1_MasterGetRxData
 26369 ;;		_I2C1_MasterSendAck
 26370 ;;		_rd1RegCompleteHandler
 26371 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1239
 26372 ;;		_rd2RegCompleteHandler
 26373 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1250
 26374 ;;		_rdBlkRegCompleteHandler
 26375 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1273
 26376 ;;		_wr1RegCompleteHandler
 26377 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1256
 26378 ;;		_wr2RegCompleteHandler
 26379 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1262
 26380 ;; This function is called by:
 26381 ;;		_I2C1_MasterFsm
 26382 ;; This function uses a non-reentrant model
 26383 ;;
 26384                           
 26385     09E7                     _I2C1_DO_RX:	
 26386                           ;psect for function _I2C1_DO_RX
 26387                           
 26388     09E7                     l12742:	
 26389                           ;incstack = 0
 26390                           ; Regs used in _I2C1_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 26391                           
 26392                           
 26393                           ;mcc_generated_files/i2c1_master.c: 380:     *I2C1_Status.data_ptr++ = I2C1_MasterGetRxD
      +                          ata();
 26394     09E7  0141               	movlb	1	; select bank1
 26395     09E8  0837               	movf	(low ((_I2C1_Status| 0+23)))^(0+128),w
 26396     09E9  0086               	movwf	6
 26397     09EA  0187               	clrf	7
 26398     09EB  319E  2673  3189   	fcall	_I2C1_MasterGetRxData
 26399     09EE  0081               	movwf	1
 26400     09EF                     l12744:
 26401     09EF  3001               	movlw	1
 26402     09F0  00F9               	movwf	??_I2C1_DO_RX
 26403     09F1  0879               	movf	??_I2C1_DO_RX,w
 26404     09F2  0141               	movlb	1	; select bank1
 26405     09F3  07B7               	addwf	(low ((_I2C1_Status| 0+23)))^(0+128),f
 26406     09F4                     l12746:
 26407                           
 26408                           ;mcc_generated_files/i2c1_master.c: 381:     if(--I2C1_Status.data_length)
 26409     09F4  3001               	movlw	1
 26410     09F5  02B8               	subwf	(_I2C1_Status^(0+128)+24),f
 26411     09F6  3000               	movlw	0
 26412     09F7  3BB9               	subwfb	((_I2C1_Status+1)^(0+128)+24),f
 26413     09F8  0838               	movf	(_I2C1_Status^(0+128)+24),w
 26414     09F9  0439               	iorwf	((_I2C1_Status+1)^(0+128)+24),w
 26415     09FA  1903               	btfsc	3,2
 26416     09FB  29FD               	goto	u9581
 26417     09FC  29FE               	goto	u9580
 26418     09FD                     u9581:
 26419     09FD  2A03               	goto	l1827
 26420     09FE                     u9580:
 26421     09FE                     l12748:
 26422                           
 26423                           ;mcc_generated_files/i2c1_master.c: 382:     {;mcc_generated_files/i2c1_master.c: 383:  
      +                                 I2C1_MasterSendAck();
 26424     09FE  319E  2690  3189   	fcall	_I2C1_MasterSendAck
 26425     0A01                     l12750:
 26426                           
 26427                           ;mcc_generated_files/i2c1_master.c: 384:         return I2C1_RCEN;
 26428     0A01  3005               	movlw	5
 26429     0A02  2A29               	goto	l1828
 26430     0A03                     l1827:	
 26431                           ;mcc_generated_files/i2c1_master.c: 386:     else
 26432                           
 26433                           
 26434                           ;mcc_generated_files/i2c1_master.c: 387:     {;mcc_generated_files/i2c1_master.c: 388:  
      +                                 I2C1_Status.bufferFree = 1;
 26435     0A03  15BC               	bsf	(_I2C1_Status^(0+128)+28),3
 26436                           
 26437                           ;mcc_generated_files/i2c1_master.c: 389:         switch(I2C1_Status.callbackTable[I2C1_D
      +                          ATA_COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 26438     0A04  2A0D               	goto	l12766
 26439     0A05                     l12756:
 26440                           
 26441                           ;mcc_generated_files/i2c1_master.c: 393:                 return I2C1_DO_RX_NACK_RESTART(
      +                          );
 26442     0A05  319E  26C0  3189   	fcall	_I2C1_DO_RX_NACK_RESTART
 26443     0A08  2A29               	goto	l1828
 26444     0A09                     l12760:
 26445                           
 26446                           ;mcc_generated_files/i2c1_master.c: 397:                 return I2C1_DO_RX_NACK_STOP();
 26447     0A09  319E  26BB  3189   	fcall	_I2C1_DO_RX_NACK_STOP
 26448     0A0C  2A29               	goto	l1828
 26449     0A0D                     l12766:
 26450     0A0D  082C               	movf	(low ((_I2C1_Status| 0+12)))^(0+128),w
 26451     0A0E  00F8               	movwf	I2C1_CallbackReturnReset@funPtr
 26452     0A0F  0821               	movf	(_I2C1_Status+1)^(0+128),w
 26453     0A10  008A               	movwf	10
 26454     0A11  0820               	movf	_I2C1_Status^(0+128),w
 26455     0A12  000A               	callw
 26456     0A13  3189               	pagesel	$
 26457     0A14  00F9               	movwf	??_I2C1_DO_RX
 26458     0A15  01FA               	clrf	??_I2C1_DO_RX+1
 26459                           
 26460                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26461                           ; Switch size 1, requested type "simple"
 26462                           ; Number of cases is 1, Range of values is 0 to 0
 26463                           ; switch strategies available:
 26464                           ; Name         Instructions Cycles
 26465                           ; simple_byte            4     3 (average)
 26466                           ; direct_byte            8     6 (fixed)
 26467                           ; jumptable            260     6 (fixed)
 26468                           ;	Chosen strategy is simple_byte
 26469     0A16  087A               	movf	??_I2C1_DO_RX+1,w
 26470     0A17  3A00               	xorlw	0	; case 0
 26471     0A18  1903               	skipnz
 26472     0A19  2A1B               	goto	l16646
 26473     0A1A  2A09               	goto	l12760
 26474     0A1B                     l16646:
 26475                           
 26476                           ; Switch size 1, requested type "simple"
 26477                           ; Number of cases is 4, Range of values is 1 to 4
 26478                           ; switch strategies available:
 26479                           ; Name         Instructions Cycles
 26480                           ; simple_byte           13     7 (average)
 26481                           ; direct_byte           17     9 (fixed)
 26482                           ; jumptable            263     9 (fixed)
 26483                           ;	Chosen strategy is simple_byte
 26484     0A1B  0879               	movf	??_I2C1_DO_RX,w
 26485     0A1C  3A01               	xorlw	1	; case 1
 26486     0A1D  1903               	skipnz
 26487     0A1E  2A09               	goto	l12760
 26488     0A1F  3A03               	xorlw	3	; case 2
 26489     0A20  1903               	skipnz
 26490     0A21  2A05               	goto	l12756
 26491     0A22  3A01               	xorlw	1	; case 3
 26492     0A23  1903               	skipnz
 26493     0A24  2A05               	goto	l12756
 26494     0A25  3A07               	xorlw	7	; case 4
 26495     0A26  1903               	skipnz
 26496     0A27  2A09               	goto	l12760
 26497     0A28  2A09               	goto	l12760
 26498     0A29                     l1828:
 26499     0A29  0008               	return
 26500     0A2A                     __end_of_I2C1_DO_RX:
 26501                           
 26502                           	psect	text129
 26503     0C7D                     __ptext129:	
 26504 ;; *************** function _I2C1_DO_TX *****************
 26505 ;; Defined at:
 26506 ;;		line 354 in file "mcc_generated_files/i2c1_master.c"
 26507 ;; Parameters:    Size  Location     Type
 26508 ;;		None
 26509 ;; Auto vars:     Size  Location     Type
 26510 ;;		None
 26511 ;; Return value:  Size  Location     Type
 26512 ;;                  1    wreg      enum E12565
 26513 ;; Registers used:
 26514 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 26515 ;; Tracked objects:
 26516 ;;		On entry : 0/0
 26517 ;;		On exit  : 0/0
 26518 ;;		Unchanged: 0/0
 26519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26522 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26523 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26524 ;;Total ram usage:        2 bytes
 26525 ;; Hardware stack levels used: 1
 26526 ;; Hardware stack levels required when called: 7
 26527 ;; This function calls:
 26528 ;;		NULL
 26529 ;;		_I2C1_CallbackReturnReset
 26530 ;;		_I2C1_CallbackReturnStop
 26531 ;;		_I2C1_DO_SEND_RESTART_READ
 26532 ;;		_I2C1_DO_SEND_RESTART_WRITE
 26533 ;;		_I2C1_DO_SEND_STOP
 26534 ;;		_I2C1_MasterIsNack
 26535 ;;		_I2C1_MasterSendTxData
 26536 ;;		_rd1RegCompleteHandler
 26537 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1239
 26538 ;;		_rd2RegCompleteHandler
 26539 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1250
 26540 ;;		_rdBlkRegCompleteHandler
 26541 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1273
 26542 ;;		_wr1RegCompleteHandler
 26543 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1256
 26544 ;;		_wr2RegCompleteHandler
 26545 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1262
 26546 ;; This function is called by:
 26547 ;;		_I2C1_MasterFsm
 26548 ;; This function uses a non-reentrant model
 26549 ;;
 26550                           
 26551     0C7D                     _I2C1_DO_TX:	
 26552                           ;psect for function _I2C1_DO_TX
 26553                           
 26554     0C7D                     l12708:	
 26555                           ;incstack = 0
 26556                           ; Regs used in _I2C1_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 26557                           
 26558                           
 26559                           ;mcc_generated_files/i2c1_master.c: 356:     if(I2C1_MasterIsNack())
 26560     0C7D  319E  26DE  318C   	fcall	_I2C1_MasterIsNack
 26561     0C80  3A00               	xorlw	0
 26562     0C81  1903               	skipnz
 26563     0C82  2C84               	goto	u9561
 26564     0C83  2C85               	goto	u9560
 26565     0C84                     u9561:
 26566     0C84  2CB3               	goto	l1811
 26567     0C85                     u9560:
 26568     0C85  2C92               	goto	l12726
 26569     0C86                     l12712:
 26570                           
 26571                           ;mcc_generated_files/i2c1_master.c: 361:                 return I2C1_DO_SEND_RESTART_REA
      +                          D();
 26572     0C86  319E  26A2  318C   	fcall	_I2C1_DO_SEND_RESTART_READ
 26573     0C89  2CCF               	goto	l1814
 26574     0C8A                     l12716:
 26575                           
 26576                           ;mcc_generated_files/i2c1_master.c: 363:                   return I2C1_DO_SEND_RESTART_W
      +                          RITE();
 26577     0C8A  319E  26A7  318C   	fcall	_I2C1_DO_SEND_RESTART_WRITE
 26578     0C8D  2CCF               	goto	l1814
 26579     0C8E                     l12720:
 26580                           
 26581                           ;mcc_generated_files/i2c1_master.c: 367:                 return I2C1_DO_SEND_STOP();
 26582     0C8E  319E  26B1  318C   	fcall	_I2C1_DO_SEND_STOP
 26583     0C91  2CCF               	goto	l1814
 26584     0C92                     l12726:
 26585     0C92  0141               	movlb	1	; select bank1
 26586     0C93  082F               	movf	(low ((_I2C1_Status| 0+15)))^(0+128),w
 26587     0C94  00F8               	movwf	I2C1_CallbackReturnReset@funPtr
 26588     0C95  3006               	movlw	6
 26589     0C96  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 26590     0C97  0086               	movwf	6
 26591     0C98  0187               	clrf	7
 26592     0C99  3F41               	moviw [1]fsr1
 26593     0C9A  008A               	movwf	10
 26594     0C9B  3F40               	moviw [0]fsr1
 26595     0C9C  000A               	callw
 26596     0C9D  318C               	pagesel	$
 26597     0C9E  00F9               	movwf	??_I2C1_DO_TX
 26598     0C9F  01FA               	clrf	??_I2C1_DO_TX+1
 26599                           
 26600                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26601                           ; Switch size 1, requested type "simple"
 26602                           ; Number of cases is 1, Range of values is 0 to 0
 26603                           ; switch strategies available:
 26604                           ; Name         Instructions Cycles
 26605                           ; simple_byte            4     3 (average)
 26606                           ; direct_byte            8     6 (fixed)
 26607                           ; jumptable            260     6 (fixed)
 26608                           ;	Chosen strategy is simple_byte
 26609     0CA0  087A               	movf	??_I2C1_DO_TX+1,w
 26610     0CA1  3A00               	xorlw	0	; case 0
 26611     0CA2  1903               	skipnz
 26612     0CA3  2CA5               	goto	l16648
 26613     0CA4  2C8E               	goto	l12720
 26614     0CA5                     l16648:
 26615                           
 26616                           ; Switch size 1, requested type "simple"
 26617                           ; Number of cases is 4, Range of values is 1 to 4
 26618                           ; switch strategies available:
 26619                           ; Name         Instructions Cycles
 26620                           ; simple_byte           13     7 (average)
 26621                           ; direct_byte           17     9 (fixed)
 26622                           ; jumptable            263     9 (fixed)
 26623                           ;	Chosen strategy is simple_byte
 26624     0CA5  0879               	movf	??_I2C1_DO_TX,w
 26625     0CA6  3A01               	xorlw	1	; case 1
 26626     0CA7  1903               	skipnz
 26627     0CA8  2C8E               	goto	l12720
 26628     0CA9  3A03               	xorlw	3	; case 2
 26629     0CAA  1903               	skipnz
 26630     0CAB  2C86               	goto	l12712
 26631     0CAC  3A01               	xorlw	1	; case 3
 26632     0CAD  1903               	skipnz
 26633     0CAE  2C8A               	goto	l12716
 26634     0CAF  3A07               	xorlw	7	; case 4
 26635     0CB0  1903               	skipnz
 26636     0CB1  2C8E               	goto	l12720
 26637     0CB2  2C8E               	goto	l12720
 26638     0CB3                     l1811:	
 26639                           ;mcc_generated_files/i2c1_master.c: 370:     else
 26640                           
 26641                           
 26642                           ;mcc_generated_files/i2c1_master.c: 371:     {;mcc_generated_files/i2c1_master.c: 372:  
      +                                 I2C1_Status.addressNackCheck = 0;
 26643     0CB3  0141               	movlb	1	; select bank1
 26644     0CB4  103C               	bcf	(_I2C1_Status^(0+128)+28),0
 26645     0CB5                     l12728:
 26646                           
 26647                           ;mcc_generated_files/i2c1_master.c: 373:         I2C1_MasterSendTxData(*I2C1_Status.data
      +                          _ptr++);
 26648     0CB5  3017               	movlw	23
 26649     0CB6  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 26650     0CB7  0086               	movwf	6
 26651     0CB8  0187               	clrf	7
 26652     0CB9  3F40               	moviw [0]fsr1
 26653     0CBA  0084               	movwf	4
 26654     0CBB  0185               	clrf	5
 26655     0CBC  0A81               	incf	1,f
 26656     0CBD  0800               	movf	0,w
 26657     0CBE  319E  2698  318C   	fcall	_I2C1_MasterSendTxData
 26658     0CC1                     l12730:
 26659                           
 26660                           ;mcc_generated_files/i2c1_master.c: 374:         return (--I2C1_Status.data_length)?I2C1
      +                          _TX:I2C1_TX_EMPTY;
 26661     0CC1  3001               	movlw	1
 26662     0CC2  0141               	movlb	1	; select bank1
 26663     0CC3  02B8               	subwf	(_I2C1_Status^(0+128)+24),f
 26664     0CC4  3000               	movlw	0
 26665     0CC5  3BB9               	subwfb	((_I2C1_Status+1)^(0+128)+24),f
 26666     0CC6  0838               	movf	(_I2C1_Status^(0+128)+24),w
 26667     0CC7  0439               	iorwf	((_I2C1_Status+1)^(0+128)+24),w
 26668     0CC8  1D03               	btfss	3,2
 26669     0CC9  2CCB               	goto	u9571
 26670     0CCA  2CCC               	goto	u9570
 26671     0CCB                     u9571:
 26672     0CCB  2CCE               	goto	l12734
 26673     0CCC                     u9570:
 26674     0CCC                     l12732:
 26675     0CCC  3006               	movlw	6
 26676     0CCD  2CCF               	goto	l1814
 26677     0CCE                     l12734:
 26678     0CCE  3003               	movlw	3
 26679     0CCF                     l1814:
 26680     0CCF  0008               	return
 26681     0CD0                     __end_of_I2C1_DO_TX:
 26682                           
 26683                           	psect	text130
 26684     1F51                     __ptext130:	
 26685 ;; *************** function _I2C1_DO_SEND_ADR_WRITE *****************
 26686 ;; Defined at:
 26687 ;;		line 347 in file "mcc_generated_files/i2c1_master.c"
 26688 ;; Parameters:    Size  Location     Type
 26689 ;;		None
 26690 ;; Auto vars:     Size  Location     Type
 26691 ;;		None
 26692 ;; Return value:  Size  Location     Type
 26693 ;;                  1    wreg      enum E12565
 26694 ;; Registers used:
 26695 ;;		wreg, status,2, status,0, pclath, cstack
 26696 ;; Tracked objects:
 26697 ;;		On entry : 0/0
 26698 ;;		On exit  : 0/0
 26699 ;;		Unchanged: 0/0
 26700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26705 ;;Total ram usage:        0 bytes
 26706 ;; Hardware stack levels used: 1
 26707 ;; Hardware stack levels required when called: 5
 26708 ;; This function calls:
 26709 ;;		_I2C1_MasterSendTxData
 26710 ;; This function is called by:
 26711 ;;		_I2C1_MasterFsm
 26712 ;; This function uses a non-reentrant model
 26713 ;;
 26714                           
 26715     1F51                     _I2C1_DO_SEND_ADR_WRITE:	
 26716                           ;psect for function _I2C1_DO_SEND_ADR_WRITE
 26717                           
 26718     1F51                     l12700:	
 26719                           ;incstack = 0
 26720                           ; Regs used in _I2C1_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 26721                           
 26722                           
 26723                           ;mcc_generated_files/i2c1_master.c: 349:     I2C1_Status.addressNackCheck = 1;
 26724     1F51  0141               	movlb	1	; select bank1
 26725     1F52  143C               	bsf	(_I2C1_Status^(0+128)+28),0
 26726     1F53                     l12702:
 26727                           
 26728                           ;mcc_generated_files/i2c1_master.c: 350:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1));
 26729     1F53  3536               	lslf	(_I2C1_Status^(0+128)+22),w
 26730     1F54  319E  2698  319F   	fcall	_I2C1_MasterSendTxData
 26731     1F57                     l12704:
 26732                           
 26733                           ;mcc_generated_files/i2c1_master.c: 351:     return I2C1_TX;
 26734     1F57  3003               	movlw	3
 26735     1F58                     l1808:
 26736     1F58  0008               	return
 26737     1F59                     __end_of_I2C1_DO_SEND_ADR_WRITE:
 26738                           
 26739                           	psect	text131
 26740     1F72                     __ptext131:	
 26741 ;; *************** function _I2C1_DO_SEND_ADR_READ *****************
 26742 ;; Defined at:
 26743 ;;		line 340 in file "mcc_generated_files/i2c1_master.c"
 26744 ;; Parameters:    Size  Location     Type
 26745 ;;		None
 26746 ;; Auto vars:     Size  Location     Type
 26747 ;;		None
 26748 ;; Return value:  Size  Location     Type
 26749 ;;                  1    wreg      enum E12565
 26750 ;; Registers used:
 26751 ;;		wreg, status,2, status,0, pclath, cstack
 26752 ;; Tracked objects:
 26753 ;;		On entry : 0/0
 26754 ;;		On exit  : 0/0
 26755 ;;		Unchanged: 0/0
 26756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26761 ;;Total ram usage:        0 bytes
 26762 ;; Hardware stack levels used: 1
 26763 ;; Hardware stack levels required when called: 5
 26764 ;; This function calls:
 26765 ;;		_I2C1_MasterSendTxData
 26766 ;; This function is called by:
 26767 ;;		_I2C1_MasterFsm
 26768 ;; This function uses a non-reentrant model
 26769 ;;
 26770                           
 26771     1F72                     _I2C1_DO_SEND_ADR_READ:	
 26772                           ;psect for function _I2C1_DO_SEND_ADR_READ
 26773                           
 26774     1F72                     l12692:	
 26775                           ;incstack = 0
 26776                           ; Regs used in _I2C1_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 26777                           
 26778                           
 26779                           ;mcc_generated_files/i2c1_master.c: 342:     I2C1_Status.addressNackCheck = 1;
 26780     1F72  0141               	movlb	1	; select bank1
 26781     1F73  143C               	bsf	(_I2C1_Status^(0+128)+28),0
 26782     1F74                     l12694:
 26783                           
 26784                           ;mcc_generated_files/i2c1_master.c: 343:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1 | 1));
 26785     1F74  1403               	setc
 26786     1F75  0D36               	rlf	(_I2C1_Status^(0+128)+22),w
 26787     1F76  319E  2698  319F   	fcall	_I2C1_MasterSendTxData
 26788     1F79                     l12696:
 26789                           
 26790                           ;mcc_generated_files/i2c1_master.c: 344:     return I2C1_RCEN;
 26791     1F79  3005               	movlw	5
 26792     1F7A                     l1805:
 26793     1F7A  0008               	return
 26794     1F7B                     __end_of_I2C1_DO_SEND_ADR_READ:
 26795                           
 26796                           	psect	text132
 26797     1E9D                     __ptext132:	
 26798 ;; *************** function _I2C1_DO_IDLE *****************
 26799 ;; Defined at:
 26800 ;;		line 333 in file "mcc_generated_files/i2c1_master.c"
 26801 ;; Parameters:    Size  Location     Type
 26802 ;;		None
 26803 ;; Auto vars:     Size  Location     Type
 26804 ;;		None
 26805 ;; Return value:  Size  Location     Type
 26806 ;;                  1    wreg      enum E12565
 26807 ;; Registers used:
 26808 ;;		wreg, status,2
 26809 ;; Tracked objects:
 26810 ;;		On entry : 0/0
 26811 ;;		On exit  : 0/0
 26812 ;;		Unchanged: 0/0
 26813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26818 ;;Total ram usage:        0 bytes
 26819 ;; Hardware stack levels used: 1
 26820 ;; Hardware stack levels required when called: 4
 26821 ;; This function calls:
 26822 ;;		Nothing
 26823 ;; This function is called by:
 26824 ;;		_I2C1_MasterFsm
 26825 ;; This function uses a non-reentrant model
 26826 ;;
 26827                           
 26828     1E9D                     _I2C1_DO_IDLE:	
 26829                           ;psect for function _I2C1_DO_IDLE
 26830                           
 26831     1E9D                     l12684:	
 26832                           ;incstack = 0
 26833                           ; Regs used in _I2C1_DO_IDLE: [wreg+status,2]
 26834                           
 26835                           
 26836                           ;mcc_generated_files/i2c1_master.c: 335:     I2C1_Status.busy = 0;
 26837     1E9D  0141               	movlb	1	; select bank1
 26838     1E9E  10BC               	bcf	(_I2C1_Status^(0+128)+28),1
 26839     1E9F                     l12686:
 26840                           
 26841                           ;mcc_generated_files/i2c1_master.c: 336:     I2C1_Status.error = I2C1_NOERR;
 26842     1E9F  01BB               	clrf	(_I2C1_Status^(0+128)+27)
 26843     1EA0                     l12688:
 26844                           
 26845                           ;mcc_generated_files/i2c1_master.c: 337:     return I2C1_RESET;
 26846     1EA0  300E               	movlw	14
 26847     1EA1                     l1802:
 26848     1EA1  0008               	return
 26849     1EA2                     __end_of_I2C1_DO_IDLE:
 26850                           
 26851                           	psect	text133
 26852     15EE                     __ptext133:	
 26853 ;; *************** function _I2C1_DO_TX_EMPTY *****************
 26854 ;; Defined at:
 26855 ;;		line 409 in file "mcc_generated_files/i2c1_master.c"
 26856 ;; Parameters:    Size  Location     Type
 26857 ;;		None
 26858 ;; Auto vars:     Size  Location     Type
 26859 ;;		None
 26860 ;; Return value:  Size  Location     Type
 26861 ;;                  1    wreg      enum E12565
 26862 ;; Registers used:
 26863 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 26864 ;; Tracked objects:
 26865 ;;		On entry : 0/0
 26866 ;;		On exit  : 0/0
 26867 ;;		Unchanged: 0/0
 26868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26871 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26872 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26873 ;;Total ram usage:        2 bytes
 26874 ;; Hardware stack levels used: 1
 26875 ;; Hardware stack levels required when called: 7
 26876 ;; This function calls:
 26877 ;;		NULL
 26878 ;;		_I2C1_CallbackReturnReset
 26879 ;;		_I2C1_CallbackReturnStop
 26880 ;;		_I2C1_DO_SEND_RESTART
 26881 ;;		_I2C1_DO_SEND_STOP
 26882 ;;		_I2C1_MasterSetIrq
 26883 ;;		_rd1RegCompleteHandler
 26884 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1239
 26885 ;;		_rd2RegCompleteHandler
 26886 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1250
 26887 ;;		_rdBlkRegCompleteHandler
 26888 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1273
 26889 ;;		_wr1RegCompleteHandler
 26890 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1256
 26891 ;;		_wr2RegCompleteHandler
 26892 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1262
 26893 ;; This function is called by:
 26894 ;;		_I2C1_MasterFsm
 26895 ;; This function uses a non-reentrant model
 26896 ;;
 26897                           
 26898     15EE                     _I2C1_DO_TX_EMPTY:	
 26899                           ;psect for function _I2C1_DO_TX_EMPTY
 26900                           
 26901     15EE                     l12782:	
 26902                           ;incstack = 0
 26903                           ; Regs used in _I2C1_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 26904                           
 26905                           
 26906                           ;mcc_generated_files/i2c1_master.c: 411:     I2C1_Status.bufferFree = 1;
 26907     15EE  0141               	movlb	1	; select bank1
 26908     15EF  15BC               	bsf	(_I2C1_Status^(0+128)+28),3
 26909                           
 26910                           ;mcc_generated_files/i2c1_master.c: 412:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 26911     15F0  2DFE               	goto	l12800
 26912     15F1                     l12784:
 26913                           
 26914                           ;mcc_generated_files/i2c1_master.c: 416:             return I2C1_DO_SEND_RESTART();
 26915     15F1  319E  26AC  3195   	fcall	_I2C1_DO_SEND_RESTART
 26916     15F4  2E1A               	goto	l1845
 26917     15F5                     l12788:
 26918                           
 26919                           ;mcc_generated_files/i2c1_master.c: 418:             I2C1_MasterSetIrq();
 26920     15F5  319E  2676  3195   	fcall	_I2C1_MasterSetIrq
 26921     15F8                     l12790:
 26922                           
 26923                           ;mcc_generated_files/i2c1_master.c: 419:             return I2C1_TX;
 26924     15F8  3003               	movlw	3
 26925     15F9  2E1A               	goto	l1845
 26926     15FA                     l12794:
 26927                           
 26928                           ;mcc_generated_files/i2c1_master.c: 422:             return I2C1_DO_SEND_STOP();
 26929     15FA  319E  26B1  3195   	fcall	_I2C1_DO_SEND_STOP
 26930     15FD  2E1A               	goto	l1845
 26931     15FE                     l12800:
 26932     15FE  082C               	movf	(low ((_I2C1_Status| 0+12)))^(0+128),w
 26933     15FF  00F8               	movwf	I2C1_CallbackReturnReset@funPtr
 26934     1600  0821               	movf	(_I2C1_Status+1)^(0+128),w
 26935     1601  008A               	movwf	10
 26936     1602  0820               	movf	_I2C1_Status^(0+128),w
 26937     1603  000A               	callw
 26938     1604  3195               	pagesel	$
 26939     1605  00F9               	movwf	??_I2C1_DO_TX_EMPTY
 26940     1606  01FA               	clrf	??_I2C1_DO_TX_EMPTY+1
 26941                           
 26942                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26943                           ; Switch size 1, requested type "simple"
 26944                           ; Number of cases is 1, Range of values is 0 to 0
 26945                           ; switch strategies available:
 26946                           ; Name         Instructions Cycles
 26947                           ; simple_byte            4     3 (average)
 26948                           ; direct_byte            8     6 (fixed)
 26949                           ; jumptable            260     6 (fixed)
 26950                           ;	Chosen strategy is simple_byte
 26951     1607  087A               	movf	??_I2C1_DO_TX_EMPTY+1,w
 26952     1608  3A00               	xorlw	0	; case 0
 26953     1609  1903               	skipnz
 26954     160A  2E0C               	goto	l16650
 26955     160B  2DFA               	goto	l12794
 26956     160C                     l16650:
 26957                           
 26958                           ; Switch size 1, requested type "simple"
 26959                           ; Number of cases is 4, Range of values is 1 to 4
 26960                           ; switch strategies available:
 26961                           ; Name         Instructions Cycles
 26962                           ; simple_byte           13     7 (average)
 26963                           ; direct_byte           17     9 (fixed)
 26964                           ; jumptable            263     9 (fixed)
 26965                           ;	Chosen strategy is simple_byte
 26966     160C  0879               	movf	??_I2C1_DO_TX_EMPTY,w
 26967     160D  3A01               	xorlw	1	; case 1
 26968     160E  1903               	skipnz
 26969     160F  2DFA               	goto	l12794
 26970     1610  3A03               	xorlw	3	; case 2
 26971     1611  1903               	skipnz
 26972     1612  2DF1               	goto	l12784
 26973     1613  3A01               	xorlw	1	; case 3
 26974     1614  1903               	skipnz
 26975     1615  2DF1               	goto	l12784
 26976     1616  3A07               	xorlw	7	; case 4
 26977     1617  1903               	skipnz
 26978     1618  2DF5               	goto	l12788
 26979     1619  2DFA               	goto	l12794
 26980     161A                     l1845:
 26981     161A  0008               	return
 26982     161B                     __end_of_I2C1_DO_TX_EMPTY:
 26983                           
 26984                           	psect	text134
 26985     1E76                     __ptext134:	
 26986 ;; *************** function _I2C1_MasterSetIrq *****************
 26987 ;; Defined at:
 26988 ;;		line 645 in file "mcc_generated_files/i2c1_master.c"
 26989 ;; Parameters:    Size  Location     Type
 26990 ;;		None
 26991 ;; Auto vars:     Size  Location     Type
 26992 ;;		None
 26993 ;; Return value:  Size  Location     Type
 26994 ;;                  1    wreg      void 
 26995 ;; Registers used:
 26996 ;;		None
 26997 ;; Tracked objects:
 26998 ;;		On entry : 0/0
 26999 ;;		On exit  : 0/0
 27000 ;;		Unchanged: 0/0
 27001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27006 ;;Total ram usage:        0 bytes
 27007 ;; Hardware stack levels used: 1
 27008 ;; Hardware stack levels required when called: 4
 27009 ;; This function calls:
 27010 ;;		Nothing
 27011 ;; This function is called by:
 27012 ;;		_I2C1_DO_TX_EMPTY
 27013 ;; This function uses a non-reentrant model
 27014 ;;
 27015                           
 27016     1E76                     _I2C1_MasterSetIrq:	
 27017                           ;psect for function _I2C1_MasterSetIrq
 27018                           
 27019     1E76                     l12672:	
 27020                           ;incstack = 0
 27021                           ; Regs used in _I2C1_MasterSetIrq: []
 27022                           
 27023                           
 27024                           ;mcc_generated_files/i2c1_master.c: 647:     PIR3bits.SSP1IF = 1;
 27025     1E76  014E               	movlb	14	; select bank14
 27026     1E77  140F               	bsf	15,0	;volatile
 27027     1E78                     l1965:
 27028     1E78  0008               	return
 27029     1E79                     __end_of_I2C1_MasterSetIrq:
 27030                           
 27031                           	psect	text135
 27032     1EDE                     __ptext135:	
 27033 ;; *************** function _I2C1_MasterIsNack *****************
 27034 ;; Defined at:
 27035 ;;		line 598 in file "mcc_generated_files/i2c1_master.c"
 27036 ;; Parameters:    Size  Location     Type
 27037 ;;		None
 27038 ;; Auto vars:     Size  Location     Type
 27039 ;;		None
 27040 ;; Return value:  Size  Location     Type
 27041 ;;                  1    wreg      _Bool 
 27042 ;; Registers used:
 27043 ;;		wreg, status,2, status,0
 27044 ;; Tracked objects:
 27045 ;;		On entry : 0/0
 27046 ;;		On exit  : 0/0
 27047 ;;		Unchanged: 0/0
 27048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27053 ;;Total ram usage:        0 bytes
 27054 ;; Hardware stack levels used: 1
 27055 ;; Hardware stack levels required when called: 4
 27056 ;; This function calls:
 27057 ;;		Nothing
 27058 ;; This function is called by:
 27059 ;;		_I2C1_MasterFsm
 27060 ;;		_I2C1_DO_TX
 27061 ;; This function uses a non-reentrant model
 27062 ;;
 27063                           
 27064     1EDE                     _I2C1_MasterIsNack:	
 27065                           ;psect for function _I2C1_MasterIsNack
 27066                           
 27067     1EDE                     l12622:	
 27068                           ;incstack = 0
 27069                           ; Regs used in _I2C1_MasterIsNack: [wreg+status,2+status,0]
 27070                           
 27071                           
 27072                           ;mcc_generated_files/i2c1_master.c: 600:     return SSP1CON2bits.ACKSTAT;
 27073     1EDE  0143               	movlb	3	; select bank3
 27074     1EDF  0E11               	swapf	17,w	;volatile
 27075     1EE0  0C89               	rrf	9,f
 27076     1EE1  0C89               	rrf	9,f
 27077     1EE2  3901               	andlw	1
 27078     1EE3                     l1938:
 27079     1EE3  0008               	return
 27080     1EE4                     __end_of_I2C1_MasterIsNack:
 27081                           
 27082                           	psect	text136
 27083     1E98                     __ptext136:	
 27084 ;; *************** function _I2C1_MasterSendTxData *****************
 27085 ;; Defined at:
 27086 ;;		line 568 in file "mcc_generated_files/i2c1_master.c"
 27087 ;; Parameters:    Size  Location     Type
 27088 ;;  data            1    wreg     unsigned char 
 27089 ;; Auto vars:     Size  Location     Type
 27090 ;;  data            1    1[COMMON] unsigned char 
 27091 ;; Return value:  Size  Location     Type
 27092 ;;                  1    wreg      void 
 27093 ;; Registers used:
 27094 ;;		wreg
 27095 ;; Tracked objects:
 27096 ;;		On entry : 0/0
 27097 ;;		On exit  : 0/0
 27098 ;;		Unchanged: 0/0
 27099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27101 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27103 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27104 ;;Total ram usage:        1 bytes
 27105 ;; Hardware stack levels used: 1
 27106 ;; Hardware stack levels required when called: 4
 27107 ;; This function calls:
 27108 ;;		Nothing
 27109 ;; This function is called by:
 27110 ;;		_I2C1_DO_SEND_ADR_READ
 27111 ;;		_I2C1_DO_SEND_ADR_WRITE
 27112 ;;		_I2C1_DO_TX
 27113 ;; This function uses a non-reentrant model
 27114 ;;
 27115                           
 27116     1E98                     _I2C1_MasterSendTxData:	
 27117                           ;psect for function _I2C1_MasterSendTxData
 27118                           
 27119                           
 27120                           ;incstack = 0
 27121                           ; Regs used in _I2C1_MasterSendTxData: [wreg]
 27122                           ;I2C1_MasterSendTxData@data stored from wreg
 27123     1E98  00F1               	movwf	I2C1_MasterSendTxData@data
 27124     1E99                     l12626:
 27125                           
 27126                           ;mcc_generated_files/i2c1_master.c: 568: static __attribute__((inline)) void I2C1_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c1_master.c: 569: {;mcc_generated_files/i
      +                          2c1_master.c: 570:     SSP1BUF = data;
 27127     1E99  0871               	movf	I2C1_MasterSendTxData@data,w
 27128     1E9A  0143               	movlb	3	; select bank3
 27129     1E9B  008C               	movwf	12	;volatile
 27130     1E9C                     l1920:
 27131     1E9C  0008               	return
 27132     1E9D                     __end_of_I2C1_MasterSendTxData:
 27133                           
 27134                           	psect	text137
 27135     1E90                     __ptext137:	
 27136 ;; *************** function _I2C1_MasterSendAck *****************
 27137 ;; Defined at:
 27138 ;;		line 603 in file "mcc_generated_files/i2c1_master.c"
 27139 ;; Parameters:    Size  Location     Type
 27140 ;;		None
 27141 ;; Auto vars:     Size  Location     Type
 27142 ;;		None
 27143 ;; Return value:  Size  Location     Type
 27144 ;;                  1    wreg      void 
 27145 ;; Registers used:
 27146 ;;		None
 27147 ;; Tracked objects:
 27148 ;;		On entry : 0/0
 27149 ;;		On exit  : 0/0
 27150 ;;		Unchanged: 0/0
 27151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27156 ;;Total ram usage:        0 bytes
 27157 ;; Hardware stack levels used: 1
 27158 ;; Hardware stack levels required when called: 4
 27159 ;; This function calls:
 27160 ;;		Nothing
 27161 ;; This function is called by:
 27162 ;;		_I2C1_DO_RX
 27163 ;;		_I2C1_DO_RX_ACK
 27164 ;; This function uses a non-reentrant model
 27165 ;;
 27166                           
 27167     1E90                     _I2C1_MasterSendAck:	
 27168                           ;psect for function _I2C1_MasterSendAck
 27169                           
 27170     1E90                     l12650:	
 27171                           ;incstack = 0
 27172                           ; Regs used in _I2C1_MasterSendAck: []
 27173                           
 27174                           
 27175                           ;mcc_generated_files/i2c1_master.c: 605:     SSP1CON2bits.ACKDT = 0;
 27176     1E90  0143               	movlb	3	; select bank3
 27177     1E91  1291               	bcf	17,5	;volatile
 27178                           
 27179                           ;mcc_generated_files/i2c1_master.c: 606:     SSP1CON2bits.ACKEN = 1;
 27180     1E92  1611               	bsf	17,4	;volatile
 27181     1E93                     l1941:
 27182     1E93  0008               	return
 27183     1E94                     __end_of_I2C1_MasterSendAck:
 27184                           
 27185                           	psect	text138
 27186     1E73                     __ptext138:	
 27187 ;; *************** function _I2C1_MasterGetRxData *****************
 27188 ;; Defined at:
 27189 ;;		line 563 in file "mcc_generated_files/i2c1_master.c"
 27190 ;; Parameters:    Size  Location     Type
 27191 ;;		None
 27192 ;; Auto vars:     Size  Location     Type
 27193 ;;		None
 27194 ;; Return value:  Size  Location     Type
 27195 ;;                  1    wreg      unsigned char 
 27196 ;; Registers used:
 27197 ;;		wreg
 27198 ;; Tracked objects:
 27199 ;;		On entry : 0/0
 27200 ;;		On exit  : 0/0
 27201 ;;		Unchanged: 0/0
 27202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27207 ;;Total ram usage:        0 bytes
 27208 ;; Hardware stack levels used: 1
 27209 ;; Hardware stack levels required when called: 4
 27210 ;; This function calls:
 27211 ;;		Nothing
 27212 ;; This function is called by:
 27213 ;;		_I2C1_DO_RX
 27214 ;; This function uses a non-reentrant model
 27215 ;;
 27216                           
 27217     1E73                     _I2C1_MasterGetRxData:	
 27218                           ;psect for function _I2C1_MasterGetRxData
 27219                           
 27220     1E73                     l12646:	
 27221                           ;incstack = 0
 27222                           ; Regs used in _I2C1_MasterGetRxData: [wreg]
 27223                           
 27224                           
 27225                           ;mcc_generated_files/i2c1_master.c: 565:     return SSP1BUF;
 27226     1E73  0143               	movlb	3	; select bank3
 27227     1E74  080C               	movf	12,w	;volatile
 27228     1E75                     l1917:
 27229     1E75  0008               	return
 27230     1E76                     __end_of_I2C1_MasterGetRxData:
 27231                           
 27232                           	psect	text139
 27233     1E8C                     __ptext139:	
 27234 ;; *************** function _I2C1_MasterSendNack *****************
 27235 ;; Defined at:
 27236 ;;		line 609 in file "mcc_generated_files/i2c1_master.c"
 27237 ;; Parameters:    Size  Location     Type
 27238 ;;		None
 27239 ;; Auto vars:     Size  Location     Type
 27240 ;;		None
 27241 ;; Return value:  Size  Location     Type
 27242 ;;                  1    wreg      void 
 27243 ;; Registers used:
 27244 ;;		None
 27245 ;; Tracked objects:
 27246 ;;		On entry : 0/0
 27247 ;;		On exit  : 0/0
 27248 ;;		Unchanged: 0/0
 27249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27254 ;;Total ram usage:        0 bytes
 27255 ;; Hardware stack levels used: 1
 27256 ;; Hardware stack levels required when called: 4
 27257 ;; This function calls:
 27258 ;;		Nothing
 27259 ;; This function is called by:
 27260 ;;		_I2C1_DO_RX_NACK_STOP
 27261 ;;		_I2C1_DO_RX_NACK_RESTART
 27262 ;; This function uses a non-reentrant model
 27263 ;;
 27264                           
 27265     1E8C                     _I2C1_MasterSendNack:	
 27266                           ;psect for function _I2C1_MasterSendNack
 27267                           
 27268     1E8C                     l12544:	
 27269                           ;incstack = 0
 27270                           ; Regs used in _I2C1_MasterSendNack: []
 27271                           
 27272                           
 27273                           ;mcc_generated_files/i2c1_master.c: 611:     SSP1CON2bits.ACKDT = 1;
 27274     1E8C  0143               	movlb	3	; select bank3
 27275     1E8D  1691               	bsf	17,5	;volatile
 27276                           
 27277                           ;mcc_generated_files/i2c1_master.c: 612:     SSP1CON2bits.ACKEN = 1;
 27278     1E8E  1611               	bsf	17,4	;volatile
 27279     1E8F                     l1944:
 27280     1E8F  0008               	return
 27281     1E90                     __end_of_I2C1_MasterSendNack:
 27282                           
 27283                           	psect	text140
 27284     1E70                     __ptext140:	
 27285 ;; *************** function _I2C1_MasterStartRx *****************
 27286 ;; Defined at:
 27287 ;;		line 583 in file "mcc_generated_files/i2c1_master.c"
 27288 ;; Parameters:    Size  Location     Type
 27289 ;;		None
 27290 ;; Auto vars:     Size  Location     Type
 27291 ;;		None
 27292 ;; Return value:  Size  Location     Type
 27293 ;;                  1    wreg      void 
 27294 ;; Registers used:
 27295 ;;		None
 27296 ;; Tracked objects:
 27297 ;;		On entry : 0/0
 27298 ;;		On exit  : 0/0
 27299 ;;		Unchanged: 0/0
 27300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27305 ;;Total ram usage:        0 bytes
 27306 ;; Hardware stack levels used: 1
 27307 ;; Hardware stack levels required when called: 4
 27308 ;; This function calls:
 27309 ;;		Nothing
 27310 ;; This function is called by:
 27311 ;;		_I2C1_DO_RCEN
 27312 ;; This function uses a non-reentrant model
 27313 ;;
 27314                           
 27315     1E70                     _I2C1_MasterStartRx:	
 27316                           ;psect for function _I2C1_MasterStartRx
 27317                           
 27318     1E70                     l12664:	
 27319                           ;incstack = 0
 27320                           ; Regs used in _I2C1_MasterStartRx: []
 27321                           
 27322                           
 27323                           ;mcc_generated_files/i2c1_master.c: 585:     SSP1CON2bits.RCEN = 1;
 27324     1E70  0143               	movlb	3	; select bank3
 27325     1E71  1591               	bsf	17,3	;volatile
 27326     1E72                     l1929:
 27327     1E72  0008               	return
 27328     1E73                     __end_of_I2C1_MasterStartRx:
 27329                           
 27330                           	psect	text141
 27331     1E5C                     __ptext141:	
 27332 ;; *************** function _I2C1_CallbackReturnReset *****************
 27333 ;; Defined at:
 27334 ;;		line 525 in file "mcc_generated_files/i2c1_master.c"
 27335 ;; Parameters:    Size  Location     Type
 27336 ;;  funPtr          1    8[COMMON] PTR void 
 27337 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27338 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27339 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27340 ;; Auto vars:     Size  Location     Type
 27341 ;;		None
 27342 ;; Return value:  Size  Location     Type
 27343 ;;                  1    wreg      enum E363
 27344 ;; Registers used:
 27345 ;;		wreg
 27346 ;; Tracked objects:
 27347 ;;		On entry : 0/0
 27348 ;;		On exit  : 0/0
 27349 ;;		Unchanged: 0/0
 27350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27351 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27354 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27355 ;;Total ram usage:        1 bytes
 27356 ;; Hardware stack levels used: 1
 27357 ;; Hardware stack levels required when called: 4
 27358 ;; This function calls:
 27359 ;;		Nothing
 27360 ;; This function is called by:
 27361 ;;		_I2C1_Open
 27362 ;;		_I2C1_DO_TX
 27363 ;;		_I2C1_DO_RX
 27364 ;;		_I2C1_DO_TX_EMPTY
 27365 ;;		_I2C1_DO_ADDRESS_NACK
 27366 ;;		_I2C1_DO_RX_EMPTY
 27367 ;; This function uses a non-reentrant model
 27368 ;;
 27369                           
 27370     1E5C                     _I2C1_CallbackReturnReset:	
 27371                           ;psect for function _I2C1_CallbackReturnReset
 27372                           
 27373     1E5C                     l12678:	
 27374                           ;incstack = 0
 27375                           ; Regs used in _I2C1_CallbackReturnReset: [wreg]
 27376                           
 27377                           
 27378                           ;mcc_generated_files/i2c1_master.c: 525: i2c1_operations_t I2C1_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c1_master.c: 526: {;mcc_generated_files/i2c1_master.c: 5
      +                          27:     return I2C1_RESET_LINK;
 27379     1E5C  3005               	movlw	5
 27380     1E5D                     l1901:
 27381     1E5D  0008               	return
 27382     1E5E                     __end_of_I2C1_CallbackReturnReset:
 27383                           
 27384                           	psect	text142
 27385     1E5A                     __ptext142:	
 27386 ;; *************** function _I2C1_CallbackReturnStop *****************
 27387 ;; Defined at:
 27388 ;;		line 520 in file "mcc_generated_files/i2c1_master.c"
 27389 ;; Parameters:    Size  Location     Type
 27390 ;;  funPtr          1    8[COMMON] PTR void 
 27391 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27392 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27393 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27394 ;; Auto vars:     Size  Location     Type
 27395 ;;		None
 27396 ;; Return value:  Size  Location     Type
 27397 ;;                  1    wreg      enum E363
 27398 ;; Registers used:
 27399 ;;		wreg
 27400 ;; Tracked objects:
 27401 ;;		On entry : 0/0
 27402 ;;		On exit  : 0/0
 27403 ;;		Unchanged: 0/0
 27404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27405 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27408 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27409 ;;Total ram usage:        1 bytes
 27410 ;; Hardware stack levels used: 1
 27411 ;; Hardware stack levels required when called: 4
 27412 ;; This function calls:
 27413 ;;		Nothing
 27414 ;; This function is called by:
 27415 ;;		_I2C1_Open
 27416 ;;		_I2C1_SetCallback
 27417 ;;		_I2C1_DO_TX
 27418 ;;		_I2C1_DO_RX
 27419 ;;		_I2C1_DO_TX_EMPTY
 27420 ;;		_I2C1_DO_ADDRESS_NACK
 27421 ;;		_I2C1_DO_RX_EMPTY
 27422 ;; This function uses a non-reentrant model
 27423 ;;
 27424                           
 27425     1E5A                     _I2C1_CallbackReturnStop:	
 27426                           ;psect for function _I2C1_CallbackReturnStop
 27427                           
 27428     1E5A                     l12674:	
 27429                           ;incstack = 0
 27430                           ; Regs used in _I2C1_CallbackReturnStop: [wreg]
 27431                           
 27432                           
 27433                           ;mcc_generated_files/i2c1_master.c: 520: i2c1_operations_t I2C1_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c1_master.c: 521: {;mcc_generated_files/i2c1_master.c: 52
      +                          2:     return I2C1_STOP;
 27434     1E5A  3001               	movlw	1
 27435     1E5B                     l1898:
 27436     1E5B  0008               	return
 27437     1E5C                     __end_of_I2C1_CallbackReturnStop:
 27438                           
 27439                           	psect	text143
 27440     1263                     __ptext143:	
 27441 ;; *************** function _rdBlkRegCompleteHandler@i2c1_master_example$F1273 *****************
 27442 ;; Defined at:
 27443 ;;		line 170 in file "mcc_generated_files/examples/i2c1_master_example.c"
 27444 ;; Parameters:    Size  Location     Type
 27445 ;;  ptr             1    8[COMMON] PTR void 
 27446 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27447 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27448 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27449 ;; Auto vars:     Size  Location     Type
 27450 ;;		None
 27451 ;; Return value:  Size  Location     Type
 27452 ;;                  1    wreg      enum E363
 27453 ;; Registers used:
 27454 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27455 ;; Tracked objects:
 27456 ;;		On entry : 0/0
 27457 ;;		On exit  : 0/0
 27458 ;;		Unchanged: 0/0
 27459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27460 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27463 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27464 ;;Total ram usage:        1 bytes
 27465 ;; Hardware stack levels used: 1
 27466 ;; Hardware stack levels required when called: 6
 27467 ;; This function calls:
 27468 ;;		_I2C1_SetBuffer
 27469 ;;		_I2C1_SetDataCompleteCallback
 27470 ;; This function is called by:
 27471 ;;		_I2C1_ReadDataBlock
 27472 ;;		_I2C1_DO_TX
 27473 ;;		_I2C1_DO_RX
 27474 ;;		_I2C1_DO_TX_EMPTY
 27475 ;;		_I2C1_DO_ADDRESS_NACK
 27476 ;;		_I2C1_DO_RX_EMPTY
 27477 ;; This function uses a non-reentrant model
 27478 ;;
 27479                           
 27480     1263                     _rdBlkRegCompleteHandler@i2c1_master_example$F1273:	
 27481                           ;psect for function _rdBlkRegCompleteHandler@i2c1_master_example$F1273
 27482                           
 27483     1263                     l12616:	
 27484                           ;incstack = 0
 27485                           ; Regs used in _rdBlkRegCompleteHandler@i2c1_master_example$F1273: [wreg+fsr1l+fsr1h+sta
      +                          tus,2+status,0+pclath+cstack]
 27486                           
 27487                           
 27488                           ;mcc_generated_files/examples/i2c1_master_example.c: 170: static i2c1_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 171: {
      +                          ;mcc_generated_files/examples/i2c1_master_example.c: 172:     I2C1_SetBuffer(((i2c1_buff
      +                          er_t *)ptr)->data,((i2c1_buffer_t*)ptr)->len);
 27489     1263  0878               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F1273@ptr,w
 27490     1264  0086               	movwf	6
 27491     1265  0187               	clrf	7
 27492     1266  3F40               	moviw [0]fsr1
 27493     1267  00F1               	movwf	I2C1_SetBuffer@bufferSize
 27494     1268  3F41               	moviw [1]fsr1
 27495     1269  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 27496     126A  0878               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F1273@ptr,w
 27497     126B  3E02               	addlw	2
 27498     126C  0086               	movwf	6
 27499     126D  0187               	clrf	7
 27500     126E  0801               	movf	1,w
 27501     126F  3190  204A  3192   	fcall	_I2C1_SetBuffer
 27502                           
 27503                           ;mcc_generated_files/examples/i2c1_master_example.c: 173:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 27504     1272  3000               	movlw	0
 27505     1273  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27506     1274  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27507     1275  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27508     1276  319F  27C8  3192   	fcall	_I2C1_SetDataCompleteCallback
 27509     1279                     l12618:
 27510                           
 27511                           ;mcc_generated_files/examples/i2c1_master_example.c: 174:     return I2C1_RESTART_READ;
 27512     1279  3002               	movlw	2
 27513     127A                     l742:
 27514     127A  0008               	return
 27515     127B                     __end_of_rdBlkRegCompleteHandler@i2c1_master_example$F1273:
 27516                           
 27517                           	psect	text144
 27518     1119                     __ptext144:	
 27519 ;; *************** function _wr1RegCompleteHandler@i2c1_master_example$F1256 *****************
 27520 ;; Defined at:
 27521 ;;		line 156 in file "mcc_generated_files/examples/i2c1_master_example.c"
 27522 ;; Parameters:    Size  Location     Type
 27523 ;;  ptr             1    8[COMMON] PTR void 
 27524 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27525 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27526 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27527 ;; Auto vars:     Size  Location     Type
 27528 ;;		None
 27529 ;; Return value:  Size  Location     Type
 27530 ;;                  1    wreg      enum E363
 27531 ;; Registers used:
 27532 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27533 ;; Tracked objects:
 27534 ;;		On entry : 0/0
 27535 ;;		On exit  : 0/0
 27536 ;;		Unchanged: 0/0
 27537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27538 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27541 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27542 ;;Total ram usage:        1 bytes
 27543 ;; Hardware stack levels used: 1
 27544 ;; Hardware stack levels required when called: 6
 27545 ;; This function calls:
 27546 ;;		_I2C1_SetBuffer
 27547 ;;		_I2C1_SetDataCompleteCallback
 27548 ;; This function is called by:
 27549 ;;		_I2C1_Write1ByteRegister
 27550 ;;		_I2C1_DO_TX
 27551 ;;		_I2C1_DO_RX
 27552 ;;		_I2C1_DO_TX_EMPTY
 27553 ;;		_I2C1_DO_ADDRESS_NACK
 27554 ;;		_I2C1_DO_RX_EMPTY
 27555 ;; This function uses a non-reentrant model
 27556 ;;
 27557                           
 27558     1119                     _wr1RegCompleteHandler@i2c1_master_example$F1256:	
 27559                           ;psect for function _wr1RegCompleteHandler@i2c1_master_example$F1256
 27560                           
 27561     1119                     l12600:	
 27562                           ;incstack = 0
 27563                           ; Regs used in _wr1RegCompleteHandler@i2c1_master_example$F1256: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 27564                           
 27565                           
 27566                           ;mcc_generated_files/examples/i2c1_master_example.c: 156: static i2c1_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 157: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 158:     I2C1_SetBuffer(ptr,1);
 27567     1119  3001               	movlw	1
 27568     111A  00F1               	movwf	I2C1_SetBuffer@bufferSize
 27569     111B  3000               	movlw	0
 27570     111C  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 27571     111D  0878               	movf	wr1RegCompleteHandler@i2c1_master_example$F1256@ptr,w
 27572     111E  3190  204A  3191   	fcall	_I2C1_SetBuffer
 27573     1121                     l12602:
 27574                           
 27575                           ;mcc_generated_files/examples/i2c1_master_example.c: 159:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 27576     1121  3000               	movlw	0
 27577     1122  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27578     1123  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27579     1124  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27580     1125  319F  27C8  3191   	fcall	_I2C1_SetDataCompleteCallback
 27581     1128                     l12604:
 27582                           
 27583                           ;mcc_generated_files/examples/i2c1_master_example.c: 160:     return I2C1_CONTINUE;
 27584     1128  3004               	movlw	4
 27585     1129                     l736:
 27586     1129  0008               	return
 27587     112A                     __end_of_wr1RegCompleteHandler@i2c1_master_example$F1256:
 27588                           
 27589                           	psect	text145
 27590     1108                     __ptext145:	
 27591 ;; *************** function _rd2RegCompleteHandler@i2c1_master_example$F1250 *****************
 27592 ;; Defined at:
 27593 ;;		line 149 in file "mcc_generated_files/examples/i2c1_master_example.c"
 27594 ;; Parameters:    Size  Location     Type
 27595 ;;  ptr             1    8[COMMON] PTR void 
 27596 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27597 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27598 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27599 ;; Auto vars:     Size  Location     Type
 27600 ;;		None
 27601 ;; Return value:  Size  Location     Type
 27602 ;;                  1    wreg      enum E363
 27603 ;; Registers used:
 27604 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27605 ;; Tracked objects:
 27606 ;;		On entry : 0/0
 27607 ;;		On exit  : 0/0
 27608 ;;		Unchanged: 0/0
 27609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27610 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27613 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27614 ;;Total ram usage:        1 bytes
 27615 ;; Hardware stack levels used: 1
 27616 ;; Hardware stack levels required when called: 6
 27617 ;; This function calls:
 27618 ;;		_I2C1_SetBuffer
 27619 ;;		_I2C1_SetDataCompleteCallback
 27620 ;; This function is called by:
 27621 ;;		_I2C1_Read2ByteRegister
 27622 ;;		_I2C1_DO_TX
 27623 ;;		_I2C1_DO_RX
 27624 ;;		_I2C1_DO_TX_EMPTY
 27625 ;;		_I2C1_DO_ADDRESS_NACK
 27626 ;;		_I2C1_DO_RX_EMPTY
 27627 ;; This function uses a non-reentrant model
 27628 ;;
 27629                           
 27630     1108                     _rd2RegCompleteHandler@i2c1_master_example$F1250:	
 27631                           ;psect for function _rd2RegCompleteHandler@i2c1_master_example$F1250
 27632                           
 27633     1108                     l12592:	
 27634                           ;incstack = 0
 27635                           ; Regs used in _rd2RegCompleteHandler@i2c1_master_example$F1250: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 27636                           
 27637                           
 27638                           ;mcc_generated_files/examples/i2c1_master_example.c: 149: static i2c1_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 150: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 151:     I2C1_SetBuffer(ptr,2);
 27639     1108  3002               	movlw	2
 27640     1109  00F1               	movwf	I2C1_SetBuffer@bufferSize
 27641     110A  3000               	movlw	0
 27642     110B  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 27643     110C  0878               	movf	rd2RegCompleteHandler@i2c1_master_example$F1250@ptr,w
 27644     110D  3190  204A  3191   	fcall	_I2C1_SetBuffer
 27645     1110                     l12594:
 27646                           
 27647                           ;mcc_generated_files/examples/i2c1_master_example.c: 152:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 27648     1110  3000               	movlw	0
 27649     1111  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27650     1112  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27651     1113  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27652     1114  319F  27C8  3191   	fcall	_I2C1_SetDataCompleteCallback
 27653     1117                     l12596:
 27654                           
 27655                           ;mcc_generated_files/examples/i2c1_master_example.c: 153:     return I2C1_RESTART_READ;
 27656     1117  3002               	movlw	2
 27657     1118                     l733:
 27658     1118  0008               	return
 27659     1119                     __end_of_rd2RegCompleteHandler@i2c1_master_example$F1250:
 27660                           
 27661                           	psect	text146
 27662     10F7                     __ptext146:	
 27663 ;; *************** function _rd1RegCompleteHandler@i2c1_master_example$F1239 *****************
 27664 ;; Defined at:
 27665 ;;		line 142 in file "mcc_generated_files/examples/i2c1_master_example.c"
 27666 ;; Parameters:    Size  Location     Type
 27667 ;;  ptr             1    8[COMMON] PTR void 
 27668 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27669 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27670 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27671 ;; Auto vars:     Size  Location     Type
 27672 ;;		None
 27673 ;; Return value:  Size  Location     Type
 27674 ;;                  1    wreg      enum E363
 27675 ;; Registers used:
 27676 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27677 ;; Tracked objects:
 27678 ;;		On entry : 0/0
 27679 ;;		On exit  : 0/0
 27680 ;;		Unchanged: 0/0
 27681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27682 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27685 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27686 ;;Total ram usage:        1 bytes
 27687 ;; Hardware stack levels used: 1
 27688 ;; Hardware stack levels required when called: 6
 27689 ;; This function calls:
 27690 ;;		_I2C1_SetBuffer
 27691 ;;		_I2C1_SetDataCompleteCallback
 27692 ;; This function is called by:
 27693 ;;		_I2C1_Read1ByteRegister
 27694 ;;		_I2C1_DO_TX
 27695 ;;		_I2C1_DO_RX
 27696 ;;		_I2C1_DO_TX_EMPTY
 27697 ;;		_I2C1_DO_ADDRESS_NACK
 27698 ;;		_I2C1_DO_RX_EMPTY
 27699 ;; This function uses a non-reentrant model
 27700 ;;
 27701                           
 27702     10F7                     _rd1RegCompleteHandler@i2c1_master_example$F1239:	
 27703                           ;psect for function _rd1RegCompleteHandler@i2c1_master_example$F1239
 27704                           
 27705     10F7                     l12584:	
 27706                           ;incstack = 0
 27707                           ; Regs used in _rd1RegCompleteHandler@i2c1_master_example$F1239: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 27708                           
 27709                           
 27710                           ;mcc_generated_files/examples/i2c1_master_example.c: 142: static i2c1_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 143: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 144:     I2C1_SetBuffer(ptr,1);
 27711     10F7  3001               	movlw	1
 27712     10F8  00F1               	movwf	I2C1_SetBuffer@bufferSize
 27713     10F9  3000               	movlw	0
 27714     10FA  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 27715     10FB  0878               	movf	rd1RegCompleteHandler@i2c1_master_example$F1239@ptr,w
 27716     10FC  3190  204A  3190   	fcall	_I2C1_SetBuffer
 27717     10FF                     l12586:
 27718                           
 27719                           ;mcc_generated_files/examples/i2c1_master_example.c: 145:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 27720     10FF  3000               	movlw	0
 27721     1100  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27722     1101  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27723     1102  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27724     1103  319F  27C8  3190   	fcall	_I2C1_SetDataCompleteCallback
 27725     1106                     l12588:
 27726                           
 27727                           ;mcc_generated_files/examples/i2c1_master_example.c: 146:     return I2C1_RESTART_READ;
 27728     1106  3002               	movlw	2
 27729     1107                     l730:
 27730     1107  0008               	return
 27731     1108                     __end_of_rd1RegCompleteHandler@i2c1_master_example$F1239:
 27732                           
 27733                           	psect	text147
 27734     124B                     __ptext147:	
 27735 ;; *************** function _rdBlkRegCompleteHandler *****************
 27736 ;; Defined at:
 27737 ;;		line 185 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 27738 ;; Parameters:    Size  Location     Type
 27739 ;;  p               1    8[COMMON] PTR void 
 27740 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27741 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27742 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27743 ;; Auto vars:     Size  Location     Type
 27744 ;;		None
 27745 ;; Return value:  Size  Location     Type
 27746 ;;                  1    wreg      enum E363
 27747 ;; Registers used:
 27748 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27749 ;; Tracked objects:
 27750 ;;		On entry : 0/0
 27751 ;;		On exit  : 0/0
 27752 ;;		Unchanged: 0/0
 27753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27754 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27757 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27758 ;;Total ram usage:        1 bytes
 27759 ;; Hardware stack levels used: 1
 27760 ;; Hardware stack levels required when called: 6
 27761 ;; This function calls:
 27762 ;;		_I2C1_SetBuffer
 27763 ;;		_I2C1_SetDataCompleteCallback
 27764 ;; This function is called by:
 27765 ;;		_i2c_readDataBlock
 27766 ;;		_I2C1_DO_TX
 27767 ;;		_I2C1_DO_RX
 27768 ;;		_I2C1_DO_TX_EMPTY
 27769 ;;		_I2C1_DO_ADDRESS_NACK
 27770 ;;		_I2C1_DO_RX_EMPTY
 27771 ;; This function uses a non-reentrant model
 27772 ;;
 27773                           
 27774     124B                     _rdBlkRegCompleteHandler:	
 27775                           ;psect for function _rdBlkRegCompleteHandler
 27776                           
 27777     124B                     l12578:	
 27778                           ;incstack = 0
 27779                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 27780                           
 27781                           
 27782                           ;mcc_generated_files/drivers/i2c_simple_master.c: 185: static i2c1_operations_t rdBlkReg
      +                          CompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 186: {;mcc_gen
      +                          erated_files/drivers/i2c_simple_master.c: 187:     I2C1_SetBuffer(((buf_t *)p)->data,((b
      +                          uf_t*)p)->len);
 27783     124B  0878               	movf	rdBlkRegCompleteHandler@p,w
 27784     124C  0086               	movwf	6
 27785     124D  0187               	clrf	7
 27786     124E  3F40               	moviw [0]fsr1
 27787     124F  00F1               	movwf	I2C1_SetBuffer@bufferSize
 27788     1250  3F41               	moviw [1]fsr1
 27789     1251  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 27790     1252  0878               	movf	rdBlkRegCompleteHandler@p,w
 27791     1253  3E02               	addlw	2
 27792     1254  0086               	movwf	6
 27793     1255  0187               	clrf	7
 27794     1256  0801               	movf	1,w
 27795     1257  3190  204A  3192   	fcall	_I2C1_SetBuffer
 27796                           
 27797                           ;mcc_generated_files/drivers/i2c_simple_master.c: 188:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 27798     125A  3000               	movlw	0
 27799     125B  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27800     125C  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27801     125D  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27802     125E  319F  27C8  3192   	fcall	_I2C1_SetDataCompleteCallback
 27803     1261                     l12580:
 27804                           
 27805                           ;mcc_generated_files/drivers/i2c_simple_master.c: 189:     return I2C1_RESTART_READ;
 27806     1261  3002               	movlw	2
 27807     1262                     l561:
 27808     1262  0008               	return
 27809     1263                     __end_of_rdBlkRegCompleteHandler:
 27810                           
 27811                           	psect	text148
 27812     10E6                     __ptext148:	
 27813 ;; *************** function _wr2RegCompleteHandler *****************
 27814 ;; Defined at:
 27815 ;;		line 151 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 27816 ;; Parameters:    Size  Location     Type
 27817 ;;  p               1    8[COMMON] PTR void 
 27818 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27819 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27820 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27821 ;; Auto vars:     Size  Location     Type
 27822 ;;		None
 27823 ;; Return value:  Size  Location     Type
 27824 ;;                  1    wreg      enum E363
 27825 ;; Registers used:
 27826 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27827 ;; Tracked objects:
 27828 ;;		On entry : 0/0
 27829 ;;		On exit  : 0/0
 27830 ;;		Unchanged: 0/0
 27831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27832 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27835 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27836 ;;Total ram usage:        1 bytes
 27837 ;; Hardware stack levels used: 1
 27838 ;; Hardware stack levels required when called: 6
 27839 ;; This function calls:
 27840 ;;		_I2C1_SetBuffer
 27841 ;;		_I2C1_SetDataCompleteCallback
 27842 ;; This function is called by:
 27843 ;;		_i2c_write2ByteRegister
 27844 ;;		_I2C1_DO_TX
 27845 ;;		_I2C1_DO_RX
 27846 ;;		_I2C1_DO_TX_EMPTY
 27847 ;;		_I2C1_DO_ADDRESS_NACK
 27848 ;;		_I2C1_DO_RX_EMPTY
 27849 ;; This function uses a non-reentrant model
 27850 ;;
 27851                           
 27852     10E6                     _wr2RegCompleteHandler:	
 27853                           ;psect for function _wr2RegCompleteHandler
 27854                           
 27855     10E6                     l12570:	
 27856                           ;incstack = 0
 27857                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 27858                           
 27859                           
 27860                           ;mcc_generated_files/drivers/i2c_simple_master.c: 151: static i2c1_operations_t wr2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 152: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 153:     I2C1_SetBuffer(p,2);
 27861     10E6  3002               	movlw	2
 27862     10E7  00F1               	movwf	I2C1_SetBuffer@bufferSize
 27863     10E8  3000               	movlw	0
 27864     10E9  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 27865     10EA  0878               	movf	wr2RegCompleteHandler@p,w
 27866     10EB  3190  204A  3190   	fcall	_I2C1_SetBuffer
 27867     10EE                     l12572:
 27868                           
 27869                           ;mcc_generated_files/drivers/i2c_simple_master.c: 154:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 27870     10EE  3000               	movlw	0
 27871     10EF  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27872     10F0  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27873     10F1  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27874     10F2  319F  27C8  3190   	fcall	_I2C1_SetDataCompleteCallback
 27875     10F5                     l12574:
 27876                           
 27877                           ;mcc_generated_files/drivers/i2c_simple_master.c: 155:     return I2C1_CONTINUE;
 27878     10F5  3004               	movlw	4
 27879     10F6                     l549:
 27880     10F6  0008               	return
 27881     10F7                     __end_of_wr2RegCompleteHandler:
 27882                           
 27883                           	psect	text149
 27884     10D5                     __ptext149:	
 27885 ;; *************** function _rd2RegCompleteHandler *****************
 27886 ;; Defined at:
 27887 ;;		line 119 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 27888 ;; Parameters:    Size  Location     Type
 27889 ;;  p               1    8[COMMON] PTR void 
 27890 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27891 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27892 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27893 ;; Auto vars:     Size  Location     Type
 27894 ;;		None
 27895 ;; Return value:  Size  Location     Type
 27896 ;;                  1    wreg      enum E363
 27897 ;; Registers used:
 27898 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27899 ;; Tracked objects:
 27900 ;;		On entry : 0/0
 27901 ;;		On exit  : 0/0
 27902 ;;		Unchanged: 0/0
 27903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27904 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27907 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27908 ;;Total ram usage:        1 bytes
 27909 ;; Hardware stack levels used: 1
 27910 ;; Hardware stack levels required when called: 6
 27911 ;; This function calls:
 27912 ;;		_I2C1_SetBuffer
 27913 ;;		_I2C1_SetDataCompleteCallback
 27914 ;; This function is called by:
 27915 ;;		_i2c_read2ByteRegister
 27916 ;;		_I2C1_DO_TX
 27917 ;;		_I2C1_DO_RX
 27918 ;;		_I2C1_DO_TX_EMPTY
 27919 ;;		_I2C1_DO_ADDRESS_NACK
 27920 ;;		_I2C1_DO_RX_EMPTY
 27921 ;; This function uses a non-reentrant model
 27922 ;;
 27923                           
 27924     10D5                     _rd2RegCompleteHandler:	
 27925                           ;psect for function _rd2RegCompleteHandler
 27926                           
 27927     10D5                     l12562:	
 27928                           ;incstack = 0
 27929                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 27930                           
 27931                           
 27932                           ;mcc_generated_files/drivers/i2c_simple_master.c: 119: static i2c1_operations_t rd2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 120: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 121:     I2C1_SetBuffer(p,2);
 27933     10D5  3002               	movlw	2
 27934     10D6  00F1               	movwf	I2C1_SetBuffer@bufferSize
 27935     10D7  3000               	movlw	0
 27936     10D8  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 27937     10D9  0878               	movf	rd2RegCompleteHandler@p,w
 27938     10DA  3190  204A  3190   	fcall	_I2C1_SetBuffer
 27939     10DD                     l12564:
 27940                           
 27941                           ;mcc_generated_files/drivers/i2c_simple_master.c: 122:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 27942     10DD  3000               	movlw	0
 27943     10DE  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27944     10DF  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27945     10E0  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27946     10E1  319F  27C8  3190   	fcall	_I2C1_SetDataCompleteCallback
 27947     10E4                     l12566:
 27948                           
 27949                           ;mcc_generated_files/drivers/i2c_simple_master.c: 123:     return I2C1_RESTART_READ;
 27950     10E4  3002               	movlw	2
 27951     10E5                     l537:
 27952     10E5  0008               	return
 27953     10E6                     __end_of_rd2RegCompleteHandler:
 27954                           
 27955                           	psect	text150
 27956     10C4                     __ptext150:	
 27957 ;; *************** function _rd1RegCompleteHandler *****************
 27958 ;; Defined at:
 27959 ;;		line 81 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 27960 ;; Parameters:    Size  Location     Type
 27961 ;;  p               1    8[COMMON] PTR void 
 27962 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27963 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27964 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27965 ;; Auto vars:     Size  Location     Type
 27966 ;;		None
 27967 ;; Return value:  Size  Location     Type
 27968 ;;                  1    wreg      enum E363
 27969 ;; Registers used:
 27970 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27971 ;; Tracked objects:
 27972 ;;		On entry : 0/0
 27973 ;;		On exit  : 0/0
 27974 ;;		Unchanged: 0/0
 27975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27976 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27979 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27980 ;;Total ram usage:        1 bytes
 27981 ;; Hardware stack levels used: 1
 27982 ;; Hardware stack levels required when called: 6
 27983 ;; This function calls:
 27984 ;;		_I2C1_SetBuffer
 27985 ;;		_I2C1_SetDataCompleteCallback
 27986 ;; This function is called by:
 27987 ;;		_i2c_read1ByteRegister
 27988 ;;		_I2C1_DO_TX
 27989 ;;		_I2C1_DO_RX
 27990 ;;		_I2C1_DO_TX_EMPTY
 27991 ;;		_I2C1_DO_ADDRESS_NACK
 27992 ;;		_I2C1_DO_RX_EMPTY
 27993 ;; This function uses a non-reentrant model
 27994 ;;
 27995                           
 27996     10C4                     _rd1RegCompleteHandler:	
 27997                           ;psect for function _rd1RegCompleteHandler
 27998                           
 27999     10C4                     l12554:	
 28000                           ;incstack = 0
 28001                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 28002                           
 28003                           
 28004                           ;mcc_generated_files/drivers/i2c_simple_master.c: 81: static i2c1_operations_t rd1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 82: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 83:     I2C1_SetBuffer(p,1);
 28005     10C4  3001               	movlw	1
 28006     10C5  00F1               	movwf	I2C1_SetBuffer@bufferSize
 28007     10C6  3000               	movlw	0
 28008     10C7  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 28009     10C8  0878               	movf	rd1RegCompleteHandler@p,w
 28010     10C9  3190  204A  3190   	fcall	_I2C1_SetBuffer
 28011     10CC                     l12556:
 28012                           
 28013                           ;mcc_generated_files/drivers/i2c_simple_master.c: 84:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 28014     10CC  3000               	movlw	0
 28015     10CD  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 28016     10CE  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 28017     10CF  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 28018     10D0  319F  27C8  3190   	fcall	_I2C1_SetDataCompleteCallback
 28019     10D3                     l12558:
 28020                           
 28021                           ;mcc_generated_files/drivers/i2c_simple_master.c: 85:     return I2C1_RESTART_READ;
 28022     10D3  3002               	movlw	2
 28023     10D4                     l522:
 28024     10D4  0008               	return
 28025     10D5                     __end_of_rd1RegCompleteHandler:
 28026                           
 28027                           	psect	text151
 28028     10B3                     __ptext151:	
 28029 ;; *************** function _wr1RegCompleteHandler *****************
 28030 ;; Defined at:
 28031 ;;		line 34 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 28032 ;; Parameters:    Size  Location     Type
 28033 ;;  p               1    8[COMMON] PTR void 
 28034 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 28035 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 28036 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 28037 ;; Auto vars:     Size  Location     Type
 28038 ;;		None
 28039 ;; Return value:  Size  Location     Type
 28040 ;;                  1    wreg      enum E363
 28041 ;; Registers used:
 28042 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 28043 ;; Tracked objects:
 28044 ;;		On entry : 0/0
 28045 ;;		On exit  : 0/0
 28046 ;;		Unchanged: 0/0
 28047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28048 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28051 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28052 ;;Total ram usage:        1 bytes
 28053 ;; Hardware stack levels used: 1
 28054 ;; Hardware stack levels required when called: 6
 28055 ;; This function calls:
 28056 ;;		_I2C1_SetBuffer
 28057 ;;		_I2C1_SetDataCompleteCallback
 28058 ;; This function is called by:
 28059 ;;		_i2c_write1ByteRegister
 28060 ;;		_I2C1_DO_TX
 28061 ;;		_I2C1_DO_RX
 28062 ;;		_I2C1_DO_TX_EMPTY
 28063 ;;		_I2C1_DO_ADDRESS_NACK
 28064 ;;		_I2C1_DO_RX_EMPTY
 28065 ;; This function uses a non-reentrant model
 28066 ;;
 28067                           
 28068     10B3                     _wr1RegCompleteHandler:	
 28069                           ;psect for function _wr1RegCompleteHandler
 28070                           
 28071     10B3                     l12546:	
 28072                           ;incstack = 0
 28073                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 28074                           
 28075                           
 28076                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34: static i2c1_operations_t wr1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 35: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 36:     I2C1_SetBuffer(p,1);
 28077     10B3  3001               	movlw	1
 28078     10B4  00F1               	movwf	I2C1_SetBuffer@bufferSize
 28079     10B5  3000               	movlw	0
 28080     10B6  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 28081     10B7  0878               	movf	wr1RegCompleteHandler@p,w
 28082     10B8  3190  204A  3190   	fcall	_I2C1_SetBuffer
 28083     10BB                     l12548:
 28084                           
 28085                           ;mcc_generated_files/drivers/i2c_simple_master.c: 37:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 28086     10BB  3000               	movlw	0
 28087     10BC  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 28088     10BD  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 28089     10BE  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 28090     10BF  319F  27C8  3190   	fcall	_I2C1_SetDataCompleteCallback
 28091     10C2                     l12550:
 28092                           
 28093                           ;mcc_generated_files/drivers/i2c_simple_master.c: 38:     return I2C1_CONTINUE;
 28094     10C2  3004               	movlw	4
 28095     10C3                     l501:
 28096     10C3  0008               	return
 28097     10C4                     __end_of_wr1RegCompleteHandler:
 28098                           
 28099                           	psect	text152
 28100     10A2                     __ptext152:	
 28101 ;; *************** function _wr2RegCompleteHandler@i2c1_master_example$F1262 *****************
 28102 ;; Defined at:
 28103 ;;		line 163 in file "mcc_generated_files/examples/i2c1_master_example.c"
 28104 ;; Parameters:    Size  Location     Type
 28105 ;;  ptr             1    8[COMMON] PTR void 
 28106 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 28107 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 28108 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 28109 ;; Auto vars:     Size  Location     Type
 28110 ;;		None
 28111 ;; Return value:  Size  Location     Type
 28112 ;;                  1    wreg      enum E363
 28113 ;; Registers used:
 28114 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 28115 ;; Tracked objects:
 28116 ;;		On entry : 0/0
 28117 ;;		On exit  : 0/0
 28118 ;;		Unchanged: 0/0
 28119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28120 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28123 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28124 ;;Total ram usage:        1 bytes
 28125 ;; Hardware stack levels used: 1
 28126 ;; Hardware stack levels required when called: 6
 28127 ;; This function calls:
 28128 ;;		_I2C1_SetBuffer
 28129 ;;		_I2C1_SetDataCompleteCallback
 28130 ;; This function is called by:
 28131 ;;		_I2C1_Write2ByteRegister
 28132 ;;		_I2C1_DO_TX
 28133 ;;		_I2C1_DO_RX
 28134 ;;		_I2C1_DO_TX_EMPTY
 28135 ;;		_I2C1_DO_ADDRESS_NACK
 28136 ;;		_I2C1_DO_RX_EMPTY
 28137 ;; This function uses a non-reentrant model
 28138 ;;
 28139                           
 28140     10A2                     _wr2RegCompleteHandler@i2c1_master_example$F1262:	
 28141                           ;psect for function _wr2RegCompleteHandler@i2c1_master_example$F1262
 28142                           
 28143     10A2                     l12608:	
 28144                           ;incstack = 0
 28145                           ; Regs used in _wr2RegCompleteHandler@i2c1_master_example$F1262: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 28146                           
 28147                           
 28148                           ;mcc_generated_files/examples/i2c1_master_example.c: 163: static i2c1_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 164: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 165:     I2C1_SetBuffer(ptr,2);
 28149     10A2  3002               	movlw	2
 28150     10A3  00F1               	movwf	I2C1_SetBuffer@bufferSize
 28151     10A4  3000               	movlw	0
 28152     10A5  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 28153     10A6  0878               	movf	wr2RegCompleteHandler@i2c1_master_example$F1262@ptr,w
 28154     10A7  3190  204A  3190   	fcall	_I2C1_SetBuffer
 28155     10AA                     l12610:
 28156                           
 28157                           ;mcc_generated_files/examples/i2c1_master_example.c: 166:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 28158     10AA  3000               	movlw	0
 28159     10AB  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 28160     10AC  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 28161     10AD  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 28162     10AE  319F  27C8  3190   	fcall	_I2C1_SetDataCompleteCallback
 28163     10B1                     l12612:
 28164                           
 28165                           ;mcc_generated_files/examples/i2c1_master_example.c: 167:     return I2C1_CONTINUE;
 28166     10B1  3004               	movlw	4
 28167     10B2                     l739:
 28168     10B2  0008               	return
 28169     10B3                     __end_of_wr2RegCompleteHandler@i2c1_master_example$F1262:
 28170                           
 28171                           	psect	text153
 28172     1FC8                     __ptext153:	
 28173 ;; *************** function _I2C1_SetDataCompleteCallback *****************
 28174 ;; Defined at:
 28175 ;;		line 273 in file "mcc_generated_files/i2c1_master.c"
 28176 ;; Parameters:    Size  Location     Type
 28177 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 28178 ;;		 -> rdBlkRegCompleteHandler@i2c1_master_example$F1273(1), wr2RegCompleteHandler@i2c1_master_example$F1262(1), wr1Reg
      +CompleteHandler@i2c1_master_example$F1256(1), rd2RegCompleteHandler@i2c1_master_example$F1250(1), 
 28179 ;;		 -> rd1RegCompleteHandler@i2c1_master_example$F1239(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2Reg
      +CompleteHandler(1), 
 28180 ;;		 -> rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), NULL(1), 
 28181 ;;  ptr             1    7[COMMON] PTR void 
 28182 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 28183 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 28184 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 28185 ;; Auto vars:     Size  Location     Type
 28186 ;;		None
 28187 ;; Return value:  Size  Location     Type
 28188 ;;                  1    wreg      void 
 28189 ;; Registers used:
 28190 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 28191 ;; Tracked objects:
 28192 ;;		On entry : 0/0
 28193 ;;		On exit  : 0/0
 28194 ;;		Unchanged: 0/0
 28195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28196 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28199 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28200 ;;Total ram usage:        3 bytes
 28201 ;; Hardware stack levels used: 1
 28202 ;; Hardware stack levels required when called: 5
 28203 ;; This function calls:
 28204 ;;		_I2C1_SetCallback
 28205 ;; This function is called by:
 28206 ;;		_wr1RegCompleteHandler
 28207 ;;		_i2c_write1ByteRegister
 28208 ;;		_rd1RegCompleteHandler
 28209 ;;		_i2c_read1ByteRegister
 28210 ;;		_rd2RegCompleteHandler
 28211 ;;		_i2c_read2ByteRegister
 28212 ;;		_wr2RegCompleteHandler
 28213 ;;		_rdBlkRegCompleteHandler
 28214 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1239
 28215 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1250
 28216 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1256
 28217 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1262
 28218 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1273
 28219 ;;		_i2c_write2ByteRegister
 28220 ;;		_i2c_readDataBlock
 28221 ;;		_I2C1_Read1ByteRegister
 28222 ;;		_I2C1_Read2ByteRegister
 28223 ;;		_I2C1_Write1ByteRegister
 28224 ;;		_I2C1_Write2ByteRegister
 28225 ;;		_I2C1_ReadDataBlock
 28226 ;; This function uses a non-reentrant model
 28227 ;;
 28228                           
 28229     1FC8                     _I2C1_SetDataCompleteCallback:	
 28230                           ;psect for function _I2C1_SetDataCompleteCallback
 28231                           
 28232     1FC8                     l12538:	
 28233                           ;incstack = 0
 28234                           ; Regs used in _I2C1_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 28235                           
 28236                           
 28237                           ;mcc_generated_files/i2c1_master.c: 273: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 274: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 275:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 28238     1FC8  0876               	movf	I2C1_SetDataCompleteCallback@cb+1,w
 28239     1FC9  00F2               	movwf	I2C1_SetCallback@cb+1
 28240     1FCA  0875               	movf	I2C1_SetDataCompleteCallback@cb,w
 28241     1FCB  00F1               	movwf	I2C1_SetCallback@cb
 28242     1FCC  0877               	movf	I2C1_SetDataCompleteCallback@ptr,w
 28243     1FCD  00F3               	movwf	I2C1_SetCallback@ptr
 28244     1FCE  3000               	movlw	0
 28245     1FCF  3194  2469  319F   	fcall	_I2C1_SetCallback
 28246     1FD2                     l1772:
 28247     1FD2  0008               	return
 28248     1FD3                     __end_of_I2C1_SetDataCompleteCallback:
 28249                           
 28250                           	psect	text154
 28251     1469                     __ptext154:	
 28252 ;; *************** function _I2C1_SetCallback *****************
 28253 ;; Defined at:
 28254 ;;		line 298 in file "mcc_generated_files/i2c1_master.c"
 28255 ;; Parameters:    Size  Location     Type
 28256 ;;  idx             1    wreg     enum E12583
 28257 ;;  cb              2    1[COMMON] PTR FTN(PTR void ,)enum 
 28258 ;;		 -> rdBlkRegCompleteHandler@i2c1_master_example$F1273(1), wr2RegCompleteHandler@i2c1_master_example$F1262(1), wr1Reg
      +CompleteHandler@i2c1_master_example$F1256(1), rd2RegCompleteHandler@i2c1_master_example$F1250(1), 
 28259 ;;		 -> rd1RegCompleteHandler@i2c1_master_example$F1239(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2Reg
      +CompleteHandler(1), 
 28260 ;;		 -> rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), NULL(1), 
 28261 ;;  ptr             1    3[COMMON] PTR void 
 28262 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 28263 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 28264 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 28265 ;; Auto vars:     Size  Location     Type
 28266 ;;  idx             1    4[COMMON] enum E12583
 28267 ;; Return value:  Size  Location     Type
 28268 ;;                  1    wreg      void 
 28269 ;; Registers used:
 28270 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 28271 ;; Tracked objects:
 28272 ;;		On entry : 0/0
 28273 ;;		On exit  : 0/0
 28274 ;;		Unchanged: 0/0
 28275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28276 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28277 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28279 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28280 ;;Total ram usage:        4 bytes
 28281 ;; Hardware stack levels used: 1
 28282 ;; Hardware stack levels required when called: 4
 28283 ;; This function calls:
 28284 ;;		Nothing
 28285 ;; This function is called by:
 28286 ;;		_I2C1_SetDataCompleteCallback
 28287 ;;		_I2C1_SetAddressNackCallback
 28288 ;;		_I2C1_SetWriteCollisionCallback
 28289 ;;		_I2C1_SetDataNackCallback
 28290 ;;		_I2C1_SetTimeoutCallback
 28291 ;; This function uses a non-reentrant model
 28292 ;;
 28293                           
 28294     1469                     _I2C1_SetCallback:	
 28295                           ;psect for function _I2C1_SetCallback
 28296                           
 28297                           
 28298                           ;incstack = 0
 28299                           ; Regs used in _I2C1_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
 28300                           ;I2C1_SetCallback@idx stored from wreg
 28301     1469  00F4               	movwf	I2C1_SetCallback@idx
 28302     146A                     l12526:
 28303                           
 28304                           ;mcc_generated_files/i2c1_master.c: 298: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 299: {;mcc_gen
      +                          erated_files/i2c1_master.c: 300:     if(cb)
 28305     146A  0871               	movf	I2C1_SetCallback@cb,w
 28306     146B  0472               	iorwf	I2C1_SetCallback@cb+1,w
 28307     146C  1903               	btfsc	3,2
 28308     146D  2C6F               	goto	u9541
 28309     146E  2C70               	goto	u9540
 28310     146F                     u9541:
 28311     146F  2C7F               	goto	l12530
 28312     1470                     u9540:
 28313     1470                     l12528:
 28314                           
 28315                           ;mcc_generated_files/i2c1_master.c: 301:     {;mcc_generated_files/i2c1_master.c: 302:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 28316     1470  3574               	lslf	I2C1_SetCallback@idx,w
 28317     1471  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 28318     1472  0086               	movwf	6
 28319     1473  0187               	clrf	7
 28320     1474  0871               	movf	I2C1_SetCallback@cb,w
 28321     1475  3FC0               	movwi [0]fsr1
 28322     1476  0872               	movf	I2C1_SetCallback@cb+1,w
 28323     1477  3FC1               	movwi [1]fsr1
 28324                           
 28325                           ;mcc_generated_files/i2c1_master.c: 303:         I2C1_Status.callbackPayload[idx] = ptr;
 28326     1478  0874               	movf	I2C1_SetCallback@idx,w
 28327     1479  3EAC               	addlw	(low ((_I2C1_Status| 0+12)))& (0+255)
 28328     147A  0086               	movwf	6
 28329     147B  0187               	clrf	7
 28330     147C  0873               	movf	I2C1_SetCallback@ptr,w
 28331     147D  0081               	movwf	1
 28332                           
 28333                           ;mcc_generated_files/i2c1_master.c: 304:     }
 28334     147E  2C8C               	goto	l1789
 28335     147F                     l12530:
 28336                           
 28337                           ;mcc_generated_files/i2c1_master.c: 306:     {;mcc_generated_files/i2c1_master.c: 307:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 28338     147F  3574               	lslf	I2C1_SetCallback@idx,w
 28339     1480  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 28340     1481  0086               	movwf	6
 28341     1482  0187               	clrf	7
 28342     1483  305A               	movlw	low _I2C1_CallbackReturnStop
 28343     1484  3FC0               	movwi [0]fsr1
 28344     1485  301E               	movlw	high _I2C1_CallbackReturnStop
 28345     1486  3FC1               	movwi [1]fsr1
 28346                           
 28347                           ;mcc_generated_files/i2c1_master.c: 308:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 28348     1487  0874               	movf	I2C1_SetCallback@idx,w
 28349     1488  3EAC               	addlw	(low ((_I2C1_Status| 0+12)))& (0+255)
 28350     1489  0086               	movwf	6
 28351     148A  0187               	clrf	7
 28352     148B  0181               	clrf	1
 28353     148C                     l1789:
 28354     148C  0008               	return
 28355     148D                     __end_of_I2C1_SetCallback:
 28356                           
 28357                           	psect	text155
 28358     104A                     __ptext155:	
 28359 ;; *************** function _I2C1_SetBuffer *****************
 28360 ;; Defined at:
 28361 ;;		line 263 in file "mcc_generated_files/i2c1_master.c"
 28362 ;; Parameters:    Size  Location     Type
 28363 ;;  buffer          1    wreg     PTR void 
 28364 ;;		 -> i2c_write1ByteRegister@data$data(2), i2c_read1ByteRegister@d2$data(2), i2c_read2ByteRegister@result$data(2), i2c
      +_write2ByteRegister@data$data(2), 
 28365 ;;		 -> I2C1_Read1ByteRegister@returnValue$data(2), I2C1_Read2ByteRegister@returnValue$data(2), I2C1_Write1ByteRegister@
      +data$data(2), I2C1_Write2ByteRegister@data$data(2), 
 28366 ;;		 -> readRegisters@dataBuffer(1), I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(4), bufferBlock$data(2), 
 28367 ;;		 -> I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@reg(1), I2C1_Write1Byte
      +Register@data(1), 
 28368 ;;		 -> I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRegister@returnValue(2), I2C1_Read1ByteRegister@reg(1), I2C1_Read1B
      +yteRegister@returnValue(1), 
 28369 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(4), d$data(2), i2c_write2ByteRegister@reg(1), 
 28370 ;;		 -> i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegi
      +ster@reg(1), 
 28371 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 28372 ;;  bufferSize      2    1[COMMON] unsigned int 
 28373 ;; Auto vars:     Size  Location     Type
 28374 ;;  buffer          1    3[COMMON] PTR void 
 28375 ;;		 -> i2c_write1ByteRegister@data$data(2), i2c_read1ByteRegister@d2$data(2), i2c_read2ByteRegister@result$data(2), i2c
      +_write2ByteRegister@data$data(2), 
 28376 ;;		 -> I2C1_Read1ByteRegister@returnValue$data(2), I2C1_Read2ByteRegister@returnValue$data(2), I2C1_Write1ByteRegister@
      +data$data(2), I2C1_Write2ByteRegister@data$data(2), 
 28377 ;;		 -> readRegisters@dataBuffer(1), I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(4), bufferBlock$data(2), 
 28378 ;;		 -> I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@reg(1), I2C1_Write1Byte
      +Register@data(1), 
 28379 ;;		 -> I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRegister@returnValue(2), I2C1_Read1ByteRegister@reg(1), I2C1_Read1B
      +yteRegister@returnValue(1), 
 28380 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(4), d$data(2), i2c_write2ByteRegister@reg(1), 
 28381 ;;		 -> i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegi
      +ster@reg(1), 
 28382 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 28383 ;; Return value:  Size  Location     Type
 28384 ;;                  1    wreg      void 
 28385 ;; Registers used:
 28386 ;;		wreg
 28387 ;; Tracked objects:
 28388 ;;		On entry : 0/0
 28389 ;;		On exit  : 0/0
 28390 ;;		Unchanged: 0/0
 28391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28392 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28393 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28395 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28396 ;;Total ram usage:        3 bytes
 28397 ;; Hardware stack levels used: 1
 28398 ;; Hardware stack levels required when called: 4
 28399 ;; This function calls:
 28400 ;;		Nothing
 28401 ;; This function is called by:
 28402 ;;		_wr1RegCompleteHandler
 28403 ;;		_i2c_write1ByteRegister
 28404 ;;		_rd1RegCompleteHandler
 28405 ;;		_i2c_read1ByteRegister
 28406 ;;		_rd2RegCompleteHandler
 28407 ;;		_i2c_read2ByteRegister
 28408 ;;		_wr2RegCompleteHandler
 28409 ;;		_rdBlkRegCompleteHandler
 28410 ;;		_i2c_readNBytes
 28411 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1239
 28412 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1250
 28413 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1256
 28414 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1262
 28415 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1273
 28416 ;;		_i2c_writeNBytes
 28417 ;;		_i2c_write2ByteRegister
 28418 ;;		_i2c_readDataBlock
 28419 ;;		_I2C1_Read1ByteRegister
 28420 ;;		_I2C1_Read2ByteRegister
 28421 ;;		_I2C1_Write1ByteRegister
 28422 ;;		_I2C1_Write2ByteRegister
 28423 ;;		_I2C1_WriteNBytes
 28424 ;;		_I2C1_ReadNBytes
 28425 ;;		_I2C1_ReadDataBlock
 28426 ;; This function uses a non-reentrant model
 28427 ;;
 28428                           
 28429     104A                     _I2C1_SetBuffer:	
 28430                           ;psect for function _I2C1_SetBuffer
 28431                           
 28432                           
 28433                           ;incstack = 0
 28434                           ; Regs used in _I2C1_SetBuffer: [wreg]
 28435                           ;I2C1_SetBuffer@buffer stored from wreg
 28436     104A  00F3               	movwf	I2C1_SetBuffer@buffer
 28437     104B                     l12532:
 28438                           
 28439                           ;mcc_generated_files/i2c1_master.c: 263: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 264: {;mcc_generated_files/i2c1_master.c: 265: 
      +                              if(I2C1_Status.bufferFree)
 28440     104B  0141               	movlb	1	; select bank1
 28441     104C  1DBC               	btfss	(_I2C1_Status^(0+128)+28),3
 28442     104D  284F               	goto	u9551
 28443     104E  2850               	goto	u9550
 28444     104F                     u9551:
 28445     104F  2857               	goto	l1769
 28446     1050                     u9550:
 28447     1050                     l12534:
 28448                           
 28449                           ;mcc_generated_files/i2c1_master.c: 266:     {;mcc_generated_files/i2c1_master.c: 267:  
      +                                 I2C1_Status.data_ptr = buffer;
 28450     1050  0873               	movf	I2C1_SetBuffer@buffer,w
 28451     1051  00B7               	movwf	(low ((_I2C1_Status| 0+23)))^(0+128)
 28452                           
 28453                           ;mcc_generated_files/i2c1_master.c: 268:         I2C1_Status.data_length = bufferSize;
 28454     1052  0872               	movf	I2C1_SetBuffer@bufferSize+1,w
 28455     1053  00B9               	movwf	((_I2C1_Status+1)^(0+128)+24)
 28456     1054  0871               	movf	I2C1_SetBuffer@bufferSize,w
 28457     1055  00B8               	movwf	(_I2C1_Status^(0+128)+24)
 28458     1056                     l12536:
 28459                           
 28460                           ;mcc_generated_files/i2c1_master.c: 269:         I2C1_Status.bufferFree = 0;
 28461     1056  11BC               	bcf	(_I2C1_Status^(0+128)+28),3
 28462     1057                     l1769:
 28463     1057  0008               	return
 28464     1058                     __end_of_I2C1_SetBuffer:
 28465                           
 28466                           	psect	text156
 28467     1E6D                     __ptext156:	
 28468 ;; *************** function _I2C1_MasterStop *****************
 28469 ;; Defined at:
 28470 ;;		line 593 in file "mcc_generated_files/i2c1_master.c"
 28471 ;; Parameters:    Size  Location     Type
 28472 ;;		None
 28473 ;; Auto vars:     Size  Location     Type
 28474 ;;		None
 28475 ;; Return value:  Size  Location     Type
 28476 ;;                  1    wreg      void 
 28477 ;; Registers used:
 28478 ;;		None
 28479 ;; Tracked objects:
 28480 ;;		On entry : 0/0
 28481 ;;		On exit  : 0/0
 28482 ;;		Unchanged: 0/0
 28483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28488 ;;Total ram usage:        0 bytes
 28489 ;; Hardware stack levels used: 1
 28490 ;; Hardware stack levels required when called: 4
 28491 ;; This function calls:
 28492 ;;		Nothing
 28493 ;; This function is called by:
 28494 ;;		_I2C1_DO_SEND_STOP
 28495 ;; This function uses a non-reentrant model
 28496 ;;
 28497                           
 28498     1E6D                     _I2C1_MasterStop:	
 28499                           ;psect for function _I2C1_MasterStop
 28500                           
 28501     1E6D                     l12542:	
 28502                           ;incstack = 0
 28503                           ; Regs used in _I2C1_MasterStop: []
 28504                           
 28505                           
 28506                           ;mcc_generated_files/i2c1_master.c: 595:     SSP1CON2bits.PEN = 1;
 28507     1E6D  0143               	movlb	3	; select bank3
 28508     1E6E  1511               	bsf	17,2	;volatile
 28509     1E6F                     l1935:
 28510     1E6F  0008               	return
 28511     1E70                     __end_of_I2C1_MasterStop:
 28512                           
 28513                           	psect	text157
 28514     1E6A                     __ptext157:	
 28515 ;; *************** function _I2C1_MasterEnableRestart *****************
 28516 ;; Defined at:
 28517 ;;		line 573 in file "mcc_generated_files/i2c1_master.c"
 28518 ;; Parameters:    Size  Location     Type
 28519 ;;		None
 28520 ;; Auto vars:     Size  Location     Type
 28521 ;;		None
 28522 ;; Return value:  Size  Location     Type
 28523 ;;                  1    wreg      void 
 28524 ;; Registers used:
 28525 ;;		None
 28526 ;; Tracked objects:
 28527 ;;		On entry : 0/0
 28528 ;;		On exit  : 0/0
 28529 ;;		Unchanged: 0/0
 28530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28535 ;;Total ram usage:        0 bytes
 28536 ;; Hardware stack levels used: 1
 28537 ;; Hardware stack levels required when called: 4
 28538 ;; This function calls:
 28539 ;;		Nothing
 28540 ;; This function is called by:
 28541 ;;		_I2C1_DO_SEND_RESTART_READ
 28542 ;;		_I2C1_DO_SEND_RESTART_WRITE
 28543 ;;		_I2C1_DO_SEND_RESTART
 28544 ;;		_I2C1_DO_RX_EMPTY
 28545 ;; This function uses a non-reentrant model
 28546 ;;
 28547                           
 28548     1E6A                     _I2C1_MasterEnableRestart:	
 28549                           ;psect for function _I2C1_MasterEnableRestart
 28550                           
 28551     1E6A                     l12540:	
 28552                           ;incstack = 0
 28553                           ; Regs used in _I2C1_MasterEnableRestart: []
 28554                           
 28555                           
 28556                           ;mcc_generated_files/i2c1_master.c: 575:     SSP1CON2bits.RSEN = 1;
 28557     1E6A  0143               	movlb	3	; select bank3
 28558     1E6B  1491               	bsf	17,1	;volatile
 28559     1E6C                     l1923:
 28560     1E6C  0008               	return
 28561     1E6D                     __end_of_I2C1_MasterEnableRestart:
 28562                           
 28563                           	psect	text158
 28564     1E67                     __ptext158:	
 28565 ;; *************** function _I2C1_MasterStart *****************
 28566 ;; Defined at:
 28567 ;;		line 588 in file "mcc_generated_files/i2c1_master.c"
 28568 ;; Parameters:    Size  Location     Type
 28569 ;;		None
 28570 ;; Auto vars:     Size  Location     Type
 28571 ;;		None
 28572 ;; Return value:  Size  Location     Type
 28573 ;;                  1    wreg      void 
 28574 ;; Registers used:
 28575 ;;		None
 28576 ;; Tracked objects:
 28577 ;;		On entry : 0/0
 28578 ;;		On exit  : 0/0
 28579 ;;		Unchanged: 0/0
 28580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28585 ;;Total ram usage:        0 bytes
 28586 ;; Hardware stack levels used: 1
 28587 ;; Hardware stack levels required when called: 4
 28588 ;; This function calls:
 28589 ;;		Nothing
 28590 ;; This function is called by:
 28591 ;;		_I2C1_MasterOperation
 28592 ;; This function uses a non-reentrant model
 28593 ;;
 28594                           
 28595     1E67                     _I2C1_MasterStart:	
 28596                           ;psect for function _I2C1_MasterStart
 28597                           
 28598     1E67                     l12856:	
 28599                           ;incstack = 0
 28600                           ; Regs used in _I2C1_MasterStart: []
 28601                           
 28602                           
 28603                           ;mcc_generated_files/i2c1_master.c: 590:     SSP1CON2bits.SEN = 1;
 28604     1E67  0143               	movlb	3	; select bank3
 28605     1E68  1411               	bsf	17,0	;volatile
 28606     1E69                     l1932:
 28607     1E69  0008               	return
 28608     1E6A                     __end_of_I2C1_MasterStart:
 28609                           
 28610                           	psect	text159
 28611     1233                     __ptext159:	
 28612 ;; *************** function _I2C1_Close *****************
 28613 ;; Defined at:
 28614 ;;		line 209 in file "mcc_generated_files/i2c1_master.c"
 28615 ;; Parameters:    Size  Location     Type
 28616 ;;		None
 28617 ;; Auto vars:     Size  Location     Type
 28618 ;;  returnValue     1    1[COMMON] enum E358
 28619 ;; Return value:  Size  Location     Type
 28620 ;;                  1    wreg      enum E358
 28621 ;; Registers used:
 28622 ;;		wreg, status,2, status,0, pclath, cstack
 28623 ;; Tracked objects:
 28624 ;;		On entry : 0/0
 28625 ;;		On exit  : 0/0
 28626 ;;		Unchanged: 0/0
 28627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28629 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28631 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28632 ;;Total ram usage:        1 bytes
 28633 ;; Hardware stack levels used: 1
 28634 ;; Hardware stack levels required when called: 5
 28635 ;; This function calls:
 28636 ;;		_I2C1_MasterClearIrq
 28637 ;;		_I2C1_MasterClose
 28638 ;;		_I2C1_MasterDisableIrq
 28639 ;; This function is called by:
 28640 ;;		_i2c_write1ByteRegister
 28641 ;;		_i2c_read1ByteRegister
 28642 ;;		_i2c_read2ByteRegister
 28643 ;;		_i2c_readNBytes
 28644 ;;		_i2c_writeNBytes
 28645 ;;		_i2c_write2ByteRegister
 28646 ;;		_i2c_readDataBlock
 28647 ;;		_I2C1_Read1ByteRegister
 28648 ;;		_I2C1_Read2ByteRegister
 28649 ;;		_I2C1_Write1ByteRegister
 28650 ;;		_I2C1_Write2ByteRegister
 28651 ;;		_I2C1_WriteNBytes
 28652 ;;		_I2C1_ReadNBytes
 28653 ;;		_I2C1_ReadDataBlock
 28654 ;; This function uses a non-reentrant model
 28655 ;;
 28656                           
 28657     1233                     _I2C1_Close:	
 28658                           ;psect for function _I2C1_Close
 28659                           
 28660     1233                     l12934:	
 28661                           ;incstack = 0
 28662                           ; Regs used in _I2C1_Close: [wreg+status,2+status,0+pclath+cstack]
 28663                           
 28664                           
 28665                           ;mcc_generated_files/i2c1_master.c: 211:     i2c1_error_t returnValue = I2C1_BUSY;
 28666     1233  01F1               	clrf	I2C1_Close@returnValue
 28667     1234  0AF1               	incf	I2C1_Close@returnValue,f
 28668                           
 28669                           ;mcc_generated_files/i2c1_master.c: 212:     if(!I2C1_Status.busy)
 28670     1235  0141               	movlb	1	; select bank1
 28671     1236  18BC               	btfsc	(_I2C1_Status^(0+128)+28),1
 28672     1237  2A39               	goto	u9671
 28673     1238  2A3A               	goto	u9670
 28674     1239                     u9671:
 28675     1239  2A49               	goto	l12948
 28676     123A                     u9670:
 28677     123A                     l12936:
 28678                           
 28679                           ;mcc_generated_files/i2c1_master.c: 213:     {;mcc_generated_files/i2c1_master.c: 214:  
      +                                 I2C1_Status.inUse = 0;
 28680     123A  113C               	bcf	(_I2C1_Status^(0+128)+28),2
 28681     123B                     l12938:
 28682                           
 28683                           ;mcc_generated_files/i2c1_master.c: 215:         I2C1_Status.address = 0xff;
 28684     123B  30FF               	movlw	255
 28685     123C  00B6               	movwf	(_I2C1_Status^(0+128)+22)
 28686     123D                     l12940:
 28687                           
 28688                           ;mcc_generated_files/i2c1_master.c: 216:         I2C1_MasterClearIrq();
 28689     123D  319E  265E  3192   	fcall	_I2C1_MasterClearIrq
 28690     1240                     l12942:
 28691                           
 28692                           ;mcc_generated_files/i2c1_master.c: 217:         I2C1_MasterDisableIrq();
 28693     1240  319E  2664  3192   	fcall	_I2C1_MasterDisableIrq
 28694     1243                     l12944:
 28695                           
 28696                           ;mcc_generated_files/i2c1_master.c: 218:         I2C1_MasterClose();
 28697     1243  319E  2661  3192   	fcall	_I2C1_MasterClose
 28698     1246                     l12946:
 28699                           
 28700                           ;mcc_generated_files/i2c1_master.c: 219:         returnValue = I2C1_Status.error;
 28701     1246  0141               	movlb	1	; select bank1
 28702     1247  083B               	movf	(_I2C1_Status^(0+128)+27),w
 28703     1248  00F1               	movwf	I2C1_Close@returnValue
 28704     1249                     l12948:
 28705                           
 28706                           ;mcc_generated_files/i2c1_master.c: 221:     return returnValue;
 28707     1249  0871               	movf	I2C1_Close@returnValue,w
 28708     124A                     l1750:
 28709     124A  0008               	return
 28710     124B                     __end_of_I2C1_Close:
 28711                           
 28712                           	psect	text160
 28713     1E64                     __ptext160:	
 28714 ;; *************** function _I2C1_MasterDisableIrq *****************
 28715 ;; Defined at:
 28716 ;;		line 635 in file "mcc_generated_files/i2c1_master.c"
 28717 ;; Parameters:    Size  Location     Type
 28718 ;;		None
 28719 ;; Auto vars:     Size  Location     Type
 28720 ;;		None
 28721 ;; Return value:  Size  Location     Type
 28722 ;;                  1    wreg      void 
 28723 ;; Registers used:
 28724 ;;		None
 28725 ;; Tracked objects:
 28726 ;;		On entry : 0/0
 28727 ;;		On exit  : 0/0
 28728 ;;		Unchanged: 0/0
 28729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28734 ;;Total ram usage:        0 bytes
 28735 ;; Hardware stack levels used: 1
 28736 ;; Hardware stack levels required when called: 4
 28737 ;; This function calls:
 28738 ;;		Nothing
 28739 ;; This function is called by:
 28740 ;;		_I2C1_Close
 28741 ;;		_I2C1_SetTimeOut
 28742 ;; This function uses a non-reentrant model
 28743 ;;
 28744                           
 28745     1E64                     _I2C1_MasterDisableIrq:	
 28746                           ;psect for function _I2C1_MasterDisableIrq
 28747                           
 28748     1E64                     l12878:	
 28749                           ;incstack = 0
 28750                           ; Regs used in _I2C1_MasterDisableIrq: []
 28751                           
 28752                           
 28753                           ;mcc_generated_files/i2c1_master.c: 637:     PIE3bits.SSP1IE = 0;
 28754     1E64  014E               	movlb	14	; select bank14
 28755     1E65  1019               	bcf	25,0	;volatile
 28756     1E66                     l1959:
 28757     1E66  0008               	return
 28758     1E67                     __end_of_I2C1_MasterDisableIrq:
 28759                           
 28760                           	psect	text161
 28761     1E61                     __ptext161:	
 28762 ;; *************** function _I2C1_MasterClose *****************
 28763 ;; Defined at:
 28764 ;;		line 557 in file "mcc_generated_files/i2c1_master.c"
 28765 ;; Parameters:    Size  Location     Type
 28766 ;;		None
 28767 ;; Auto vars:     Size  Location     Type
 28768 ;;		None
 28769 ;; Return value:  Size  Location     Type
 28770 ;;                  1    wreg      void 
 28771 ;; Registers used:
 28772 ;;		None
 28773 ;; Tracked objects:
 28774 ;;		On entry : 0/0
 28775 ;;		On exit  : 0/0
 28776 ;;		Unchanged: 0/0
 28777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28782 ;;Total ram usage:        0 bytes
 28783 ;; Hardware stack levels used: 1
 28784 ;; Hardware stack levels required when called: 4
 28785 ;; This function calls:
 28786 ;;		Nothing
 28787 ;; This function is called by:
 28788 ;;		_I2C1_Close
 28789 ;; This function uses a non-reentrant model
 28790 ;;
 28791                           
 28792     1E61                     _I2C1_MasterClose:	
 28793                           ;psect for function _I2C1_MasterClose
 28794                           
 28795     1E61                     l12880:	
 28796                           ;incstack = 0
 28797                           ; Regs used in _I2C1_MasterClose: []
 28798                           
 28799                           
 28800                           ;mcc_generated_files/i2c1_master.c: 560:     SSP1CON1bits.SSPEN = 0;
 28801     1E61  0143               	movlb	3	; select bank3
 28802     1E62  1290               	bcf	16,5	;volatile
 28803     1E63                     l1914:
 28804     1E63  0008               	return
 28805     1E64                     __end_of_I2C1_MasterClose:
 28806                           
 28807                           	psect	text162
 28808     1E5E                     __ptext162:	
 28809 ;; *************** function _I2C1_MasterClearIrq *****************
 28810 ;; Defined at:
 28811 ;;		line 640 in file "mcc_generated_files/i2c1_master.c"
 28812 ;; Parameters:    Size  Location     Type
 28813 ;;		None
 28814 ;; Auto vars:     Size  Location     Type
 28815 ;;		None
 28816 ;; Return value:  Size  Location     Type
 28817 ;;                  1    wreg      void 
 28818 ;; Registers used:
 28819 ;;		None
 28820 ;; Tracked objects:
 28821 ;;		On entry : 0/0
 28822 ;;		On exit  : 0/0
 28823 ;;		Unchanged: 0/0
 28824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28829 ;;Total ram usage:        0 bytes
 28830 ;; Hardware stack levels used: 1
 28831 ;; Hardware stack levels required when called: 4
 28832 ;; This function calls:
 28833 ;;		Nothing
 28834 ;; This function is called by:
 28835 ;;		_I2C1_Open
 28836 ;;		_I2C1_Close
 28837 ;;		_I2C1_MasterFsm
 28838 ;; This function uses a non-reentrant model
 28839 ;;
 28840                           
 28841     1E5E                     _I2C1_MasterClearIrq:	
 28842                           ;psect for function _I2C1_MasterClearIrq
 28843                           
 28844     1E5E                     l12682:	
 28845                           ;incstack = 0
 28846                           ; Regs used in _I2C1_MasterClearIrq: []
 28847                           
 28848                           
 28849                           ;mcc_generated_files/i2c1_master.c: 642:     PIR3bits.SSP1IF = 0;
 28850     1E5E  014E               	movlb	14	; select bank14
 28851     1E5F  100F               	bcf	15,0	;volatile
 28852     1E60                     l1962:
 28853     1E60  0008               	return
 28854     1E61                     __end_of_I2C1_MasterClearIrq:
 28855                           
 28856                           	psect	intentry
 28857     0004                     __pintentry:	
 28858 ;; *************** function _INTERRUPT_InterruptManager *****************
 28859 ;; Defined at:
 28860 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 28861 ;; Parameters:    Size  Location     Type
 28862 ;;		None
 28863 ;; Auto vars:     Size  Location     Type
 28864 ;;		None
 28865 ;; Return value:  Size  Location     Type
 28866 ;;                  1    wreg      void 
 28867 ;; Registers used:
 28868 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 28869 ;; Tracked objects:
 28870 ;;		On entry : 0/0
 28871 ;;		On exit  : 0/0
 28872 ;;		Unchanged: 0/0
 28873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28878 ;;Total ram usage:        0 bytes
 28879 ;; Hardware stack levels used: 1
 28880 ;; Hardware stack levels required when called: 3
 28881 ;; This function calls:
 28882 ;;		NULL
 28883 ;;		_EUSART1_Receive_ISR
 28884 ;;		_EUSART1_Transmit_ISR
 28885 ;;		_EUSART2_Receive_ISR
 28886 ;;		_EUSART2_Transmit_ISR
 28887 ;;		_PIN_MANAGER_IOC
 28888 ;; This function is called by:
 28889 ;;		Interrupt level 1
 28890 ;; This function uses a non-reentrant model
 28891 ;;
 28892                           
 28893     0004                     _INTERRUPT_InterruptManager:
 28894                           
 28895                           ;incstack = 0
 28896 ;; hardware stack exceeded
 28897     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 28898                           
 28899                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 28900     0005  3180               	pagesel	$
 28901     0006                     i1l14964:
 28902                           
 28903                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.IOCIE == 1 && PIR0bits.IOC
      +                          IF == 1)
 28904     0006  014E               	movlb	14	; select bank14
 28905     0007  1E16               	btfss	22,4	;volatile
 28906     0008  280A               	goto	u1208_21
 28907     0009  280B               	goto	u1208_20
 28908     000A                     u1208_21:
 28909     000A  2813               	goto	i1l1295
 28910     000B                     u1208_20:
 28911     000B                     i1l14966:
 28912     000B  1E0C               	btfss	12,4	;volatile
 28913     000C  280E               	goto	u1209_21
 28914     000D  280F               	goto	u1209_20
 28915     000E                     u1209_21:
 28916     000E  2813               	goto	i1l1295
 28917     000F                     u1209_20:
 28918     000F                     i1l14968:
 28919                           
 28920                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
 28921     000F  319F  2769  3180   	fcall	_PIN_MANAGER_IOC
 28922                           
 28923                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 28924     0012  2853               	goto	i1l1307
 28925     0013                     i1l1295:	
 28926                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 28927                           
 28928     0013  1F0B               	btfss	11,6	;volatile
 28929     0014  2816               	goto	u1210_21
 28930     0015  2817               	goto	u1210_20
 28931     0016                     u1210_21:
 28932     0016  2853               	goto	i1l1307
 28933     0017                     u1210_20:
 28934     0017                     i1l14970:
 28935                           
 28936                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 28937     0017  1F19               	btfss	25,6	;volatile
 28938     0018  281A               	goto	u1211_21
 28939     0019  281B               	goto	u1211_20
 28940     001A                     u1211_21:
 28941     001A  2826               	goto	i1l1298
 28942     001B                     u1211_20:
 28943     001B                     i1l14972:
 28944     001B  1F0F               	btfss	15,6	;volatile
 28945     001C  281E               	goto	u1212_21
 28946     001D  281F               	goto	u1212_20
 28947     001E                     u1212_21:
 28948     001E  2826               	goto	i1l1298
 28949     001F                     u1212_20:
 28950     001F                     i1l14974:
 28951                           
 28952                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART2_TxDefaultInterruptHandler();
 28953     001F  0141               	movlb	1	; select bank1
 28954     0020  086E               	movf	(_EUSART2_TxDefaultInterruptHandler+1)^(0+128),w
 28955     0021  008A               	movwf	10
 28956     0022  086D               	movf	_EUSART2_TxDefaultInterruptHandler^(0+128),w
 28957     0023  000A               	callw
 28958     0024  3180               	pagesel	$
 28959                           
 28960                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 28961     0025  2853               	goto	i1l1307
 28962     0026                     i1l1298:	
 28963                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.RC2IE == 1 && PIR
      +                          3bits.RC2IF == 1)
 28964                           
 28965     0026  1F99               	btfss	25,7	;volatile
 28966     0027  2829               	goto	u1213_21
 28967     0028  282A               	goto	u1213_20
 28968     0029                     u1213_21:
 28969     0029  2835               	goto	i1l1300
 28970     002A                     u1213_20:
 28971     002A                     i1l14976:
 28972     002A  1F8F               	btfss	15,7	;volatile
 28973     002B  282D               	goto	u1214_21
 28974     002C  282E               	goto	u1214_20
 28975     002D                     u1214_21:
 28976     002D  2835               	goto	i1l1300
 28977     002E                     u1214_20:
 28978     002E                     i1l14978:
 28979                           
 28980                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             EUSART2_RxDefaultInterruptHandler();
 28981     002E  0141               	movlb	1	; select bank1
 28982     002F  086C               	movf	(_EUSART2_RxDefaultInterruptHandler+1)^(0+128),w
 28983     0030  008A               	movwf	10
 28984     0031  086B               	movf	_EUSART2_RxDefaultInterruptHandler^(0+128),w
 28985     0032  000A               	callw
 28986     0033  3180               	pagesel	$
 28987                           
 28988                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 28989     0034  2853               	goto	i1l1307
 28990     0035                     i1l1300:	
 28991                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.TX1IE == 1 && PIR
      +                          3bits.TX1IF == 1)
 28992                           
 28993     0035  1E19               	btfss	25,4	;volatile
 28994     0036  2838               	goto	u1215_21
 28995     0037  2839               	goto	u1215_20
 28996     0038                     u1215_21:
 28997     0038  2844               	goto	i1l1302
 28998     0039                     u1215_20:
 28999     0039                     i1l14980:
 29000     0039  1E0F               	btfss	15,4	;volatile
 29001     003A  283C               	goto	u1216_21
 29002     003B  283D               	goto	u1216_20
 29003     003C                     u1216_21:
 29004     003C  2844               	goto	i1l1302
 29005     003D                     u1216_20:
 29006     003D                     i1l14982:
 29007                           
 29008                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             EUSART1_TxDefaultInterruptHandler();
 29009     003D  0142               	movlb	2	; select bank2
 29010     003E  0866               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+256),w
 29011     003F  008A               	movwf	10
 29012     0040  0865               	movf	_EUSART1_TxDefaultInterruptHandler^(0+256),w
 29013     0041  000A               	callw
 29014     0042  3180               	pagesel	$
 29015                           
 29016                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 29017     0043  2853               	goto	i1l1307
 29018     0044                     i1l1302:	
 29019                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 29020                           
 29021     0044  1E99               	btfss	25,5	;volatile
 29022     0045  2847               	goto	u1217_21
 29023     0046  2848               	goto	u1217_20
 29024     0047                     u1217_21:
 29025     0047  2853               	goto	i1l1301
 29026     0048                     u1217_20:
 29027     0048                     i1l14984:
 29028     0048  1E8F               	btfss	15,5	;volatile
 29029     0049  284B               	goto	u1218_21
 29030     004A  284C               	goto	u1218_20
 29031     004B                     u1218_21:
 29032     004B  2853               	goto	i1l1301
 29033     004C                     u1218_20:
 29034     004C                     i1l14986:
 29035                           
 29036                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART1_RxDefaultInterruptHandler();
 29037     004C  0142               	movlb	2	; select bank2
 29038     004D  0864               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256),w
 29039     004E  008A               	movwf	10
 29040     004F  0863               	movf	_EUSART1_RxDefaultInterruptHandler^(0+256),w
 29041     0050  000A               	callw
 29042     0051  3180               	pagesel	$
 29043                           
 29044                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 29045     0052  2853               	goto	i1l1307
 29046     0053                     i1l1301:
 29047     0053                     i1l1307:
 29048     0053  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 29049     0054  0009               	retfie
 29050     0055                     __end_of_INTERRUPT_InterruptManager:
 29051                           
 29052                           	psect	text164
 29053     1F69                     __ptext164:	
 29054 ;; *************** function _PIN_MANAGER_IOC *****************
 29055 ;; Defined at:
 29056 ;;		line 142 in file "mcc_generated_files/pin_manager.c"
 29057 ;; Parameters:    Size  Location     Type
 29058 ;;		None
 29059 ;; Auto vars:     Size  Location     Type
 29060 ;;		None
 29061 ;; Return value:  Size  Location     Type
 29062 ;;                  1    wreg      void 
 29063 ;; Registers used:
 29064 ;;		wreg, status,2, status,0, pclath, cstack
 29065 ;; Tracked objects:
 29066 ;;		On entry : 0/0
 29067 ;;		On exit  : 0/0
 29068 ;;		Unchanged: 0/0
 29069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29074 ;;Total ram usage:        0 bytes
 29075 ;; Hardware stack levels used: 1
 29076 ;; Hardware stack levels required when called: 2
 29077 ;; This function calls:
 29078 ;;		_IOCAF6_ISR
 29079 ;; This function is called by:
 29080 ;;		_INTERRUPT_InterruptManager
 29081 ;; This function uses a non-reentrant model
 29082 ;;
 29083                           
 29084     1F69                     _PIN_MANAGER_IOC:	
 29085                           ;psect for function _PIN_MANAGER_IOC
 29086                           
 29087     1F69                     i1l10264:	
 29088                           ;incstack = 0
 29089 ;; hardware stack exceeded
 29090                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
 29091                           
 29092                           
 29093                           ;mcc_generated_files/pin_manager.c: 145:     if(IOCAFbits.IOCAF6 == 1)
 29094     1F69  017E               	movlb	62	; select bank62
 29095     1F6A  1F3F               	btfss	63,6	;volatile
 29096     1F6B  2F6D               	goto	u702_21
 29097     1F6C  2F6E               	goto	u702_20
 29098     1F6D                     u702_21:
 29099     1F6D  2F71               	goto	i1l1447
 29100     1F6E                     u702_20:
 29101     1F6E                     i1l10266:
 29102                           
 29103                           ;mcc_generated_files/pin_manager.c: 146:     {;mcc_generated_files/pin_manager.c: 147:  
      +                                 IOCAF6_ISR();
 29104     1F6E  3190  2074  319F   	fcall	_IOCAF6_ISR
 29105     1F71                     i1l1447:
 29106     1F71  0008               	return
 29107     1F72                     __end_of_PIN_MANAGER_IOC:
 29108                           
 29109                           	psect	text165
 29110     1074                     __ptext165:	
 29111 ;; *************** function _IOCAF6_ISR *****************
 29112 ;; Defined at:
 29113 ;;		line 154 in file "mcc_generated_files/pin_manager.c"
 29114 ;; Parameters:    Size  Location     Type
 29115 ;;		None
 29116 ;; Auto vars:     Size  Location     Type
 29117 ;;		None
 29118 ;; Return value:  Size  Location     Type
 29119 ;;                  1    wreg      void 
 29120 ;; Registers used:
 29121 ;;		wreg, status,2, status,0, pclath, cstack
 29122 ;; Tracked objects:
 29123 ;;		On entry : 0/0
 29124 ;;		On exit  : 0/0
 29125 ;;		Unchanged: 0/0
 29126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29131 ;;Total ram usage:        0 bytes
 29132 ;; Hardware stack levels used: 1
 29133 ;; Hardware stack levels required when called: 1
 29134 ;; This function calls:
 29135 ;;		NULL
 29136 ;;		_IOCAF6_DefaultInterruptHandler
 29137 ;; This function is called by:
 29138 ;;		_PIN_MANAGER_IOC
 29139 ;; This function uses a non-reentrant model
 29140 ;;
 29141                           
 29142     1074                     _IOCAF6_ISR:	
 29143                           ;psect for function _IOCAF6_ISR
 29144                           
 29145     1074                     i1l9340:	
 29146                           ;incstack = 0
 29147 ;; hardware stack exceeded
 29148                           ; Regs used in _IOCAF6_ISR: [wreg+status,2+status,0+pclath+cstack]
 29149                           
 29150                           
 29151                           ;mcc_generated_files/pin_manager.c: 159:     if(IOCAF6_InterruptHandler)
 29152     1074  0141               	movlb	1	; select bank1
 29153     1075  0869               	movf	_IOCAF6_InterruptHandler^(0+128),w
 29154     1076  046A               	iorwf	(_IOCAF6_InterruptHandler+1)^(0+128),w
 29155     1077  1903               	btfsc	3,2
 29156     1078  287A               	goto	u582_21
 29157     1079  287B               	goto	u582_20
 29158     107A                     u582_21:
 29159     107A  2880               	goto	i1l9344
 29160     107B                     u582_20:
 29161     107B                     i1l9342:
 29162                           
 29163                           ;mcc_generated_files/pin_manager.c: 160:     {;mcc_generated_files/pin_manager.c: 161:  
      +                                 IOCAF6_InterruptHandler();
 29164     107B  086A               	movf	(_IOCAF6_InterruptHandler+1)^(0+128),w
 29165     107C  008A               	movwf	10
 29166     107D  0869               	movf	_IOCAF6_InterruptHandler^(0+128),w
 29167     107E  000A               	callw
 29168     107F  3190               	pagesel	$
 29169     1080                     i1l9344:
 29170                           
 29171                           ;mcc_generated_files/pin_manager.c: 163:     IOCAFbits.IOCAF6 = 0;
 29172     1080  017E               	movlb	62	; select bank62
 29173     1081  133F               	bcf	63,6	;volatile
 29174     1082                     i1l1451:
 29175     1082  0008               	return
 29176     1083                     __end_of_IOCAF6_ISR:
 29177                           
 29178                           	psect	text166
 29179     07FF                     __ptext166:	
 29180 ;; *************** function _IOCAF6_DefaultInterruptHandler *****************
 29181 ;; Defined at:
 29182 ;;		line 176 in file "mcc_generated_files/pin_manager.c"
 29183 ;; Parameters:    Size  Location     Type
 29184 ;;		None
 29185 ;; Auto vars:     Size  Location     Type
 29186 ;;		None
 29187 ;; Return value:  Size  Location     Type
 29188 ;;                  1    wreg      void 
 29189 ;; Registers used:
 29190 ;;		None
 29191 ;; Tracked objects:
 29192 ;;		On entry : 0/0
 29193 ;;		On exit  : 0/0
 29194 ;;		Unchanged: 0/0
 29195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29200 ;;Total ram usage:        0 bytes
 29201 ;; Hardware stack levels used: 1
 29202 ;; This function calls:
 29203 ;;		Nothing
 29204 ;; This function is called by:
 29205 ;;		_PIN_MANAGER_Initialize
 29206 ;;		_IOCAF6_ISR
 29207 ;; This function uses a non-reentrant model
 29208 ;;
 29209                           
 29210     07FF                     _IOCAF6_DefaultInterruptHandler:	
 29211                           ;psect for function _IOCAF6_DefaultInterruptHandler
 29212                           
 29213     07FF                     i1l1457:	
 29214                           ;incstack = 0
 29215 ;; hardware stack exceeded
 29216                           ; Regs used in _IOCAF6_DefaultInterruptHandler: []
 29217                           
 29218     07FF  0008               	return
 29219     0800                     __end_of_IOCAF6_DefaultInterruptHandler:
 29220                           
 29221                           	psect	text167
 29222     1402                     __ptext167:	
 29223 ;; *************** function _EUSART1_Transmit_ISR *****************
 29224 ;; Defined at:
 29225 ;;		line 206 in file "mcc_generated_files/eusart1.c"
 29226 ;; Parameters:    Size  Location     Type
 29227 ;;		None
 29228 ;; Auto vars:     Size  Location     Type
 29229 ;;		None
 29230 ;; Return value:  Size  Location     Type
 29231 ;;                  1    wreg      void 
 29232 ;; Registers used:
 29233 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 29234 ;; Tracked objects:
 29235 ;;		On entry : 0/0
 29236 ;;		On exit  : 0/0
 29237 ;;		Unchanged: 0/0
 29238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29241 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29242 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29243 ;;Total ram usage:        1 bytes
 29244 ;; Hardware stack levels used: 1
 29245 ;; This function calls:
 29246 ;;		Nothing
 29247 ;; This function is called by:
 29248 ;;		_EUSART1_Initialize
 29249 ;;		_INTERRUPT_InterruptManager
 29250 ;; This function uses a non-reentrant model
 29251 ;;
 29252                           
 29253     1402                     _EUSART1_Transmit_ISR:	
 29254                           ;psect for function _EUSART1_Transmit_ISR
 29255                           
 29256     1402                     i1l10232:	
 29257                           ;incstack = 0
 29258 ;; hardware stack exceeded
 29259                           ; Regs used in _EUSART1_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 29260                           
 29261                           
 29262                           ;mcc_generated_files/eusart1.c: 210:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 29263     1402  3008               	movlw	8
 29264     1403  0140               	movlb	0	; select bank0
 29265     1404  025B               	subwf	_eusart1TxBufferRemaining,w	;volatile
 29266     1405  1803               	skipnc
 29267     1406  2C08               	goto	u697_21
 29268     1407  2C09               	goto	u697_20
 29269     1408                     u697_21:
 29270     1408  2C21               	goto	i1l1232
 29271     1409                     u697_20:
 29272     1409                     i1l10234:
 29273                           
 29274                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 29275     1409  085C               	movf	_eusart1TxTail,w
 29276     140A  3EC5               	addlw	(low (_eusart1TxBuffer| 0))& (0+255)
 29277     140B  0086               	movwf	6
 29278     140C  0187               	clrf	7
 29279     140D  0801               	movf	1,w
 29280     140E  0142               	movlb	2	; select bank2
 29281     140F  009A               	movwf	26	;volatile
 29282     1410                     i1l10236:
 29283     1410  3001               	movlw	1
 29284     1411  00F0               	movwf	??_EUSART1_Transmit_ISR
 29285     1412  0870               	movf	??_EUSART1_Transmit_ISR,w
 29286     1413  0140               	movlb	0	; select bank0
 29287     1414  07DC               	addwf	_eusart1TxTail,f	;volatile
 29288     1415                     i1l10238:
 29289                           
 29290                           ;mcc_generated_files/eusart1.c: 213:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 29291     1415  3008               	movlw	8
 29292     1416  025C               	subwf	_eusart1TxTail,w	;volatile
 29293     1417  1C03               	skipc
 29294     1418  2C1A               	goto	u698_21
 29295     1419  2C1B               	goto	u698_20
 29296     141A                     u698_21:
 29297     141A  2C1C               	goto	i1l10242
 29298     141B                     u698_20:
 29299     141B                     i1l10240:
 29300                           
 29301                           ;mcc_generated_files/eusart1.c: 214:         {;mcc_generated_files/eusart1.c: 215:      
      +                                 eusart1TxTail = 0;
 29302     141B  01DC               	clrf	_eusart1TxTail	;volatile
 29303     141C                     i1l10242:
 29304                           
 29305                           ;mcc_generated_files/eusart1.c: 217:         eusart1TxBufferRemaining++;
 29306     141C  3001               	movlw	1
 29307     141D  00F0               	movwf	??_EUSART1_Transmit_ISR
 29308     141E  0870               	movf	??_EUSART1_Transmit_ISR,w
 29309     141F  07DB               	addwf	_eusart1TxBufferRemaining,f	;volatile
 29310                           
 29311                           ;mcc_generated_files/eusart1.c: 218:     }
 29312     1420  2C23               	goto	i1l1235
 29313     1421                     i1l1232:	
 29314                           ;mcc_generated_files/eusart1.c: 219:     else
 29315                           
 29316                           
 29317                           ;mcc_generated_files/eusart1.c: 220:     {;mcc_generated_files/eusart1.c: 221:         P
      +                          IE3bits.TX1IE = 0;
 29318     1421  014E               	movlb	14	; select bank14
 29319     1422  1219               	bcf	25,4	;volatile
 29320     1423                     i1l1235:
 29321     1423  0008               	return
 29322     1424                     __end_of_EUSART1_Transmit_ISR:
 29323                           
 29324                           	psect	text168
 29325     13E0                     __ptext168:	
 29326 ;; *************** function _EUSART2_Transmit_ISR *****************
 29327 ;; Defined at:
 29328 ;;		line 197 in file "mcc_generated_files/eusart2.c"
 29329 ;; Parameters:    Size  Location     Type
 29330 ;;		None
 29331 ;; Auto vars:     Size  Location     Type
 29332 ;;		None
 29333 ;; Return value:  Size  Location     Type
 29334 ;;                  1    wreg      void 
 29335 ;; Registers used:
 29336 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 29337 ;; Tracked objects:
 29338 ;;		On entry : 0/0
 29339 ;;		On exit  : 0/0
 29340 ;;		Unchanged: 0/0
 29341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29344 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29345 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29346 ;;Total ram usage:        1 bytes
 29347 ;; Hardware stack levels used: 1
 29348 ;; This function calls:
 29349 ;;		Nothing
 29350 ;; This function is called by:
 29351 ;;		_EUSART2_Initialize
 29352 ;;		_INTERRUPT_InterruptManager
 29353 ;; This function uses a non-reentrant model
 29354 ;;
 29355                           
 29356     13E0                     _EUSART2_Transmit_ISR:	
 29357                           ;psect for function _EUSART2_Transmit_ISR
 29358                           
 29359     13E0                     i1l10200:	
 29360                           ;incstack = 0
 29361 ;; hardware stack exceeded
 29362                           ; Regs used in _EUSART2_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 29363                           
 29364                           
 29365                           ;mcc_generated_files/eusart2.c: 201:     if(sizeof(eusart2TxBuffer) > eusart2TxBufferRem
      +                          aining)
 29366     13E0  3008               	movlw	8
 29367     13E1  0140               	movlb	0	; select bank0
 29368     13E2  0261               	subwf	_eusart2TxBufferRemaining,w	;volatile
 29369     13E3  1803               	skipnc
 29370     13E4  2BE6               	goto	u692_21
 29371     13E5  2BE7               	goto	u692_20
 29372     13E6                     u692_21:
 29373     13E6  2BFF               	goto	i1l1082
 29374     13E7                     u692_20:
 29375     13E7                     i1l10202:
 29376                           
 29377                           ;mcc_generated_files/eusart2.c: 202:     {;mcc_generated_files/eusart2.c: 203:         T
      +                          X2REG = eusart2TxBuffer[eusart2TxTail++];
 29378     13E7  0862               	movf	_eusart2TxTail,w
 29379     13E8  3EDD               	addlw	(low (_eusart2TxBuffer| 0))& (0+255)
 29380     13E9  0086               	movwf	6
 29381     13EA  0187               	clrf	7
 29382     13EB  0801               	movf	1,w
 29383     13EC  0154               	movlb	20	; select bank20
 29384     13ED  009A               	movwf	26	;volatile
 29385     13EE                     i1l10204:
 29386     13EE  3001               	movlw	1
 29387     13EF  00F0               	movwf	??_EUSART2_Transmit_ISR
 29388     13F0  0870               	movf	??_EUSART2_Transmit_ISR,w
 29389     13F1  0140               	movlb	0	; select bank0
 29390     13F2  07E2               	addwf	_eusart2TxTail,f	;volatile
 29391     13F3                     i1l10206:
 29392                           
 29393                           ;mcc_generated_files/eusart2.c: 204:         if(sizeof(eusart2TxBuffer) <= eusart2TxTail
      +                          )
 29394     13F3  3008               	movlw	8
 29395     13F4  0262               	subwf	_eusart2TxTail,w	;volatile
 29396     13F5  1C03               	skipc
 29397     13F6  2BF8               	goto	u693_21
 29398     13F7  2BF9               	goto	u693_20
 29399     13F8                     u693_21:
 29400     13F8  2BFA               	goto	i1l10210
 29401     13F9                     u693_20:
 29402     13F9                     i1l10208:
 29403                           
 29404                           ;mcc_generated_files/eusart2.c: 205:         {;mcc_generated_files/eusart2.c: 206:      
      +                                 eusart2TxTail = 0;
 29405     13F9  01E2               	clrf	_eusart2TxTail	;volatile
 29406     13FA                     i1l10210:
 29407                           
 29408                           ;mcc_generated_files/eusart2.c: 208:         eusart2TxBufferRemaining++;
 29409     13FA  3001               	movlw	1
 29410     13FB  00F0               	movwf	??_EUSART2_Transmit_ISR
 29411     13FC  0870               	movf	??_EUSART2_Transmit_ISR,w
 29412     13FD  07E1               	addwf	_eusart2TxBufferRemaining,f	;volatile
 29413                           
 29414                           ;mcc_generated_files/eusart2.c: 209:     }
 29415     13FE  2C01               	goto	i1l1085
 29416     13FF                     i1l1082:	
 29417                           ;mcc_generated_files/eusart2.c: 210:     else
 29418                           
 29419                           
 29420                           ;mcc_generated_files/eusart2.c: 211:     {;mcc_generated_files/eusart2.c: 212:         P
      +                          IE3bits.TX2IE = 0;
 29421     13FF  014E               	movlb	14	; select bank14
 29422     1400  1319               	bcf	25,6	;volatile
 29423     1401                     i1l1085:
 29424     1401  0008               	return
 29425     1402                     __end_of_EUSART2_Transmit_ISR:
 29426                           
 29427                           	psect	text169
 29428     0875                     __ptext169:	
 29429 ;; *************** function _EUSART1_Receive_ISR *****************
 29430 ;; Defined at:
 29431 ;;		line 225 in file "mcc_generated_files/eusart1.c"
 29432 ;; Parameters:    Size  Location     Type
 29433 ;;		None
 29434 ;; Auto vars:     Size  Location     Type
 29435 ;;		None
 29436 ;; Return value:  Size  Location     Type
 29437 ;;                  1    wreg      void 
 29438 ;; Registers used:
 29439 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 29440 ;; Tracked objects:
 29441 ;;		On entry : 0/0
 29442 ;;		On exit  : 0/0
 29443 ;;		Unchanged: 0/0
 29444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29449 ;;Total ram usage:        0 bytes
 29450 ;; Hardware stack levels used: 1
 29451 ;; Hardware stack levels required when called: 2
 29452 ;; This function calls:
 29453 ;;		NULL
 29454 ;;		_EUSART1_DefaultErrorHandler
 29455 ;;		_EUSART1_DefaultFramingErrorHandler
 29456 ;;		_EUSART1_DefaultOverrunErrorHandler
 29457 ;;		_EUSART1_RxDataHandler
 29458 ;; This function is called by:
 29459 ;;		_EUSART1_Initialize
 29460 ;;		_INTERRUPT_InterruptManager
 29461 ;; This function uses a non-reentrant model
 29462 ;;
 29463                           
 29464     0875                     _EUSART1_Receive_ISR:	
 29465                           ;psect for function _EUSART1_Receive_ISR
 29466                           
 29467     0875                     i1l10244:	
 29468                           ;incstack = 0
 29469 ;; hardware stack exceeded
 29470                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 29471                           
 29472                           
 29473                           ;mcc_generated_files/eusart1.c: 228:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 29474     0875  0140               	movlb	0	; select bank0
 29475     0876  085A               	movf	_eusart1RxHead,w	;volatile
 29476     0877  3EBD               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 29477     0878  0086               	movwf	6
 29478     0879  0187               	clrf	7
 29479     087A  0181               	clrf	1
 29480     087B                     i1l10246:
 29481                           
 29482                           ;mcc_generated_files/eusart1.c: 230:     if(RC1STAbits.FERR){
 29483     087B  0142               	movlb	2	; select bank2
 29484     087C  1D1D               	btfss	29,2	;volatile
 29485     087D  287F               	goto	u699_21
 29486     087E  2880               	goto	u699_20
 29487     087F                     u699_21:
 29488     087F  288C               	goto	i1l10252
 29489     0880                     u699_20:
 29490     0880                     i1l10248:
 29491                           
 29492                           ;mcc_generated_files/eusart1.c: 231:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 29493     0880  0140               	movlb	0	; select bank0
 29494     0881  085A               	movf	_eusart1RxHead,w	;volatile
 29495     0882  3EBD               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 29496     0883  0086               	movwf	6
 29497     0884  0187               	clrf	7
 29498     0885  1481               	bsf	1,1
 29499     0886                     i1l10250:
 29500                           
 29501                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_FramingErrorHandler();
 29502     0886  0142               	movlb	2	; select bank2
 29503     0887  0862               	movf	(_EUSART1_FramingErrorHandler+1)^(0+256),w
 29504     0888  008A               	movwf	10
 29505     0889  0861               	movf	_EUSART1_FramingErrorHandler^(0+256),w
 29506     088A  000A               	callw
 29507     088B  3188               	pagesel	$
 29508     088C                     i1l10252:
 29509                           
 29510                           ;mcc_generated_files/eusart1.c: 235:     if(RC1STAbits.OERR){
 29511     088C  0142               	movlb	2	; select bank2
 29512     088D  1C9D               	btfss	29,1	;volatile
 29513     088E  2890               	goto	u700_21
 29514     088F  2891               	goto	u700_20
 29515     0890                     u700_21:
 29516     0890  289D               	goto	i1l10258
 29517     0891                     u700_20:
 29518     0891                     i1l10254:
 29519                           
 29520                           ;mcc_generated_files/eusart1.c: 236:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 29521     0891  0140               	movlb	0	; select bank0
 29522     0892  085A               	movf	_eusart1RxHead,w	;volatile
 29523     0893  3EBD               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 29524     0894  0086               	movwf	6
 29525     0895  0187               	clrf	7
 29526     0896  1501               	bsf	1,2
 29527     0897                     i1l10256:
 29528                           
 29529                           ;mcc_generated_files/eusart1.c: 237:         EUSART1_OverrunErrorHandler();
 29530     0897  0142               	movlb	2	; select bank2
 29531     0898  0860               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+256),w
 29532     0899  008A               	movwf	10
 29533     089A  085F               	movf	_EUSART1_OverrunErrorHandler^(0+256),w
 29534     089B  000A               	callw
 29535     089C  3188               	pagesel	$
 29536     089D                     i1l10258:
 29537                           
 29538                           ;mcc_generated_files/eusart1.c: 240:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 29539     089D  0140               	movlb	0	; select bank0
 29540     089E  085A               	movf	_eusart1RxHead,w	;volatile
 29541     089F  3EBD               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 29542     08A0  0086               	movwf	6
 29543     08A1  0187               	clrf	7
 29544     08A2  0801               	movf	1,w
 29545     08A3  1903               	btfsc	3,2
 29546     08A4  28A6               	goto	u701_21
 29547     08A5  28A7               	goto	u701_20
 29548     08A6                     u701_21:
 29549     08A6  28AE               	goto	i1l10262
 29550     08A7                     u701_20:
 29551     08A7                     i1l10260:
 29552                           
 29553                           ;mcc_generated_files/eusart1.c: 241:         EUSART1_ErrorHandler();
 29554     08A7  0142               	movlb	2	; select bank2
 29555     08A8  085E               	movf	(_EUSART1_ErrorHandler+1)^(0+256),w
 29556     08A9  008A               	movwf	10
 29557     08AA  085D               	movf	_EUSART1_ErrorHandler^(0+256),w
 29558     08AB  000A               	callw
 29559     08AC  3188               	pagesel	$
 29560                           
 29561                           ;mcc_generated_files/eusart1.c: 242:     } else {
 29562     08AD  28B1               	goto	i1l1242
 29563     08AE                     i1l10262:
 29564                           
 29565                           ;mcc_generated_files/eusart1.c: 243:         EUSART1_RxDataHandler();
 29566     08AE  3192  22DE  3188   	fcall	_EUSART1_RxDataHandler
 29567     08B1                     i1l1242:
 29568     08B1  0008               	return
 29569     08B2                     __end_of_EUSART1_Receive_ISR:
 29570                           
 29571                           	psect	text170
 29572     083C                     __ptext170:	
 29573 ;; *************** function _EUSART2_Receive_ISR *****************
 29574 ;; Defined at:
 29575 ;;		line 216 in file "mcc_generated_files/eusart2.c"
 29576 ;; Parameters:    Size  Location     Type
 29577 ;;		None
 29578 ;; Auto vars:     Size  Location     Type
 29579 ;;		None
 29580 ;; Return value:  Size  Location     Type
 29581 ;;                  1    wreg      void 
 29582 ;; Registers used:
 29583 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 29584 ;; Tracked objects:
 29585 ;;		On entry : 0/0
 29586 ;;		On exit  : 0/0
 29587 ;;		Unchanged: 0/0
 29588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29593 ;;Total ram usage:        0 bytes
 29594 ;; Hardware stack levels used: 1
 29595 ;; Hardware stack levels required when called: 2
 29596 ;; This function calls:
 29597 ;;		NULL
 29598 ;;		_EUSART2_DefaultErrorHandler
 29599 ;;		_EUSART2_DefaultFramingErrorHandler
 29600 ;;		_EUSART2_DefaultOverrunErrorHandler
 29601 ;;		_EUSART2_RxDataHandler
 29602 ;; This function is called by:
 29603 ;;		_EUSART2_Initialize
 29604 ;;		_INTERRUPT_InterruptManager
 29605 ;; This function uses a non-reentrant model
 29606 ;;
 29607                           
 29608     083C                     _EUSART2_Receive_ISR:	
 29609                           ;psect for function _EUSART2_Receive_ISR
 29610                           
 29611     083C                     i1l14508:	
 29612                           ;incstack = 0
 29613 ;; hardware stack exceeded
 29614                           ; Regs used in _EUSART2_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 29615                           
 29616                           
 29617                           ;mcc_generated_files/eusart2.c: 219:     eusart2RxStatusBuffer[eusart2RxHead].status = 0
      +                          ;
 29618     083C  087C               	movf	_eusart2RxHead,w	;volatile
 29619     083D  3ECD               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 29620     083E  0086               	movwf	6
 29621     083F  0187               	clrf	7
 29622     0840  0181               	clrf	1
 29623     0841                     i1l14510:
 29624                           
 29625                           ;mcc_generated_files/eusart2.c: 221:     if(RC2STAbits.FERR){
 29626     0841  0154               	movlb	20	; select bank20
 29627     0842  1D1D               	btfss	29,2	;volatile
 29628     0843  2845               	goto	u1159_21
 29629     0844  2846               	goto	u1159_20
 29630     0845                     u1159_21:
 29631     0845  2851               	goto	i1l14516
 29632     0846                     u1159_20:
 29633     0846                     i1l14512:
 29634                           
 29635                           ;mcc_generated_files/eusart2.c: 222:         eusart2RxStatusBuffer[eusart2RxHead].ferr =
      +                           1;
 29636     0846  087C               	movf	_eusart2RxHead,w	;volatile
 29637     0847  3ECD               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 29638     0848  0086               	movwf	6
 29639     0849  0187               	clrf	7
 29640     084A  1481               	bsf	1,1
 29641     084B                     i1l14514:
 29642                           
 29643                           ;mcc_generated_files/eusart2.c: 223:         EUSART2_FramingErrorHandler();
 29644     084B  0142               	movlb	2	; select bank2
 29645     084C  086C               	movf	(_EUSART2_FramingErrorHandler+1)^(0+256),w
 29646     084D  008A               	movwf	10
 29647     084E  086B               	movf	_EUSART2_FramingErrorHandler^(0+256),w
 29648     084F  000A               	callw
 29649     0850  3188               	pagesel	$
 29650     0851                     i1l14516:
 29651                           
 29652                           ;mcc_generated_files/eusart2.c: 226:     if(RC2STAbits.OERR){
 29653     0851  0154               	movlb	20	; select bank20
 29654     0852  1C9D               	btfss	29,1	;volatile
 29655     0853  2855               	goto	u1160_21
 29656     0854  2856               	goto	u1160_20
 29657     0855                     u1160_21:
 29658     0855  2861               	goto	i1l14522
 29659     0856                     u1160_20:
 29660     0856                     i1l14518:
 29661                           
 29662                           ;mcc_generated_files/eusart2.c: 227:         eusart2RxStatusBuffer[eusart2RxHead].oerr =
      +                           1;
 29663     0856  087C               	movf	_eusart2RxHead,w	;volatile
 29664     0857  3ECD               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 29665     0858  0086               	movwf	6
 29666     0859  0187               	clrf	7
 29667     085A  1501               	bsf	1,2
 29668     085B                     i1l14520:
 29669                           
 29670                           ;mcc_generated_files/eusart2.c: 228:         EUSART2_OverrunErrorHandler();
 29671     085B  0142               	movlb	2	; select bank2
 29672     085C  086A               	movf	(_EUSART2_OverrunErrorHandler+1)^(0+256),w
 29673     085D  008A               	movwf	10
 29674     085E  0869               	movf	_EUSART2_OverrunErrorHandler^(0+256),w
 29675     085F  000A               	callw
 29676     0860  3188               	pagesel	$
 29677     0861                     i1l14522:
 29678                           
 29679                           ;mcc_generated_files/eusart2.c: 231:     if(eusart2RxStatusBuffer[eusart2RxHead].status)
      +                          {
 29680     0861  087C               	movf	_eusart2RxHead,w	;volatile
 29681     0862  3ECD               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 29682     0863  0086               	movwf	6
 29683     0864  0187               	clrf	7
 29684     0865  0801               	movf	1,w
 29685     0866  1903               	btfsc	3,2
 29686     0867  2869               	goto	u1161_21
 29687     0868  286A               	goto	u1161_20
 29688     0869                     u1161_21:
 29689     0869  2871               	goto	i1l14526
 29690     086A                     u1161_20:
 29691     086A                     i1l14524:
 29692                           
 29693                           ;mcc_generated_files/eusart2.c: 232:         EUSART2_ErrorHandler();
 29694     086A  0142               	movlb	2	; select bank2
 29695     086B  0868               	movf	(_EUSART2_ErrorHandler+1)^(0+256),w
 29696     086C  008A               	movwf	10
 29697     086D  0867               	movf	_EUSART2_ErrorHandler^(0+256),w
 29698     086E  000A               	callw
 29699     086F  3188               	pagesel	$
 29700                           
 29701                           ;mcc_generated_files/eusart2.c: 233:     } else {
 29702     0870  2874               	goto	i1l1092
 29703     0871                     i1l14526:
 29704                           
 29705                           ;mcc_generated_files/eusart2.c: 234:         EUSART2_RxDataHandler();
 29706     0871  3192  221B  3188   	fcall	_EUSART2_RxDataHandler
 29707     0874                     i1l1092:
 29708     0874  0008               	return
 29709     0875                     __end_of_EUSART2_Receive_ISR:
 29710                           
 29711                           	psect	text171
 29712     1E88                     __ptext171:	
 29713 ;; *************** function _EUSART2_DefaultOverrunErrorHandler *****************
 29714 ;; Defined at:
 29715 ;;		line 252 in file "mcc_generated_files/eusart2.c"
 29716 ;; Parameters:    Size  Location     Type
 29717 ;;		None
 29718 ;; Auto vars:     Size  Location     Type
 29719 ;;		None
 29720 ;; Return value:  Size  Location     Type
 29721 ;;                  1    wreg      void 
 29722 ;; Registers used:
 29723 ;;		None
 29724 ;; Tracked objects:
 29725 ;;		On entry : 0/0
 29726 ;;		On exit  : 0/0
 29727 ;;		Unchanged: 0/0
 29728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29733 ;;Total ram usage:        0 bytes
 29734 ;; Hardware stack levels used: 1
 29735 ;; This function calls:
 29736 ;;		Nothing
 29737 ;; This function is called by:
 29738 ;;		_EUSART2_Initialize
 29739 ;;		_EUSART2_Receive_ISR
 29740 ;; This function uses a non-reentrant model
 29741 ;;
 29742                           
 29743     1E88                     _EUSART2_DefaultOverrunErrorHandler:	
 29744                           ;psect for function _EUSART2_DefaultOverrunErrorHandler
 29745                           
 29746     1E88                     i1l13710:	
 29747                           ;incstack = 0
 29748 ;; hardware stack exceeded
 29749                           ; Regs used in _EUSART2_DefaultOverrunErrorHandler: []
 29750                           
 29751                           
 29752                           ;mcc_generated_files/eusart2.c: 255:     RC2STAbits.CREN = 0;
 29753     1E88  0154               	movlb	20	; select bank20
 29754     1E89  121D               	bcf	29,4	;volatile
 29755                           
 29756                           ;mcc_generated_files/eusart2.c: 256:     RC2STAbits.CREN = 1;
 29757     1E8A  161D               	bsf	29,4	;volatile
 29758     1E8B                     i1l1102:
 29759     1E8B  0008               	return
 29760     1E8C                     __end_of_EUSART2_DefaultOverrunErrorHandler:
 29761                           
 29762                           	psect	text172
 29763     1E59                     __ptext172:	
 29764 ;; *************** function _EUSART2_DefaultFramingErrorHandler *****************
 29765 ;; Defined at:
 29766 ;;		line 250 in file "mcc_generated_files/eusart2.c"
 29767 ;; Parameters:    Size  Location     Type
 29768 ;;		None
 29769 ;; Auto vars:     Size  Location     Type
 29770 ;;		None
 29771 ;; Return value:  Size  Location     Type
 29772 ;;                  1    wreg      void 
 29773 ;; Registers used:
 29774 ;;		None
 29775 ;; Tracked objects:
 29776 ;;		On entry : 0/0
 29777 ;;		On exit  : 0/0
 29778 ;;		Unchanged: 0/0
 29779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29784 ;;Total ram usage:        0 bytes
 29785 ;; Hardware stack levels used: 1
 29786 ;; This function calls:
 29787 ;;		Nothing
 29788 ;; This function is called by:
 29789 ;;		_EUSART2_Initialize
 29790 ;;		_EUSART2_Receive_ISR
 29791 ;; This function uses a non-reentrant model
 29792 ;;
 29793                           
 29794     1E59                     _EUSART2_DefaultFramingErrorHandler:	
 29795                           ;psect for function _EUSART2_DefaultFramingErrorHandler
 29796                           
 29797     1E59                     i1l1099:	
 29798                           ;incstack = 0
 29799 ;; hardware stack exceeded
 29800                           ; Regs used in _EUSART2_DefaultFramingErrorHandler: []
 29801                           
 29802     1E59  0008               	return
 29803     1E5A                     __end_of_EUSART2_DefaultFramingErrorHandler:
 29804                           
 29805                           	psect	text173
 29806     1E84                     __ptext173:	
 29807 ;; *************** function _EUSART2_DefaultErrorHandler *****************
 29808 ;; Defined at:
 29809 ;;		line 260 in file "mcc_generated_files/eusart2.c"
 29810 ;; Parameters:    Size  Location     Type
 29811 ;;		None
 29812 ;; Auto vars:     Size  Location     Type
 29813 ;;		None
 29814 ;; Return value:  Size  Location     Type
 29815 ;;                  1    wreg      void 
 29816 ;; Registers used:
 29817 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 29818 ;; Tracked objects:
 29819 ;;		On entry : 0/0
 29820 ;;		On exit  : 0/0
 29821 ;;		Unchanged: 0/0
 29822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29827 ;;Total ram usage:        0 bytes
 29828 ;; Hardware stack levels used: 1
 29829 ;; Hardware stack levels required when called: 1
 29830 ;; This function calls:
 29831 ;;		_EUSART2_RxDataHandler
 29832 ;; This function is called by:
 29833 ;;		_EUSART2_Initialize
 29834 ;;		_EUSART2_Receive_ISR
 29835 ;; This function uses a non-reentrant model
 29836 ;;
 29837                           
 29838     1E84                     _EUSART2_DefaultErrorHandler:	
 29839                           ;psect for function _EUSART2_DefaultErrorHandler
 29840                           
 29841     1E84                     i1l13712:	
 29842                           ;incstack = 0
 29843 ;; hardware stack exceeded
 29844                           ; Regs used in _EUSART2_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 29845                           
 29846                           
 29847                           ;mcc_generated_files/eusart2.c: 261:     EUSART2_RxDataHandler();
 29848     1E84  3192  221B  319E   	fcall	_EUSART2_RxDataHandler
 29849     1E87                     i1l1105:
 29850     1E87  0008               	return
 29851     1E88                     __end_of_EUSART2_DefaultErrorHandler:
 29852                           
 29853                           	psect	text174
 29854     121B                     __ptext174:	
 29855 ;; *************** function _EUSART2_RxDataHandler *****************
 29856 ;; Defined at:
 29857 ;;		line 240 in file "mcc_generated_files/eusart2.c"
 29858 ;; Parameters:    Size  Location     Type
 29859 ;;		None
 29860 ;; Auto vars:     Size  Location     Type
 29861 ;;		None
 29862 ;; Return value:  Size  Location     Type
 29863 ;;                  1    wreg      void 
 29864 ;; Registers used:
 29865 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 29866 ;; Tracked objects:
 29867 ;;		On entry : 0/0
 29868 ;;		On exit  : 0/0
 29869 ;;		Unchanged: 0/0
 29870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29873 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29874 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29875 ;;Total ram usage:        1 bytes
 29876 ;; Hardware stack levels used: 1
 29877 ;; This function calls:
 29878 ;;		Nothing
 29879 ;; This function is called by:
 29880 ;;		_EUSART2_Receive_ISR
 29881 ;;		_EUSART2_DefaultErrorHandler
 29882 ;; This function uses a non-reentrant model
 29883 ;;
 29884                           
 29885     121B                     _EUSART2_RxDataHandler:	
 29886                           ;psect for function _EUSART2_RxDataHandler
 29887                           
 29888     121B                     i1l13508:	
 29889                           ;incstack = 0
 29890 ;; hardware stack exceeded
 29891                           ; Regs used in _EUSART2_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 29892                           
 29893                           
 29894                           ;mcc_generated_files/eusart2.c: 242:     eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 29895     121B  087C               	movf	_eusart2RxHead,w
 29896     121C  3ED5               	addlw	(low (_eusart2RxBuffer| 0))& (0+255)
 29897     121D  0086               	movwf	6
 29898     121E  0187               	clrf	7
 29899     121F  0154               	movlb	20	; select bank20
 29900     1220  0819               	movf	25,w	;volatile
 29901     1221  0081               	movwf	1
 29902     1222                     i1l13510:
 29903     1222  3001               	movlw	1
 29904     1223  00F0               	movwf	??_EUSART2_RxDataHandler
 29905     1224  0870               	movf	??_EUSART2_RxDataHandler,w
 29906     1225  07FC               	addwf	_eusart2RxHead,f	;volatile
 29907     1226                     i1l13512:
 29908                           
 29909                           ;mcc_generated_files/eusart2.c: 243:     if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 29910     1226  3008               	movlw	8
 29911     1227  027C               	subwf	_eusart2RxHead,w	;volatile
 29912     1228  1C03               	skipc
 29913     1229  2A2B               	goto	u1035_21
 29914     122A  2A2C               	goto	u1035_20
 29915     122B                     u1035_21:
 29916     122B  2A2D               	goto	i1l13516
 29917     122C                     u1035_20:
 29918     122C                     i1l13514:
 29919                           
 29920                           ;mcc_generated_files/eusart2.c: 244:     {;mcc_generated_files/eusart2.c: 245:         e
      +                          usart2RxHead = 0;
 29921     122C  01FC               	clrf	_eusart2RxHead	;volatile
 29922     122D                     i1l13516:
 29923                           
 29924                           ;mcc_generated_files/eusart2.c: 247:     eusart2RxCount++;
 29925     122D  3001               	movlw	1
 29926     122E  00F0               	movwf	??_EUSART2_RxDataHandler
 29927     122F  0870               	movf	??_EUSART2_RxDataHandler,w
 29928     1230  0140               	movlb	0	; select bank0
 29929     1231  07DF               	addwf	_eusart2RxCount,f	;volatile
 29930     1232                     i1l1096:
 29931     1232  0008               	return
 29932     1233                     __end_of_EUSART2_RxDataHandler:
 29933                           
 29934                           	psect	text175
 29935     1E80                     __ptext175:	
 29936 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 29937 ;; Defined at:
 29938 ;;		line 261 in file "mcc_generated_files/eusart1.c"
 29939 ;; Parameters:    Size  Location     Type
 29940 ;;		None
 29941 ;; Auto vars:     Size  Location     Type
 29942 ;;		None
 29943 ;; Return value:  Size  Location     Type
 29944 ;;                  1    wreg      void 
 29945 ;; Registers used:
 29946 ;;		None
 29947 ;; Tracked objects:
 29948 ;;		On entry : 0/0
 29949 ;;		On exit  : 0/0
 29950 ;;		Unchanged: 0/0
 29951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29956 ;;Total ram usage:        0 bytes
 29957 ;; Hardware stack levels used: 1
 29958 ;; This function calls:
 29959 ;;		Nothing
 29960 ;; This function is called by:
 29961 ;;		_EUSART1_Initialize
 29962 ;;		_EUSART1_Receive_ISR
 29963 ;; This function uses a non-reentrant model
 29964 ;;
 29965                           
 29966     1E80                     _EUSART1_DefaultOverrunErrorHandler:	
 29967                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 29968                           
 29969     1E80                     i1l9246:	
 29970                           ;incstack = 0
 29971 ;; hardware stack exceeded
 29972                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 29973                           
 29974                           
 29975                           ;mcc_generated_files/eusart1.c: 264:     RC1STAbits.CREN = 0;
 29976     1E80  0142               	movlb	2	; select bank2
 29977     1E81  121D               	bcf	29,4	;volatile
 29978                           
 29979                           ;mcc_generated_files/eusart1.c: 265:     RC1STAbits.CREN = 1;
 29980     1E82  161D               	bsf	29,4	;volatile
 29981     1E83                     i1l1252:
 29982     1E83  0008               	return
 29983     1E84                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 29984                           
 29985                           	psect	text176
 29986     1E58                     __ptext176:	
 29987 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 29988 ;; Defined at:
 29989 ;;		line 259 in file "mcc_generated_files/eusart1.c"
 29990 ;; Parameters:    Size  Location     Type
 29991 ;;		None
 29992 ;; Auto vars:     Size  Location     Type
 29993 ;;		None
 29994 ;; Return value:  Size  Location     Type
 29995 ;;                  1    wreg      void 
 29996 ;; Registers used:
 29997 ;;		None
 29998 ;; Tracked objects:
 29999 ;;		On entry : 0/0
 30000 ;;		On exit  : 0/0
 30001 ;;		Unchanged: 0/0
 30002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 30003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30007 ;;Total ram usage:        0 bytes
 30008 ;; Hardware stack levels used: 1
 30009 ;; This function calls:
 30010 ;;		Nothing
 30011 ;; This function is called by:
 30012 ;;		_EUSART1_Initialize
 30013 ;;		_EUSART1_Receive_ISR
 30014 ;; This function uses a non-reentrant model
 30015 ;;
 30016                           
 30017     1E58                     _EUSART1_DefaultFramingErrorHandler:	
 30018                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 30019                           
 30020     1E58                     i1l1249:	
 30021                           ;incstack = 0
 30022 ;; hardware stack exceeded
 30023                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 30024                           
 30025     1E58  0008               	return
 30026     1E59                     __end_of_EUSART1_DefaultFramingErrorHandler:
 30027                           
 30028                           	psect	text177
 30029     1E7C                     __ptext177:	
 30030 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 30031 ;; Defined at:
 30032 ;;		line 269 in file "mcc_generated_files/eusart1.c"
 30033 ;; Parameters:    Size  Location     Type
 30034 ;;		None
 30035 ;; Auto vars:     Size  Location     Type
 30036 ;;		None
 30037 ;; Return value:  Size  Location     Type
 30038 ;;                  1    wreg      void 
 30039 ;; Registers used:
 30040 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 30041 ;; Tracked objects:
 30042 ;;		On entry : 0/0
 30043 ;;		On exit  : 0/0
 30044 ;;		Unchanged: 0/0
 30045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 30046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30050 ;;Total ram usage:        0 bytes
 30051 ;; Hardware stack levels used: 1
 30052 ;; Hardware stack levels required when called: 1
 30053 ;; This function calls:
 30054 ;;		_EUSART1_RxDataHandler
 30055 ;; This function is called by:
 30056 ;;		_EUSART1_Initialize
 30057 ;;		_EUSART1_Receive_ISR
 30058 ;; This function uses a non-reentrant model
 30059 ;;
 30060                           
 30061     1E7C                     _EUSART1_DefaultErrorHandler:	
 30062                           ;psect for function _EUSART1_DefaultErrorHandler
 30063                           
 30064     1E7C                     i1l9248:	
 30065                           ;incstack = 0
 30066 ;; hardware stack exceeded
 30067                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 30068                           
 30069                           
 30070                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_RxDataHandler();
 30071     1E7C  3192  22DE  319E   	fcall	_EUSART1_RxDataHandler
 30072     1E7F                     i1l1255:
 30073     1E7F  0008               	return
 30074     1E80                     __end_of_EUSART1_DefaultErrorHandler:
 30075                           
 30076                           	psect	text178
 30077     12DE                     __ptext178:	
 30078 ;; *************** function _EUSART1_RxDataHandler *****************
 30079 ;; Defined at:
 30080 ;;		line 249 in file "mcc_generated_files/eusart1.c"
 30081 ;; Parameters:    Size  Location     Type
 30082 ;;		None
 30083 ;; Auto vars:     Size  Location     Type
 30084 ;;		None
 30085 ;; Return value:  Size  Location     Type
 30086 ;;                  1    wreg      void 
 30087 ;; Registers used:
 30088 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 30089 ;; Tracked objects:
 30090 ;;		On entry : 0/0
 30091 ;;		On exit  : 0/0
 30092 ;;		Unchanged: 0/0
 30093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 30094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30096 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30097 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30098 ;;Total ram usage:        1 bytes
 30099 ;; Hardware stack levels used: 1
 30100 ;; This function calls:
 30101 ;;		Nothing
 30102 ;; This function is called by:
 30103 ;;		_EUSART1_Receive_ISR
 30104 ;;		_EUSART1_DefaultErrorHandler
 30105 ;; This function uses a non-reentrant model
 30106 ;;
 30107                           
 30108     12DE                     _EUSART1_RxDataHandler:	
 30109                           ;psect for function _EUSART1_RxDataHandler
 30110                           
 30111     12DE                     i1l8982:	
 30112                           ;incstack = 0
 30113 ;; hardware stack exceeded
 30114                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 30115                           
 30116                           
 30117                           ;mcc_generated_files/eusart1.c: 251:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 30118     12DE  0140               	movlb	0	; select bank0
 30119     12DF  085A               	movf	_eusart1RxHead,w
 30120     12E0  3E44               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 30121     12E1  0086               	movwf	6
 30122     12E2  3001               	movlw	1	; select bank2/3
 30123     12E3  0087               	movwf	7
 30124     12E4  0142               	movlb	2	; select bank2
 30125     12E5  0819               	movf	25,w	;volatile
 30126     12E6  0081               	movwf	1
 30127     12E7                     i1l8984:
 30128     12E7  3001               	movlw	1
 30129     12E8  00F0               	movwf	??_EUSART1_RxDataHandler
 30130     12E9  0870               	movf	??_EUSART1_RxDataHandler,w
 30131     12EA  0140               	movlb	0	; select bank0
 30132     12EB  07DA               	addwf	_eusart1RxHead,f	;volatile
 30133     12EC                     i1l8986:
 30134                           
 30135                           ;mcc_generated_files/eusart1.c: 252:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 30136     12EC  3008               	movlw	8
 30137     12ED  025A               	subwf	_eusart1RxHead,w	;volatile
 30138     12EE  1C03               	skipc
 30139     12EF  2AF1               	goto	u561_21
 30140     12F0  2AF2               	goto	u561_20
 30141     12F1                     u561_21:
 30142     12F1  2AF3               	goto	i1l8990
 30143     12F2                     u561_20:
 30144     12F2                     i1l8988:
 30145                           
 30146                           ;mcc_generated_files/eusart1.c: 253:     {;mcc_generated_files/eusart1.c: 254:         e
      +                          usart1RxHead = 0;
 30147     12F2  01DA               	clrf	_eusart1RxHead	;volatile
 30148     12F3                     i1l8990:
 30149                           
 30150                           ;mcc_generated_files/eusart1.c: 256:     eusart1RxCount++;
 30151     12F3  3001               	movlw	1
 30152     12F4  00F0               	movwf	??_EUSART1_RxDataHandler
 30153     12F5  0870               	movf	??_EUSART1_RxDataHandler,w
 30154     12F6  07D8               	addwf	_eusart1RxCount,f	;volatile
 30155     12F7                     i1l1246:
 30156     12F7  0008               	return
 30157     12F8                     __end_of_EUSART1_RxDataHandler:
 30158     007E                     btemp	set	126	;btemp
 30159     007E                     int$flags	set	126
 30160     007E                     wtemp0	set	126
 30161                           
 30162                           	psect	idloc
 30163                           
 30164                           ;Config register IDLOC0 @ 0x8000
 30165                           ;	unspecified, using default values
 30166     8000                     	org	32768
 30167     8000  3FFF               	dw	16383
 30168                           
 30169                           ;Config register IDLOC1 @ 0x8001
 30170                           ;	unspecified, using default values
 30171     8001                     	org	32769
 30172     8001  3FFF               	dw	16383
 30173                           
 30174                           ;Config register IDLOC2 @ 0x8002
 30175                           ;	unspecified, using default values
 30176     8002                     	org	32770
 30177     8002  3FFF               	dw	16383
 30178                           
 30179                           ;Config register IDLOC3 @ 0x8003
 30180                           ;	unspecified, using default values
 30181     8003                     	org	32771
 30182     8003  3FFF               	dw	16383
 30183                           
 30184                           	psect	config
 30185                           
 30186                           ;Config register CONFIG1 @ 0x8007
 30187                           ;	External Oscillator mode selection bits
 30188                           ;	FEXTOSC = OFF, Oscillator not enabled
 30189                           ;	Power-up default value for COSC bits
 30190                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 30191                           ;	Clock Out Enable bit
 30192                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 30193                           ;	Clock Switch Enable bit
 30194                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 30195                           ;	Fail-Safe Clock Monitor Enable bit
 30196                           ;	FCMEN = ON, FSCM timer enabled
 30197     8007                     	org	32775
 30198     8007  3FEC               	dw	16364
 30199                           
 30200                           ;Config register CONFIG2 @ 0x8008
 30201                           ;	Master Clear Enable bit
 30202                           ;	MCLRE = ON, MCLR pin is Master Clear function
 30203                           ;	Power-up Timer Enable bit
 30204                           ;	PWRTS = OFF, PWRT disabled
 30205                           ;	Low-Power BOR enable bit
 30206                           ;	LPBOREN = OFF, ULPBOR disabled
 30207                           ;	Brown-out reset enable bits
 30208                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 30209                           ;	Brown-out Reset Voltage Selection
 30210                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
 30211                           ;	Zero-cross detect disable
 30212                           ;	ZCDDIS = OFF, Zero-cross detect circuit is disabled at POR.
 30213                           ;	Peripheral Pin Select one-way control
 30214                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 30215                           ;	Stack Overflow/Underflow Reset Enable bit
 30216                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 30217     8008                     	org	32776
 30218     8008  3FFF               	dw	16383
 30219                           
 30220                           ;Config register CONFIG3 @ 0x8009
 30221                           ;	WDT Period Select bits
 30222                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 30223                           ;	WDT operating mode
 30224                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 30225                           ;	WDT Window Select bits
 30226                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 30227                           ;	WDT input clock selector
 30228                           ;	WDTCCS = SC, Software Control
 30229     8009                     	org	32777
 30230     8009  3F9F               	dw	16287
 30231                           
 30232                           ;Config register CONFIG4 @ 0x800A
 30233                           ;	Boot Block Size Selection bits
 30234                           ;	BBSIZE = BB512, 512 words boot block size
 30235                           ;	Boot Block Enable bit
 30236                           ;	BBEN = OFF, Boot Block disabled
 30237                           ;	SAF Enable bit
 30238                           ;	SAFEN = OFF, SAF disabled
 30239                           ;	Application Block Write Protection bit
 30240                           ;	WRTAPP = OFF, Application Block not write protected
 30241                           ;	Boot Block Write Protection bit
 30242                           ;	WRTB = OFF, Boot Block not write protected
 30243                           ;	Configuration Register Write Protection bit
 30244                           ;	WRTC = OFF, Configuration Register not write protected
 30245                           ;	Data EEPROM write protection bit
 30246                           ;	WRTD = OFF, Data EEPROM NOT write protected
 30247                           ;	Storage Area Flash Write Protection bit
 30248                           ;	WRTSAF = OFF, SAF not write protected
 30249                           ;	Low Voltage Programming Enable bit
 30250                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 30251     800A                     	org	32778
 30252     800A  3FFF               	dw	16383
 30253                           
 30254                           ;Config register CONFIG5 @ 0x800B
 30255                           ;	UserNVM Program memory code protection bit
 30256                           ;	CP = OFF, UserNVM code protection disabled
 30257     800B                     	org	32779
 30258     800B  3FFF               	dw	16383

Data Sizes:
    Strings     29
    Constant    147
    Data        19
    BSS         458
    Persistent  54
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     42      80
    BANK1            80      1      80
    BANK2            80      0      77
    BANK3            80      0      64
    BANK4            80      0      80
    BANK5            80      0      80
    BANK6            80      0      80
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    asyncBuffer	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), NULL(NULL[0]), 

    bitRead@reg	PTR unsigned short  size(2) Largest target is 8192
		 -> begin@testReg(BANK0[2]), RAM(DATA[8192]), 

    bitWrite@reg	PTR unsigned short  size(2) Largest target is 8192
		 -> begin@testReg(BANK0[2]), RAM(DATA[8192]), 

    BMA253_GetAccelDataXYZ@accelData	PTR struct . size(1) Largest target is 6
		 -> LIGHTBLUE_AccelSensor@accelData(BANK0[6]), 

    BMA253_GetAccelDataY@yAccelData	PTR short  size(1) Largest target is 2
		 -> BMA253_GetAccelDataXYZ@sensorValue(BANK0[2]), 

    BMA253_GetAccelDataZ@zAccelData	PTR short  size(1) Largest target is 2
		 -> BMA253_GetAccelDataXYZ@sensorValue(BANK0[2]), 

    bufferBlock$data	PTR unsigned char  size(2) Largest target is 0

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    d$data	PTR unsigned char  size(2) Largest target is 0

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), NULL(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), NULL(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), NULL(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), NULL(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), NULL(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), NULL(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), NULL(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), NULL(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), NULL(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), NULL(), 

    fsmStateTable	const PTR FTN()enum E12652[16] size(2) Largest target is 1
		 -> do_I2C_DO_ACK(), do_I2C_DO_ADDRESS_NACK(), do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), 
		 -> do_I2C_IDLE(), do_I2C_RCEN(), do_I2C_RESET(), do_I2C_RX(), 
		 -> do_I2C_SEND_ADR_READ(), do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_RESTART(), do_I2C_SEND_RESTART_READ(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_STOP(), do_I2C_TX(), do_I2C_TX_EMPTY(), 

    I2C1_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_DO_TX$5434	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1239(), 
		 -> rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1250(), rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1273(), 
		 -> wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1256(), wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1262(), 
		 -> NULL(), 

    I2C1_DO_TX$5434$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_DO_TX$5439	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_busCollisionISR(), NULL(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_ISR(), NULL(), 

    i2c1_fsmStateTable	const PTR FTN()enum E12565[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_IDLE(), I2C1_DO_RCEN(), I2C1_DO_RESET(), 
		 -> I2C1_DO_RX(), I2C1_DO_RX_ACK(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_SEND_ADR_READ(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_READ(), 
		 -> I2C1_DO_SEND_RESTART_WRITE(), I2C1_DO_SEND_STOP(), I2C1_DO_TX(), I2C1_DO_TX_EMPTY(), 

    I2C1_MasterFsm$5433	const PTR FTN()enum E12565 size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_IDLE(), I2C1_DO_RCEN(), I2C1_DO_RESET(), 
		 -> I2C1_DO_RX(), I2C1_DO_RX_ACK(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_SEND_ADR_READ(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_READ(), 
		 -> I2C1_DO_SEND_RESTART_WRITE(), I2C1_DO_SEND_STOP(), I2C1_DO_TX(), I2C1_DO_TX_EMPTY(), 

    I2C1_Read1ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_Read2ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), 

    I2C1_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_SetBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> bufferBlock$data(COMMON[2]), d$data(COMMON[2]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 
		 -> I2C1_Read1ByteRegister@returnValue$data(COMMON[2]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read2ByteRegister@returnValue$data(COMMON[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@data$data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@data$data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_read1ByteRegister@d2$data(COMMON[2]), i2c_read1ByteRegister@reg(BANK0[1]), i2c_read2ByteRegister@reg(BANK0[1]), 
		 -> i2c_read2ByteRegister@result(BANK0[2]), i2c_read2ByteRegister@result$data(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), i2c_readDataBlock@reg(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write1ByteRegister@data$data(COMMON[2]), i2c_write1ByteRegister@reg(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_write2ByteRegister@data$data(COMMON[2]), i2c_write2ByteRegister@reg(COMMON[1]), readRegisters@dataBuffer(BANK0[1]), NULL(NULL[0]), 

    I2C1_SetCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1239(), rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1250(), 
		 -> rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1273(), wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1256(), 
		 -> wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1262(), NULL(), 

    I2C1_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1239(), rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1250(), 
		 -> rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1273(), wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1256(), 
		 -> wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1262(), NULL(), 

    I2C1_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_Status$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_Status$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1239(), 
		 -> rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1250(), rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1273(), 
		 -> wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1256(), wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1262(), 
		 -> NULL(), 

    I2C1_Status$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> bufferBlock$data(COMMON[2]), d$data(COMMON[2]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 
		 -> I2C1_Read1ByteRegister@returnValue$data(COMMON[2]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read2ByteRegister@returnValue$data(COMMON[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@data$data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@data$data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_read1ByteRegister@d2$data(COMMON[2]), i2c_read1ByteRegister@reg(BANK0[1]), i2c_read2ByteRegister@reg(BANK0[1]), 
		 -> i2c_read2ByteRegister@result(BANK0[2]), i2c_read2ByteRegister@result$data(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), i2c_readDataBlock@reg(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write1ByteRegister@data$data(COMMON[2]), i2c_write1ByteRegister@reg(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_write2ByteRegister@data$data(COMMON[2]), i2c_write2ByteRegister@reg(COMMON[1]), readRegisters@dataBuffer(BANK0[1]), NULL(NULL[0]), 

    I2C1_Write1ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_Write2ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    i2c_read1ByteRegister@d2$data	PTR unsigned char  size(2) Largest target is 0

    i2c_read2ByteRegister@result$data	PTR unsigned char  size(2) Largest target is 0

    i2c_readNBytes@data	PTR void  size(1) Largest target is 1
		 -> readRegisters@dataBuffer(BANK0[1]), 

    i2c_status$callbackPayload	PTR void [6] size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c_status$callbackTable	PTR FTN(PTR void ,)enum E12498[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    i2c_status$data_ptr	PTR unsigned char  size(2) Largest target is 0

    i2c_write1ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    i2c_write2ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    IOCAF6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF6_DefaultInterruptHandler(), NULL(), 

    IOCAF6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF6_DefaultInterruptHandler(), 

    LIGHTBLUE_SendPacket@payload	PTR unsigned char  size(1) Largest target is 19
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_LedState@payload(BANK0[3]), LIGHTBLUE_PushButton@payload(BANK0[3]), LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), 
		 -> LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), 

    LIGHTBLUE_SendSerialData@serialData	PTR unsigned char  size(1) Largest target is 80
		 -> lightBlueSerial(BANK4[80]), 

    LIGHTBLUE_SplitByte@payload	PTR unsigned char  size(1) Largest target is 19
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_LedState@payload(BANK0[3]), LIGHTBLUE_PushButton@payload(BANK0[3]), LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), 
		 -> LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), 

    LIGHTBLUE_SplitWord@payload	PTR unsigned char  size(1) Largest target is 13
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), 

    NULL$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    pHead	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), NULL(NULL[0]), 

    protocol_version_number	const PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    rd1RegCompleteHandler@i2c1_master_example$F1239@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rd2RegCompleteHandler@i2c1_master_example$F1250@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@i2c1_master_example$F1273@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@i2c1_master_example$F1273@ptr$data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@p$data	PTR unsigned char  size(2) Largest target is 0

    readRegisters@dataBuffer	PTR unsigned char  size(1) Largest target is 8
		 -> getManufacturerID@databuffer(COMMON[2]), getTemp@databuffer(COMMON[2]), readRegister@regVal(BANK0[1]), readWakeUpAndSleepData@wakeupRegisterRead(COMMON[8]), 

    RN487X$AsyncHandler	PTR FTN(PTR unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_MessageHandler(), 

    RN487X$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_rx_ready(), 

    RN487X$DelayMs	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> RN487X_Delay(), 

    RN487X$IndicateRx	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_IndicateRx(), 

    RN487X$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> RN487X_Read@rn487x_interface$F1381(), 

    RN487X$ResetModule	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_Reset(), 

    RN487X$SetSystemMode	PTR FTN(enum E271,)void  size(2) Largest target is 1
		 -> RN487X_SetSystemMode(), 

    RN487X$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_tx_done(), 

    RN487X$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_Write(), 

    rn487x_driver_version	const PTR const unsigned char  size(2) Largest target is 6
		 -> STR_6(CODE[6]), 

    RN487X_MessageHandler@message	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), NULL(NULL[0]), 

    rn487x_PrintMessage@passedMessage	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), NULL(NULL[0]), 

    RN487X_ReadMsg@expectedMsg	PTR const unsigned char  size(2) Largest target is 11
		 -> RN487X_EnterCmdMode@cmdPrompt(CODE[5]), RN487X_EnterDataMode@cmdPrompt(CODE[5]), RN487X_GetInputsValues@ioValue(COMMON[2]), RN487X_RebootCmd@reboot(CODE[11]), 

    RN487X_SendCmd@cmd	PTR const unsigned char  size(1) Largest target is 64
		 -> cmdBuf(BANK3[64]), 

    RN487X_SetAsyncMessageHandler@pBuffer	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), 

    S1020$data	PTR unsigned char  size(2) Largest target is 0

    S231$8$0	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), NULL(NULL[0]), 

    S231$AsyncHandler	PTR FTN(PTR unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_MessageHandler(), 

    S231$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_rx_ready(), 

    S231$DelayMs	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> RN487X_Delay(), 

    S231$IndicateRx	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_IndicateRx(), 

    S231$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> RN487X_Read@rn487x_interface$F1381(), 

    S231$ResetModule	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_Reset(), 

    S231$SetSystemMode	PTR FTN(enum E271,)void  size(2) Largest target is 1
		 -> RN487X_SetSystemMode(), 

    S231$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_tx_done(), 

    S231$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_Write(), 

    S3148$0$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    S3148$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    S3148$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1239(), 
		 -> rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1250(), rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1273(), 
		 -> wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1256(), wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1262(), 
		 -> NULL(), 

    S3148$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read1ByteRegister@reg(BANK0[1]), 
		 -> i2c_read2ByteRegister@reg(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), i2c_readDataBlock@reg(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write1ByteRegister@reg(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), i2c_write2ByteRegister@reg(COMMON[1]), 
		 -> readRegisters@dataBuffer(BANK0[1]), NULL(NULL[0]), 

    S360$4$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    S360$6$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    S360$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_rx_ready(), EUSART2_is_rx_ready(), 

    S360$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Initialize(), EUSART2_Initialize(), 

    S360$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_Read(), EUSART2_Read(), 

    S360$RxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    S360$SetRxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetRxInterruptHandler(), EUSART2_SetRxInterruptHandler(), 

    S360$SetTxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetTxInterruptHandler(), EUSART2_SetTxInterruptHandler(), 

    S360$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_done(), EUSART2_is_tx_done(), 

    S360$TransmitReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_ready(), EUSART2_is_tx_ready(), 

    S360$TxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    S360$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART1_Write(), EUSART2_Write(), 

    S674$11$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S674$callbackPayload	PTR void [6] size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S674$callbackTable	PTR FTN(PTR void ,)enum E12498[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    S674$data_ptr	PTR unsigned char  size(2) Largest target is 0

    sp__strchr	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 32
		 -> rn487x_PrintMessage@printCharacter(BANK0[32]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), NULL(NULL[0]), 

    strchr@s	PTR const unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), NULL(NULL[0]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 32
		 -> rn487x_PrintMessage@printCharacter(BANK0[32]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 32
		 -> rn487x_PrintMessage@printCharacter(BANK0[32]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), NULL(NULL[0]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_LedState@payload(BANK0[3]), LIGHTBLUE_PushButton@payload(BANK0[3]), LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), 
		 -> LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), lightBlueSerial(BANK4[80]), statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), 
		 -> STR_1(CODE[6]), STR_3(CODE[11]), STR_5(CODE[12]), NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_LedState@payload(BANK0[3]), LIGHTBLUE_PushButton@payload(BANK0[3]), LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), 
		 -> LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), lightBlueSerial(BANK4[80]), statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), 
		 -> STR_1(CODE[6]), STR_3(CODE[11]), STR_5(CODE[12]), NULL(NULL[0]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), NULL(NULL[0]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[11]), STR_5(CODE[12]), 

    strstr@h	PTR const unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), NULL(NULL[0]), 

    strstr@n	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[11]), STR_5(CODE[12]), 

    TMAG5273_GetTemperatureValue@temperature	PTR short  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    uart$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_rx_ready(), EUSART2_is_rx_ready(), 

    uart$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Initialize(), EUSART2_Initialize(), 

    uart$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_Read(), EUSART2_Read(), 

    uart$RxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    uart$SetRxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetRxInterruptHandler(), EUSART2_SetRxInterruptHandler(), 

    uart$SetTxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetTxInterruptHandler(), EUSART2_SetTxInterruptHandler(), 

    uart$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_done(), EUSART2_is_tx_done(), 

    uart$TransmitReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_ready(), EUSART2_is_tx_ready(), 

    uart$TxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    uart$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART1_Write(), EUSART2_Write(), 

    wr1RegCompleteHandler@i2c1_master_example$F1256@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    wr2RegCompleteHandler@i2c1_master_example$F1262@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    _writeRegister->_i2c_write1ByteRegister
    _PIN_MANAGER_Initialize->_IOCAF6_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _RN487X_MessageHandler->_strstr
    _strstr->_strncmp
    _rn487x_PrintMessageStart->_EUSART1_Write
    _rn487x_PrintMessageStart->_EUSART2_Write
    _rn487x_PrintMessageEnd->_EUSART1_Write
    _rn487x_PrintMessageEnd->_EUSART2_Write
    _rn487x_PrintMessage->_strcpy
    _rn487x_PrintIndicatorCharacters->_EUSART1_Write
    _rn487x_PrintIndicatorCharacters->_EUSART2_Write
    _RN487X_Init->_RN487X_Delay
    _LIGHTBLUE_TemperatureSensor->_LIGHTBLUE_SplitWord
    _LIGHTBLUE_SendSerialData->_RN487X_Write
    _LIGHTBLUE_SendProtocolVersion->_LIGHTBLUE_SendPacket
    _LIGHTBLUE_PushButton->_LIGHTBLUE_SendPacket
    _LIGHTBLUE_PerformAction->_LIGHTBLUE_SetErrorLedValue
    _RN487X_SetOutputs->_RN487X_SendCmd
    _RN487X_EnterDataMode->_RN487X_SendCmd
    _RN487X_EnterCmdMode->_RN487X_SendCmd
    _RN487X_SendCmd->_RN487X_Write
    _RN487X_Read@rn487x_interface$F1381->_EUSART1_Read
    _RN487X_Read@rn487x_interface$F1381->_EUSART2_Read
    _RN487X_Delay->_DELAY_milliseconds
    _LIGHTBLUE_LedState->_LIGHTBLUE_SendPacket
    _LIGHTBLUE_AccelSensor->_LIGHTBLUE_SplitWord
    _LIGHTBLUE_SplitWord->_LIGHTBLUE_SplitByte
    _LIGHTBLUE_SplitByte->_strlen
    _LIGHTBLUE_SendPacket->_RN487X_Write
    _RN487X_Write->_strlen
    _BMA253_GetAccelDataXYZ->_BMA253_NewAccelDataRdyY
    _BMA253_GetAccelDataXYZ->_BMA253_NewAccelDataRdyZ
    _readRegisters->_i2c_readNBytes
    _BMA253_GetAccelDataZ->_BMA253_NewAccelDataRdyZ
    _BMA253_GetAccelDataY->_BMA253_NewAccelDataRdyY
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_MasterFsm->_I2C1_DO_ADDRESS_NACK
    _I2C1_MasterFsm->_I2C1_DO_RX
    _I2C1_MasterFsm->_I2C1_DO_TX
    _I2C1_MasterFsm->_I2C1_DO_TX_EMPTY
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnReset
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnStop
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler@i2c1_master_example$F1239
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler@i2c1_master_example$F1250
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler@i2c1_master_example$F1273
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler@i2c1_master_example$F1256
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler@i2c1_master_example$F1262
    _I2C1_DO_TX->_I2C1_CallbackReturnReset
    _I2C1_DO_TX->_I2C1_CallbackReturnStop
    _I2C1_DO_TX->_rd1RegCompleteHandler
    _I2C1_DO_TX->_rd1RegCompleteHandler@i2c1_master_example$F1239
    _I2C1_DO_TX->_rd2RegCompleteHandler
    _I2C1_DO_TX->_rd2RegCompleteHandler@i2c1_master_example$F1250
    _I2C1_DO_TX->_rdBlkRegCompleteHandler
    _I2C1_DO_TX->_rdBlkRegCompleteHandler@i2c1_master_example$F1273
    _I2C1_DO_TX->_wr1RegCompleteHandler
    _I2C1_DO_TX->_wr1RegCompleteHandler@i2c1_master_example$F1256
    _I2C1_DO_TX->_wr2RegCompleteHandler
    _I2C1_DO_TX->_wr2RegCompleteHandler@i2c1_master_example$F1262
    _I2C1_DO_SEND_ADR_WRITE->_I2C1_MasterSendTxData
    _I2C1_DO_RX->_I2C1_CallbackReturnReset
    _I2C1_DO_RX->_I2C1_CallbackReturnStop
    _I2C1_DO_RX->_rd1RegCompleteHandler
    _I2C1_DO_RX->_rd1RegCompleteHandler@i2c1_master_example$F1239
    _I2C1_DO_RX->_rd2RegCompleteHandler
    _I2C1_DO_RX->_rd2RegCompleteHandler@i2c1_master_example$F1250
    _I2C1_DO_RX->_rdBlkRegCompleteHandler
    _I2C1_DO_RX->_rdBlkRegCompleteHandler@i2c1_master_example$F1273
    _I2C1_DO_RX->_wr1RegCompleteHandler
    _I2C1_DO_RX->_wr1RegCompleteHandler@i2c1_master_example$F1256
    _I2C1_DO_RX->_wr2RegCompleteHandler
    _I2C1_DO_RX->_wr2RegCompleteHandler@i2c1_master_example$F1262
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnReset
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnStop
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler@i2c1_master_example$F1239
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler@i2c1_master_example$F1250
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler@i2c1_master_example$F1273
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler@i2c1_master_example$F1256
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler@i2c1_master_example$F1262
    _wr2RegCompleteHandler@i2c1_master_example$F1262->_I2C1_SetDataCompleteCallback
    _wr2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler@i2c1_master_example$F1256->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler@i2c1_master_example$F1273->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler@i2c1_master_example$F1250->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler@i2c1_master_example$F1239->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _I2C1_SetDataCompleteCallback->_I2C1_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART1_Transmit_ISR
    _INTERRUPT_InterruptManager->_EUSART2_Transmit_ISR
    _EUSART2_Receive_ISR->_EUSART2_RxDataHandler
    _EUSART2_DefaultErrorHandler->_EUSART2_RxDataHandler
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _main->_LIGHTBLUE_AccelSensor
    _begin->_setMagneticChannel
    _begin->_setOperatingMode
    _begin->_setTemperatureEn
    _begin->_setXYAxisRange
    _begin->_setZAxisRange
    _setZAxisRange->_getError
    _setXYAxisRange->_getError
    _setTemperatureEn->_getError
    _setOperatingMode->_getError
    _setMagneticChannel->_getError
    _writeRegister->_i2c_write1ByteRegister
    _getError->_getDeviceStatus
    _getDeviceStatus->_readRegister
    _isConnected->_TMAG5273_GetManufacture
    _TMAG5273_GetManufacture->_i2c_read2ByteRegister
    _getTemperatureEN->_readRegister
    _getOperatingMode->_readRegister
    _getMagneticChannel->_readRegister
    _getLowPower->_readRegister
    _getAngleEn->_readRegister
    _RN487X_DataReady->_RN487X_FilterData
    _RN487X_FilterData->_RN487X_MessageHandler
    _RN487X_MessageHandler->_rn487x_PrintMessage
    _LIGHTBLUE_TemperatureSensor->_TMAG5273_GetTemperatureValue
    _TMAG5273_GetTemperatureValue->_TMAG5273_CalcTemperature
    _TMAG5273_CalcTemperature->_i2c_read2ByteRegister
    _LIGHTBLUE_ParseIncomingPacket->_LIGHTBLUE_PerformAction
    _LIGHTBLUE_PerformAction->_LIGHTBLUE_SetErrorLedValue
    _LIGHTBLUE_UpdateErrorLed->_RN487X_SetOutputs
    _LIGHTBLUE_AccelSensor->_BMA253_GetAccelDataXYZ
    _BMA253_GetAccelDataXYZ->_BMA253_GetAccelDataY
    _BMA253_GetAccelDataXYZ->_BMA253_GetAccelDataZ
    _readRegister->_readRegisters
    _readRegisters->_i2c_readNBytes
    _I2C1_MasterRead->_I2C1_MasterOperation
    _BMA253_GetAccelDataZ->_i2c_read1ByteRegister
    _BMA253_NewAccelDataRdyZ->_i2c_read1ByteRegister
    _BMA253_GetAccelDataY->_i2c_read1ByteRegister
    _BMA253_NewAccelDataRdyY->_i2c_read1ByteRegister
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _I2C1_Poller->_I2C1_MasterFsm

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0 11742819
                                             41 BANK0      1     1      0
                                              0 BANK1      1     1      0
                       _EUSART1_Read *
                      _EUSART1_Write *
                _EUSART1_is_rx_ready *
                       _EUSART2_Read *
                      _EUSART2_Write *
                _EUSART2_is_rx_ready *
              _LIGHTBLUE_AccelSensor
               _LIGHTBLUE_Initialize
                 _LIGHTBLUE_LedState
      _LIGHTBLUE_ParseIncomingPacket
               _LIGHTBLUE_PushButton
      _LIGHTBLUE_SendProtocolVersion
           _LIGHTBLUE_SendSerialData
        _LIGHTBLUE_TemperatureSensor
                   _RN487X_DataReady
                        _RN487X_Init
                 _RN487X_IsConnected
                        _RN487X_Read
      _RN487X_SetAsyncMessageHandler
                       _RN487X_Write *
                  _SYSTEM_Initialize
            _TMR0_HasOverflowOccured
                              _begin
 ---------------------------------------------------------------------------------
 (1) _begin                                                3     3      0 8651544
                                             27 BANK0      2     2      0
                            _bitRead
                           _bitWrite
                         _getAngleEn
                           _getError
                        _getLowPower
                 _getMagneticChannel
                   _getOperatingMode
                   _getTemperatureEN
                        _isConnected
                 _setMagneticChannel
                   _setOperatingMode
                   _setTemperatureEn
                     _setXYAxisRange
                      _setZAxisRange
 ---------------------------------------------------------------------------------
 (2) _setZAxisRange                                        5     5      0 1187394
                                             22 BANK0      5     5      0
                           _bitWrite
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (2) _setXYAxisRange                                       5     5      0 1187394
                                             22 BANK0      5     5      0
                           _bitWrite
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (2) _setTemperatureEn                                     5     5      0 1187394
                                             22 BANK0      5     5      0
                           _bitWrite
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (2) _setOperatingMode                                     5     5      0 1187704
                                             22 BANK0      5     5      0
                           _bitWrite
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (2) _setMagneticChannel                                   5     5      0 1189440
                                             22 BANK0      5     5      0
                           _bitWrite
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (3) _writeRegister                                        2     1      1  384762
                                              6 BANK0      2     1      1
             _i2c_write1ByteRegister
 ---------------------------------------------------------------------------------
 (4) _i2c_write1ByteRegister                               3     1      2  375957
                                             11 COMMON     1     1      0
                                              4 BANK0      2     0      2
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _getError                                             7     7      0  377832
                                             15 BANK0      7     7      0
                            _bitRead
                    _getDeviceStatus
 ---------------------------------------------------------------------------------
 (4) _getDeviceStatus                                      1     1      0  367073
                                             14 BANK0      1     1      0
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _bitWrite                                            10     6      4   57569
                                              1 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 (2) _isConnected                                          0     0      0  376113
            _TMAG5273_GetManufacture
 ---------------------------------------------------------------------------------
 (3) _TMAG5273_GetManufacture                              4     2      2  376113
                                             13 BANK0      4     2      2
              _i2c_read2ByteRegister
                               _swap
 ---------------------------------------------------------------------------------
 (4) _swap                                                 9     7      2     268
                                              1 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) _getTemperatureEN                                     4     4      0  377606
                                             14 BANK0      4     4      0
                            _bitRead
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _getOperatingMode                                     5     5      0  377857
                                             14 BANK0      5     5      0
                            _bitRead
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _getMagneticChannel                                   7     7      0  379165
                                             14 BANK0      7     7      0
                            _bitRead
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _getLowPower                                          4     4      0  377606
                                             14 BANK0      4     4      0
                            _bitRead
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _getAngleEn                                           5     5      0  377857
                                             14 BANK0      5     5      0
                            _bitRead
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) _bitRead                                              9     6      3   10496
                                              1 COMMON     9     6      3
 ---------------------------------------------------------------------------------
 (1) _TMR0_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1485
                 _EUSART1_Initialize
                 _EUSART2_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     135
         _IOCAF6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCAF6_SetInterruptHandler                           2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     675
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     675
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _RN487X_SetAsyncMessageHandler                        3     0      3     418
                                              1 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (1) _RN487X_Read                                          0     0      0   10887
                   _RN487X_DataReady
 ---------------------------------------------------------------------------------
 (2) _RN487X_DataReady                                     0     0      0   10887
                  _RN487X_FilterData
                 _RN487X_is_rx_ready *
 ---------------------------------------------------------------------------------
 (3) _RN487X_FilterData                                    5     5      0   10887
                                             36 BANK0      5     5      0
              _RN487X_MessageHandler *
 _RN487X_Read@rn487x_interface$F1381 *
 ---------------------------------------------------------------------------------
 (4) _RN487X_MessageHandler                                3     1      2   10686
                                             33 BANK0      3     1      2
    _rn487x_PrintIndicatorCharacters
                _rn487x_PrintMessage
             _rn487x_PrintMessageEnd
           _rn487x_PrintMessageStart
                             _strstr
 ---------------------------------------------------------------------------------
 (5) _strstr                                               8     4      4    2291
                                              8 COMMON     4     0      4
                                              0 BANK0      4     4      0
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (6) _strncmp                                              7     1      6     519
                                              1 COMMON     7     1      6
 ---------------------------------------------------------------------------------
 (6) _strchr                                               6     2      4     282
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintMessageStart                             0     0      0    1691
                      _EUSART1_Write *
                      _EUSART2_Write *
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintMessageEnd                               0     0      0    1691
                      _EUSART1_Write *
                      _EUSART2_Write *
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintMessage                                 37    35      2    3050
                                              7 COMMON     4     2      2
                                              0 BANK0     33    33      0
                      _EUSART1_Write *
                      _EUSART2_Write *
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               6     4      2     246
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintIndicatorCharacters                      1     1      0    1753
                                              3 COMMON     1     1      0
                      _EUSART1_Write *
                      _EUSART2_Write *
 ---------------------------------------------------------------------------------
 (1) _RN487X_IsConnected                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RN487X_Init                                          0     0      0     872
                       _RN487X_Delay *
                  _RN487X_IndicateRx *
 _RN487X_Read@rn487x_interface$F1381 *
                       _RN487X_Reset *
               _RN487X_SetSystemMode *
                 _RN487X_is_rx_ready *
 ---------------------------------------------------------------------------------
 (3) _RN487X_is_rx_ready                                   0     0      0       0
                _EUSART1_is_rx_ready *
                _EUSART2_is_rx_ready *
 ---------------------------------------------------------------------------------
 (4) _EUSART2_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RN487X_SetSystemMode                                 1     0      1     108
                                              1 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (2) _RN487X_Reset                                         1     0      1     185
                                              1 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (2) _RN487X_IndicateRx                                    1     0      1     108
                                              1 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_TemperatureSensor                          7     7      0  383668
                                             23 BANK0      7     7      0
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitWord
       _TMAG5273_GetTemperatureValue
 ---------------------------------------------------------------------------------
 (2) _TMAG5273_GetTemperatureValue                         2     0      2  376082
                                             21 BANK0      2     0      2
           _TMAG5273_CalcTemperature
 ---------------------------------------------------------------------------------
 (3) _TMAG5273_CalcTemperature                             9     7      2  375947
                                             13 BANK0      8     6      2
              _i2c_read2ByteRegister
 ---------------------------------------------------------------------------------
 (4) _i2c_read2ByteRegister                                9     7      2  375811
                                              4 BANK0      9     7      2
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_SendSerialData                             3     3      0    4274
                                              7 COMMON     3     3      0
                       _RN487X_Write *
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_SendProtocolVersion                       23    23      0    7788
                                              0 BANK0     23    23      0
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitByte
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_PushButton                                 4     4      0    6862
                                              0 BANK0      4     4      0
           _LIGHTBLUE_GetButtonValue
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitByte
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_GetButtonValue                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_ParseIncomingPacket                        9     9      0   18822
                                             11 BANK0      9     9      0
            _LIGHTBLUE_PerformAction
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_PerformAction                              4     3      1   18277
                                              7 BANK0      4     3      1
                      _EUSART1_Write *
                      _EUSART2_Write *
         _LIGHTBLUE_SetErrorLedValue
 ---------------------------------------------------------------------------------
 (3) _LIGHTBLUE_SetErrorLedValue                           2     2      0   16293
                                             11 COMMON     1     1      0
                                              6 BANK0      1     1      0
           _LIGHTBLUE_UpdateErrorLed
 ---------------------------------------------------------------------------------
 (4) _LIGHTBLUE_UpdateErrorLed                             0     0      0   16262
                       _RN487X_Delay *
                _RN487X_EnterCmdMode
               _RN487X_EnterDataMode
                  _RN487X_SetOutputs
 ---------------------------------------------------------------------------------
 (5) _RN487X_SetOutputs                                    6     4      2    5093
                                              0 BANK0      6     4      2
         _RN487X_ReadDefaultResponse
                     _RN487X_SendCmd
 ---------------------------------------------------------------------------------
 (6) _RN487X_ReadDefaultResponse                           4     4      0     389
                                              3 COMMON     4     4      0
 _RN487X_Read@rn487x_interface$F1381 *
 ---------------------------------------------------------------------------------
 (5) _RN487X_EnterDataMode                                 0     0      0    5386
                     _RN487X_ReadMsg
                     _RN487X_SendCmd
 ---------------------------------------------------------------------------------
 (5) _RN487X_EnterCmdMode                                  0     0      0    5386
                     _RN487X_ReadMsg
                     _RN487X_SendCmd
 ---------------------------------------------------------------------------------
 (6) _RN487X_SendCmd                                       4     3      1    4316
                                              7 COMMON     4     3      1
                       _RN487X_Write *
                  _RN487X_is_tx_done *
 ---------------------------------------------------------------------------------
 (7) _RN487X_is_tx_done                                    0     0      0       0
                 _EUSART1_is_tx_done *
                 _EUSART2_is_tx_done *
 ---------------------------------------------------------------------------------
 (8) _EUSART2_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RN487X_ReadMsg                                       7     4      3    1070
                                              3 COMMON     7     4      3
 _RN487X_Read@rn487x_interface$F1381 *
 ---------------------------------------------------------------------------------
 (4) _RN487X_Read@rn487x_interface$F1381                   0     0      0      74
                       _EUSART1_Read *
                       _EUSART2_Read *
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Read                                         2     2      0      37
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Read                                         2     2      0      37
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _RN487X_Delay                                         2     0      2     397
                                              4 COMMON     2     0      2
                 _DELAY_milliseconds
 ---------------------------------------------------------------------------------
 (3) _DELAY_milliseconds                                   3     1      2     135
                                              1 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_LedState                                   4     4      0    6961
                                              0 BANK0      4     4      0
          _LIGHTBLUE_GetDataLedValue
         _LIGHTBLUE_GetErrorLedValue
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitByte
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_GetErrorLedValue                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_GetDataLedValue                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_AccelSensor                               19    19      0 2633367
                                             22 BANK0     19    19      0
             _BMA253_GetAccelDataXYZ
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitWord
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_SplitWord                                  3     1      2    2607
                                              9 COMMON     3     1      2
                _LIGHTBLUE_SplitByte
 ---------------------------------------------------------------------------------
 (3) _LIGHTBLUE_SplitByte                                  3     2      1    1911
                                              6 COMMON     3     2      1
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_SendPacket                                 4     3      1    4825
                                              7 COMMON     4     3      1
                       _RN487X_Write *
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     858
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _RN487X_Write                                         1     0      1    3185
                                              6 COMMON     1     0      1
                       _EUSART1_Read (ARG) *
                      _EUSART1_Write *
                       _EUSART2_Read (ARG) *
                      _EUSART2_Write *
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Write                                        2     1      1    1525
                                              1 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        2     1      1     166
                                              1 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (2) _BMA253_GetAccelDataXYZ                               6     6      0 2625633
                                             16 BANK0      6     6      0
               _BMA253_GetAccelDataY
               _BMA253_GetAccelDataZ
            _BMA253_NewAccelDataRdyY
            _BMA253_NewAccelDataRdyZ
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _readRegister                                         2     2      0  367039
                                             12 BANK0      2     2      0
                      _readRegisters
 ---------------------------------------------------------------------------------
 (4) _readRegisters                                        5     3      2  366943
                                              7 BANK0      5     3      2
                     _i2c_readNBytes
 ---------------------------------------------------------------------------------
 (5) _i2c_readNBytes                                       4     1      3  366009
                                             11 COMMON     1     1      0
                                              4 BANK0      3     0      3
                         _I2C1_Close
                    _I2C1_MasterRead
                          _I2C1_Open
                     _I2C1_SetBuffer
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterRead                                      0     0      0  362109
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (3) _BMA253_GetAccelDataZ                                 6     6      0  752774
                                             10 BANK0      6     6      0
            _BMA253_NewAccelDataRdyZ
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_NewAccelDataRdyZ                              1     1      0  376335
                                             11 COMMON     1     1      0
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_GetAccelDataY                                 6     6      0  752774
                                             10 BANK0      6     6      0
            _BMA253_NewAccelDataRdyY
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_NewAccelDataRdyY                              1     1      0  376335
                                             11 COMMON     1     1      0
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (4) _i2c_read1ByteRegister                                6     5      1  376301
                                              4 BANK0      6     5      1
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetAddressNackCallback                          4     0      4    3815
                                              5 COMMON     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (5) _I2C1_Open                                            2     2      0      68
                                              1 COMMON     2     2      0
                _I2C1_MasterClearIrq
                    _I2C1_MasterOpen
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterWrite                                     0     0      0  362109
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterOperation                                 2     2      0  362109
                                              2 BANK0      2     2      0
                   _I2C1_MasterStart
                        _I2C1_Poller
 ---------------------------------------------------------------------------------
 (7) _I2C1_Poller                                          0     0      0  362041
                     _I2C1_MasterFsm
            _I2C1_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterWaitForEvent                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterFsm                                       2     2      0  362041
                                              0 BANK0      2     2      0
               _I2C1_DO_ADDRESS_NACK *
                       _I2C1_DO_IDLE *
                       _I2C1_DO_RCEN *
                      _I2C1_DO_RESET *
                         _I2C1_DO_RX *
                     _I2C1_DO_RX_ACK *
            _I2C1_DO_RX_NACK_RESTART *
               _I2C1_DO_RX_NACK_STOP *
              _I2C1_DO_SEND_ADR_READ *
             _I2C1_DO_SEND_ADR_WRITE *
               _I2C1_DO_SEND_RESTART *
          _I2C1_DO_SEND_RESTART_READ *
         _I2C1_DO_SEND_RESTART_WRITE *
                  _I2C1_DO_SEND_STOP *
                         _I2C1_DO_TX *
                   _I2C1_DO_TX_EMPTY *
                _I2C1_MasterClearIrq
                  _I2C1_MasterIsNack
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_TX_EMPTY                                     2     2      0   90487
                                              9 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterSetIrq
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSetIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_TX                                           2     2      0   90518
                                              9 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterIsNack                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART_WRITE                          0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART_READ                           0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_SEND_ADR_WRITE                               0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_SEND_ADR_READ                                0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendTxData                               1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_ACK                                       0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX                                           2     2      0   90487
                                              9 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
            _I2C1_DO_RX_NACK_RESTART
               _I2C1_DO_RX_NACK_STOP
               _I2C1_MasterGetRxData
                 _I2C1_MasterSendAck
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendAck                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterGetRxData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_NACK_STOP                                 0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_NACK_RESTART                              0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendNack                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RESET                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RCEN                                         0     0      0       0
                 _I2C1_MasterStartRx
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterStartRx                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_IDLE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_ADDRESS_NACK                                 2     2      0   90487
                                              9 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _wr2RegCompleteHandler@i2c1_master_example$F1262     1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr2RegCompleteHandler                               1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr1RegCompleteHandler@i2c1_master_example$F1256     1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr1RegCompleteHandler                               1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rdBlkRegCompleteHandler@i2c1_master_example$F1273   1     0      1    9035
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rdBlkRegCompleteHandler                             1     0      1    9035
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd2RegCompleteHandler@i2c1_master_example$F1250     1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd2RegCompleteHandler                               1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd1RegCompleteHandler@i2c1_master_example$F1239     1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd1RegCompleteHandler                               1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetDataCompleteCallback                         3     0      3    5479
                                              5 COMMON     3     0      3
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetCallback                                     4     1      3    1257
                                              1 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetBuffer                                       3     1      2    3494
                                              1 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_STOP                                   0     0      0       0
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterStop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART                                0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterEnableRestart                            0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_CallbackReturnStop                             1     0      1       0
                                              8 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (10) _I2C1_CallbackReturnReset                            1     0      1     385
                                              8 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (19) NULL(Fake)                                           1     0      1       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_Close                                           1     1      0      37
                                              1 COMMON     1     1      0
                _I2C1_MasterClearIrq
                   _I2C1_MasterClose
              _I2C1_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _INTERRUPT_InterruptManager                          0     0      0       0
                                NULL *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (17) _PIN_MANAGER_IOC                                     0     0      0       0
                         _IOCAF6_ISR
 ---------------------------------------------------------------------------------
 (18) _IOCAF6_ISR                                          0     0      0       0
                                NULL *
     _IOCAF6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _IOCAF6_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART2_Transmit_ISR                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (17) _EUSART2_Receive_ISR                                 0     0      0       0
                                NULL *
        _EUSART2_DefaultErrorHandler *
 _EUSART2_DefaultFramingErrorHandler *
 _EUSART2_DefaultOverrunErrorHandler *
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (18) _EUSART2_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _EUSART2_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _EUSART2_DefaultErrorHandler                         0     0      0       0
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (18) _EUSART2_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (17) _EUSART1_Transmit_ISR                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (17) _EUSART1_Receive_ISR                                 0     0      0       0
                                NULL *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (18) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (18) _EUSART1_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (19) NULL(Fake)                                           1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read *
   _EUSART1_Write *
   _EUSART1_is_rx_ready *
   _EUSART2_Read *
   _EUSART2_Write *
   _EUSART2_is_rx_ready *
   _LIGHTBLUE_AccelSensor *
     _BMA253_GetAccelDataXYZ
       _BMA253_GetAccelDataY
         _BMA253_NewAccelDataRdyY
           _i2c_read1ByteRegister
             _I2C1_Close
               _I2C1_MasterClearIrq
               _I2C1_MasterClose
               _I2C1_MasterDisableIrq
             _I2C1_MasterWrite
               _I2C1_MasterOperation
                 _I2C1_MasterStart
                 _I2C1_Poller
                   _I2C1_MasterFsm
                     _I2C1_DO_ADDRESS_NACK *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_SEND_RESTART *
                         _I2C1_MasterEnableRestart
                       _I2C1_DO_SEND_STOP *
                         _I2C1_MasterStop
                       _rd1RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                           _I2C1_SetCallback
                       _rd1RegCompleteHandler@i2c1_master_example$F1239 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rd2RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rd2RegCompleteHandler@i2c1_master_example$F1250 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rdBlkRegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1273 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr1RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr1RegCompleteHandler@i2c1_master_example$F1256 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr2RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr2RegCompleteHandler@i2c1_master_example$F1262 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                     _I2C1_DO_IDLE *
                     _I2C1_DO_RCEN *
                       _I2C1_MasterStartRx
                     _I2C1_DO_RESET *
                     _I2C1_DO_RX *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_RX_NACK_RESTART *
                         _I2C1_MasterSendNack
                       _I2C1_DO_RX_NACK_STOP *
                         _I2C1_MasterSendNack
                       _I2C1_MasterGetRxData *
                       _I2C1_MasterSendAck *
                       _rd1RegCompleteHandler *
                       _rd1RegCompleteHandler@i2c1_master_example$F1239 *
                       _rd2RegCompleteHandler *
                       _rd2RegCompleteHandler@i2c1_master_example$F1250 *
                       _rdBlkRegCompleteHandler *
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1273 *
                       _wr1RegCompleteHandler *
                       _wr1RegCompleteHandler@i2c1_master_example$F1256 *
                       _wr2RegCompleteHandler *
                       _wr2RegCompleteHandler@i2c1_master_example$F1262 *
                     _I2C1_DO_RX_ACK *
                       _I2C1_MasterSendAck
                     _I2C1_DO_RX_NACK_RESTART *
                     _I2C1_DO_RX_NACK_STOP *
                     _I2C1_DO_SEND_ADR_READ *
                       _I2C1_MasterSendTxData
                     _I2C1_DO_SEND_ADR_WRITE *
                       _I2C1_MasterSendTxData
                     _I2C1_DO_SEND_RESTART *
                     _I2C1_DO_SEND_RESTART_READ *
                       _I2C1_MasterEnableRestart
                     _I2C1_DO_SEND_RESTART_WRITE *
                       _I2C1_MasterEnableRestart
                     _I2C1_DO_SEND_STOP *
                     _I2C1_DO_TX *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_SEND_RESTART_READ *
                       _I2C1_DO_SEND_RESTART_WRITE *
                       _I2C1_DO_SEND_STOP *
                       _I2C1_MasterIsNack *
                       _I2C1_MasterSendTxData *
                       _rd1RegCompleteHandler *
                       _rd1RegCompleteHandler@i2c1_master_example$F1239 *
                       _rd2RegCompleteHandler *
                       _rd2RegCompleteHandler@i2c1_master_example$F1250 *
                       _rdBlkRegCompleteHandler *
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1273 *
                       _wr1RegCompleteHandler *
                       _wr1RegCompleteHandler@i2c1_master_example$F1256 *
                       _wr2RegCompleteHandler *
                       _wr2RegCompleteHandler@i2c1_master_example$F1262 *
                     _I2C1_DO_TX_EMPTY *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_SEND_RESTART *
                       _I2C1_DO_SEND_STOP *
                       _I2C1_MasterSetIrq *
                       _rd1RegCompleteHandler *
                       _rd1RegCompleteHandler@i2c1_master_example$F1239 *
                       _rd2RegCompleteHandler *
                       _rd2RegCompleteHandler@i2c1_master_example$F1250 *
                       _rdBlkRegCompleteHandler *
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1273 *
                       _wr1RegCompleteHandler *
                       _wr1RegCompleteHandler@i2c1_master_example$F1256 *
                       _wr2RegCompleteHandler *
                       _wr2RegCompleteHandler@i2c1_master_example$F1262 *
                     _I2C1_MasterClearIrq *
                     _I2C1_MasterIsNack *
                   _I2C1_MasterWaitForEvent
             _I2C1_Open
               _I2C1_MasterClearIrq
               _I2C1_MasterOpen
             _I2C1_SetAddressNackCallback
               _I2C1_SetCallback
             _I2C1_SetBuffer
             _I2C1_SetDataCompleteCallback
         _i2c_read1ByteRegister
       _BMA253_GetAccelDataZ
         _BMA253_NewAccelDataRdyZ
           _i2c_read1ByteRegister
         _i2c_read1ByteRegister
       _BMA253_NewAccelDataRdyY
       _BMA253_NewAccelDataRdyZ
       _readRegister
         _readRegisters
           _i2c_readNBytes
             _I2C1_Close
             _I2C1_MasterRead
               _I2C1_MasterOperation
             _I2C1_Open
             _I2C1_SetBuffer
     _LIGHTBLUE_SendPacket
       _RN487X_Write *
         _EUSART1_Read (ARG) *
         _EUSART1_Write (ARG) *
         _EUSART2_Read (ARG) *
         _EUSART2_Write (ARG) *
         _strlen (ARG) *
       _strlen *
     _LIGHTBLUE_SplitWord
       _LIGHTBLUE_SplitByte
         _strlen
   _LIGHTBLUE_Initialize *
   _LIGHTBLUE_LedState *
     _LIGHTBLUE_GetDataLedValue
     _LIGHTBLUE_GetErrorLedValue
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitByte
   _LIGHTBLUE_ParseIncomingPacket *
     _LIGHTBLUE_PerformAction
       _EUSART1_Write *
       _EUSART2_Write *
       _LIGHTBLUE_SetErrorLedValue *
         _LIGHTBLUE_UpdateErrorLed
           _RN487X_Delay *
             _DELAY_milliseconds
           _RN487X_EnterCmdMode *
             _RN487X_ReadMsg
               _RN487X_Read@rn487x_interface$F1381 *
                 _EUSART1_Read *
                 _EUSART2_Read *
             _RN487X_SendCmd
               _RN487X_Write *
               _RN487X_is_tx_done *
                 _EUSART1_is_tx_done *
                 _EUSART2_is_tx_done *
           _RN487X_EnterDataMode *
             _RN487X_ReadMsg
             _RN487X_SendCmd
           _RN487X_SetOutputs *
             _RN487X_ReadDefaultResponse
               _RN487X_Read@rn487x_interface$F1381 *
             _RN487X_SendCmd
   _LIGHTBLUE_PushButton *
     _LIGHTBLUE_GetButtonValue
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitByte
   _LIGHTBLUE_SendProtocolVersion *
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitByte
     _strlen
   _LIGHTBLUE_SendSerialData *
     _RN487X_Write *
     _strlen *
   _LIGHTBLUE_TemperatureSensor *
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitWord
     _TMAG5273_GetTemperatureValue
       _TMAG5273_CalcTemperature
         _i2c_read2ByteRegister
           _I2C1_Close
           _I2C1_MasterWrite
           _I2C1_Open
           _I2C1_SetAddressNackCallback
           _I2C1_SetBuffer
           _I2C1_SetDataCompleteCallback
   _RN487X_DataReady *
     _RN487X_FilterData
       _RN487X_MessageHandler *
         _rn487x_PrintIndicatorCharacters
           _EUSART1_Write *
           _EUSART2_Write *
         _rn487x_PrintMessage
           _EUSART1_Write *
           _EUSART2_Write *
           _strcpy *
           _strlen *
         _rn487x_PrintMessageEnd
           _EUSART1_Write *
           _EUSART2_Write *
         _rn487x_PrintMessageStart
           _EUSART1_Write *
           _EUSART2_Write *
         _strstr
           _strchr
           _strlen
           _strncmp
       _RN487X_Read@rn487x_interface$F1381 *
     _RN487X_is_rx_ready *
       _EUSART1_is_rx_ready *
       _EUSART2_is_rx_ready *
   _RN487X_Init *
     _RN487X_Delay *
     _RN487X_IndicateRx *
     _RN487X_Read@rn487x_interface$F1381 *
     _RN487X_Reset *
     _RN487X_SetSystemMode *
     _RN487X_is_rx_ready *
   _RN487X_IsConnected *
   _RN487X_Read *
     _RN487X_DataReady
   _RN487X_SetAsyncMessageHandler *
   _RN487X_Write *
   _SYSTEM_Initialize *
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCAF6_SetInterruptHandler
     _PMD_Initialize
     _TMR0_Initialize
   _TMR0_HasOverflowOccured *
   _begin *
     _bitRead
     _bitWrite
     _getAngleEn
       _bitRead
       _readRegister
     _getError
       _bitRead
       _getDeviceStatus
         _readRegister
     _getLowPower
       _bitRead
       _readRegister
     _getMagneticChannel
       _bitRead
       _readRegister
     _getOperatingMode
       _bitRead
       _readRegister
     _getTemperatureEN
       _bitRead
       _readRegister
     _isConnected
       _TMAG5273_GetManufacture
         _i2c_read2ByteRegister
         _swap
     _setMagneticChannel
       _bitWrite
       _getError
       _readRegister
       _writeRegister
         _i2c_write1ByteRegister
           _I2C1_Close
           _I2C1_MasterWrite
           _I2C1_Open
           _I2C1_SetAddressNackCallback
           _I2C1_SetBuffer
           _I2C1_SetDataCompleteCallback
     _setOperatingMode
       _bitWrite
       _getError
       _readRegister
       _writeRegister
     _setTemperatureEn
       _bitWrite
       _getError
       _readRegister
       _writeRegister
     _setXYAxisRange
       _bitWrite
       _getError
       _readRegister
       _writeRegister
     _setZAxisRange
       _bitWrite
       _getError
       _readRegister
       _writeRegister

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART1_Receive_ISR *
     NULL(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _EUSART2_Receive_ISR *
     NULL(Fake) *
     _EUSART2_DefaultErrorHandler *
       _EUSART2_RxDataHandler
     _EUSART2_DefaultFramingErrorHandler *
     _EUSART2_DefaultOverrunErrorHandler *
     _EUSART2_RxDataHandler *
   _EUSART2_Transmit_ISR *
   _PIN_MANAGER_IOC *
     _IOCAF6_ISR
       NULL(Fake) *
       _IOCAF6_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2A      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     22A       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      1      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      4D      10       96.2%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      40      12       80.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      50      14      100.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      50      16      100.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0      50      18      100.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              50      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BANK23              50      0       0      52        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BANK24              50      0       0      54        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BANK25              20      0       0      56        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     22A      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Dec 20 16:30:08 2024

                                 _eusart1TxBufferRemaining 005B  
                                   ?_EUSART2_RxDataHandler 0070  
                          __end_of_TMR0_HasOverflowOccured 1EDE  
                                                       l35 16A3  
                                                       l44 0C2A  
                                                       l53 113A  
                                                       l29 1675  
                                                       l56 114B  
                                      _do_I2C_SEND_RESTART 0000  
                                         ?_getDeviceStatus 0070  
                                  getLowPower@lowPowerMode 0031  
                                                      l121 1EEF  
                                                      l202 1EFB  
                                                      l130 116F  
                                                      l211 1091  
                                                      l124 12C4  
                                                      l205 1EF5  
                                                      l133 14D6  
                                                      l221 0819  
                                                      l214 1348  
                                                      l230 083B  
                                                      l127 16D1  
                                                      l208 1ED8  
                                                      l224 081B  
                                                      l145 0705  
                                                      l139 1794  
                                                      l164 05B1  
                                                      l501 10C3  
                                                      l510 172F  
                                                      l193 0FFF  
                                                      l522 10D4  
                                                      l187 065B  
                                                      l196 1073  
                                                      l534 0B8C  
                                                      l199 1760  
                                                      l537 10E5  
                                                      l561 1262  
                                                      l730 1107  
                                                      l546 0A6C  
                                                      l802 1FEE  
                                                      l811 1FE3  
                                                      l549 10F6  
                                                      l733 1118  
                                                      l805 1FF1  
                                                      l742 127A  
                                                      l814 1FE6  
                                                      l822 1012  
                                                      l807 1FF3  
                                                      l736 1129  
                                                      l816 1FE8  
                                                      l832 1647  
                                                      l921 121A  
                                                      l825 1014  
                                                      l842 1468  
                                                      l739 10B2  
                                                      l579 13BE  
                                                      l827 1015  
                                                      l819 100B  
                                                      l835 0BDA  
                                                      l908 0F73  
                                                      l933 0AF8  
                                                      l829 1016  
                                                      l926 132C  
                                                      l783 1E7B  
                                                      l855 0AB0  
                                                      l792 1FA9  
                                                      l848 17C9  
                                                      l952 1292  
                                                      l786 1FFF  
                                                      l795 1FB3  
                                                      l964 1022  
                                                      l789 1F9F  
                                                      l973 0E79  
                                                      l957 1364  
                                                      l798 1F60  
                                                      l886 16FF  
                                                      l974 0E75  
                                                      l879 07FE  
                                                      l976 0E7B  
                                                      l897 15ED  
                                             ?_RN487X_Init 0070  
                                             ?_RN487X_Read 0070  
                               __end_of_DELAY_milliseconds 11D8  
                             LIGHTBLUE_SendPacket@packetID 007A  
                                    ?_I2C1_MasterOperation 0070  
                   __end_of_EUSART2_SetFramingErrorHandler 1F26  
                           _EUSART2_SetFramingErrorHandler 1F20  
                               __end_of_getMagneticChannel 04BD  
                               __end_of_setMagneticChannel 0377  
                                                      wreg 0009  
                                   ?_I2C1_MasterSendTxData 0070  
                                     _I2C1_DO_RX_NACK_STOP 1EBB  
                                ?_I2C1_MasterEnableRestart 0070  
                          BMA253_NewAccelDataRdyY@yNewData 007B  
                                     I2C1_SetBuffer@buffer 0073  
                                                     l1111 1F2B  
                                                     l1120 1F31  
                                                     l1201 1F8C  
                                                     l1114 1F1F  
                                                     l1051 09A7  
                                                     l1220 1533  
                                                     l1060 1E97  
                                                     l1204 0803  
                                                     l1108 1F25  
                                  ??_rd2RegCompleteHandler 0079  
                                                     l1117 1F37  
                                                     l1070 14FC  
                                                     l1214 1571  
                                                     l1223 154A  
                                                     l1057 1F83  
                                                     l2130 10A1  
                                                     l1075 1503  
                                                     l1219 152A  
                                                     l1076 150C  
                                                     l2220 07A0  
                                                     l1261 1F0D  
                                                     l2117 0EEB  
                                                     l1270 1F13  
                                                     l2046 04FC  
                                                     l1079 1523  
                                                     l2127 11C1  
                                            ?_RN487X_Delay 0074  
                                                     l2136 1065  
                                                     l1264 1F01  
                                                     l1352 11ED  
                                                     l2240 0373  
                                                     l2216 079D  
                                                     l2057 0563  
                                                     l1258 1F07  
                                                     l1267 1F19  
                                                     l1195 0969  
                                                     l1355 1FBD  
                                                     l1443 0B41  
                                                     l2139 100A  
                                                     l2332 092B  
                                                     l1454 1F3D  
                                                     l1358 1FC7  
                                                     l2246 0376  
                                                     l2350 08EE  
                                                     l2326 09E6  
                                                     l3311 12AB  
                                                     l3305 1311  
                                                     l1802 1EA1  
                                                     l3330 1382  
                                                     l1474 1183  
                                                     l2442 1203  
                                                     l1811 0CB3  
                                                     l3332 139F  
                                                     l3324 0E1F  
                                                     l1492 1EDD  
                                                     l2452 0D22  
                                                     l1901 1E5D  
                                                     l1805 1F7A  
                                                     l1750 124A  
                                                     l1814 0CCF  
                                                     l1742 1F95  
                                                     l2550 0D75  
                                                     l2462 04BC  
                                                     l1911 103C  
                                                     l2455 0D21  
                                                     l1920 1E9C  
                                                     l1808 1F58  
                                                     l2640 0DCA  
                                                     l1745 17FE  
                                                     l3337 0C7C  
                                                     l1914 1E63  
                                                     l1762 1ECE  
                                                     l1746 17FF  
                                                     l1923 1E6C  
                                                     l1827 0A03  
                                                     l2547 0D76  
                                                     l1932 1E69  
                                                     l1772 1FD2  
                                                     l1828 0A29  
                                                     l1756 13DF  
                                                     l2580 11AC  
                                                     l2636 1F68  
                                                     l1917 1E75  
                                                     l1941 1E93  
                                                     l1845 161A  
                                                     l1935 1E6F  
                                                     l1839 1F50  
                                                     l1863 1EA6  
                                                     l1759 1ED3  
                                                     l1944 1E8F  
                                                     l1872 1EB5  
                                                     l2672 1445  
                                                     l1769 1057  
                                                     l1929 1E72  
                                                     l1881 1EC4  
                                                     l1962 1E60  
                                                     l1938 1EE3  
                                                     l1866 1EAB  
                                                     l1890 1599  
                                                     l1778 1FDD  
                                                     l2682 1197  
                                                     l1875 1EBA  
                                                     l1795 102F  
                                                     l2691 1381  
                                                     l1884 1EC9  
                                                     l1972 1EE9  
                                                     l1980 11D7  
                                                     l2676 14B0  
                                                     l1789 148C  
                                                     l1965 1E78  
                                                     l1869 1EB0  
                                                     l1878 1EBF  
                                                     l1959 1E66  
                                                     l1799 15C2  
                                                     l2679 12DD  
                                                     l1968 1EE4  
                                                     l2688 1049  
                                                     l1898 1E5B  
                          BMA253_NewAccelDataRdyZ@zNewData 007B  
                                                     STR_1 2016  
                                                     STR_2 200B  
                                                     STR_3 200B  
                                                     STR_4 187A  
                                                     STR_5 187A  
                                                     STR_6 2016  
                                                     _LATA 0018  
                                                     _LATB 0019  
                                                     _LATC 001A  
                                                     _LATE 001C  
                               LIGHTBLUE_PushButton@button 0020  
                                                     _PMD0 0796  
                                                     _PMD1 0797  
                                                     _PMD2 0798  
                                                     _PMD3 0799  
                                                     _PMD4 079A  
                                                     _PMD5 079B  
                                                     _PMD6 079C  
                                                     _PMD7 079D  
                                                     u9600 15A2  
                                                     u9601 15A1  
                                                     u9610 15AA  
                                                     u9611 15A9  
                                                     u9540 1470  
                                                     u9620 102F  
                                                     u9700 1503  
                                                     u9541 146F  
                                                     u9621 102E  
                                                     u9701 1502  
                                                     u9550 1050  
                                                     u9630 1035  
                                                     u9710 1508  
                                                     u9551 104F  
                                                     u9631 1034  
                                                     u9711 1507  
                                                     u9560 0C85  
                                                     u9640 13C8  
                                                     u9720 151E  
                                                     u9800 12A5  
                                                     u9561 0C84  
                                                     u9641 13C7  
                                                     u9721 151D  
                                                     u9801 12A4  
                                                     u9570 0CCC  
                                                     u9650 13D0  
                                                     u9810 11D7  
                                                     u9730 1551  
                                                     u9571 0CCB  
                                                     u9651 13CF  
                                                     u9811 11D6  
                                                     u9731 1550  
                                                     u9580 09FE  
                                                     u9660 17D2  
                                                     u9740 1568  
                                                     u9900 0F27  
                                                     u9820 1311  
                                                     u9581 09FD  
                                                     u9661 17D1  
                                                     u9741 1567  
                                                     u9901 0F26  
                                                     u9821 1310  
                                                     u9670 123A  
                                                     u9590 1EE9  
                                                     u9750 152A  
                                                     u9830 16E3  
                                                     u9910 0C37  
                                                     u9671 1239  
                                                     u9591 1EE8  
                                                     u9751 1529  
                                                     u9831 16E2  
                                                     u9911 0C36  
                                                     u9760 152F  
                                                     u9680 14DD  
                                                     u9840 16FF  
                                                     u9920 0C4F  
                                                     u9761 152E  
                                                     u9681 14DC  
                                                     u9841 16FE  
                                                     u9921 0C4E  
                                                     u9770 1545  
                                                     u9690 14F3  
                                                     u9850 15E0  
                                                     u9930 0C58  
                                                     u9771 1544  
                                                     u9691 14F2  
                                                     u9851 15DF  
                                                     u9931 0C57  
                                                     u9780 13AA  
                                                     u9860 15EC  
                                                     u9940 0C5E  
                                                     u9781 13A9  
                                                     u9861 15EB  
                                                     u9941 0C5D  
                                                     u9790 13BE  
                                                     u9870 0F12  
                                                     u9950 0C6E  
                                                     u9791 13BD  
                                                     u9871 0F11  
                                                     u9951 0C6D  
                                                     u9880 0F18  
                                                     u9960 138C  
                                                     u9881 0F17  
                                                     u9961 138B  
                                                     u9890 0F21  
                                                     u9970 139D  
                                                     u9891 0F20  
                                                     u9971 139C  
                                                     u9980 0B54  
                                                     u9981 0B53  
                                                     u9990 0B7B  
                                                     u9991 0B7A  
                                            ?_RN487X_Reset 0071  
                          BMA253_GetAccelDataXYZ@accelData 0033  
                                                     _WPUA 1F39  
                                                     _WPUB 1F44  
                                                     _WPUC 1F4F  
                                                     _WPUE 1F65  
                                    ??_EUSART2_Receive_ISR 0071  
                                  ??_wr2RegCompleteHandler 0079  
                                         ??_I2C1_MasterFsm 0020  
                                            _EUSART1_Write 1524  
                                            ?_RN487X_Write 0076  
                                            _EUSART2_Write 14FD  
                                ??_I2C1_CallbackReturnStop 0079  
                                BMA253_GetAccelDataXYZ@lSB 0031  
                                BMA253_GetAccelDataXYZ@mSB 0032  
                                                     __hex 014C  
                                                     _main 04BD  
                                                     _peek 0066  
                                            ?_EUSART1_Read 0070  
                                                     _uart 1800  
                                            ?_EUSART2_Read 0070  
                                           _RN487X_ReadMsg 15C3  
                                                     fsr0h 0005  
                                                     fsr1h 0007  
                                                     indf0 0000  
                                                     fsr0l 0004  
                                                     indf1 0001  
                                                     fsr1l 0006  
                                                     _swap 1184  
                                                     btemp 007E  
                            ??_LIGHTBLUE_TemperatureSensor 007C  
                                           _RN487X_SendCmd 16D2  
                         RN487X_SetOutputs@stateHighNibble 0025  
                                                     start 0055  
                                           _setXYAxisRange 09A8  
                                         ??_I2C1_SetBuffer 0073  
                             __end_of_EUSART2_Transmit_ISR 1402  
                              __end_of_RN487X_EnterCmdMode 121B  
                                             _statusBuffer 02A0  
                                         _setTemperatureEn 08B2  
                                        ?_getTemperatureEN 0070  
                                  ??_LIGHTBLUE_AccelSensor 007C  
                            I2C1_CallbackReturnStop@funPtr 0078  
                                    __end_of_setZAxisRange 092C  
                    __end_of_LIGHTBLUE_ParseIncomingPacket 065C  
                            _LIGHTBLUE_ParseIncomingPacket 0590  
                                  __end_of_TMR0_Initialize 1184  
                                             _do_I2C_RESET 0000  
                                       ??_getTemperatureEN 002E  
                                   _i2c_write1ByteRegister 1700  
                                         bitWrite@position 0073  
                            __end_of_OSCILLATOR_Initialize 1FBE  
                                                    l13000 0800  
                                                    l13010 155E  
                                                    l13020 156E  
                                                    l13012 1562  
                                                    l13004 154B  
                                                    l13100 15C3  
                                                    l13030 152F  
                                                    l13022 1570  
                                                    l13014 1568  
                                                    l13006 154B  
                                                    l13110 15E2  
                                                    l13102 15C5  
                                                    l13200 0B6E  
                                                    l13040 1546  
                                                    l13032 1534  
                                                    l13016 1569  
                                                    l13008 1551  
                                                    l13104 15CF  
                                                    l13112 15E6  
                                                    l13120 0EED  
                                                    l14000 08F1  
                                                    l13210 0B85  
                                                    l13202 0B71  
                                                    l13050 13B3  
                                                    l13034 153B  
                                                    l13042 1548  
                                                    l13026 1524  
                                                    l13018 156B  
                                                    l13114 15EC  
                                                    l13106 15E0  
                                                    l13130 0F18  
                                                    l13122 0EF7  
                                                    l14010 0912  
                                                    l14002 08F1  
                                                    l13212 0B8B  
                                                    l13204 0B7B  
                                                    l13052 13B6  
                                                    l13044 13A1  
                                                    l13220 1063  
                                                    l13036 153F  
                                                    l13028 1524  
                                                    l13060 1FA0  
                                                    l13132 0F1B  
                                                    l13124 0F01  
                                                    l13300 1795  
                                                    l14020 11EE  
                                                    l14100 03C9  
                                                    l14012 0917  
                                                    l14004 08FC  
                                                    l13046 13A1  
                                                    l13038 1545  
                                                    l13054 1FF4  
                                                    l13070 12A5  
                                                    l13134 0F21  
                                                    l13126 0F0C  
                                                    l13118 0EEC  
                                                    l13302 179D  
                                                    l13310 0DCB  
                                                    l14022 11EE  
                                                    l14110 03D5  
                                                    l14030 0CD0  
                                                    l14014 0921  
                                                    l14006 0901  
                                                    l12600 1119  
                                                    l13208 0B81  
                                                    l13048 13AA  
                                                    l13152 1094  
                                                    l13216 105A  
                                                    l13064 1293  
                                                    l13080 11C2  
                                                    l13056 1F96  
                                                    l13224 1204  
                                                    l13136 0F27  
                                                    l13128 0F12  
                                                    l13144 0F2B  
                                                    l13240 0AC1  
                                                    l13232 0AB1  
                                                    l13400 1F84  
                                                    l13304 17A0  
                                                    l13320 0E0E  
                                                    l13312 0DD1  
                                                    l14024 11F4  
                                                    l14112 03DA  
                                                    l14120 03E1  
                                                    l14040 0CF6  
                                                    l14032 0CD0  
                                                    l14016 0928  
                                                    l14008 090A  
                                                    l12530 147F  
                                                    l12610 10AA  
                                                    l12602 1121  
                                                    l13074 1FD3  
                                                    l13218 105B  
                                                    l13066 1298  
                                                    l13082 11C3  
                                                    l13090 16D3  
                                                    l13226 120B  
                                                    l13138 0F29  
                                                    l13146 0F33  
                                                    l13250 0AD2  
                                                    l13242 0AC5  
                                                    l13234 0AB8  
                                                    l13306 17AF  
                                                    l13170 0C5E  
                                                    l13162 0C3A  
                                                    l13322 0E14  
                                                    l13314 0DDE  
                                                    l14026 1202  
                                                    l14210 0474  
                                                    l14122 03E6  
                                                    l14114 03DF  
                                                    l14106 03CB  
                                                    l14050 0D02  
                                                    l14042 0CFB  
                                                    l14034 0CD6  
                                                    l13330 1701  
                                                    l12540 1E6A  
                                                    l12532 104B  
                                                    l12612 10B1  
                                                    l12604 1128  
                                                    l12700 1F51  
                                                    l13076 1ECA  
                                                    l13068 129C  
                                                    l13084 11CB  
                                                    l13092 16D5  
                                                    l13228 1211  
                                                    l13148 0F72  
                                                    l13260 0AE1  
                                                    l13252 0AD5  
                                                    l13244 0AC9  
                                                    l13236 0ABC  
                                                    l13308 17B4  
                                                    l13180 138D  
                                                    l13172 0C6E  
                                                    l13164 0C46  
                                                    l13156 0C2B  
                                                    l13316 0DF4  
                                                    l13324 0E1D  
                                                    l13500 1F32  
                                                    l13404 1424  
                                                    l14220 0480  
                                                    l14212 0479  
                                                    l14204 0465  
                                                    l14140 0406  
                                                    l14124 03EB  
                                                    l14108 03D0  
                                                    l14060 0D0E  
                                                    l14052 0D07  
                                                    l14036 0CE3  
                                                    l13420 1F67  
                                                    l13340 1727  
                                                    l13332 170A  
                                                    l12542 1E6D  
                                                    l12534 1050  
                                                    l12526 146A  
                                                    l12550 10C2  
                                                    l12622 1EDE  
                                                    l12702 1F53  
                                                    l12630 1EA5  
                                                    l13342 112A  
                                                    l13350 114A  
                                                    l13094 16E3  
                                                    l13270 0AEF  
                                                    l13262 0AE3  
                                                    l13254 0AD7  
                                                    l13246 0ACC  
                                                    l13238 0ABF  
                                                    l13086 12F9  
                                                    l13182 139D  
                                                    l13166 0C4F  
                                                    l13158 0C37  
                                                    l13318 0DF5  
                                                    l13502 1F20  
                                                    l13414 1444  
                                                    l13406 143C  
                                                    l14302 0D5D  
                                                    l14222 0485  
                                                    l14206 046A  
                                                    l14150 0412  
                                                    l14142 040B  
                                                    l14126 03F0  
                                                    l14134 03F7  
                                                    l14070 0D1A  
                                                    l14062 0D13  
                                                    l14038 0CF1  
                                                    l13430 1197  
                                                    l13334 1713  
                                                    l15030 04CA  
                                                    l12536 1056  
                                                    l12528 1470  
                                                    l12608 10A2  
                                                    l12616 1263  
                                                    l12544 1E8C  
                                                    l12800 15FE  
                                                    l12704 1F57  
                                                    l12720 0C8E  
                                                    l12712 0C86  
                                                    l12640 1EB1  
                                                    l13192 0B4A  
                                                    l13344 1139  
                                                    l13440 1663  
                                                    l13600 0C0C  
                                                    l13096 16F5  
                                                    l13280 1323  
                                                    l13272 0AF5  
                                                    l13264 0AE7  
                                                    l13256 0AD9  
                                                    l13248 0ACE  
                                                    l14400 06FA  
                                                    l13360 0A3F  
                                                    l13088 12FB  
                                                    l13176 1382  
                                                    l13168 0C58  
                                                    l13520 1F14  
                                                    l13504 1F26  
                                                    l13408 1442  
                                                    l14304 0D62  
                                                    l14312 0D69  
                                                    l14240 04A5  
                                                    l14224 048A  
                                                    l14232 0491  
                                                    l14208 046F  
                                                    l14152 0417  
                                                    l14136 03FC  
                                                    l14128 03F5  
                                                    l14080 0377  
                                                    l14072 0D1F  
                                                    l14048 0CFD  
                                                    l13424 1184  
                                                    l13336 171B  
                                                    l13328 1701  
                                                    l15040 04E4  
                                                    l15032 04CB  
                                                    l12538 1FC8  
                                                    l12546 10B3  
                                                    l12554 10C4  
                                                    l12562 10D5  
                                                    l12570 10E6  
                                                    l12618 1279  
                                                    l12650 1E90  
                                                    l12626 1E99  
                                                    l12730 0CC1  
                                                    l12634 1EA7  
                                                    l12642 1EB4  
                                                    l12810 1EB9  
                                                    l13194 0B54  
                                                    l13186 0B44  
                                                    l13434 164A  
                                                    l13442 1678  
                                                    l13602 0C15  
                                                    l13450 1731  
                                                    l13610 1067  
                                                    l13098 16F9  
                                                    l13266 0AEB  
                                                    l13258 0ADD  
                                                    l14410 05A1  
                                                    l14402 0592  
                                                    l13362 0A47  
                                                    l13354 0A2C  
                                                    l14330 12B5  
                                                    l13290 0B8D  
                                                    l13178 138C  
                                                    l13522 1F02  
                                                    l13506 1F1A  
                                                    l14314 0D6E  
                                                    l14306 0D67  
                                                    l14250 04B1  
                                                    l14234 0496  
                                                    l14226 048F  
                                                    l14218 047B  
                                                    l14170 0437  
                                                    l14154 041C  
                                                    l14162 0423  
                                                    l14138 0401  
                                                    l14090 03A7  
                                                    l14082 0377  
                                                    l14058 0D09  
                                                    l13426 1186  
                                                    l13530 148D  
                                                    l13418 1F61  
                                                    l13338 1724  
                                                    l15050 0522  
                                                    l15042 04E6  
                                                    l15034 04CE  
                                                    l15026 04BD  
                                                    l12548 10BB  
                                                    l12556 10CC  
                                                    l12564 10DD  
                                                    l12572 10EE  
                                                    l12580 1261  
                                                    l12732 0CCC  
                                                    l12716 0C8A  
                                                    l12708 0C7D  
                                                    l12628 1EA2  
                                                    l12636 1EAA  
                                                    l12660 1EBE  
                                                    l12652 1EC0  
                                                    l13196 0B5D  
                                                    l13436 164A  
                                                    l13348 113B  
                                                    l13444 1678  
                                                    l13604 0C1D  
                                                    l13620 0FC2  
                                                    l13612 0F75  
                                                    l13460 175C  
                                                    l13452 173B  
                                                    l14340 16B5  
                                                    l14324 1EEA  
                                                    l13284 1F59  
                                                    l13276 1312  
                                                    l13268 0AED  
                                                    l13372 132D  
                                                    l14420 05CC  
                                                    l14412 05AA  
                                                    l14404 0593  
                                                    l13364 0A50  
                                                    l13356 0A2C  
                                                    l14332 12BE  
                                                    l13292 1447  
                                                    l13380 0A6D  
                                                    l13524 1F08  
                                                    l13700 099C  
                                                    l14316 0D73  
                                                    l14252 04B6  
                                                    l14236 049B  
                                                    l14180 0443  
                                                    l14164 0428  
                                                    l14156 0421  
                                                    l14148 040D  
                                                    l14092 03B5  
                                                    l14084 037D  
                                                    l14068 0D15  
                                                    l13428 1188  
                                                    l13532 148D  
                                                    l13540 0D89  
                                                    l15060 0540  
                                                    l15052 052D  
                                                    l15044 04F6  
                                                    l15036 04D4  
                                                    l15028 04C9  
                                                    l12558 10D3  
                                                    l12566 10E4  
                                                    l12574 10F5  
                                                    l12646 1E73  
                                                    l12734 0CCE  
                                                    l12726 0C92  
                                                    l12750 0A01  
                                                    l12742 09E7  
                                                    l12654 1EC3  
                                                    l12814 1EC5  
                                                    l12830 157B  
                                                    l12822 1572  
                                                    l12910 17D6  
                                                    l12902 17CB  
                                                    l13198 0B65  
                                                    l13438 1652  
                                                    l13446 1680  
                                                    l13606 0C21  
                                                    l13622 0FDA  
                                                    l13614 0F92  
                                                    l13454 1749  
                                                    l14342 16C0  
                                                    l14334 16A4  
                                                    l13278 131D  
                                                    l13374 1330  
                                                    l13462 1085  
                                                    l14430 05EF  
                                                    l14422 05D6  
                                                    l14414 05B6  
                                                    l14406 0596  
                                                    l13630 1EF6  
                                                    l14350 1163  
                                                    l13366 0A53  
                                                    l13358 0A36  
                                                    l14326 12AC  
                                                    l14502 07A1  
                                                    l13294 144C  
                                                    l13390 0AA1  
                                                    l13382 0A82  
                                                    l13470 0E20  
                                                    l13526 1EFC  
                                                    l13518 1F0E  
                                                    l13702 099E  
                                                    l14254 04BB  
                                                    l14238 04A0  
                                                    l14246 04A7  
                                                    l14182 0448  
                                                    l14190 044F  
                                                    l14166 042D  
                                                    l14094 03BA  
                                                    l14086 038B  
                                                    l14270 11AB  
                                                    l13534 149A  
                                                    l13550 0DBD  
                                                    l13542 0D97  
                                                    l15054 0533  
                                                    l15046 0505  
                                                    l15062 0544  
                                                    l15038 04DC  
                                                    l12584 10F7  
                                                    l12592 1108  
                                                    l12664 1E70  
                                                    l12672 1E76  
                                                    l12728 0CB5  
                                                    l12760 0A09  
                                                    l12744 09EF  
                                                    l12808 1EB6  
                                                    l12816 1EC7  
                                                    l12824 1574  
                                                    l12920 17EC  
                                                    l12912 17DD  
                                                    l12904 17D2  
                                                    l13448 1691  
                                                    l13624 0FE8  
                                                    l13616 0F97  
                                                    l13456 174D  
                                                    l14344 16CB  
                                                    l14336 16A6  
                                                    l14360 14BD  
                                                    l13376 133D  
                                                    l13464 108E  
                                                    l14440 0601  
                                                    l14432 05F1  
                                                    l14424 05D9  
                                                    l14416 05BC  
                                                    l14408 059B  
                                                    l14352 1169  
                                                    l13368 0A5B  
                                                    l13608 103D  
                                                    l14328 12AE  
                                                    l14504 07E7  
                                                    l13296 1458  
                                                    l13288 161B  
                                                    l13392 0AA8  
                                                    l13384 0A86  
                                                    l13480 0E3C  
                                                    l13472 0E2B  
                                                    l13720 093E  
                                                    l13704 099F  
                                                    l13528 1F38  
                                                    l13800 0B24  
                                                    l14280 0D37  
                                                    l14248 04AC  
                                                    l14192 0454  
                                                    l14184 044D  
                                                    l14168 0432  
                                                    l14176 0439  
                                                    l14096 03BF  
                                                    l14088 0399  
                                                    l14264 1198  
                                                    l13552 0DC2  
                                                    l13560 0DC9  
                                                    l13544 0DA5  
                                                    l13536 0D77  
                                                    l15064 0553  
                                                    l15056 0539  
                                                    l15048 0517  
                                                    l12682 1E5E  
                                                    l12578 124B  
                                                    l12586 10FF  
                                                    l12594 1110  
                                                    l12674 1E5A  
                                                    l12746 09F4  
                                                    l12666 1EAC  
                                                    l12658 1EBB  
                                                    l12818 1EC8  
                                                    l12826 1577  
                                                    l12850 15A2  
                                                    l12930 17FD  
                                                    l12922 17F1  
                                                    l12914 17E2  
                                                    l12906 17D4  
                                                    l13626 0FEC  
                                                    l13618 0FA2  
                                                    l13458 1758  
                                                    l14338 16AA  
                                                    l13634 1EF0  
                                                    l14362 14C3  
                                                    l14354 14B1  
                                                    l13378 1345  
                                                    l13650 0827  
                                                    l13642 0806  
                                                    l14450 062D  
                                                    l14442 060A  
                                                    l14434 05F6  
                                                    l14426 05DF  
                                                    l14418 05C5  
                                                    l14346 115D  
                                                    l14370 1765  
                                                    l13466 1FAA  
                                                    l14506 07F0  
                                                    l13298 145D  
                                                    l13394 0AAB  
                                                    l13386 0A98  
                                                    l13490 0E6E  
                                                    l13482 0E4A  
                                                    l13474 0E30  
                                                    l13730 0949  
                                                    l13722 0941  
                                                    l13714 092C  
                                                    l13706 09A0  
                                                    l13810 0B34  
                                                    l13802 0B25  
                                                    l14530 11DB  
                                                    l14282 0D45  
                                                    l14274 0D23  
                                                    l14194 0459  
                                                    l14178 043E  
                                                    l14098 03C4  
                                                    l14266 1198  
                                                    l13554 0DC7  
                                                    l13546 0DB3  
                                                    l13538 0D7C  
                                                    l13570 1002  
                                                    l15066 056C  
                                                    l15058 053D  
                                                    l12940 123D  
                                                    l12588 1106  
                                                    l12596 1117  
                                                    l12684 1E9D  
                                                    l12692 1F72  
                                                    l12756 0A05  
                                                    l12748 09FE  
                                                    l12668 1EAF  
                                                    l12836 157F  
                                                    l12852 15AA  
                                                    l12860 1024  
                                                    l12924 17F2  
                                                    l12916 17E3  
                                                    l12908 17D5  
                                                    l13628 0FF4  
                                                    l14364 14CA  
                                                    l14356 14B6  
                                                    l13644 0807  
                                                    l14444 0611  
                                                    l14436 05F8  
                                                    l14428 05E8  
                                                    l14348 1162  
                                                    l14372 176E  
                                                    l14380 065D  
                                                    l13580 1373  
                                                    l13396 1F7B  
                                                    l13388 0A9E  
                                                    l13492 0E70  
                                                    l13484 0E5D  
                                                    l13476 0E36  
                                                    l13740 0961  
                                                    l13732 0950  
                                                    l13724 0943  
                                                    l13716 092E  
                                                    l13708 09A5  
                                                    l13820 0B3F  
                                                    l13812 0B36  
                                                    l13804 0B2C  
                                                    l14540 11EA  
                                                    l14532 11DE  
                                                    l14284 0D4A  
                                                    l14292 0D51  
                                                    l14276 0D23  
                                                    l14196 045E  
                                                    l14268 119E  
                                                    l13564 12C5  
                                                    l13548 0DB8  
                                                    l13900 0287  
                                                    l15068 057F  
                     __end_of_TMAG5273_GetTemperatureValue 104A  
                             _TMAG5273_GetTemperatureValue 103D  
                                                    l12942 1240  
                                                    l12934 1233  
                                                    l12678 1E5C  
                                                    l12790 15F8  
                                                    l12782 15EE  
                                                    l12686 1E9F  
                                                    l12694 1F74  
                                                    l12766 0A0D  
                                                    l12774 1F4A  
                                                    l12854 15AD  
                                                    l12846 159A  
                                                    l12862 1027  
                                                    l12870 1036  
                                                    l12926 17F7  
                                                    l12918 17E8  
                                                    l13590 0BE4  
                                                    l13638 1ED4  
                                                    l14366 14D0  
                                                    l14358 14B7  
                                                    l13646 0815  
                                                    l13654 0833  
                                                    l14446 0624  
                                                    l14438 05FB  
                                                    l14462 063C  
                                                    l14374 1774  
                                                    l14390 0694  
                                                    l14382 0667  
                                                    l13582 137D  
                                                    l13574 1365  
                                                    l13494 0E77  
                                                    l13486 0E63  
                                                    l13478 0E37  
                                                    l13662 1351  
                                                    l14470 127B  
                                                    l13742 0962  
                                                    l13734 0957  
                                                    l13726 0945  
                                                    l13718 0935  
                                                    l13750 1F8F  
                                                    l13830 1FBC  
                                                    l13822 1FB4  
                                                    l13814 0B38  
                                                    l13806 0B2E  
                                                    l14534 11E1  
                                                    l14542 1ED9  
                                                    l14294 0D56  
                                                    l14286 0D4F  
                                                    l14278 0D29  
                                                    l14198 0463  
                                                    l13566 12D1  
                                                    l13910 02F4  
                                                    l13902 028D  
                                                    l14550 0E81  
                                                    l12880 1E61  
                                                    l12944 1243  
                                                    l12936 123A  
                                                    l12856 1E67  
                                                    l12784 15F1  
                                                    l12688 1EA0  
                                                    l12696 1F79  
                                                    l12776 1F4C  
                                                    l12848 159D  
                                                    l12864 102A  
                                                    l12872 1038  
                                                    l12928 17FA  
                                                    l12952 1ECF  
                                                    l13592 0BEA  
                                                    l12960 14D7  
                                                    l13648 081D  
                                                    l14456 0633  
                                                    l14448 062A  
                                                    l14376 1779  
                                                    l14368 1761  
                                                    l14392 06AB  
                                                    l14384 0672  
                                                    l13576 1371  
                                                    l13672 1FE9  
                                                    l13488 0E68  
                                                    l13664 135F  
                                                    l13656 1349  
                                                    l14472 1281  
                                                    l13744 0967  
                                                    l13736 095E  
                                                    l13728 0947  
                                                    l13680 096C  
                                                    l13752 1F91  
                                                    l13824 1FB7  
                                                    l13816 0B3A  
                                                    l13808 0B31  
                                                    l13760 0AFD  
                                                    l13832 1170  
                                                    l14536 11E4  
                                                    l14528 11D8  
                                                    l14296 0D5B  
                                                    l13840 11BE  
                                                    l13920 033D  
                                                    l13912 02FC  
                                                    l13904 02B9  
                                                    l14560 0EA7  
                                                    l14552 0E8C  
                                                    l12946 1246  
                                                    l12938 123B  
                                                    l12794 15FA  
                                                    l12778 1F4F  
                                                    l12858 1023  
                                                    l12890 13D0  
                                                    l12882 13C1  
                                                    l12874 103B  
                                                    l12866 1030  
                                                    l13594 0BF9  
                                                    l13586 0BDD  
                                                    l12970 14F3  
                                                    l12962 14D7  
                                                    l14458 0639  
                                                    l14378 178E  
                                                    l14394 06BD  
                                                    l14386 0684  
                                                    l13578 1371  
                                                    l13674 1FDE  
                                                    l13658 134F  
                                                    l14474 1287  
                                                    l13738 0960  
                                                    l13498 1F2C  
                                                    l13690 0983  
                                                    l13682 0973  
                                                    l13754 1F94  
                                                    l13826 1FB8  
                                                    l13818 0B3D  
                                                    l13770 0B0F  
                                                    l13762 0B08  
                                                    l13746 1FBE  
                                                    l13834 117E  
                                                    l14538 11E7  
                                                    l13922 036B  
                                                    l13914 0302  
                                                    l13906 02C1  
                                                    l13850 00AA  
                                                    l13930 08B4  
                                                    l14554 0E95  
                                                    l14546 0E7C  
                                                    l12948 1249  
                                                    l12788 15F5  
                                                    l12892 13D4  
                                                    l12884 13C8  
                                                    l12868 1035  
                                                    l13596 0C00  
                                                    l13588 0BDE  
                                                    l12972 14F4  
                                                    l12964 14DD  
                                                    l12956 1E94  
                                                    l14396 06ED  
                                                    l14388 0689  
                                                    l13676 100D  
                                                    l13668 1363  
                                                    l14492 1017  
                                                    l14476 128C  
                                                    l14484 1291  
                                                    l13692 0985  
                                                    l13684 097C  
                                                    l13748 1F8D  
                                                    l13828 1FBB  
                                                    l13780 0B14  
                                                    l13772 0B10  
                                                    l13764 0B0A  
                                                    l13756 0AF9  
                                                    l13844 11C0  
                                                    l13836 11AD  
                                                    l13916 032F  
                                                    l13908 02C7  
                                                    l13860 00F2  
                                                    l13924 0373  
                                                    l13852 00B5  
                                                    l13940 08DA  
                                                    l13932 08BF  
                                                    l14580 0EE8  
                                                    l14572 0ED6  
                                                    l14564 0EC4  
                                                    l14556 0E9E  
                                                    l14548 0E81  
                                                    l12878 1E64  
                                                    l12894 13D7  
                                                    l12886 13C9  
                                                    l13598 0C08  
                                                    l12990 1514  
                                                    l12982 14FD  
                                                    l12974 14F6  
                                                    l12966 14E9  
                                                    l14398 06F1  
                                                    l14494 1017  
                                                    l14478 128F  
                                                    l13694 0987  
                                                    l13686 097F  
                                                    l13678 096A  
                                                    l13790 0B1C  
                                                    l13782 0B15  
                                                    l13774 0B11  
                                                    l13766 0B0C  
                                                    l13758 0AFB  
                                                    l13838 11B5  
                                                    l13918 0337  
                                                    l13870 0160  
                                                    l13862 011E  
                                                    l13854 00BA  
                                                    l13950 0708  
                                                    l13942 08E4  
                                                    l13934 08C4  
                                                    l12896 13DA  
                                                    l12888 13CB  
                                                    l12992 1518  
                                                    l12984 14FD  
                                                    l12976 14F9  
                                                    l12968 14ED  
                                                    l14488 1E79  
                                                    l14496 101F  
                                                    l13696 098E  
                                                    l13688 0981  
                                                    l13792 0B1E  
                                                    l13784 0B16  
                                                    l13776 0B12  
                                                    l13768 0B0E  
                                                    l13880 01CD  
                                                    l13872 0166  
                                                    l13864 0126  
                                                    l13856 00E5  
                                                    l13848 00AA  
                                                    l13960 0739  
                                                    l13952 0713  
                                                    l13944 08EB  
                                                    l13936 08CD  
                                                    l13928 08B4  
                                                    l14576 0EDF  
                                                    l14568 0ECD  
                                                    l12898 13DD  
                                                    l12994 151E  
                                                    l12986 1508  
                                                    l12978 14FB  
                                                    l14498 1021  
                                                    l13698 0995  
                                                    l13794 0B20  
                                                    l13786 0B18  
                                                    l13778 0B13  
                                                    l13890 0216  
                                                    l13882 01D5  
                                                    l13874 0193  
                                                    l13866 012C  
                                                    l13858 00ED  
                                                    l13970 0779  
                                                    l13962 074E  
                                                    l13954 0718  
                                                    l13938 08D5  
                                                    l12996 151F  
                                                    l12988 150D  
                                                    l13796 0B22  
                                                    l13788 0B1A  
                                                    l13892 0243  
                                                    l13884 01DB  
                                                    l13876 019B  
                                                    l13868 0158  
                                                    l13972 077F  
                                                    l13964 0756  
                                                    l13956 072C  
                                                    l13948 0708  
                                                    l13980 09AA  
                                                    l12998 1521  
                                                    l13798 0B23  
                                                    l13894 024B  
                                                    l13886 0208  
                                                    l13878 01A1  
                                                    l13974 0795  
                                                    l13966 075C  
                                                    l13958 0734  
                                                    l13990 09CC  
                                                    l13982 09AA  
                                                    l13896 0251  
                                                    l13888 0210  
                                                    l13968 0771  
                                                    l13976 079D  
                                                    l13992 09D1  
                                                    l13984 09B5  
                                                    l16650 160C  
                                                    l16642 0644  
                                                    l13898 027F  
                                                    l13994 09DC  
                                                    l13986 09BA  
                                                    l16644 1591  
                                                    l13996 09E3  
                                                    l13988 09C4  
                                                    l16646 0A1B  
                                                    l16648 0CA5  
                                    _eusart1RxStatusBuffer 00BD  
                                        __end_of_I2C1_Open 1800  
                                                    ?_main 0070  
                                           _i2c_readNBytes 13A0  
                           ?_RN487X_SetAsyncMessageHandler 0071  
                                                    ?_swap 0071  
                                                    u10000 0B80  
                                                    u10001 0B7F  
                                                    u10010 0B8B  
                                                    u10011 0B8A  
                                                    u10020 0ABC  
                                                    u10100 0E1D  
                                                    u10021 0ABB  
                                                    u10101 0E1C  
                                                    u10030 0AC9  
                                                    u10110 170A  
                                                    u10031 0AC8  
                                                    u10111 1709  
                                                    u10040 144C  
                                                    u10200 0A98  
                                                    u11000 0401  
                                                    u10120 172F  
                                                    u10041 144B  
                                                    u10201 0A97  
                                                    u11001 0400  
                                                    u10121 172E  
                                                    u10130 1137  
                                                    u10210 1F82  
                                                    u10050 145D  
                                                    u11010 0406  
                                                    u10131 1135  
                                                    u10211 1F80  
                                                    u10051 145C  
                                                    u11011 0405  
                                                    u10140 1138  
                                                    u10220 1F83  
                                                    u10060 17C9  
                                                    u11100 0437  
                                                    u11020 040B  
                                                    u10061 17C8  
                                                    u11101 0436  
                                                    u11021 040A  
                                                    u10150 1148  
                                                    u10230 1F8B  
                                                    u10070 0DD1  
                                                    u10310 0E30  
                                                    u11110 043E  
                                                    u11030 0412  
                                                    u10151 1146  
                                                    u10231 1F89  
                                                    u10071 0DD0  
                                                    u10311 0E2F  
                                                    u11111 043D  
                                                    u11031 0411  
                                                    u10160 1149  
                                                    u10240 1F8C  
                                                    u10080 0DF4  
                                                    u10320 0E36  
                                                    u11200 046F  
                                                    u11120 0443  
                                                    u11040 0417  
                                                    u10400 0DC7  
                                                    u10305 1697  
                                                    u10065 17C5  
                                                    u10081 0DF3  
                                                    u10321 0E35  
                                                    u11201 046E  
                                                    u11121 0442  
                                                    u11041 0416  
                                                    u10401 0DC6  
                                                    u10170 0A36  
                                                    u10090 0E14  
                                                    u10330 0E5D  
                                                    u11210 0474  
                                                    u11130 0448  
                                                    u11050 041C  
                                                    u10171 0A35  
                                                    u10091 0E13  
                                                    u10331 0E5C  
                                                    u11211 0473  
                                                    u11131 0447  
                                                    u11051 041B  
                                                    u10420 0C08  
                                                    u10500 0823  
                                                    u10180 0A5B  
                                                    u10340 0E6E  
                                                    u10260 1442  
                                                    u11300 04A5  
                                                    u11220 0479  
                                                    u11140 044D  
                                                    u11060 0421  
                                                    u10421 0C07  
                                                    u10181 0A5A  
                                                    u10341 0E6D  
                                                    u10261 1441  
                                                    u11301 04A4  
                                                    u11221 0478  
                                                    u11141 044C  
                                                    u11061 0420  
                                                    u10270 1652  
                                                    u10430 0C1D  
                                                    u10190 0A82  
                                                    u10510 134F  
                                                    u10254 1434  
                                                    u11310 04AC  
                                                    u11230 0480  
                                                    u11150 0454  
                                                    u11070 0428  
                                                    u10271 1651  
                                                    u10431 0C1C  
                                                    u10415 0BED  
                                                    u10191 0A81  
                                                    u10335 0E59  
                                                    u10511 134E  
                                                    u10255 1432  
                                                    u11311 04AB  
                                                    u11231 047F  
                                                    u11151 0453  
                                                    u11071 0427  
                                                    u10520 135F  
                                                    u11400 0D67  
                                                    u11320 04B1  
                                                    u11240 0485  
                                                    u11160 0459  
                                                    u11080 042D  
                                                    u10600 0166  
                                                    u12200 04DC  
                                                    u10521 135E  
                                                    u11401 0D66  
                                                    u11321 04B0  
                                                    u11241 0484  
                                                    u11161 0458  
                                                    u11081 042C  
                                                    u10601 0165  
                                                    u12201 04DB  
                                                    u10290 1680  
                                                    u10450 0FF4  
                                                    u10530 1FEE  
                                                    u11410 0D6E  
                                                    u11330 04B6  
                                                    u11250 048A  
                                                    u11170 045E  
                                                    u11090 0432  
                                                    u10370 0DB8  
                                                    u10610 01A1  
                                                    u12210 04E4  
                                                    u10291 167F  
                                                    u10451 0FF3  
                                                    u10531 1FED  
                                                    u11411 0D6D  
                                                    u11331 04B5  
                                                    u11251 0489  
                                                    u11171 045D  
                                                    u11091 0431  
                                                    u10371 0DB7  
                                                    u10611 01A0  
                                                    u12211 04E3  
                                                    u11500 05DF  
                                                    u10540 1FE3  
                                                    u11420 0D73  
                                                    u11340 04BB  
                                                    u11260 048F  
                                                    u11180 0463  
                                                    u10364 1494  
                                                    u10380 0DBD  
                                                    u10620 01DB  
                                                    u10700 08DA  
                                                    u12220 0504  
                                                    u10285 1669  
                                                    u10445 0FAD  
                                                    u11501 05DE  
                                                    u10541 1FE2  
                                                    u11421 0D72  
                                                    u11341 04BA  
                                                    u11261 048E  
                                                    u11181 0462  
                                                    u10365 1492  
                                                    u10381 0DBC  
                                                    u10621 01DA  
                                                    u10701 08D9  
                                                    u12221 0503  
                                                    u10470 0815  
                                                    u11510 05F6  
                                                    u11430 178E  
                                                    u10550 1012  
                                                    u11350 0D4A  
                                                    u11270 0496  
                                                    u11190 046A  
                                                    u10390 0DC2  
                                                    u10630 0216  
                                                    u10710 0718  
                                                    u12230 0522  
                                                    u10471 0814  
                                                    u11511 05F5  
                                                    u11431 178D  
                                                    u10551 1011  
                                                    u11351 0D49  
                                                    u11271 0495  
                                                    u11191 0469  
                                                    u10391 0DC1  
                                                    u10631 0215  
                                                    u10711 0717  
                                                    u12231 0521  
                                                    u10480 0819  
                                                    u11520 0601  
                                                    u11360 0D4F  
                                                    u11280 049B  
                                                    u10800 0CFB  
                                                    u10560 11BE  
                                                    u10640 0251  
                                                    u10720 0739  
                                                    u12240 052D  
                                                    u10481 0818  
                                                    u10465 080A  
                                                    u11521 0600  
                                                    u11361 0D4E  
                                                    u11281 049A  
                                                    u10801 0CFA  
                                                    u10561 11BD  
                                                    u10641 0250  
                                                    u10721 0738  
                                                    u12241 052C  
                                                    u10490 0822  
                                                    u11530 0632  
                                                    u11370 0D56  
                                                    u11290 04A0  
                                                    u10810 0D02  
                                                    u10650 028D  
                                                    u10570 00BA  
                                                    u10730 075C  
                                                    u12250 0533  
                                                    u10491 0820  
                                                    u11531 0631  
                                                    u11435 178A  
                                                    u11371 0D55  
                                                    u11291 049F  
                                                    u10811 0D01  
                                                    u10651 028C  
                                                    u10571 00B9  
                                                    u10731 075B  
                                                    u12251 0532  
                                                    u11540 0639  
                                                    u11460 06FA  
                                                    u11380 0D5B  
                                                    u10900 03C9  
                                                    u10820 0D07  
                                                    u10660 02C7  
                                                    u10580 00F2  
                                                    u10740 077F  
                                                    u11620 0EA6  
                                                    u12260 0552  
                                                    u11541 0638  
                                                    u11461 06F9  
                                                    u11445 0697  
                                                    u11381 0D5A  
                                                    u10901 03C8  
                                                    u10821 0D06  
                                                    u10661 02C6  
                                                    u10581 00F1  
                                                    u10741 077E  
                                                    u11621 0EA5  
                                                    u12261 0551  
                                                    u11470 05A1  
                                                    u11550 1281  
                                                    u11390 0D62  
                                                    u10910 03D0  
                                                    u10830 0D0E  
                                                    u10670 0302  
                                                    u10590 012C  
                                                    u10750 09BA  
                                                    u11630 0EC3  
                                                    u12270 056B  
                                                    u11471 05A0  
                                                    u11455 06C4  
                                                    u11551 1280  
                                                    u11391 0D61  
                                                    u10911 03CF  
                                                    u10831 0D0D  
                                                    u10671 0301  
                                                    u10591 012B  
                                                    u10751 09B9  
                                                    u11631 0EC2  
                                                    u12271 056A  
                                                    u11480 05BC  
                                                    u11560 1287  
                                                    u10920 03D5  
                                                    u10840 0D13  
                                                    u10680 033D  
                                                    u10760 09D1  
                                                    u11640 0ECC  
                                                    u12280 058D  
                                                    u11481 05BB  
                                                    u11561 1286  
                                                    u10921 03D4  
                                                    u10841 0D12  
                                                    u10681 033C  
                                                    u10761 09D0  
                                                    u11641 0ECB  
                                                    u12281 058C  
                                                    u11570 101F  
                                                    u10930 03DA  
                                                    u10850 0D1A  
                                                    u10690 08C4  
                                                    u10770 0901  
                                                    u11650 0ED5  
                                                    u11571 101E  
                                                    u10931 03D9  
                                                    u10851 0D19  
                                                    u10691 08C3  
                                                    u10771 0900  
                                                    u11651 0ED4  
                                                    u11580 07FE  
                                                    u10940 03DF  
                                                    u10860 0D1F  
                                                    u10780 0917  
                                                    u11660 0EDE  
                                                    u11581 07FD  
                                                    u10941 03DE  
                                                    u10861 0D1E  
                                                    u10781 0916  
                                                    u11661 0EDD  
                                                    u10950 03E6  
                                                    u10870 03BA  
                                                    u10790 0CF6  
                                                    u11670 0EE7  
                                                    u14047 11C6  
                                                    u11495 05CF  
                                                    u10951 03E5  
                                                    u10871 03B9  
                                                    u10791 0CF5  
                                                    u11671 0EE6  
                                                    u10960 03EB  
                                                    u10880 03BF  
                                                    u10961 03EA  
                                                    u10881 03BE  
                                                    u10970 03F0  
                                                    u10890 03C4  
                                                    u10971 03EF  
                                                    u10891 03C3  
                                                    u10980 03F5  
                                                    u10981 03F4  
                                                    u10990 03FC  
                                                    u10991 03FB  
                            __end_of_rn487x_driver_version 2028  
                               __end_of_i2c1_fsmStateTable 1848  
                                                    _OSCEN 0891  
                                                    _TMR0H 059D  
                                                    _TMR0L 059C  
                                                    _TRISA 0012  
                                                    _TRISB 0013  
                                                    _TRISC 0014  
                                                    _TRISE 0016  
                                   ??_I2C1_MasterGetRxData 0071  
                              LIGHTBLUE_PushButton@payload 0021  
                                          __end_of_bitRead 1446  
                                    ?_I2C1_DO_RX_NACK_STOP 0070  
                                        ??_I2C1_MasterRead 007B  
                               ??_I2C1_CallbackReturnReset 0079  
                                        ??_I2C1_MasterOpen 0071  
                                     _EUSART1_Transmit_ISR 1402  
                                        ??_I2C1_MasterStop 0071  
                                        ??_I2C1_Initialize 0071  
                                                    _pHead 004E  
                                                    _begin 0E7C  
                                  __end_of_PIN_MANAGER_IOC 1F72  
                                           ??_RN487X_Delay 0076  
                           BMA253_GetAccelDataY@yAccelData 002D  
                                           ??_RN487X_Reset 0072  
                                    _i2c_read1ByteRegister 0B42  
                                           ?_EUSART1_Write 0071  
                                           ??_RN487X_Write 0077  
                                           ?_EUSART2_Write 0071  
                                   __end_of_RN487X_ReadMsg 15EE  
                                                    pclath 000A  
                                i2c_write1ByteRegister@reg 0024  
                                   __end_of_RN487X_SendCmd 1700  
                                           ??_EUSART1_Read 0071  
                                LIGHTBLUE_PerformAction@id 0029  
                                           ??_EUSART2_Read 0071  
                                                    status 0003  
                                   __end_of_setXYAxisRange 09E7  
                                                    wtemp0 007E  
                                             ??_I2C1_DO_RX 0079  
                                             ??_I2C1_DO_TX 0079  
                                          __end_of_strncmp 0C7D  
                                   ??_RN487X_SetSystemMode 0072  
               __end_of_EUSART1_DefaultFramingErrorHandler 1E59  
                     ??_EUSART1_DefaultFramingErrorHandler 0070  
                      ?_EUSART1_DefaultFramingErrorHandler 0070  
                       _EUSART1_DefaultFramingErrorHandler 1E58  
                                   ??_I2C1_DO_ADDRESS_NACK 0079  
                             __end_of_RN487X_EnterDataMode 132D  
                                             ??_I2C1_Close 0071  
                    __end_of_EUSART2_SetTxInterruptHandler 1F38  
                            _EUSART2_SetTxInterruptHandler 1F32  
                                            _fsmStateTable 1848  
                                          __initialization 0057  
                                   _rn487x_PrintMessageEnd 0B8D  
                                               _i2c_status 0120  
                               __end_of_EUSART1_Initialize 096A  
                                             __end_of_main 0590  
                                             __end_of_uart 1828  
                              ?_LIGHTBLUE_GetErrorLedValue 0070  
                                             __end_of_swap 1198  
                                 _LIGHTBLUE_UpdateErrorLed 132D  
                                   __end_of_i2c_readNBytes 13BF  
                               __end_of_RN487X_is_rx_ready 1FB4  
                              ?_INTERRUPT_InterruptManager 0070  
                               ?_LIGHTBLUE_GetDataLedValue 0070  
                           BMA253_GetAccelDataZ@zAccelData 002D  
                                            _do_I2C_DO_ACK 0000  
                                   ??_I2C1_MasterOperation 007B  
                                                   ??_main 0049  
                                                   ??_swap 0073  
                                ?_rn487x_PrintMessageStart 0070  
                            ?_TMAG5273_GetTemperatureValue 0035  
                      __end_of_EUSART2_DefaultErrorHandler 1E88  
                              _EUSART2_DefaultErrorHandler 1E84  
                                  _LIGHTBLUE_PerformAction 0804  
                         RN487X_MessageHandler@messageType 0043  
                         __end_of_LIGHTBLUE_SendSerialData 0706  
                                    ?_EUSART1_Transmit_ISR 0070  
                                       __end_of_I2C1_DO_RX 0A2A  
                                       __end_of_I2C1_DO_TX 0CD0  
                                         _RN487X_DataReady 1349  
                                       __end_of_I2C1_Close 124B  
                                            ?_readRegister 0070  
                                                   ?_begin 0070  
                               __end_of_EUSART2_Initialize 09A8  
                             ??_IOCAF6_SetInterruptHandler 0073  
                                 _eusart2TxBufferRemaining 0061  
                                                   _ANSELA 1F38  
                                                   _ANSELB 1F43  
                                                   _ANSELC 1F4E  
                             ??_LIGHTBLUE_SetErrorLedValue 007B  
                                                   _T0CON0 059E  
                                                   _T0CON1 059F  
                                    _i2c_read2ByteRegister 0A2A  
                                                   _RC1REG 0119  
                                                   _RC2REG 0A19  
                                                   _RB1PPS 1F19  
                                                   _RB2PPS 1F1A  
                                                   _RC1STA 011D  
                                                   _RB4PPS 1F1C  
                                                   _RC2STA 0A1D  
                                                   i1l1102 1E8B  
                                                   i1l1105 1E87  
                                                   _RC4PPS 1F24  
                                                   i1l1300 0035  
                                                   i1l1301 0053  
                                                   i1l1302 0044  
                                                   i1l1232 1421  
                                                   i1l1242 08B1  
                                                   i1l1082 13FF  
                                                   i1l1235 1423  
                                                   i1l1307 0053  
                                                   i1l1252 1E83  
                                                   i1l1092 0874  
                                                   i1l1085 1401  
                                                   i1l1246 12F7  
                                                   i1l1255 1E7F  
                                                   i1l1096 1232  
                                                   i1l1249 1E58  
                                                   _ODCONA 1F3A  
                                                   _ODCONB 1F45  
                                                   i1l1099 1E59  
                                                   i1l1451 1082  
                                                   _ODCONC 1F50  
                                                   _ODCONE 1F66  
                                                   i1l1447 1F71  
                                                   i1l1295 0013  
                                                   i1l1457 07FF  
                                                   i1l1298 0026  
                                                   _RN487X 1868  
                                          ?_RN487X_ReadMsg 0073  
                                                   i1l9340 1074  
                                                   i1l9246 1E80  
                                                   i1l9342 107B  
                                                   i1l9248 1E7C  
                                                   i1l9344 1080  
                                                   _INLVLA 1F3C  
                                                   _INLVLB 1F47  
                                                   _INLVLC 1F52  
                                                   i1l8990 12F3  
                                                   i1l8982 12DE  
                                                   i1l8984 12E7  
                                                   i1l8986 12EC  
                                                   i1l8988 12F2  
                                                   u700_20 0891  
                                                   u700_21 0890  
                                                   u701_20 08A7  
                                                   u701_21 08A6  
                                                   u702_20 1F6E  
                                                   u702_21 1F6D  
                                                   u561_20 12F2  
                                                   u561_21 12F1  
                       __end_of_RN487X_ReadDefaultResponse 0F74  
                               _RN487X_ReadDefaultResponse 0EEC  
                                                   _OSCFRQ 0893  
                                                   u582_20 107B  
                                                   u582_21 107A  
                                          ?_RN487X_SendCmd 0077  
                                                   u692_20 13E7  
                                                   u692_21 13E6  
                                                   u693_20 13F9  
                                                   u693_21 13F8  
                                                   u697_20 1409  
                                                   u697_21 1408  
                                                   u698_20 141B  
                                                   u698_21 141A  
                                                   _TX1REG 011A  
                                                   u699_20 0880  
                                                   u699_21 087F  
                                                   _TX2REG 0A1A  
                                                   _TX1STA 011E  
                                                   _TX2STA 0A1E  
                                        ?_I2C1_MasterClose 0070  
                                 rdBlkRegCompleteHandler@p 0078  
                                          ?_setXYAxisRange 0070  
                                  ??_I2C1_MasterDisableIrq 0071  
                                        ?_I2C1_MasterStart 0070  
                                        ?_I2C1_MasterWrite 0070  
                                 ?_I2C1_MasterWaitForEvent 0070  
                                       ??_I2C1_MasterClose 0071  
                                         _I2C1_DO_TX_EMPTY 15EE  
                                         __end_of_bitWrite 14B1  
                                setXYAxisRange@xyAxisRange 0038  
                                         __end_of_getError 0DCB  
                    __end_ofRN487X_EnterDataMode@cmdPrompt 2021  
                            RN487X_EnterDataMode@cmdPrompt 201C  
                                       ??_I2C1_MasterStart 0071  
                              BMA253_GetAccelDataY@lsbData 002E  
                        BMA253_GetAccelDataXYZ@sensorValue 0034  
                                       ??_I2C1_MasterWrite 007B  
                              BMA253_GetAccelDataY@msbData 002F  
                   LIGHTBLUE_TemperatureSensor@temperature 003C  
                              BMA253_GetAccelDataZ@lsbData 002E  
                                 __end_of_setOperatingMode 07A1  
                              BMA253_GetAccelDataZ@msbData 002F  
                                                   _cmdBuf 01A0  
                                                   _bitMap 0054  
                             __end_of_BMA253_GetAccelDataY 1676  
                             __end_of_BMA253_GetAccelDataZ 16A4  
                                RN487X_FilterData@readChar 0048  
                                 ?_EUSART1_SetErrorHandler 0071  
                                          ?_i2c_readNBytes 0024  
                                         ?_TMR0_Initialize 0070  
                                                ??_bitRead 0074  
                              _EUSART2_FramingErrorHandler 016B  
                         ??_EUSART1_SetOverrunErrorHandler 0073  
                          ?_EUSART1_SetOverrunErrorHandler 0071  
                        __end_of_LIGHTBLUE_GetDataLedValue 1EF6  
                                                   _strchr 1382  
                                 ??_I2C1_DO_SEND_ADR_WRITE 0072  
                                                   _strcpy 12F8  
                                                   _strlen 1293  
                                                   _strstr 0DCB  
                                        ?_I2C1_SetCallback 0071  
                                   ??_I2C1_DO_RX_NACK_STOP 0071  
                              LIGHTBLUE_SendPacket@payload 0077  
                                    _I2C1_DO_SEND_ADR_READ 1F72  
                                           _PMD_Initialize 1FBE  
                                  _BMA253_NewAccelDataRdyY 112A  
                                  _BMA253_NewAccelDataRdyZ 113B  
                            ?_I2C1_SetDataCompleteCallback 0075  
                               i2c_write1ByteRegister@data 0025  
                                       ??_I2C1_SetCallback 0074  
                                           ??_readRegister 007C  
                                     _EUSART2_Transmit_ISR 13E0  
                               LIGHTBLUE_PerformAction@led 002A  
                           __end_ofRN487X_RebootCmd@reboot 200B  
                                   ?_i2c_read1ByteRegister 0024  
                                          ??_EUSART1_Write 0072  
                                          ??_EUSART2_Write 0072  
               IOCAF6_SetInterruptHandler@InterruptHandler 0071  
                                         ?_PIN_MANAGER_IOC 0070  
                                          _eusart1RxBuffer 0144  
                                                ??_strncmp 0077  
                                            _manufactureId 004A  
                                  _I2C1_DO_RX_NACK_RESTART 1EC0  
                                             ??_IOCAF6_ISR 0070  
                                    _RN487X_MessageHandler 0A6D  
                                        RN487X_SendCmd@cmd 007A  
                                          _eusart2RxBuffer 00D5  
                                          _eusart1TxBuffer 00C5  
                                 ?_TMAG5273_GetManufacture 002D  
                                        _SYSTEM_Initialize 11D8  
                           I2C1_SetDataCompleteCallback@cb 0075  
                                          _eusart2TxBuffer 00DD  
                                  __end_of__initialization 00A4  
                                  _protocol_version_number 2028  
                                         _do_I2C_SEND_STOP 0000  
                                   getOperatingMode@opMode 0030  
                          I2C1_MasterOperation@returnValue 0023  
                                       ?_SYSTEM_Initialize 0070  
                                            ??_I2C1_Poller 007B  
                                  ??_EUSART2_RxDataHandler 0070  
                     __end_ofRN487X_EnterCmdMode@cmdPrompt 2026  
                             RN487X_EnterCmdMode@cmdPrompt 2021  
                            __end_of_EUSART1_RxDataHandler 12F8  
                                  _rdBlkRegCompleteHandler 124B  
                                           __pcstackCOMMON 0070  
                                             __pidataBANK0 0002  
                                             __pidataBANK2 114C  
                                      ??_SYSTEM_Initialize 0073  
                         __end_of_I2C1_MasterEnableRestart 1E6D  
                                            __end_of_begin 0EEC  
                                     __end_of_RN487X_Delay 1F61  
                                            _readRegisters 1092  
                                            swap@lowerByte 0079  
                           ?_EUSART2_SetTxInterruptHandler 0071  
                                 ??_BMA253_GetAccelDataXYZ 0030  
                                     __end_of_RN487X_Reset 1FF4  
                                   setOperatingMode@opMode 0038  
                                     __end_of_RN487X_Write 2000  
                                ??_LIGHTBLUE_PerformAction 0028  
                                   __end_of_PMD_Initialize 1FC8  
                             ??_I2C1_DO_SEND_RESTART_WRITE 0071  
                           ?_LIGHTBLUE_SendProtocolVersion 0070  
                                  ??_I2C1_MasterSendTxData 0071  
                                       __end_of_IOCAF6_ISR 1083  
                                     __end_of_EUSART1_Read 1572  
                                     __end_of_EUSART2_Read 14FD  
                                      _LIGHTBLUE_SplitByte 1730  
                                        RN487X_Reset@value 0071  
                                   ??_EUSART1_Transmit_ISR 0070  
                                      _LIGHTBLUE_SplitWord 1066  
                                ?_LIGHTBLUE_GetButtonValue 0070  
                                 ?_EUSART2_SetErrorHandler 0071  
                                     _RN487X_EnterDataMode 1312  
                                    ?_EUSART2_Transmit_ISR 0070  
                              __end_of_EUSART1_Receive_ISR 08B2  
                                    __end_of_I2C1_DO_RESET 1ECA  
                                       readRegister@regVal 002D  
                                 __end_of_setTemperatureEn 08EF  
                                                  ??_begin 007C  
                                   ?_i2c_read2ByteRegister 0024  
                           ??_TMAG5273_GetTemperatureValue 007B  
                                   _do_I2C_DO_NACK_RESTART 0000  
                                __end_of_SYSTEM_Initialize 11EE  
                                 _LIGHTBLUE_SendSerialData 065C  
                                  writeRegister@regAddress 0027  
                                            _eusart1RxHead 005A  
                                            swap@upperByte 0078  
                                            _eusart1TxHead 005D  
                                            _eusart2RxHead 007C  
                                            _eusart1RxTail 0059  
                                            _eusart2TxHead 0063  
                                               __pbssBANK0 004A  
                                               __pbssBANK1 00A0  
                                               __pbssBANK2 0120  
                                               __pbssBANK3 01A0  
                                               __pbssBANK4 0220  
                                               __pbssBANK5 02A0  
                                               __pbssBANK6 0320  
                                            _eusart2RxTail 0060  
                                            _eusart1TxTail 005C  
                          __end_of_I2C1_MasterWaitForEvent 1EEA  
                        _EUSART1_TxDefaultInterruptHandler 0165  
                                            _eusart2TxTail 0062  
                          ??_EUSART1_SetRxInterruptHandler 0073  
                               __end_of_LIGHTBLUE_LedState 14D7  
                            __end_of_rd2RegCompleteHandler 10E6  
                                       _DELAY_milliseconds 11C2  
                             __end_of_LIGHTBLUE_Initialize 1EF0  
                                     I2C1_Open@returnValue 0072  
                         ??_EUSART2_SetFramingErrorHandler 0073  
                          ?_EUSART2_SetFramingErrorHandler 0071  
                                     ?_LIGHTBLUE_SplitByte 0076  
                                       _getMagneticChannel 0377  
                                       _setMagneticChannel 00A8  
                                     ?_LIGHTBLUE_SplitWord 0079  
                            __end_of_wr2RegCompleteHandler 10F7  
                        TMAG5273_CalcTemperature@lowerByte 0032  
                                    _rd1RegCompleteHandler 10C4  
                                    EUSART2_Read@readValue 0072  
                                        _I2C1_DO_SEND_STOP 1EB1  
                                    _wr1RegCompleteHandler 10B3  
                          __end_of_EUSART1_SetErrorHandler 1F02  
                                      ?_DELAY_milliseconds 0071  
                                               __pmaintext 04BD  
                                               _getAngleEn 0D23  
                                  ?_i2c_write1ByteRegister 0024  
                           LIGHTBLUE_SendSerialData@length 0078  
                                    i2c_readNBytes@address 007B  
                                      ?_getMagneticChannel 0070  
                                      ?_setMagneticChannel 0070  
                                       ?_I2C1_DO_SEND_STOP 0070  
                                       getAngleEn@angleReg 0030  
                         rn487x_PrintMessage@passedMessage 0077  
                          rn487x_PrintMessage@messageIndex 0040  
                                           ?_readRegisters 0027  
                                          _I2C1_MasterRead 1ECF  
                                          _I2C1_MasterOpen 1030  
                                               __pintentry 0004  
                                          _I2C1_MasterStop 1E6D  
                                          _I2C1_Initialize 1F8D  
                             __end_of_LIGHTBLUE_SendPacket 1000  
                                      __end_of_I2C1_Poller 1030  
                            __end_of_LIGHTBLUE_AccelSensor 16D2  
                                ??_BMA253_NewAccelDataRdyY 007B  
                                ??_BMA253_NewAccelDataRdyZ 007B  
                                          ?_PMD_Initialize 0070  
                                   ?_I2C1_DO_SEND_ADR_READ 0070  
                                                  ?_strchr 0071  
                                      ??_I2C1_DO_SEND_STOP 0071  
                                                  ?_strcpy 0071  
                                                  ?_strlen 0071  
                   __end_of_EUSART1_SetFramingErrorHandler 1F08  
                           _EUSART1_SetFramingErrorHandler 1F02  
                                                  ?_strstr 0078  
                                                  u1210_20 0017  
                                                  u1210_21 0016  
                                                  u1035_20 122C  
                                                  u1211_20 001B  
                                                  u1035_21 122B  
                                                  u1211_21 001A  
                                                  u1212_20 001F  
                                                  u1212_21 001E  
                                                  u1213_20 002A  
                                                  u1213_21 0029  
                                                  u1214_20 002E  
                                                  u1214_21 002D  
                                    _eusart2RxStatusBuffer 00CD  
                                                  u1215_20 0039  
                                                  u1215_21 0038  
                                                  u1160_20 0856  
                                                  u1216_20 003D  
                                                  u1208_20 000B  
                                                  u1160_21 0855  
                                                  u1216_21 003C  
                                                  u1208_21 000A  
                                                  u1161_20 086A  
                                                  u1217_20 0048  
                                                  u1209_20 000F  
                                                  u1161_21 0869  
                                                  u1217_21 0047  
                                                  u1209_21 000E  
                                                  u1218_20 004C  
                                                  u1218_21 004B  
                                                  u1159_20 0846  
                                                  u1159_21 0845  
                                                  i1l10200 13E0  
                                                  i1l10210 13FA  
                                                  i1l10202 13E7  
                                                  i1l10204 13EE  
                                                  i1l10206 13F3  
                                                  i1l10208 13F9  
                                                  i1l10240 141B  
                                                  i1l10232 1402  
                                                  i1l10250 0886  
                                                  i1l10242 141C  
                                                  i1l10234 1409  
                                                  i1l10260 08A7  
                                                  i1l10252 088C  
                                                  i1l10244 0875  
                                                  i1l10236 1410  
                                                  i1l10262 08AE  
                                                  i1l10254 0891  
                                                  i1l10246 087B  
                                                  i1l10238 1415  
                                                  i1l10256 0897  
                                                  i1l10248 0880  
                                                  i1l10264 1F69  
                                                  i1l10258 089D  
                                                  i1l10266 1F6E  
                                                  i1l13510 1222  
                                                  i1l13512 1226  
                                                  i1l13514 122C  
                                                  i1l13516 122D  
                                                  i1l13508 121B  
                                                  i1l13710 1E88  
                                                  i1l14510 0841  
                                                  i1l13712 1E84  
                                                  i1l14520 085B  
                                                  i1l14512 0846  
                                                  i1l14522 0861  
                                                  i1l14514 084B  
                                                  i1l14524 086A  
                                                  i1l14516 0851  
                                                  i1l14508 083C  
                                                  i1l14526 0871  
                                                  i1l14518 0856  
                                                  i1l14970 0017  
                                                  i1l14980 0039  
                                                  i1l14972 001B  
                                                  i1l14964 0006  
                                                  i1l14982 003D  
                                                  i1l14974 001F  
                                                  i1l14966 000B  
                                                  i1l14984 0048  
                                                  i1l14976 002A  
                                                  i1l14968 000F  
                                                  i1l14986 004C  
                                                  i1l14978 002E  
                             getMagneticChannel@magChannel 0030  
                                    ?_RN487X_EnterDataMode 0070  
                                ?_TMAG5273_CalcTemperature 002D  
                                            _writeRegister 1000  
                             ?_EUSART1_DefaultErrorHandler 0070  
                                        _I2C1_MasterIsNack 1EDE  
                                                  _SP1BRGH 011C  
                                                  _SP1BRGL 011B  
                                                  _SP2BRGH 0A1C  
                                                  _SP2BRGL 0A1B  
                                     ??_DELAY_milliseconds 0073  
                                                  _OSCCON1 088D  
                                                  _OSCCON3 088F  
                                                _I2C1_Open 17CA  
  __end_of_rd2RegCompleteHandler@i2c1_master_example$F1250 1119  
          _rd2RegCompleteHandler@i2c1_master_example$F1250 1108  
  __end_of_wr2RegCompleteHandler@i2c1_master_example$F1262 10B3  
          _wr2RegCompleteHandler@i2c1_master_example$F1262 10A2  
  __end_of_rd1RegCompleteHandler@i2c1_master_example$F1239 1108  
          _rd1RegCompleteHandler@i2c1_master_example$F1239 10F7  
  __end_of_wr1RegCompleteHandler@i2c1_master_example$F1256 112A  
          _wr1RegCompleteHandler@i2c1_master_example$F1256 1119  
__end_of_rdBlkRegCompleteHandler@i2c1_master_example$F1273 127B  
        _rdBlkRegCompleteHandler@i2c1_master_example$F1273 1263  
                              __end_of_EUSART2_Receive_ISR 0875  
                       __end_of_IOCAF6_SetInterruptHandler 1F3E  
                               _IOCAF6_SetInterruptHandler 1F38  
                                ??_I2C1_DO_RX_NACK_RESTART 0071  
                          __end_of_TMAG5273_GetManufacture 12DE  
                                                ?_bitWrite 0071  
                                                  _OSCSTAT 0890  
                                                  _OSCTUNE 0892  
                                        _I2C1_MasterSetIrq 1E76  
                                     ??_getMagneticChannel 002E  
                                                ?_getError 0070  
                                                  _SSP1ADD 018D  
                                     ??_setMagneticChannel 0036  
                                                  _SLRCONA 1F3B  
                                                  _SLRCONB 1F46  
                                                  _SLRCONC 1F51  
                                                  _SSP1BUF 018C  
                                                  _SSP1MSK 018E  
                       __end_of_LIGHTBLUE_SetErrorLedValue 1092  
                               _LIGHTBLUE_SetErrorLedValue 1083  
                                       ?_I2C1_MasterIsNack 0070  
                               ?_I2C1_DO_SEND_RESTART_READ 0070  
                                   ?_RN487X_MessageHandler 0041  
                            i2c_write1ByteRegister@address 007B  
                           ??_I2C1_SetDataCompleteCallback 0078  
                                       ?_I2C1_MasterSetIrq 0070  
                                     _BMA253_GetAccelDataY 1648  
                                     _BMA253_GetAccelDataZ 1676  
                                       RN487X_ReadMsg@resp 0078  
                                  _TMR0_HasOverflowOccured 1ED9  
                                          _asyncBufferSize 0067  
                                    ??_LIGHTBLUE_SplitByte 0077  
                                       _i2c1_fsmStateTable 1828  
                                       _i2c1_driver_i2cISR 00E5  
                                    ??_LIGHTBLUE_SplitWord 007B  
                                      ??_I2C1_MasterIsNack 0071  
                                                  _i2c_ISR 0000  
                                __end_of_I2C1_DO_SEND_STOP 1EB6  
                                ??_rdBlkRegCompleteHandler 0079  
                               ??_LIGHTBLUE_UpdateErrorLed 007B  
                                       I2C1_SetCallback@cb 0071  
                                  ?_rn487x_PrintMessageEnd 0070  
                                      _rn487x_PrintMessage 1795  
                                      ??_I2C1_MasterSetIrq 0071  
                         RN487X_SetAsyncMessageHandler@len 0073  
                           __end_of_i2c_write1ByteRegister 1730  
                                        _RN487X_FilterData 0E20  
                                 __end_of_RN487X_DataReady 1365  
                             __end_of_LIGHTBLUE_PushButton 1170  
                                     __end_of_readRegister 1066  
                                       ?_RN487X_FilterData 0070  
                                      _EUSART1_is_rx_ready 1F84  
                                                  _bitRead 1424  
                               __end_of_EUSART1_is_tx_done 0804  
                          __end_of_EUSART2_SetErrorHandler 1F20  
                                            ?_I2C1_DO_IDLE 0070  
                                            ?_I2C1_DO_RCEN 0070  
                LIGHTBLUE_ParseIncomingPacket@receivedByte 0033  
                                       i2c_readNBytes@data 0024  
                                      _EUSART1_is_tx_ready 0000  
                                        _RN487X_IndicateRx 1FDE  
                              ??_LIGHTBLUE_GetDataLedValue 0071  
                                                  __ptext1 0E7C  
                                                  __ptext2 08EF  
                                                  __ptext3 09A8  
                                                  __ptext4 08B2  
                                                  __ptext5 0706  
                                                  __ptext6 00A8  
                                                  __ptext7 1000  
                                                  __ptext8 1700  
                                                  __ptext9 0D77  
                                               bitRead@reg 0071  
                                 _I2C1_MasterEnableRestart 1E6A  
                                __end_of_I2C1_MasterIsNack 1EE4  
                             ?_I2C1_SetAddressNackCallback 0075  
                                      ??_RN487X_FilterData 0044  
                                           ?_writeRegister 0026  
                                     ?_rn487x_PrintMessage 0077  
               __end_of_EUSART2_DefaultOverrunErrorHandler 1E8C  
                     ??_EUSART2_DefaultOverrunErrorHandler 0070  
                      ?_EUSART2_DefaultOverrunErrorHandler 0070  
                       _EUSART2_DefaultOverrunErrorHandler 1E88  
                                    _OSCILLATOR_Initialize 1FB4  
                                   ??_EUSART2_Transmit_ISR 0070  
                                       ?_RN487X_IndicateRx 0071  
                                __end_of_I2C1_MasterSetIrq 1E79  
                                 __end_of_I2C1_DO_TX_EMPTY 161B  
                                       _EUSART1_Initialize 092C  
                                 ??_PIN_MANAGER_Initialize 0073  
                                                _IOCAFbits 1F3F  
                                    _rn487x_driver_version 2026  
                                               ?_I2C1_Open 0070  
                                         ??_RN487X_ReadMsg 0076  
                                                _IOCANbits 1F3E  
                                               ??_bitWrite 0075  
                                                _IOCAPbits 1F3D  
                                          bitRead@position 0073  
                                               ??_getError 002F  
                                         ??_RN487X_SendCmd 0078  
                            ??_EUSART1_DefaultErrorHandler 0071  
                                 ?_I2C1_CallbackReturnStop 0078  
                                       _RN487X_is_rx_ready 1FAA  
                                         ??_setXYAxisRange 0036  
                  TMAG5273_GetTemperatureValue@temperature 0035  
                                 _do_I2C_SEND_RESTART_READ 0000  
                                  i2c_read1ByteRegister@d2 0029  
                                                  clrloop0 1F3F  
                                      ??_RN487X_IndicateRx 0072  
                                    ?_BMA253_GetAccelDataY 0070  
                                    ?_BMA253_GetAccelDataZ 0070  
                                                  _strncmp 0C2B  
                        rn487x_PrintMessage@printCharacter 0020  
                        __end_of_I2C1_DO_SEND_RESTART_READ 1EA7  
                                     end_of_initialization 00A4  
                               __end_of_I2C1_MasterSendAck 1E94  
               __end_of_RN487X_Read@rn487x_interface$F1381 1FA0  
                       _RN487X_Read@rn487x_interface$F1381 1F96  
                      ?_RN487X_Read@rn487x_interface$F1382 0070  
                     ??_RN487X_Read@rn487x_interface$F1384 0073  
                                     ?_EUSART1_is_rx_ready 0070  
                      __end_of_LIGHTBLUE_TemperatureSensor 12C5  
                              _LIGHTBLUE_TemperatureSensor 12AC  
                                      _I2C1_MasterClearIrq 1E5E  
                                      ?_EUSART1_Initialize 0070  
                               __end_of_EUSART2_is_tx_done 1E98  
                           __end_of_rn487x_PrintMessageEnd 0BDB  
                              ?_RN487X_ReadDefaultResponse 0070  
                                                  init_ram 1F44  
                               __end_of_I2C1_MasterStartRx 1E73  
                              _EUSART1_OverrunErrorHandler 015F  
                                   ?_rd1RegCompleteHandler 0078  
                                                  initloop 1F45  
                                   _I2C1_DO_SEND_ADR_WRITE 1F51  
                                      ?_RN487X_is_rx_ready 0070  
                                        getError@statusReg 0035  
                                __end_of_RN487X_FilterData 0E7C  
                             __end_of_I2C1_DO_SEND_RESTART 1EB1  
                                  __end_of_I2C1_MasterRead 1ED4  
                                  __end_of_I2C1_MasterOpen 103D  
                                   ?_wr1RegCompleteHandler 0078  
                                  __end_of_I2C1_MasterStop 1E70  
                                  __end_of_I2C1_Initialize 1F96  
                    __end_of_EUSART1_SetRxInterruptHandler 1F14  
                            _EUSART1_SetRxInterruptHandler 1F0E  
                                              _I2C1_Poller 1023  
                                ?_I2C1_CallbackReturnReset 0078  
                                       _EUSART2_Initialize 096A  
                            __end_of_I2C1_MasterDisableIrq 1E67  
                                         ??_i2c_readNBytes 007B  
                                              _I2C1_Status 00A0  
                                          ??_readRegisters 0029  
                                              ?_getAngleEn 0070  
                              LIGHTBLUE_PerformAction@data 0027  
                                         _getOperatingMode 0CD0  
                                                  swap@reg 0071  
                                        ?_setOperatingMode 0070  
                          __end_of_protocol_version_number 202A  
                               __end_of_RN487X_IsConnected 1E7C  
                                _do_I2C_SEND_RESTART_WRITE 0000  
                                      _I2C1_MasterSendNack 1E8C  
                      __end_of_I2C1_SetAddressNackCallback 1FDE  
                              _I2C1_SetAddressNackCallback 1FD3  
                                __end_of_RN487X_IndicateRx 1FE9  
                                     ?_I2C1_MasterClearIrq 0070  
                                           ??_I2C1_DO_IDLE 0071  
                                     ??_EUSART1_Initialize 0073  
                                                  strchr@c 0073  
                                                  strchr@s 0071  
                                           ??_I2C1_DO_RCEN 0071  
                               LIGHTBLUE_SplitByte@payload 0078  
                       __end_of_I2C1_DO_SEND_RESTART_WRITE 1EAC  
                               _I2C1_DO_SEND_RESTART_WRITE 1EA7  
                                      ?_EUSART2_Initialize 0070  
                                                  strcpy@d 0075  
                                                  strlen@a 0074  
                                       ??_setOperatingMode 0036  
                                      _EUSART2_is_rx_ready 1F7B  
                                                  strlen@s 0071  
                                           __deviceAddress 006D  
                                               _returnStop 0000  
                                                  strstr@h 0078  
                                                  strstr@n 007A  
                                      _EUSART2_is_tx_ready 0000  
                                                _PORTAbits 000C  
                                     ??_RN487X_is_rx_ready 0071  
                                        _RN487X_SetOutputs 0AB1  
                          __end_of_rdBlkRegCompleteHandler 1263  
                                    ??_rn487x_PrintMessage 0079  
                                   ??_RN487X_EnterDataMode 007B  
                                     _LIGHTBLUE_Initialize 1EEA  
                                  _statusBuffer@main$F3783 0320  
                                  ??_i2c_read1ByteRegister 007B  
                                            ??_getLowPower 002E  
                                       ?_RN487X_SetOutputs 0020  
                                  _IOCAF6_InterruptHandler 00E9  
                            ??_I2C1_SetAddressNackCallback 0079  
                                   RN487X_Delay@delayCount 0074  
                                                _TRISAbits 0012  
                          I2C1_SetDataCompleteCallback@ptr 0077  
                           getDeviceStatus@deviceStatusReg 002E  
                                ??_TMR0_HasOverflowOccured 0071  
                           I2C1_CallbackReturnReset@funPtr 0078  
                                     ?_I2C1_MasterSendNack 0070  
                                      EUSART1_Write@txData 0071  
                                    ??_EUSART1_is_rx_ready 0071  
                                      ??_RN487X_SetOutputs 007B  
                                             _RN487X_Delay 1F59  
                                            ??_isConnected 007B  
                                  getOperatingMode@opMode0 0031  
                                  getOperatingMode@opMode1 0032  
                                     RN487X_ReadMsg@msgLen 0075  
                                     ??_EUSART2_Initialize 0073  
                                     ?_EUSART2_is_rx_ready 0070  
                                   _BMA253_GetAccelDataXYZ 0BDB  
                                     _LIGHTBLUE_SendPacket 0F74  
                                             _RN487X_Reset 1FE9  
                                _LIGHTBLUE_GetDataLedValue 1EF0  
                                             _RN487X_Write 1FF4  
                                        ??_getDeviceStatus 007C  
                                           __end_of_RN487X 187A  
                                             begin@testReg 003B  
                                             _EUSART1_Read 154B  
                                             _EUSART2_Read 14D7  
                         __end_of_LIGHTBLUE_GetButtonValue 1EFC  
                            RN487X_SetOutputs@ioHighNibble 0024  
                                     _timer0ReloadVal16bit 004C  
                            __end_of_EUSART2_RxDataHandler 1233  
                                              _do_I2C_IDLE 0000  
                                              _do_I2C_RCEN 0000  
                                    ??_I2C1_MasterClearIrq 0071  
                                 _rn487x_PrintMessageStart 161B  
                                __end_of_RN487X_SetOutputs 0AF9  
                                            _setZAxisRange 08EF  
                                           _I2C1_DO_RX_ACK 1EB6  
                                          ??_writeRegister 007C  
                                   ?_OSCILLATOR_Initialize 0070  
                                    ?_LIGHTBLUE_Initialize 0070  
                                            ??_RN487X_Init 0076  
                                            ??_RN487X_Read 007C  
                               ??_LIGHTBLUE_SendSerialData 0077  
                          RN487X_FilterData@asyncBuffering 0064  
                          __end_of_I2C1_CallbackReturnStop 1E5C  
                                  readRegisters@dataBuffer 0027  
                            __end_of_I2C1_MasterSendTxData 1E9D  
                                           __end_of_strchr 13A0  
                                  ??_i2c_read2ByteRegister 0026  
                                           __end_of_strcpy 1312  
                                           __end_of_strlen 12AC  
                                           __end_of_strstr 0E20  
                                      start_initialization 0057  
                             LIGHTBLUE_AccelSensor@payload 0036  
                                              ??_I2C1_Open 0071  
                            setMagneticChannel@channelMode 0038  
                                      _i2c_busCollisionISR 0000  
                                         _getTemperatureEN 1198  
                          RN487X_SetOutputs@stateLowNibble 0023  
                   LIGHTBLUE_SendProtocolVersion@dataIndex 0036  
                                   ??_BMA253_GetAccelDataY 002A  
                                   ??_BMA253_GetAccelDataZ 002A  
                                    ??_I2C1_MasterSendNack 0071  
                                     setOperatingMode@mode 0039  
                                        ?_setTemperatureEn 0070  
            EUSART1_SetRxInterruptHandler@interruptHandler 0071  
            EUSART1_SetTxInterruptHandler@interruptHandler 0071  
            EUSART2_SetRxInterruptHandler@interruptHandler 0071  
            EUSART2_SetTxInterruptHandler@interruptHandler 0071  
                                     _LIGHTBLUE_PushButton 115D  
                                 LIGHTBLUE_SplitByte@value 0076  
                                    ??_EUSART2_is_rx_ready 0071  
                                   setMagneticChannel@mode 0039  
                                    __end_of_EUSART1_Write 154B  
                                    __end_of_EUSART2_Write 1524  
                                    ?_LIGHTBLUE_SendPacket 0077  
                                      __end_of_getLowPower 1204  
                                       ??_setTemperatureEn 0036  
                          ??_LIGHTBLUE_SendProtocolVersion 0020  
                                   rd1RegCompleteHandler@p 0078  
                               getMagneticChannel@magMode4 0031  
                               getMagneticChannel@magMode5 0032  
                               getMagneticChannel@magMode6 0033  
                               getMagneticChannel@magMode7 0034  
                                 I2C1_SetBuffer@bufferSize 0071  
                                         ?_I2C1_MasterRead 0070  
                                         ?_I2C1_MasterOpen 0070  
                   __end_of_EUSART2_SetOverrunErrorHandler 1F2C  
                           _EUSART2_SetOverrunErrorHandler 1F26  
                                         ?_I2C1_MasterStop 0070  
                                         ?_I2C1_Initialize 0070  
                                      getError@intPinError 0033  
                                      __end_of_isConnected 11C2  
                  TMAG5273_CalcTemperature@temperatureData 0033  
                                getTemperatureEN@tempENreg 0031  
                         __end_of_TMAG5273_CalcTemperature 1382  
                                         ??_PMD_Initialize 0071  
                             i2c_read1ByteRegister@address 0025  
                                       setXYAxisRange@mode 0039  
                                   __end_of_I2C1_DO_RX_ACK 1EBB  
                                   wr1RegCompleteHandler@p 0078  
                                    _EUSART1_RxDataHandler 12DE  
                                  ??_I2C1_DO_SEND_ADR_READ 0071  
                                           ?_setZAxisRange 0070  
                           ?_EUSART1_SetRxInterruptHandler 0071  
                                       _LIGHTBLUE_LedState 14B1  
                                              __pdataBANK0 006E  
                                              __pdataBANK2 014C  
                                                 ??_strchr 0075  
                                                 ??_strcpy 0073  
                                                 ??_strlen 0073  
                                         I2C1_Open@address 0071  
                                           _eusart1RxCount 0058  
                                                 ??_strstr 0020  
                                           _eusart2RxCount 005F  
                                      ?_LIGHTBLUE_LedState 0070  
                                  ??_RN487X_MessageHandler 007C  
                                              __pbssCOMMON 007C  
                                     _I2C1_DO_SEND_RESTART 1EAC  
                        _EUSART1_RxDefaultInterruptHandler 0163  
                                                ___latbits 0003  
                                            __pcstackBANK0 0020  
                                            __pcstackBANK1 00EF  
                           ?_LIGHTBLUE_ParseIncomingPacket 0070  
                                            bitWrite@value 0074  
                              ?_IOCAF6_SetInterruptHandler 0071  
                                                _do_I2C_RX 0000  
                                                _do_I2C_TX 0000  
                                    ?_LIGHTBLUE_PushButton 0070  
                                             _readRegister 1058  
                                      __end_of_RN487X_Init 07FF  
                                      __end_of_RN487X_Read 1023  
                              ?_LIGHTBLUE_SetErrorLedValue 0070  
                              ??_I2C1_DO_SEND_RESTART_READ 0071  
                                      EUSART2_Write@txData 0071  
                          ??_EUSART1_SetTxInterruptHandler 0073  
                                  readRegisters@regAddress 002B  
                                      _RN487X_EnterCmdMode 1204  
                                     __end_of_I2C1_DO_IDLE 1EA2  
                         ??_EUSART1_SetFramingErrorHandler 0073  
                          ?_EUSART1_SetFramingErrorHandler 0071  
                          ??_EUSART2_SetRxInterruptHandler 0073  
                                     __end_of_I2C1_DO_RCEN 1F51  
                            I2C1_SetAddressNackCallback@cb 0075  
                                                _dataReady 0065  
                                          _do_I2C_TX_EMPTY 0000  
                                     ??_LIGHTBLUE_LedState 007B  
                                                __pnvBANK1 00E9  
                                                __pnvBANK2 015D  
                                    _rd2RegCompleteHandler 10D5  
                                    __end_of_fsmStateTable 1868  
                                                _main$5440 00EF  
                                   _PIN_MANAGER_Initialize 0AF9  
                                    _wr2RegCompleteHandler 10E6  
                         ??_IOCAF6_DefaultInterruptHandler 0070  
                          ?_IOCAF6_DefaultInterruptHandler 0070  
                               ??_I2C1_MasterEnableRestart 0071  
                                 ?_LIGHTBLUE_PerformAction 0027  
                                           _I2C1_MasterFsm 159A  
                                        ?_RN487X_DataReady 0070  
                                          ?_I2C1_DO_RX_ACK 0070  
                                                __ptext100 0BDB  
                                                __ptext101 1058  
                                                __ptext110 1FD3  
                                                __ptext102 1092  
                                                __ptext111 17CA  
                                                __ptext103 13A0  
                                                __ptext120 1EC0  
                                                __ptext112 1030  
                                                __ptext104 1ECF  
                                                __ptext121 1EBB  
                                                __ptext113 1ECA  
                                                __ptext105 1676  
                                                __ptext130 1F51  
                                                __ptext122 1EB6  
                                                __ptext114 13BF  
                                                __ptext106 113B  
                                                __ptext131 1F72  
                                                __ptext123 1EB1  
                                                __ptext115 1023  
                                                __ptext107 1648  
                                                __ptext140 1E70  
                                                __ptext132 1E9D  
                                                __ptext124 1EAC  
                                                __ptext116 1EE4  
                                                __ptext108 112A  
                                                __ptext141 1E5C  
                                                __ptext133 15EE  
                                                __ptext125 1EA7  
                                                __ptext117 159A  
                                                __ptext109 0B42  
                                                __ptext150 10C4  
                                                __ptext142 1E5A  
                                                __ptext134 1E76  
                                                __ptext126 1EA2  
                                                __ptext118 1572  
                                                __ptext151 10B3  
                                                __ptext143 1263  
                                                __ptext135 1EDE  
                                                __ptext127 1F4A  
                                                __ptext119 1EC5  
                                                __ptext160 1E64  
                                                __ptext152 10A2  
                                                __ptext144 1119  
                                                __ptext136 1E98  
                                                __ptext128 09E7  
                                                __ptext161 1E61  
                                                __ptext153 1FC8  
                                                __ptext145 1108  
                                                __ptext137 1E90  
                                                __ptext129 0C7D  
                                                __ptext170 083C  
                                                __ptext162 1E5E  
                                                __ptext154 1469  
                                                __ptext146 10F7  
                                                __ptext138 1E73  
                                                __ptext171 1E88  
                                                __ptext155 104A  
                                                __ptext147 124B  
                                                __ptext139 1E8C  
                                                __ptext172 1E59  
                                                __ptext164 1F69  
                                                __ptext156 1E6D  
                                                __ptext148 10E6  
                                                __ptext173 1E84  
                                                __ptext165 1074  
                                                __ptext157 1E6A  
                                                __ptext149 10D5  
                                                __ptext174 121B  
                                                __ptext166 07FF  
                                                __ptext158 1E67  
                                                __ptext175 1E80  
                                                __ptext167 1402  
                                                __ptext159 1233  
                                                __ptext176 1E58  
                                                __ptext168 13E0  
                                                __ptext177 1E7C  
                                                __ptext169 0875  
                                                __ptext178 12DE  
                                      getAngleEn@angleDir2 0031  
                                      getAngleEn@angleDir3 0032  
                             ??_LIGHTBLUE_GetErrorLedValue 0071  
                              _i2c1_driver_busCollisionISR 00E7  
                                    readRegisters@numBytes 0028  
                                 _LIGHTBLUE_GetButtonValue 1EF6  
                        _EUSART2_TxDefaultInterruptHandler 00ED  
                                       ??_RN487X_DataReady 007C  
                       LIGHTBLUE_SendProtocolVersion@value 0035  
                                     ?_RN487X_EnterCmdMode 0070  
                                   ??_LIGHTBLUE_Initialize 0071  
                                                 ?_bitRead 0071  
                                  _I2C1_MasterWaitForEvent 1EE4  
                                         _I2C1_MasterClose 1E61  
                                  getError@oscillatorError 0034  
                                           _I2C1_SetBuffer 104A  
                             ??_INTERRUPT_InterruptManager 0071  
                                           _sequenceNumber 006C  
                              i2c_read2ByteRegister@result 002B  
                                         _I2C1_MasterStart 1E67  
                                                _connected 0068  
                                         _I2C1_MasterWrite 1ECA  
                                    _LIGHTBLUE_AccelSensor 16A4  
                                                 _BAUD1CON 011F  
                                                 _BAUD2CON 0A1F  
                    ??_wr2RegCompleteHandler@strncmp$F4870 0079  
                     ?_rd1RegCompleteHandler@strncmp$F4862 0078  
                    ??_rd1RegCompleteHandler@strncmp$F4864 0079  
                     ?_wr1RegCompleteHandler@strncmp$F4856 0078  
                     ?_rd2RegCompleteHandler@strncmp$F4865 0078  
                    ??_wr1RegCompleteHandler@strncmp$F4858 0079  
                   ?_rdBlkRegCompleteHandler@strncmp$F4874 0078  
                    ??_rd2RegCompleteHandler@strncmp$F4867 0079  
                  ??_rdBlkRegCompleteHandler@strncmp$F4876 0079  
                     ?_wr2RegCompleteHandler@strncmp$F4868 0078  
               __end_of_EUSART1_DefaultOverrunErrorHandler 1E84  
                     ??_EUSART1_DefaultOverrunErrorHandler 0070  
                      ?_EUSART1_DefaultOverrunErrorHandler 0070  
                       _EUSART1_DefaultOverrunErrorHandler 1E80  
                                    ?_I2C1_DO_SEND_RESTART 0070  
                                     _EUSART1_ErrorHandler 015D  
                             ?_EUSART2_DefaultErrorHandler 0070  
                                              _getLowPower 11EE  
                                        ?_I2C1_DO_TX_EMPTY 0070  
                                  _EUSART1_SetErrorHandler 1EFC  
                              __end_of_LIGHTBLUE_SplitByte 1761  
                                 __end_of_getOperatingMode 0D23  
                         __end_of_I2C1_CallbackReturnReset 1E5E  
                              __end_of_LIGHTBLUE_SplitWord 1074  
                                 LIGHTBLUE_SplitWord@value 0079  
                                       ??_I2C1_DO_TX_EMPTY 0079  
                                   ??_LIGHTBLUE_SendPacket 0078  
                                      getError@otpCrcError 0032  
                                       _EUSART1_is_tx_done 0800  
                                  ??_rd1RegCompleteHandler 0079  
                                                 ?_strncmp 0071  
                                        i2c_readNBytes@len 0025  
                                  ?_I2C1_DO_SEND_ADR_WRITE 0070  
                                I2C1_MasterSendTxData@data 0071  
                                              _isConnected 11AD  
                                  ??_wr1RegCompleteHandler 0079  
                     LIGHTBLUE_SendProtocolVersion@payload 0022  
                                        ??_TMR0_Initialize 0071  
                                         _I2C1_SetCallback 1469  
                                        _RN487X_is_tx_done 1FA0  
                                   i2c_read1ByteRegister@e 0026  
                                                 _LATAbits 0018  
                  EUSART1_SetErrorHandler@interruptHandler 0071  
                  EUSART2_SetErrorHandler@interruptHandler 0071  
                                   i2c_read1ByteRegister@x 0027  
                                                 _LATCbits 001A  
                                               _I2C1_DO_RX 09E7  
                                               _I2C1_DO_TX 0C7D  
                                      ?_EUSART1_is_tx_done 0070  
                                                clear_ram0 1F3E  
                                                 _PIE0bits 0716  
                                                 _PIE3bits 0719  
                 LIGHTBLUE_ParseIncomingPacket@parserState 006B  
                                               _I2C1_Close 1233  
                    __end_of_LIGHTBLUE_SendProtocolVersion 1795  
                            _LIGHTBLUE_SendProtocolVersion 1761  
                                       ?_RN487X_is_tx_done 0070  
                                             ?_I2C1_Poller 0070  
                                   __end_of_I2C1_MasterFsm 15C3  
                             __end_of_I2C1_MasterGetRxData 1E76  
                                                 _PIR0bits 070C  
                                             ??_getAngleEn 002E  
                                                 _PIR3bits 070F  
                                                 _RX1DTPPS 1ECB  
                                          ??_setZAxisRange 0036  
                                                 _RX2DTPPS 1ECD  
                                   ?_EUSART1_RxDataHandler 0070  
                                  _TMAG5273_GetManufacture 12C5  
                                       _I2C1_MasterSendAck 1E90  
                           DELAY_milliseconds@milliseconds 0071  
                                 ?_BMA253_NewAccelDataRdyY 0070  
                                 ?_BMA253_NewAccelDataRdyZ 0070  
                  __end_of_rn487x_PrintIndicatorCharacters 1469  
                        ??_rn487x_PrintIndicatorCharacters 0073  
                         ?_rn487x_PrintIndicatorCharacters 0070  
                          _rn487x_PrintIndicatorCharacters 1446  
                                _I2C1_DO_SEND_RESTART_READ 1EA2  
                                                 _SSP1CON1 0190  
                                                 _SSP1CON2 0191  
                                     setTemperatureEn@mode 0039  
                                       _EUSART2_is_tx_done 1E94  
                                   __end_of_I2C1_SetBuffer 1058  
                                                 _SSP1STAT 018F  
                                        ??_PIN_MANAGER_IOC 0070  
                                      ??_RN487X_is_tx_done 0071  
                                    ??_RN487X_EnterCmdMode 007B  
                     __end_of_I2C1_SetDataCompleteCallback 1FD3  
                             _I2C1_SetDataCompleteCallback 1FC8  
                                       _I2C1_MasterStartRx 1E70  
                              ?_I2C1_DO_SEND_RESTART_WRITE 0070  
                                 _TMAG5273_CalcTemperature 1365  
                                      ?_I2C1_MasterSendAck 0070  
                           LIGHTBLUE_AccelSensor@accelData 0043  
                                 ?_I2C1_DO_RX_NACK_RESTART 0070  
                                ?_LIGHTBLUE_UpdateErrorLed 0070  
                                      RN487X_ReadMsg@index 0079  
               rn487x_PrintIndicatorCharacters@messageType 0073  
                                     ??_EUSART1_is_tx_done 0071  
                                              _RN487X_Init 07A1  
                                              _RN487X_Read 1017  
                                      ?_EUSART2_is_tx_done 0070  
                                getError@undervoltageError 0031  
                             __end_of_RN487X_SetSystemMode 1017  
                                      ?_I2C1_MasterStartRx 0070  
                                          _getDeviceStatus 1F61  
                             __end_of_I2C1_DO_ADDRESS_NACK 159A  
                                   ??_LIGHTBLUE_PushButton 007B  
                                       _RN487X_IsConnected 1E79  
                            __end_of_i2c_read1ByteRegister 0B8D  
                                  ?_BMA253_GetAccelDataXYZ 0070  
                           __end_of_I2C1_DO_SEND_ADR_WRITE 1F59  
                            ??_EUSART2_DefaultErrorHandler 0071  
                                            _I2C1_DO_RESET 1EC5  
                                              _asyncBuffer 0050  
                                       __end_of_getAngleEn 0D77  
                                    I2C1_Close@returnValue 0071  
                                 ?_rdBlkRegCompleteHandler 0078  
                                        setZAxisRange@mode 0039  
                                __end_of_RN487X_is_tx_done 1FAA  
                                      I2C1_SetCallback@idx 0074  
                                      I2C1_SetCallback@ptr 0073  
                                      ?_RN487X_IsConnected 0070  
                                LIGHTBLUE_LedState@payload 0020  
                                  _EUSART2_SetErrorHandler 1F1A  
                                     ??_I2C1_MasterSendAck 0071  
                    LIGHTBLUE_ParseIncomingPacket@packetID 0069  
                                    EUSART1_Read@readValue 0072  
                                   ?_rd2RegCompleteHandler 0078  
                              _EUSART2_OverrunErrorHandler 0169  
                                      _do_I2C_DO_NACK_STOP 0000  
                                     ??_EUSART2_is_tx_done 0071  
                        setTemperatureEn@temperatureEnable 0038  
                             __end_of_I2C1_MasterOperation 13E0  
                               ??_rn487x_PrintMessageStart 0073  
                          __end_of_LIGHTBLUE_PerformAction 083C  
                          ??_RN487X_SetAsyncMessageHandler 0074  
                                   ?_wr2RegCompleteHandler 0078  
                                     ??_I2C1_MasterStartRx 0071  
                       LIGHTBLUE_SendSerialData@serialData 0079  
                    __end_of_EUSART1_SetTxInterruptHandler 1F1A  
                            _EUSART1_SetTxInterruptHandler 1F14  
                                          ?_I2C1_MasterFsm 0070  
                    __end_of_EUSART2_SetRxInterruptHandler 1F32  
                            _EUSART2_SetRxInterruptHandler 1F2C  
                      LIGHTBLUE_ParseIncomingPacket@length 006A  
                                 __end_of_getTemperatureEN 11AD  
       rd2RegCompleteHandler@i2c1_master_example$F1250@ptr 0078  
       wr2RegCompleteHandler@i2c1_master_example$F1262@ptr 0078  
       rd1RegCompleteHandler@i2c1_master_example$F1239@ptr 0078  
                                  setZAxisRange@zAxisRange 0038  
       wr1RegCompleteHandler@i2c1_master_example$F1256@ptr 0078  
     rdBlkRegCompleteHandler@i2c1_master_example$F1273@ptr 0078  
                                ??_I2C1_MasterWaitForEvent 0071  
                             RN487X_SetOutputs@ioLowNibble 0022  
                                    __end_of_readRegisters 10A2  
                              __end_of_rn487x_PrintMessage 17CA  
                                    _I2C1_MasterDisableIrq 1E64  
                                  ??_OSCILLATOR_Initialize 0071  
                                          ?_I2C1_SetBuffer 0071  
                                   readRegister@regAddress 002C  
                                     ??_RN487X_IsConnected 0071  
                                             bitWrite@mask 0079  
                                   ?_LIGHTBLUE_AccelSensor 0070  
                                   ??_I2C1_DO_SEND_RESTART 0071  
                                ??_EUSART1_SetErrorHandler 0073  
                      __end_of_EUSART1_DefaultErrorHandler 1E80  
                              _EUSART1_DefaultErrorHandler 1E7C  
                                  RN487X_SetOutputs@bitMap 0020  
                              __end_of_EUSART1_is_rx_ready 1F8D  
                                               _T0CON0bits 059E  
                           __end_of_BMA253_GetAccelDataXYZ 0C2B  
                                     _EUSART2_ErrorHandler 0167  
                                           ?_I2C1_DO_RESET 0070  
                                                 _bitWrite 148D  
                       LIGHTBLUE_TemperatureSensor@payload 0037  
                            __end_of_i2c_read2ByteRegister 0A6D  
                                                 _getError 0D77  
                                                 __ptext10 1F61  
                                                 __ptext11 148D  
                                                 __ptext20 1424  
                                                 __ptext12 11AD  
                                                 __ptext21 1ED9  
                                                 __ptext13 12C5  
                                                 __ptext30 1F32  
                                                 __ptext22 11D8  
                                                 __ptext14 1184  
                                                 __ptext31 1F2C  
                                                 __ptext23 1170  
                                                 __ptext15 1198  
                                                 __ptext40 1EFC  
                                                 __ptext32 1F26  
                                                 __ptext24 1FBE  
                                                 __ptext16 0CD0  
                                                 __ptext41 127B  
                                                 __ptext33 1F20  
                                                 __ptext25 0AF9  
                                                 __ptext17 0377  
                                                 __ptext50 0B8D  
                                                 __ptext42 1017  
                                                 __ptext34 1F1A  
                                                 __ptext26 1F38  
                                                 __ptext18 11EE  
                                                 __ptext51 1795  
                                                 __ptext43 1349  
                                                 __ptext35 092C  
                                                 __ptext27 1FB4  
                                                 __ptext19 0D23  
                                                 __ptext60 1FE9  
                                                 __ptext52 12F8  
                                                 __ptext44 0E20  
                                                 __ptext36 1F14  
                                                 __ptext28 1F8D  
                                                 __ptext61 1FDE  
                                                 __ptext53 1446  
                                                 __ptext45 0A6D  
                                                 __ptext37 1F0E  
                                                 __ptext29 096A  
                                                 __ptext70 0590  
                                                 __ptext62 12AC  
                                                 __ptext54 1E79  
                                                 __ptext46 0DCB  
                                                 __ptext38 1F08  
                                                 __ptext71 0804  
                                                 __ptext63 103D  
                                                 __ptext55 07A1  
                                                 __ptext47 0C2B  
                                                 __ptext39 1F02  
                                                 __ptext80 0800  
                                                 __ptext72 1083  
                                                 __ptext64 1365  
                                                 __ptext56 1FAA  
                                                 __ptext48 1382  
                                                 __ptext81 1E94  
                                                 __ptext73 132D  
                                                 __ptext65 0A2A  
                                                 __ptext57 1F84  
                                                 __ptext49 161B  
                                                 __ptext90 1EF0  
                                                 __ptext82 15C3  
                                                 __ptext74 0AB1  
                                                 __ptext66 065C  
                                                 __ptext58 1F7B  
                                                 __ptext91 1EEA  
                                                 __ptext83 1F96  
                                                 __ptext75 0EEC  
                                                 __ptext67 1761  
                                                 __ptext59 100B  
                                                 __ptext92 16A4  
                                                 __ptext84 154B  
                                                 __ptext76 1312  
                                                 __ptext68 115D  
                                                 __ptext93 1066  
                                                 __ptext85 14D7  
                                                 __ptext77 1204  
                                                 __ptext69 1EF6  
                                                 __ptext94 1730  
                                                 __ptext86 1F59  
                                                 __ptext78 16D2  
                                                 __ptext95 0F74  
                                                 __ptext87 11C2  
                                                 __ptext79 1FA0  
                                                 __ptext96 1293  
                                                 __ptext88 14B1  
                                                 __ptext97 1FF4  
                                                 __ptext89 1ED4  
                                                 __ptext98 1524  
                                                 __ptext99 14FD  
                                              bitRead@mask 0078  
                                             _SSP1CON1bits 0190  
                                             _SSP1CON2bits 0191  
                                               _IOCAF6_ISR 1074  
                                 ??_i2c_write1ByteRegister 007B  
                                               strcpy@dest 0076  
                                 _I2C1_CallbackReturnReset 1E5C  
                                              ?_I2C1_DO_RX 0070  
                                              ?_I2C1_DO_TX 0070  
               __end_of_EUSART2_DefaultFramingErrorHandler 1E5A  
                     ??_EUSART2_DefaultFramingErrorHandler 0070  
                      ?_EUSART2_DefaultFramingErrorHandler 0070  
                       _EUSART2_DefaultFramingErrorHandler 1E59  
                          __end_of_BMA253_NewAccelDataRdyY 113B  
                          __end_of_BMA253_NewAccelDataRdyZ 114C  
                                          _lightBlueSerial 0220  
                                ??_TMAG5273_GetManufacture 007B  
                              __end_of_I2C1_MasterClearIrq 1E61  
                             __end_of_I2C1_DO_RX_NACK_STOP 1EC0  
                                              ?_I2C1_Close 0070  
                                        writeRegister@data 0026  
                                               _RC1STAbits 011D  
                                               _RC2STAbits 0A1D  
           EUSART1_SetOverrunErrorHandler@interruptHandler 0071  
           EUSART2_SetOverrunErrorHandler@interruptHandler 0071  
                     RN487X_SetAsyncMessageHandler@pBuffer 0071  
                       __end_of_LIGHTBLUE_GetErrorLedValue 1ED9  
                               _LIGHTBLUE_GetErrorLedValue 1ED4  
                                                 int$flags 007E  
                          __end_of_I2C1_DO_RX_NACK_RESTART 1EC5  
                             RN487X_GetInputsValues@F12901 006E  
                                   getTemperatureEN@tempEN 0030  
                                 I2C1_MasterOperation@read 0022  
                       __end_of_INTERRUPT_InterruptManager 0055  
                               _INTERRUPT_InterruptManager 0004  
                                    _EUSART2_RxDataHandler 121B  
                                  __end_of_getDeviceStatus 1F69  
                                             _SSP1STATbits 018F  
                                 i2c_read1ByteRegister@reg 0024  
                            __end_of_I2C1_DO_SEND_ADR_READ 1F7B  
                              _EUSART1_FramingErrorHandler 0161  
                                             _I2C1_DO_IDLE 1E9D  
                                      _EUSART1_Receive_ISR 0875  
                                             _I2C1_DO_RCEN 1F4A  
                                    LIGHTBLUE_LedState@led 0023  
                              __end_of_I2C1_MasterSendNack 1E90  
                         ??_EUSART2_SetOverrunErrorHandler 0073  
                          ?_EUSART2_SetOverrunErrorHandler 0071  
                                 ?_TMR0_HasOverflowOccured 0070  
                                    __end_of_writeRegister 100B  
                                               _INTCONbits 000B  
                              __end_of_EUSART2_is_rx_ready 1F84  
                           I2C1_SetAddressNackCallback@ptr 0077  
                                 ??_rn487x_PrintMessageEnd 0073  
                               getLowPower@lowPowerModeBit 0030  
                                           __pstringtext10 187A  
                                           __pstringtext11 200B  
                                           __pstringtext12 2016  
                                           __pstringtext13 0000  
                                     _I2C1_MasterGetRxData 1E73  
                                    _I2C1_MasterSendTxData 1E98  
                            __end_of_RN487X_MessageHandler 0AB1  
                              TMAG5273_GetManufacture@read 002F  
                                ??_EUSART2_SetErrorHandler 0073  
                                              bitWrite@reg 0071  
                                   _do_I2C_DO_ADDRESS_NACK 0000  
                                                 intlevel1 0000  
                             RN487X_MessageHandler@message 0041  
                                       RN487X_Write@txData 0076  
                                 __end_of_I2C1_MasterClose 1E64  
                                     ?_EUSART1_Receive_ISR 0070  
                                   rd2RegCompleteHandler@p 0078  
                                  ?_PIN_MANAGER_Initialize 0070  
                                 __end_of_I2C1_MasterStart 1E6A  
                                ?_LIGHTBLUE_SendSerialData 0070  
                                 __end_of_I2C1_MasterWrite 1ECF  
                                   RN487X_RebootCmd@reboot 2000  
                   __end_of_EUSART1_SetOverrunErrorHandler 1F0E  
                           _EUSART1_SetOverrunErrorHandler 1F08  
                                                strcpy@src 0071  
                                         ??_I2C1_DO_RX_ACK 0071  
                               ??_LIGHTBLUE_GetButtonValue 0071  
                                  _I2C1_CallbackReturnStop 1E5A  
                             __end_of_EUSART1_Transmit_ISR 1424  
                          ??_LIGHTBLUE_ParseIncomingPacket 002B  
                                              _serialIndex 0056  
                                     _RN487X_SetSystemMode 100B  
                                     _I2C1_DO_ADDRESS_NACK 1572  
                                   ?_I2C1_MasterDisableIrq 0070  
                             i2c_read2ByteRegister@address 002A  
                    __end_of_RN487X_SetAsyncMessageHandler 1293  
                            _RN487X_SetAsyncMessageHandler 127B  
                                   wr2RegCompleteHandler@p 0078  
           EUSART1_SetFramingErrorHandler@interruptHandler 0071  
           EUSART2_SetFramingErrorHandler@interruptHandler 0071  
                           ?_EUSART1_SetTxInterruptHandler 0071  
                                 RN487X_SetSystemMode@mode 0071  
                           ?_EUSART2_SetRxInterruptHandler 0071  
                        LIGHTBLUE_ParseIncomingPacket@data 0052  
                                       _eusart1RxLastError 0057  
                           RN487X_ReadDefaultResponse@resp 0073  
                                            __pstringtext1 1800  
                                            __pstringtext2 1828  
                                            __pstringtext3 1848  
                                            __pstringtext4 1868  
                                            __pstringtext5 2026  
                                            __pstringtext6 2028  
                                            __pstringtext7 2000  
                                            __pstringtext8 201C  
                                            __pstringtext9 2021  
                                      _EUSART2_Receive_ISR 083C  
                          LIGHTBLUE_SetErrorLedValue@value 0026  
                                 __end_of_I2C1_SetCallback 148D  
                                               _SSP1DATPPS 1EC6  
                                               _SSP1CLKPPS 1EC5  
                                          ??_I2C1_DO_RESET 0071  
                   __end_of_IOCAF6_DefaultInterruptHandler 0800  
                           _IOCAF6_DefaultInterruptHandler 07FF  
                                     _I2C1_MasterOperation 13BF  
                                          _TMR0_Initialize 1170  
                                             ?_getLowPower 0070  
                                     RN487X_SendCmd@cmdLen 0077  
                                                 strncmp@l 0071  
                                                 strncmp@n 0075  
                                                 strncmp@r 0073  
                        _LIGHTBLUE_ParseIncomingPacket$463 002D  
                        _LIGHTBLUE_ParseIncomingPacket$464 002F  
                        _LIGHTBLUE_ParseIncomingPacket$465 0031  
                                    ?_I2C1_MasterGetRxData 0070  
                                 i2c_read2ByteRegister@reg 0024  
                                              _returnReset 0000  
                                         _setOperatingMode 0706  
                                                 strstr@nl 0022  
                                               _TX1STAbits 011E  
                                        ?_getOperatingMode 0070  
                                RN487X_ReadMsg@expectedMsg 0073  
                                               _TX2STAbits 0A1E  
                                              ?_IOCAF6_ISR 0070  
                                             ?_isConnected 0070  
                                    ??_EUSART1_Receive_ISR 0071  
                           __end_of_PIN_MANAGER_Initialize 0B42  
                                       ??_getOperatingMode 002E  
                             ?_LIGHTBLUE_TemperatureSensor 0070  
                          ??_EUSART2_SetTxInterruptHandler 0073  
                            __end_of_rd1RegCompleteHandler 10D5  
                                     ?_EUSART2_Receive_ISR 0070  
                                       _eusart2RxLastError 005E  
                                      RN487X_SendCmd@index 0079  
                         __end_of_rn487x_PrintMessageStart 1648  
                                          _PIN_MANAGER_IOC 1F69  
                         RN487X_ReadDefaultResponse@status 0076  
                             ??_RN487X_ReadDefaultResponse 0073  
                            __end_of_wr1RegCompleteHandler 10C4  
                                    _do_I2C_SEND_ADR_WRITE 0000  
                                  ??_EUSART1_RxDataHandler 0070  
                                     _do_I2C_SEND_ADR_READ 0000  
                         __end_of_LIGHTBLUE_UpdateErrorLed 1349  
                               ??_TMAG5273_CalcTemperature 002F  
                                    ?_RN487X_SetSystemMode 0071  
                        _EUSART2_RxDefaultInterruptHandler 00EB  
                                    ?_I2C1_DO_ADDRESS_NACK 0070  
                               LIGHTBLUE_SplitWord@payload 007B  
                                   RN487X_IndicateRx@value 0071  
