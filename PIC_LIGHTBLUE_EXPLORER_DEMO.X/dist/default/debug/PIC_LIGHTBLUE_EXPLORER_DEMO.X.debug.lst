

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Dec 20 15:01:47 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16LF18456
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    15                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
    17                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    21                           	psect	cinit,global,class=CODE,merge=1,delta=2
    22                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    23                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    25                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    26                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    27                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    28                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    29                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    30                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,noexec
    31                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,noexec
    32                           	psect	inittext,global,class=CODE,delta=2
    33                           	psect	clrtext,global,class=CODE,delta=2
    34                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    35                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    36                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    37                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    38                           	psect	text1,local,class=CODE,merge=1,delta=2
    39                           	psect	text2,local,class=CODE,merge=1,delta=2
    40                           	psect	text3,local,class=CODE,merge=1,delta=2
    41                           	psect	text4,local,class=CODE,merge=1,delta=2
    42                           	psect	text5,local,class=CODE,merge=1,delta=2
    43                           	psect	text6,local,class=CODE,merge=1,delta=2
    44                           	psect	text7,local,class=CODE,merge=1,delta=2
    45                           	psect	text8,local,class=CODE,merge=1,delta=2
    46                           	psect	text9,local,class=CODE,merge=1,delta=2
    47                           	psect	text10,local,class=CODE,merge=1,delta=2
    48                           	psect	text11,local,class=CODE,merge=1,delta=2
    49                           	psect	text12,local,class=CODE,merge=1,delta=2
    50                           	psect	text13,local,class=CODE,merge=1,delta=2
    51                           	psect	text14,local,class=CODE,merge=1,delta=2
    52                           	psect	text15,local,class=CODE,merge=1,delta=2
    53                           	psect	text16,local,class=CODE,merge=1,delta=2
    54                           	psect	text17,local,class=CODE,merge=1,delta=2
    55                           	psect	text18,local,class=CODE,merge=1,delta=2
    56                           	psect	text19,local,class=CODE,merge=1,delta=2
    57                           	psect	text20,local,class=CODE,merge=1,delta=2
    58                           	psect	text21,local,class=CODE,merge=1,delta=2
    59                           	psect	text22,local,class=CODE,merge=1,delta=2
    60                           	psect	text23,local,class=CODE,merge=1,delta=2
    61                           	psect	text24,local,class=CODE,merge=1,delta=2
    62                           	psect	text25,local,class=CODE,merge=1,delta=2
    63                           	psect	text26,local,class=CODE,merge=1,delta=2
    64                           	psect	text27,local,class=CODE,merge=1,delta=2
    65                           	psect	text28,local,class=CODE,merge=1,delta=2
    66                           	psect	text29,local,class=CODE,merge=1,delta=2
    67                           	psect	text30,local,class=CODE,merge=1,delta=2
    68                           	psect	text31,local,class=CODE,merge=1,delta=2
    69                           	psect	text32,local,class=CODE,merge=1,delta=2
    70                           	psect	text33,local,class=CODE,merge=1,delta=2
    71                           	psect	text34,local,class=CODE,merge=1,delta=2
    72                           	psect	text35,local,class=CODE,merge=1,delta=2
    73                           	psect	text36,local,class=CODE,merge=1,delta=2
    74                           	psect	text37,local,class=CODE,merge=1,delta=2
    75                           	psect	text38,local,class=CODE,merge=1,delta=2
    76                           	psect	text39,local,class=CODE,merge=1,delta=2
    77                           	psect	text40,local,class=CODE,merge=1,delta=2
    78                           	psect	text41,local,class=CODE,merge=1,delta=2
    79                           	psect	text42,local,class=CODE,merge=1,delta=2
    80                           	psect	text43,local,class=CODE,merge=1,delta=2
    81                           	psect	text44,local,class=CODE,merge=1,delta=2
    82                           	psect	text45,local,class=CODE,merge=1,delta=2
    83                           	psect	text46,local,class=CODE,merge=1,delta=2,group=2
    84                           	psect	text47,local,class=CODE,merge=1,delta=2,group=2
    85                           	psect	text48,local,class=CODE,merge=1,delta=2,group=2
    86                           	psect	text49,local,class=CODE,merge=1,inline,delta=2
    87                           	psect	text50,local,class=CODE,merge=1,inline,delta=2
    88                           	psect	text51,local,class=CODE,merge=1,inline,delta=2
    89                           	psect	text52,local,class=CODE,merge=1,delta=2,group=2
    90                           	psect	text53,local,class=CODE,merge=1,inline,delta=2
    91                           	psect	text54,local,class=CODE,merge=1,delta=2
    92                           	psect	text55,local,class=CODE,merge=1,delta=2
    93                           	psect	text56,local,class=CODE,merge=1,inline,delta=2
    94                           	psect	text57,local,class=CODE,merge=1,delta=2
    95                           	psect	text58,local,class=CODE,merge=1,delta=2
    96                           	psect	text59,local,class=CODE,merge=1,delta=2
    97                           	psect	text60,local,class=CODE,merge=1,delta=2
    98                           	psect	text61,local,class=CODE,merge=1,delta=2
    99                           	psect	text62,local,class=CODE,merge=1,delta=2
   100                           	psect	text63,local,class=CODE,merge=1,delta=2
   101                           	psect	text64,local,class=CODE,merge=1,delta=2
   102                           	psect	text65,local,class=CODE,merge=1,delta=2
   103                           	psect	text66,local,class=CODE,merge=1,delta=2
   104                           	psect	text67,local,class=CODE,merge=1,delta=2
   105                           	psect	text68,local,class=CODE,merge=1,delta=2
   106                           	psect	text69,local,class=CODE,merge=1,delta=2
   107                           	psect	text70,local,class=CODE,merge=1,delta=2
   108                           	psect	text71,local,class=CODE,merge=1,delta=2
   109                           	psect	text72,local,class=CODE,merge=1,delta=2
   110                           	psect	text73,local,class=CODE,merge=1,delta=2
   111                           	psect	text74,local,class=CODE,merge=1,delta=2
   112                           	psect	text75,local,class=CODE,merge=1,delta=2
   113                           	psect	text76,local,class=CODE,merge=1,delta=2
   114                           	psect	text77,local,class=CODE,merge=1,delta=2
   115                           	psect	text78,local,class=CODE,merge=1,delta=2
   116                           	psect	text79,local,class=CODE,merge=1,inline,delta=2
   117                           	psect	text80,local,class=CODE,merge=1,delta=2
   118                           	psect	text81,local,class=CODE,merge=1,delta=2
   119                           	psect	text82,local,class=CODE,merge=1,delta=2
   120                           	psect	text83,local,class=CODE,merge=1,inline,delta=2
   121                           	psect	text84,local,class=CODE,merge=1,delta=2
   122                           	psect	text85,local,class=CODE,merge=1,delta=2
   123                           	psect	text86,local,class=CODE,merge=1,inline,delta=2
   124                           	psect	text87,local,class=CODE,merge=1,delta=2
   125                           	psect	text88,local,class=CODE,merge=1,delta=2
   126                           	psect	text89,local,class=CODE,merge=1,delta=2
   127                           	psect	text90,local,class=CODE,merge=1,delta=2
   128                           	psect	text91,local,class=CODE,merge=1,delta=2
   129                           	psect	text92,local,class=CODE,merge=1,delta=2
   130                           	psect	text93,local,class=CODE,merge=1,delta=2
   131                           	psect	text94,local,class=CODE,merge=1,delta=2
   132                           	psect	text95,local,class=CODE,merge=1,delta=2
   133                           	psect	text96,local,class=CODE,merge=1,delta=2,group=2
   134                           	psect	text97,local,class=CODE,merge=1,inline,delta=2
   135                           	psect	text98,local,class=CODE,merge=1,delta=2
   136                           	psect	text99,local,class=CODE,merge=1,delta=2
   137                           	psect	text100,local,class=CODE,merge=1,delta=2
   138                           	psect	text101,local,class=CODE,merge=1,delta=2
   139                           	psect	text102,local,class=CODE,merge=1,delta=2
   140                           	psect	text103,local,class=CODE,merge=1,delta=2
   141                           	psect	text104,local,class=CODE,merge=1,delta=2
   142                           	psect	text105,local,class=CODE,merge=1,delta=2
   143                           	psect	text106,local,class=CODE,merge=1,delta=2
   144                           	psect	text107,local,class=CODE,merge=1,delta=2
   145                           	psect	text108,local,class=CODE,merge=1,delta=2
   146                           	psect	text109,local,class=CODE,merge=1,delta=2
   147                           	psect	text110,local,class=CODE,merge=1,delta=2
   148                           	psect	text111,local,class=CODE,merge=1,delta=2
   149                           	psect	text112,local,class=CODE,merge=1,inline,delta=2
   150                           	psect	text113,local,class=CODE,merge=1,delta=2
   151                           	psect	text114,local,class=CODE,merge=1,delta=2
   152                           	psect	text115,local,class=CODE,merge=1,delta=2
   153                           	psect	text116,local,class=CODE,merge=1,inline,delta=2
   154                           	psect	text117,local,class=CODE,merge=1,inline,delta=2
   155                           	psect	text118,local,class=CODE,merge=1,delta=2
   156                           	psect	text119,local,class=CODE,merge=1,delta=2
   157                           	psect	text120,local,class=CODE,merge=1,delta=2
   158                           	psect	text121,local,class=CODE,merge=1,delta=2
   159                           	psect	text122,local,class=CODE,merge=1,delta=2
   160                           	psect	text123,local,class=CODE,merge=1,delta=2
   161                           	psect	text124,local,class=CODE,merge=1,delta=2
   162                           	psect	text125,local,class=CODE,merge=1,delta=2
   163                           	psect	text126,local,class=CODE,merge=1,delta=2
   164                           	psect	text127,local,class=CODE,merge=1,delta=2
   165                           	psect	text128,local,class=CODE,merge=1,delta=2
   166                           	psect	text129,local,class=CODE,merge=1,delta=2
   167                           	psect	text130,local,class=CODE,merge=1,delta=2
   168                           	psect	text131,local,class=CODE,merge=1,delta=2
   169                           	psect	text132,local,class=CODE,merge=1,delta=2
   170                           	psect	text133,local,class=CODE,merge=1,delta=2
   171                           	psect	text134,local,class=CODE,merge=1,inline,delta=2
   172                           	psect	text135,local,class=CODE,merge=1,inline,delta=2
   173                           	psect	text136,local,class=CODE,merge=1,inline,delta=2
   174                           	psect	text137,local,class=CODE,merge=1,inline,delta=2
   175                           	psect	text138,local,class=CODE,merge=1,inline,delta=2
   176                           	psect	text139,local,class=CODE,merge=1,inline,delta=2
   177                           	psect	text140,local,class=CODE,merge=1,inline,delta=2
   178                           	psect	text141,local,class=CODE,merge=1,delta=2
   179                           	psect	text142,local,class=CODE,merge=1,delta=2
   180                           	psect	text143,local,class=CODE,merge=1,delta=2
   181                           	psect	text144,local,class=CODE,merge=1,delta=2
   182                           	psect	text145,local,class=CODE,merge=1,delta=2
   183                           	psect	text146,local,class=CODE,merge=1,delta=2
   184                           	psect	text147,local,class=CODE,merge=1,delta=2
   185                           	psect	text148,local,class=CODE,merge=1,delta=2
   186                           	psect	text149,local,class=CODE,merge=1,delta=2
   187                           	psect	text150,local,class=CODE,merge=1,delta=2
   188                           	psect	text151,local,class=CODE,merge=1,delta=2
   189                           	psect	text152,local,class=CODE,merge=1,delta=2
   190                           	psect	text153,local,class=CODE,merge=1,delta=2
   191                           	psect	text154,local,class=CODE,merge=1,delta=2
   192                           	psect	text155,local,class=CODE,merge=1,delta=2
   193                           	psect	text156,local,class=CODE,merge=1,inline,delta=2
   194                           	psect	text157,local,class=CODE,merge=1,inline,delta=2
   195                           	psect	text158,local,class=CODE,merge=1,inline,delta=2
   196                           	psect	text159,local,class=CODE,merge=1,delta=2
   197                           	psect	text160,local,class=CODE,merge=1,inline,delta=2
   198                           	psect	text161,local,class=CODE,merge=1,inline,delta=2
   199                           	psect	text162,local,class=CODE,merge=1,inline,delta=2
   200                           	psect	intentry,global,class=CODE,delta=2
   201                           	psect	text164,local,class=CODE,merge=1,delta=2
   202                           	psect	text165,local,class=CODE,merge=1,delta=2
   203                           	psect	text166,local,class=CODE,merge=1,delta=2
   204                           	psect	text167,local,class=CODE,merge=1,delta=2
   205                           	psect	text168,local,class=CODE,merge=1,delta=2
   206                           	psect	text169,local,class=CODE,merge=1,delta=2
   207                           	psect	text170,local,class=CODE,merge=1,delta=2
   208                           	psect	text171,local,class=CODE,merge=1,delta=2
   209                           	psect	text172,local,class=CODE,merge=1,delta=2
   210                           	psect	text173,local,class=CODE,merge=1,delta=2
   211                           	psect	text174,local,class=CODE,merge=1,delta=2
   212                           	psect	text175,local,class=CODE,merge=1,delta=2
   213                           	psect	text176,local,class=CODE,merge=1,delta=2
   214                           	psect	text177,local,class=CODE,merge=1,delta=2
   215                           	psect	text178,local,class=CODE,merge=1,delta=2
   216                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
   217                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   218                           	dabs	1,0x7E,2
   219     0000                     
   220                           ; Version 2.35
   221                           ; Generated 01/06/2021 GMT
   222                           ; 
   223                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   224                           ; All rights reserved.
   225                           ; 
   226                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   227                           ; 
   228                           ; Redistribution and use in source and binary forms, with or without modification, are
   229                           ; permitted provided that the following conditions are met:
   230                           ; 
   231                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   232                           ;        conditions and the following disclaimer.
   233                           ; 
   234                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   235                           ;        of conditions and the following disclaimer in the documentation and/or other
   236                           ;        materials provided with the distribution. Publication is not required when
   237                           ;        this file is used in an embedded application.
   238                           ; 
   239                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   240                           ;        software without specific prior written permission.
   241                           ; 
   242                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   243                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   244                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   245                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   246                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   247                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   248                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   249                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   250                           ; 
   251                           ; 
   252                           ; Code-generator required, PIC16LF18456 Definitions
   253                           ; 
   254                           ; SFR Addresses
   255     0000                     	;# 
   256     0001                     	;# 
   257     0002                     	;# 
   258     0003                     	;# 
   259     0004                     	;# 
   260     0005                     	;# 
   261     0006                     	;# 
   262     0007                     	;# 
   263     0008                     	;# 
   264     0009                     	;# 
   265     000A                     	;# 
   266     000B                     	;# 
   267     000C                     	;# 
   268     000D                     	;# 
   269     000E                     	;# 
   270     0010                     	;# 
   271     0012                     	;# 
   272     0013                     	;# 
   273     0014                     	;# 
   274     0016                     	;# 
   275     0018                     	;# 
   276     0019                     	;# 
   277     001A                     	;# 
   278     001C                     	;# 
   279     008C                     	;# 
   280     008C                     	;# 
   281     008D                     	;# 
   282     008E                     	;# 
   283     008E                     	;# 
   284     008F                     	;# 
   285     0090                     	;# 
   286     0090                     	;# 
   287     0091                     	;# 
   288     0092                     	;# 
   289     0092                     	;# 
   290     0093                     	;# 
   291     0094                     	;# 
   292     0094                     	;# 
   293     0095                     	;# 
   294     0096                     	;# 
   295     0096                     	;# 
   296     0097                     	;# 
   297     0098                     	;# 
   298     0099                     	;# 
   299     009A                     	;# 
   300     009B                     	;# 
   301     009B                     	;# 
   302     009C                     	;# 
   303     009D                     	;# 
   304     009D                     	;# 
   305     009E                     	;# 
   306     009F                     	;# 
   307     010C                     	;# 
   308     010C                     	;# 
   309     010D                     	;# 
   310     010E                     	;# 
   311     010F                     	;# 
   312     010F                     	;# 
   313     0110                     	;# 
   314     0111                     	;# 
   315     0112                     	;# 
   316     0113                     	;# 
   317     0114                     	;# 
   318     0115                     	;# 
   319     0116                     	;# 
   320     0117                     	;# 
   321     0118                     	;# 
   322     0119                     	;# 
   323     0119                     	;# 
   324     0119                     	;# 
   325     011A                     	;# 
   326     011A                     	;# 
   327     011A                     	;# 
   328     011B                     	;# 
   329     011B                     	;# 
   330     011B                     	;# 
   331     011B                     	;# 
   332     011B                     	;# 
   333     011C                     	;# 
   334     011C                     	;# 
   335     011C                     	;# 
   336     011D                     	;# 
   337     011D                     	;# 
   338     011D                     	;# 
   339     011E                     	;# 
   340     011E                     	;# 
   341     011E                     	;# 
   342     011F                     	;# 
   343     011F                     	;# 
   344     011F                     	;# 
   345     011F                     	;# 
   346     011F                     	;# 
   347     018C                     	;# 
   348     018D                     	;# 
   349     018E                     	;# 
   350     018F                     	;# 
   351     0190                     	;# 
   352     0191                     	;# 
   353     0192                     	;# 
   354     0196                     	;# 
   355     0197                     	;# 
   356     0198                     	;# 
   357     0199                     	;# 
   358     019A                     	;# 
   359     019B                     	;# 
   360     019C                     	;# 
   361     020C                     	;# 
   362     020D                     	;# 
   363     020E                     	;# 
   364     020E                     	;# 
   365     020F                     	;# 
   366     020F                     	;# 
   367     0210                     	;# 
   368     0210                     	;# 
   369     0211                     	;# 
   370     0211                     	;# 
   371     0212                     	;# 
   372     0213                     	;# 
   373     0214                     	;# 
   374     0214                     	;# 
   375     0215                     	;# 
   376     0215                     	;# 
   377     0216                     	;# 
   378     0216                     	;# 
   379     0217                     	;# 
   380     0217                     	;# 
   381     0218                     	;# 
   382     0219                     	;# 
   383     021A                     	;# 
   384     021A                     	;# 
   385     021B                     	;# 
   386     021B                     	;# 
   387     021C                     	;# 
   388     021C                     	;# 
   389     021D                     	;# 
   390     021D                     	;# 
   391     021E                     	;# 
   392     021F                     	;# 
   393     028C                     	;# 
   394     028C                     	;# 
   395     028D                     	;# 
   396     028D                     	;# 
   397     028E                     	;# 
   398     028F                     	;# 
   399     0290                     	;# 
   400     0291                     	;# 
   401     0292                     	;# 
   402     0292                     	;# 
   403     0293                     	;# 
   404     0293                     	;# 
   405     0294                     	;# 
   406     0295                     	;# 
   407     0296                     	;# 
   408     0297                     	;# 
   409     0298                     	;# 
   410     0298                     	;# 
   411     0299                     	;# 
   412     0299                     	;# 
   413     029A                     	;# 
   414     029B                     	;# 
   415     029C                     	;# 
   416     029D                     	;# 
   417     029F                     	;# 
   418     030C                     	;# 
   419     030C                     	;# 
   420     030D                     	;# 
   421     030E                     	;# 
   422     030F                     	;# 
   423     0310                     	;# 
   424     0310                     	;# 
   425     0311                     	;# 
   426     0312                     	;# 
   427     0313                     	;# 
   428     0314                     	;# 
   429     0314                     	;# 
   430     0315                     	;# 
   431     0316                     	;# 
   432     0317                     	;# 
   433     0318                     	;# 
   434     0318                     	;# 
   435     0319                     	;# 
   436     031A                     	;# 
   437     031B                     	;# 
   438     031C                     	;# 
   439     031C                     	;# 
   440     031D                     	;# 
   441     031E                     	;# 
   442     031F                     	;# 
   443     038C                     	;# 
   444     038C                     	;# 
   445     038D                     	;# 
   446     038E                     	;# 
   447     0390                     	;# 
   448     0390                     	;# 
   449     0391                     	;# 
   450     0392                     	;# 
   451     048C                     	;# 
   452     048C                     	;# 
   453     048D                     	;# 
   454     048E                     	;# 
   455     048F                     	;# 
   456     048F                     	;# 
   457     0490                     	;# 
   458     0491                     	;# 
   459     0492                     	;# 
   460     0492                     	;# 
   461     0493                     	;# 
   462     0494                     	;# 
   463     0495                     	;# 
   464     0495                     	;# 
   465     0496                     	;# 
   466     0497                     	;# 
   467     0498                     	;# 
   468     0499                     	;# 
   469     049A                     	;# 
   470     049B                     	;# 
   471     049C                     	;# 
   472     049D                     	;# 
   473     050C                     	;# 
   474     050C                     	;# 
   475     050D                     	;# 
   476     050E                     	;# 
   477     050F                     	;# 
   478     050F                     	;# 
   479     0510                     	;# 
   480     0511                     	;# 
   481     0512                     	;# 
   482     0512                     	;# 
   483     0513                     	;# 
   484     0514                     	;# 
   485     0515                     	;# 
   486     0515                     	;# 
   487     0516                     	;# 
   488     0517                     	;# 
   489     0518                     	;# 
   490     0519                     	;# 
   491     051A                     	;# 
   492     051B                     	;# 
   493     051C                     	;# 
   494     051D                     	;# 
   495     058C                     	;# 
   496     058C                     	;# 
   497     058D                     	;# 
   498     058E                     	;# 
   499     058F                     	;# 
   500     058F                     	;# 
   501     0590                     	;# 
   502     0591                     	;# 
   503     0592                     	;# 
   504     0593                     	;# 
   505     059C                     	;# 
   506     059C                     	;# 
   507     059D                     	;# 
   508     059D                     	;# 
   509     059E                     	;# 
   510     059F                     	;# 
   511     060C                     	;# 
   512     060C                     	;# 
   513     060D                     	;# 
   514     060D                     	;# 
   515     060E                     	;# 
   516     060F                     	;# 
   517     0610                     	;# 
   518     0611                     	;# 
   519     0612                     	;# 
   520     0613                     	;# 
   521     0614                     	;# 
   522     0616                     	;# 
   523     0616                     	;# 
   524     0617                     	;# 
   525     0617                     	;# 
   526     0618                     	;# 
   527     0619                     	;# 
   528     061A                     	;# 
   529     061B                     	;# 
   530     061C                     	;# 
   531     061D                     	;# 
   532     061E                     	;# 
   533     068C                     	;# 
   534     068D                     	;# 
   535     068E                     	;# 
   536     068F                     	;# 
   537     0690                     	;# 
   538     0691                     	;# 
   539     0692                     	;# 
   540     0693                     	;# 
   541     0694                     	;# 
   542     070C                     	;# 
   543     070D                     	;# 
   544     070E                     	;# 
   545     070F                     	;# 
   546     0710                     	;# 
   547     0711                     	;# 
   548     0712                     	;# 
   549     0713                     	;# 
   550     0714                     	;# 
   551     0716                     	;# 
   552     0717                     	;# 
   553     0718                     	;# 
   554     0719                     	;# 
   555     071A                     	;# 
   556     071B                     	;# 
   557     071C                     	;# 
   558     071D                     	;# 
   559     071E                     	;# 
   560     0796                     	;# 
   561     0797                     	;# 
   562     0798                     	;# 
   563     0799                     	;# 
   564     079A                     	;# 
   565     079B                     	;# 
   566     079C                     	;# 
   567     079D                     	;# 
   568     080C                     	;# 
   569     080D                     	;# 
   570     080E                     	;# 
   571     080F                     	;# 
   572     0810                     	;# 
   573     0811                     	;# 
   574     0813                     	;# 
   575     0814                     	;# 
   576     081A                     	;# 
   577     081A                     	;# 
   578     081B                     	;# 
   579     081C                     	;# 
   580     081C                     	;# 
   581     081D                     	;# 
   582     081E                     	;# 
   583     081F                     	;# 
   584     088C                     	;# 
   585     088D                     	;# 
   586     088E                     	;# 
   587     088F                     	;# 
   588     0890                     	;# 
   589     0891                     	;# 
   590     0892                     	;# 
   591     0893                     	;# 
   592     0895                     	;# 
   593     0896                     	;# 
   594     0897                     	;# 
   595     0898                     	;# 
   596     0899                     	;# 
   597     089A                     	;# 
   598     089B                     	;# 
   599     090C                     	;# 
   600     090E                     	;# 
   601     090F                     	;# 
   602     091F                     	;# 
   603     098F                     	;# 
   604     098F                     	;# 
   605     0990                     	;# 
   606     0991                     	;# 
   607     0992                     	;# 
   608     0993                     	;# 
   609     0994                     	;# 
   610     0995                     	;# 
   611     0996                     	;# 
   612     0997                     	;# 
   613     0A19                     	;# 
   614     0A19                     	;# 
   615     0A1A                     	;# 
   616     0A1A                     	;# 
   617     0A1B                     	;# 
   618     0A1B                     	;# 
   619     0A1B                     	;# 
   620     0A1C                     	;# 
   621     0A1C                     	;# 
   622     0A1D                     	;# 
   623     0A1D                     	;# 
   624     0A1E                     	;# 
   625     0A1E                     	;# 
   626     0A1F                     	;# 
   627     0A1F                     	;# 
   628     0A1F                     	;# 
   629     1E0F                     	;# 
   630     1E10                     	;# 
   631     1E11                     	;# 
   632     1E12                     	;# 
   633     1E13                     	;# 
   634     1E14                     	;# 
   635     1E15                     	;# 
   636     1E16                     	;# 
   637     1E17                     	;# 
   638     1E18                     	;# 
   639     1E19                     	;# 
   640     1E1A                     	;# 
   641     1E1B                     	;# 
   642     1E1C                     	;# 
   643     1E1D                     	;# 
   644     1E1E                     	;# 
   645     1E1F                     	;# 
   646     1E20                     	;# 
   647     1E21                     	;# 
   648     1E22                     	;# 
   649     1E23                     	;# 
   650     1E24                     	;# 
   651     1E25                     	;# 
   652     1E26                     	;# 
   653     1E27                     	;# 
   654     1E28                     	;# 
   655     1E29                     	;# 
   656     1E2A                     	;# 
   657     1E2B                     	;# 
   658     1E2C                     	;# 
   659     1E2D                     	;# 
   660     1E2E                     	;# 
   661     1E2F                     	;# 
   662     1E30                     	;# 
   663     1E31                     	;# 
   664     1E32                     	;# 
   665     1E33                     	;# 
   666     1E34                     	;# 
   667     1E35                     	;# 
   668     1E36                     	;# 
   669     1E37                     	;# 
   670     1E8F                     	;# 
   671     1E90                     	;# 
   672     1E91                     	;# 
   673     1E92                     	;# 
   674     1E93                     	;# 
   675     1E94                     	;# 
   676     1E95                     	;# 
   677     1E96                     	;# 
   678     1E97                     	;# 
   679     1E9C                     	;# 
   680     1E9D                     	;# 
   681     1E9E                     	;# 
   682     1EA1                     	;# 
   683     1EA2                     	;# 
   684     1EA3                     	;# 
   685     1EA4                     	;# 
   686     1EA5                     	;# 
   687     1EA9                     	;# 
   688     1EAA                     	;# 
   689     1EAB                     	;# 
   690     1EAC                     	;# 
   691     1EB1                     	;# 
   692     1EB2                     	;# 
   693     1EB3                     	;# 
   694     1EB8                     	;# 
   695     1EB9                     	;# 
   696     1EBA                     	;# 
   697     1EBB                     	;# 
   698     1EBC                     	;# 
   699     1EBD                     	;# 
   700     1EBE                     	;# 
   701     1EC3                     	;# 
   702     1EC5                     	;# 
   703     1EC6                     	;# 
   704     1EC7                     	;# 
   705     1EC8                     	;# 
   706     1EC9                     	;# 
   707     1ECA                     	;# 
   708     1ECB                     	;# 
   709     1ECC                     	;# 
   710     1ECD                     	;# 
   711     1ECE                     	;# 
   712     1F10                     	;# 
   713     1F11                     	;# 
   714     1F12                     	;# 
   715     1F13                     	;# 
   716     1F14                     	;# 
   717     1F15                     	;# 
   718     1F16                     	;# 
   719     1F17                     	;# 
   720     1F18                     	;# 
   721     1F19                     	;# 
   722     1F1A                     	;# 
   723     1F1B                     	;# 
   724     1F1C                     	;# 
   725     1F1D                     	;# 
   726     1F1E                     	;# 
   727     1F1F                     	;# 
   728     1F20                     	;# 
   729     1F21                     	;# 
   730     1F22                     	;# 
   731     1F23                     	;# 
   732     1F24                     	;# 
   733     1F25                     	;# 
   734     1F26                     	;# 
   735     1F27                     	;# 
   736     1F38                     	;# 
   737     1F39                     	;# 
   738     1F3A                     	;# 
   739     1F3B                     	;# 
   740     1F3C                     	;# 
   741     1F3D                     	;# 
   742     1F3E                     	;# 
   743     1F3F                     	;# 
   744     1F43                     	;# 
   745     1F44                     	;# 
   746     1F45                     	;# 
   747     1F46                     	;# 
   748     1F47                     	;# 
   749     1F48                     	;# 
   750     1F49                     	;# 
   751     1F4A                     	;# 
   752     1F4E                     	;# 
   753     1F4F                     	;# 
   754     1F50                     	;# 
   755     1F51                     	;# 
   756     1F52                     	;# 
   757     1F53                     	;# 
   758     1F54                     	;# 
   759     1F55                     	;# 
   760     1F65                     	;# 
   761     1F66                     	;# 
   762     1F67                     	;# 
   763     1F68                     	;# 
   764     1F69                     	;# 
   765     1F6A                     	;# 
   766     1F6B                     	;# 
   767     1FE4                     	;# 
   768     1FE5                     	;# 
   769     1FE6                     	;# 
   770     1FE7                     	;# 
   771     1FE8                     	;# 
   772     1FE8                     	;# 
   773     1FE9                     	;# 
   774     1FEA                     	;# 
   775     1FEB                     	;# 
   776     1FED                     	;# 
   777     1FEE                     	;# 
   778     1FEF                     	;# 
   779     0000                     	;# 
   780     0001                     	;# 
   781     0002                     	;# 
   782     0003                     	;# 
   783     0004                     	;# 
   784     0005                     	;# 
   785     0006                     	;# 
   786     0007                     	;# 
   787     0008                     	;# 
   788     0009                     	;# 
   789     000A                     	;# 
   790     000B                     	;# 
   791     000C                     	;# 
   792     000D                     	;# 
   793     000E                     	;# 
   794     0010                     	;# 
   795     0012                     	;# 
   796     0013                     	;# 
   797     0014                     	;# 
   798     0016                     	;# 
   799     0018                     	;# 
   800     0019                     	;# 
   801     001A                     	;# 
   802     001C                     	;# 
   803     008C                     	;# 
   804     008C                     	;# 
   805     008D                     	;# 
   806     008E                     	;# 
   807     008E                     	;# 
   808     008F                     	;# 
   809     0090                     	;# 
   810     0090                     	;# 
   811     0091                     	;# 
   812     0092                     	;# 
   813     0092                     	;# 
   814     0093                     	;# 
   815     0094                     	;# 
   816     0094                     	;# 
   817     0095                     	;# 
   818     0096                     	;# 
   819     0096                     	;# 
   820     0097                     	;# 
   821     0098                     	;# 
   822     0099                     	;# 
   823     009A                     	;# 
   824     009B                     	;# 
   825     009B                     	;# 
   826     009C                     	;# 
   827     009D                     	;# 
   828     009D                     	;# 
   829     009E                     	;# 
   830     009F                     	;# 
   831     010C                     	;# 
   832     010C                     	;# 
   833     010D                     	;# 
   834     010E                     	;# 
   835     010F                     	;# 
   836     010F                     	;# 
   837     0110                     	;# 
   838     0111                     	;# 
   839     0112                     	;# 
   840     0113                     	;# 
   841     0114                     	;# 
   842     0115                     	;# 
   843     0116                     	;# 
   844     0117                     	;# 
   845     0118                     	;# 
   846     0119                     	;# 
   847     0119                     	;# 
   848     0119                     	;# 
   849     011A                     	;# 
   850     011A                     	;# 
   851     011A                     	;# 
   852     011B                     	;# 
   853     011B                     	;# 
   854     011B                     	;# 
   855     011B                     	;# 
   856     011B                     	;# 
   857     011C                     	;# 
   858     011C                     	;# 
   859     011C                     	;# 
   860     011D                     	;# 
   861     011D                     	;# 
   862     011D                     	;# 
   863     011E                     	;# 
   864     011E                     	;# 
   865     011E                     	;# 
   866     011F                     	;# 
   867     011F                     	;# 
   868     011F                     	;# 
   869     011F                     	;# 
   870     011F                     	;# 
   871     018C                     	;# 
   872     018D                     	;# 
   873     018E                     	;# 
   874     018F                     	;# 
   875     0190                     	;# 
   876     0191                     	;# 
   877     0192                     	;# 
   878     0196                     	;# 
   879     0197                     	;# 
   880     0198                     	;# 
   881     0199                     	;# 
   882     019A                     	;# 
   883     019B                     	;# 
   884     019C                     	;# 
   885     020C                     	;# 
   886     020D                     	;# 
   887     020E                     	;# 
   888     020E                     	;# 
   889     020F                     	;# 
   890     020F                     	;# 
   891     0210                     	;# 
   892     0210                     	;# 
   893     0211                     	;# 
   894     0211                     	;# 
   895     0212                     	;# 
   896     0213                     	;# 
   897     0214                     	;# 
   898     0214                     	;# 
   899     0215                     	;# 
   900     0215                     	;# 
   901     0216                     	;# 
   902     0216                     	;# 
   903     0217                     	;# 
   904     0217                     	;# 
   905     0218                     	;# 
   906     0219                     	;# 
   907     021A                     	;# 
   908     021A                     	;# 
   909     021B                     	;# 
   910     021B                     	;# 
   911     021C                     	;# 
   912     021C                     	;# 
   913     021D                     	;# 
   914     021D                     	;# 
   915     021E                     	;# 
   916     021F                     	;# 
   917     028C                     	;# 
   918     028C                     	;# 
   919     028D                     	;# 
   920     028D                     	;# 
   921     028E                     	;# 
   922     028F                     	;# 
   923     0290                     	;# 
   924     0291                     	;# 
   925     0292                     	;# 
   926     0292                     	;# 
   927     0293                     	;# 
   928     0293                     	;# 
   929     0294                     	;# 
   930     0295                     	;# 
   931     0296                     	;# 
   932     0297                     	;# 
   933     0298                     	;# 
   934     0298                     	;# 
   935     0299                     	;# 
   936     0299                     	;# 
   937     029A                     	;# 
   938     029B                     	;# 
   939     029C                     	;# 
   940     029D                     	;# 
   941     029F                     	;# 
   942     030C                     	;# 
   943     030C                     	;# 
   944     030D                     	;# 
   945     030E                     	;# 
   946     030F                     	;# 
   947     0310                     	;# 
   948     0310                     	;# 
   949     0311                     	;# 
   950     0312                     	;# 
   951     0313                     	;# 
   952     0314                     	;# 
   953     0314                     	;# 
   954     0315                     	;# 
   955     0316                     	;# 
   956     0317                     	;# 
   957     0318                     	;# 
   958     0318                     	;# 
   959     0319                     	;# 
   960     031A                     	;# 
   961     031B                     	;# 
   962     031C                     	;# 
   963     031C                     	;# 
   964     031D                     	;# 
   965     031E                     	;# 
   966     031F                     	;# 
   967     038C                     	;# 
   968     038C                     	;# 
   969     038D                     	;# 
   970     038E                     	;# 
   971     0390                     	;# 
   972     0390                     	;# 
   973     0391                     	;# 
   974     0392                     	;# 
   975     048C                     	;# 
   976     048C                     	;# 
   977     048D                     	;# 
   978     048E                     	;# 
   979     048F                     	;# 
   980     048F                     	;# 
   981     0490                     	;# 
   982     0491                     	;# 
   983     0492                     	;# 
   984     0492                     	;# 
   985     0493                     	;# 
   986     0494                     	;# 
   987     0495                     	;# 
   988     0495                     	;# 
   989     0496                     	;# 
   990     0497                     	;# 
   991     0498                     	;# 
   992     0499                     	;# 
   993     049A                     	;# 
   994     049B                     	;# 
   995     049C                     	;# 
   996     049D                     	;# 
   997     050C                     	;# 
   998     050C                     	;# 
   999     050D                     	;# 
  1000     050E                     	;# 
  1001     050F                     	;# 
  1002     050F                     	;# 
  1003     0510                     	;# 
  1004     0511                     	;# 
  1005     0512                     	;# 
  1006     0512                     	;# 
  1007     0513                     	;# 
  1008     0514                     	;# 
  1009     0515                     	;# 
  1010     0515                     	;# 
  1011     0516                     	;# 
  1012     0517                     	;# 
  1013     0518                     	;# 
  1014     0519                     	;# 
  1015     051A                     	;# 
  1016     051B                     	;# 
  1017     051C                     	;# 
  1018     051D                     	;# 
  1019     058C                     	;# 
  1020     058C                     	;# 
  1021     058D                     	;# 
  1022     058E                     	;# 
  1023     058F                     	;# 
  1024     058F                     	;# 
  1025     0590                     	;# 
  1026     0591                     	;# 
  1027     0592                     	;# 
  1028     0593                     	;# 
  1029     059C                     	;# 
  1030     059C                     	;# 
  1031     059D                     	;# 
  1032     059D                     	;# 
  1033     059E                     	;# 
  1034     059F                     	;# 
  1035     060C                     	;# 
  1036     060C                     	;# 
  1037     060D                     	;# 
  1038     060D                     	;# 
  1039     060E                     	;# 
  1040     060F                     	;# 
  1041     0610                     	;# 
  1042     0611                     	;# 
  1043     0612                     	;# 
  1044     0613                     	;# 
  1045     0614                     	;# 
  1046     0616                     	;# 
  1047     0616                     	;# 
  1048     0617                     	;# 
  1049     0617                     	;# 
  1050     0618                     	;# 
  1051     0619                     	;# 
  1052     061A                     	;# 
  1053     061B                     	;# 
  1054     061C                     	;# 
  1055     061D                     	;# 
  1056     061E                     	;# 
  1057     068C                     	;# 
  1058     068D                     	;# 
  1059     068E                     	;# 
  1060     068F                     	;# 
  1061     0690                     	;# 
  1062     0691                     	;# 
  1063     0692                     	;# 
  1064     0693                     	;# 
  1065     0694                     	;# 
  1066     070C                     	;# 
  1067     070D                     	;# 
  1068     070E                     	;# 
  1069     070F                     	;# 
  1070     0710                     	;# 
  1071     0711                     	;# 
  1072     0712                     	;# 
  1073     0713                     	;# 
  1074     0714                     	;# 
  1075     0716                     	;# 
  1076     0717                     	;# 
  1077     0718                     	;# 
  1078     0719                     	;# 
  1079     071A                     	;# 
  1080     071B                     	;# 
  1081     071C                     	;# 
  1082     071D                     	;# 
  1083     071E                     	;# 
  1084     0796                     	;# 
  1085     0797                     	;# 
  1086     0798                     	;# 
  1087     0799                     	;# 
  1088     079A                     	;# 
  1089     079B                     	;# 
  1090     079C                     	;# 
  1091     079D                     	;# 
  1092     080C                     	;# 
  1093     080D                     	;# 
  1094     080E                     	;# 
  1095     080F                     	;# 
  1096     0810                     	;# 
  1097     0811                     	;# 
  1098     0813                     	;# 
  1099     0814                     	;# 
  1100     081A                     	;# 
  1101     081A                     	;# 
  1102     081B                     	;# 
  1103     081C                     	;# 
  1104     081C                     	;# 
  1105     081D                     	;# 
  1106     081E                     	;# 
  1107     081F                     	;# 
  1108     088C                     	;# 
  1109     088D                     	;# 
  1110     088E                     	;# 
  1111     088F                     	;# 
  1112     0890                     	;# 
  1113     0891                     	;# 
  1114     0892                     	;# 
  1115     0893                     	;# 
  1116     0895                     	;# 
  1117     0896                     	;# 
  1118     0897                     	;# 
  1119     0898                     	;# 
  1120     0899                     	;# 
  1121     089A                     	;# 
  1122     089B                     	;# 
  1123     090C                     	;# 
  1124     090E                     	;# 
  1125     090F                     	;# 
  1126     091F                     	;# 
  1127     098F                     	;# 
  1128     098F                     	;# 
  1129     0990                     	;# 
  1130     0991                     	;# 
  1131     0992                     	;# 
  1132     0993                     	;# 
  1133     0994                     	;# 
  1134     0995                     	;# 
  1135     0996                     	;# 
  1136     0997                     	;# 
  1137     0A19                     	;# 
  1138     0A19                     	;# 
  1139     0A1A                     	;# 
  1140     0A1A                     	;# 
  1141     0A1B                     	;# 
  1142     0A1B                     	;# 
  1143     0A1B                     	;# 
  1144     0A1C                     	;# 
  1145     0A1C                     	;# 
  1146     0A1D                     	;# 
  1147     0A1D                     	;# 
  1148     0A1E                     	;# 
  1149     0A1E                     	;# 
  1150     0A1F                     	;# 
  1151     0A1F                     	;# 
  1152     0A1F                     	;# 
  1153     1E0F                     	;# 
  1154     1E10                     	;# 
  1155     1E11                     	;# 
  1156     1E12                     	;# 
  1157     1E13                     	;# 
  1158     1E14                     	;# 
  1159     1E15                     	;# 
  1160     1E16                     	;# 
  1161     1E17                     	;# 
  1162     1E18                     	;# 
  1163     1E19                     	;# 
  1164     1E1A                     	;# 
  1165     1E1B                     	;# 
  1166     1E1C                     	;# 
  1167     1E1D                     	;# 
  1168     1E1E                     	;# 
  1169     1E1F                     	;# 
  1170     1E20                     	;# 
  1171     1E21                     	;# 
  1172     1E22                     	;# 
  1173     1E23                     	;# 
  1174     1E24                     	;# 
  1175     1E25                     	;# 
  1176     1E26                     	;# 
  1177     1E27                     	;# 
  1178     1E28                     	;# 
  1179     1E29                     	;# 
  1180     1E2A                     	;# 
  1181     1E2B                     	;# 
  1182     1E2C                     	;# 
  1183     1E2D                     	;# 
  1184     1E2E                     	;# 
  1185     1E2F                     	;# 
  1186     1E30                     	;# 
  1187     1E31                     	;# 
  1188     1E32                     	;# 
  1189     1E33                     	;# 
  1190     1E34                     	;# 
  1191     1E35                     	;# 
  1192     1E36                     	;# 
  1193     1E37                     	;# 
  1194     1E8F                     	;# 
  1195     1E90                     	;# 
  1196     1E91                     	;# 
  1197     1E92                     	;# 
  1198     1E93                     	;# 
  1199     1E94                     	;# 
  1200     1E95                     	;# 
  1201     1E96                     	;# 
  1202     1E97                     	;# 
  1203     1E9C                     	;# 
  1204     1E9D                     	;# 
  1205     1E9E                     	;# 
  1206     1EA1                     	;# 
  1207     1EA2                     	;# 
  1208     1EA3                     	;# 
  1209     1EA4                     	;# 
  1210     1EA5                     	;# 
  1211     1EA9                     	;# 
  1212     1EAA                     	;# 
  1213     1EAB                     	;# 
  1214     1EAC                     	;# 
  1215     1EB1                     	;# 
  1216     1EB2                     	;# 
  1217     1EB3                     	;# 
  1218     1EB8                     	;# 
  1219     1EB9                     	;# 
  1220     1EBA                     	;# 
  1221     1EBB                     	;# 
  1222     1EBC                     	;# 
  1223     1EBD                     	;# 
  1224     1EBE                     	;# 
  1225     1EC3                     	;# 
  1226     1EC5                     	;# 
  1227     1EC6                     	;# 
  1228     1EC7                     	;# 
  1229     1EC8                     	;# 
  1230     1EC9                     	;# 
  1231     1ECA                     	;# 
  1232     1ECB                     	;# 
  1233     1ECC                     	;# 
  1234     1ECD                     	;# 
  1235     1ECE                     	;# 
  1236     1F10                     	;# 
  1237     1F11                     	;# 
  1238     1F12                     	;# 
  1239     1F13                     	;# 
  1240     1F14                     	;# 
  1241     1F15                     	;# 
  1242     1F16                     	;# 
  1243     1F17                     	;# 
  1244     1F18                     	;# 
  1245     1F19                     	;# 
  1246     1F1A                     	;# 
  1247     1F1B                     	;# 
  1248     1F1C                     	;# 
  1249     1F1D                     	;# 
  1250     1F1E                     	;# 
  1251     1F1F                     	;# 
  1252     1F20                     	;# 
  1253     1F21                     	;# 
  1254     1F22                     	;# 
  1255     1F23                     	;# 
  1256     1F24                     	;# 
  1257     1F25                     	;# 
  1258     1F26                     	;# 
  1259     1F27                     	;# 
  1260     1F38                     	;# 
  1261     1F39                     	;# 
  1262     1F3A                     	;# 
  1263     1F3B                     	;# 
  1264     1F3C                     	;# 
  1265     1F3D                     	;# 
  1266     1F3E                     	;# 
  1267     1F3F                     	;# 
  1268     1F43                     	;# 
  1269     1F44                     	;# 
  1270     1F45                     	;# 
  1271     1F46                     	;# 
  1272     1F47                     	;# 
  1273     1F48                     	;# 
  1274     1F49                     	;# 
  1275     1F4A                     	;# 
  1276     1F4E                     	;# 
  1277     1F4F                     	;# 
  1278     1F50                     	;# 
  1279     1F51                     	;# 
  1280     1F52                     	;# 
  1281     1F53                     	;# 
  1282     1F54                     	;# 
  1283     1F55                     	;# 
  1284     1F65                     	;# 
  1285     1F66                     	;# 
  1286     1F67                     	;# 
  1287     1F68                     	;# 
  1288     1F69                     	;# 
  1289     1F6A                     	;# 
  1290     1F6B                     	;# 
  1291     1FE4                     	;# 
  1292     1FE5                     	;# 
  1293     1FE6                     	;# 
  1294     1FE7                     	;# 
  1295     1FE8                     	;# 
  1296     1FE8                     	;# 
  1297     1FE9                     	;# 
  1298     1FEA                     	;# 
  1299     1FEB                     	;# 
  1300     1FED                     	;# 
  1301     1FEE                     	;# 
  1302     1FEF                     	;# 
  1303     0000                     	;# 
  1304     0001                     	;# 
  1305     0002                     	;# 
  1306     0003                     	;# 
  1307     0004                     	;# 
  1308     0005                     	;# 
  1309     0006                     	;# 
  1310     0007                     	;# 
  1311     0008                     	;# 
  1312     0009                     	;# 
  1313     000A                     	;# 
  1314     000B                     	;# 
  1315     000C                     	;# 
  1316     000D                     	;# 
  1317     000E                     	;# 
  1318     0010                     	;# 
  1319     0012                     	;# 
  1320     0013                     	;# 
  1321     0014                     	;# 
  1322     0016                     	;# 
  1323     0018                     	;# 
  1324     0019                     	;# 
  1325     001A                     	;# 
  1326     001C                     	;# 
  1327     008C                     	;# 
  1328     008C                     	;# 
  1329     008D                     	;# 
  1330     008E                     	;# 
  1331     008E                     	;# 
  1332     008F                     	;# 
  1333     0090                     	;# 
  1334     0090                     	;# 
  1335     0091                     	;# 
  1336     0092                     	;# 
  1337     0092                     	;# 
  1338     0093                     	;# 
  1339     0094                     	;# 
  1340     0094                     	;# 
  1341     0095                     	;# 
  1342     0096                     	;# 
  1343     0096                     	;# 
  1344     0097                     	;# 
  1345     0098                     	;# 
  1346     0099                     	;# 
  1347     009A                     	;# 
  1348     009B                     	;# 
  1349     009B                     	;# 
  1350     009C                     	;# 
  1351     009D                     	;# 
  1352     009D                     	;# 
  1353     009E                     	;# 
  1354     009F                     	;# 
  1355     010C                     	;# 
  1356     010C                     	;# 
  1357     010D                     	;# 
  1358     010E                     	;# 
  1359     010F                     	;# 
  1360     010F                     	;# 
  1361     0110                     	;# 
  1362     0111                     	;# 
  1363     0112                     	;# 
  1364     0113                     	;# 
  1365     0114                     	;# 
  1366     0115                     	;# 
  1367     0116                     	;# 
  1368     0117                     	;# 
  1369     0118                     	;# 
  1370     0119                     	;# 
  1371     0119                     	;# 
  1372     0119                     	;# 
  1373     011A                     	;# 
  1374     011A                     	;# 
  1375     011A                     	;# 
  1376     011B                     	;# 
  1377     011B                     	;# 
  1378     011B                     	;# 
  1379     011B                     	;# 
  1380     011B                     	;# 
  1381     011C                     	;# 
  1382     011C                     	;# 
  1383     011C                     	;# 
  1384     011D                     	;# 
  1385     011D                     	;# 
  1386     011D                     	;# 
  1387     011E                     	;# 
  1388     011E                     	;# 
  1389     011E                     	;# 
  1390     011F                     	;# 
  1391     011F                     	;# 
  1392     011F                     	;# 
  1393     011F                     	;# 
  1394     011F                     	;# 
  1395     018C                     	;# 
  1396     018D                     	;# 
  1397     018E                     	;# 
  1398     018F                     	;# 
  1399     0190                     	;# 
  1400     0191                     	;# 
  1401     0192                     	;# 
  1402     0196                     	;# 
  1403     0197                     	;# 
  1404     0198                     	;# 
  1405     0199                     	;# 
  1406     019A                     	;# 
  1407     019B                     	;# 
  1408     019C                     	;# 
  1409     020C                     	;# 
  1410     020D                     	;# 
  1411     020E                     	;# 
  1412     020E                     	;# 
  1413     020F                     	;# 
  1414     020F                     	;# 
  1415     0210                     	;# 
  1416     0210                     	;# 
  1417     0211                     	;# 
  1418     0211                     	;# 
  1419     0212                     	;# 
  1420     0213                     	;# 
  1421     0214                     	;# 
  1422     0214                     	;# 
  1423     0215                     	;# 
  1424     0215                     	;# 
  1425     0216                     	;# 
  1426     0216                     	;# 
  1427     0217                     	;# 
  1428     0217                     	;# 
  1429     0218                     	;# 
  1430     0219                     	;# 
  1431     021A                     	;# 
  1432     021A                     	;# 
  1433     021B                     	;# 
  1434     021B                     	;# 
  1435     021C                     	;# 
  1436     021C                     	;# 
  1437     021D                     	;# 
  1438     021D                     	;# 
  1439     021E                     	;# 
  1440     021F                     	;# 
  1441     028C                     	;# 
  1442     028C                     	;# 
  1443     028D                     	;# 
  1444     028D                     	;# 
  1445     028E                     	;# 
  1446     028F                     	;# 
  1447     0290                     	;# 
  1448     0291                     	;# 
  1449     0292                     	;# 
  1450     0292                     	;# 
  1451     0293                     	;# 
  1452     0293                     	;# 
  1453     0294                     	;# 
  1454     0295                     	;# 
  1455     0296                     	;# 
  1456     0297                     	;# 
  1457     0298                     	;# 
  1458     0298                     	;# 
  1459     0299                     	;# 
  1460     0299                     	;# 
  1461     029A                     	;# 
  1462     029B                     	;# 
  1463     029C                     	;# 
  1464     029D                     	;# 
  1465     029F                     	;# 
  1466     030C                     	;# 
  1467     030C                     	;# 
  1468     030D                     	;# 
  1469     030E                     	;# 
  1470     030F                     	;# 
  1471     0310                     	;# 
  1472     0310                     	;# 
  1473     0311                     	;# 
  1474     0312                     	;# 
  1475     0313                     	;# 
  1476     0314                     	;# 
  1477     0314                     	;# 
  1478     0315                     	;# 
  1479     0316                     	;# 
  1480     0317                     	;# 
  1481     0318                     	;# 
  1482     0318                     	;# 
  1483     0319                     	;# 
  1484     031A                     	;# 
  1485     031B                     	;# 
  1486     031C                     	;# 
  1487     031C                     	;# 
  1488     031D                     	;# 
  1489     031E                     	;# 
  1490     031F                     	;# 
  1491     038C                     	;# 
  1492     038C                     	;# 
  1493     038D                     	;# 
  1494     038E                     	;# 
  1495     0390                     	;# 
  1496     0390                     	;# 
  1497     0391                     	;# 
  1498     0392                     	;# 
  1499     048C                     	;# 
  1500     048C                     	;# 
  1501     048D                     	;# 
  1502     048E                     	;# 
  1503     048F                     	;# 
  1504     048F                     	;# 
  1505     0490                     	;# 
  1506     0491                     	;# 
  1507     0492                     	;# 
  1508     0492                     	;# 
  1509     0493                     	;# 
  1510     0494                     	;# 
  1511     0495                     	;# 
  1512     0495                     	;# 
  1513     0496                     	;# 
  1514     0497                     	;# 
  1515     0498                     	;# 
  1516     0499                     	;# 
  1517     049A                     	;# 
  1518     049B                     	;# 
  1519     049C                     	;# 
  1520     049D                     	;# 
  1521     050C                     	;# 
  1522     050C                     	;# 
  1523     050D                     	;# 
  1524     050E                     	;# 
  1525     050F                     	;# 
  1526     050F                     	;# 
  1527     0510                     	;# 
  1528     0511                     	;# 
  1529     0512                     	;# 
  1530     0512                     	;# 
  1531     0513                     	;# 
  1532     0514                     	;# 
  1533     0515                     	;# 
  1534     0515                     	;# 
  1535     0516                     	;# 
  1536     0517                     	;# 
  1537     0518                     	;# 
  1538     0519                     	;# 
  1539     051A                     	;# 
  1540     051B                     	;# 
  1541     051C                     	;# 
  1542     051D                     	;# 
  1543     058C                     	;# 
  1544     058C                     	;# 
  1545     058D                     	;# 
  1546     058E                     	;# 
  1547     058F                     	;# 
  1548     058F                     	;# 
  1549     0590                     	;# 
  1550     0591                     	;# 
  1551     0592                     	;# 
  1552     0593                     	;# 
  1553     059C                     	;# 
  1554     059C                     	;# 
  1555     059D                     	;# 
  1556     059D                     	;# 
  1557     059E                     	;# 
  1558     059F                     	;# 
  1559     060C                     	;# 
  1560     060C                     	;# 
  1561     060D                     	;# 
  1562     060D                     	;# 
  1563     060E                     	;# 
  1564     060F                     	;# 
  1565     0610                     	;# 
  1566     0611                     	;# 
  1567     0612                     	;# 
  1568     0613                     	;# 
  1569     0614                     	;# 
  1570     0616                     	;# 
  1571     0616                     	;# 
  1572     0617                     	;# 
  1573     0617                     	;# 
  1574     0618                     	;# 
  1575     0619                     	;# 
  1576     061A                     	;# 
  1577     061B                     	;# 
  1578     061C                     	;# 
  1579     061D                     	;# 
  1580     061E                     	;# 
  1581     068C                     	;# 
  1582     068D                     	;# 
  1583     068E                     	;# 
  1584     068F                     	;# 
  1585     0690                     	;# 
  1586     0691                     	;# 
  1587     0692                     	;# 
  1588     0693                     	;# 
  1589     0694                     	;# 
  1590     070C                     	;# 
  1591     070D                     	;# 
  1592     070E                     	;# 
  1593     070F                     	;# 
  1594     0710                     	;# 
  1595     0711                     	;# 
  1596     0712                     	;# 
  1597     0713                     	;# 
  1598     0714                     	;# 
  1599     0716                     	;# 
  1600     0717                     	;# 
  1601     0718                     	;# 
  1602     0719                     	;# 
  1603     071A                     	;# 
  1604     071B                     	;# 
  1605     071C                     	;# 
  1606     071D                     	;# 
  1607     071E                     	;# 
  1608     0796                     	;# 
  1609     0797                     	;# 
  1610     0798                     	;# 
  1611     0799                     	;# 
  1612     079A                     	;# 
  1613     079B                     	;# 
  1614     079C                     	;# 
  1615     079D                     	;# 
  1616     080C                     	;# 
  1617     080D                     	;# 
  1618     080E                     	;# 
  1619     080F                     	;# 
  1620     0810                     	;# 
  1621     0811                     	;# 
  1622     0813                     	;# 
  1623     0814                     	;# 
  1624     081A                     	;# 
  1625     081A                     	;# 
  1626     081B                     	;# 
  1627     081C                     	;# 
  1628     081C                     	;# 
  1629     081D                     	;# 
  1630     081E                     	;# 
  1631     081F                     	;# 
  1632     088C                     	;# 
  1633     088D                     	;# 
  1634     088E                     	;# 
  1635     088F                     	;# 
  1636     0890                     	;# 
  1637     0891                     	;# 
  1638     0892                     	;# 
  1639     0893                     	;# 
  1640     0895                     	;# 
  1641     0896                     	;# 
  1642     0897                     	;# 
  1643     0898                     	;# 
  1644     0899                     	;# 
  1645     089A                     	;# 
  1646     089B                     	;# 
  1647     090C                     	;# 
  1648     090E                     	;# 
  1649     090F                     	;# 
  1650     091F                     	;# 
  1651     098F                     	;# 
  1652     098F                     	;# 
  1653     0990                     	;# 
  1654     0991                     	;# 
  1655     0992                     	;# 
  1656     0993                     	;# 
  1657     0994                     	;# 
  1658     0995                     	;# 
  1659     0996                     	;# 
  1660     0997                     	;# 
  1661     0A19                     	;# 
  1662     0A19                     	;# 
  1663     0A1A                     	;# 
  1664     0A1A                     	;# 
  1665     0A1B                     	;# 
  1666     0A1B                     	;# 
  1667     0A1B                     	;# 
  1668     0A1C                     	;# 
  1669     0A1C                     	;# 
  1670     0A1D                     	;# 
  1671     0A1D                     	;# 
  1672     0A1E                     	;# 
  1673     0A1E                     	;# 
  1674     0A1F                     	;# 
  1675     0A1F                     	;# 
  1676     0A1F                     	;# 
  1677     1E0F                     	;# 
  1678     1E10                     	;# 
  1679     1E11                     	;# 
  1680     1E12                     	;# 
  1681     1E13                     	;# 
  1682     1E14                     	;# 
  1683     1E15                     	;# 
  1684     1E16                     	;# 
  1685     1E17                     	;# 
  1686     1E18                     	;# 
  1687     1E19                     	;# 
  1688     1E1A                     	;# 
  1689     1E1B                     	;# 
  1690     1E1C                     	;# 
  1691     1E1D                     	;# 
  1692     1E1E                     	;# 
  1693     1E1F                     	;# 
  1694     1E20                     	;# 
  1695     1E21                     	;# 
  1696     1E22                     	;# 
  1697     1E23                     	;# 
  1698     1E24                     	;# 
  1699     1E25                     	;# 
  1700     1E26                     	;# 
  1701     1E27                     	;# 
  1702     1E28                     	;# 
  1703     1E29                     	;# 
  1704     1E2A                     	;# 
  1705     1E2B                     	;# 
  1706     1E2C                     	;# 
  1707     1E2D                     	;# 
  1708     1E2E                     	;# 
  1709     1E2F                     	;# 
  1710     1E30                     	;# 
  1711     1E31                     	;# 
  1712     1E32                     	;# 
  1713     1E33                     	;# 
  1714     1E34                     	;# 
  1715     1E35                     	;# 
  1716     1E36                     	;# 
  1717     1E37                     	;# 
  1718     1E8F                     	;# 
  1719     1E90                     	;# 
  1720     1E91                     	;# 
  1721     1E92                     	;# 
  1722     1E93                     	;# 
  1723     1E94                     	;# 
  1724     1E95                     	;# 
  1725     1E96                     	;# 
  1726     1E97                     	;# 
  1727     1E9C                     	;# 
  1728     1E9D                     	;# 
  1729     1E9E                     	;# 
  1730     1EA1                     	;# 
  1731     1EA2                     	;# 
  1732     1EA3                     	;# 
  1733     1EA4                     	;# 
  1734     1EA5                     	;# 
  1735     1EA9                     	;# 
  1736     1EAA                     	;# 
  1737     1EAB                     	;# 
  1738     1EAC                     	;# 
  1739     1EB1                     	;# 
  1740     1EB2                     	;# 
  1741     1EB3                     	;# 
  1742     1EB8                     	;# 
  1743     1EB9                     	;# 
  1744     1EBA                     	;# 
  1745     1EBB                     	;# 
  1746     1EBC                     	;# 
  1747     1EBD                     	;# 
  1748     1EBE                     	;# 
  1749     1EC3                     	;# 
  1750     1EC5                     	;# 
  1751     1EC6                     	;# 
  1752     1EC7                     	;# 
  1753     1EC8                     	;# 
  1754     1EC9                     	;# 
  1755     1ECA                     	;# 
  1756     1ECB                     	;# 
  1757     1ECC                     	;# 
  1758     1ECD                     	;# 
  1759     1ECE                     	;# 
  1760     1F10                     	;# 
  1761     1F11                     	;# 
  1762     1F12                     	;# 
  1763     1F13                     	;# 
  1764     1F14                     	;# 
  1765     1F15                     	;# 
  1766     1F16                     	;# 
  1767     1F17                     	;# 
  1768     1F18                     	;# 
  1769     1F19                     	;# 
  1770     1F1A                     	;# 
  1771     1F1B                     	;# 
  1772     1F1C                     	;# 
  1773     1F1D                     	;# 
  1774     1F1E                     	;# 
  1775     1F1F                     	;# 
  1776     1F20                     	;# 
  1777     1F21                     	;# 
  1778     1F22                     	;# 
  1779     1F23                     	;# 
  1780     1F24                     	;# 
  1781     1F25                     	;# 
  1782     1F26                     	;# 
  1783     1F27                     	;# 
  1784     1F38                     	;# 
  1785     1F39                     	;# 
  1786     1F3A                     	;# 
  1787     1F3B                     	;# 
  1788     1F3C                     	;# 
  1789     1F3D                     	;# 
  1790     1F3E                     	;# 
  1791     1F3F                     	;# 
  1792     1F43                     	;# 
  1793     1F44                     	;# 
  1794     1F45                     	;# 
  1795     1F46                     	;# 
  1796     1F47                     	;# 
  1797     1F48                     	;# 
  1798     1F49                     	;# 
  1799     1F4A                     	;# 
  1800     1F4E                     	;# 
  1801     1F4F                     	;# 
  1802     1F50                     	;# 
  1803     1F51                     	;# 
  1804     1F52                     	;# 
  1805     1F53                     	;# 
  1806     1F54                     	;# 
  1807     1F55                     	;# 
  1808     1F65                     	;# 
  1809     1F66                     	;# 
  1810     1F67                     	;# 
  1811     1F68                     	;# 
  1812     1F69                     	;# 
  1813     1F6A                     	;# 
  1814     1F6B                     	;# 
  1815     1FE4                     	;# 
  1816     1FE5                     	;# 
  1817     1FE6                     	;# 
  1818     1FE7                     	;# 
  1819     1FE8                     	;# 
  1820     1FE8                     	;# 
  1821     1FE9                     	;# 
  1822     1FEA                     	;# 
  1823     1FEB                     	;# 
  1824     1FED                     	;# 
  1825     1FEE                     	;# 
  1826     1FEF                     	;# 
  1827     0000                     	;# 
  1828     0001                     	;# 
  1829     0002                     	;# 
  1830     0003                     	;# 
  1831     0004                     	;# 
  1832     0005                     	;# 
  1833     0006                     	;# 
  1834     0007                     	;# 
  1835     0008                     	;# 
  1836     0009                     	;# 
  1837     000A                     	;# 
  1838     000B                     	;# 
  1839     000C                     	;# 
  1840     000D                     	;# 
  1841     000E                     	;# 
  1842     0010                     	;# 
  1843     0012                     	;# 
  1844     0013                     	;# 
  1845     0014                     	;# 
  1846     0016                     	;# 
  1847     0018                     	;# 
  1848     0019                     	;# 
  1849     001A                     	;# 
  1850     001C                     	;# 
  1851     008C                     	;# 
  1852     008C                     	;# 
  1853     008D                     	;# 
  1854     008E                     	;# 
  1855     008E                     	;# 
  1856     008F                     	;# 
  1857     0090                     	;# 
  1858     0090                     	;# 
  1859     0091                     	;# 
  1860     0092                     	;# 
  1861     0092                     	;# 
  1862     0093                     	;# 
  1863     0094                     	;# 
  1864     0094                     	;# 
  1865     0095                     	;# 
  1866     0096                     	;# 
  1867     0096                     	;# 
  1868     0097                     	;# 
  1869     0098                     	;# 
  1870     0099                     	;# 
  1871     009A                     	;# 
  1872     009B                     	;# 
  1873     009B                     	;# 
  1874     009C                     	;# 
  1875     009D                     	;# 
  1876     009D                     	;# 
  1877     009E                     	;# 
  1878     009F                     	;# 
  1879     010C                     	;# 
  1880     010C                     	;# 
  1881     010D                     	;# 
  1882     010E                     	;# 
  1883     010F                     	;# 
  1884     010F                     	;# 
  1885     0110                     	;# 
  1886     0111                     	;# 
  1887     0112                     	;# 
  1888     0113                     	;# 
  1889     0114                     	;# 
  1890     0115                     	;# 
  1891     0116                     	;# 
  1892     0117                     	;# 
  1893     0118                     	;# 
  1894     0119                     	;# 
  1895     0119                     	;# 
  1896     0119                     	;# 
  1897     011A                     	;# 
  1898     011A                     	;# 
  1899     011A                     	;# 
  1900     011B                     	;# 
  1901     011B                     	;# 
  1902     011B                     	;# 
  1903     011B                     	;# 
  1904     011B                     	;# 
  1905     011C                     	;# 
  1906     011C                     	;# 
  1907     011C                     	;# 
  1908     011D                     	;# 
  1909     011D                     	;# 
  1910     011D                     	;# 
  1911     011E                     	;# 
  1912     011E                     	;# 
  1913     011E                     	;# 
  1914     011F                     	;# 
  1915     011F                     	;# 
  1916     011F                     	;# 
  1917     011F                     	;# 
  1918     011F                     	;# 
  1919     018C                     	;# 
  1920     018D                     	;# 
  1921     018E                     	;# 
  1922     018F                     	;# 
  1923     0190                     	;# 
  1924     0191                     	;# 
  1925     0192                     	;# 
  1926     0196                     	;# 
  1927     0197                     	;# 
  1928     0198                     	;# 
  1929     0199                     	;# 
  1930     019A                     	;# 
  1931     019B                     	;# 
  1932     019C                     	;# 
  1933     020C                     	;# 
  1934     020D                     	;# 
  1935     020E                     	;# 
  1936     020E                     	;# 
  1937     020F                     	;# 
  1938     020F                     	;# 
  1939     0210                     	;# 
  1940     0210                     	;# 
  1941     0211                     	;# 
  1942     0211                     	;# 
  1943     0212                     	;# 
  1944     0213                     	;# 
  1945     0214                     	;# 
  1946     0214                     	;# 
  1947     0215                     	;# 
  1948     0215                     	;# 
  1949     0216                     	;# 
  1950     0216                     	;# 
  1951     0217                     	;# 
  1952     0217                     	;# 
  1953     0218                     	;# 
  1954     0219                     	;# 
  1955     021A                     	;# 
  1956     021A                     	;# 
  1957     021B                     	;# 
  1958     021B                     	;# 
  1959     021C                     	;# 
  1960     021C                     	;# 
  1961     021D                     	;# 
  1962     021D                     	;# 
  1963     021E                     	;# 
  1964     021F                     	;# 
  1965     028C                     	;# 
  1966     028C                     	;# 
  1967     028D                     	;# 
  1968     028D                     	;# 
  1969     028E                     	;# 
  1970     028F                     	;# 
  1971     0290                     	;# 
  1972     0291                     	;# 
  1973     0292                     	;# 
  1974     0292                     	;# 
  1975     0293                     	;# 
  1976     0293                     	;# 
  1977     0294                     	;# 
  1978     0295                     	;# 
  1979     0296                     	;# 
  1980     0297                     	;# 
  1981     0298                     	;# 
  1982     0298                     	;# 
  1983     0299                     	;# 
  1984     0299                     	;# 
  1985     029A                     	;# 
  1986     029B                     	;# 
  1987     029C                     	;# 
  1988     029D                     	;# 
  1989     029F                     	;# 
  1990     030C                     	;# 
  1991     030C                     	;# 
  1992     030D                     	;# 
  1993     030E                     	;# 
  1994     030F                     	;# 
  1995     0310                     	;# 
  1996     0310                     	;# 
  1997     0311                     	;# 
  1998     0312                     	;# 
  1999     0313                     	;# 
  2000     0314                     	;# 
  2001     0314                     	;# 
  2002     0315                     	;# 
  2003     0316                     	;# 
  2004     0317                     	;# 
  2005     0318                     	;# 
  2006     0318                     	;# 
  2007     0319                     	;# 
  2008     031A                     	;# 
  2009     031B                     	;# 
  2010     031C                     	;# 
  2011     031C                     	;# 
  2012     031D                     	;# 
  2013     031E                     	;# 
  2014     031F                     	;# 
  2015     038C                     	;# 
  2016     038C                     	;# 
  2017     038D                     	;# 
  2018     038E                     	;# 
  2019     0390                     	;# 
  2020     0390                     	;# 
  2021     0391                     	;# 
  2022     0392                     	;# 
  2023     048C                     	;# 
  2024     048C                     	;# 
  2025     048D                     	;# 
  2026     048E                     	;# 
  2027     048F                     	;# 
  2028     048F                     	;# 
  2029     0490                     	;# 
  2030     0491                     	;# 
  2031     0492                     	;# 
  2032     0492                     	;# 
  2033     0493                     	;# 
  2034     0494                     	;# 
  2035     0495                     	;# 
  2036     0495                     	;# 
  2037     0496                     	;# 
  2038     0497                     	;# 
  2039     0498                     	;# 
  2040     0499                     	;# 
  2041     049A                     	;# 
  2042     049B                     	;# 
  2043     049C                     	;# 
  2044     049D                     	;# 
  2045     050C                     	;# 
  2046     050C                     	;# 
  2047     050D                     	;# 
  2048     050E                     	;# 
  2049     050F                     	;# 
  2050     050F                     	;# 
  2051     0510                     	;# 
  2052     0511                     	;# 
  2053     0512                     	;# 
  2054     0512                     	;# 
  2055     0513                     	;# 
  2056     0514                     	;# 
  2057     0515                     	;# 
  2058     0515                     	;# 
  2059     0516                     	;# 
  2060     0517                     	;# 
  2061     0518                     	;# 
  2062     0519                     	;# 
  2063     051A                     	;# 
  2064     051B                     	;# 
  2065     051C                     	;# 
  2066     051D                     	;# 
  2067     058C                     	;# 
  2068     058C                     	;# 
  2069     058D                     	;# 
  2070     058E                     	;# 
  2071     058F                     	;# 
  2072     058F                     	;# 
  2073     0590                     	;# 
  2074     0591                     	;# 
  2075     0592                     	;# 
  2076     0593                     	;# 
  2077     059C                     	;# 
  2078     059C                     	;# 
  2079     059D                     	;# 
  2080     059D                     	;# 
  2081     059E                     	;# 
  2082     059F                     	;# 
  2083     060C                     	;# 
  2084     060C                     	;# 
  2085     060D                     	;# 
  2086     060D                     	;# 
  2087     060E                     	;# 
  2088     060F                     	;# 
  2089     0610                     	;# 
  2090     0611                     	;# 
  2091     0612                     	;# 
  2092     0613                     	;# 
  2093     0614                     	;# 
  2094     0616                     	;# 
  2095     0616                     	;# 
  2096     0617                     	;# 
  2097     0617                     	;# 
  2098     0618                     	;# 
  2099     0619                     	;# 
  2100     061A                     	;# 
  2101     061B                     	;# 
  2102     061C                     	;# 
  2103     061D                     	;# 
  2104     061E                     	;# 
  2105     068C                     	;# 
  2106     068D                     	;# 
  2107     068E                     	;# 
  2108     068F                     	;# 
  2109     0690                     	;# 
  2110     0691                     	;# 
  2111     0692                     	;# 
  2112     0693                     	;# 
  2113     0694                     	;# 
  2114     070C                     	;# 
  2115     070D                     	;# 
  2116     070E                     	;# 
  2117     070F                     	;# 
  2118     0710                     	;# 
  2119     0711                     	;# 
  2120     0712                     	;# 
  2121     0713                     	;# 
  2122     0714                     	;# 
  2123     0716                     	;# 
  2124     0717                     	;# 
  2125     0718                     	;# 
  2126     0719                     	;# 
  2127     071A                     	;# 
  2128     071B                     	;# 
  2129     071C                     	;# 
  2130     071D                     	;# 
  2131     071E                     	;# 
  2132     0796                     	;# 
  2133     0797                     	;# 
  2134     0798                     	;# 
  2135     0799                     	;# 
  2136     079A                     	;# 
  2137     079B                     	;# 
  2138     079C                     	;# 
  2139     079D                     	;# 
  2140     080C                     	;# 
  2141     080D                     	;# 
  2142     080E                     	;# 
  2143     080F                     	;# 
  2144     0810                     	;# 
  2145     0811                     	;# 
  2146     0813                     	;# 
  2147     0814                     	;# 
  2148     081A                     	;# 
  2149     081A                     	;# 
  2150     081B                     	;# 
  2151     081C                     	;# 
  2152     081C                     	;# 
  2153     081D                     	;# 
  2154     081E                     	;# 
  2155     081F                     	;# 
  2156     088C                     	;# 
  2157     088D                     	;# 
  2158     088E                     	;# 
  2159     088F                     	;# 
  2160     0890                     	;# 
  2161     0891                     	;# 
  2162     0892                     	;# 
  2163     0893                     	;# 
  2164     0895                     	;# 
  2165     0896                     	;# 
  2166     0897                     	;# 
  2167     0898                     	;# 
  2168     0899                     	;# 
  2169     089A                     	;# 
  2170     089B                     	;# 
  2171     090C                     	;# 
  2172     090E                     	;# 
  2173     090F                     	;# 
  2174     091F                     	;# 
  2175     098F                     	;# 
  2176     098F                     	;# 
  2177     0990                     	;# 
  2178     0991                     	;# 
  2179     0992                     	;# 
  2180     0993                     	;# 
  2181     0994                     	;# 
  2182     0995                     	;# 
  2183     0996                     	;# 
  2184     0997                     	;# 
  2185     0A19                     	;# 
  2186     0A19                     	;# 
  2187     0A1A                     	;# 
  2188     0A1A                     	;# 
  2189     0A1B                     	;# 
  2190     0A1B                     	;# 
  2191     0A1B                     	;# 
  2192     0A1C                     	;# 
  2193     0A1C                     	;# 
  2194     0A1D                     	;# 
  2195     0A1D                     	;# 
  2196     0A1E                     	;# 
  2197     0A1E                     	;# 
  2198     0A1F                     	;# 
  2199     0A1F                     	;# 
  2200     0A1F                     	;# 
  2201     1E0F                     	;# 
  2202     1E10                     	;# 
  2203     1E11                     	;# 
  2204     1E12                     	;# 
  2205     1E13                     	;# 
  2206     1E14                     	;# 
  2207     1E15                     	;# 
  2208     1E16                     	;# 
  2209     1E17                     	;# 
  2210     1E18                     	;# 
  2211     1E19                     	;# 
  2212     1E1A                     	;# 
  2213     1E1B                     	;# 
  2214     1E1C                     	;# 
  2215     1E1D                     	;# 
  2216     1E1E                     	;# 
  2217     1E1F                     	;# 
  2218     1E20                     	;# 
  2219     1E21                     	;# 
  2220     1E22                     	;# 
  2221     1E23                     	;# 
  2222     1E24                     	;# 
  2223     1E25                     	;# 
  2224     1E26                     	;# 
  2225     1E27                     	;# 
  2226     1E28                     	;# 
  2227     1E29                     	;# 
  2228     1E2A                     	;# 
  2229     1E2B                     	;# 
  2230     1E2C                     	;# 
  2231     1E2D                     	;# 
  2232     1E2E                     	;# 
  2233     1E2F                     	;# 
  2234     1E30                     	;# 
  2235     1E31                     	;# 
  2236     1E32                     	;# 
  2237     1E33                     	;# 
  2238     1E34                     	;# 
  2239     1E35                     	;# 
  2240     1E36                     	;# 
  2241     1E37                     	;# 
  2242     1E8F                     	;# 
  2243     1E90                     	;# 
  2244     1E91                     	;# 
  2245     1E92                     	;# 
  2246     1E93                     	;# 
  2247     1E94                     	;# 
  2248     1E95                     	;# 
  2249     1E96                     	;# 
  2250     1E97                     	;# 
  2251     1E9C                     	;# 
  2252     1E9D                     	;# 
  2253     1E9E                     	;# 
  2254     1EA1                     	;# 
  2255     1EA2                     	;# 
  2256     1EA3                     	;# 
  2257     1EA4                     	;# 
  2258     1EA5                     	;# 
  2259     1EA9                     	;# 
  2260     1EAA                     	;# 
  2261     1EAB                     	;# 
  2262     1EAC                     	;# 
  2263     1EB1                     	;# 
  2264     1EB2                     	;# 
  2265     1EB3                     	;# 
  2266     1EB8                     	;# 
  2267     1EB9                     	;# 
  2268     1EBA                     	;# 
  2269     1EBB                     	;# 
  2270     1EBC                     	;# 
  2271     1EBD                     	;# 
  2272     1EBE                     	;# 
  2273     1EC3                     	;# 
  2274     1EC5                     	;# 
  2275     1EC6                     	;# 
  2276     1EC7                     	;# 
  2277     1EC8                     	;# 
  2278     1EC9                     	;# 
  2279     1ECA                     	;# 
  2280     1ECB                     	;# 
  2281     1ECC                     	;# 
  2282     1ECD                     	;# 
  2283     1ECE                     	;# 
  2284     1F10                     	;# 
  2285     1F11                     	;# 
  2286     1F12                     	;# 
  2287     1F13                     	;# 
  2288     1F14                     	;# 
  2289     1F15                     	;# 
  2290     1F16                     	;# 
  2291     1F17                     	;# 
  2292     1F18                     	;# 
  2293     1F19                     	;# 
  2294     1F1A                     	;# 
  2295     1F1B                     	;# 
  2296     1F1C                     	;# 
  2297     1F1D                     	;# 
  2298     1F1E                     	;# 
  2299     1F1F                     	;# 
  2300     1F20                     	;# 
  2301     1F21                     	;# 
  2302     1F22                     	;# 
  2303     1F23                     	;# 
  2304     1F24                     	;# 
  2305     1F25                     	;# 
  2306     1F26                     	;# 
  2307     1F27                     	;# 
  2308     1F38                     	;# 
  2309     1F39                     	;# 
  2310     1F3A                     	;# 
  2311     1F3B                     	;# 
  2312     1F3C                     	;# 
  2313     1F3D                     	;# 
  2314     1F3E                     	;# 
  2315     1F3F                     	;# 
  2316     1F43                     	;# 
  2317     1F44                     	;# 
  2318     1F45                     	;# 
  2319     1F46                     	;# 
  2320     1F47                     	;# 
  2321     1F48                     	;# 
  2322     1F49                     	;# 
  2323     1F4A                     	;# 
  2324     1F4E                     	;# 
  2325     1F4F                     	;# 
  2326     1F50                     	;# 
  2327     1F51                     	;# 
  2328     1F52                     	;# 
  2329     1F53                     	;# 
  2330     1F54                     	;# 
  2331     1F55                     	;# 
  2332     1F65                     	;# 
  2333     1F66                     	;# 
  2334     1F67                     	;# 
  2335     1F68                     	;# 
  2336     1F69                     	;# 
  2337     1F6A                     	;# 
  2338     1F6B                     	;# 
  2339     1FE4                     	;# 
  2340     1FE5                     	;# 
  2341     1FE6                     	;# 
  2342     1FE7                     	;# 
  2343     1FE8                     	;# 
  2344     1FE8                     	;# 
  2345     1FE9                     	;# 
  2346     1FEA                     	;# 
  2347     1FEB                     	;# 
  2348     1FED                     	;# 
  2349     1FEE                     	;# 
  2350     1FEF                     	;# 
  2351     0000                     	;# 
  2352     0001                     	;# 
  2353     0002                     	;# 
  2354     0003                     	;# 
  2355     0004                     	;# 
  2356     0005                     	;# 
  2357     0006                     	;# 
  2358     0007                     	;# 
  2359     0008                     	;# 
  2360     0009                     	;# 
  2361     000A                     	;# 
  2362     000B                     	;# 
  2363     000C                     	;# 
  2364     000D                     	;# 
  2365     000E                     	;# 
  2366     0010                     	;# 
  2367     0012                     	;# 
  2368     0013                     	;# 
  2369     0014                     	;# 
  2370     0016                     	;# 
  2371     0018                     	;# 
  2372     0019                     	;# 
  2373     001A                     	;# 
  2374     001C                     	;# 
  2375     008C                     	;# 
  2376     008C                     	;# 
  2377     008D                     	;# 
  2378     008E                     	;# 
  2379     008E                     	;# 
  2380     008F                     	;# 
  2381     0090                     	;# 
  2382     0090                     	;# 
  2383     0091                     	;# 
  2384     0092                     	;# 
  2385     0092                     	;# 
  2386     0093                     	;# 
  2387     0094                     	;# 
  2388     0094                     	;# 
  2389     0095                     	;# 
  2390     0096                     	;# 
  2391     0096                     	;# 
  2392     0097                     	;# 
  2393     0098                     	;# 
  2394     0099                     	;# 
  2395     009A                     	;# 
  2396     009B                     	;# 
  2397     009B                     	;# 
  2398     009C                     	;# 
  2399     009D                     	;# 
  2400     009D                     	;# 
  2401     009E                     	;# 
  2402     009F                     	;# 
  2403     010C                     	;# 
  2404     010C                     	;# 
  2405     010D                     	;# 
  2406     010E                     	;# 
  2407     010F                     	;# 
  2408     010F                     	;# 
  2409     0110                     	;# 
  2410     0111                     	;# 
  2411     0112                     	;# 
  2412     0113                     	;# 
  2413     0114                     	;# 
  2414     0115                     	;# 
  2415     0116                     	;# 
  2416     0117                     	;# 
  2417     0118                     	;# 
  2418     0119                     	;# 
  2419     0119                     	;# 
  2420     0119                     	;# 
  2421     011A                     	;# 
  2422     011A                     	;# 
  2423     011A                     	;# 
  2424     011B                     	;# 
  2425     011B                     	;# 
  2426     011B                     	;# 
  2427     011B                     	;# 
  2428     011B                     	;# 
  2429     011C                     	;# 
  2430     011C                     	;# 
  2431     011C                     	;# 
  2432     011D                     	;# 
  2433     011D                     	;# 
  2434     011D                     	;# 
  2435     011E                     	;# 
  2436     011E                     	;# 
  2437     011E                     	;# 
  2438     011F                     	;# 
  2439     011F                     	;# 
  2440     011F                     	;# 
  2441     011F                     	;# 
  2442     011F                     	;# 
  2443     018C                     	;# 
  2444     018D                     	;# 
  2445     018E                     	;# 
  2446     018F                     	;# 
  2447     0190                     	;# 
  2448     0191                     	;# 
  2449     0192                     	;# 
  2450     0196                     	;# 
  2451     0197                     	;# 
  2452     0198                     	;# 
  2453     0199                     	;# 
  2454     019A                     	;# 
  2455     019B                     	;# 
  2456     019C                     	;# 
  2457     020C                     	;# 
  2458     020D                     	;# 
  2459     020E                     	;# 
  2460     020E                     	;# 
  2461     020F                     	;# 
  2462     020F                     	;# 
  2463     0210                     	;# 
  2464     0210                     	;# 
  2465     0211                     	;# 
  2466     0211                     	;# 
  2467     0212                     	;# 
  2468     0213                     	;# 
  2469     0214                     	;# 
  2470     0214                     	;# 
  2471     0215                     	;# 
  2472     0215                     	;# 
  2473     0216                     	;# 
  2474     0216                     	;# 
  2475     0217                     	;# 
  2476     0217                     	;# 
  2477     0218                     	;# 
  2478     0219                     	;# 
  2479     021A                     	;# 
  2480     021A                     	;# 
  2481     021B                     	;# 
  2482     021B                     	;# 
  2483     021C                     	;# 
  2484     021C                     	;# 
  2485     021D                     	;# 
  2486     021D                     	;# 
  2487     021E                     	;# 
  2488     021F                     	;# 
  2489     028C                     	;# 
  2490     028C                     	;# 
  2491     028D                     	;# 
  2492     028D                     	;# 
  2493     028E                     	;# 
  2494     028F                     	;# 
  2495     0290                     	;# 
  2496     0291                     	;# 
  2497     0292                     	;# 
  2498     0292                     	;# 
  2499     0293                     	;# 
  2500     0293                     	;# 
  2501     0294                     	;# 
  2502     0295                     	;# 
  2503     0296                     	;# 
  2504     0297                     	;# 
  2505     0298                     	;# 
  2506     0298                     	;# 
  2507     0299                     	;# 
  2508     0299                     	;# 
  2509     029A                     	;# 
  2510     029B                     	;# 
  2511     029C                     	;# 
  2512     029D                     	;# 
  2513     029F                     	;# 
  2514     030C                     	;# 
  2515     030C                     	;# 
  2516     030D                     	;# 
  2517     030E                     	;# 
  2518     030F                     	;# 
  2519     0310                     	;# 
  2520     0310                     	;# 
  2521     0311                     	;# 
  2522     0312                     	;# 
  2523     0313                     	;# 
  2524     0314                     	;# 
  2525     0314                     	;# 
  2526     0315                     	;# 
  2527     0316                     	;# 
  2528     0317                     	;# 
  2529     0318                     	;# 
  2530     0318                     	;# 
  2531     0319                     	;# 
  2532     031A                     	;# 
  2533     031B                     	;# 
  2534     031C                     	;# 
  2535     031C                     	;# 
  2536     031D                     	;# 
  2537     031E                     	;# 
  2538     031F                     	;# 
  2539     038C                     	;# 
  2540     038C                     	;# 
  2541     038D                     	;# 
  2542     038E                     	;# 
  2543     0390                     	;# 
  2544     0390                     	;# 
  2545     0391                     	;# 
  2546     0392                     	;# 
  2547     048C                     	;# 
  2548     048C                     	;# 
  2549     048D                     	;# 
  2550     048E                     	;# 
  2551     048F                     	;# 
  2552     048F                     	;# 
  2553     0490                     	;# 
  2554     0491                     	;# 
  2555     0492                     	;# 
  2556     0492                     	;# 
  2557     0493                     	;# 
  2558     0494                     	;# 
  2559     0495                     	;# 
  2560     0495                     	;# 
  2561     0496                     	;# 
  2562     0497                     	;# 
  2563     0498                     	;# 
  2564     0499                     	;# 
  2565     049A                     	;# 
  2566     049B                     	;# 
  2567     049C                     	;# 
  2568     049D                     	;# 
  2569     050C                     	;# 
  2570     050C                     	;# 
  2571     050D                     	;# 
  2572     050E                     	;# 
  2573     050F                     	;# 
  2574     050F                     	;# 
  2575     0510                     	;# 
  2576     0511                     	;# 
  2577     0512                     	;# 
  2578     0512                     	;# 
  2579     0513                     	;# 
  2580     0514                     	;# 
  2581     0515                     	;# 
  2582     0515                     	;# 
  2583     0516                     	;# 
  2584     0517                     	;# 
  2585     0518                     	;# 
  2586     0519                     	;# 
  2587     051A                     	;# 
  2588     051B                     	;# 
  2589     051C                     	;# 
  2590     051D                     	;# 
  2591     058C                     	;# 
  2592     058C                     	;# 
  2593     058D                     	;# 
  2594     058E                     	;# 
  2595     058F                     	;# 
  2596     058F                     	;# 
  2597     0590                     	;# 
  2598     0591                     	;# 
  2599     0592                     	;# 
  2600     0593                     	;# 
  2601     059C                     	;# 
  2602     059C                     	;# 
  2603     059D                     	;# 
  2604     059D                     	;# 
  2605     059E                     	;# 
  2606     059F                     	;# 
  2607     060C                     	;# 
  2608     060C                     	;# 
  2609     060D                     	;# 
  2610     060D                     	;# 
  2611     060E                     	;# 
  2612     060F                     	;# 
  2613     0610                     	;# 
  2614     0611                     	;# 
  2615     0612                     	;# 
  2616     0613                     	;# 
  2617     0614                     	;# 
  2618     0616                     	;# 
  2619     0616                     	;# 
  2620     0617                     	;# 
  2621     0617                     	;# 
  2622     0618                     	;# 
  2623     0619                     	;# 
  2624     061A                     	;# 
  2625     061B                     	;# 
  2626     061C                     	;# 
  2627     061D                     	;# 
  2628     061E                     	;# 
  2629     068C                     	;# 
  2630     068D                     	;# 
  2631     068E                     	;# 
  2632     068F                     	;# 
  2633     0690                     	;# 
  2634     0691                     	;# 
  2635     0692                     	;# 
  2636     0693                     	;# 
  2637     0694                     	;# 
  2638     070C                     	;# 
  2639     070D                     	;# 
  2640     070E                     	;# 
  2641     070F                     	;# 
  2642     0710                     	;# 
  2643     0711                     	;# 
  2644     0712                     	;# 
  2645     0713                     	;# 
  2646     0714                     	;# 
  2647     0716                     	;# 
  2648     0717                     	;# 
  2649     0718                     	;# 
  2650     0719                     	;# 
  2651     071A                     	;# 
  2652     071B                     	;# 
  2653     071C                     	;# 
  2654     071D                     	;# 
  2655     071E                     	;# 
  2656     0796                     	;# 
  2657     0797                     	;# 
  2658     0798                     	;# 
  2659     0799                     	;# 
  2660     079A                     	;# 
  2661     079B                     	;# 
  2662     079C                     	;# 
  2663     079D                     	;# 
  2664     080C                     	;# 
  2665     080D                     	;# 
  2666     080E                     	;# 
  2667     080F                     	;# 
  2668     0810                     	;# 
  2669     0811                     	;# 
  2670     0813                     	;# 
  2671     0814                     	;# 
  2672     081A                     	;# 
  2673     081A                     	;# 
  2674     081B                     	;# 
  2675     081C                     	;# 
  2676     081C                     	;# 
  2677     081D                     	;# 
  2678     081E                     	;# 
  2679     081F                     	;# 
  2680     088C                     	;# 
  2681     088D                     	;# 
  2682     088E                     	;# 
  2683     088F                     	;# 
  2684     0890                     	;# 
  2685     0891                     	;# 
  2686     0892                     	;# 
  2687     0893                     	;# 
  2688     0895                     	;# 
  2689     0896                     	;# 
  2690     0897                     	;# 
  2691     0898                     	;# 
  2692     0899                     	;# 
  2693     089A                     	;# 
  2694     089B                     	;# 
  2695     090C                     	;# 
  2696     090E                     	;# 
  2697     090F                     	;# 
  2698     091F                     	;# 
  2699     098F                     	;# 
  2700     098F                     	;# 
  2701     0990                     	;# 
  2702     0991                     	;# 
  2703     0992                     	;# 
  2704     0993                     	;# 
  2705     0994                     	;# 
  2706     0995                     	;# 
  2707     0996                     	;# 
  2708     0997                     	;# 
  2709     0A19                     	;# 
  2710     0A19                     	;# 
  2711     0A1A                     	;# 
  2712     0A1A                     	;# 
  2713     0A1B                     	;# 
  2714     0A1B                     	;# 
  2715     0A1B                     	;# 
  2716     0A1C                     	;# 
  2717     0A1C                     	;# 
  2718     0A1D                     	;# 
  2719     0A1D                     	;# 
  2720     0A1E                     	;# 
  2721     0A1E                     	;# 
  2722     0A1F                     	;# 
  2723     0A1F                     	;# 
  2724     0A1F                     	;# 
  2725     1E0F                     	;# 
  2726     1E10                     	;# 
  2727     1E11                     	;# 
  2728     1E12                     	;# 
  2729     1E13                     	;# 
  2730     1E14                     	;# 
  2731     1E15                     	;# 
  2732     1E16                     	;# 
  2733     1E17                     	;# 
  2734     1E18                     	;# 
  2735     1E19                     	;# 
  2736     1E1A                     	;# 
  2737     1E1B                     	;# 
  2738     1E1C                     	;# 
  2739     1E1D                     	;# 
  2740     1E1E                     	;# 
  2741     1E1F                     	;# 
  2742     1E20                     	;# 
  2743     1E21                     	;# 
  2744     1E22                     	;# 
  2745     1E23                     	;# 
  2746     1E24                     	;# 
  2747     1E25                     	;# 
  2748     1E26                     	;# 
  2749     1E27                     	;# 
  2750     1E28                     	;# 
  2751     1E29                     	;# 
  2752     1E2A                     	;# 
  2753     1E2B                     	;# 
  2754     1E2C                     	;# 
  2755     1E2D                     	;# 
  2756     1E2E                     	;# 
  2757     1E2F                     	;# 
  2758     1E30                     	;# 
  2759     1E31                     	;# 
  2760     1E32                     	;# 
  2761     1E33                     	;# 
  2762     1E34                     	;# 
  2763     1E35                     	;# 
  2764     1E36                     	;# 
  2765     1E37                     	;# 
  2766     1E8F                     	;# 
  2767     1E90                     	;# 
  2768     1E91                     	;# 
  2769     1E92                     	;# 
  2770     1E93                     	;# 
  2771     1E94                     	;# 
  2772     1E95                     	;# 
  2773     1E96                     	;# 
  2774     1E97                     	;# 
  2775     1E9C                     	;# 
  2776     1E9D                     	;# 
  2777     1E9E                     	;# 
  2778     1EA1                     	;# 
  2779     1EA2                     	;# 
  2780     1EA3                     	;# 
  2781     1EA4                     	;# 
  2782     1EA5                     	;# 
  2783     1EA9                     	;# 
  2784     1EAA                     	;# 
  2785     1EAB                     	;# 
  2786     1EAC                     	;# 
  2787     1EB1                     	;# 
  2788     1EB2                     	;# 
  2789     1EB3                     	;# 
  2790     1EB8                     	;# 
  2791     1EB9                     	;# 
  2792     1EBA                     	;# 
  2793     1EBB                     	;# 
  2794     1EBC                     	;# 
  2795     1EBD                     	;# 
  2796     1EBE                     	;# 
  2797     1EC3                     	;# 
  2798     1EC5                     	;# 
  2799     1EC6                     	;# 
  2800     1EC7                     	;# 
  2801     1EC8                     	;# 
  2802     1EC9                     	;# 
  2803     1ECA                     	;# 
  2804     1ECB                     	;# 
  2805     1ECC                     	;# 
  2806     1ECD                     	;# 
  2807     1ECE                     	;# 
  2808     1F10                     	;# 
  2809     1F11                     	;# 
  2810     1F12                     	;# 
  2811     1F13                     	;# 
  2812     1F14                     	;# 
  2813     1F15                     	;# 
  2814     1F16                     	;# 
  2815     1F17                     	;# 
  2816     1F18                     	;# 
  2817     1F19                     	;# 
  2818     1F1A                     	;# 
  2819     1F1B                     	;# 
  2820     1F1C                     	;# 
  2821     1F1D                     	;# 
  2822     1F1E                     	;# 
  2823     1F1F                     	;# 
  2824     1F20                     	;# 
  2825     1F21                     	;# 
  2826     1F22                     	;# 
  2827     1F23                     	;# 
  2828     1F24                     	;# 
  2829     1F25                     	;# 
  2830     1F26                     	;# 
  2831     1F27                     	;# 
  2832     1F38                     	;# 
  2833     1F39                     	;# 
  2834     1F3A                     	;# 
  2835     1F3B                     	;# 
  2836     1F3C                     	;# 
  2837     1F3D                     	;# 
  2838     1F3E                     	;# 
  2839     1F3F                     	;# 
  2840     1F43                     	;# 
  2841     1F44                     	;# 
  2842     1F45                     	;# 
  2843     1F46                     	;# 
  2844     1F47                     	;# 
  2845     1F48                     	;# 
  2846     1F49                     	;# 
  2847     1F4A                     	;# 
  2848     1F4E                     	;# 
  2849     1F4F                     	;# 
  2850     1F50                     	;# 
  2851     1F51                     	;# 
  2852     1F52                     	;# 
  2853     1F53                     	;# 
  2854     1F54                     	;# 
  2855     1F55                     	;# 
  2856     1F65                     	;# 
  2857     1F66                     	;# 
  2858     1F67                     	;# 
  2859     1F68                     	;# 
  2860     1F69                     	;# 
  2861     1F6A                     	;# 
  2862     1F6B                     	;# 
  2863     1FE4                     	;# 
  2864     1FE5                     	;# 
  2865     1FE6                     	;# 
  2866     1FE7                     	;# 
  2867     1FE8                     	;# 
  2868     1FE8                     	;# 
  2869     1FE9                     	;# 
  2870     1FEA                     	;# 
  2871     1FEB                     	;# 
  2872     1FED                     	;# 
  2873     1FEE                     	;# 
  2874     1FEF                     	;# 
  2875     0000                     	;# 
  2876     0001                     	;# 
  2877     0002                     	;# 
  2878     0003                     	;# 
  2879     0004                     	;# 
  2880     0005                     	;# 
  2881     0006                     	;# 
  2882     0007                     	;# 
  2883     0008                     	;# 
  2884     0009                     	;# 
  2885     000A                     	;# 
  2886     000B                     	;# 
  2887     000C                     	;# 
  2888     000D                     	;# 
  2889     000E                     	;# 
  2890     0010                     	;# 
  2891     0012                     	;# 
  2892     0013                     	;# 
  2893     0014                     	;# 
  2894     0016                     	;# 
  2895     0018                     	;# 
  2896     0019                     	;# 
  2897     001A                     	;# 
  2898     001C                     	;# 
  2899     008C                     	;# 
  2900     008C                     	;# 
  2901     008D                     	;# 
  2902     008E                     	;# 
  2903     008E                     	;# 
  2904     008F                     	;# 
  2905     0090                     	;# 
  2906     0090                     	;# 
  2907     0091                     	;# 
  2908     0092                     	;# 
  2909     0092                     	;# 
  2910     0093                     	;# 
  2911     0094                     	;# 
  2912     0094                     	;# 
  2913     0095                     	;# 
  2914     0096                     	;# 
  2915     0096                     	;# 
  2916     0097                     	;# 
  2917     0098                     	;# 
  2918     0099                     	;# 
  2919     009A                     	;# 
  2920     009B                     	;# 
  2921     009B                     	;# 
  2922     009C                     	;# 
  2923     009D                     	;# 
  2924     009D                     	;# 
  2925     009E                     	;# 
  2926     009F                     	;# 
  2927     010C                     	;# 
  2928     010C                     	;# 
  2929     010D                     	;# 
  2930     010E                     	;# 
  2931     010F                     	;# 
  2932     010F                     	;# 
  2933     0110                     	;# 
  2934     0111                     	;# 
  2935     0112                     	;# 
  2936     0113                     	;# 
  2937     0114                     	;# 
  2938     0115                     	;# 
  2939     0116                     	;# 
  2940     0117                     	;# 
  2941     0118                     	;# 
  2942     0119                     	;# 
  2943     0119                     	;# 
  2944     0119                     	;# 
  2945     011A                     	;# 
  2946     011A                     	;# 
  2947     011A                     	;# 
  2948     011B                     	;# 
  2949     011B                     	;# 
  2950     011B                     	;# 
  2951     011B                     	;# 
  2952     011B                     	;# 
  2953     011C                     	;# 
  2954     011C                     	;# 
  2955     011C                     	;# 
  2956     011D                     	;# 
  2957     011D                     	;# 
  2958     011D                     	;# 
  2959     011E                     	;# 
  2960     011E                     	;# 
  2961     011E                     	;# 
  2962     011F                     	;# 
  2963     011F                     	;# 
  2964     011F                     	;# 
  2965     011F                     	;# 
  2966     011F                     	;# 
  2967     018C                     	;# 
  2968     018D                     	;# 
  2969     018E                     	;# 
  2970     018F                     	;# 
  2971     0190                     	;# 
  2972     0191                     	;# 
  2973     0192                     	;# 
  2974     0196                     	;# 
  2975     0197                     	;# 
  2976     0198                     	;# 
  2977     0199                     	;# 
  2978     019A                     	;# 
  2979     019B                     	;# 
  2980     019C                     	;# 
  2981     020C                     	;# 
  2982     020D                     	;# 
  2983     020E                     	;# 
  2984     020E                     	;# 
  2985     020F                     	;# 
  2986     020F                     	;# 
  2987     0210                     	;# 
  2988     0210                     	;# 
  2989     0211                     	;# 
  2990     0211                     	;# 
  2991     0212                     	;# 
  2992     0213                     	;# 
  2993     0214                     	;# 
  2994     0214                     	;# 
  2995     0215                     	;# 
  2996     0215                     	;# 
  2997     0216                     	;# 
  2998     0216                     	;# 
  2999     0217                     	;# 
  3000     0217                     	;# 
  3001     0218                     	;# 
  3002     0219                     	;# 
  3003     021A                     	;# 
  3004     021A                     	;# 
  3005     021B                     	;# 
  3006     021B                     	;# 
  3007     021C                     	;# 
  3008     021C                     	;# 
  3009     021D                     	;# 
  3010     021D                     	;# 
  3011     021E                     	;# 
  3012     021F                     	;# 
  3013     028C                     	;# 
  3014     028C                     	;# 
  3015     028D                     	;# 
  3016     028D                     	;# 
  3017     028E                     	;# 
  3018     028F                     	;# 
  3019     0290                     	;# 
  3020     0291                     	;# 
  3021     0292                     	;# 
  3022     0292                     	;# 
  3023     0293                     	;# 
  3024     0293                     	;# 
  3025     0294                     	;# 
  3026     0295                     	;# 
  3027     0296                     	;# 
  3028     0297                     	;# 
  3029     0298                     	;# 
  3030     0298                     	;# 
  3031     0299                     	;# 
  3032     0299                     	;# 
  3033     029A                     	;# 
  3034     029B                     	;# 
  3035     029C                     	;# 
  3036     029D                     	;# 
  3037     029F                     	;# 
  3038     030C                     	;# 
  3039     030C                     	;# 
  3040     030D                     	;# 
  3041     030E                     	;# 
  3042     030F                     	;# 
  3043     0310                     	;# 
  3044     0310                     	;# 
  3045     0311                     	;# 
  3046     0312                     	;# 
  3047     0313                     	;# 
  3048     0314                     	;# 
  3049     0314                     	;# 
  3050     0315                     	;# 
  3051     0316                     	;# 
  3052     0317                     	;# 
  3053     0318                     	;# 
  3054     0318                     	;# 
  3055     0319                     	;# 
  3056     031A                     	;# 
  3057     031B                     	;# 
  3058     031C                     	;# 
  3059     031C                     	;# 
  3060     031D                     	;# 
  3061     031E                     	;# 
  3062     031F                     	;# 
  3063     038C                     	;# 
  3064     038C                     	;# 
  3065     038D                     	;# 
  3066     038E                     	;# 
  3067     0390                     	;# 
  3068     0390                     	;# 
  3069     0391                     	;# 
  3070     0392                     	;# 
  3071     048C                     	;# 
  3072     048C                     	;# 
  3073     048D                     	;# 
  3074     048E                     	;# 
  3075     048F                     	;# 
  3076     048F                     	;# 
  3077     0490                     	;# 
  3078     0491                     	;# 
  3079     0492                     	;# 
  3080     0492                     	;# 
  3081     0493                     	;# 
  3082     0494                     	;# 
  3083     0495                     	;# 
  3084     0495                     	;# 
  3085     0496                     	;# 
  3086     0497                     	;# 
  3087     0498                     	;# 
  3088     0499                     	;# 
  3089     049A                     	;# 
  3090     049B                     	;# 
  3091     049C                     	;# 
  3092     049D                     	;# 
  3093     050C                     	;# 
  3094     050C                     	;# 
  3095     050D                     	;# 
  3096     050E                     	;# 
  3097     050F                     	;# 
  3098     050F                     	;# 
  3099     0510                     	;# 
  3100     0511                     	;# 
  3101     0512                     	;# 
  3102     0512                     	;# 
  3103     0513                     	;# 
  3104     0514                     	;# 
  3105     0515                     	;# 
  3106     0515                     	;# 
  3107     0516                     	;# 
  3108     0517                     	;# 
  3109     0518                     	;# 
  3110     0519                     	;# 
  3111     051A                     	;# 
  3112     051B                     	;# 
  3113     051C                     	;# 
  3114     051D                     	;# 
  3115     058C                     	;# 
  3116     058C                     	;# 
  3117     058D                     	;# 
  3118     058E                     	;# 
  3119     058F                     	;# 
  3120     058F                     	;# 
  3121     0590                     	;# 
  3122     0591                     	;# 
  3123     0592                     	;# 
  3124     0593                     	;# 
  3125     059C                     	;# 
  3126     059C                     	;# 
  3127     059D                     	;# 
  3128     059D                     	;# 
  3129     059E                     	;# 
  3130     059F                     	;# 
  3131     060C                     	;# 
  3132     060C                     	;# 
  3133     060D                     	;# 
  3134     060D                     	;# 
  3135     060E                     	;# 
  3136     060F                     	;# 
  3137     0610                     	;# 
  3138     0611                     	;# 
  3139     0612                     	;# 
  3140     0613                     	;# 
  3141     0614                     	;# 
  3142     0616                     	;# 
  3143     0616                     	;# 
  3144     0617                     	;# 
  3145     0617                     	;# 
  3146     0618                     	;# 
  3147     0619                     	;# 
  3148     061A                     	;# 
  3149     061B                     	;# 
  3150     061C                     	;# 
  3151     061D                     	;# 
  3152     061E                     	;# 
  3153     068C                     	;# 
  3154     068D                     	;# 
  3155     068E                     	;# 
  3156     068F                     	;# 
  3157     0690                     	;# 
  3158     0691                     	;# 
  3159     0692                     	;# 
  3160     0693                     	;# 
  3161     0694                     	;# 
  3162     070C                     	;# 
  3163     070D                     	;# 
  3164     070E                     	;# 
  3165     070F                     	;# 
  3166     0710                     	;# 
  3167     0711                     	;# 
  3168     0712                     	;# 
  3169     0713                     	;# 
  3170     0714                     	;# 
  3171     0716                     	;# 
  3172     0717                     	;# 
  3173     0718                     	;# 
  3174     0719                     	;# 
  3175     071A                     	;# 
  3176     071B                     	;# 
  3177     071C                     	;# 
  3178     071D                     	;# 
  3179     071E                     	;# 
  3180     0796                     	;# 
  3181     0797                     	;# 
  3182     0798                     	;# 
  3183     0799                     	;# 
  3184     079A                     	;# 
  3185     079B                     	;# 
  3186     079C                     	;# 
  3187     079D                     	;# 
  3188     080C                     	;# 
  3189     080D                     	;# 
  3190     080E                     	;# 
  3191     080F                     	;# 
  3192     0810                     	;# 
  3193     0811                     	;# 
  3194     0813                     	;# 
  3195     0814                     	;# 
  3196     081A                     	;# 
  3197     081A                     	;# 
  3198     081B                     	;# 
  3199     081C                     	;# 
  3200     081C                     	;# 
  3201     081D                     	;# 
  3202     081E                     	;# 
  3203     081F                     	;# 
  3204     088C                     	;# 
  3205     088D                     	;# 
  3206     088E                     	;# 
  3207     088F                     	;# 
  3208     0890                     	;# 
  3209     0891                     	;# 
  3210     0892                     	;# 
  3211     0893                     	;# 
  3212     0895                     	;# 
  3213     0896                     	;# 
  3214     0897                     	;# 
  3215     0898                     	;# 
  3216     0899                     	;# 
  3217     089A                     	;# 
  3218     089B                     	;# 
  3219     090C                     	;# 
  3220     090E                     	;# 
  3221     090F                     	;# 
  3222     091F                     	;# 
  3223     098F                     	;# 
  3224     098F                     	;# 
  3225     0990                     	;# 
  3226     0991                     	;# 
  3227     0992                     	;# 
  3228     0993                     	;# 
  3229     0994                     	;# 
  3230     0995                     	;# 
  3231     0996                     	;# 
  3232     0997                     	;# 
  3233     0A19                     	;# 
  3234     0A19                     	;# 
  3235     0A1A                     	;# 
  3236     0A1A                     	;# 
  3237     0A1B                     	;# 
  3238     0A1B                     	;# 
  3239     0A1B                     	;# 
  3240     0A1C                     	;# 
  3241     0A1C                     	;# 
  3242     0A1D                     	;# 
  3243     0A1D                     	;# 
  3244     0A1E                     	;# 
  3245     0A1E                     	;# 
  3246     0A1F                     	;# 
  3247     0A1F                     	;# 
  3248     0A1F                     	;# 
  3249     1E0F                     	;# 
  3250     1E10                     	;# 
  3251     1E11                     	;# 
  3252     1E12                     	;# 
  3253     1E13                     	;# 
  3254     1E14                     	;# 
  3255     1E15                     	;# 
  3256     1E16                     	;# 
  3257     1E17                     	;# 
  3258     1E18                     	;# 
  3259     1E19                     	;# 
  3260     1E1A                     	;# 
  3261     1E1B                     	;# 
  3262     1E1C                     	;# 
  3263     1E1D                     	;# 
  3264     1E1E                     	;# 
  3265     1E1F                     	;# 
  3266     1E20                     	;# 
  3267     1E21                     	;# 
  3268     1E22                     	;# 
  3269     1E23                     	;# 
  3270     1E24                     	;# 
  3271     1E25                     	;# 
  3272     1E26                     	;# 
  3273     1E27                     	;# 
  3274     1E28                     	;# 
  3275     1E29                     	;# 
  3276     1E2A                     	;# 
  3277     1E2B                     	;# 
  3278     1E2C                     	;# 
  3279     1E2D                     	;# 
  3280     1E2E                     	;# 
  3281     1E2F                     	;# 
  3282     1E30                     	;# 
  3283     1E31                     	;# 
  3284     1E32                     	;# 
  3285     1E33                     	;# 
  3286     1E34                     	;# 
  3287     1E35                     	;# 
  3288     1E36                     	;# 
  3289     1E37                     	;# 
  3290     1E8F                     	;# 
  3291     1E90                     	;# 
  3292     1E91                     	;# 
  3293     1E92                     	;# 
  3294     1E93                     	;# 
  3295     1E94                     	;# 
  3296     1E95                     	;# 
  3297     1E96                     	;# 
  3298     1E97                     	;# 
  3299     1E9C                     	;# 
  3300     1E9D                     	;# 
  3301     1E9E                     	;# 
  3302     1EA1                     	;# 
  3303     1EA2                     	;# 
  3304     1EA3                     	;# 
  3305     1EA4                     	;# 
  3306     1EA5                     	;# 
  3307     1EA9                     	;# 
  3308     1EAA                     	;# 
  3309     1EAB                     	;# 
  3310     1EAC                     	;# 
  3311     1EB1                     	;# 
  3312     1EB2                     	;# 
  3313     1EB3                     	;# 
  3314     1EB8                     	;# 
  3315     1EB9                     	;# 
  3316     1EBA                     	;# 
  3317     1EBB                     	;# 
  3318     1EBC                     	;# 
  3319     1EBD                     	;# 
  3320     1EBE                     	;# 
  3321     1EC3                     	;# 
  3322     1EC5                     	;# 
  3323     1EC6                     	;# 
  3324     1EC7                     	;# 
  3325     1EC8                     	;# 
  3326     1EC9                     	;# 
  3327     1ECA                     	;# 
  3328     1ECB                     	;# 
  3329     1ECC                     	;# 
  3330     1ECD                     	;# 
  3331     1ECE                     	;# 
  3332     1F10                     	;# 
  3333     1F11                     	;# 
  3334     1F12                     	;# 
  3335     1F13                     	;# 
  3336     1F14                     	;# 
  3337     1F15                     	;# 
  3338     1F16                     	;# 
  3339     1F17                     	;# 
  3340     1F18                     	;# 
  3341     1F19                     	;# 
  3342     1F1A                     	;# 
  3343     1F1B                     	;# 
  3344     1F1C                     	;# 
  3345     1F1D                     	;# 
  3346     1F1E                     	;# 
  3347     1F1F                     	;# 
  3348     1F20                     	;# 
  3349     1F21                     	;# 
  3350     1F22                     	;# 
  3351     1F23                     	;# 
  3352     1F24                     	;# 
  3353     1F25                     	;# 
  3354     1F26                     	;# 
  3355     1F27                     	;# 
  3356     1F38                     	;# 
  3357     1F39                     	;# 
  3358     1F3A                     	;# 
  3359     1F3B                     	;# 
  3360     1F3C                     	;# 
  3361     1F3D                     	;# 
  3362     1F3E                     	;# 
  3363     1F3F                     	;# 
  3364     1F43                     	;# 
  3365     1F44                     	;# 
  3366     1F45                     	;# 
  3367     1F46                     	;# 
  3368     1F47                     	;# 
  3369     1F48                     	;# 
  3370     1F49                     	;# 
  3371     1F4A                     	;# 
  3372     1F4E                     	;# 
  3373     1F4F                     	;# 
  3374     1F50                     	;# 
  3375     1F51                     	;# 
  3376     1F52                     	;# 
  3377     1F53                     	;# 
  3378     1F54                     	;# 
  3379     1F55                     	;# 
  3380     1F65                     	;# 
  3381     1F66                     	;# 
  3382     1F67                     	;# 
  3383     1F68                     	;# 
  3384     1F69                     	;# 
  3385     1F6A                     	;# 
  3386     1F6B                     	;# 
  3387     1FE4                     	;# 
  3388     1FE5                     	;# 
  3389     1FE6                     	;# 
  3390     1FE7                     	;# 
  3391     1FE8                     	;# 
  3392     1FE8                     	;# 
  3393     1FE9                     	;# 
  3394     1FEA                     	;# 
  3395     1FEB                     	;# 
  3396     1FED                     	;# 
  3397     1FEE                     	;# 
  3398     1FEF                     	;# 
  3399     0000                     	;# 
  3400     0001                     	;# 
  3401     0002                     	;# 
  3402     0003                     	;# 
  3403     0004                     	;# 
  3404     0005                     	;# 
  3405     0006                     	;# 
  3406     0007                     	;# 
  3407     0008                     	;# 
  3408     0009                     	;# 
  3409     000A                     	;# 
  3410     000B                     	;# 
  3411     000C                     	;# 
  3412     000D                     	;# 
  3413     000E                     	;# 
  3414     0010                     	;# 
  3415     0012                     	;# 
  3416     0013                     	;# 
  3417     0014                     	;# 
  3418     0016                     	;# 
  3419     0018                     	;# 
  3420     0019                     	;# 
  3421     001A                     	;# 
  3422     001C                     	;# 
  3423     008C                     	;# 
  3424     008C                     	;# 
  3425     008D                     	;# 
  3426     008E                     	;# 
  3427     008E                     	;# 
  3428     008F                     	;# 
  3429     0090                     	;# 
  3430     0090                     	;# 
  3431     0091                     	;# 
  3432     0092                     	;# 
  3433     0092                     	;# 
  3434     0093                     	;# 
  3435     0094                     	;# 
  3436     0094                     	;# 
  3437     0095                     	;# 
  3438     0096                     	;# 
  3439     0096                     	;# 
  3440     0097                     	;# 
  3441     0098                     	;# 
  3442     0099                     	;# 
  3443     009A                     	;# 
  3444     009B                     	;# 
  3445     009B                     	;# 
  3446     009C                     	;# 
  3447     009D                     	;# 
  3448     009D                     	;# 
  3449     009E                     	;# 
  3450     009F                     	;# 
  3451     010C                     	;# 
  3452     010C                     	;# 
  3453     010D                     	;# 
  3454     010E                     	;# 
  3455     010F                     	;# 
  3456     010F                     	;# 
  3457     0110                     	;# 
  3458     0111                     	;# 
  3459     0112                     	;# 
  3460     0113                     	;# 
  3461     0114                     	;# 
  3462     0115                     	;# 
  3463     0116                     	;# 
  3464     0117                     	;# 
  3465     0118                     	;# 
  3466     0119                     	;# 
  3467     0119                     	;# 
  3468     0119                     	;# 
  3469     011A                     	;# 
  3470     011A                     	;# 
  3471     011A                     	;# 
  3472     011B                     	;# 
  3473     011B                     	;# 
  3474     011B                     	;# 
  3475     011B                     	;# 
  3476     011B                     	;# 
  3477     011C                     	;# 
  3478     011C                     	;# 
  3479     011C                     	;# 
  3480     011D                     	;# 
  3481     011D                     	;# 
  3482     011D                     	;# 
  3483     011E                     	;# 
  3484     011E                     	;# 
  3485     011E                     	;# 
  3486     011F                     	;# 
  3487     011F                     	;# 
  3488     011F                     	;# 
  3489     011F                     	;# 
  3490     011F                     	;# 
  3491     018C                     	;# 
  3492     018D                     	;# 
  3493     018E                     	;# 
  3494     018F                     	;# 
  3495     0190                     	;# 
  3496     0191                     	;# 
  3497     0192                     	;# 
  3498     0196                     	;# 
  3499     0197                     	;# 
  3500     0198                     	;# 
  3501     0199                     	;# 
  3502     019A                     	;# 
  3503     019B                     	;# 
  3504     019C                     	;# 
  3505     020C                     	;# 
  3506     020D                     	;# 
  3507     020E                     	;# 
  3508     020E                     	;# 
  3509     020F                     	;# 
  3510     020F                     	;# 
  3511     0210                     	;# 
  3512     0210                     	;# 
  3513     0211                     	;# 
  3514     0211                     	;# 
  3515     0212                     	;# 
  3516     0213                     	;# 
  3517     0214                     	;# 
  3518     0214                     	;# 
  3519     0215                     	;# 
  3520     0215                     	;# 
  3521     0216                     	;# 
  3522     0216                     	;# 
  3523     0217                     	;# 
  3524     0217                     	;# 
  3525     0218                     	;# 
  3526     0219                     	;# 
  3527     021A                     	;# 
  3528     021A                     	;# 
  3529     021B                     	;# 
  3530     021B                     	;# 
  3531     021C                     	;# 
  3532     021C                     	;# 
  3533     021D                     	;# 
  3534     021D                     	;# 
  3535     021E                     	;# 
  3536     021F                     	;# 
  3537     028C                     	;# 
  3538     028C                     	;# 
  3539     028D                     	;# 
  3540     028D                     	;# 
  3541     028E                     	;# 
  3542     028F                     	;# 
  3543     0290                     	;# 
  3544     0291                     	;# 
  3545     0292                     	;# 
  3546     0292                     	;# 
  3547     0293                     	;# 
  3548     0293                     	;# 
  3549     0294                     	;# 
  3550     0295                     	;# 
  3551     0296                     	;# 
  3552     0297                     	;# 
  3553     0298                     	;# 
  3554     0298                     	;# 
  3555     0299                     	;# 
  3556     0299                     	;# 
  3557     029A                     	;# 
  3558     029B                     	;# 
  3559     029C                     	;# 
  3560     029D                     	;# 
  3561     029F                     	;# 
  3562     030C                     	;# 
  3563     030C                     	;# 
  3564     030D                     	;# 
  3565     030E                     	;# 
  3566     030F                     	;# 
  3567     0310                     	;# 
  3568     0310                     	;# 
  3569     0311                     	;# 
  3570     0312                     	;# 
  3571     0313                     	;# 
  3572     0314                     	;# 
  3573     0314                     	;# 
  3574     0315                     	;# 
  3575     0316                     	;# 
  3576     0317                     	;# 
  3577     0318                     	;# 
  3578     0318                     	;# 
  3579     0319                     	;# 
  3580     031A                     	;# 
  3581     031B                     	;# 
  3582     031C                     	;# 
  3583     031C                     	;# 
  3584     031D                     	;# 
  3585     031E                     	;# 
  3586     031F                     	;# 
  3587     038C                     	;# 
  3588     038C                     	;# 
  3589     038D                     	;# 
  3590     038E                     	;# 
  3591     0390                     	;# 
  3592     0390                     	;# 
  3593     0391                     	;# 
  3594     0392                     	;# 
  3595     048C                     	;# 
  3596     048C                     	;# 
  3597     048D                     	;# 
  3598     048E                     	;# 
  3599     048F                     	;# 
  3600     048F                     	;# 
  3601     0490                     	;# 
  3602     0491                     	;# 
  3603     0492                     	;# 
  3604     0492                     	;# 
  3605     0493                     	;# 
  3606     0494                     	;# 
  3607     0495                     	;# 
  3608     0495                     	;# 
  3609     0496                     	;# 
  3610     0497                     	;# 
  3611     0498                     	;# 
  3612     0499                     	;# 
  3613     049A                     	;# 
  3614     049B                     	;# 
  3615     049C                     	;# 
  3616     049D                     	;# 
  3617     050C                     	;# 
  3618     050C                     	;# 
  3619     050D                     	;# 
  3620     050E                     	;# 
  3621     050F                     	;# 
  3622     050F                     	;# 
  3623     0510                     	;# 
  3624     0511                     	;# 
  3625     0512                     	;# 
  3626     0512                     	;# 
  3627     0513                     	;# 
  3628     0514                     	;# 
  3629     0515                     	;# 
  3630     0515                     	;# 
  3631     0516                     	;# 
  3632     0517                     	;# 
  3633     0518                     	;# 
  3634     0519                     	;# 
  3635     051A                     	;# 
  3636     051B                     	;# 
  3637     051C                     	;# 
  3638     051D                     	;# 
  3639     058C                     	;# 
  3640     058C                     	;# 
  3641     058D                     	;# 
  3642     058E                     	;# 
  3643     058F                     	;# 
  3644     058F                     	;# 
  3645     0590                     	;# 
  3646     0591                     	;# 
  3647     0592                     	;# 
  3648     0593                     	;# 
  3649     059C                     	;# 
  3650     059C                     	;# 
  3651     059D                     	;# 
  3652     059D                     	;# 
  3653     059E                     	;# 
  3654     059F                     	;# 
  3655     060C                     	;# 
  3656     060C                     	;# 
  3657     060D                     	;# 
  3658     060D                     	;# 
  3659     060E                     	;# 
  3660     060F                     	;# 
  3661     0610                     	;# 
  3662     0611                     	;# 
  3663     0612                     	;# 
  3664     0613                     	;# 
  3665     0614                     	;# 
  3666     0616                     	;# 
  3667     0616                     	;# 
  3668     0617                     	;# 
  3669     0617                     	;# 
  3670     0618                     	;# 
  3671     0619                     	;# 
  3672     061A                     	;# 
  3673     061B                     	;# 
  3674     061C                     	;# 
  3675     061D                     	;# 
  3676     061E                     	;# 
  3677     068C                     	;# 
  3678     068D                     	;# 
  3679     068E                     	;# 
  3680     068F                     	;# 
  3681     0690                     	;# 
  3682     0691                     	;# 
  3683     0692                     	;# 
  3684     0693                     	;# 
  3685     0694                     	;# 
  3686     070C                     	;# 
  3687     070D                     	;# 
  3688     070E                     	;# 
  3689     070F                     	;# 
  3690     0710                     	;# 
  3691     0711                     	;# 
  3692     0712                     	;# 
  3693     0713                     	;# 
  3694     0714                     	;# 
  3695     0716                     	;# 
  3696     0717                     	;# 
  3697     0718                     	;# 
  3698     0719                     	;# 
  3699     071A                     	;# 
  3700     071B                     	;# 
  3701     071C                     	;# 
  3702     071D                     	;# 
  3703     071E                     	;# 
  3704     0796                     	;# 
  3705     0797                     	;# 
  3706     0798                     	;# 
  3707     0799                     	;# 
  3708     079A                     	;# 
  3709     079B                     	;# 
  3710     079C                     	;# 
  3711     079D                     	;# 
  3712     080C                     	;# 
  3713     080D                     	;# 
  3714     080E                     	;# 
  3715     080F                     	;# 
  3716     0810                     	;# 
  3717     0811                     	;# 
  3718     0813                     	;# 
  3719     0814                     	;# 
  3720     081A                     	;# 
  3721     081A                     	;# 
  3722     081B                     	;# 
  3723     081C                     	;# 
  3724     081C                     	;# 
  3725     081D                     	;# 
  3726     081E                     	;# 
  3727     081F                     	;# 
  3728     088C                     	;# 
  3729     088D                     	;# 
  3730     088E                     	;# 
  3731     088F                     	;# 
  3732     0890                     	;# 
  3733     0891                     	;# 
  3734     0892                     	;# 
  3735     0893                     	;# 
  3736     0895                     	;# 
  3737     0896                     	;# 
  3738     0897                     	;# 
  3739     0898                     	;# 
  3740     0899                     	;# 
  3741     089A                     	;# 
  3742     089B                     	;# 
  3743     090C                     	;# 
  3744     090E                     	;# 
  3745     090F                     	;# 
  3746     091F                     	;# 
  3747     098F                     	;# 
  3748     098F                     	;# 
  3749     0990                     	;# 
  3750     0991                     	;# 
  3751     0992                     	;# 
  3752     0993                     	;# 
  3753     0994                     	;# 
  3754     0995                     	;# 
  3755     0996                     	;# 
  3756     0997                     	;# 
  3757     0A19                     	;# 
  3758     0A19                     	;# 
  3759     0A1A                     	;# 
  3760     0A1A                     	;# 
  3761     0A1B                     	;# 
  3762     0A1B                     	;# 
  3763     0A1B                     	;# 
  3764     0A1C                     	;# 
  3765     0A1C                     	;# 
  3766     0A1D                     	;# 
  3767     0A1D                     	;# 
  3768     0A1E                     	;# 
  3769     0A1E                     	;# 
  3770     0A1F                     	;# 
  3771     0A1F                     	;# 
  3772     0A1F                     	;# 
  3773     1E0F                     	;# 
  3774     1E10                     	;# 
  3775     1E11                     	;# 
  3776     1E12                     	;# 
  3777     1E13                     	;# 
  3778     1E14                     	;# 
  3779     1E15                     	;# 
  3780     1E16                     	;# 
  3781     1E17                     	;# 
  3782     1E18                     	;# 
  3783     1E19                     	;# 
  3784     1E1A                     	;# 
  3785     1E1B                     	;# 
  3786     1E1C                     	;# 
  3787     1E1D                     	;# 
  3788     1E1E                     	;# 
  3789     1E1F                     	;# 
  3790     1E20                     	;# 
  3791     1E21                     	;# 
  3792     1E22                     	;# 
  3793     1E23                     	;# 
  3794     1E24                     	;# 
  3795     1E25                     	;# 
  3796     1E26                     	;# 
  3797     1E27                     	;# 
  3798     1E28                     	;# 
  3799     1E29                     	;# 
  3800     1E2A                     	;# 
  3801     1E2B                     	;# 
  3802     1E2C                     	;# 
  3803     1E2D                     	;# 
  3804     1E2E                     	;# 
  3805     1E2F                     	;# 
  3806     1E30                     	;# 
  3807     1E31                     	;# 
  3808     1E32                     	;# 
  3809     1E33                     	;# 
  3810     1E34                     	;# 
  3811     1E35                     	;# 
  3812     1E36                     	;# 
  3813     1E37                     	;# 
  3814     1E8F                     	;# 
  3815     1E90                     	;# 
  3816     1E91                     	;# 
  3817     1E92                     	;# 
  3818     1E93                     	;# 
  3819     1E94                     	;# 
  3820     1E95                     	;# 
  3821     1E96                     	;# 
  3822     1E97                     	;# 
  3823     1E9C                     	;# 
  3824     1E9D                     	;# 
  3825     1E9E                     	;# 
  3826     1EA1                     	;# 
  3827     1EA2                     	;# 
  3828     1EA3                     	;# 
  3829     1EA4                     	;# 
  3830     1EA5                     	;# 
  3831     1EA9                     	;# 
  3832     1EAA                     	;# 
  3833     1EAB                     	;# 
  3834     1EAC                     	;# 
  3835     1EB1                     	;# 
  3836     1EB2                     	;# 
  3837     1EB3                     	;# 
  3838     1EB8                     	;# 
  3839     1EB9                     	;# 
  3840     1EBA                     	;# 
  3841     1EBB                     	;# 
  3842     1EBC                     	;# 
  3843     1EBD                     	;# 
  3844     1EBE                     	;# 
  3845     1EC3                     	;# 
  3846     1EC5                     	;# 
  3847     1EC6                     	;# 
  3848     1EC7                     	;# 
  3849     1EC8                     	;# 
  3850     1EC9                     	;# 
  3851     1ECA                     	;# 
  3852     1ECB                     	;# 
  3853     1ECC                     	;# 
  3854     1ECD                     	;# 
  3855     1ECE                     	;# 
  3856     1F10                     	;# 
  3857     1F11                     	;# 
  3858     1F12                     	;# 
  3859     1F13                     	;# 
  3860     1F14                     	;# 
  3861     1F15                     	;# 
  3862     1F16                     	;# 
  3863     1F17                     	;# 
  3864     1F18                     	;# 
  3865     1F19                     	;# 
  3866     1F1A                     	;# 
  3867     1F1B                     	;# 
  3868     1F1C                     	;# 
  3869     1F1D                     	;# 
  3870     1F1E                     	;# 
  3871     1F1F                     	;# 
  3872     1F20                     	;# 
  3873     1F21                     	;# 
  3874     1F22                     	;# 
  3875     1F23                     	;# 
  3876     1F24                     	;# 
  3877     1F25                     	;# 
  3878     1F26                     	;# 
  3879     1F27                     	;# 
  3880     1F38                     	;# 
  3881     1F39                     	;# 
  3882     1F3A                     	;# 
  3883     1F3B                     	;# 
  3884     1F3C                     	;# 
  3885     1F3D                     	;# 
  3886     1F3E                     	;# 
  3887     1F3F                     	;# 
  3888     1F43                     	;# 
  3889     1F44                     	;# 
  3890     1F45                     	;# 
  3891     1F46                     	;# 
  3892     1F47                     	;# 
  3893     1F48                     	;# 
  3894     1F49                     	;# 
  3895     1F4A                     	;# 
  3896     1F4E                     	;# 
  3897     1F4F                     	;# 
  3898     1F50                     	;# 
  3899     1F51                     	;# 
  3900     1F52                     	;# 
  3901     1F53                     	;# 
  3902     1F54                     	;# 
  3903     1F55                     	;# 
  3904     1F65                     	;# 
  3905     1F66                     	;# 
  3906     1F67                     	;# 
  3907     1F68                     	;# 
  3908     1F69                     	;# 
  3909     1F6A                     	;# 
  3910     1F6B                     	;# 
  3911     1FE4                     	;# 
  3912     1FE5                     	;# 
  3913     1FE6                     	;# 
  3914     1FE7                     	;# 
  3915     1FE8                     	;# 
  3916     1FE8                     	;# 
  3917     1FE9                     	;# 
  3918     1FEA                     	;# 
  3919     1FEB                     	;# 
  3920     1FED                     	;# 
  3921     1FEE                     	;# 
  3922     1FEF                     	;# 
  3923     0000                     	;# 
  3924     0001                     	;# 
  3925     0002                     	;# 
  3926     0003                     	;# 
  3927     0004                     	;# 
  3928     0005                     	;# 
  3929     0006                     	;# 
  3930     0007                     	;# 
  3931     0008                     	;# 
  3932     0009                     	;# 
  3933     000A                     	;# 
  3934     000B                     	;# 
  3935     000C                     	;# 
  3936     000D                     	;# 
  3937     000E                     	;# 
  3938     0010                     	;# 
  3939     0012                     	;# 
  3940     0013                     	;# 
  3941     0014                     	;# 
  3942     0016                     	;# 
  3943     0018                     	;# 
  3944     0019                     	;# 
  3945     001A                     	;# 
  3946     001C                     	;# 
  3947     008C                     	;# 
  3948     008C                     	;# 
  3949     008D                     	;# 
  3950     008E                     	;# 
  3951     008E                     	;# 
  3952     008F                     	;# 
  3953     0090                     	;# 
  3954     0090                     	;# 
  3955     0091                     	;# 
  3956     0092                     	;# 
  3957     0092                     	;# 
  3958     0093                     	;# 
  3959     0094                     	;# 
  3960     0094                     	;# 
  3961     0095                     	;# 
  3962     0096                     	;# 
  3963     0096                     	;# 
  3964     0097                     	;# 
  3965     0098                     	;# 
  3966     0099                     	;# 
  3967     009A                     	;# 
  3968     009B                     	;# 
  3969     009B                     	;# 
  3970     009C                     	;# 
  3971     009D                     	;# 
  3972     009D                     	;# 
  3973     009E                     	;# 
  3974     009F                     	;# 
  3975     010C                     	;# 
  3976     010C                     	;# 
  3977     010D                     	;# 
  3978     010E                     	;# 
  3979     010F                     	;# 
  3980     010F                     	;# 
  3981     0110                     	;# 
  3982     0111                     	;# 
  3983     0112                     	;# 
  3984     0113                     	;# 
  3985     0114                     	;# 
  3986     0115                     	;# 
  3987     0116                     	;# 
  3988     0117                     	;# 
  3989     0118                     	;# 
  3990     0119                     	;# 
  3991     0119                     	;# 
  3992     0119                     	;# 
  3993     011A                     	;# 
  3994     011A                     	;# 
  3995     011A                     	;# 
  3996     011B                     	;# 
  3997     011B                     	;# 
  3998     011B                     	;# 
  3999     011B                     	;# 
  4000     011B                     	;# 
  4001     011C                     	;# 
  4002     011C                     	;# 
  4003     011C                     	;# 
  4004     011D                     	;# 
  4005     011D                     	;# 
  4006     011D                     	;# 
  4007     011E                     	;# 
  4008     011E                     	;# 
  4009     011E                     	;# 
  4010     011F                     	;# 
  4011     011F                     	;# 
  4012     011F                     	;# 
  4013     011F                     	;# 
  4014     011F                     	;# 
  4015     018C                     	;# 
  4016     018D                     	;# 
  4017     018E                     	;# 
  4018     018F                     	;# 
  4019     0190                     	;# 
  4020     0191                     	;# 
  4021     0192                     	;# 
  4022     0196                     	;# 
  4023     0197                     	;# 
  4024     0198                     	;# 
  4025     0199                     	;# 
  4026     019A                     	;# 
  4027     019B                     	;# 
  4028     019C                     	;# 
  4029     020C                     	;# 
  4030     020D                     	;# 
  4031     020E                     	;# 
  4032     020E                     	;# 
  4033     020F                     	;# 
  4034     020F                     	;# 
  4035     0210                     	;# 
  4036     0210                     	;# 
  4037     0211                     	;# 
  4038     0211                     	;# 
  4039     0212                     	;# 
  4040     0213                     	;# 
  4041     0214                     	;# 
  4042     0214                     	;# 
  4043     0215                     	;# 
  4044     0215                     	;# 
  4045     0216                     	;# 
  4046     0216                     	;# 
  4047     0217                     	;# 
  4048     0217                     	;# 
  4049     0218                     	;# 
  4050     0219                     	;# 
  4051     021A                     	;# 
  4052     021A                     	;# 
  4053     021B                     	;# 
  4054     021B                     	;# 
  4055     021C                     	;# 
  4056     021C                     	;# 
  4057     021D                     	;# 
  4058     021D                     	;# 
  4059     021E                     	;# 
  4060     021F                     	;# 
  4061     028C                     	;# 
  4062     028C                     	;# 
  4063     028D                     	;# 
  4064     028D                     	;# 
  4065     028E                     	;# 
  4066     028F                     	;# 
  4067     0290                     	;# 
  4068     0291                     	;# 
  4069     0292                     	;# 
  4070     0292                     	;# 
  4071     0293                     	;# 
  4072     0293                     	;# 
  4073     0294                     	;# 
  4074     0295                     	;# 
  4075     0296                     	;# 
  4076     0297                     	;# 
  4077     0298                     	;# 
  4078     0298                     	;# 
  4079     0299                     	;# 
  4080     0299                     	;# 
  4081     029A                     	;# 
  4082     029B                     	;# 
  4083     029C                     	;# 
  4084     029D                     	;# 
  4085     029F                     	;# 
  4086     030C                     	;# 
  4087     030C                     	;# 
  4088     030D                     	;# 
  4089     030E                     	;# 
  4090     030F                     	;# 
  4091     0310                     	;# 
  4092     0310                     	;# 
  4093     0311                     	;# 
  4094     0312                     	;# 
  4095     0313                     	;# 
  4096     0314                     	;# 
  4097     0314                     	;# 
  4098     0315                     	;# 
  4099     0316                     	;# 
  4100     0317                     	;# 
  4101     0318                     	;# 
  4102     0318                     	;# 
  4103     0319                     	;# 
  4104     031A                     	;# 
  4105     031B                     	;# 
  4106     031C                     	;# 
  4107     031C                     	;# 
  4108     031D                     	;# 
  4109     031E                     	;# 
  4110     031F                     	;# 
  4111     038C                     	;# 
  4112     038C                     	;# 
  4113     038D                     	;# 
  4114     038E                     	;# 
  4115     0390                     	;# 
  4116     0390                     	;# 
  4117     0391                     	;# 
  4118     0392                     	;# 
  4119     048C                     	;# 
  4120     048C                     	;# 
  4121     048D                     	;# 
  4122     048E                     	;# 
  4123     048F                     	;# 
  4124     048F                     	;# 
  4125     0490                     	;# 
  4126     0491                     	;# 
  4127     0492                     	;# 
  4128     0492                     	;# 
  4129     0493                     	;# 
  4130     0494                     	;# 
  4131     0495                     	;# 
  4132     0495                     	;# 
  4133     0496                     	;# 
  4134     0497                     	;# 
  4135     0498                     	;# 
  4136     0499                     	;# 
  4137     049A                     	;# 
  4138     049B                     	;# 
  4139     049C                     	;# 
  4140     049D                     	;# 
  4141     050C                     	;# 
  4142     050C                     	;# 
  4143     050D                     	;# 
  4144     050E                     	;# 
  4145     050F                     	;# 
  4146     050F                     	;# 
  4147     0510                     	;# 
  4148     0511                     	;# 
  4149     0512                     	;# 
  4150     0512                     	;# 
  4151     0513                     	;# 
  4152     0514                     	;# 
  4153     0515                     	;# 
  4154     0515                     	;# 
  4155     0516                     	;# 
  4156     0517                     	;# 
  4157     0518                     	;# 
  4158     0519                     	;# 
  4159     051A                     	;# 
  4160     051B                     	;# 
  4161     051C                     	;# 
  4162     051D                     	;# 
  4163     058C                     	;# 
  4164     058C                     	;# 
  4165     058D                     	;# 
  4166     058E                     	;# 
  4167     058F                     	;# 
  4168     058F                     	;# 
  4169     0590                     	;# 
  4170     0591                     	;# 
  4171     0592                     	;# 
  4172     0593                     	;# 
  4173     059C                     	;# 
  4174     059C                     	;# 
  4175     059D                     	;# 
  4176     059D                     	;# 
  4177     059E                     	;# 
  4178     059F                     	;# 
  4179     060C                     	;# 
  4180     060C                     	;# 
  4181     060D                     	;# 
  4182     060D                     	;# 
  4183     060E                     	;# 
  4184     060F                     	;# 
  4185     0610                     	;# 
  4186     0611                     	;# 
  4187     0612                     	;# 
  4188     0613                     	;# 
  4189     0614                     	;# 
  4190     0616                     	;# 
  4191     0616                     	;# 
  4192     0617                     	;# 
  4193     0617                     	;# 
  4194     0618                     	;# 
  4195     0619                     	;# 
  4196     061A                     	;# 
  4197     061B                     	;# 
  4198     061C                     	;# 
  4199     061D                     	;# 
  4200     061E                     	;# 
  4201     068C                     	;# 
  4202     068D                     	;# 
  4203     068E                     	;# 
  4204     068F                     	;# 
  4205     0690                     	;# 
  4206     0691                     	;# 
  4207     0692                     	;# 
  4208     0693                     	;# 
  4209     0694                     	;# 
  4210     070C                     	;# 
  4211     070D                     	;# 
  4212     070E                     	;# 
  4213     070F                     	;# 
  4214     0710                     	;# 
  4215     0711                     	;# 
  4216     0712                     	;# 
  4217     0713                     	;# 
  4218     0714                     	;# 
  4219     0716                     	;# 
  4220     0717                     	;# 
  4221     0718                     	;# 
  4222     0719                     	;# 
  4223     071A                     	;# 
  4224     071B                     	;# 
  4225     071C                     	;# 
  4226     071D                     	;# 
  4227     071E                     	;# 
  4228     0796                     	;# 
  4229     0797                     	;# 
  4230     0798                     	;# 
  4231     0799                     	;# 
  4232     079A                     	;# 
  4233     079B                     	;# 
  4234     079C                     	;# 
  4235     079D                     	;# 
  4236     080C                     	;# 
  4237     080D                     	;# 
  4238     080E                     	;# 
  4239     080F                     	;# 
  4240     0810                     	;# 
  4241     0811                     	;# 
  4242     0813                     	;# 
  4243     0814                     	;# 
  4244     081A                     	;# 
  4245     081A                     	;# 
  4246     081B                     	;# 
  4247     081C                     	;# 
  4248     081C                     	;# 
  4249     081D                     	;# 
  4250     081E                     	;# 
  4251     081F                     	;# 
  4252     088C                     	;# 
  4253     088D                     	;# 
  4254     088E                     	;# 
  4255     088F                     	;# 
  4256     0890                     	;# 
  4257     0891                     	;# 
  4258     0892                     	;# 
  4259     0893                     	;# 
  4260     0895                     	;# 
  4261     0896                     	;# 
  4262     0897                     	;# 
  4263     0898                     	;# 
  4264     0899                     	;# 
  4265     089A                     	;# 
  4266     089B                     	;# 
  4267     090C                     	;# 
  4268     090E                     	;# 
  4269     090F                     	;# 
  4270     091F                     	;# 
  4271     098F                     	;# 
  4272     098F                     	;# 
  4273     0990                     	;# 
  4274     0991                     	;# 
  4275     0992                     	;# 
  4276     0993                     	;# 
  4277     0994                     	;# 
  4278     0995                     	;# 
  4279     0996                     	;# 
  4280     0997                     	;# 
  4281     0A19                     	;# 
  4282     0A19                     	;# 
  4283     0A1A                     	;# 
  4284     0A1A                     	;# 
  4285     0A1B                     	;# 
  4286     0A1B                     	;# 
  4287     0A1B                     	;# 
  4288     0A1C                     	;# 
  4289     0A1C                     	;# 
  4290     0A1D                     	;# 
  4291     0A1D                     	;# 
  4292     0A1E                     	;# 
  4293     0A1E                     	;# 
  4294     0A1F                     	;# 
  4295     0A1F                     	;# 
  4296     0A1F                     	;# 
  4297     1E0F                     	;# 
  4298     1E10                     	;# 
  4299     1E11                     	;# 
  4300     1E12                     	;# 
  4301     1E13                     	;# 
  4302     1E14                     	;# 
  4303     1E15                     	;# 
  4304     1E16                     	;# 
  4305     1E17                     	;# 
  4306     1E18                     	;# 
  4307     1E19                     	;# 
  4308     1E1A                     	;# 
  4309     1E1B                     	;# 
  4310     1E1C                     	;# 
  4311     1E1D                     	;# 
  4312     1E1E                     	;# 
  4313     1E1F                     	;# 
  4314     1E20                     	;# 
  4315     1E21                     	;# 
  4316     1E22                     	;# 
  4317     1E23                     	;# 
  4318     1E24                     	;# 
  4319     1E25                     	;# 
  4320     1E26                     	;# 
  4321     1E27                     	;# 
  4322     1E28                     	;# 
  4323     1E29                     	;# 
  4324     1E2A                     	;# 
  4325     1E2B                     	;# 
  4326     1E2C                     	;# 
  4327     1E2D                     	;# 
  4328     1E2E                     	;# 
  4329     1E2F                     	;# 
  4330     1E30                     	;# 
  4331     1E31                     	;# 
  4332     1E32                     	;# 
  4333     1E33                     	;# 
  4334     1E34                     	;# 
  4335     1E35                     	;# 
  4336     1E36                     	;# 
  4337     1E37                     	;# 
  4338     1E8F                     	;# 
  4339     1E90                     	;# 
  4340     1E91                     	;# 
  4341     1E92                     	;# 
  4342     1E93                     	;# 
  4343     1E94                     	;# 
  4344     1E95                     	;# 
  4345     1E96                     	;# 
  4346     1E97                     	;# 
  4347     1E9C                     	;# 
  4348     1E9D                     	;# 
  4349     1E9E                     	;# 
  4350     1EA1                     	;# 
  4351     1EA2                     	;# 
  4352     1EA3                     	;# 
  4353     1EA4                     	;# 
  4354     1EA5                     	;# 
  4355     1EA9                     	;# 
  4356     1EAA                     	;# 
  4357     1EAB                     	;# 
  4358     1EAC                     	;# 
  4359     1EB1                     	;# 
  4360     1EB2                     	;# 
  4361     1EB3                     	;# 
  4362     1EB8                     	;# 
  4363     1EB9                     	;# 
  4364     1EBA                     	;# 
  4365     1EBB                     	;# 
  4366     1EBC                     	;# 
  4367     1EBD                     	;# 
  4368     1EBE                     	;# 
  4369     1EC3                     	;# 
  4370     1EC5                     	;# 
  4371     1EC6                     	;# 
  4372     1EC7                     	;# 
  4373     1EC8                     	;# 
  4374     1EC9                     	;# 
  4375     1ECA                     	;# 
  4376     1ECB                     	;# 
  4377     1ECC                     	;# 
  4378     1ECD                     	;# 
  4379     1ECE                     	;# 
  4380     1F10                     	;# 
  4381     1F11                     	;# 
  4382     1F12                     	;# 
  4383     1F13                     	;# 
  4384     1F14                     	;# 
  4385     1F15                     	;# 
  4386     1F16                     	;# 
  4387     1F17                     	;# 
  4388     1F18                     	;# 
  4389     1F19                     	;# 
  4390     1F1A                     	;# 
  4391     1F1B                     	;# 
  4392     1F1C                     	;# 
  4393     1F1D                     	;# 
  4394     1F1E                     	;# 
  4395     1F1F                     	;# 
  4396     1F20                     	;# 
  4397     1F21                     	;# 
  4398     1F22                     	;# 
  4399     1F23                     	;# 
  4400     1F24                     	;# 
  4401     1F25                     	;# 
  4402     1F26                     	;# 
  4403     1F27                     	;# 
  4404     1F38                     	;# 
  4405     1F39                     	;# 
  4406     1F3A                     	;# 
  4407     1F3B                     	;# 
  4408     1F3C                     	;# 
  4409     1F3D                     	;# 
  4410     1F3E                     	;# 
  4411     1F3F                     	;# 
  4412     1F43                     	;# 
  4413     1F44                     	;# 
  4414     1F45                     	;# 
  4415     1F46                     	;# 
  4416     1F47                     	;# 
  4417     1F48                     	;# 
  4418     1F49                     	;# 
  4419     1F4A                     	;# 
  4420     1F4E                     	;# 
  4421     1F4F                     	;# 
  4422     1F50                     	;# 
  4423     1F51                     	;# 
  4424     1F52                     	;# 
  4425     1F53                     	;# 
  4426     1F54                     	;# 
  4427     1F55                     	;# 
  4428     1F65                     	;# 
  4429     1F66                     	;# 
  4430     1F67                     	;# 
  4431     1F68                     	;# 
  4432     1F69                     	;# 
  4433     1F6A                     	;# 
  4434     1F6B                     	;# 
  4435     1FE4                     	;# 
  4436     1FE5                     	;# 
  4437     1FE6                     	;# 
  4438     1FE7                     	;# 
  4439     1FE8                     	;# 
  4440     1FE8                     	;# 
  4441     1FE9                     	;# 
  4442     1FEA                     	;# 
  4443     1FEB                     	;# 
  4444     1FED                     	;# 
  4445     1FEE                     	;# 
  4446     1FEF                     	;# 
  4447     0000                     	;# 
  4448     0001                     	;# 
  4449     0002                     	;# 
  4450     0003                     	;# 
  4451     0004                     	;# 
  4452     0005                     	;# 
  4453     0006                     	;# 
  4454     0007                     	;# 
  4455     0008                     	;# 
  4456     0009                     	;# 
  4457     000A                     	;# 
  4458     000B                     	;# 
  4459     000C                     	;# 
  4460     000D                     	;# 
  4461     000E                     	;# 
  4462     0010                     	;# 
  4463     0012                     	;# 
  4464     0013                     	;# 
  4465     0014                     	;# 
  4466     0016                     	;# 
  4467     0018                     	;# 
  4468     0019                     	;# 
  4469     001A                     	;# 
  4470     001C                     	;# 
  4471     008C                     	;# 
  4472     008C                     	;# 
  4473     008D                     	;# 
  4474     008E                     	;# 
  4475     008E                     	;# 
  4476     008F                     	;# 
  4477     0090                     	;# 
  4478     0090                     	;# 
  4479     0091                     	;# 
  4480     0092                     	;# 
  4481     0092                     	;# 
  4482     0093                     	;# 
  4483     0094                     	;# 
  4484     0094                     	;# 
  4485     0095                     	;# 
  4486     0096                     	;# 
  4487     0096                     	;# 
  4488     0097                     	;# 
  4489     0098                     	;# 
  4490     0099                     	;# 
  4491     009A                     	;# 
  4492     009B                     	;# 
  4493     009B                     	;# 
  4494     009C                     	;# 
  4495     009D                     	;# 
  4496     009D                     	;# 
  4497     009E                     	;# 
  4498     009F                     	;# 
  4499     010C                     	;# 
  4500     010C                     	;# 
  4501     010D                     	;# 
  4502     010E                     	;# 
  4503     010F                     	;# 
  4504     010F                     	;# 
  4505     0110                     	;# 
  4506     0111                     	;# 
  4507     0112                     	;# 
  4508     0113                     	;# 
  4509     0114                     	;# 
  4510     0115                     	;# 
  4511     0116                     	;# 
  4512     0117                     	;# 
  4513     0118                     	;# 
  4514     0119                     	;# 
  4515     0119                     	;# 
  4516     0119                     	;# 
  4517     011A                     	;# 
  4518     011A                     	;# 
  4519     011A                     	;# 
  4520     011B                     	;# 
  4521     011B                     	;# 
  4522     011B                     	;# 
  4523     011B                     	;# 
  4524     011B                     	;# 
  4525     011C                     	;# 
  4526     011C                     	;# 
  4527     011C                     	;# 
  4528     011D                     	;# 
  4529     011D                     	;# 
  4530     011D                     	;# 
  4531     011E                     	;# 
  4532     011E                     	;# 
  4533     011E                     	;# 
  4534     011F                     	;# 
  4535     011F                     	;# 
  4536     011F                     	;# 
  4537     011F                     	;# 
  4538     011F                     	;# 
  4539     018C                     	;# 
  4540     018D                     	;# 
  4541     018E                     	;# 
  4542     018F                     	;# 
  4543     0190                     	;# 
  4544     0191                     	;# 
  4545     0192                     	;# 
  4546     0196                     	;# 
  4547     0197                     	;# 
  4548     0198                     	;# 
  4549     0199                     	;# 
  4550     019A                     	;# 
  4551     019B                     	;# 
  4552     019C                     	;# 
  4553     020C                     	;# 
  4554     020D                     	;# 
  4555     020E                     	;# 
  4556     020E                     	;# 
  4557     020F                     	;# 
  4558     020F                     	;# 
  4559     0210                     	;# 
  4560     0210                     	;# 
  4561     0211                     	;# 
  4562     0211                     	;# 
  4563     0212                     	;# 
  4564     0213                     	;# 
  4565     0214                     	;# 
  4566     0214                     	;# 
  4567     0215                     	;# 
  4568     0215                     	;# 
  4569     0216                     	;# 
  4570     0216                     	;# 
  4571     0217                     	;# 
  4572     0217                     	;# 
  4573     0218                     	;# 
  4574     0219                     	;# 
  4575     021A                     	;# 
  4576     021A                     	;# 
  4577     021B                     	;# 
  4578     021B                     	;# 
  4579     021C                     	;# 
  4580     021C                     	;# 
  4581     021D                     	;# 
  4582     021D                     	;# 
  4583     021E                     	;# 
  4584     021F                     	;# 
  4585     028C                     	;# 
  4586     028C                     	;# 
  4587     028D                     	;# 
  4588     028D                     	;# 
  4589     028E                     	;# 
  4590     028F                     	;# 
  4591     0290                     	;# 
  4592     0291                     	;# 
  4593     0292                     	;# 
  4594     0292                     	;# 
  4595     0293                     	;# 
  4596     0293                     	;# 
  4597     0294                     	;# 
  4598     0295                     	;# 
  4599     0296                     	;# 
  4600     0297                     	;# 
  4601     0298                     	;# 
  4602     0298                     	;# 
  4603     0299                     	;# 
  4604     0299                     	;# 
  4605     029A                     	;# 
  4606     029B                     	;# 
  4607     029C                     	;# 
  4608     029D                     	;# 
  4609     029F                     	;# 
  4610     030C                     	;# 
  4611     030C                     	;# 
  4612     030D                     	;# 
  4613     030E                     	;# 
  4614     030F                     	;# 
  4615     0310                     	;# 
  4616     0310                     	;# 
  4617     0311                     	;# 
  4618     0312                     	;# 
  4619     0313                     	;# 
  4620     0314                     	;# 
  4621     0314                     	;# 
  4622     0315                     	;# 
  4623     0316                     	;# 
  4624     0317                     	;# 
  4625     0318                     	;# 
  4626     0318                     	;# 
  4627     0319                     	;# 
  4628     031A                     	;# 
  4629     031B                     	;# 
  4630     031C                     	;# 
  4631     031C                     	;# 
  4632     031D                     	;# 
  4633     031E                     	;# 
  4634     031F                     	;# 
  4635     038C                     	;# 
  4636     038C                     	;# 
  4637     038D                     	;# 
  4638     038E                     	;# 
  4639     0390                     	;# 
  4640     0390                     	;# 
  4641     0391                     	;# 
  4642     0392                     	;# 
  4643     048C                     	;# 
  4644     048C                     	;# 
  4645     048D                     	;# 
  4646     048E                     	;# 
  4647     048F                     	;# 
  4648     048F                     	;# 
  4649     0490                     	;# 
  4650     0491                     	;# 
  4651     0492                     	;# 
  4652     0492                     	;# 
  4653     0493                     	;# 
  4654     0494                     	;# 
  4655     0495                     	;# 
  4656     0495                     	;# 
  4657     0496                     	;# 
  4658     0497                     	;# 
  4659     0498                     	;# 
  4660     0499                     	;# 
  4661     049A                     	;# 
  4662     049B                     	;# 
  4663     049C                     	;# 
  4664     049D                     	;# 
  4665     050C                     	;# 
  4666     050C                     	;# 
  4667     050D                     	;# 
  4668     050E                     	;# 
  4669     050F                     	;# 
  4670     050F                     	;# 
  4671     0510                     	;# 
  4672     0511                     	;# 
  4673     0512                     	;# 
  4674     0512                     	;# 
  4675     0513                     	;# 
  4676     0514                     	;# 
  4677     0515                     	;# 
  4678     0515                     	;# 
  4679     0516                     	;# 
  4680     0517                     	;# 
  4681     0518                     	;# 
  4682     0519                     	;# 
  4683     051A                     	;# 
  4684     051B                     	;# 
  4685     051C                     	;# 
  4686     051D                     	;# 
  4687     058C                     	;# 
  4688     058C                     	;# 
  4689     058D                     	;# 
  4690     058E                     	;# 
  4691     058F                     	;# 
  4692     058F                     	;# 
  4693     0590                     	;# 
  4694     0591                     	;# 
  4695     0592                     	;# 
  4696     0593                     	;# 
  4697     059C                     	;# 
  4698     059C                     	;# 
  4699     059D                     	;# 
  4700     059D                     	;# 
  4701     059E                     	;# 
  4702     059F                     	;# 
  4703     060C                     	;# 
  4704     060C                     	;# 
  4705     060D                     	;# 
  4706     060D                     	;# 
  4707     060E                     	;# 
  4708     060F                     	;# 
  4709     0610                     	;# 
  4710     0611                     	;# 
  4711     0612                     	;# 
  4712     0613                     	;# 
  4713     0614                     	;# 
  4714     0616                     	;# 
  4715     0616                     	;# 
  4716     0617                     	;# 
  4717     0617                     	;# 
  4718     0618                     	;# 
  4719     0619                     	;# 
  4720     061A                     	;# 
  4721     061B                     	;# 
  4722     061C                     	;# 
  4723     061D                     	;# 
  4724     061E                     	;# 
  4725     068C                     	;# 
  4726     068D                     	;# 
  4727     068E                     	;# 
  4728     068F                     	;# 
  4729     0690                     	;# 
  4730     0691                     	;# 
  4731     0692                     	;# 
  4732     0693                     	;# 
  4733     0694                     	;# 
  4734     070C                     	;# 
  4735     070D                     	;# 
  4736     070E                     	;# 
  4737     070F                     	;# 
  4738     0710                     	;# 
  4739     0711                     	;# 
  4740     0712                     	;# 
  4741     0713                     	;# 
  4742     0714                     	;# 
  4743     0716                     	;# 
  4744     0717                     	;# 
  4745     0718                     	;# 
  4746     0719                     	;# 
  4747     071A                     	;# 
  4748     071B                     	;# 
  4749     071C                     	;# 
  4750     071D                     	;# 
  4751     071E                     	;# 
  4752     0796                     	;# 
  4753     0797                     	;# 
  4754     0798                     	;# 
  4755     0799                     	;# 
  4756     079A                     	;# 
  4757     079B                     	;# 
  4758     079C                     	;# 
  4759     079D                     	;# 
  4760     080C                     	;# 
  4761     080D                     	;# 
  4762     080E                     	;# 
  4763     080F                     	;# 
  4764     0810                     	;# 
  4765     0811                     	;# 
  4766     0813                     	;# 
  4767     0814                     	;# 
  4768     081A                     	;# 
  4769     081A                     	;# 
  4770     081B                     	;# 
  4771     081C                     	;# 
  4772     081C                     	;# 
  4773     081D                     	;# 
  4774     081E                     	;# 
  4775     081F                     	;# 
  4776     088C                     	;# 
  4777     088D                     	;# 
  4778     088E                     	;# 
  4779     088F                     	;# 
  4780     0890                     	;# 
  4781     0891                     	;# 
  4782     0892                     	;# 
  4783     0893                     	;# 
  4784     0895                     	;# 
  4785     0896                     	;# 
  4786     0897                     	;# 
  4787     0898                     	;# 
  4788     0899                     	;# 
  4789     089A                     	;# 
  4790     089B                     	;# 
  4791     090C                     	;# 
  4792     090E                     	;# 
  4793     090F                     	;# 
  4794     091F                     	;# 
  4795     098F                     	;# 
  4796     098F                     	;# 
  4797     0990                     	;# 
  4798     0991                     	;# 
  4799     0992                     	;# 
  4800     0993                     	;# 
  4801     0994                     	;# 
  4802     0995                     	;# 
  4803     0996                     	;# 
  4804     0997                     	;# 
  4805     0A19                     	;# 
  4806     0A19                     	;# 
  4807     0A1A                     	;# 
  4808     0A1A                     	;# 
  4809     0A1B                     	;# 
  4810     0A1B                     	;# 
  4811     0A1B                     	;# 
  4812     0A1C                     	;# 
  4813     0A1C                     	;# 
  4814     0A1D                     	;# 
  4815     0A1D                     	;# 
  4816     0A1E                     	;# 
  4817     0A1E                     	;# 
  4818     0A1F                     	;# 
  4819     0A1F                     	;# 
  4820     0A1F                     	;# 
  4821     1E0F                     	;# 
  4822     1E10                     	;# 
  4823     1E11                     	;# 
  4824     1E12                     	;# 
  4825     1E13                     	;# 
  4826     1E14                     	;# 
  4827     1E15                     	;# 
  4828     1E16                     	;# 
  4829     1E17                     	;# 
  4830     1E18                     	;# 
  4831     1E19                     	;# 
  4832     1E1A                     	;# 
  4833     1E1B                     	;# 
  4834     1E1C                     	;# 
  4835     1E1D                     	;# 
  4836     1E1E                     	;# 
  4837     1E1F                     	;# 
  4838     1E20                     	;# 
  4839     1E21                     	;# 
  4840     1E22                     	;# 
  4841     1E23                     	;# 
  4842     1E24                     	;# 
  4843     1E25                     	;# 
  4844     1E26                     	;# 
  4845     1E27                     	;# 
  4846     1E28                     	;# 
  4847     1E29                     	;# 
  4848     1E2A                     	;# 
  4849     1E2B                     	;# 
  4850     1E2C                     	;# 
  4851     1E2D                     	;# 
  4852     1E2E                     	;# 
  4853     1E2F                     	;# 
  4854     1E30                     	;# 
  4855     1E31                     	;# 
  4856     1E32                     	;# 
  4857     1E33                     	;# 
  4858     1E34                     	;# 
  4859     1E35                     	;# 
  4860     1E36                     	;# 
  4861     1E37                     	;# 
  4862     1E8F                     	;# 
  4863     1E90                     	;# 
  4864     1E91                     	;# 
  4865     1E92                     	;# 
  4866     1E93                     	;# 
  4867     1E94                     	;# 
  4868     1E95                     	;# 
  4869     1E96                     	;# 
  4870     1E97                     	;# 
  4871     1E9C                     	;# 
  4872     1E9D                     	;# 
  4873     1E9E                     	;# 
  4874     1EA1                     	;# 
  4875     1EA2                     	;# 
  4876     1EA3                     	;# 
  4877     1EA4                     	;# 
  4878     1EA5                     	;# 
  4879     1EA9                     	;# 
  4880     1EAA                     	;# 
  4881     1EAB                     	;# 
  4882     1EAC                     	;# 
  4883     1EB1                     	;# 
  4884     1EB2                     	;# 
  4885     1EB3                     	;# 
  4886     1EB8                     	;# 
  4887     1EB9                     	;# 
  4888     1EBA                     	;# 
  4889     1EBB                     	;# 
  4890     1EBC                     	;# 
  4891     1EBD                     	;# 
  4892     1EBE                     	;# 
  4893     1EC3                     	;# 
  4894     1EC5                     	;# 
  4895     1EC6                     	;# 
  4896     1EC7                     	;# 
  4897     1EC8                     	;# 
  4898     1EC9                     	;# 
  4899     1ECA                     	;# 
  4900     1ECB                     	;# 
  4901     1ECC                     	;# 
  4902     1ECD                     	;# 
  4903     1ECE                     	;# 
  4904     1F10                     	;# 
  4905     1F11                     	;# 
  4906     1F12                     	;# 
  4907     1F13                     	;# 
  4908     1F14                     	;# 
  4909     1F15                     	;# 
  4910     1F16                     	;# 
  4911     1F17                     	;# 
  4912     1F18                     	;# 
  4913     1F19                     	;# 
  4914     1F1A                     	;# 
  4915     1F1B                     	;# 
  4916     1F1C                     	;# 
  4917     1F1D                     	;# 
  4918     1F1E                     	;# 
  4919     1F1F                     	;# 
  4920     1F20                     	;# 
  4921     1F21                     	;# 
  4922     1F22                     	;# 
  4923     1F23                     	;# 
  4924     1F24                     	;# 
  4925     1F25                     	;# 
  4926     1F26                     	;# 
  4927     1F27                     	;# 
  4928     1F38                     	;# 
  4929     1F39                     	;# 
  4930     1F3A                     	;# 
  4931     1F3B                     	;# 
  4932     1F3C                     	;# 
  4933     1F3D                     	;# 
  4934     1F3E                     	;# 
  4935     1F3F                     	;# 
  4936     1F43                     	;# 
  4937     1F44                     	;# 
  4938     1F45                     	;# 
  4939     1F46                     	;# 
  4940     1F47                     	;# 
  4941     1F48                     	;# 
  4942     1F49                     	;# 
  4943     1F4A                     	;# 
  4944     1F4E                     	;# 
  4945     1F4F                     	;# 
  4946     1F50                     	;# 
  4947     1F51                     	;# 
  4948     1F52                     	;# 
  4949     1F53                     	;# 
  4950     1F54                     	;# 
  4951     1F55                     	;# 
  4952     1F65                     	;# 
  4953     1F66                     	;# 
  4954     1F67                     	;# 
  4955     1F68                     	;# 
  4956     1F69                     	;# 
  4957     1F6A                     	;# 
  4958     1F6B                     	;# 
  4959     1FE4                     	;# 
  4960     1FE5                     	;# 
  4961     1FE6                     	;# 
  4962     1FE7                     	;# 
  4963     1FE8                     	;# 
  4964     1FE8                     	;# 
  4965     1FE9                     	;# 
  4966     1FEA                     	;# 
  4967     1FEB                     	;# 
  4968     1FED                     	;# 
  4969     1FEE                     	;# 
  4970     1FEF                     	;# 
  4971     0000                     	;# 
  4972     0001                     	;# 
  4973     0002                     	;# 
  4974     0003                     	;# 
  4975     0004                     	;# 
  4976     0005                     	;# 
  4977     0006                     	;# 
  4978     0007                     	;# 
  4979     0008                     	;# 
  4980     0009                     	;# 
  4981     000A                     	;# 
  4982     000B                     	;# 
  4983     000C                     	;# 
  4984     000D                     	;# 
  4985     000E                     	;# 
  4986     0010                     	;# 
  4987     0012                     	;# 
  4988     0013                     	;# 
  4989     0014                     	;# 
  4990     0016                     	;# 
  4991     0018                     	;# 
  4992     0019                     	;# 
  4993     001A                     	;# 
  4994     001C                     	;# 
  4995     008C                     	;# 
  4996     008C                     	;# 
  4997     008D                     	;# 
  4998     008E                     	;# 
  4999     008E                     	;# 
  5000     008F                     	;# 
  5001     0090                     	;# 
  5002     0090                     	;# 
  5003     0091                     	;# 
  5004     0092                     	;# 
  5005     0092                     	;# 
  5006     0093                     	;# 
  5007     0094                     	;# 
  5008     0094                     	;# 
  5009     0095                     	;# 
  5010     0096                     	;# 
  5011     0096                     	;# 
  5012     0097                     	;# 
  5013     0098                     	;# 
  5014     0099                     	;# 
  5015     009A                     	;# 
  5016     009B                     	;# 
  5017     009B                     	;# 
  5018     009C                     	;# 
  5019     009D                     	;# 
  5020     009D                     	;# 
  5021     009E                     	;# 
  5022     009F                     	;# 
  5023     010C                     	;# 
  5024     010C                     	;# 
  5025     010D                     	;# 
  5026     010E                     	;# 
  5027     010F                     	;# 
  5028     010F                     	;# 
  5029     0110                     	;# 
  5030     0111                     	;# 
  5031     0112                     	;# 
  5032     0113                     	;# 
  5033     0114                     	;# 
  5034     0115                     	;# 
  5035     0116                     	;# 
  5036     0117                     	;# 
  5037     0118                     	;# 
  5038     0119                     	;# 
  5039     0119                     	;# 
  5040     0119                     	;# 
  5041     011A                     	;# 
  5042     011A                     	;# 
  5043     011A                     	;# 
  5044     011B                     	;# 
  5045     011B                     	;# 
  5046     011B                     	;# 
  5047     011B                     	;# 
  5048     011B                     	;# 
  5049     011C                     	;# 
  5050     011C                     	;# 
  5051     011C                     	;# 
  5052     011D                     	;# 
  5053     011D                     	;# 
  5054     011D                     	;# 
  5055     011E                     	;# 
  5056     011E                     	;# 
  5057     011E                     	;# 
  5058     011F                     	;# 
  5059     011F                     	;# 
  5060     011F                     	;# 
  5061     011F                     	;# 
  5062     011F                     	;# 
  5063     018C                     	;# 
  5064     018D                     	;# 
  5065     018E                     	;# 
  5066     018F                     	;# 
  5067     0190                     	;# 
  5068     0191                     	;# 
  5069     0192                     	;# 
  5070     0196                     	;# 
  5071     0197                     	;# 
  5072     0198                     	;# 
  5073     0199                     	;# 
  5074     019A                     	;# 
  5075     019B                     	;# 
  5076     019C                     	;# 
  5077     020C                     	;# 
  5078     020D                     	;# 
  5079     020E                     	;# 
  5080     020E                     	;# 
  5081     020F                     	;# 
  5082     020F                     	;# 
  5083     0210                     	;# 
  5084     0210                     	;# 
  5085     0211                     	;# 
  5086     0211                     	;# 
  5087     0212                     	;# 
  5088     0213                     	;# 
  5089     0214                     	;# 
  5090     0214                     	;# 
  5091     0215                     	;# 
  5092     0215                     	;# 
  5093     0216                     	;# 
  5094     0216                     	;# 
  5095     0217                     	;# 
  5096     0217                     	;# 
  5097     0218                     	;# 
  5098     0219                     	;# 
  5099     021A                     	;# 
  5100     021A                     	;# 
  5101     021B                     	;# 
  5102     021B                     	;# 
  5103     021C                     	;# 
  5104     021C                     	;# 
  5105     021D                     	;# 
  5106     021D                     	;# 
  5107     021E                     	;# 
  5108     021F                     	;# 
  5109     028C                     	;# 
  5110     028C                     	;# 
  5111     028D                     	;# 
  5112     028D                     	;# 
  5113     028E                     	;# 
  5114     028F                     	;# 
  5115     0290                     	;# 
  5116     0291                     	;# 
  5117     0292                     	;# 
  5118     0292                     	;# 
  5119     0293                     	;# 
  5120     0293                     	;# 
  5121     0294                     	;# 
  5122     0295                     	;# 
  5123     0296                     	;# 
  5124     0297                     	;# 
  5125     0298                     	;# 
  5126     0298                     	;# 
  5127     0299                     	;# 
  5128     0299                     	;# 
  5129     029A                     	;# 
  5130     029B                     	;# 
  5131     029C                     	;# 
  5132     029D                     	;# 
  5133     029F                     	;# 
  5134     030C                     	;# 
  5135     030C                     	;# 
  5136     030D                     	;# 
  5137     030E                     	;# 
  5138     030F                     	;# 
  5139     0310                     	;# 
  5140     0310                     	;# 
  5141     0311                     	;# 
  5142     0312                     	;# 
  5143     0313                     	;# 
  5144     0314                     	;# 
  5145     0314                     	;# 
  5146     0315                     	;# 
  5147     0316                     	;# 
  5148     0317                     	;# 
  5149     0318                     	;# 
  5150     0318                     	;# 
  5151     0319                     	;# 
  5152     031A                     	;# 
  5153     031B                     	;# 
  5154     031C                     	;# 
  5155     031C                     	;# 
  5156     031D                     	;# 
  5157     031E                     	;# 
  5158     031F                     	;# 
  5159     038C                     	;# 
  5160     038C                     	;# 
  5161     038D                     	;# 
  5162     038E                     	;# 
  5163     0390                     	;# 
  5164     0390                     	;# 
  5165     0391                     	;# 
  5166     0392                     	;# 
  5167     048C                     	;# 
  5168     048C                     	;# 
  5169     048D                     	;# 
  5170     048E                     	;# 
  5171     048F                     	;# 
  5172     048F                     	;# 
  5173     0490                     	;# 
  5174     0491                     	;# 
  5175     0492                     	;# 
  5176     0492                     	;# 
  5177     0493                     	;# 
  5178     0494                     	;# 
  5179     0495                     	;# 
  5180     0495                     	;# 
  5181     0496                     	;# 
  5182     0497                     	;# 
  5183     0498                     	;# 
  5184     0499                     	;# 
  5185     049A                     	;# 
  5186     049B                     	;# 
  5187     049C                     	;# 
  5188     049D                     	;# 
  5189     050C                     	;# 
  5190     050C                     	;# 
  5191     050D                     	;# 
  5192     050E                     	;# 
  5193     050F                     	;# 
  5194     050F                     	;# 
  5195     0510                     	;# 
  5196     0511                     	;# 
  5197     0512                     	;# 
  5198     0512                     	;# 
  5199     0513                     	;# 
  5200     0514                     	;# 
  5201     0515                     	;# 
  5202     0515                     	;# 
  5203     0516                     	;# 
  5204     0517                     	;# 
  5205     0518                     	;# 
  5206     0519                     	;# 
  5207     051A                     	;# 
  5208     051B                     	;# 
  5209     051C                     	;# 
  5210     051D                     	;# 
  5211     058C                     	;# 
  5212     058C                     	;# 
  5213     058D                     	;# 
  5214     058E                     	;# 
  5215     058F                     	;# 
  5216     058F                     	;# 
  5217     0590                     	;# 
  5218     0591                     	;# 
  5219     0592                     	;# 
  5220     0593                     	;# 
  5221     059C                     	;# 
  5222     059C                     	;# 
  5223     059D                     	;# 
  5224     059D                     	;# 
  5225     059E                     	;# 
  5226     059F                     	;# 
  5227     060C                     	;# 
  5228     060C                     	;# 
  5229     060D                     	;# 
  5230     060D                     	;# 
  5231     060E                     	;# 
  5232     060F                     	;# 
  5233     0610                     	;# 
  5234     0611                     	;# 
  5235     0612                     	;# 
  5236     0613                     	;# 
  5237     0614                     	;# 
  5238     0616                     	;# 
  5239     0616                     	;# 
  5240     0617                     	;# 
  5241     0617                     	;# 
  5242     0618                     	;# 
  5243     0619                     	;# 
  5244     061A                     	;# 
  5245     061B                     	;# 
  5246     061C                     	;# 
  5247     061D                     	;# 
  5248     061E                     	;# 
  5249     068C                     	;# 
  5250     068D                     	;# 
  5251     068E                     	;# 
  5252     068F                     	;# 
  5253     0690                     	;# 
  5254     0691                     	;# 
  5255     0692                     	;# 
  5256     0693                     	;# 
  5257     0694                     	;# 
  5258     070C                     	;# 
  5259     070D                     	;# 
  5260     070E                     	;# 
  5261     070F                     	;# 
  5262     0710                     	;# 
  5263     0711                     	;# 
  5264     0712                     	;# 
  5265     0713                     	;# 
  5266     0714                     	;# 
  5267     0716                     	;# 
  5268     0717                     	;# 
  5269     0718                     	;# 
  5270     0719                     	;# 
  5271     071A                     	;# 
  5272     071B                     	;# 
  5273     071C                     	;# 
  5274     071D                     	;# 
  5275     071E                     	;# 
  5276     0796                     	;# 
  5277     0797                     	;# 
  5278     0798                     	;# 
  5279     0799                     	;# 
  5280     079A                     	;# 
  5281     079B                     	;# 
  5282     079C                     	;# 
  5283     079D                     	;# 
  5284     080C                     	;# 
  5285     080D                     	;# 
  5286     080E                     	;# 
  5287     080F                     	;# 
  5288     0810                     	;# 
  5289     0811                     	;# 
  5290     0813                     	;# 
  5291     0814                     	;# 
  5292     081A                     	;# 
  5293     081A                     	;# 
  5294     081B                     	;# 
  5295     081C                     	;# 
  5296     081C                     	;# 
  5297     081D                     	;# 
  5298     081E                     	;# 
  5299     081F                     	;# 
  5300     088C                     	;# 
  5301     088D                     	;# 
  5302     088E                     	;# 
  5303     088F                     	;# 
  5304     0890                     	;# 
  5305     0891                     	;# 
  5306     0892                     	;# 
  5307     0893                     	;# 
  5308     0895                     	;# 
  5309     0896                     	;# 
  5310     0897                     	;# 
  5311     0898                     	;# 
  5312     0899                     	;# 
  5313     089A                     	;# 
  5314     089B                     	;# 
  5315     090C                     	;# 
  5316     090E                     	;# 
  5317     090F                     	;# 
  5318     091F                     	;# 
  5319     098F                     	;# 
  5320     098F                     	;# 
  5321     0990                     	;# 
  5322     0991                     	;# 
  5323     0992                     	;# 
  5324     0993                     	;# 
  5325     0994                     	;# 
  5326     0995                     	;# 
  5327     0996                     	;# 
  5328     0997                     	;# 
  5329     0A19                     	;# 
  5330     0A19                     	;# 
  5331     0A1A                     	;# 
  5332     0A1A                     	;# 
  5333     0A1B                     	;# 
  5334     0A1B                     	;# 
  5335     0A1B                     	;# 
  5336     0A1C                     	;# 
  5337     0A1C                     	;# 
  5338     0A1D                     	;# 
  5339     0A1D                     	;# 
  5340     0A1E                     	;# 
  5341     0A1E                     	;# 
  5342     0A1F                     	;# 
  5343     0A1F                     	;# 
  5344     0A1F                     	;# 
  5345     1E0F                     	;# 
  5346     1E10                     	;# 
  5347     1E11                     	;# 
  5348     1E12                     	;# 
  5349     1E13                     	;# 
  5350     1E14                     	;# 
  5351     1E15                     	;# 
  5352     1E16                     	;# 
  5353     1E17                     	;# 
  5354     1E18                     	;# 
  5355     1E19                     	;# 
  5356     1E1A                     	;# 
  5357     1E1B                     	;# 
  5358     1E1C                     	;# 
  5359     1E1D                     	;# 
  5360     1E1E                     	;# 
  5361     1E1F                     	;# 
  5362     1E20                     	;# 
  5363     1E21                     	;# 
  5364     1E22                     	;# 
  5365     1E23                     	;# 
  5366     1E24                     	;# 
  5367     1E25                     	;# 
  5368     1E26                     	;# 
  5369     1E27                     	;# 
  5370     1E28                     	;# 
  5371     1E29                     	;# 
  5372     1E2A                     	;# 
  5373     1E2B                     	;# 
  5374     1E2C                     	;# 
  5375     1E2D                     	;# 
  5376     1E2E                     	;# 
  5377     1E2F                     	;# 
  5378     1E30                     	;# 
  5379     1E31                     	;# 
  5380     1E32                     	;# 
  5381     1E33                     	;# 
  5382     1E34                     	;# 
  5383     1E35                     	;# 
  5384     1E36                     	;# 
  5385     1E37                     	;# 
  5386     1E8F                     	;# 
  5387     1E90                     	;# 
  5388     1E91                     	;# 
  5389     1E92                     	;# 
  5390     1E93                     	;# 
  5391     1E94                     	;# 
  5392     1E95                     	;# 
  5393     1E96                     	;# 
  5394     1E97                     	;# 
  5395     1E9C                     	;# 
  5396     1E9D                     	;# 
  5397     1E9E                     	;# 
  5398     1EA1                     	;# 
  5399     1EA2                     	;# 
  5400     1EA3                     	;# 
  5401     1EA4                     	;# 
  5402     1EA5                     	;# 
  5403     1EA9                     	;# 
  5404     1EAA                     	;# 
  5405     1EAB                     	;# 
  5406     1EAC                     	;# 
  5407     1EB1                     	;# 
  5408     1EB2                     	;# 
  5409     1EB3                     	;# 
  5410     1EB8                     	;# 
  5411     1EB9                     	;# 
  5412     1EBA                     	;# 
  5413     1EBB                     	;# 
  5414     1EBC                     	;# 
  5415     1EBD                     	;# 
  5416     1EBE                     	;# 
  5417     1EC3                     	;# 
  5418     1EC5                     	;# 
  5419     1EC6                     	;# 
  5420     1EC7                     	;# 
  5421     1EC8                     	;# 
  5422     1EC9                     	;# 
  5423     1ECA                     	;# 
  5424     1ECB                     	;# 
  5425     1ECC                     	;# 
  5426     1ECD                     	;# 
  5427     1ECE                     	;# 
  5428     1F10                     	;# 
  5429     1F11                     	;# 
  5430     1F12                     	;# 
  5431     1F13                     	;# 
  5432     1F14                     	;# 
  5433     1F15                     	;# 
  5434     1F16                     	;# 
  5435     1F17                     	;# 
  5436     1F18                     	;# 
  5437     1F19                     	;# 
  5438     1F1A                     	;# 
  5439     1F1B                     	;# 
  5440     1F1C                     	;# 
  5441     1F1D                     	;# 
  5442     1F1E                     	;# 
  5443     1F1F                     	;# 
  5444     1F20                     	;# 
  5445     1F21                     	;# 
  5446     1F22                     	;# 
  5447     1F23                     	;# 
  5448     1F24                     	;# 
  5449     1F25                     	;# 
  5450     1F26                     	;# 
  5451     1F27                     	;# 
  5452     1F38                     	;# 
  5453     1F39                     	;# 
  5454     1F3A                     	;# 
  5455     1F3B                     	;# 
  5456     1F3C                     	;# 
  5457     1F3D                     	;# 
  5458     1F3E                     	;# 
  5459     1F3F                     	;# 
  5460     1F43                     	;# 
  5461     1F44                     	;# 
  5462     1F45                     	;# 
  5463     1F46                     	;# 
  5464     1F47                     	;# 
  5465     1F48                     	;# 
  5466     1F49                     	;# 
  5467     1F4A                     	;# 
  5468     1F4E                     	;# 
  5469     1F4F                     	;# 
  5470     1F50                     	;# 
  5471     1F51                     	;# 
  5472     1F52                     	;# 
  5473     1F53                     	;# 
  5474     1F54                     	;# 
  5475     1F55                     	;# 
  5476     1F65                     	;# 
  5477     1F66                     	;# 
  5478     1F67                     	;# 
  5479     1F68                     	;# 
  5480     1F69                     	;# 
  5481     1F6A                     	;# 
  5482     1F6B                     	;# 
  5483     1FE4                     	;# 
  5484     1FE5                     	;# 
  5485     1FE6                     	;# 
  5486     1FE7                     	;# 
  5487     1FE8                     	;# 
  5488     1FE8                     	;# 
  5489     1FE9                     	;# 
  5490     1FEA                     	;# 
  5491     1FEB                     	;# 
  5492     1FED                     	;# 
  5493     1FEE                     	;# 
  5494     1FEF                     	;# 
  5495     0000                     	;# 
  5496     0001                     	;# 
  5497     0002                     	;# 
  5498     0003                     	;# 
  5499     0004                     	;# 
  5500     0005                     	;# 
  5501     0006                     	;# 
  5502     0007                     	;# 
  5503     0008                     	;# 
  5504     0009                     	;# 
  5505     000A                     	;# 
  5506     000B                     	;# 
  5507     000C                     	;# 
  5508     000D                     	;# 
  5509     000E                     	;# 
  5510     0010                     	;# 
  5511     0012                     	;# 
  5512     0013                     	;# 
  5513     0014                     	;# 
  5514     0016                     	;# 
  5515     0018                     	;# 
  5516     0019                     	;# 
  5517     001A                     	;# 
  5518     001C                     	;# 
  5519     008C                     	;# 
  5520     008C                     	;# 
  5521     008D                     	;# 
  5522     008E                     	;# 
  5523     008E                     	;# 
  5524     008F                     	;# 
  5525     0090                     	;# 
  5526     0090                     	;# 
  5527     0091                     	;# 
  5528     0092                     	;# 
  5529     0092                     	;# 
  5530     0093                     	;# 
  5531     0094                     	;# 
  5532     0094                     	;# 
  5533     0095                     	;# 
  5534     0096                     	;# 
  5535     0096                     	;# 
  5536     0097                     	;# 
  5537     0098                     	;# 
  5538     0099                     	;# 
  5539     009A                     	;# 
  5540     009B                     	;# 
  5541     009B                     	;# 
  5542     009C                     	;# 
  5543     009D                     	;# 
  5544     009D                     	;# 
  5545     009E                     	;# 
  5546     009F                     	;# 
  5547     010C                     	;# 
  5548     010C                     	;# 
  5549     010D                     	;# 
  5550     010E                     	;# 
  5551     010F                     	;# 
  5552     010F                     	;# 
  5553     0110                     	;# 
  5554     0111                     	;# 
  5555     0112                     	;# 
  5556     0113                     	;# 
  5557     0114                     	;# 
  5558     0115                     	;# 
  5559     0116                     	;# 
  5560     0117                     	;# 
  5561     0118                     	;# 
  5562     0119                     	;# 
  5563     0119                     	;# 
  5564     0119                     	;# 
  5565     011A                     	;# 
  5566     011A                     	;# 
  5567     011A                     	;# 
  5568     011B                     	;# 
  5569     011B                     	;# 
  5570     011B                     	;# 
  5571     011B                     	;# 
  5572     011B                     	;# 
  5573     011C                     	;# 
  5574     011C                     	;# 
  5575     011C                     	;# 
  5576     011D                     	;# 
  5577     011D                     	;# 
  5578     011D                     	;# 
  5579     011E                     	;# 
  5580     011E                     	;# 
  5581     011E                     	;# 
  5582     011F                     	;# 
  5583     011F                     	;# 
  5584     011F                     	;# 
  5585     011F                     	;# 
  5586     011F                     	;# 
  5587     018C                     	;# 
  5588     018D                     	;# 
  5589     018E                     	;# 
  5590     018F                     	;# 
  5591     0190                     	;# 
  5592     0191                     	;# 
  5593     0192                     	;# 
  5594     0196                     	;# 
  5595     0197                     	;# 
  5596     0198                     	;# 
  5597     0199                     	;# 
  5598     019A                     	;# 
  5599     019B                     	;# 
  5600     019C                     	;# 
  5601     020C                     	;# 
  5602     020D                     	;# 
  5603     020E                     	;# 
  5604     020E                     	;# 
  5605     020F                     	;# 
  5606     020F                     	;# 
  5607     0210                     	;# 
  5608     0210                     	;# 
  5609     0211                     	;# 
  5610     0211                     	;# 
  5611     0212                     	;# 
  5612     0213                     	;# 
  5613     0214                     	;# 
  5614     0214                     	;# 
  5615     0215                     	;# 
  5616     0215                     	;# 
  5617     0216                     	;# 
  5618     0216                     	;# 
  5619     0217                     	;# 
  5620     0217                     	;# 
  5621     0218                     	;# 
  5622     0219                     	;# 
  5623     021A                     	;# 
  5624     021A                     	;# 
  5625     021B                     	;# 
  5626     021B                     	;# 
  5627     021C                     	;# 
  5628     021C                     	;# 
  5629     021D                     	;# 
  5630     021D                     	;# 
  5631     021E                     	;# 
  5632     021F                     	;# 
  5633     028C                     	;# 
  5634     028C                     	;# 
  5635     028D                     	;# 
  5636     028D                     	;# 
  5637     028E                     	;# 
  5638     028F                     	;# 
  5639     0290                     	;# 
  5640     0291                     	;# 
  5641     0292                     	;# 
  5642     0292                     	;# 
  5643     0293                     	;# 
  5644     0293                     	;# 
  5645     0294                     	;# 
  5646     0295                     	;# 
  5647     0296                     	;# 
  5648     0297                     	;# 
  5649     0298                     	;# 
  5650     0298                     	;# 
  5651     0299                     	;# 
  5652     0299                     	;# 
  5653     029A                     	;# 
  5654     029B                     	;# 
  5655     029C                     	;# 
  5656     029D                     	;# 
  5657     029F                     	;# 
  5658     030C                     	;# 
  5659     030C                     	;# 
  5660     030D                     	;# 
  5661     030E                     	;# 
  5662     030F                     	;# 
  5663     0310                     	;# 
  5664     0310                     	;# 
  5665     0311                     	;# 
  5666     0312                     	;# 
  5667     0313                     	;# 
  5668     0314                     	;# 
  5669     0314                     	;# 
  5670     0315                     	;# 
  5671     0316                     	;# 
  5672     0317                     	;# 
  5673     0318                     	;# 
  5674     0318                     	;# 
  5675     0319                     	;# 
  5676     031A                     	;# 
  5677     031B                     	;# 
  5678     031C                     	;# 
  5679     031C                     	;# 
  5680     031D                     	;# 
  5681     031E                     	;# 
  5682     031F                     	;# 
  5683     038C                     	;# 
  5684     038C                     	;# 
  5685     038D                     	;# 
  5686     038E                     	;# 
  5687     0390                     	;# 
  5688     0390                     	;# 
  5689     0391                     	;# 
  5690     0392                     	;# 
  5691     048C                     	;# 
  5692     048C                     	;# 
  5693     048D                     	;# 
  5694     048E                     	;# 
  5695     048F                     	;# 
  5696     048F                     	;# 
  5697     0490                     	;# 
  5698     0491                     	;# 
  5699     0492                     	;# 
  5700     0492                     	;# 
  5701     0493                     	;# 
  5702     0494                     	;# 
  5703     0495                     	;# 
  5704     0495                     	;# 
  5705     0496                     	;# 
  5706     0497                     	;# 
  5707     0498                     	;# 
  5708     0499                     	;# 
  5709     049A                     	;# 
  5710     049B                     	;# 
  5711     049C                     	;# 
  5712     049D                     	;# 
  5713     050C                     	;# 
  5714     050C                     	;# 
  5715     050D                     	;# 
  5716     050E                     	;# 
  5717     050F                     	;# 
  5718     050F                     	;# 
  5719     0510                     	;# 
  5720     0511                     	;# 
  5721     0512                     	;# 
  5722     0512                     	;# 
  5723     0513                     	;# 
  5724     0514                     	;# 
  5725     0515                     	;# 
  5726     0515                     	;# 
  5727     0516                     	;# 
  5728     0517                     	;# 
  5729     0518                     	;# 
  5730     0519                     	;# 
  5731     051A                     	;# 
  5732     051B                     	;# 
  5733     051C                     	;# 
  5734     051D                     	;# 
  5735     058C                     	;# 
  5736     058C                     	;# 
  5737     058D                     	;# 
  5738     058E                     	;# 
  5739     058F                     	;# 
  5740     058F                     	;# 
  5741     0590                     	;# 
  5742     0591                     	;# 
  5743     0592                     	;# 
  5744     0593                     	;# 
  5745     059C                     	;# 
  5746     059C                     	;# 
  5747     059D                     	;# 
  5748     059D                     	;# 
  5749     059E                     	;# 
  5750     059F                     	;# 
  5751     060C                     	;# 
  5752     060C                     	;# 
  5753     060D                     	;# 
  5754     060D                     	;# 
  5755     060E                     	;# 
  5756     060F                     	;# 
  5757     0610                     	;# 
  5758     0611                     	;# 
  5759     0612                     	;# 
  5760     0613                     	;# 
  5761     0614                     	;# 
  5762     0616                     	;# 
  5763     0616                     	;# 
  5764     0617                     	;# 
  5765     0617                     	;# 
  5766     0618                     	;# 
  5767     0619                     	;# 
  5768     061A                     	;# 
  5769     061B                     	;# 
  5770     061C                     	;# 
  5771     061D                     	;# 
  5772     061E                     	;# 
  5773     068C                     	;# 
  5774     068D                     	;# 
  5775     068E                     	;# 
  5776     068F                     	;# 
  5777     0690                     	;# 
  5778     0691                     	;# 
  5779     0692                     	;# 
  5780     0693                     	;# 
  5781     0694                     	;# 
  5782     070C                     	;# 
  5783     070D                     	;# 
  5784     070E                     	;# 
  5785     070F                     	;# 
  5786     0710                     	;# 
  5787     0711                     	;# 
  5788     0712                     	;# 
  5789     0713                     	;# 
  5790     0714                     	;# 
  5791     0716                     	;# 
  5792     0717                     	;# 
  5793     0718                     	;# 
  5794     0719                     	;# 
  5795     071A                     	;# 
  5796     071B                     	;# 
  5797     071C                     	;# 
  5798     071D                     	;# 
  5799     071E                     	;# 
  5800     0796                     	;# 
  5801     0797                     	;# 
  5802     0798                     	;# 
  5803     0799                     	;# 
  5804     079A                     	;# 
  5805     079B                     	;# 
  5806     079C                     	;# 
  5807     079D                     	;# 
  5808     080C                     	;# 
  5809     080D                     	;# 
  5810     080E                     	;# 
  5811     080F                     	;# 
  5812     0810                     	;# 
  5813     0811                     	;# 
  5814     0813                     	;# 
  5815     0814                     	;# 
  5816     081A                     	;# 
  5817     081A                     	;# 
  5818     081B                     	;# 
  5819     081C                     	;# 
  5820     081C                     	;# 
  5821     081D                     	;# 
  5822     081E                     	;# 
  5823     081F                     	;# 
  5824     088C                     	;# 
  5825     088D                     	;# 
  5826     088E                     	;# 
  5827     088F                     	;# 
  5828     0890                     	;# 
  5829     0891                     	;# 
  5830     0892                     	;# 
  5831     0893                     	;# 
  5832     0895                     	;# 
  5833     0896                     	;# 
  5834     0897                     	;# 
  5835     0898                     	;# 
  5836     0899                     	;# 
  5837     089A                     	;# 
  5838     089B                     	;# 
  5839     090C                     	;# 
  5840     090E                     	;# 
  5841     090F                     	;# 
  5842     091F                     	;# 
  5843     098F                     	;# 
  5844     098F                     	;# 
  5845     0990                     	;# 
  5846     0991                     	;# 
  5847     0992                     	;# 
  5848     0993                     	;# 
  5849     0994                     	;# 
  5850     0995                     	;# 
  5851     0996                     	;# 
  5852     0997                     	;# 
  5853     0A19                     	;# 
  5854     0A19                     	;# 
  5855     0A1A                     	;# 
  5856     0A1A                     	;# 
  5857     0A1B                     	;# 
  5858     0A1B                     	;# 
  5859     0A1B                     	;# 
  5860     0A1C                     	;# 
  5861     0A1C                     	;# 
  5862     0A1D                     	;# 
  5863     0A1D                     	;# 
  5864     0A1E                     	;# 
  5865     0A1E                     	;# 
  5866     0A1F                     	;# 
  5867     0A1F                     	;# 
  5868     0A1F                     	;# 
  5869     1E0F                     	;# 
  5870     1E10                     	;# 
  5871     1E11                     	;# 
  5872     1E12                     	;# 
  5873     1E13                     	;# 
  5874     1E14                     	;# 
  5875     1E15                     	;# 
  5876     1E16                     	;# 
  5877     1E17                     	;# 
  5878     1E18                     	;# 
  5879     1E19                     	;# 
  5880     1E1A                     	;# 
  5881     1E1B                     	;# 
  5882     1E1C                     	;# 
  5883     1E1D                     	;# 
  5884     1E1E                     	;# 
  5885     1E1F                     	;# 
  5886     1E20                     	;# 
  5887     1E21                     	;# 
  5888     1E22                     	;# 
  5889     1E23                     	;# 
  5890     1E24                     	;# 
  5891     1E25                     	;# 
  5892     1E26                     	;# 
  5893     1E27                     	;# 
  5894     1E28                     	;# 
  5895     1E29                     	;# 
  5896     1E2A                     	;# 
  5897     1E2B                     	;# 
  5898     1E2C                     	;# 
  5899     1E2D                     	;# 
  5900     1E2E                     	;# 
  5901     1E2F                     	;# 
  5902     1E30                     	;# 
  5903     1E31                     	;# 
  5904     1E32                     	;# 
  5905     1E33                     	;# 
  5906     1E34                     	;# 
  5907     1E35                     	;# 
  5908     1E36                     	;# 
  5909     1E37                     	;# 
  5910     1E8F                     	;# 
  5911     1E90                     	;# 
  5912     1E91                     	;# 
  5913     1E92                     	;# 
  5914     1E93                     	;# 
  5915     1E94                     	;# 
  5916     1E95                     	;# 
  5917     1E96                     	;# 
  5918     1E97                     	;# 
  5919     1E9C                     	;# 
  5920     1E9D                     	;# 
  5921     1E9E                     	;# 
  5922     1EA1                     	;# 
  5923     1EA2                     	;# 
  5924     1EA3                     	;# 
  5925     1EA4                     	;# 
  5926     1EA5                     	;# 
  5927     1EA9                     	;# 
  5928     1EAA                     	;# 
  5929     1EAB                     	;# 
  5930     1EAC                     	;# 
  5931     1EB1                     	;# 
  5932     1EB2                     	;# 
  5933     1EB3                     	;# 
  5934     1EB8                     	;# 
  5935     1EB9                     	;# 
  5936     1EBA                     	;# 
  5937     1EBB                     	;# 
  5938     1EBC                     	;# 
  5939     1EBD                     	;# 
  5940     1EBE                     	;# 
  5941     1EC3                     	;# 
  5942     1EC5                     	;# 
  5943     1EC6                     	;# 
  5944     1EC7                     	;# 
  5945     1EC8                     	;# 
  5946     1EC9                     	;# 
  5947     1ECA                     	;# 
  5948     1ECB                     	;# 
  5949     1ECC                     	;# 
  5950     1ECD                     	;# 
  5951     1ECE                     	;# 
  5952     1F10                     	;# 
  5953     1F11                     	;# 
  5954     1F12                     	;# 
  5955     1F13                     	;# 
  5956     1F14                     	;# 
  5957     1F15                     	;# 
  5958     1F16                     	;# 
  5959     1F17                     	;# 
  5960     1F18                     	;# 
  5961     1F19                     	;# 
  5962     1F1A                     	;# 
  5963     1F1B                     	;# 
  5964     1F1C                     	;# 
  5965     1F1D                     	;# 
  5966     1F1E                     	;# 
  5967     1F1F                     	;# 
  5968     1F20                     	;# 
  5969     1F21                     	;# 
  5970     1F22                     	;# 
  5971     1F23                     	;# 
  5972     1F24                     	;# 
  5973     1F25                     	;# 
  5974     1F26                     	;# 
  5975     1F27                     	;# 
  5976     1F38                     	;# 
  5977     1F39                     	;# 
  5978     1F3A                     	;# 
  5979     1F3B                     	;# 
  5980     1F3C                     	;# 
  5981     1F3D                     	;# 
  5982     1F3E                     	;# 
  5983     1F3F                     	;# 
  5984     1F43                     	;# 
  5985     1F44                     	;# 
  5986     1F45                     	;# 
  5987     1F46                     	;# 
  5988     1F47                     	;# 
  5989     1F48                     	;# 
  5990     1F49                     	;# 
  5991     1F4A                     	;# 
  5992     1F4E                     	;# 
  5993     1F4F                     	;# 
  5994     1F50                     	;# 
  5995     1F51                     	;# 
  5996     1F52                     	;# 
  5997     1F53                     	;# 
  5998     1F54                     	;# 
  5999     1F55                     	;# 
  6000     1F65                     	;# 
  6001     1F66                     	;# 
  6002     1F67                     	;# 
  6003     1F68                     	;# 
  6004     1F69                     	;# 
  6005     1F6A                     	;# 
  6006     1F6B                     	;# 
  6007     1FE4                     	;# 
  6008     1FE5                     	;# 
  6009     1FE6                     	;# 
  6010     1FE7                     	;# 
  6011     1FE8                     	;# 
  6012     1FE8                     	;# 
  6013     1FE9                     	;# 
  6014     1FEA                     	;# 
  6015     1FEB                     	;# 
  6016     1FED                     	;# 
  6017     1FEE                     	;# 
  6018     1FEF                     	;# 
  6019     0000                     	;# 
  6020     0001                     	;# 
  6021     0002                     	;# 
  6022     0003                     	;# 
  6023     0004                     	;# 
  6024     0005                     	;# 
  6025     0006                     	;# 
  6026     0007                     	;# 
  6027     0008                     	;# 
  6028     0009                     	;# 
  6029     000A                     	;# 
  6030     000B                     	;# 
  6031     000C                     	;# 
  6032     000D                     	;# 
  6033     000E                     	;# 
  6034     0010                     	;# 
  6035     0012                     	;# 
  6036     0013                     	;# 
  6037     0014                     	;# 
  6038     0016                     	;# 
  6039     0018                     	;# 
  6040     0019                     	;# 
  6041     001A                     	;# 
  6042     001C                     	;# 
  6043     008C                     	;# 
  6044     008C                     	;# 
  6045     008D                     	;# 
  6046     008E                     	;# 
  6047     008E                     	;# 
  6048     008F                     	;# 
  6049     0090                     	;# 
  6050     0090                     	;# 
  6051     0091                     	;# 
  6052     0092                     	;# 
  6053     0092                     	;# 
  6054     0093                     	;# 
  6055     0094                     	;# 
  6056     0094                     	;# 
  6057     0095                     	;# 
  6058     0096                     	;# 
  6059     0096                     	;# 
  6060     0097                     	;# 
  6061     0098                     	;# 
  6062     0099                     	;# 
  6063     009A                     	;# 
  6064     009B                     	;# 
  6065     009B                     	;# 
  6066     009C                     	;# 
  6067     009D                     	;# 
  6068     009D                     	;# 
  6069     009E                     	;# 
  6070     009F                     	;# 
  6071     010C                     	;# 
  6072     010C                     	;# 
  6073     010D                     	;# 
  6074     010E                     	;# 
  6075     010F                     	;# 
  6076     010F                     	;# 
  6077     0110                     	;# 
  6078     0111                     	;# 
  6079     0112                     	;# 
  6080     0113                     	;# 
  6081     0114                     	;# 
  6082     0115                     	;# 
  6083     0116                     	;# 
  6084     0117                     	;# 
  6085     0118                     	;# 
  6086     0119                     	;# 
  6087     0119                     	;# 
  6088     0119                     	;# 
  6089     011A                     	;# 
  6090     011A                     	;# 
  6091     011A                     	;# 
  6092     011B                     	;# 
  6093     011B                     	;# 
  6094     011B                     	;# 
  6095     011B                     	;# 
  6096     011B                     	;# 
  6097     011C                     	;# 
  6098     011C                     	;# 
  6099     011C                     	;# 
  6100     011D                     	;# 
  6101     011D                     	;# 
  6102     011D                     	;# 
  6103     011E                     	;# 
  6104     011E                     	;# 
  6105     011E                     	;# 
  6106     011F                     	;# 
  6107     011F                     	;# 
  6108     011F                     	;# 
  6109     011F                     	;# 
  6110     011F                     	;# 
  6111     018C                     	;# 
  6112     018D                     	;# 
  6113     018E                     	;# 
  6114     018F                     	;# 
  6115     0190                     	;# 
  6116     0191                     	;# 
  6117     0192                     	;# 
  6118     0196                     	;# 
  6119     0197                     	;# 
  6120     0198                     	;# 
  6121     0199                     	;# 
  6122     019A                     	;# 
  6123     019B                     	;# 
  6124     019C                     	;# 
  6125     020C                     	;# 
  6126     020D                     	;# 
  6127     020E                     	;# 
  6128     020E                     	;# 
  6129     020F                     	;# 
  6130     020F                     	;# 
  6131     0210                     	;# 
  6132     0210                     	;# 
  6133     0211                     	;# 
  6134     0211                     	;# 
  6135     0212                     	;# 
  6136     0213                     	;# 
  6137     0214                     	;# 
  6138     0214                     	;# 
  6139     0215                     	;# 
  6140     0215                     	;# 
  6141     0216                     	;# 
  6142     0216                     	;# 
  6143     0217                     	;# 
  6144     0217                     	;# 
  6145     0218                     	;# 
  6146     0219                     	;# 
  6147     021A                     	;# 
  6148     021A                     	;# 
  6149     021B                     	;# 
  6150     021B                     	;# 
  6151     021C                     	;# 
  6152     021C                     	;# 
  6153     021D                     	;# 
  6154     021D                     	;# 
  6155     021E                     	;# 
  6156     021F                     	;# 
  6157     028C                     	;# 
  6158     028C                     	;# 
  6159     028D                     	;# 
  6160     028D                     	;# 
  6161     028E                     	;# 
  6162     028F                     	;# 
  6163     0290                     	;# 
  6164     0291                     	;# 
  6165     0292                     	;# 
  6166     0292                     	;# 
  6167     0293                     	;# 
  6168     0293                     	;# 
  6169     0294                     	;# 
  6170     0295                     	;# 
  6171     0296                     	;# 
  6172     0297                     	;# 
  6173     0298                     	;# 
  6174     0298                     	;# 
  6175     0299                     	;# 
  6176     0299                     	;# 
  6177     029A                     	;# 
  6178     029B                     	;# 
  6179     029C                     	;# 
  6180     029D                     	;# 
  6181     029F                     	;# 
  6182     030C                     	;# 
  6183     030C                     	;# 
  6184     030D                     	;# 
  6185     030E                     	;# 
  6186     030F                     	;# 
  6187     0310                     	;# 
  6188     0310                     	;# 
  6189     0311                     	;# 
  6190     0312                     	;# 
  6191     0313                     	;# 
  6192     0314                     	;# 
  6193     0314                     	;# 
  6194     0315                     	;# 
  6195     0316                     	;# 
  6196     0317                     	;# 
  6197     0318                     	;# 
  6198     0318                     	;# 
  6199     0319                     	;# 
  6200     031A                     	;# 
  6201     031B                     	;# 
  6202     031C                     	;# 
  6203     031C                     	;# 
  6204     031D                     	;# 
  6205     031E                     	;# 
  6206     031F                     	;# 
  6207     038C                     	;# 
  6208     038C                     	;# 
  6209     038D                     	;# 
  6210     038E                     	;# 
  6211     0390                     	;# 
  6212     0390                     	;# 
  6213     0391                     	;# 
  6214     0392                     	;# 
  6215     048C                     	;# 
  6216     048C                     	;# 
  6217     048D                     	;# 
  6218     048E                     	;# 
  6219     048F                     	;# 
  6220     048F                     	;# 
  6221     0490                     	;# 
  6222     0491                     	;# 
  6223     0492                     	;# 
  6224     0492                     	;# 
  6225     0493                     	;# 
  6226     0494                     	;# 
  6227     0495                     	;# 
  6228     0495                     	;# 
  6229     0496                     	;# 
  6230     0497                     	;# 
  6231     0498                     	;# 
  6232     0499                     	;# 
  6233     049A                     	;# 
  6234     049B                     	;# 
  6235     049C                     	;# 
  6236     049D                     	;# 
  6237     050C                     	;# 
  6238     050C                     	;# 
  6239     050D                     	;# 
  6240     050E                     	;# 
  6241     050F                     	;# 
  6242     050F                     	;# 
  6243     0510                     	;# 
  6244     0511                     	;# 
  6245     0512                     	;# 
  6246     0512                     	;# 
  6247     0513                     	;# 
  6248     0514                     	;# 
  6249     0515                     	;# 
  6250     0515                     	;# 
  6251     0516                     	;# 
  6252     0517                     	;# 
  6253     0518                     	;# 
  6254     0519                     	;# 
  6255     051A                     	;# 
  6256     051B                     	;# 
  6257     051C                     	;# 
  6258     051D                     	;# 
  6259     058C                     	;# 
  6260     058C                     	;# 
  6261     058D                     	;# 
  6262     058E                     	;# 
  6263     058F                     	;# 
  6264     058F                     	;# 
  6265     0590                     	;# 
  6266     0591                     	;# 
  6267     0592                     	;# 
  6268     0593                     	;# 
  6269     059C                     	;# 
  6270     059C                     	;# 
  6271     059D                     	;# 
  6272     059D                     	;# 
  6273     059E                     	;# 
  6274     059F                     	;# 
  6275     060C                     	;# 
  6276     060C                     	;# 
  6277     060D                     	;# 
  6278     060D                     	;# 
  6279     060E                     	;# 
  6280     060F                     	;# 
  6281     0610                     	;# 
  6282     0611                     	;# 
  6283     0612                     	;# 
  6284     0613                     	;# 
  6285     0614                     	;# 
  6286     0616                     	;# 
  6287     0616                     	;# 
  6288     0617                     	;# 
  6289     0617                     	;# 
  6290     0618                     	;# 
  6291     0619                     	;# 
  6292     061A                     	;# 
  6293     061B                     	;# 
  6294     061C                     	;# 
  6295     061D                     	;# 
  6296     061E                     	;# 
  6297     068C                     	;# 
  6298     068D                     	;# 
  6299     068E                     	;# 
  6300     068F                     	;# 
  6301     0690                     	;# 
  6302     0691                     	;# 
  6303     0692                     	;# 
  6304     0693                     	;# 
  6305     0694                     	;# 
  6306     070C                     	;# 
  6307     070D                     	;# 
  6308     070E                     	;# 
  6309     070F                     	;# 
  6310     0710                     	;# 
  6311     0711                     	;# 
  6312     0712                     	;# 
  6313     0713                     	;# 
  6314     0714                     	;# 
  6315     0716                     	;# 
  6316     0717                     	;# 
  6317     0718                     	;# 
  6318     0719                     	;# 
  6319     071A                     	;# 
  6320     071B                     	;# 
  6321     071C                     	;# 
  6322     071D                     	;# 
  6323     071E                     	;# 
  6324     0796                     	;# 
  6325     0797                     	;# 
  6326     0798                     	;# 
  6327     0799                     	;# 
  6328     079A                     	;# 
  6329     079B                     	;# 
  6330     079C                     	;# 
  6331     079D                     	;# 
  6332     080C                     	;# 
  6333     080D                     	;# 
  6334     080E                     	;# 
  6335     080F                     	;# 
  6336     0810                     	;# 
  6337     0811                     	;# 
  6338     0813                     	;# 
  6339     0814                     	;# 
  6340     081A                     	;# 
  6341     081A                     	;# 
  6342     081B                     	;# 
  6343     081C                     	;# 
  6344     081C                     	;# 
  6345     081D                     	;# 
  6346     081E                     	;# 
  6347     081F                     	;# 
  6348     088C                     	;# 
  6349     088D                     	;# 
  6350     088E                     	;# 
  6351     088F                     	;# 
  6352     0890                     	;# 
  6353     0891                     	;# 
  6354     0892                     	;# 
  6355     0893                     	;# 
  6356     0895                     	;# 
  6357     0896                     	;# 
  6358     0897                     	;# 
  6359     0898                     	;# 
  6360     0899                     	;# 
  6361     089A                     	;# 
  6362     089B                     	;# 
  6363     090C                     	;# 
  6364     090E                     	;# 
  6365     090F                     	;# 
  6366     091F                     	;# 
  6367     098F                     	;# 
  6368     098F                     	;# 
  6369     0990                     	;# 
  6370     0991                     	;# 
  6371     0992                     	;# 
  6372     0993                     	;# 
  6373     0994                     	;# 
  6374     0995                     	;# 
  6375     0996                     	;# 
  6376     0997                     	;# 
  6377     0A19                     	;# 
  6378     0A19                     	;# 
  6379     0A1A                     	;# 
  6380     0A1A                     	;# 
  6381     0A1B                     	;# 
  6382     0A1B                     	;# 
  6383     0A1B                     	;# 
  6384     0A1C                     	;# 
  6385     0A1C                     	;# 
  6386     0A1D                     	;# 
  6387     0A1D                     	;# 
  6388     0A1E                     	;# 
  6389     0A1E                     	;# 
  6390     0A1F                     	;# 
  6391     0A1F                     	;# 
  6392     0A1F                     	;# 
  6393     1E0F                     	;# 
  6394     1E10                     	;# 
  6395     1E11                     	;# 
  6396     1E12                     	;# 
  6397     1E13                     	;# 
  6398     1E14                     	;# 
  6399     1E15                     	;# 
  6400     1E16                     	;# 
  6401     1E17                     	;# 
  6402     1E18                     	;# 
  6403     1E19                     	;# 
  6404     1E1A                     	;# 
  6405     1E1B                     	;# 
  6406     1E1C                     	;# 
  6407     1E1D                     	;# 
  6408     1E1E                     	;# 
  6409     1E1F                     	;# 
  6410     1E20                     	;# 
  6411     1E21                     	;# 
  6412     1E22                     	;# 
  6413     1E23                     	;# 
  6414     1E24                     	;# 
  6415     1E25                     	;# 
  6416     1E26                     	;# 
  6417     1E27                     	;# 
  6418     1E28                     	;# 
  6419     1E29                     	;# 
  6420     1E2A                     	;# 
  6421     1E2B                     	;# 
  6422     1E2C                     	;# 
  6423     1E2D                     	;# 
  6424     1E2E                     	;# 
  6425     1E2F                     	;# 
  6426     1E30                     	;# 
  6427     1E31                     	;# 
  6428     1E32                     	;# 
  6429     1E33                     	;# 
  6430     1E34                     	;# 
  6431     1E35                     	;# 
  6432     1E36                     	;# 
  6433     1E37                     	;# 
  6434     1E8F                     	;# 
  6435     1E90                     	;# 
  6436     1E91                     	;# 
  6437     1E92                     	;# 
  6438     1E93                     	;# 
  6439     1E94                     	;# 
  6440     1E95                     	;# 
  6441     1E96                     	;# 
  6442     1E97                     	;# 
  6443     1E9C                     	;# 
  6444     1E9D                     	;# 
  6445     1E9E                     	;# 
  6446     1EA1                     	;# 
  6447     1EA2                     	;# 
  6448     1EA3                     	;# 
  6449     1EA4                     	;# 
  6450     1EA5                     	;# 
  6451     1EA9                     	;# 
  6452     1EAA                     	;# 
  6453     1EAB                     	;# 
  6454     1EAC                     	;# 
  6455     1EB1                     	;# 
  6456     1EB2                     	;# 
  6457     1EB3                     	;# 
  6458     1EB8                     	;# 
  6459     1EB9                     	;# 
  6460     1EBA                     	;# 
  6461     1EBB                     	;# 
  6462     1EBC                     	;# 
  6463     1EBD                     	;# 
  6464     1EBE                     	;# 
  6465     1EC3                     	;# 
  6466     1EC5                     	;# 
  6467     1EC6                     	;# 
  6468     1EC7                     	;# 
  6469     1EC8                     	;# 
  6470     1EC9                     	;# 
  6471     1ECA                     	;# 
  6472     1ECB                     	;# 
  6473     1ECC                     	;# 
  6474     1ECD                     	;# 
  6475     1ECE                     	;# 
  6476     1F10                     	;# 
  6477     1F11                     	;# 
  6478     1F12                     	;# 
  6479     1F13                     	;# 
  6480     1F14                     	;# 
  6481     1F15                     	;# 
  6482     1F16                     	;# 
  6483     1F17                     	;# 
  6484     1F18                     	;# 
  6485     1F19                     	;# 
  6486     1F1A                     	;# 
  6487     1F1B                     	;# 
  6488     1F1C                     	;# 
  6489     1F1D                     	;# 
  6490     1F1E                     	;# 
  6491     1F1F                     	;# 
  6492     1F20                     	;# 
  6493     1F21                     	;# 
  6494     1F22                     	;# 
  6495     1F23                     	;# 
  6496     1F24                     	;# 
  6497     1F25                     	;# 
  6498     1F26                     	;# 
  6499     1F27                     	;# 
  6500     1F38                     	;# 
  6501     1F39                     	;# 
  6502     1F3A                     	;# 
  6503     1F3B                     	;# 
  6504     1F3C                     	;# 
  6505     1F3D                     	;# 
  6506     1F3E                     	;# 
  6507     1F3F                     	;# 
  6508     1F43                     	;# 
  6509     1F44                     	;# 
  6510     1F45                     	;# 
  6511     1F46                     	;# 
  6512     1F47                     	;# 
  6513     1F48                     	;# 
  6514     1F49                     	;# 
  6515     1F4A                     	;# 
  6516     1F4E                     	;# 
  6517     1F4F                     	;# 
  6518     1F50                     	;# 
  6519     1F51                     	;# 
  6520     1F52                     	;# 
  6521     1F53                     	;# 
  6522     1F54                     	;# 
  6523     1F55                     	;# 
  6524     1F65                     	;# 
  6525     1F66                     	;# 
  6526     1F67                     	;# 
  6527     1F68                     	;# 
  6528     1F69                     	;# 
  6529     1F6A                     	;# 
  6530     1F6B                     	;# 
  6531     1FE4                     	;# 
  6532     1FE5                     	;# 
  6533     1FE6                     	;# 
  6534     1FE7                     	;# 
  6535     1FE8                     	;# 
  6536     1FE8                     	;# 
  6537     1FE9                     	;# 
  6538     1FEA                     	;# 
  6539     1FEB                     	;# 
  6540     1FED                     	;# 
  6541     1FEE                     	;# 
  6542     1FEF                     	;# 
  6543     0000                     	;# 
  6544     0001                     	;# 
  6545     0002                     	;# 
  6546     0003                     	;# 
  6547     0004                     	;# 
  6548     0005                     	;# 
  6549     0006                     	;# 
  6550     0007                     	;# 
  6551     0008                     	;# 
  6552     0009                     	;# 
  6553     000A                     	;# 
  6554     000B                     	;# 
  6555     000C                     	;# 
  6556     000D                     	;# 
  6557     000E                     	;# 
  6558     0010                     	;# 
  6559     0012                     	;# 
  6560     0013                     	;# 
  6561     0014                     	;# 
  6562     0016                     	;# 
  6563     0018                     	;# 
  6564     0019                     	;# 
  6565     001A                     	;# 
  6566     001C                     	;# 
  6567     008C                     	;# 
  6568     008C                     	;# 
  6569     008D                     	;# 
  6570     008E                     	;# 
  6571     008E                     	;# 
  6572     008F                     	;# 
  6573     0090                     	;# 
  6574     0090                     	;# 
  6575     0091                     	;# 
  6576     0092                     	;# 
  6577     0092                     	;# 
  6578     0093                     	;# 
  6579     0094                     	;# 
  6580     0094                     	;# 
  6581     0095                     	;# 
  6582     0096                     	;# 
  6583     0096                     	;# 
  6584     0097                     	;# 
  6585     0098                     	;# 
  6586     0099                     	;# 
  6587     009A                     	;# 
  6588     009B                     	;# 
  6589     009B                     	;# 
  6590     009C                     	;# 
  6591     009D                     	;# 
  6592     009D                     	;# 
  6593     009E                     	;# 
  6594     009F                     	;# 
  6595     010C                     	;# 
  6596     010C                     	;# 
  6597     010D                     	;# 
  6598     010E                     	;# 
  6599     010F                     	;# 
  6600     010F                     	;# 
  6601     0110                     	;# 
  6602     0111                     	;# 
  6603     0112                     	;# 
  6604     0113                     	;# 
  6605     0114                     	;# 
  6606     0115                     	;# 
  6607     0116                     	;# 
  6608     0117                     	;# 
  6609     0118                     	;# 
  6610     0119                     	;# 
  6611     0119                     	;# 
  6612     0119                     	;# 
  6613     011A                     	;# 
  6614     011A                     	;# 
  6615     011A                     	;# 
  6616     011B                     	;# 
  6617     011B                     	;# 
  6618     011B                     	;# 
  6619     011B                     	;# 
  6620     011B                     	;# 
  6621     011C                     	;# 
  6622     011C                     	;# 
  6623     011C                     	;# 
  6624     011D                     	;# 
  6625     011D                     	;# 
  6626     011D                     	;# 
  6627     011E                     	;# 
  6628     011E                     	;# 
  6629     011E                     	;# 
  6630     011F                     	;# 
  6631     011F                     	;# 
  6632     011F                     	;# 
  6633     011F                     	;# 
  6634     011F                     	;# 
  6635     018C                     	;# 
  6636     018D                     	;# 
  6637     018E                     	;# 
  6638     018F                     	;# 
  6639     0190                     	;# 
  6640     0191                     	;# 
  6641     0192                     	;# 
  6642     0196                     	;# 
  6643     0197                     	;# 
  6644     0198                     	;# 
  6645     0199                     	;# 
  6646     019A                     	;# 
  6647     019B                     	;# 
  6648     019C                     	;# 
  6649     020C                     	;# 
  6650     020D                     	;# 
  6651     020E                     	;# 
  6652     020E                     	;# 
  6653     020F                     	;# 
  6654     020F                     	;# 
  6655     0210                     	;# 
  6656     0210                     	;# 
  6657     0211                     	;# 
  6658     0211                     	;# 
  6659     0212                     	;# 
  6660     0213                     	;# 
  6661     0214                     	;# 
  6662     0214                     	;# 
  6663     0215                     	;# 
  6664     0215                     	;# 
  6665     0216                     	;# 
  6666     0216                     	;# 
  6667     0217                     	;# 
  6668     0217                     	;# 
  6669     0218                     	;# 
  6670     0219                     	;# 
  6671     021A                     	;# 
  6672     021A                     	;# 
  6673     021B                     	;# 
  6674     021B                     	;# 
  6675     021C                     	;# 
  6676     021C                     	;# 
  6677     021D                     	;# 
  6678     021D                     	;# 
  6679     021E                     	;# 
  6680     021F                     	;# 
  6681     028C                     	;# 
  6682     028C                     	;# 
  6683     028D                     	;# 
  6684     028D                     	;# 
  6685     028E                     	;# 
  6686     028F                     	;# 
  6687     0290                     	;# 
  6688     0291                     	;# 
  6689     0292                     	;# 
  6690     0292                     	;# 
  6691     0293                     	;# 
  6692     0293                     	;# 
  6693     0294                     	;# 
  6694     0295                     	;# 
  6695     0296                     	;# 
  6696     0297                     	;# 
  6697     0298                     	;# 
  6698     0298                     	;# 
  6699     0299                     	;# 
  6700     0299                     	;# 
  6701     029A                     	;# 
  6702     029B                     	;# 
  6703     029C                     	;# 
  6704     029D                     	;# 
  6705     029F                     	;# 
  6706     030C                     	;# 
  6707     030C                     	;# 
  6708     030D                     	;# 
  6709     030E                     	;# 
  6710     030F                     	;# 
  6711     0310                     	;# 
  6712     0310                     	;# 
  6713     0311                     	;# 
  6714     0312                     	;# 
  6715     0313                     	;# 
  6716     0314                     	;# 
  6717     0314                     	;# 
  6718     0315                     	;# 
  6719     0316                     	;# 
  6720     0317                     	;# 
  6721     0318                     	;# 
  6722     0318                     	;# 
  6723     0319                     	;# 
  6724     031A                     	;# 
  6725     031B                     	;# 
  6726     031C                     	;# 
  6727     031C                     	;# 
  6728     031D                     	;# 
  6729     031E                     	;# 
  6730     031F                     	;# 
  6731     038C                     	;# 
  6732     038C                     	;# 
  6733     038D                     	;# 
  6734     038E                     	;# 
  6735     0390                     	;# 
  6736     0390                     	;# 
  6737     0391                     	;# 
  6738     0392                     	;# 
  6739     048C                     	;# 
  6740     048C                     	;# 
  6741     048D                     	;# 
  6742     048E                     	;# 
  6743     048F                     	;# 
  6744     048F                     	;# 
  6745     0490                     	;# 
  6746     0491                     	;# 
  6747     0492                     	;# 
  6748     0492                     	;# 
  6749     0493                     	;# 
  6750     0494                     	;# 
  6751     0495                     	;# 
  6752     0495                     	;# 
  6753     0496                     	;# 
  6754     0497                     	;# 
  6755     0498                     	;# 
  6756     0499                     	;# 
  6757     049A                     	;# 
  6758     049B                     	;# 
  6759     049C                     	;# 
  6760     049D                     	;# 
  6761     050C                     	;# 
  6762     050C                     	;# 
  6763     050D                     	;# 
  6764     050E                     	;# 
  6765     050F                     	;# 
  6766     050F                     	;# 
  6767     0510                     	;# 
  6768     0511                     	;# 
  6769     0512                     	;# 
  6770     0512                     	;# 
  6771     0513                     	;# 
  6772     0514                     	;# 
  6773     0515                     	;# 
  6774     0515                     	;# 
  6775     0516                     	;# 
  6776     0517                     	;# 
  6777     0518                     	;# 
  6778     0519                     	;# 
  6779     051A                     	;# 
  6780     051B                     	;# 
  6781     051C                     	;# 
  6782     051D                     	;# 
  6783     058C                     	;# 
  6784     058C                     	;# 
  6785     058D                     	;# 
  6786     058E                     	;# 
  6787     058F                     	;# 
  6788     058F                     	;# 
  6789     0590                     	;# 
  6790     0591                     	;# 
  6791     0592                     	;# 
  6792     0593                     	;# 
  6793     059C                     	;# 
  6794     059C                     	;# 
  6795     059D                     	;# 
  6796     059D                     	;# 
  6797     059E                     	;# 
  6798     059F                     	;# 
  6799     060C                     	;# 
  6800     060C                     	;# 
  6801     060D                     	;# 
  6802     060D                     	;# 
  6803     060E                     	;# 
  6804     060F                     	;# 
  6805     0610                     	;# 
  6806     0611                     	;# 
  6807     0612                     	;# 
  6808     0613                     	;# 
  6809     0614                     	;# 
  6810     0616                     	;# 
  6811     0616                     	;# 
  6812     0617                     	;# 
  6813     0617                     	;# 
  6814     0618                     	;# 
  6815     0619                     	;# 
  6816     061A                     	;# 
  6817     061B                     	;# 
  6818     061C                     	;# 
  6819     061D                     	;# 
  6820     061E                     	;# 
  6821     068C                     	;# 
  6822     068D                     	;# 
  6823     068E                     	;# 
  6824     068F                     	;# 
  6825     0690                     	;# 
  6826     0691                     	;# 
  6827     0692                     	;# 
  6828     0693                     	;# 
  6829     0694                     	;# 
  6830     070C                     	;# 
  6831     070D                     	;# 
  6832     070E                     	;# 
  6833     070F                     	;# 
  6834     0710                     	;# 
  6835     0711                     	;# 
  6836     0712                     	;# 
  6837     0713                     	;# 
  6838     0714                     	;# 
  6839     0716                     	;# 
  6840     0717                     	;# 
  6841     0718                     	;# 
  6842     0719                     	;# 
  6843     071A                     	;# 
  6844     071B                     	;# 
  6845     071C                     	;# 
  6846     071D                     	;# 
  6847     071E                     	;# 
  6848     0796                     	;# 
  6849     0797                     	;# 
  6850     0798                     	;# 
  6851     0799                     	;# 
  6852     079A                     	;# 
  6853     079B                     	;# 
  6854     079C                     	;# 
  6855     079D                     	;# 
  6856     080C                     	;# 
  6857     080D                     	;# 
  6858     080E                     	;# 
  6859     080F                     	;# 
  6860     0810                     	;# 
  6861     0811                     	;# 
  6862     0813                     	;# 
  6863     0814                     	;# 
  6864     081A                     	;# 
  6865     081A                     	;# 
  6866     081B                     	;# 
  6867     081C                     	;# 
  6868     081C                     	;# 
  6869     081D                     	;# 
  6870     081E                     	;# 
  6871     081F                     	;# 
  6872     088C                     	;# 
  6873     088D                     	;# 
  6874     088E                     	;# 
  6875     088F                     	;# 
  6876     0890                     	;# 
  6877     0891                     	;# 
  6878     0892                     	;# 
  6879     0893                     	;# 
  6880     0895                     	;# 
  6881     0896                     	;# 
  6882     0897                     	;# 
  6883     0898                     	;# 
  6884     0899                     	;# 
  6885     089A                     	;# 
  6886     089B                     	;# 
  6887     090C                     	;# 
  6888     090E                     	;# 
  6889     090F                     	;# 
  6890     091F                     	;# 
  6891     098F                     	;# 
  6892     098F                     	;# 
  6893     0990                     	;# 
  6894     0991                     	;# 
  6895     0992                     	;# 
  6896     0993                     	;# 
  6897     0994                     	;# 
  6898     0995                     	;# 
  6899     0996                     	;# 
  6900     0997                     	;# 
  6901     0A19                     	;# 
  6902     0A19                     	;# 
  6903     0A1A                     	;# 
  6904     0A1A                     	;# 
  6905     0A1B                     	;# 
  6906     0A1B                     	;# 
  6907     0A1B                     	;# 
  6908     0A1C                     	;# 
  6909     0A1C                     	;# 
  6910     0A1D                     	;# 
  6911     0A1D                     	;# 
  6912     0A1E                     	;# 
  6913     0A1E                     	;# 
  6914     0A1F                     	;# 
  6915     0A1F                     	;# 
  6916     0A1F                     	;# 
  6917     1E0F                     	;# 
  6918     1E10                     	;# 
  6919     1E11                     	;# 
  6920     1E12                     	;# 
  6921     1E13                     	;# 
  6922     1E14                     	;# 
  6923     1E15                     	;# 
  6924     1E16                     	;# 
  6925     1E17                     	;# 
  6926     1E18                     	;# 
  6927     1E19                     	;# 
  6928     1E1A                     	;# 
  6929     1E1B                     	;# 
  6930     1E1C                     	;# 
  6931     1E1D                     	;# 
  6932     1E1E                     	;# 
  6933     1E1F                     	;# 
  6934     1E20                     	;# 
  6935     1E21                     	;# 
  6936     1E22                     	;# 
  6937     1E23                     	;# 
  6938     1E24                     	;# 
  6939     1E25                     	;# 
  6940     1E26                     	;# 
  6941     1E27                     	;# 
  6942     1E28                     	;# 
  6943     1E29                     	;# 
  6944     1E2A                     	;# 
  6945     1E2B                     	;# 
  6946     1E2C                     	;# 
  6947     1E2D                     	;# 
  6948     1E2E                     	;# 
  6949     1E2F                     	;# 
  6950     1E30                     	;# 
  6951     1E31                     	;# 
  6952     1E32                     	;# 
  6953     1E33                     	;# 
  6954     1E34                     	;# 
  6955     1E35                     	;# 
  6956     1E36                     	;# 
  6957     1E37                     	;# 
  6958     1E8F                     	;# 
  6959     1E90                     	;# 
  6960     1E91                     	;# 
  6961     1E92                     	;# 
  6962     1E93                     	;# 
  6963     1E94                     	;# 
  6964     1E95                     	;# 
  6965     1E96                     	;# 
  6966     1E97                     	;# 
  6967     1E9C                     	;# 
  6968     1E9D                     	;# 
  6969     1E9E                     	;# 
  6970     1EA1                     	;# 
  6971     1EA2                     	;# 
  6972     1EA3                     	;# 
  6973     1EA4                     	;# 
  6974     1EA5                     	;# 
  6975     1EA9                     	;# 
  6976     1EAA                     	;# 
  6977     1EAB                     	;# 
  6978     1EAC                     	;# 
  6979     1EB1                     	;# 
  6980     1EB2                     	;# 
  6981     1EB3                     	;# 
  6982     1EB8                     	;# 
  6983     1EB9                     	;# 
  6984     1EBA                     	;# 
  6985     1EBB                     	;# 
  6986     1EBC                     	;# 
  6987     1EBD                     	;# 
  6988     1EBE                     	;# 
  6989     1EC3                     	;# 
  6990     1EC5                     	;# 
  6991     1EC6                     	;# 
  6992     1EC7                     	;# 
  6993     1EC8                     	;# 
  6994     1EC9                     	;# 
  6995     1ECA                     	;# 
  6996     1ECB                     	;# 
  6997     1ECC                     	;# 
  6998     1ECD                     	;# 
  6999     1ECE                     	;# 
  7000     1F10                     	;# 
  7001     1F11                     	;# 
  7002     1F12                     	;# 
  7003     1F13                     	;# 
  7004     1F14                     	;# 
  7005     1F15                     	;# 
  7006     1F16                     	;# 
  7007     1F17                     	;# 
  7008     1F18                     	;# 
  7009     1F19                     	;# 
  7010     1F1A                     	;# 
  7011     1F1B                     	;# 
  7012     1F1C                     	;# 
  7013     1F1D                     	;# 
  7014     1F1E                     	;# 
  7015     1F1F                     	;# 
  7016     1F20                     	;# 
  7017     1F21                     	;# 
  7018     1F22                     	;# 
  7019     1F23                     	;# 
  7020     1F24                     	;# 
  7021     1F25                     	;# 
  7022     1F26                     	;# 
  7023     1F27                     	;# 
  7024     1F38                     	;# 
  7025     1F39                     	;# 
  7026     1F3A                     	;# 
  7027     1F3B                     	;# 
  7028     1F3C                     	;# 
  7029     1F3D                     	;# 
  7030     1F3E                     	;# 
  7031     1F3F                     	;# 
  7032     1F43                     	;# 
  7033     1F44                     	;# 
  7034     1F45                     	;# 
  7035     1F46                     	;# 
  7036     1F47                     	;# 
  7037     1F48                     	;# 
  7038     1F49                     	;# 
  7039     1F4A                     	;# 
  7040     1F4E                     	;# 
  7041     1F4F                     	;# 
  7042     1F50                     	;# 
  7043     1F51                     	;# 
  7044     1F52                     	;# 
  7045     1F53                     	;# 
  7046     1F54                     	;# 
  7047     1F55                     	;# 
  7048     1F65                     	;# 
  7049     1F66                     	;# 
  7050     1F67                     	;# 
  7051     1F68                     	;# 
  7052     1F69                     	;# 
  7053     1F6A                     	;# 
  7054     1F6B                     	;# 
  7055     1FE4                     	;# 
  7056     1FE5                     	;# 
  7057     1FE6                     	;# 
  7058     1FE7                     	;# 
  7059     1FE8                     	;# 
  7060     1FE8                     	;# 
  7061     1FE9                     	;# 
  7062     1FEA                     	;# 
  7063     1FEB                     	;# 
  7064     1FED                     	;# 
  7065     1FEE                     	;# 
  7066     1FEF                     	;# 
  7067     0000                     	;# 
  7068     0001                     	;# 
  7069     0002                     	;# 
  7070     0003                     	;# 
  7071     0004                     	;# 
  7072     0005                     	;# 
  7073     0006                     	;# 
  7074     0007                     	;# 
  7075     0008                     	;# 
  7076     0009                     	;# 
  7077     000A                     	;# 
  7078     000B                     	;# 
  7079     000C                     	;# 
  7080     000D                     	;# 
  7081     000E                     	;# 
  7082     0010                     	;# 
  7083     0012                     	;# 
  7084     0013                     	;# 
  7085     0014                     	;# 
  7086     0016                     	;# 
  7087     0018                     	;# 
  7088     0019                     	;# 
  7089     001A                     	;# 
  7090     001C                     	;# 
  7091     008C                     	;# 
  7092     008C                     	;# 
  7093     008D                     	;# 
  7094     008E                     	;# 
  7095     008E                     	;# 
  7096     008F                     	;# 
  7097     0090                     	;# 
  7098     0090                     	;# 
  7099     0091                     	;# 
  7100     0092                     	;# 
  7101     0092                     	;# 
  7102     0093                     	;# 
  7103     0094                     	;# 
  7104     0094                     	;# 
  7105     0095                     	;# 
  7106     0096                     	;# 
  7107     0096                     	;# 
  7108     0097                     	;# 
  7109     0098                     	;# 
  7110     0099                     	;# 
  7111     009A                     	;# 
  7112     009B                     	;# 
  7113     009B                     	;# 
  7114     009C                     	;# 
  7115     009D                     	;# 
  7116     009D                     	;# 
  7117     009E                     	;# 
  7118     009F                     	;# 
  7119     010C                     	;# 
  7120     010C                     	;# 
  7121     010D                     	;# 
  7122     010E                     	;# 
  7123     010F                     	;# 
  7124     010F                     	;# 
  7125     0110                     	;# 
  7126     0111                     	;# 
  7127     0112                     	;# 
  7128     0113                     	;# 
  7129     0114                     	;# 
  7130     0115                     	;# 
  7131     0116                     	;# 
  7132     0117                     	;# 
  7133     0118                     	;# 
  7134     0119                     	;# 
  7135     0119                     	;# 
  7136     0119                     	;# 
  7137     011A                     	;# 
  7138     011A                     	;# 
  7139     011A                     	;# 
  7140     011B                     	;# 
  7141     011B                     	;# 
  7142     011B                     	;# 
  7143     011B                     	;# 
  7144     011B                     	;# 
  7145     011C                     	;# 
  7146     011C                     	;# 
  7147     011C                     	;# 
  7148     011D                     	;# 
  7149     011D                     	;# 
  7150     011D                     	;# 
  7151     011E                     	;# 
  7152     011E                     	;# 
  7153     011E                     	;# 
  7154     011F                     	;# 
  7155     011F                     	;# 
  7156     011F                     	;# 
  7157     011F                     	;# 
  7158     011F                     	;# 
  7159     018C                     	;# 
  7160     018D                     	;# 
  7161     018E                     	;# 
  7162     018F                     	;# 
  7163     0190                     	;# 
  7164     0191                     	;# 
  7165     0192                     	;# 
  7166     0196                     	;# 
  7167     0197                     	;# 
  7168     0198                     	;# 
  7169     0199                     	;# 
  7170     019A                     	;# 
  7171     019B                     	;# 
  7172     019C                     	;# 
  7173     020C                     	;# 
  7174     020D                     	;# 
  7175     020E                     	;# 
  7176     020E                     	;# 
  7177     020F                     	;# 
  7178     020F                     	;# 
  7179     0210                     	;# 
  7180     0210                     	;# 
  7181     0211                     	;# 
  7182     0211                     	;# 
  7183     0212                     	;# 
  7184     0213                     	;# 
  7185     0214                     	;# 
  7186     0214                     	;# 
  7187     0215                     	;# 
  7188     0215                     	;# 
  7189     0216                     	;# 
  7190     0216                     	;# 
  7191     0217                     	;# 
  7192     0217                     	;# 
  7193     0218                     	;# 
  7194     0219                     	;# 
  7195     021A                     	;# 
  7196     021A                     	;# 
  7197     021B                     	;# 
  7198     021B                     	;# 
  7199     021C                     	;# 
  7200     021C                     	;# 
  7201     021D                     	;# 
  7202     021D                     	;# 
  7203     021E                     	;# 
  7204     021F                     	;# 
  7205     028C                     	;# 
  7206     028C                     	;# 
  7207     028D                     	;# 
  7208     028D                     	;# 
  7209     028E                     	;# 
  7210     028F                     	;# 
  7211     0290                     	;# 
  7212     0291                     	;# 
  7213     0292                     	;# 
  7214     0292                     	;# 
  7215     0293                     	;# 
  7216     0293                     	;# 
  7217     0294                     	;# 
  7218     0295                     	;# 
  7219     0296                     	;# 
  7220     0297                     	;# 
  7221     0298                     	;# 
  7222     0298                     	;# 
  7223     0299                     	;# 
  7224     0299                     	;# 
  7225     029A                     	;# 
  7226     029B                     	;# 
  7227     029C                     	;# 
  7228     029D                     	;# 
  7229     029F                     	;# 
  7230     030C                     	;# 
  7231     030C                     	;# 
  7232     030D                     	;# 
  7233     030E                     	;# 
  7234     030F                     	;# 
  7235     0310                     	;# 
  7236     0310                     	;# 
  7237     0311                     	;# 
  7238     0312                     	;# 
  7239     0313                     	;# 
  7240     0314                     	;# 
  7241     0314                     	;# 
  7242     0315                     	;# 
  7243     0316                     	;# 
  7244     0317                     	;# 
  7245     0318                     	;# 
  7246     0318                     	;# 
  7247     0319                     	;# 
  7248     031A                     	;# 
  7249     031B                     	;# 
  7250     031C                     	;# 
  7251     031C                     	;# 
  7252     031D                     	;# 
  7253     031E                     	;# 
  7254     031F                     	;# 
  7255     038C                     	;# 
  7256     038C                     	;# 
  7257     038D                     	;# 
  7258     038E                     	;# 
  7259     0390                     	;# 
  7260     0390                     	;# 
  7261     0391                     	;# 
  7262     0392                     	;# 
  7263     048C                     	;# 
  7264     048C                     	;# 
  7265     048D                     	;# 
  7266     048E                     	;# 
  7267     048F                     	;# 
  7268     048F                     	;# 
  7269     0490                     	;# 
  7270     0491                     	;# 
  7271     0492                     	;# 
  7272     0492                     	;# 
  7273     0493                     	;# 
  7274     0494                     	;# 
  7275     0495                     	;# 
  7276     0495                     	;# 
  7277     0496                     	;# 
  7278     0497                     	;# 
  7279     0498                     	;# 
  7280     0499                     	;# 
  7281     049A                     	;# 
  7282     049B                     	;# 
  7283     049C                     	;# 
  7284     049D                     	;# 
  7285     050C                     	;# 
  7286     050C                     	;# 
  7287     050D                     	;# 
  7288     050E                     	;# 
  7289     050F                     	;# 
  7290     050F                     	;# 
  7291     0510                     	;# 
  7292     0511                     	;# 
  7293     0512                     	;# 
  7294     0512                     	;# 
  7295     0513                     	;# 
  7296     0514                     	;# 
  7297     0515                     	;# 
  7298     0515                     	;# 
  7299     0516                     	;# 
  7300     0517                     	;# 
  7301     0518                     	;# 
  7302     0519                     	;# 
  7303     051A                     	;# 
  7304     051B                     	;# 
  7305     051C                     	;# 
  7306     051D                     	;# 
  7307     058C                     	;# 
  7308     058C                     	;# 
  7309     058D                     	;# 
  7310     058E                     	;# 
  7311     058F                     	;# 
  7312     058F                     	;# 
  7313     0590                     	;# 
  7314     0591                     	;# 
  7315     0592                     	;# 
  7316     0593                     	;# 
  7317     059C                     	;# 
  7318     059C                     	;# 
  7319     059D                     	;# 
  7320     059D                     	;# 
  7321     059E                     	;# 
  7322     059F                     	;# 
  7323     060C                     	;# 
  7324     060C                     	;# 
  7325     060D                     	;# 
  7326     060D                     	;# 
  7327     060E                     	;# 
  7328     060F                     	;# 
  7329     0610                     	;# 
  7330     0611                     	;# 
  7331     0612                     	;# 
  7332     0613                     	;# 
  7333     0614                     	;# 
  7334     0616                     	;# 
  7335     0616                     	;# 
  7336     0617                     	;# 
  7337     0617                     	;# 
  7338     0618                     	;# 
  7339     0619                     	;# 
  7340     061A                     	;# 
  7341     061B                     	;# 
  7342     061C                     	;# 
  7343     061D                     	;# 
  7344     061E                     	;# 
  7345     068C                     	;# 
  7346     068D                     	;# 
  7347     068E                     	;# 
  7348     068F                     	;# 
  7349     0690                     	;# 
  7350     0691                     	;# 
  7351     0692                     	;# 
  7352     0693                     	;# 
  7353     0694                     	;# 
  7354     070C                     	;# 
  7355     070D                     	;# 
  7356     070E                     	;# 
  7357     070F                     	;# 
  7358     0710                     	;# 
  7359     0711                     	;# 
  7360     0712                     	;# 
  7361     0713                     	;# 
  7362     0714                     	;# 
  7363     0716                     	;# 
  7364     0717                     	;# 
  7365     0718                     	;# 
  7366     0719                     	;# 
  7367     071A                     	;# 
  7368     071B                     	;# 
  7369     071C                     	;# 
  7370     071D                     	;# 
  7371     071E                     	;# 
  7372     0796                     	;# 
  7373     0797                     	;# 
  7374     0798                     	;# 
  7375     0799                     	;# 
  7376     079A                     	;# 
  7377     079B                     	;# 
  7378     079C                     	;# 
  7379     079D                     	;# 
  7380     080C                     	;# 
  7381     080D                     	;# 
  7382     080E                     	;# 
  7383     080F                     	;# 
  7384     0810                     	;# 
  7385     0811                     	;# 
  7386     0813                     	;# 
  7387     0814                     	;# 
  7388     081A                     	;# 
  7389     081A                     	;# 
  7390     081B                     	;# 
  7391     081C                     	;# 
  7392     081C                     	;# 
  7393     081D                     	;# 
  7394     081E                     	;# 
  7395     081F                     	;# 
  7396     088C                     	;# 
  7397     088D                     	;# 
  7398     088E                     	;# 
  7399     088F                     	;# 
  7400     0890                     	;# 
  7401     0891                     	;# 
  7402     0892                     	;# 
  7403     0893                     	;# 
  7404     0895                     	;# 
  7405     0896                     	;# 
  7406     0897                     	;# 
  7407     0898                     	;# 
  7408     0899                     	;# 
  7409     089A                     	;# 
  7410     089B                     	;# 
  7411     090C                     	;# 
  7412     090E                     	;# 
  7413     090F                     	;# 
  7414     091F                     	;# 
  7415     098F                     	;# 
  7416     098F                     	;# 
  7417     0990                     	;# 
  7418     0991                     	;# 
  7419     0992                     	;# 
  7420     0993                     	;# 
  7421     0994                     	;# 
  7422     0995                     	;# 
  7423     0996                     	;# 
  7424     0997                     	;# 
  7425     0A19                     	;# 
  7426     0A19                     	;# 
  7427     0A1A                     	;# 
  7428     0A1A                     	;# 
  7429     0A1B                     	;# 
  7430     0A1B                     	;# 
  7431     0A1B                     	;# 
  7432     0A1C                     	;# 
  7433     0A1C                     	;# 
  7434     0A1D                     	;# 
  7435     0A1D                     	;# 
  7436     0A1E                     	;# 
  7437     0A1E                     	;# 
  7438     0A1F                     	;# 
  7439     0A1F                     	;# 
  7440     0A1F                     	;# 
  7441     1E0F                     	;# 
  7442     1E10                     	;# 
  7443     1E11                     	;# 
  7444     1E12                     	;# 
  7445     1E13                     	;# 
  7446     1E14                     	;# 
  7447     1E15                     	;# 
  7448     1E16                     	;# 
  7449     1E17                     	;# 
  7450     1E18                     	;# 
  7451     1E19                     	;# 
  7452     1E1A                     	;# 
  7453     1E1B                     	;# 
  7454     1E1C                     	;# 
  7455     1E1D                     	;# 
  7456     1E1E                     	;# 
  7457     1E1F                     	;# 
  7458     1E20                     	;# 
  7459     1E21                     	;# 
  7460     1E22                     	;# 
  7461     1E23                     	;# 
  7462     1E24                     	;# 
  7463     1E25                     	;# 
  7464     1E26                     	;# 
  7465     1E27                     	;# 
  7466     1E28                     	;# 
  7467     1E29                     	;# 
  7468     1E2A                     	;# 
  7469     1E2B                     	;# 
  7470     1E2C                     	;# 
  7471     1E2D                     	;# 
  7472     1E2E                     	;# 
  7473     1E2F                     	;# 
  7474     1E30                     	;# 
  7475     1E31                     	;# 
  7476     1E32                     	;# 
  7477     1E33                     	;# 
  7478     1E34                     	;# 
  7479     1E35                     	;# 
  7480     1E36                     	;# 
  7481     1E37                     	;# 
  7482     1E8F                     	;# 
  7483     1E90                     	;# 
  7484     1E91                     	;# 
  7485     1E92                     	;# 
  7486     1E93                     	;# 
  7487     1E94                     	;# 
  7488     1E95                     	;# 
  7489     1E96                     	;# 
  7490     1E97                     	;# 
  7491     1E9C                     	;# 
  7492     1E9D                     	;# 
  7493     1E9E                     	;# 
  7494     1EA1                     	;# 
  7495     1EA2                     	;# 
  7496     1EA3                     	;# 
  7497     1EA4                     	;# 
  7498     1EA5                     	;# 
  7499     1EA9                     	;# 
  7500     1EAA                     	;# 
  7501     1EAB                     	;# 
  7502     1EAC                     	;# 
  7503     1EB1                     	;# 
  7504     1EB2                     	;# 
  7505     1EB3                     	;# 
  7506     1EB8                     	;# 
  7507     1EB9                     	;# 
  7508     1EBA                     	;# 
  7509     1EBB                     	;# 
  7510     1EBC                     	;# 
  7511     1EBD                     	;# 
  7512     1EBE                     	;# 
  7513     1EC3                     	;# 
  7514     1EC5                     	;# 
  7515     1EC6                     	;# 
  7516     1EC7                     	;# 
  7517     1EC8                     	;# 
  7518     1EC9                     	;# 
  7519     1ECA                     	;# 
  7520     1ECB                     	;# 
  7521     1ECC                     	;# 
  7522     1ECD                     	;# 
  7523     1ECE                     	;# 
  7524     1F10                     	;# 
  7525     1F11                     	;# 
  7526     1F12                     	;# 
  7527     1F13                     	;# 
  7528     1F14                     	;# 
  7529     1F15                     	;# 
  7530     1F16                     	;# 
  7531     1F17                     	;# 
  7532     1F18                     	;# 
  7533     1F19                     	;# 
  7534     1F1A                     	;# 
  7535     1F1B                     	;# 
  7536     1F1C                     	;# 
  7537     1F1D                     	;# 
  7538     1F1E                     	;# 
  7539     1F1F                     	;# 
  7540     1F20                     	;# 
  7541     1F21                     	;# 
  7542     1F22                     	;# 
  7543     1F23                     	;# 
  7544     1F24                     	;# 
  7545     1F25                     	;# 
  7546     1F26                     	;# 
  7547     1F27                     	;# 
  7548     1F38                     	;# 
  7549     1F39                     	;# 
  7550     1F3A                     	;# 
  7551     1F3B                     	;# 
  7552     1F3C                     	;# 
  7553     1F3D                     	;# 
  7554     1F3E                     	;# 
  7555     1F3F                     	;# 
  7556     1F43                     	;# 
  7557     1F44                     	;# 
  7558     1F45                     	;# 
  7559     1F46                     	;# 
  7560     1F47                     	;# 
  7561     1F48                     	;# 
  7562     1F49                     	;# 
  7563     1F4A                     	;# 
  7564     1F4E                     	;# 
  7565     1F4F                     	;# 
  7566     1F50                     	;# 
  7567     1F51                     	;# 
  7568     1F52                     	;# 
  7569     1F53                     	;# 
  7570     1F54                     	;# 
  7571     1F55                     	;# 
  7572     1F65                     	;# 
  7573     1F66                     	;# 
  7574     1F67                     	;# 
  7575     1F68                     	;# 
  7576     1F69                     	;# 
  7577     1F6A                     	;# 
  7578     1F6B                     	;# 
  7579     1FE4                     	;# 
  7580     1FE5                     	;# 
  7581     1FE6                     	;# 
  7582     1FE7                     	;# 
  7583     1FE8                     	;# 
  7584     1FE8                     	;# 
  7585     1FE9                     	;# 
  7586     1FEA                     	;# 
  7587     1FEB                     	;# 
  7588     1FED                     	;# 
  7589     1FEE                     	;# 
  7590     1FEF                     	;# 
  7591     0000                     	;# 
  7592     0001                     	;# 
  7593     0002                     	;# 
  7594     0003                     	;# 
  7595     0004                     	;# 
  7596     0005                     	;# 
  7597     0006                     	;# 
  7598     0007                     	;# 
  7599     0008                     	;# 
  7600     0009                     	;# 
  7601     000A                     	;# 
  7602     000B                     	;# 
  7603     000C                     	;# 
  7604     000D                     	;# 
  7605     000E                     	;# 
  7606     0010                     	;# 
  7607     0012                     	;# 
  7608     0013                     	;# 
  7609     0014                     	;# 
  7610     0016                     	;# 
  7611     0018                     	;# 
  7612     0019                     	;# 
  7613     001A                     	;# 
  7614     001C                     	;# 
  7615     008C                     	;# 
  7616     008C                     	;# 
  7617     008D                     	;# 
  7618     008E                     	;# 
  7619     008E                     	;# 
  7620     008F                     	;# 
  7621     0090                     	;# 
  7622     0090                     	;# 
  7623     0091                     	;# 
  7624     0092                     	;# 
  7625     0092                     	;# 
  7626     0093                     	;# 
  7627     0094                     	;# 
  7628     0094                     	;# 
  7629     0095                     	;# 
  7630     0096                     	;# 
  7631     0096                     	;# 
  7632     0097                     	;# 
  7633     0098                     	;# 
  7634     0099                     	;# 
  7635     009A                     	;# 
  7636     009B                     	;# 
  7637     009B                     	;# 
  7638     009C                     	;# 
  7639     009D                     	;# 
  7640     009D                     	;# 
  7641     009E                     	;# 
  7642     009F                     	;# 
  7643     010C                     	;# 
  7644     010C                     	;# 
  7645     010D                     	;# 
  7646     010E                     	;# 
  7647     010F                     	;# 
  7648     010F                     	;# 
  7649     0110                     	;# 
  7650     0111                     	;# 
  7651     0112                     	;# 
  7652     0113                     	;# 
  7653     0114                     	;# 
  7654     0115                     	;# 
  7655     0116                     	;# 
  7656     0117                     	;# 
  7657     0118                     	;# 
  7658     0119                     	;# 
  7659     0119                     	;# 
  7660     0119                     	;# 
  7661     011A                     	;# 
  7662     011A                     	;# 
  7663     011A                     	;# 
  7664     011B                     	;# 
  7665     011B                     	;# 
  7666     011B                     	;# 
  7667     011B                     	;# 
  7668     011B                     	;# 
  7669     011C                     	;# 
  7670     011C                     	;# 
  7671     011C                     	;# 
  7672     011D                     	;# 
  7673     011D                     	;# 
  7674     011D                     	;# 
  7675     011E                     	;# 
  7676     011E                     	;# 
  7677     011E                     	;# 
  7678     011F                     	;# 
  7679     011F                     	;# 
  7680     011F                     	;# 
  7681     011F                     	;# 
  7682     011F                     	;# 
  7683     018C                     	;# 
  7684     018D                     	;# 
  7685     018E                     	;# 
  7686     018F                     	;# 
  7687     0190                     	;# 
  7688     0191                     	;# 
  7689     0192                     	;# 
  7690     0196                     	;# 
  7691     0197                     	;# 
  7692     0198                     	;# 
  7693     0199                     	;# 
  7694     019A                     	;# 
  7695     019B                     	;# 
  7696     019C                     	;# 
  7697     020C                     	;# 
  7698     020D                     	;# 
  7699     020E                     	;# 
  7700     020E                     	;# 
  7701     020F                     	;# 
  7702     020F                     	;# 
  7703     0210                     	;# 
  7704     0210                     	;# 
  7705     0211                     	;# 
  7706     0211                     	;# 
  7707     0212                     	;# 
  7708     0213                     	;# 
  7709     0214                     	;# 
  7710     0214                     	;# 
  7711     0215                     	;# 
  7712     0215                     	;# 
  7713     0216                     	;# 
  7714     0216                     	;# 
  7715     0217                     	;# 
  7716     0217                     	;# 
  7717     0218                     	;# 
  7718     0219                     	;# 
  7719     021A                     	;# 
  7720     021A                     	;# 
  7721     021B                     	;# 
  7722     021B                     	;# 
  7723     021C                     	;# 
  7724     021C                     	;# 
  7725     021D                     	;# 
  7726     021D                     	;# 
  7727     021E                     	;# 
  7728     021F                     	;# 
  7729     028C                     	;# 
  7730     028C                     	;# 
  7731     028D                     	;# 
  7732     028D                     	;# 
  7733     028E                     	;# 
  7734     028F                     	;# 
  7735     0290                     	;# 
  7736     0291                     	;# 
  7737     0292                     	;# 
  7738     0292                     	;# 
  7739     0293                     	;# 
  7740     0293                     	;# 
  7741     0294                     	;# 
  7742     0295                     	;# 
  7743     0296                     	;# 
  7744     0297                     	;# 
  7745     0298                     	;# 
  7746     0298                     	;# 
  7747     0299                     	;# 
  7748     0299                     	;# 
  7749     029A                     	;# 
  7750     029B                     	;# 
  7751     029C                     	;# 
  7752     029D                     	;# 
  7753     029F                     	;# 
  7754     030C                     	;# 
  7755     030C                     	;# 
  7756     030D                     	;# 
  7757     030E                     	;# 
  7758     030F                     	;# 
  7759     0310                     	;# 
  7760     0310                     	;# 
  7761     0311                     	;# 
  7762     0312                     	;# 
  7763     0313                     	;# 
  7764     0314                     	;# 
  7765     0314                     	;# 
  7766     0315                     	;# 
  7767     0316                     	;# 
  7768     0317                     	;# 
  7769     0318                     	;# 
  7770     0318                     	;# 
  7771     0319                     	;# 
  7772     031A                     	;# 
  7773     031B                     	;# 
  7774     031C                     	;# 
  7775     031C                     	;# 
  7776     031D                     	;# 
  7777     031E                     	;# 
  7778     031F                     	;# 
  7779     038C                     	;# 
  7780     038C                     	;# 
  7781     038D                     	;# 
  7782     038E                     	;# 
  7783     0390                     	;# 
  7784     0390                     	;# 
  7785     0391                     	;# 
  7786     0392                     	;# 
  7787     048C                     	;# 
  7788     048C                     	;# 
  7789     048D                     	;# 
  7790     048E                     	;# 
  7791     048F                     	;# 
  7792     048F                     	;# 
  7793     0490                     	;# 
  7794     0491                     	;# 
  7795     0492                     	;# 
  7796     0492                     	;# 
  7797     0493                     	;# 
  7798     0494                     	;# 
  7799     0495                     	;# 
  7800     0495                     	;# 
  7801     0496                     	;# 
  7802     0497                     	;# 
  7803     0498                     	;# 
  7804     0499                     	;# 
  7805     049A                     	;# 
  7806     049B                     	;# 
  7807     049C                     	;# 
  7808     049D                     	;# 
  7809     050C                     	;# 
  7810     050C                     	;# 
  7811     050D                     	;# 
  7812     050E                     	;# 
  7813     050F                     	;# 
  7814     050F                     	;# 
  7815     0510                     	;# 
  7816     0511                     	;# 
  7817     0512                     	;# 
  7818     0512                     	;# 
  7819     0513                     	;# 
  7820     0514                     	;# 
  7821     0515                     	;# 
  7822     0515                     	;# 
  7823     0516                     	;# 
  7824     0517                     	;# 
  7825     0518                     	;# 
  7826     0519                     	;# 
  7827     051A                     	;# 
  7828     051B                     	;# 
  7829     051C                     	;# 
  7830     051D                     	;# 
  7831     058C                     	;# 
  7832     058C                     	;# 
  7833     058D                     	;# 
  7834     058E                     	;# 
  7835     058F                     	;# 
  7836     058F                     	;# 
  7837     0590                     	;# 
  7838     0591                     	;# 
  7839     0592                     	;# 
  7840     0593                     	;# 
  7841     059C                     	;# 
  7842     059C                     	;# 
  7843     059D                     	;# 
  7844     059D                     	;# 
  7845     059E                     	;# 
  7846     059F                     	;# 
  7847     060C                     	;# 
  7848     060C                     	;# 
  7849     060D                     	;# 
  7850     060D                     	;# 
  7851     060E                     	;# 
  7852     060F                     	;# 
  7853     0610                     	;# 
  7854     0611                     	;# 
  7855     0612                     	;# 
  7856     0613                     	;# 
  7857     0614                     	;# 
  7858     0616                     	;# 
  7859     0616                     	;# 
  7860     0617                     	;# 
  7861     0617                     	;# 
  7862     0618                     	;# 
  7863     0619                     	;# 
  7864     061A                     	;# 
  7865     061B                     	;# 
  7866     061C                     	;# 
  7867     061D                     	;# 
  7868     061E                     	;# 
  7869     068C                     	;# 
  7870     068D                     	;# 
  7871     068E                     	;# 
  7872     068F                     	;# 
  7873     0690                     	;# 
  7874     0691                     	;# 
  7875     0692                     	;# 
  7876     0693                     	;# 
  7877     0694                     	;# 
  7878     070C                     	;# 
  7879     070D                     	;# 
  7880     070E                     	;# 
  7881     070F                     	;# 
  7882     0710                     	;# 
  7883     0711                     	;# 
  7884     0712                     	;# 
  7885     0713                     	;# 
  7886     0714                     	;# 
  7887     0716                     	;# 
  7888     0717                     	;# 
  7889     0718                     	;# 
  7890     0719                     	;# 
  7891     071A                     	;# 
  7892     071B                     	;# 
  7893     071C                     	;# 
  7894     071D                     	;# 
  7895     071E                     	;# 
  7896     0796                     	;# 
  7897     0797                     	;# 
  7898     0798                     	;# 
  7899     0799                     	;# 
  7900     079A                     	;# 
  7901     079B                     	;# 
  7902     079C                     	;# 
  7903     079D                     	;# 
  7904     080C                     	;# 
  7905     080D                     	;# 
  7906     080E                     	;# 
  7907     080F                     	;# 
  7908     0810                     	;# 
  7909     0811                     	;# 
  7910     0813                     	;# 
  7911     0814                     	;# 
  7912     081A                     	;# 
  7913     081A                     	;# 
  7914     081B                     	;# 
  7915     081C                     	;# 
  7916     081C                     	;# 
  7917     081D                     	;# 
  7918     081E                     	;# 
  7919     081F                     	;# 
  7920     088C                     	;# 
  7921     088D                     	;# 
  7922     088E                     	;# 
  7923     088F                     	;# 
  7924     0890                     	;# 
  7925     0891                     	;# 
  7926     0892                     	;# 
  7927     0893                     	;# 
  7928     0895                     	;# 
  7929     0896                     	;# 
  7930     0897                     	;# 
  7931     0898                     	;# 
  7932     0899                     	;# 
  7933     089A                     	;# 
  7934     089B                     	;# 
  7935     090C                     	;# 
  7936     090E                     	;# 
  7937     090F                     	;# 
  7938     091F                     	;# 
  7939     098F                     	;# 
  7940     098F                     	;# 
  7941     0990                     	;# 
  7942     0991                     	;# 
  7943     0992                     	;# 
  7944     0993                     	;# 
  7945     0994                     	;# 
  7946     0995                     	;# 
  7947     0996                     	;# 
  7948     0997                     	;# 
  7949     0A19                     	;# 
  7950     0A19                     	;# 
  7951     0A1A                     	;# 
  7952     0A1A                     	;# 
  7953     0A1B                     	;# 
  7954     0A1B                     	;# 
  7955     0A1B                     	;# 
  7956     0A1C                     	;# 
  7957     0A1C                     	;# 
  7958     0A1D                     	;# 
  7959     0A1D                     	;# 
  7960     0A1E                     	;# 
  7961     0A1E                     	;# 
  7962     0A1F                     	;# 
  7963     0A1F                     	;# 
  7964     0A1F                     	;# 
  7965     1E0F                     	;# 
  7966     1E10                     	;# 
  7967     1E11                     	;# 
  7968     1E12                     	;# 
  7969     1E13                     	;# 
  7970     1E14                     	;# 
  7971     1E15                     	;# 
  7972     1E16                     	;# 
  7973     1E17                     	;# 
  7974     1E18                     	;# 
  7975     1E19                     	;# 
  7976     1E1A                     	;# 
  7977     1E1B                     	;# 
  7978     1E1C                     	;# 
  7979     1E1D                     	;# 
  7980     1E1E                     	;# 
  7981     1E1F                     	;# 
  7982     1E20                     	;# 
  7983     1E21                     	;# 
  7984     1E22                     	;# 
  7985     1E23                     	;# 
  7986     1E24                     	;# 
  7987     1E25                     	;# 
  7988     1E26                     	;# 
  7989     1E27                     	;# 
  7990     1E28                     	;# 
  7991     1E29                     	;# 
  7992     1E2A                     	;# 
  7993     1E2B                     	;# 
  7994     1E2C                     	;# 
  7995     1E2D                     	;# 
  7996     1E2E                     	;# 
  7997     1E2F                     	;# 
  7998     1E30                     	;# 
  7999     1E31                     	;# 
  8000     1E32                     	;# 
  8001     1E33                     	;# 
  8002     1E34                     	;# 
  8003     1E35                     	;# 
  8004     1E36                     	;# 
  8005     1E37                     	;# 
  8006     1E8F                     	;# 
  8007     1E90                     	;# 
  8008     1E91                     	;# 
  8009     1E92                     	;# 
  8010     1E93                     	;# 
  8011     1E94                     	;# 
  8012     1E95                     	;# 
  8013     1E96                     	;# 
  8014     1E97                     	;# 
  8015     1E9C                     	;# 
  8016     1E9D                     	;# 
  8017     1E9E                     	;# 
  8018     1EA1                     	;# 
  8019     1EA2                     	;# 
  8020     1EA3                     	;# 
  8021     1EA4                     	;# 
  8022     1EA5                     	;# 
  8023     1EA9                     	;# 
  8024     1EAA                     	;# 
  8025     1EAB                     	;# 
  8026     1EAC                     	;# 
  8027     1EB1                     	;# 
  8028     1EB2                     	;# 
  8029     1EB3                     	;# 
  8030     1EB8                     	;# 
  8031     1EB9                     	;# 
  8032     1EBA                     	;# 
  8033     1EBB                     	;# 
  8034     1EBC                     	;# 
  8035     1EBD                     	;# 
  8036     1EBE                     	;# 
  8037     1EC3                     	;# 
  8038     1EC5                     	;# 
  8039     1EC6                     	;# 
  8040     1EC7                     	;# 
  8041     1EC8                     	;# 
  8042     1EC9                     	;# 
  8043     1ECA                     	;# 
  8044     1ECB                     	;# 
  8045     1ECC                     	;# 
  8046     1ECD                     	;# 
  8047     1ECE                     	;# 
  8048     1F10                     	;# 
  8049     1F11                     	;# 
  8050     1F12                     	;# 
  8051     1F13                     	;# 
  8052     1F14                     	;# 
  8053     1F15                     	;# 
  8054     1F16                     	;# 
  8055     1F17                     	;# 
  8056     1F18                     	;# 
  8057     1F19                     	;# 
  8058     1F1A                     	;# 
  8059     1F1B                     	;# 
  8060     1F1C                     	;# 
  8061     1F1D                     	;# 
  8062     1F1E                     	;# 
  8063     1F1F                     	;# 
  8064     1F20                     	;# 
  8065     1F21                     	;# 
  8066     1F22                     	;# 
  8067     1F23                     	;# 
  8068     1F24                     	;# 
  8069     1F25                     	;# 
  8070     1F26                     	;# 
  8071     1F27                     	;# 
  8072     1F38                     	;# 
  8073     1F39                     	;# 
  8074     1F3A                     	;# 
  8075     1F3B                     	;# 
  8076     1F3C                     	;# 
  8077     1F3D                     	;# 
  8078     1F3E                     	;# 
  8079     1F3F                     	;# 
  8080     1F43                     	;# 
  8081     1F44                     	;# 
  8082     1F45                     	;# 
  8083     1F46                     	;# 
  8084     1F47                     	;# 
  8085     1F48                     	;# 
  8086     1F49                     	;# 
  8087     1F4A                     	;# 
  8088     1F4E                     	;# 
  8089     1F4F                     	;# 
  8090     1F50                     	;# 
  8091     1F51                     	;# 
  8092     1F52                     	;# 
  8093     1F53                     	;# 
  8094     1F54                     	;# 
  8095     1F55                     	;# 
  8096     1F65                     	;# 
  8097     1F66                     	;# 
  8098     1F67                     	;# 
  8099     1F68                     	;# 
  8100     1F69                     	;# 
  8101     1F6A                     	;# 
  8102     1F6B                     	;# 
  8103     1FE4                     	;# 
  8104     1FE5                     	;# 
  8105     1FE6                     	;# 
  8106     1FE7                     	;# 
  8107     1FE8                     	;# 
  8108     1FE8                     	;# 
  8109     1FE9                     	;# 
  8110     1FEA                     	;# 
  8111     1FEB                     	;# 
  8112     1FED                     	;# 
  8113     1FEE                     	;# 
  8114     1FEF                     	;# 
  8115     0000                     	;# 
  8116     0001                     	;# 
  8117     0002                     	;# 
  8118     0003                     	;# 
  8119     0004                     	;# 
  8120     0005                     	;# 
  8121     0006                     	;# 
  8122     0007                     	;# 
  8123     0008                     	;# 
  8124     0009                     	;# 
  8125     000A                     	;# 
  8126     000B                     	;# 
  8127     000C                     	;# 
  8128     000D                     	;# 
  8129     000E                     	;# 
  8130     0010                     	;# 
  8131     0012                     	;# 
  8132     0013                     	;# 
  8133     0014                     	;# 
  8134     0016                     	;# 
  8135     0018                     	;# 
  8136     0019                     	;# 
  8137     001A                     	;# 
  8138     001C                     	;# 
  8139     008C                     	;# 
  8140     008C                     	;# 
  8141     008D                     	;# 
  8142     008E                     	;# 
  8143     008E                     	;# 
  8144     008F                     	;# 
  8145     0090                     	;# 
  8146     0090                     	;# 
  8147     0091                     	;# 
  8148     0092                     	;# 
  8149     0092                     	;# 
  8150     0093                     	;# 
  8151     0094                     	;# 
  8152     0094                     	;# 
  8153     0095                     	;# 
  8154     0096                     	;# 
  8155     0096                     	;# 
  8156     0097                     	;# 
  8157     0098                     	;# 
  8158     0099                     	;# 
  8159     009A                     	;# 
  8160     009B                     	;# 
  8161     009B                     	;# 
  8162     009C                     	;# 
  8163     009D                     	;# 
  8164     009D                     	;# 
  8165     009E                     	;# 
  8166     009F                     	;# 
  8167     010C                     	;# 
  8168     010C                     	;# 
  8169     010D                     	;# 
  8170     010E                     	;# 
  8171     010F                     	;# 
  8172     010F                     	;# 
  8173     0110                     	;# 
  8174     0111                     	;# 
  8175     0112                     	;# 
  8176     0113                     	;# 
  8177     0114                     	;# 
  8178     0115                     	;# 
  8179     0116                     	;# 
  8180     0117                     	;# 
  8181     0118                     	;# 
  8182     0119                     	;# 
  8183     0119                     	;# 
  8184     0119                     	;# 
  8185     011A                     	;# 
  8186     011A                     	;# 
  8187     011A                     	;# 
  8188     011B                     	;# 
  8189     011B                     	;# 
  8190     011B                     	;# 
  8191     011B                     	;# 
  8192     011B                     	;# 
  8193     011C                     	;# 
  8194     011C                     	;# 
  8195     011C                     	;# 
  8196     011D                     	;# 
  8197     011D                     	;# 
  8198     011D                     	;# 
  8199     011E                     	;# 
  8200     011E                     	;# 
  8201     011E                     	;# 
  8202     011F                     	;# 
  8203     011F                     	;# 
  8204     011F                     	;# 
  8205     011F                     	;# 
  8206     011F                     	;# 
  8207     018C                     	;# 
  8208     018D                     	;# 
  8209     018E                     	;# 
  8210     018F                     	;# 
  8211     0190                     	;# 
  8212     0191                     	;# 
  8213     0192                     	;# 
  8214     0196                     	;# 
  8215     0197                     	;# 
  8216     0198                     	;# 
  8217     0199                     	;# 
  8218     019A                     	;# 
  8219     019B                     	;# 
  8220     019C                     	;# 
  8221     020C                     	;# 
  8222     020D                     	;# 
  8223     020E                     	;# 
  8224     020E                     	;# 
  8225     020F                     	;# 
  8226     020F                     	;# 
  8227     0210                     	;# 
  8228     0210                     	;# 
  8229     0211                     	;# 
  8230     0211                     	;# 
  8231     0212                     	;# 
  8232     0213                     	;# 
  8233     0214                     	;# 
  8234     0214                     	;# 
  8235     0215                     	;# 
  8236     0215                     	;# 
  8237     0216                     	;# 
  8238     0216                     	;# 
  8239     0217                     	;# 
  8240     0217                     	;# 
  8241     0218                     	;# 
  8242     0219                     	;# 
  8243     021A                     	;# 
  8244     021A                     	;# 
  8245     021B                     	;# 
  8246     021B                     	;# 
  8247     021C                     	;# 
  8248     021C                     	;# 
  8249     021D                     	;# 
  8250     021D                     	;# 
  8251     021E                     	;# 
  8252     021F                     	;# 
  8253     028C                     	;# 
  8254     028C                     	;# 
  8255     028D                     	;# 
  8256     028D                     	;# 
  8257     028E                     	;# 
  8258     028F                     	;# 
  8259     0290                     	;# 
  8260     0291                     	;# 
  8261     0292                     	;# 
  8262     0292                     	;# 
  8263     0293                     	;# 
  8264     0293                     	;# 
  8265     0294                     	;# 
  8266     0295                     	;# 
  8267     0296                     	;# 
  8268     0297                     	;# 
  8269     0298                     	;# 
  8270     0298                     	;# 
  8271     0299                     	;# 
  8272     0299                     	;# 
  8273     029A                     	;# 
  8274     029B                     	;# 
  8275     029C                     	;# 
  8276     029D                     	;# 
  8277     029F                     	;# 
  8278     030C                     	;# 
  8279     030C                     	;# 
  8280     030D                     	;# 
  8281     030E                     	;# 
  8282     030F                     	;# 
  8283     0310                     	;# 
  8284     0310                     	;# 
  8285     0311                     	;# 
  8286     0312                     	;# 
  8287     0313                     	;# 
  8288     0314                     	;# 
  8289     0314                     	;# 
  8290     0315                     	;# 
  8291     0316                     	;# 
  8292     0317                     	;# 
  8293     0318                     	;# 
  8294     0318                     	;# 
  8295     0319                     	;# 
  8296     031A                     	;# 
  8297     031B                     	;# 
  8298     031C                     	;# 
  8299     031C                     	;# 
  8300     031D                     	;# 
  8301     031E                     	;# 
  8302     031F                     	;# 
  8303     038C                     	;# 
  8304     038C                     	;# 
  8305     038D                     	;# 
  8306     038E                     	;# 
  8307     0390                     	;# 
  8308     0390                     	;# 
  8309     0391                     	;# 
  8310     0392                     	;# 
  8311     048C                     	;# 
  8312     048C                     	;# 
  8313     048D                     	;# 
  8314     048E                     	;# 
  8315     048F                     	;# 
  8316     048F                     	;# 
  8317     0490                     	;# 
  8318     0491                     	;# 
  8319     0492                     	;# 
  8320     0492                     	;# 
  8321     0493                     	;# 
  8322     0494                     	;# 
  8323     0495                     	;# 
  8324     0495                     	;# 
  8325     0496                     	;# 
  8326     0497                     	;# 
  8327     0498                     	;# 
  8328     0499                     	;# 
  8329     049A                     	;# 
  8330     049B                     	;# 
  8331     049C                     	;# 
  8332     049D                     	;# 
  8333     050C                     	;# 
  8334     050C                     	;# 
  8335     050D                     	;# 
  8336     050E                     	;# 
  8337     050F                     	;# 
  8338     050F                     	;# 
  8339     0510                     	;# 
  8340     0511                     	;# 
  8341     0512                     	;# 
  8342     0512                     	;# 
  8343     0513                     	;# 
  8344     0514                     	;# 
  8345     0515                     	;# 
  8346     0515                     	;# 
  8347     0516                     	;# 
  8348     0517                     	;# 
  8349     0518                     	;# 
  8350     0519                     	;# 
  8351     051A                     	;# 
  8352     051B                     	;# 
  8353     051C                     	;# 
  8354     051D                     	;# 
  8355     058C                     	;# 
  8356     058C                     	;# 
  8357     058D                     	;# 
  8358     058E                     	;# 
  8359     058F                     	;# 
  8360     058F                     	;# 
  8361     0590                     	;# 
  8362     0591                     	;# 
  8363     0592                     	;# 
  8364     0593                     	;# 
  8365     059C                     	;# 
  8366     059C                     	;# 
  8367     059D                     	;# 
  8368     059D                     	;# 
  8369     059E                     	;# 
  8370     059F                     	;# 
  8371     060C                     	;# 
  8372     060C                     	;# 
  8373     060D                     	;# 
  8374     060D                     	;# 
  8375     060E                     	;# 
  8376     060F                     	;# 
  8377     0610                     	;# 
  8378     0611                     	;# 
  8379     0612                     	;# 
  8380     0613                     	;# 
  8381     0614                     	;# 
  8382     0616                     	;# 
  8383     0616                     	;# 
  8384     0617                     	;# 
  8385     0617                     	;# 
  8386     0618                     	;# 
  8387     0619                     	;# 
  8388     061A                     	;# 
  8389     061B                     	;# 
  8390     061C                     	;# 
  8391     061D                     	;# 
  8392     061E                     	;# 
  8393     068C                     	;# 
  8394     068D                     	;# 
  8395     068E                     	;# 
  8396     068F                     	;# 
  8397     0690                     	;# 
  8398     0691                     	;# 
  8399     0692                     	;# 
  8400     0693                     	;# 
  8401     0694                     	;# 
  8402     070C                     	;# 
  8403     070D                     	;# 
  8404     070E                     	;# 
  8405     070F                     	;# 
  8406     0710                     	;# 
  8407     0711                     	;# 
  8408     0712                     	;# 
  8409     0713                     	;# 
  8410     0714                     	;# 
  8411     0716                     	;# 
  8412     0717                     	;# 
  8413     0718                     	;# 
  8414     0719                     	;# 
  8415     071A                     	;# 
  8416     071B                     	;# 
  8417     071C                     	;# 
  8418     071D                     	;# 
  8419     071E                     	;# 
  8420     0796                     	;# 
  8421     0797                     	;# 
  8422     0798                     	;# 
  8423     0799                     	;# 
  8424     079A                     	;# 
  8425     079B                     	;# 
  8426     079C                     	;# 
  8427     079D                     	;# 
  8428     080C                     	;# 
  8429     080D                     	;# 
  8430     080E                     	;# 
  8431     080F                     	;# 
  8432     0810                     	;# 
  8433     0811                     	;# 
  8434     0813                     	;# 
  8435     0814                     	;# 
  8436     081A                     	;# 
  8437     081A                     	;# 
  8438     081B                     	;# 
  8439     081C                     	;# 
  8440     081C                     	;# 
  8441     081D                     	;# 
  8442     081E                     	;# 
  8443     081F                     	;# 
  8444     088C                     	;# 
  8445     088D                     	;# 
  8446     088E                     	;# 
  8447     088F                     	;# 
  8448     0890                     	;# 
  8449     0891                     	;# 
  8450     0892                     	;# 
  8451     0893                     	;# 
  8452     0895                     	;# 
  8453     0896                     	;# 
  8454     0897                     	;# 
  8455     0898                     	;# 
  8456     0899                     	;# 
  8457     089A                     	;# 
  8458     089B                     	;# 
  8459     090C                     	;# 
  8460     090E                     	;# 
  8461     090F                     	;# 
  8462     091F                     	;# 
  8463     098F                     	;# 
  8464     098F                     	;# 
  8465     0990                     	;# 
  8466     0991                     	;# 
  8467     0992                     	;# 
  8468     0993                     	;# 
  8469     0994                     	;# 
  8470     0995                     	;# 
  8471     0996                     	;# 
  8472     0997                     	;# 
  8473     0A19                     	;# 
  8474     0A19                     	;# 
  8475     0A1A                     	;# 
  8476     0A1A                     	;# 
  8477     0A1B                     	;# 
  8478     0A1B                     	;# 
  8479     0A1B                     	;# 
  8480     0A1C                     	;# 
  8481     0A1C                     	;# 
  8482     0A1D                     	;# 
  8483     0A1D                     	;# 
  8484     0A1E                     	;# 
  8485     0A1E                     	;# 
  8486     0A1F                     	;# 
  8487     0A1F                     	;# 
  8488     0A1F                     	;# 
  8489     1E0F                     	;# 
  8490     1E10                     	;# 
  8491     1E11                     	;# 
  8492     1E12                     	;# 
  8493     1E13                     	;# 
  8494     1E14                     	;# 
  8495     1E15                     	;# 
  8496     1E16                     	;# 
  8497     1E17                     	;# 
  8498     1E18                     	;# 
  8499     1E19                     	;# 
  8500     1E1A                     	;# 
  8501     1E1B                     	;# 
  8502     1E1C                     	;# 
  8503     1E1D                     	;# 
  8504     1E1E                     	;# 
  8505     1E1F                     	;# 
  8506     1E20                     	;# 
  8507     1E21                     	;# 
  8508     1E22                     	;# 
  8509     1E23                     	;# 
  8510     1E24                     	;# 
  8511     1E25                     	;# 
  8512     1E26                     	;# 
  8513     1E27                     	;# 
  8514     1E28                     	;# 
  8515     1E29                     	;# 
  8516     1E2A                     	;# 
  8517     1E2B                     	;# 
  8518     1E2C                     	;# 
  8519     1E2D                     	;# 
  8520     1E2E                     	;# 
  8521     1E2F                     	;# 
  8522     1E30                     	;# 
  8523     1E31                     	;# 
  8524     1E32                     	;# 
  8525     1E33                     	;# 
  8526     1E34                     	;# 
  8527     1E35                     	;# 
  8528     1E36                     	;# 
  8529     1E37                     	;# 
  8530     1E8F                     	;# 
  8531     1E90                     	;# 
  8532     1E91                     	;# 
  8533     1E92                     	;# 
  8534     1E93                     	;# 
  8535     1E94                     	;# 
  8536     1E95                     	;# 
  8537     1E96                     	;# 
  8538     1E97                     	;# 
  8539     1E9C                     	;# 
  8540     1E9D                     	;# 
  8541     1E9E                     	;# 
  8542     1EA1                     	;# 
  8543     1EA2                     	;# 
  8544     1EA3                     	;# 
  8545     1EA4                     	;# 
  8546     1EA5                     	;# 
  8547     1EA9                     	;# 
  8548     1EAA                     	;# 
  8549     1EAB                     	;# 
  8550     1EAC                     	;# 
  8551     1EB1                     	;# 
  8552     1EB2                     	;# 
  8553     1EB3                     	;# 
  8554     1EB8                     	;# 
  8555     1EB9                     	;# 
  8556     1EBA                     	;# 
  8557     1EBB                     	;# 
  8558     1EBC                     	;# 
  8559     1EBD                     	;# 
  8560     1EBE                     	;# 
  8561     1EC3                     	;# 
  8562     1EC5                     	;# 
  8563     1EC6                     	;# 
  8564     1EC7                     	;# 
  8565     1EC8                     	;# 
  8566     1EC9                     	;# 
  8567     1ECA                     	;# 
  8568     1ECB                     	;# 
  8569     1ECC                     	;# 
  8570     1ECD                     	;# 
  8571     1ECE                     	;# 
  8572     1F10                     	;# 
  8573     1F11                     	;# 
  8574     1F12                     	;# 
  8575     1F13                     	;# 
  8576     1F14                     	;# 
  8577     1F15                     	;# 
  8578     1F16                     	;# 
  8579     1F17                     	;# 
  8580     1F18                     	;# 
  8581     1F19                     	;# 
  8582     1F1A                     	;# 
  8583     1F1B                     	;# 
  8584     1F1C                     	;# 
  8585     1F1D                     	;# 
  8586     1F1E                     	;# 
  8587     1F1F                     	;# 
  8588     1F20                     	;# 
  8589     1F21                     	;# 
  8590     1F22                     	;# 
  8591     1F23                     	;# 
  8592     1F24                     	;# 
  8593     1F25                     	;# 
  8594     1F26                     	;# 
  8595     1F27                     	;# 
  8596     1F38                     	;# 
  8597     1F39                     	;# 
  8598     1F3A                     	;# 
  8599     1F3B                     	;# 
  8600     1F3C                     	;# 
  8601     1F3D                     	;# 
  8602     1F3E                     	;# 
  8603     1F3F                     	;# 
  8604     1F43                     	;# 
  8605     1F44                     	;# 
  8606     1F45                     	;# 
  8607     1F46                     	;# 
  8608     1F47                     	;# 
  8609     1F48                     	;# 
  8610     1F49                     	;# 
  8611     1F4A                     	;# 
  8612     1F4E                     	;# 
  8613     1F4F                     	;# 
  8614     1F50                     	;# 
  8615     1F51                     	;# 
  8616     1F52                     	;# 
  8617     1F53                     	;# 
  8618     1F54                     	;# 
  8619     1F55                     	;# 
  8620     1F65                     	;# 
  8621     1F66                     	;# 
  8622     1F67                     	;# 
  8623     1F68                     	;# 
  8624     1F69                     	;# 
  8625     1F6A                     	;# 
  8626     1F6B                     	;# 
  8627     1FE4                     	;# 
  8628     1FE5                     	;# 
  8629     1FE6                     	;# 
  8630     1FE7                     	;# 
  8631     1FE8                     	;# 
  8632     1FE8                     	;# 
  8633     1FE9                     	;# 
  8634     1FEA                     	;# 
  8635     1FEB                     	;# 
  8636     1FED                     	;# 
  8637     1FEE                     	;# 
  8638     1FEF                     	;# 
  8639     0000                     	;# 
  8640     0001                     	;# 
  8641     0002                     	;# 
  8642     0003                     	;# 
  8643     0004                     	;# 
  8644     0005                     	;# 
  8645     0006                     	;# 
  8646     0007                     	;# 
  8647     0008                     	;# 
  8648     0009                     	;# 
  8649     000A                     	;# 
  8650     000B                     	;# 
  8651     000C                     	;# 
  8652     000D                     	;# 
  8653     000E                     	;# 
  8654     0010                     	;# 
  8655     0012                     	;# 
  8656     0013                     	;# 
  8657     0014                     	;# 
  8658     0016                     	;# 
  8659     0018                     	;# 
  8660     0019                     	;# 
  8661     001A                     	;# 
  8662     001C                     	;# 
  8663     008C                     	;# 
  8664     008C                     	;# 
  8665     008D                     	;# 
  8666     008E                     	;# 
  8667     008E                     	;# 
  8668     008F                     	;# 
  8669     0090                     	;# 
  8670     0090                     	;# 
  8671     0091                     	;# 
  8672     0092                     	;# 
  8673     0092                     	;# 
  8674     0093                     	;# 
  8675     0094                     	;# 
  8676     0094                     	;# 
  8677     0095                     	;# 
  8678     0096                     	;# 
  8679     0096                     	;# 
  8680     0097                     	;# 
  8681     0098                     	;# 
  8682     0099                     	;# 
  8683     009A                     	;# 
  8684     009B                     	;# 
  8685     009B                     	;# 
  8686     009C                     	;# 
  8687     009D                     	;# 
  8688     009D                     	;# 
  8689     009E                     	;# 
  8690     009F                     	;# 
  8691     010C                     	;# 
  8692     010C                     	;# 
  8693     010D                     	;# 
  8694     010E                     	;# 
  8695     010F                     	;# 
  8696     010F                     	;# 
  8697     0110                     	;# 
  8698     0111                     	;# 
  8699     0112                     	;# 
  8700     0113                     	;# 
  8701     0114                     	;# 
  8702     0115                     	;# 
  8703     0116                     	;# 
  8704     0117                     	;# 
  8705     0118                     	;# 
  8706     0119                     	;# 
  8707     0119                     	;# 
  8708     0119                     	;# 
  8709     011A                     	;# 
  8710     011A                     	;# 
  8711     011A                     	;# 
  8712     011B                     	;# 
  8713     011B                     	;# 
  8714     011B                     	;# 
  8715     011B                     	;# 
  8716     011B                     	;# 
  8717     011C                     	;# 
  8718     011C                     	;# 
  8719     011C                     	;# 
  8720     011D                     	;# 
  8721     011D                     	;# 
  8722     011D                     	;# 
  8723     011E                     	;# 
  8724     011E                     	;# 
  8725     011E                     	;# 
  8726     011F                     	;# 
  8727     011F                     	;# 
  8728     011F                     	;# 
  8729     011F                     	;# 
  8730     011F                     	;# 
  8731     018C                     	;# 
  8732     018D                     	;# 
  8733     018E                     	;# 
  8734     018F                     	;# 
  8735     0190                     	;# 
  8736     0191                     	;# 
  8737     0192                     	;# 
  8738     0196                     	;# 
  8739     0197                     	;# 
  8740     0198                     	;# 
  8741     0199                     	;# 
  8742     019A                     	;# 
  8743     019B                     	;# 
  8744     019C                     	;# 
  8745     020C                     	;# 
  8746     020D                     	;# 
  8747     020E                     	;# 
  8748     020E                     	;# 
  8749     020F                     	;# 
  8750     020F                     	;# 
  8751     0210                     	;# 
  8752     0210                     	;# 
  8753     0211                     	;# 
  8754     0211                     	;# 
  8755     0212                     	;# 
  8756     0213                     	;# 
  8757     0214                     	;# 
  8758     0214                     	;# 
  8759     0215                     	;# 
  8760     0215                     	;# 
  8761     0216                     	;# 
  8762     0216                     	;# 
  8763     0217                     	;# 
  8764     0217                     	;# 
  8765     0218                     	;# 
  8766     0219                     	;# 
  8767     021A                     	;# 
  8768     021A                     	;# 
  8769     021B                     	;# 
  8770     021B                     	;# 
  8771     021C                     	;# 
  8772     021C                     	;# 
  8773     021D                     	;# 
  8774     021D                     	;# 
  8775     021E                     	;# 
  8776     021F                     	;# 
  8777     028C                     	;# 
  8778     028C                     	;# 
  8779     028D                     	;# 
  8780     028D                     	;# 
  8781     028E                     	;# 
  8782     028F                     	;# 
  8783     0290                     	;# 
  8784     0291                     	;# 
  8785     0292                     	;# 
  8786     0292                     	;# 
  8787     0293                     	;# 
  8788     0293                     	;# 
  8789     0294                     	;# 
  8790     0295                     	;# 
  8791     0296                     	;# 
  8792     0297                     	;# 
  8793     0298                     	;# 
  8794     0298                     	;# 
  8795     0299                     	;# 
  8796     0299                     	;# 
  8797     029A                     	;# 
  8798     029B                     	;# 
  8799     029C                     	;# 
  8800     029D                     	;# 
  8801     029F                     	;# 
  8802     030C                     	;# 
  8803     030C                     	;# 
  8804     030D                     	;# 
  8805     030E                     	;# 
  8806     030F                     	;# 
  8807     0310                     	;# 
  8808     0310                     	;# 
  8809     0311                     	;# 
  8810     0312                     	;# 
  8811     0313                     	;# 
  8812     0314                     	;# 
  8813     0314                     	;# 
  8814     0315                     	;# 
  8815     0316                     	;# 
  8816     0317                     	;# 
  8817     0318                     	;# 
  8818     0318                     	;# 
  8819     0319                     	;# 
  8820     031A                     	;# 
  8821     031B                     	;# 
  8822     031C                     	;# 
  8823     031C                     	;# 
  8824     031D                     	;# 
  8825     031E                     	;# 
  8826     031F                     	;# 
  8827     038C                     	;# 
  8828     038C                     	;# 
  8829     038D                     	;# 
  8830     038E                     	;# 
  8831     0390                     	;# 
  8832     0390                     	;# 
  8833     0391                     	;# 
  8834     0392                     	;# 
  8835     048C                     	;# 
  8836     048C                     	;# 
  8837     048D                     	;# 
  8838     048E                     	;# 
  8839     048F                     	;# 
  8840     048F                     	;# 
  8841     0490                     	;# 
  8842     0491                     	;# 
  8843     0492                     	;# 
  8844     0492                     	;# 
  8845     0493                     	;# 
  8846     0494                     	;# 
  8847     0495                     	;# 
  8848     0495                     	;# 
  8849     0496                     	;# 
  8850     0497                     	;# 
  8851     0498                     	;# 
  8852     0499                     	;# 
  8853     049A                     	;# 
  8854     049B                     	;# 
  8855     049C                     	;# 
  8856     049D                     	;# 
  8857     050C                     	;# 
  8858     050C                     	;# 
  8859     050D                     	;# 
  8860     050E                     	;# 
  8861     050F                     	;# 
  8862     050F                     	;# 
  8863     0510                     	;# 
  8864     0511                     	;# 
  8865     0512                     	;# 
  8866     0512                     	;# 
  8867     0513                     	;# 
  8868     0514                     	;# 
  8869     0515                     	;# 
  8870     0515                     	;# 
  8871     0516                     	;# 
  8872     0517                     	;# 
  8873     0518                     	;# 
  8874     0519                     	;# 
  8875     051A                     	;# 
  8876     051B                     	;# 
  8877     051C                     	;# 
  8878     051D                     	;# 
  8879     058C                     	;# 
  8880     058C                     	;# 
  8881     058D                     	;# 
  8882     058E                     	;# 
  8883     058F                     	;# 
  8884     058F                     	;# 
  8885     0590                     	;# 
  8886     0591                     	;# 
  8887     0592                     	;# 
  8888     0593                     	;# 
  8889     059C                     	;# 
  8890     059C                     	;# 
  8891     059D                     	;# 
  8892     059D                     	;# 
  8893     059E                     	;# 
  8894     059F                     	;# 
  8895     060C                     	;# 
  8896     060C                     	;# 
  8897     060D                     	;# 
  8898     060D                     	;# 
  8899     060E                     	;# 
  8900     060F                     	;# 
  8901     0610                     	;# 
  8902     0611                     	;# 
  8903     0612                     	;# 
  8904     0613                     	;# 
  8905     0614                     	;# 
  8906     0616                     	;# 
  8907     0616                     	;# 
  8908     0617                     	;# 
  8909     0617                     	;# 
  8910     0618                     	;# 
  8911     0619                     	;# 
  8912     061A                     	;# 
  8913     061B                     	;# 
  8914     061C                     	;# 
  8915     061D                     	;# 
  8916     061E                     	;# 
  8917     068C                     	;# 
  8918     068D                     	;# 
  8919     068E                     	;# 
  8920     068F                     	;# 
  8921     0690                     	;# 
  8922     0691                     	;# 
  8923     0692                     	;# 
  8924     0693                     	;# 
  8925     0694                     	;# 
  8926     070C                     	;# 
  8927     070D                     	;# 
  8928     070E                     	;# 
  8929     070F                     	;# 
  8930     0710                     	;# 
  8931     0711                     	;# 
  8932     0712                     	;# 
  8933     0713                     	;# 
  8934     0714                     	;# 
  8935     0716                     	;# 
  8936     0717                     	;# 
  8937     0718                     	;# 
  8938     0719                     	;# 
  8939     071A                     	;# 
  8940     071B                     	;# 
  8941     071C                     	;# 
  8942     071D                     	;# 
  8943     071E                     	;# 
  8944     0796                     	;# 
  8945     0797                     	;# 
  8946     0798                     	;# 
  8947     0799                     	;# 
  8948     079A                     	;# 
  8949     079B                     	;# 
  8950     079C                     	;# 
  8951     079D                     	;# 
  8952     080C                     	;# 
  8953     080D                     	;# 
  8954     080E                     	;# 
  8955     080F                     	;# 
  8956     0810                     	;# 
  8957     0811                     	;# 
  8958     0813                     	;# 
  8959     0814                     	;# 
  8960     081A                     	;# 
  8961     081A                     	;# 
  8962     081B                     	;# 
  8963     081C                     	;# 
  8964     081C                     	;# 
  8965     081D                     	;# 
  8966     081E                     	;# 
  8967     081F                     	;# 
  8968     088C                     	;# 
  8969     088D                     	;# 
  8970     088E                     	;# 
  8971     088F                     	;# 
  8972     0890                     	;# 
  8973     0891                     	;# 
  8974     0892                     	;# 
  8975     0893                     	;# 
  8976     0895                     	;# 
  8977     0896                     	;# 
  8978     0897                     	;# 
  8979     0898                     	;# 
  8980     0899                     	;# 
  8981     089A                     	;# 
  8982     089B                     	;# 
  8983     090C                     	;# 
  8984     090E                     	;# 
  8985     090F                     	;# 
  8986     091F                     	;# 
  8987     098F                     	;# 
  8988     098F                     	;# 
  8989     0990                     	;# 
  8990     0991                     	;# 
  8991     0992                     	;# 
  8992     0993                     	;# 
  8993     0994                     	;# 
  8994     0995                     	;# 
  8995     0996                     	;# 
  8996     0997                     	;# 
  8997     0A19                     	;# 
  8998     0A19                     	;# 
  8999     0A1A                     	;# 
  9000     0A1A                     	;# 
  9001     0A1B                     	;# 
  9002     0A1B                     	;# 
  9003     0A1B                     	;# 
  9004     0A1C                     	;# 
  9005     0A1C                     	;# 
  9006     0A1D                     	;# 
  9007     0A1D                     	;# 
  9008     0A1E                     	;# 
  9009     0A1E                     	;# 
  9010     0A1F                     	;# 
  9011     0A1F                     	;# 
  9012     0A1F                     	;# 
  9013     1E0F                     	;# 
  9014     1E10                     	;# 
  9015     1E11                     	;# 
  9016     1E12                     	;# 
  9017     1E13                     	;# 
  9018     1E14                     	;# 
  9019     1E15                     	;# 
  9020     1E16                     	;# 
  9021     1E17                     	;# 
  9022     1E18                     	;# 
  9023     1E19                     	;# 
  9024     1E1A                     	;# 
  9025     1E1B                     	;# 
  9026     1E1C                     	;# 
  9027     1E1D                     	;# 
  9028     1E1E                     	;# 
  9029     1E1F                     	;# 
  9030     1E20                     	;# 
  9031     1E21                     	;# 
  9032     1E22                     	;# 
  9033     1E23                     	;# 
  9034     1E24                     	;# 
  9035     1E25                     	;# 
  9036     1E26                     	;# 
  9037     1E27                     	;# 
  9038     1E28                     	;# 
  9039     1E29                     	;# 
  9040     1E2A                     	;# 
  9041     1E2B                     	;# 
  9042     1E2C                     	;# 
  9043     1E2D                     	;# 
  9044     1E2E                     	;# 
  9045     1E2F                     	;# 
  9046     1E30                     	;# 
  9047     1E31                     	;# 
  9048     1E32                     	;# 
  9049     1E33                     	;# 
  9050     1E34                     	;# 
  9051     1E35                     	;# 
  9052     1E36                     	;# 
  9053     1E37                     	;# 
  9054     1E8F                     	;# 
  9055     1E90                     	;# 
  9056     1E91                     	;# 
  9057     1E92                     	;# 
  9058     1E93                     	;# 
  9059     1E94                     	;# 
  9060     1E95                     	;# 
  9061     1E96                     	;# 
  9062     1E97                     	;# 
  9063     1E9C                     	;# 
  9064     1E9D                     	;# 
  9065     1E9E                     	;# 
  9066     1EA1                     	;# 
  9067     1EA2                     	;# 
  9068     1EA3                     	;# 
  9069     1EA4                     	;# 
  9070     1EA5                     	;# 
  9071     1EA9                     	;# 
  9072     1EAA                     	;# 
  9073     1EAB                     	;# 
  9074     1EAC                     	;# 
  9075     1EB1                     	;# 
  9076     1EB2                     	;# 
  9077     1EB3                     	;# 
  9078     1EB8                     	;# 
  9079     1EB9                     	;# 
  9080     1EBA                     	;# 
  9081     1EBB                     	;# 
  9082     1EBC                     	;# 
  9083     1EBD                     	;# 
  9084     1EBE                     	;# 
  9085     1EC3                     	;# 
  9086     1EC5                     	;# 
  9087     1EC6                     	;# 
  9088     1EC7                     	;# 
  9089     1EC8                     	;# 
  9090     1EC9                     	;# 
  9091     1ECA                     	;# 
  9092     1ECB                     	;# 
  9093     1ECC                     	;# 
  9094     1ECD                     	;# 
  9095     1ECE                     	;# 
  9096     1F10                     	;# 
  9097     1F11                     	;# 
  9098     1F12                     	;# 
  9099     1F13                     	;# 
  9100     1F14                     	;# 
  9101     1F15                     	;# 
  9102     1F16                     	;# 
  9103     1F17                     	;# 
  9104     1F18                     	;# 
  9105     1F19                     	;# 
  9106     1F1A                     	;# 
  9107     1F1B                     	;# 
  9108     1F1C                     	;# 
  9109     1F1D                     	;# 
  9110     1F1E                     	;# 
  9111     1F1F                     	;# 
  9112     1F20                     	;# 
  9113     1F21                     	;# 
  9114     1F22                     	;# 
  9115     1F23                     	;# 
  9116     1F24                     	;# 
  9117     1F25                     	;# 
  9118     1F26                     	;# 
  9119     1F27                     	;# 
  9120     1F38                     	;# 
  9121     1F39                     	;# 
  9122     1F3A                     	;# 
  9123     1F3B                     	;# 
  9124     1F3C                     	;# 
  9125     1F3D                     	;# 
  9126     1F3E                     	;# 
  9127     1F3F                     	;# 
  9128     1F43                     	;# 
  9129     1F44                     	;# 
  9130     1F45                     	;# 
  9131     1F46                     	;# 
  9132     1F47                     	;# 
  9133     1F48                     	;# 
  9134     1F49                     	;# 
  9135     1F4A                     	;# 
  9136     1F4E                     	;# 
  9137     1F4F                     	;# 
  9138     1F50                     	;# 
  9139     1F51                     	;# 
  9140     1F52                     	;# 
  9141     1F53                     	;# 
  9142     1F54                     	;# 
  9143     1F55                     	;# 
  9144     1F65                     	;# 
  9145     1F66                     	;# 
  9146     1F67                     	;# 
  9147     1F68                     	;# 
  9148     1F69                     	;# 
  9149     1F6A                     	;# 
  9150     1F6B                     	;# 
  9151     1FE4                     	;# 
  9152     1FE5                     	;# 
  9153     1FE6                     	;# 
  9154     1FE7                     	;# 
  9155     1FE8                     	;# 
  9156     1FE8                     	;# 
  9157     1FE9                     	;# 
  9158     1FEA                     	;# 
  9159     1FEB                     	;# 
  9160     1FED                     	;# 
  9161     1FEE                     	;# 
  9162     1FEF                     	;# 
  9163     0000                     	;# 
  9164     0001                     	;# 
  9165     0002                     	;# 
  9166     0003                     	;# 
  9167     0004                     	;# 
  9168     0005                     	;# 
  9169     0006                     	;# 
  9170     0007                     	;# 
  9171     0008                     	;# 
  9172     0009                     	;# 
  9173     000A                     	;# 
  9174     000B                     	;# 
  9175     000C                     	;# 
  9176     000D                     	;# 
  9177     000E                     	;# 
  9178     0010                     	;# 
  9179     0012                     	;# 
  9180     0013                     	;# 
  9181     0014                     	;# 
  9182     0016                     	;# 
  9183     0018                     	;# 
  9184     0019                     	;# 
  9185     001A                     	;# 
  9186     001C                     	;# 
  9187     008C                     	;# 
  9188     008C                     	;# 
  9189     008D                     	;# 
  9190     008E                     	;# 
  9191     008E                     	;# 
  9192     008F                     	;# 
  9193     0090                     	;# 
  9194     0090                     	;# 
  9195     0091                     	;# 
  9196     0092                     	;# 
  9197     0092                     	;# 
  9198     0093                     	;# 
  9199     0094                     	;# 
  9200     0094                     	;# 
  9201     0095                     	;# 
  9202     0096                     	;# 
  9203     0096                     	;# 
  9204     0097                     	;# 
  9205     0098                     	;# 
  9206     0099                     	;# 
  9207     009A                     	;# 
  9208     009B                     	;# 
  9209     009B                     	;# 
  9210     009C                     	;# 
  9211     009D                     	;# 
  9212     009D                     	;# 
  9213     009E                     	;# 
  9214     009F                     	;# 
  9215     010C                     	;# 
  9216     010C                     	;# 
  9217     010D                     	;# 
  9218     010E                     	;# 
  9219     010F                     	;# 
  9220     010F                     	;# 
  9221     0110                     	;# 
  9222     0111                     	;# 
  9223     0112                     	;# 
  9224     0113                     	;# 
  9225     0114                     	;# 
  9226     0115                     	;# 
  9227     0116                     	;# 
  9228     0117                     	;# 
  9229     0118                     	;# 
  9230     0119                     	;# 
  9231     0119                     	;# 
  9232     0119                     	;# 
  9233     011A                     	;# 
  9234     011A                     	;# 
  9235     011A                     	;# 
  9236     011B                     	;# 
  9237     011B                     	;# 
  9238     011B                     	;# 
  9239     011B                     	;# 
  9240     011B                     	;# 
  9241     011C                     	;# 
  9242     011C                     	;# 
  9243     011C                     	;# 
  9244     011D                     	;# 
  9245     011D                     	;# 
  9246     011D                     	;# 
  9247     011E                     	;# 
  9248     011E                     	;# 
  9249     011E                     	;# 
  9250     011F                     	;# 
  9251     011F                     	;# 
  9252     011F                     	;# 
  9253     011F                     	;# 
  9254     011F                     	;# 
  9255     018C                     	;# 
  9256     018D                     	;# 
  9257     018E                     	;# 
  9258     018F                     	;# 
  9259     0190                     	;# 
  9260     0191                     	;# 
  9261     0192                     	;# 
  9262     0196                     	;# 
  9263     0197                     	;# 
  9264     0198                     	;# 
  9265     0199                     	;# 
  9266     019A                     	;# 
  9267     019B                     	;# 
  9268     019C                     	;# 
  9269     020C                     	;# 
  9270     020D                     	;# 
  9271     020E                     	;# 
  9272     020E                     	;# 
  9273     020F                     	;# 
  9274     020F                     	;# 
  9275     0210                     	;# 
  9276     0210                     	;# 
  9277     0211                     	;# 
  9278     0211                     	;# 
  9279     0212                     	;# 
  9280     0213                     	;# 
  9281     0214                     	;# 
  9282     0214                     	;# 
  9283     0215                     	;# 
  9284     0215                     	;# 
  9285     0216                     	;# 
  9286     0216                     	;# 
  9287     0217                     	;# 
  9288     0217                     	;# 
  9289     0218                     	;# 
  9290     0219                     	;# 
  9291     021A                     	;# 
  9292     021A                     	;# 
  9293     021B                     	;# 
  9294     021B                     	;# 
  9295     021C                     	;# 
  9296     021C                     	;# 
  9297     021D                     	;# 
  9298     021D                     	;# 
  9299     021E                     	;# 
  9300     021F                     	;# 
  9301     028C                     	;# 
  9302     028C                     	;# 
  9303     028D                     	;# 
  9304     028D                     	;# 
  9305     028E                     	;# 
  9306     028F                     	;# 
  9307     0290                     	;# 
  9308     0291                     	;# 
  9309     0292                     	;# 
  9310     0292                     	;# 
  9311     0293                     	;# 
  9312     0293                     	;# 
  9313     0294                     	;# 
  9314     0295                     	;# 
  9315     0296                     	;# 
  9316     0297                     	;# 
  9317     0298                     	;# 
  9318     0298                     	;# 
  9319     0299                     	;# 
  9320     0299                     	;# 
  9321     029A                     	;# 
  9322     029B                     	;# 
  9323     029C                     	;# 
  9324     029D                     	;# 
  9325     029F                     	;# 
  9326     030C                     	;# 
  9327     030C                     	;# 
  9328     030D                     	;# 
  9329     030E                     	;# 
  9330     030F                     	;# 
  9331     0310                     	;# 
  9332     0310                     	;# 
  9333     0311                     	;# 
  9334     0312                     	;# 
  9335     0313                     	;# 
  9336     0314                     	;# 
  9337     0314                     	;# 
  9338     0315                     	;# 
  9339     0316                     	;# 
  9340     0317                     	;# 
  9341     0318                     	;# 
  9342     0318                     	;# 
  9343     0319                     	;# 
  9344     031A                     	;# 
  9345     031B                     	;# 
  9346     031C                     	;# 
  9347     031C                     	;# 
  9348     031D                     	;# 
  9349     031E                     	;# 
  9350     031F                     	;# 
  9351     038C                     	;# 
  9352     038C                     	;# 
  9353     038D                     	;# 
  9354     038E                     	;# 
  9355     0390                     	;# 
  9356     0390                     	;# 
  9357     0391                     	;# 
  9358     0392                     	;# 
  9359     048C                     	;# 
  9360     048C                     	;# 
  9361     048D                     	;# 
  9362     048E                     	;# 
  9363     048F                     	;# 
  9364     048F                     	;# 
  9365     0490                     	;# 
  9366     0491                     	;# 
  9367     0492                     	;# 
  9368     0492                     	;# 
  9369     0493                     	;# 
  9370     0494                     	;# 
  9371     0495                     	;# 
  9372     0495                     	;# 
  9373     0496                     	;# 
  9374     0497                     	;# 
  9375     0498                     	;# 
  9376     0499                     	;# 
  9377     049A                     	;# 
  9378     049B                     	;# 
  9379     049C                     	;# 
  9380     049D                     	;# 
  9381     050C                     	;# 
  9382     050C                     	;# 
  9383     050D                     	;# 
  9384     050E                     	;# 
  9385     050F                     	;# 
  9386     050F                     	;# 
  9387     0510                     	;# 
  9388     0511                     	;# 
  9389     0512                     	;# 
  9390     0512                     	;# 
  9391     0513                     	;# 
  9392     0514                     	;# 
  9393     0515                     	;# 
  9394     0515                     	;# 
  9395     0516                     	;# 
  9396     0517                     	;# 
  9397     0518                     	;# 
  9398     0519                     	;# 
  9399     051A                     	;# 
  9400     051B                     	;# 
  9401     051C                     	;# 
  9402     051D                     	;# 
  9403     058C                     	;# 
  9404     058C                     	;# 
  9405     058D                     	;# 
  9406     058E                     	;# 
  9407     058F                     	;# 
  9408     058F                     	;# 
  9409     0590                     	;# 
  9410     0591                     	;# 
  9411     0592                     	;# 
  9412     0593                     	;# 
  9413     059C                     	;# 
  9414     059C                     	;# 
  9415     059D                     	;# 
  9416     059D                     	;# 
  9417     059E                     	;# 
  9418     059F                     	;# 
  9419     060C                     	;# 
  9420     060C                     	;# 
  9421     060D                     	;# 
  9422     060D                     	;# 
  9423     060E                     	;# 
  9424     060F                     	;# 
  9425     0610                     	;# 
  9426     0611                     	;# 
  9427     0612                     	;# 
  9428     0613                     	;# 
  9429     0614                     	;# 
  9430     0616                     	;# 
  9431     0616                     	;# 
  9432     0617                     	;# 
  9433     0617                     	;# 
  9434     0618                     	;# 
  9435     0619                     	;# 
  9436     061A                     	;# 
  9437     061B                     	;# 
  9438     061C                     	;# 
  9439     061D                     	;# 
  9440     061E                     	;# 
  9441     068C                     	;# 
  9442     068D                     	;# 
  9443     068E                     	;# 
  9444     068F                     	;# 
  9445     0690                     	;# 
  9446     0691                     	;# 
  9447     0692                     	;# 
  9448     0693                     	;# 
  9449     0694                     	;# 
  9450     070C                     	;# 
  9451     070D                     	;# 
  9452     070E                     	;# 
  9453     070F                     	;# 
  9454     0710                     	;# 
  9455     0711                     	;# 
  9456     0712                     	;# 
  9457     0713                     	;# 
  9458     0714                     	;# 
  9459     0716                     	;# 
  9460     0717                     	;# 
  9461     0718                     	;# 
  9462     0719                     	;# 
  9463     071A                     	;# 
  9464     071B                     	;# 
  9465     071C                     	;# 
  9466     071D                     	;# 
  9467     071E                     	;# 
  9468     0796                     	;# 
  9469     0797                     	;# 
  9470     0798                     	;# 
  9471     0799                     	;# 
  9472     079A                     	;# 
  9473     079B                     	;# 
  9474     079C                     	;# 
  9475     079D                     	;# 
  9476     080C                     	;# 
  9477     080D                     	;# 
  9478     080E                     	;# 
  9479     080F                     	;# 
  9480     0810                     	;# 
  9481     0811                     	;# 
  9482     0813                     	;# 
  9483     0814                     	;# 
  9484     081A                     	;# 
  9485     081A                     	;# 
  9486     081B                     	;# 
  9487     081C                     	;# 
  9488     081C                     	;# 
  9489     081D                     	;# 
  9490     081E                     	;# 
  9491     081F                     	;# 
  9492     088C                     	;# 
  9493     088D                     	;# 
  9494     088E                     	;# 
  9495     088F                     	;# 
  9496     0890                     	;# 
  9497     0891                     	;# 
  9498     0892                     	;# 
  9499     0893                     	;# 
  9500     0895                     	;# 
  9501     0896                     	;# 
  9502     0897                     	;# 
  9503     0898                     	;# 
  9504     0899                     	;# 
  9505     089A                     	;# 
  9506     089B                     	;# 
  9507     090C                     	;# 
  9508     090E                     	;# 
  9509     090F                     	;# 
  9510     091F                     	;# 
  9511     098F                     	;# 
  9512     098F                     	;# 
  9513     0990                     	;# 
  9514     0991                     	;# 
  9515     0992                     	;# 
  9516     0993                     	;# 
  9517     0994                     	;# 
  9518     0995                     	;# 
  9519     0996                     	;# 
  9520     0997                     	;# 
  9521     0A19                     	;# 
  9522     0A19                     	;# 
  9523     0A1A                     	;# 
  9524     0A1A                     	;# 
  9525     0A1B                     	;# 
  9526     0A1B                     	;# 
  9527     0A1B                     	;# 
  9528     0A1C                     	;# 
  9529     0A1C                     	;# 
  9530     0A1D                     	;# 
  9531     0A1D                     	;# 
  9532     0A1E                     	;# 
  9533     0A1E                     	;# 
  9534     0A1F                     	;# 
  9535     0A1F                     	;# 
  9536     0A1F                     	;# 
  9537     1E0F                     	;# 
  9538     1E10                     	;# 
  9539     1E11                     	;# 
  9540     1E12                     	;# 
  9541     1E13                     	;# 
  9542     1E14                     	;# 
  9543     1E15                     	;# 
  9544     1E16                     	;# 
  9545     1E17                     	;# 
  9546     1E18                     	;# 
  9547     1E19                     	;# 
  9548     1E1A                     	;# 
  9549     1E1B                     	;# 
  9550     1E1C                     	;# 
  9551     1E1D                     	;# 
  9552     1E1E                     	;# 
  9553     1E1F                     	;# 
  9554     1E20                     	;# 
  9555     1E21                     	;# 
  9556     1E22                     	;# 
  9557     1E23                     	;# 
  9558     1E24                     	;# 
  9559     1E25                     	;# 
  9560     1E26                     	;# 
  9561     1E27                     	;# 
  9562     1E28                     	;# 
  9563     1E29                     	;# 
  9564     1E2A                     	;# 
  9565     1E2B                     	;# 
  9566     1E2C                     	;# 
  9567     1E2D                     	;# 
  9568     1E2E                     	;# 
  9569     1E2F                     	;# 
  9570     1E30                     	;# 
  9571     1E31                     	;# 
  9572     1E32                     	;# 
  9573     1E33                     	;# 
  9574     1E34                     	;# 
  9575     1E35                     	;# 
  9576     1E36                     	;# 
  9577     1E37                     	;# 
  9578     1E8F                     	;# 
  9579     1E90                     	;# 
  9580     1E91                     	;# 
  9581     1E92                     	;# 
  9582     1E93                     	;# 
  9583     1E94                     	;# 
  9584     1E95                     	;# 
  9585     1E96                     	;# 
  9586     1E97                     	;# 
  9587     1E9C                     	;# 
  9588     1E9D                     	;# 
  9589     1E9E                     	;# 
  9590     1EA1                     	;# 
  9591     1EA2                     	;# 
  9592     1EA3                     	;# 
  9593     1EA4                     	;# 
  9594     1EA5                     	;# 
  9595     1EA9                     	;# 
  9596     1EAA                     	;# 
  9597     1EAB                     	;# 
  9598     1EAC                     	;# 
  9599     1EB1                     	;# 
  9600     1EB2                     	;# 
  9601     1EB3                     	;# 
  9602     1EB8                     	;# 
  9603     1EB9                     	;# 
  9604     1EBA                     	;# 
  9605     1EBB                     	;# 
  9606     1EBC                     	;# 
  9607     1EBD                     	;# 
  9608     1EBE                     	;# 
  9609     1EC3                     	;# 
  9610     1EC5                     	;# 
  9611     1EC6                     	;# 
  9612     1EC7                     	;# 
  9613     1EC8                     	;# 
  9614     1EC9                     	;# 
  9615     1ECA                     	;# 
  9616     1ECB                     	;# 
  9617     1ECC                     	;# 
  9618     1ECD                     	;# 
  9619     1ECE                     	;# 
  9620     1F10                     	;# 
  9621     1F11                     	;# 
  9622     1F12                     	;# 
  9623     1F13                     	;# 
  9624     1F14                     	;# 
  9625     1F15                     	;# 
  9626     1F16                     	;# 
  9627     1F17                     	;# 
  9628     1F18                     	;# 
  9629     1F19                     	;# 
  9630     1F1A                     	;# 
  9631     1F1B                     	;# 
  9632     1F1C                     	;# 
  9633     1F1D                     	;# 
  9634     1F1E                     	;# 
  9635     1F1F                     	;# 
  9636     1F20                     	;# 
  9637     1F21                     	;# 
  9638     1F22                     	;# 
  9639     1F23                     	;# 
  9640     1F24                     	;# 
  9641     1F25                     	;# 
  9642     1F26                     	;# 
  9643     1F27                     	;# 
  9644     1F38                     	;# 
  9645     1F39                     	;# 
  9646     1F3A                     	;# 
  9647     1F3B                     	;# 
  9648     1F3C                     	;# 
  9649     1F3D                     	;# 
  9650     1F3E                     	;# 
  9651     1F3F                     	;# 
  9652     1F43                     	;# 
  9653     1F44                     	;# 
  9654     1F45                     	;# 
  9655     1F46                     	;# 
  9656     1F47                     	;# 
  9657     1F48                     	;# 
  9658     1F49                     	;# 
  9659     1F4A                     	;# 
  9660     1F4E                     	;# 
  9661     1F4F                     	;# 
  9662     1F50                     	;# 
  9663     1F51                     	;# 
  9664     1F52                     	;# 
  9665     1F53                     	;# 
  9666     1F54                     	;# 
  9667     1F55                     	;# 
  9668     1F65                     	;# 
  9669     1F66                     	;# 
  9670     1F67                     	;# 
  9671     1F68                     	;# 
  9672     1F69                     	;# 
  9673     1F6A                     	;# 
  9674     1F6B                     	;# 
  9675     1FE4                     	;# 
  9676     1FE5                     	;# 
  9677     1FE6                     	;# 
  9678     1FE7                     	;# 
  9679     1FE8                     	;# 
  9680     1FE8                     	;# 
  9681     1FE9                     	;# 
  9682     1FEA                     	;# 
  9683     1FEB                     	;# 
  9684     1FED                     	;# 
  9685     1FEE                     	;# 
  9686     1FEF                     	;# 
  9687     0000                     	;# 
  9688     0001                     	;# 
  9689     0002                     	;# 
  9690     0003                     	;# 
  9691     0004                     	;# 
  9692     0005                     	;# 
  9693     0006                     	;# 
  9694     0007                     	;# 
  9695     0008                     	;# 
  9696     0009                     	;# 
  9697     000A                     	;# 
  9698     000B                     	;# 
  9699     000C                     	;# 
  9700     000D                     	;# 
  9701     000E                     	;# 
  9702     0010                     	;# 
  9703     0012                     	;# 
  9704     0013                     	;# 
  9705     0014                     	;# 
  9706     0016                     	;# 
  9707     0018                     	;# 
  9708     0019                     	;# 
  9709     001A                     	;# 
  9710     001C                     	;# 
  9711     008C                     	;# 
  9712     008C                     	;# 
  9713     008D                     	;# 
  9714     008E                     	;# 
  9715     008E                     	;# 
  9716     008F                     	;# 
  9717     0090                     	;# 
  9718     0090                     	;# 
  9719     0091                     	;# 
  9720     0092                     	;# 
  9721     0092                     	;# 
  9722     0093                     	;# 
  9723     0094                     	;# 
  9724     0094                     	;# 
  9725     0095                     	;# 
  9726     0096                     	;# 
  9727     0096                     	;# 
  9728     0097                     	;# 
  9729     0098                     	;# 
  9730     0099                     	;# 
  9731     009A                     	;# 
  9732     009B                     	;# 
  9733     009B                     	;# 
  9734     009C                     	;# 
  9735     009D                     	;# 
  9736     009D                     	;# 
  9737     009E                     	;# 
  9738     009F                     	;# 
  9739     010C                     	;# 
  9740     010C                     	;# 
  9741     010D                     	;# 
  9742     010E                     	;# 
  9743     010F                     	;# 
  9744     010F                     	;# 
  9745     0110                     	;# 
  9746     0111                     	;# 
  9747     0112                     	;# 
  9748     0113                     	;# 
  9749     0114                     	;# 
  9750     0115                     	;# 
  9751     0116                     	;# 
  9752     0117                     	;# 
  9753     0118                     	;# 
  9754     0119                     	;# 
  9755     0119                     	;# 
  9756     0119                     	;# 
  9757     011A                     	;# 
  9758     011A                     	;# 
  9759     011A                     	;# 
  9760     011B                     	;# 
  9761     011B                     	;# 
  9762     011B                     	;# 
  9763     011B                     	;# 
  9764     011B                     	;# 
  9765     011C                     	;# 
  9766     011C                     	;# 
  9767     011C                     	;# 
  9768     011D                     	;# 
  9769     011D                     	;# 
  9770     011D                     	;# 
  9771     011E                     	;# 
  9772     011E                     	;# 
  9773     011E                     	;# 
  9774     011F                     	;# 
  9775     011F                     	;# 
  9776     011F                     	;# 
  9777     011F                     	;# 
  9778     011F                     	;# 
  9779     018C                     	;# 
  9780     018D                     	;# 
  9781     018E                     	;# 
  9782     018F                     	;# 
  9783     0190                     	;# 
  9784     0191                     	;# 
  9785     0192                     	;# 
  9786     0196                     	;# 
  9787     0197                     	;# 
  9788     0198                     	;# 
  9789     0199                     	;# 
  9790     019A                     	;# 
  9791     019B                     	;# 
  9792     019C                     	;# 
  9793     020C                     	;# 
  9794     020D                     	;# 
  9795     020E                     	;# 
  9796     020E                     	;# 
  9797     020F                     	;# 
  9798     020F                     	;# 
  9799     0210                     	;# 
  9800     0210                     	;# 
  9801     0211                     	;# 
  9802     0211                     	;# 
  9803     0212                     	;# 
  9804     0213                     	;# 
  9805     0214                     	;# 
  9806     0214                     	;# 
  9807     0215                     	;# 
  9808     0215                     	;# 
  9809     0216                     	;# 
  9810     0216                     	;# 
  9811     0217                     	;# 
  9812     0217                     	;# 
  9813     0218                     	;# 
  9814     0219                     	;# 
  9815     021A                     	;# 
  9816     021A                     	;# 
  9817     021B                     	;# 
  9818     021B                     	;# 
  9819     021C                     	;# 
  9820     021C                     	;# 
  9821     021D                     	;# 
  9822     021D                     	;# 
  9823     021E                     	;# 
  9824     021F                     	;# 
  9825     028C                     	;# 
  9826     028C                     	;# 
  9827     028D                     	;# 
  9828     028D                     	;# 
  9829     028E                     	;# 
  9830     028F                     	;# 
  9831     0290                     	;# 
  9832     0291                     	;# 
  9833     0292                     	;# 
  9834     0292                     	;# 
  9835     0293                     	;# 
  9836     0293                     	;# 
  9837     0294                     	;# 
  9838     0295                     	;# 
  9839     0296                     	;# 
  9840     0297                     	;# 
  9841     0298                     	;# 
  9842     0298                     	;# 
  9843     0299                     	;# 
  9844     0299                     	;# 
  9845     029A                     	;# 
  9846     029B                     	;# 
  9847     029C                     	;# 
  9848     029D                     	;# 
  9849     029F                     	;# 
  9850     030C                     	;# 
  9851     030C                     	;# 
  9852     030D                     	;# 
  9853     030E                     	;# 
  9854     030F                     	;# 
  9855     0310                     	;# 
  9856     0310                     	;# 
  9857     0311                     	;# 
  9858     0312                     	;# 
  9859     0313                     	;# 
  9860     0314                     	;# 
  9861     0314                     	;# 
  9862     0315                     	;# 
  9863     0316                     	;# 
  9864     0317                     	;# 
  9865     0318                     	;# 
  9866     0318                     	;# 
  9867     0319                     	;# 
  9868     031A                     	;# 
  9869     031B                     	;# 
  9870     031C                     	;# 
  9871     031C                     	;# 
  9872     031D                     	;# 
  9873     031E                     	;# 
  9874     031F                     	;# 
  9875     038C                     	;# 
  9876     038C                     	;# 
  9877     038D                     	;# 
  9878     038E                     	;# 
  9879     0390                     	;# 
  9880     0390                     	;# 
  9881     0391                     	;# 
  9882     0392                     	;# 
  9883     048C                     	;# 
  9884     048C                     	;# 
  9885     048D                     	;# 
  9886     048E                     	;# 
  9887     048F                     	;# 
  9888     048F                     	;# 
  9889     0490                     	;# 
  9890     0491                     	;# 
  9891     0492                     	;# 
  9892     0492                     	;# 
  9893     0493                     	;# 
  9894     0494                     	;# 
  9895     0495                     	;# 
  9896     0495                     	;# 
  9897     0496                     	;# 
  9898     0497                     	;# 
  9899     0498                     	;# 
  9900     0499                     	;# 
  9901     049A                     	;# 
  9902     049B                     	;# 
  9903     049C                     	;# 
  9904     049D                     	;# 
  9905     050C                     	;# 
  9906     050C                     	;# 
  9907     050D                     	;# 
  9908     050E                     	;# 
  9909     050F                     	;# 
  9910     050F                     	;# 
  9911     0510                     	;# 
  9912     0511                     	;# 
  9913     0512                     	;# 
  9914     0512                     	;# 
  9915     0513                     	;# 
  9916     0514                     	;# 
  9917     0515                     	;# 
  9918     0515                     	;# 
  9919     0516                     	;# 
  9920     0517                     	;# 
  9921     0518                     	;# 
  9922     0519                     	;# 
  9923     051A                     	;# 
  9924     051B                     	;# 
  9925     051C                     	;# 
  9926     051D                     	;# 
  9927     058C                     	;# 
  9928     058C                     	;# 
  9929     058D                     	;# 
  9930     058E                     	;# 
  9931     058F                     	;# 
  9932     058F                     	;# 
  9933     0590                     	;# 
  9934     0591                     	;# 
  9935     0592                     	;# 
  9936     0593                     	;# 
  9937     059C                     	;# 
  9938     059C                     	;# 
  9939     059D                     	;# 
  9940     059D                     	;# 
  9941     059E                     	;# 
  9942     059F                     	;# 
  9943     060C                     	;# 
  9944     060C                     	;# 
  9945     060D                     	;# 
  9946     060D                     	;# 
  9947     060E                     	;# 
  9948     060F                     	;# 
  9949     0610                     	;# 
  9950     0611                     	;# 
  9951     0612                     	;# 
  9952     0613                     	;# 
  9953     0614                     	;# 
  9954     0616                     	;# 
  9955     0616                     	;# 
  9956     0617                     	;# 
  9957     0617                     	;# 
  9958     0618                     	;# 
  9959     0619                     	;# 
  9960     061A                     	;# 
  9961     061B                     	;# 
  9962     061C                     	;# 
  9963     061D                     	;# 
  9964     061E                     	;# 
  9965     068C                     	;# 
  9966     068D                     	;# 
  9967     068E                     	;# 
  9968     068F                     	;# 
  9969     0690                     	;# 
  9970     0691                     	;# 
  9971     0692                     	;# 
  9972     0693                     	;# 
  9973     0694                     	;# 
  9974     070C                     	;# 
  9975     070D                     	;# 
  9976     070E                     	;# 
  9977     070F                     	;# 
  9978     0710                     	;# 
  9979     0711                     	;# 
  9980     0712                     	;# 
  9981     0713                     	;# 
  9982     0714                     	;# 
  9983     0716                     	;# 
  9984     0717                     	;# 
  9985     0718                     	;# 
  9986     0719                     	;# 
  9987     071A                     	;# 
  9988     071B                     	;# 
  9989     071C                     	;# 
  9990     071D                     	;# 
  9991     071E                     	;# 
  9992     0796                     	;# 
  9993     0797                     	;# 
  9994     0798                     	;# 
  9995     0799                     	;# 
  9996     079A                     	;# 
  9997     079B                     	;# 
  9998     079C                     	;# 
  9999     079D                     	;# 
 10000     080C                     	;# 
 10001     080D                     	;# 
 10002     080E                     	;# 
 10003     080F                     	;# 
 10004     0810                     	;# 
 10005     0811                     	;# 
 10006     0813                     	;# 
 10007     0814                     	;# 
 10008     081A                     	;# 
 10009     081A                     	;# 
 10010     081B                     	;# 
 10011     081C                     	;# 
 10012     081C                     	;# 
 10013     081D                     	;# 
 10014     081E                     	;# 
 10015     081F                     	;# 
 10016     088C                     	;# 
 10017     088D                     	;# 
 10018     088E                     	;# 
 10019     088F                     	;# 
 10020     0890                     	;# 
 10021     0891                     	;# 
 10022     0892                     	;# 
 10023     0893                     	;# 
 10024     0895                     	;# 
 10025     0896                     	;# 
 10026     0897                     	;# 
 10027     0898                     	;# 
 10028     0899                     	;# 
 10029     089A                     	;# 
 10030     089B                     	;# 
 10031     090C                     	;# 
 10032     090E                     	;# 
 10033     090F                     	;# 
 10034     091F                     	;# 
 10035     098F                     	;# 
 10036     098F                     	;# 
 10037     0990                     	;# 
 10038     0991                     	;# 
 10039     0992                     	;# 
 10040     0993                     	;# 
 10041     0994                     	;# 
 10042     0995                     	;# 
 10043     0996                     	;# 
 10044     0997                     	;# 
 10045     0A19                     	;# 
 10046     0A19                     	;# 
 10047     0A1A                     	;# 
 10048     0A1A                     	;# 
 10049     0A1B                     	;# 
 10050     0A1B                     	;# 
 10051     0A1B                     	;# 
 10052     0A1C                     	;# 
 10053     0A1C                     	;# 
 10054     0A1D                     	;# 
 10055     0A1D                     	;# 
 10056     0A1E                     	;# 
 10057     0A1E                     	;# 
 10058     0A1F                     	;# 
 10059     0A1F                     	;# 
 10060     0A1F                     	;# 
 10061     1E0F                     	;# 
 10062     1E10                     	;# 
 10063     1E11                     	;# 
 10064     1E12                     	;# 
 10065     1E13                     	;# 
 10066     1E14                     	;# 
 10067     1E15                     	;# 
 10068     1E16                     	;# 
 10069     1E17                     	;# 
 10070     1E18                     	;# 
 10071     1E19                     	;# 
 10072     1E1A                     	;# 
 10073     1E1B                     	;# 
 10074     1E1C                     	;# 
 10075     1E1D                     	;# 
 10076     1E1E                     	;# 
 10077     1E1F                     	;# 
 10078     1E20                     	;# 
 10079     1E21                     	;# 
 10080     1E22                     	;# 
 10081     1E23                     	;# 
 10082     1E24                     	;# 
 10083     1E25                     	;# 
 10084     1E26                     	;# 
 10085     1E27                     	;# 
 10086     1E28                     	;# 
 10087     1E29                     	;# 
 10088     1E2A                     	;# 
 10089     1E2B                     	;# 
 10090     1E2C                     	;# 
 10091     1E2D                     	;# 
 10092     1E2E                     	;# 
 10093     1E2F                     	;# 
 10094     1E30                     	;# 
 10095     1E31                     	;# 
 10096     1E32                     	;# 
 10097     1E33                     	;# 
 10098     1E34                     	;# 
 10099     1E35                     	;# 
 10100     1E36                     	;# 
 10101     1E37                     	;# 
 10102     1E8F                     	;# 
 10103     1E90                     	;# 
 10104     1E91                     	;# 
 10105     1E92                     	;# 
 10106     1E93                     	;# 
 10107     1E94                     	;# 
 10108     1E95                     	;# 
 10109     1E96                     	;# 
 10110     1E97                     	;# 
 10111     1E9C                     	;# 
 10112     1E9D                     	;# 
 10113     1E9E                     	;# 
 10114     1EA1                     	;# 
 10115     1EA2                     	;# 
 10116     1EA3                     	;# 
 10117     1EA4                     	;# 
 10118     1EA5                     	;# 
 10119     1EA9                     	;# 
 10120     1EAA                     	;# 
 10121     1EAB                     	;# 
 10122     1EAC                     	;# 
 10123     1EB1                     	;# 
 10124     1EB2                     	;# 
 10125     1EB3                     	;# 
 10126     1EB8                     	;# 
 10127     1EB9                     	;# 
 10128     1EBA                     	;# 
 10129     1EBB                     	;# 
 10130     1EBC                     	;# 
 10131     1EBD                     	;# 
 10132     1EBE                     	;# 
 10133     1EC3                     	;# 
 10134     1EC5                     	;# 
 10135     1EC6                     	;# 
 10136     1EC7                     	;# 
 10137     1EC8                     	;# 
 10138     1EC9                     	;# 
 10139     1ECA                     	;# 
 10140     1ECB                     	;# 
 10141     1ECC                     	;# 
 10142     1ECD                     	;# 
 10143     1ECE                     	;# 
 10144     1F10                     	;# 
 10145     1F11                     	;# 
 10146     1F12                     	;# 
 10147     1F13                     	;# 
 10148     1F14                     	;# 
 10149     1F15                     	;# 
 10150     1F16                     	;# 
 10151     1F17                     	;# 
 10152     1F18                     	;# 
 10153     1F19                     	;# 
 10154     1F1A                     	;# 
 10155     1F1B                     	;# 
 10156     1F1C                     	;# 
 10157     1F1D                     	;# 
 10158     1F1E                     	;# 
 10159     1F1F                     	;# 
 10160     1F20                     	;# 
 10161     1F21                     	;# 
 10162     1F22                     	;# 
 10163     1F23                     	;# 
 10164     1F24                     	;# 
 10165     1F25                     	;# 
 10166     1F26                     	;# 
 10167     1F27                     	;# 
 10168     1F38                     	;# 
 10169     1F39                     	;# 
 10170     1F3A                     	;# 
 10171     1F3B                     	;# 
 10172     1F3C                     	;# 
 10173     1F3D                     	;# 
 10174     1F3E                     	;# 
 10175     1F3F                     	;# 
 10176     1F43                     	;# 
 10177     1F44                     	;# 
 10178     1F45                     	;# 
 10179     1F46                     	;# 
 10180     1F47                     	;# 
 10181     1F48                     	;# 
 10182     1F49                     	;# 
 10183     1F4A                     	;# 
 10184     1F4E                     	;# 
 10185     1F4F                     	;# 
 10186     1F50                     	;# 
 10187     1F51                     	;# 
 10188     1F52                     	;# 
 10189     1F53                     	;# 
 10190     1F54                     	;# 
 10191     1F55                     	;# 
 10192     1F65                     	;# 
 10193     1F66                     	;# 
 10194     1F67                     	;# 
 10195     1F68                     	;# 
 10196     1F69                     	;# 
 10197     1F6A                     	;# 
 10198     1F6B                     	;# 
 10199     1FE4                     	;# 
 10200     1FE5                     	;# 
 10201     1FE6                     	;# 
 10202     1FE7                     	;# 
 10203     1FE8                     	;# 
 10204     1FE8                     	;# 
 10205     1FE9                     	;# 
 10206     1FEA                     	;# 
 10207     1FEB                     	;# 
 10208     1FED                     	;# 
 10209     1FEE                     	;# 
 10210     1FEF                     	;# 
 10211                           
 10212 ;; Function _do_I2C_RESET is unused but had its address taken
 10213     0000                     
 10214 ;; Function _do_I2C_IDLE is unused but had its address taken
 10215     0000                     
 10216 ;; Function _do_I2C_SEND_RESTART_READ is unused but had its address taken
 10217     0000                     
 10218 ;; Function _do_I2C_SEND_RESTART_WRITE is unused but had its address taken
 10219     0000                     
 10220 ;; Function _do_I2C_SEND_RESTART is unused but had its address taken
 10221     0000                     
 10222 ;; Function _do_I2C_SEND_STOP is unused but had its address taken
 10223     0000                     
 10224 ;; Function _do_I2C_SEND_ADR_READ is unused but had its address taken
 10225     0000                     
 10226 ;; Function _do_I2C_SEND_ADR_WRITE is unused but had its address taken
 10227     0000                     
 10228 ;; Function _do_I2C_RCEN is unused but had its address taken
 10229     0000                     
 10230 ;; Function _do_I2C_DO_ACK is unused but had its address taken
 10231     0000                     
 10232 ;; Function _do_I2C_DO_NACK_STOP is unused but had its address taken
 10233     0000                     
 10234 ;; Function _do_I2C_DO_NACK_RESTART is unused but had its address taken
 10235     0000                     
 10236 ;; Function _do_I2C_DO_ADDRESS_NACK is unused but had its address taken
 10237     0000                     
 10238 ;; Function _do_I2C_TX is unused but had its address taken
 10239     0000                     
 10240 ;; Function _do_I2C_RX is unused but had its address taken
 10241     0000                     
 10242 ;; Function _do_I2C_TX_EMPTY is unused but had its address taken
 10243     0000                     
 10244 ;; Function _i2c_ISR is unused but had its address taken
 10245     0000                     
 10246 ;; Function _i2c_busCollisionISR is unused but had its address taken
 10247     0000                     
 10248 ;; Function _returnStop is unused but had its address taken
 10249     0000                     
 10250 ;; Function _returnReset is unused but had its address taken
 10251     0000                     
 10252 ;; Function _EUSART2_is_tx_ready is unused but had its address taken
 10253     0000                     
 10254 ;; Function _EUSART1_is_tx_ready is unused but had its address taken
 10255     0000                     
 10256                           	psect	idataBANK0
 10257     0002                     __pidataBANK0:
 10258                           
 10259                           ;initializer for RN487X_GetInputsValues@F12901
 10260     0002  3430               	retlw	48
 10261     0003  3430               	retlw	48
 10262                           
 10263                           	psect	idataBANK2
 10264     1160                     __pidataBANK2:
 10265                           
 10266                           ;initializer for __hex
 10267     1160  3430               	retlw	48
 10268     1161  3431               	retlw	49
 10269     1162  3432               	retlw	50
 10270     1163  3433               	retlw	51
 10271     1164  3434               	retlw	52
 10272     1165  3435               	retlw	53
 10273     1166  3436               	retlw	54
 10274     1167  3437               	retlw	55
 10275     1168  3438               	retlw	56
 10276     1169  3439               	retlw	57
 10277     116A  3441               	retlw	65
 10278     116B  3442               	retlw	66
 10279     116C  3443               	retlw	67
 10280     116D  3444               	retlw	68
 10281     116E  3445               	retlw	69
 10282     116F  3446               	retlw	70
 10283     1170  3400               	retlw	0
 10284                           
 10285                           	psect	stringtext1
 10286     1800                     __pstringtext1:
 10287     1800                     _uart:
 10288     1800  344B               	retlw	low _EUSART1_Read
 10289     1801  3415               	retlw	high _EUSART1_Read
 10290     1802  3424               	retlw	low _EUSART1_Write
 10291     1803  3415               	retlw	high _EUSART1_Write
 10292     1804  3400               	retlw	0
 10293     1805  3400               	retlw	0
 10294     1806  3490               	retlw	low _EUSART1_is_rx_ready
 10295     1807  341F               	retlw	high _EUSART1_is_rx_ready
 10296     1808  3428               	retlw	low _EUSART1_SetTxInterruptHandler
 10297     1809  341F               	retlw	high _EUSART1_SetTxInterruptHandler
 10298     180A  3487               	retlw	low _EUSART1_Receive_ISR
 10299     180B  3408               	retlw	high _EUSART1_Receive_ISR
 10300     180C  3422               	retlw	low _EUSART1_SetRxInterruptHandler
 10301     180D  341F               	retlw	high _EUSART1_SetRxInterruptHandler
 10302     180E  34A8               	retlw	low _EUSART1_is_tx_done
 10303     180F  341E               	retlw	high _EUSART1_is_tx_done
 10304     1810  3400               	retlw	low _EUSART1_Transmit_ISR
 10305     1811  3414               	retlw	high _EUSART1_Transmit_ISR
 10306     1812  343E               	retlw	low _EUSART1_Initialize
 10307     1813  3409               	retlw	high _EUSART1_Initialize
 10308     1814  34D7               	retlw	low _EUSART2_Read
 10309     1815  3414               	retlw	high _EUSART2_Read
 10310     1816  34FD               	retlw	low _EUSART2_Write
 10311     1817  3414               	retlw	high _EUSART2_Write
 10312     1818  3400               	retlw	0
 10313     1819  3400               	retlw	0
 10314     181A  3487               	retlw	low _EUSART2_is_rx_ready
 10315     181B  341F               	retlw	high _EUSART2_is_rx_ready
 10316     181C  3446               	retlw	low _EUSART2_SetTxInterruptHandler
 10317     181D  341F               	retlw	high _EUSART2_SetTxInterruptHandler
 10318     181E  344E               	retlw	low _EUSART2_Receive_ISR
 10319     181F  3408               	retlw	high _EUSART2_Receive_ISR
 10320     1820  3440               	retlw	low _EUSART2_SetRxInterruptHandler
 10321     1821  341F               	retlw	high _EUSART2_SetRxInterruptHandler
 10322     1822  34A4               	retlw	low _EUSART2_is_tx_done
 10323     1823  341E               	retlw	high _EUSART2_is_tx_done
 10324     1824  34DE               	retlw	low _EUSART2_Transmit_ISR
 10325     1825  3413               	retlw	high _EUSART2_Transmit_ISR
 10326     1826  347C               	retlw	low _EUSART2_Initialize
 10327     1827  3409               	retlw	high _EUSART2_Initialize
 10328     1828                     __end_of_uart:
 10329                           
 10330                           	psect	stringtext2
 10331     1828                     __pstringtext2:
 10332     1828                     _i2c1_fsmStateTable:
 10333     1828  34B1               	retlw	low _I2C1_DO_IDLE
 10334     1829  341E               	retlw	high _I2C1_DO_IDLE
 10335     182A  347E               	retlw	low _I2C1_DO_SEND_ADR_READ
 10336     182B  341F               	retlw	high _I2C1_DO_SEND_ADR_READ
 10337     182C  3465               	retlw	low _I2C1_DO_SEND_ADR_WRITE
 10338     182D  341F               	retlw	high _I2C1_DO_SEND_ADR_WRITE
 10339     182E  348F               	retlw	low _I2C1_DO_TX
 10340     182F  340C               	retlw	high _I2C1_DO_TX
 10341     1830  34F9               	retlw	low _I2C1_DO_RX
 10342     1831  3409               	retlw	high _I2C1_DO_RX
 10343     1832  345E               	retlw	low _I2C1_DO_RCEN
 10344     1833  341F               	retlw	high _I2C1_DO_RCEN
 10345     1834  34EE               	retlw	low _I2C1_DO_TX_EMPTY
 10346     1835  3415               	retlw	high _I2C1_DO_TX_EMPTY
 10347     1836  34B6               	retlw	low _I2C1_DO_SEND_RESTART_READ
 10348     1837  341E               	retlw	high _I2C1_DO_SEND_RESTART_READ
 10349     1838  34BB               	retlw	low _I2C1_DO_SEND_RESTART_WRITE
 10350     1839  341E               	retlw	high _I2C1_DO_SEND_RESTART_WRITE
 10351     183A  34C0               	retlw	low _I2C1_DO_SEND_RESTART
 10352     183B  341E               	retlw	high _I2C1_DO_SEND_RESTART
 10353     183C  34C5               	retlw	low _I2C1_DO_SEND_STOP
 10354     183D  341E               	retlw	high _I2C1_DO_SEND_STOP
 10355     183E  34CA               	retlw	low _I2C1_DO_RX_ACK
 10356     183F  341E               	retlw	high _I2C1_DO_RX_ACK
 10357     1840  34CF               	retlw	low _I2C1_DO_RX_NACK_STOP
 10358     1841  341E               	retlw	high _I2C1_DO_RX_NACK_STOP
 10359     1842  34D4               	retlw	low _I2C1_DO_RX_NACK_RESTART
 10360     1843  341E               	retlw	high _I2C1_DO_RX_NACK_RESTART
 10361     1844  34D9               	retlw	low _I2C1_DO_RESET
 10362     1845  341E               	retlw	high _I2C1_DO_RESET
 10363     1846  3472               	retlw	low _I2C1_DO_ADDRESS_NACK
 10364     1847  3415               	retlw	high _I2C1_DO_ADDRESS_NACK
 10365     1848                     __end_of_i2c1_fsmStateTable:
 10366                           
 10367                           	psect	stringtext3
 10368     1848                     __pstringtext3:
 10369     1848                     _fsmStateTable:
 10370     1848  3400               	retlw	0
 10371     1849  3400               	retlw	0
 10372     184A  3400               	retlw	0
 10373     184B  3400               	retlw	0
 10374     184C  3400               	retlw	0
 10375     184D  3400               	retlw	0
 10376     184E  3400               	retlw	0
 10377     184F  3400               	retlw	0
 10378     1850  3400               	retlw	0
 10379     1851  3400               	retlw	0
 10380     1852  3400               	retlw	0
 10381     1853  3400               	retlw	0
 10382     1854  3400               	retlw	0
 10383     1855  3400               	retlw	0
 10384     1856  3400               	retlw	0
 10385     1857  3400               	retlw	0
 10386     1858  3400               	retlw	0
 10387     1859  3400               	retlw	0
 10388     185A  3400               	retlw	0
 10389     185B  3400               	retlw	0
 10390     185C  3400               	retlw	0
 10391     185D  3400               	retlw	0
 10392     185E  3400               	retlw	0
 10393     185F  3400               	retlw	0
 10394     1860  3400               	retlw	0
 10395     1861  3400               	retlw	0
 10396     1862  3400               	retlw	0
 10397     1863  3400               	retlw	0
 10398     1864  3400               	retlw	0
 10399     1865  3400               	retlw	0
 10400     1866  3400               	retlw	0
 10401     1867  3400               	retlw	0
 10402     1868                     __end_of_fsmStateTable:
 10403                           
 10404                           	psect	stringtext4
 10405     1868                     __pstringtext4:
 10406     1868                     _RN487X:
 10407     1868  3413               	retlw	low _RN487X_Write
 10408     1869  3410               	retlw	high _RN487X_Write
 10409     186A  34A2               	retlw	low _RN487X_Read@rn487x_interface$F1381
 10410     186B  341F               	retlw	high _RN487X_Read@rn487x_interface$F1381
 10411     186C  34AC               	retlw	low _RN487X_is_tx_done
 10412     186D  341F               	retlw	high _RN487X_is_tx_done
 10413     186E  34B6               	retlw	low _RN487X_is_rx_ready
 10414     186F  341F               	retlw	high _RN487X_is_rx_ready
 10415     1870  34EA               	retlw	low _RN487X_IndicateRx
 10416     1871  341F               	retlw	high _RN487X_IndicateRx
 10417     1872  34F5               	retlw	low _RN487X_Reset
 10418     1873  341F               	retlw	high _RN487X_Reset
 10419     1874  341F               	retlw	low _RN487X_SetSystemMode
 10420     1875  3410               	retlw	high _RN487X_SetSystemMode
 10421     1876  346D               	retlw	low _RN487X_Delay
 10422     1877  341F               	retlw	high _RN487X_Delay
 10423     1878  347F               	retlw	low _RN487X_MessageHandler
 10424     1879  340A               	retlw	high _RN487X_MessageHandler
 10425     187A                     __end_of_RN487X:
 10426                           
 10427                           	psect	stringtext5
 10428     2010                     __pstringtext5:
 10429     2010                     _rn487x_driver_version:
 10430     2010  3400               	retlw	low (STR_1| (0+32768))
 10431     2011  34A0               	retlw	high (STR_1| (0+32768))
 10432     2012                     __end_of_rn487x_driver_version:
 10433                           
 10434                           	psect	stringtext6
 10435     2012                     __pstringtext6:
 10436     2012                     _protocol_version_number:
 10437     2012  3400               	retlw	low (STR_1| (0+32768))
 10438     2013  34A0               	retlw	high (STR_1| (0+32768))
 10439     2014                     __end_of_protocol_version_number:
 10440                           
 10441                           	psect	stringtext7
 10442     1886                     __pstringtext7:
 10443     1886                     RN487X_RebootCmd@reboot:
 10444     1886  3452               	retlw	82
 10445     1887  3465               	retlw	101
 10446     1888  3462               	retlw	98
 10447     1889  346F               	retlw	111
 10448     188A  346F               	retlw	111
 10449     188B  3474               	retlw	116
 10450     188C  3469               	retlw	105
 10451     188D  346E               	retlw	110
 10452     188E  3467               	retlw	103
 10453     188F  340D               	retlw	13
 10454     1890  340A               	retlw	10
 10455     1891                     __end_ofRN487X_RebootCmd@reboot:
 10456                           
 10457                           	psect	stringtext8
 10458     2006                     __pstringtext8:
 10459     2006                     RN487X_EnterDataMode@cmdPrompt:
 10460     2006  3445               	retlw	69
 10461     2007  344E               	retlw	78
 10462     2008  3444               	retlw	68
 10463     2009  340D               	retlw	13
 10464     200A  340A               	retlw	10
 10465     200B                     __end_ofRN487X_EnterDataMode@cmdPrompt:
 10466                           
 10467                           	psect	stringtext9
 10468     200B                     __pstringtext9:
 10469     200B                     RN487X_EnterCmdMode@cmdPrompt:
 10470     200B  3443               	retlw	67
 10471     200C  344D               	retlw	77
 10472     200D  3444               	retlw	68
 10473     200E  343E               	retlw	62
 10474     200F  3420               	retlw	32
 10475     2010                     __end_ofRN487X_EnterCmdMode@cmdPrompt:
 10476                           
 10477                           	psect	nvBANK1
 10478     00E9                     __pnvBANK1:
 10479     00E9                     _IOCAF6_InterruptHandler:
 10480     00E9                     	ds	2
 10481     00EB                     _EUSART2_RxDefaultInterruptHandler:
 10482     00EB                     	ds	2
 10483     00ED                     _EUSART2_TxDefaultInterruptHandler:
 10484     00ED                     	ds	2
 10485                           
 10486                           	psect	nvBANK2
 10487     015D                     __pnvBANK2:
 10488     015D                     _EUSART1_ErrorHandler:
 10489     015D                     	ds	2
 10490     015F                     _EUSART1_OverrunErrorHandler:
 10491     015F                     	ds	2
 10492     0161                     _EUSART1_FramingErrorHandler:
 10493     0161                     	ds	2
 10494     0163                     _EUSART1_RxDefaultInterruptHandler:
 10495     0163                     	ds	2
 10496     0165                     _EUSART1_TxDefaultInterruptHandler:
 10497     0165                     	ds	2
 10498     0167                     _EUSART2_ErrorHandler:
 10499     0167                     	ds	2
 10500     0169                     _EUSART2_OverrunErrorHandler:
 10501     0169                     	ds	2
 10502     016B                     _EUSART2_FramingErrorHandler:
 10503     016B                     	ds	2
 10504     0014                     _TRISC	set	20
 10505     0013                     _TRISB	set	19
 10506     0012                     _TRISA	set	18
 10507     0016                     _TRISE	set	22
 10508     001A                     _LATC	set	26
 10509     0019                     _LATB	set	25
 10510     0018                     _LATA	set	24
 10511     001C                     _LATE	set	28
 10512     0012                     _TRISAbits	set	18
 10513     001A                     _LATCbits	set	26
 10514     000B                     _INTCONbits	set	11
 10515     0018                     _LATAbits	set	24
 10516     000C                     _PORTAbits	set	12
 10517     0119                     _RC1REG	set	281
 10518     011D                     _RC1STAbits	set	285
 10519     011A                     _TX1REG	set	282
 10520     011E                     _TX1STAbits	set	286
 10521     011C                     _SP1BRGH	set	284
 10522     011B                     _SP1BRGL	set	283
 10523     011E                     _TX1STA	set	286
 10524     011D                     _RC1STA	set	285
 10525     011F                     _BAUD1CON	set	287
 10526     018F                     _SSP1STATbits	set	399
 10527     018E                     _SSP1MSK	set	398
 10528     018C                     _SSP1BUF	set	396
 10529     0191                     _SSP1CON2bits	set	401
 10530     018D                     _SSP1ADD	set	397
 10531     0191                     _SSP1CON2	set	401
 10532     0190                     _SSP1CON1	set	400
 10533     018F                     _SSP1STAT	set	399
 10534     0190                     _SSP1CON1bits	set	400
 10535     059E                     _T0CON0bits	set	1438
 10536     059E                     _T0CON0	set	1438
 10537     059C                     _TMR0L	set	1436
 10538     059D                     _TMR0H	set	1437
 10539     059F                     _T0CON1	set	1439
 10540     070F                     _PIR3bits	set	1807
 10541     070C                     _PIR0bits	set	1804
 10542     0716                     _PIE0bits	set	1814
 10543     0719                     _PIE3bits	set	1817
 10544     079D                     _PMD7	set	1949
 10545     079C                     _PMD6	set	1948
 10546     079B                     _PMD5	set	1947
 10547     079A                     _PMD4	set	1946
 10548     0799                     _PMD3	set	1945
 10549     0798                     _PMD2	set	1944
 10550     0797                     _PMD1	set	1943
 10551     0796                     _PMD0	set	1942
 10552     0892                     _OSCTUNE	set	2194
 10553     0890                     _OSCSTAT	set	2192
 10554     0893                     _OSCFRQ	set	2195
 10555     0891                     _OSCEN	set	2193
 10556     088F                     _OSCCON3	set	2191
 10557     088D                     _OSCCON1	set	2189
 10558     0A19                     _RC2REG	set	2585
 10559     0A1D                     _RC2STAbits	set	2589
 10560     0A1A                     _TX2REG	set	2586
 10561     0A1E                     _TX2STAbits	set	2590
 10562     0A1C                     _SP2BRGH	set	2588
 10563     0A1B                     _SP2BRGL	set	2587
 10564     0A1E                     _TX2STA	set	2590
 10565     0A1D                     _RC2STA	set	2589
 10566     0A1F                     _BAUD2CON	set	2591
 10567     1ECB                     _RX1DTPPS	set	7883
 10568     1EC6                     _SSP1DATPPS	set	7878
 10569     1ECD                     _RX2DTPPS	set	7885
 10570     1EC5                     _SSP1CLKPPS	set	7877
 10571     1F1C                     _RB4PPS	set	7964
 10572     1F24                     _RC4PPS	set	7972
 10573     1F1A                     _RB2PPS	set	7962
 10574     1F19                     _RB1PPS	set	7961
 10575     1F3D                     _IOCAPbits	set	7997
 10576     1F3E                     _IOCANbits	set	7998
 10577     1F3F                     _IOCAFbits	set	7999
 10578     1F52                     _INLVLC	set	8018
 10579     1F47                     _INLVLB	set	8007
 10580     1F3C                     _INLVLA	set	7996
 10581     1F51                     _SLRCONC	set	8017
 10582     1F46                     _SLRCONB	set	8006
 10583     1F3B                     _SLRCONA	set	7995
 10584     1F50                     _ODCONC	set	8016
 10585     1F45                     _ODCONB	set	8005
 10586     1F3A                     _ODCONA	set	7994
 10587     1F66                     _ODCONE	set	8038
 10588     1F4F                     _WPUC	set	8015
 10589     1F39                     _WPUA	set	7993
 10590     1F44                     _WPUB	set	8004
 10591     1F65                     _WPUE	set	8037
 10592     1F38                     _ANSELA	set	7992
 10593     1F43                     _ANSELB	set	8003
 10594     1F4E                     _ANSELC	set	8014
 10595                           
 10596                           	psect	stringtext10
 10597     187A                     __pstringtext10:
 10598     187A                     STR_4:
 10599     187A  3453               	retlw	83	;'S'
 10600     187B  3454               	retlw	84	;'T'
 10601     187C  3452               	retlw	82	;'R'
 10602     187D  3445               	retlw	69	;'E'
 10603     187E  3441               	retlw	65	;'A'
 10604     187F  344D               	retlw	77	;'M'
 10605     1880  345F               	retlw	95	;'_'
 10606     1881  344F               	retlw	79	;'O'
 10607     1882  3450               	retlw	80	;'P'
 10608     1883  3445               	retlw	69	;'E'
 10609     1884  344E               	retlw	78	;'N'
 10610     1885  3400               	retlw	0
 10611                           
 10612                           	psect	stringtext11
 10613     1891                     __pstringtext11:
 10614     1891                     STR_2:
 10615     1891  3444               	retlw	68	;'D'
 10616     1892  3449               	retlw	73	;'I'
 10617     1893  3453               	retlw	83	;'S'
 10618     1894  3443               	retlw	67	;'C'
 10619     1895  344F               	retlw	79	;'O'
 10620     1896  344E               	retlw	78	;'N'
 10621     1897  344E               	retlw	78	;'N'
 10622     1898  3445               	retlw	69	;'E'
 10623     1899  3443               	retlw	67	;'C'
 10624     189A  3454               	retlw	84	;'T'
 10625     189B  3400               	retlw	0
 10626                           
 10627                           	psect	stringtext12
 10628     2000                     __pstringtext12:
 10629     2000                     STR_1:
 10630     2000  3431               	retlw	49	;'1'
 10631     2001  342E               	retlw	46	;'.'
 10632     2002  3431               	retlw	49	;'1'
 10633     2003  342E               	retlw	46	;'.'
 10634     2004  3430               	retlw	48	;'0'
 10635     2005  3400               	retlw	0
 10636                           
 10637                           	psect	stringtext13
 10638     0000                     __pstringtext13:
 10639     2000                     
 10640                           	psect	cinit
 10641     0057                     start_initialization:	
 10642                           ; #config settings
 10643                           
 10644     0057                     __initialization:
 10645                           
 10646                           ; Initialize objects allocated to BANK0
 10647     0057  3180  2002  3180   	fcall	__pidataBANK0	;fetch initializer
 10648     005A  00EE               	movwf	__pdataBANK0& (0+127)
 10649     005B  3180  2003  3180   	fcall	__pidataBANK0+1	;fetch initializer
 10650     005E  00EF               	movwf	(__pdataBANK0+1)& (0+127)
 10651                           
 10652                           ; Initialize objects allocated to BANK2
 10653     005F  3060               	movlw	low __pidataBANK2
 10654     0060  0084               	movwf	4
 10655     0061  3091               	movlw	(high __pidataBANK2)| (0+128)
 10656     0062  0085               	movwf	5
 10657     0063  304C               	movlw	low __pdataBANK2
 10658     0064  0086               	movwf	6
 10659     0065  3001               	movlw	high __pdataBANK2
 10660     0066  0087               	movwf	7
 10661     0067  3011               	movlw	17
 10662     0068  319F  2758  3180   	fcall	init_ram
 10663                           
 10664                           ; Clear objects allocated to COMMON
 10665     006B  01FC               	clrf	__pbssCOMMON& (0+127)
 10666                           
 10667                           ; Clear objects allocated to BANK0
 10668     006C  304A               	movlw	low __pbssBANK0
 10669     006D  0084               	movwf	4
 10670     006E  3000               	movlw	high __pbssBANK0
 10671     006F  0085               	movwf	5
 10672     0070  3024               	movlw	36
 10673     0071  319F  2752  3180   	fcall	clear_ram0
 10674                           
 10675                           ; Clear objects allocated to BANK1
 10676     0074  30A0               	movlw	low __pbssBANK1
 10677     0075  0084               	movwf	4
 10678     0076  3000               	movlw	high __pbssBANK1
 10679     0077  0085               	movwf	5
 10680     0078  3049               	movlw	73
 10681     0079  319F  2752  3180   	fcall	clear_ram0
 10682                           
 10683                           ; Clear objects allocated to BANK2
 10684     007C  3020               	movlw	low __pbssBANK2
 10685     007D  0084               	movwf	4
 10686     007E  3001               	movlw	high __pbssBANK2
 10687     007F  0085               	movwf	5
 10688     0080  302C               	movlw	44
 10689     0081  319F  2752  3180   	fcall	clear_ram0
 10690                           
 10691                           ; Clear objects allocated to BANK3
 10692     0084  30A0               	movlw	low __pbssBANK3
 10693     0085  0084               	movwf	4
 10694     0086  3001               	movlw	high __pbssBANK3
 10695     0087  0085               	movwf	5
 10696     0088  3040               	movlw	64
 10697     0089  319F  2752  3180   	fcall	clear_ram0
 10698                           
 10699                           ; Clear objects allocated to BANK4
 10700     008C  3020               	movlw	low __pbssBANK4
 10701     008D  0084               	movwf	4
 10702     008E  3002               	movlw	high __pbssBANK4
 10703     008F  0085               	movwf	5
 10704     0090  3050               	movlw	80
 10705     0091  319F  2752  3180   	fcall	clear_ram0
 10706                           
 10707                           ; Clear objects allocated to BANK5
 10708     0094  30A0               	movlw	low __pbssBANK5
 10709     0095  0084               	movwf	4
 10710     0096  3002               	movlw	high __pbssBANK5
 10711     0097  0085               	movwf	5
 10712     0098  3050               	movlw	80
 10713     0099  319F  2752  3180   	fcall	clear_ram0
 10714                           
 10715                           ; Clear objects allocated to BANK6
 10716     009C  3020               	movlw	low __pbssBANK6
 10717     009D  0084               	movwf	4
 10718     009E  3003               	movlw	high __pbssBANK6
 10719     009F  0085               	movwf	5
 10720     00A0  3050               	movlw	80
 10721     00A1  319F  2752  3180   	fcall	clear_ram0
 10722     00A4                     end_of_initialization:	
 10723                           ;End of C runtime variable initialization code
 10724                           
 10725     00A4                     __end_of__initialization:
 10726     00A4  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 10727     00A5  0140               	movlb	0
 10728     00A6  3184  2CBD         	ljmp	_main	;jump to C main() function
 10729                           
 10730                           	psect	bssCOMMON
 10731     007C                     __pbssCOMMON:
 10732     007C                     _eusart2RxHead:
 10733     007C                     	ds	1
 10734                           
 10735                           	psect	bssBANK0
 10736     004A                     __pbssBANK0:
 10737     004A                     _manufactureId:
 10738     004A                     	ds	2
 10739     004C                     _timer0ReloadVal16bit:
 10740     004C                     	ds	2
 10741     004E                     _pHead:
 10742     004E                     	ds	2
 10743     0050                     _asyncBuffer:
 10744     0050                     	ds	2
 10745     0052                     LIGHTBLUE_ParseIncomingPacket@data:
 10746     0052                     	ds	2
 10747     0054                     _bitMap:
 10748     0054                     	ds	2
 10749     0056                     _serialIndex:
 10750     0056                     	ds	1
 10751     0057                     _eusart1RxLastError:
 10752     0057                     	ds	1
 10753     0058                     _eusart1RxCount:
 10754     0058                     	ds	1
 10755     0059                     _eusart1RxTail:
 10756     0059                     	ds	1
 10757     005A                     _eusart1RxHead:
 10758     005A                     	ds	1
 10759     005B                     _eusart1TxBufferRemaining:
 10760     005B                     	ds	1
 10761     005C                     _eusart1TxTail:
 10762     005C                     	ds	1
 10763     005D                     _eusart1TxHead:
 10764     005D                     	ds	1
 10765     005E                     _eusart2RxLastError:
 10766     005E                     	ds	1
 10767     005F                     _eusart2RxCount:
 10768     005F                     	ds	1
 10769     0060                     _eusart2RxTail:
 10770     0060                     	ds	1
 10771     0061                     _eusart2TxBufferRemaining:
 10772     0061                     	ds	1
 10773     0062                     _eusart2TxTail:
 10774     0062                     	ds	1
 10775     0063                     _eusart2TxHead:
 10776     0063                     	ds	1
 10777     0064                     RN487X_FilterData@asyncBuffering:
 10778     0064                     	ds	1
 10779     0065                     _dataReady:
 10780     0065                     	ds	1
 10781     0066                     _peek:
 10782     0066                     	ds	1
 10783     0067                     _asyncBufferSize:
 10784     0067                     	ds	1
 10785     0068                     _connected:
 10786     0068                     	ds	1
 10787     0069                     LIGHTBLUE_ParseIncomingPacket@packetID:
 10788     0069                     	ds	1
 10789     006A                     LIGHTBLUE_ParseIncomingPacket@length:
 10790     006A                     	ds	1
 10791     006B                     LIGHTBLUE_ParseIncomingPacket@parserState:
 10792     006B                     	ds	1
 10793     006C                     _sequenceNumber:
 10794     006C                     	ds	1
 10795     006D                     __deviceAddress:
 10796     006D                     	ds	1
 10797                           
 10798                           	psect	dataBANK0
 10799     006E                     __pdataBANK0:
 10800     006E                     RN487X_GetInputsValues@F12901:
 10801     006E                     	ds	2
 10802                           
 10803                           	psect	bssBANK1
 10804     00A0                     __pbssBANK1:
 10805     00A0                     _I2C1_Status:
 10806     00A0                     	ds	29
 10807     00BD                     _eusart1RxStatusBuffer:
 10808     00BD                     	ds	8
 10809     00C5                     _eusart1TxBuffer:
 10810     00C5                     	ds	8
 10811     00CD                     _eusart2RxStatusBuffer:
 10812     00CD                     	ds	8
 10813     00D5                     _eusart2RxBuffer:
 10814     00D5                     	ds	8
 10815     00DD                     _eusart2TxBuffer:
 10816     00DD                     	ds	8
 10817     00E5                     _i2c1_driver_i2cISR:
 10818     00E5                     	ds	2
 10819     00E7                     _i2c1_driver_busCollisionISR:
 10820     00E7                     	ds	2
 10821                           
 10822                           	psect	bssBANK2
 10823     0120                     __pbssBANK2:
 10824     0120                     _i2c_status:
 10825     0120                     	ds	36
 10826     0144                     _eusart1RxBuffer:
 10827     0144                     	ds	8
 10828                           
 10829                           	psect	dataBANK2
 10830     014C                     __pdataBANK2:
 10831     014C                     __hex:
 10832     014C                     	ds	17
 10833                           
 10834                           	psect	bssBANK3
 10835     01A0                     __pbssBANK3:
 10836     01A0                     _cmdBuf:
 10837     01A0                     	ds	64
 10838                           
 10839                           	psect	bssBANK4
 10840     0220                     __pbssBANK4:
 10841     0220                     _lightBlueSerial:
 10842     0220                     	ds	80
 10843                           
 10844                           	psect	bssBANK5
 10845     02A0                     __pbssBANK5:
 10846     02A0                     _statusBuffer:
 10847     02A0                     	ds	80
 10848                           
 10849                           	psect	bssBANK6
 10850     0320                     __pbssBANK6:
 10851     0320                     _statusBuffer@main$F3783:
 10852     0320                     	ds	80
 10853                           
 10854                           	psect	inittext
 10855     1F58                     init_ram:
 10856     1F58  00FE               	movwf	btemp
 10857     1F59                     initloop:
 10858     1F59  0012               	moviw fsr0++
 10859     1F5A  001E               	movwi fsr1++
 10860     1F5B  0BFE               	decfsz	btemp,f
 10861     1F5C  2F59               	goto	initloop
 10862     1F5D  3400               	retlw	0
 10863                           
 10864                           	psect	clrtext
 10865     1F52                     clear_ram0:	
 10866                           ;	Called with FSR0 containing the base address, and
 10867                           ;	WREG with the size to clear
 10868                           
 10869     1F52  0064               	clrwdt	;clear the watchdog before getting into this loop
 10870     1F53                     clrloop0:
 10871     1F53  0180               	clrf	0	;clear RAM location pointed to by FSR
 10872     1F54  3101               	addfsr 0,1
 10873     1F55  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
 10874     1F56  2F53               	goto	clrloop0	;have we reached the end yet?
 10875     1F57  3400               	retlw	0	;all done for this memory range, return
 10876                           
 10877                           	psect	cstackBANK1
 10878     00EF                     __pcstackBANK1:
 10879     00EF                     _main$5438:
 10880                           
 10881                           ; 1 bytes @ 0x0
 10882     00EF                     	ds	1
 10883                           
 10884                           	psect	cstackCOMMON
 10885     0070                     __pcstackCOMMON:
 10886     0070                     ?_BMA253_NewAccelDataRdyY:
 10887     0070                     ?_BMA253_NewAccelDataRdyZ:	
 10888                           ; 1 bytes @ 0x0
 10889                           
 10890     0070                     ?_readRegister:	
 10891                           ; 1 bytes @ 0x0
 10892                           
 10893     0070                     ?_LIGHTBLUE_GetButtonValue:	
 10894                           ; 1 bytes @ 0x0
 10895                           
 10896     0070                     ?_LIGHTBLUE_GetDataLedValue:	
 10897                           ; 1 bytes @ 0x0
 10898                           
 10899     0070                     ?_LIGHTBLUE_GetErrorLedValue:	
 10900                           ; 1 bytes @ 0x0
 10901                           
 10902     0070                     ?_LIGHTBLUE_UpdateErrorLed:	
 10903                           ; 1 bytes @ 0x0
 10904                           
 10905     0070                     ?_RN487X_EnterCmdMode:	
 10906                           ; 1 bytes @ 0x0
 10907                           
 10908     0070                     ?_RN487X_EnterDataMode:	
 10909                           ; 1 bytes @ 0x0
 10910                           
 10911     0070                     ?_EUSART1_Read:	
 10912                           ; 1 bytes @ 0x0
 10913                           
 10914     0070                     ?_EUSART1_is_rx_ready:	
 10915                           ; 1 bytes @ 0x0
 10916                           
 10917     0070                     ?_EUSART1_Receive_ISR:	
 10918                           ; 1 bytes @ 0x0
 10919                           
 10920     0070                     ?_EUSART1_is_tx_done:	
 10921                           ; 1 bytes @ 0x0
 10922                           
 10923     0070                     ?_EUSART1_Transmit_ISR:	
 10924                           ; 1 bytes @ 0x0
 10925                           
 10926     0070                     ??_EUSART1_Transmit_ISR:	
 10927                           ; 1 bytes @ 0x0
 10928                           
 10929     0070                     ?_EUSART1_Initialize:	
 10930                           ; 1 bytes @ 0x0
 10931                           
 10932     0070                     ?_EUSART2_Read:	
 10933                           ; 1 bytes @ 0x0
 10934                           
 10935     0070                     ?_EUSART2_is_rx_ready:	
 10936                           ; 1 bytes @ 0x0
 10937                           
 10938     0070                     ?_EUSART2_Receive_ISR:	
 10939                           ; 1 bytes @ 0x0
 10940                           
 10941     0070                     ?_EUSART2_is_tx_done:	
 10942                           ; 1 bytes @ 0x0
 10943                           
 10944     0070                     ?_EUSART2_Transmit_ISR:	
 10945                           ; 1 bytes @ 0x0
 10946                           
 10947     0070                     ??_EUSART2_Transmit_ISR:	
 10948                           ; 1 bytes @ 0x0
 10949                           
 10950     0070                     ?_EUSART2_Initialize:	
 10951                           ; 1 bytes @ 0x0
 10952                           
 10953     0070                     ?_I2C1_Open:	
 10954                           ; 1 bytes @ 0x0
 10955                           
 10956     0070                     ?_I2C1_MasterWrite:	
 10957                           ; 1 bytes @ 0x0
 10958                           
 10959     0070                     ?_I2C1_Close:	
 10960                           ; 1 bytes @ 0x0
 10961                           
 10962     0070                     ?_I2C1_MasterRead:	
 10963                           ; 1 bytes @ 0x0
 10964                           
 10965     0070                     ?_RN487X_IsConnected:	
 10966                           ; 1 bytes @ 0x0
 10967                           
 10968     0070                     ?_RN487X_Read:	
 10969                           ; 1 bytes @ 0x0
 10970                           
 10971     0070                     ?_RN487X_DataReady:	
 10972                           ; 1 bytes @ 0x0
 10973                           
 10974     0070                     ?_RN487X_Read@rn487x_interface$F1382:	
 10975                           ; 1 bytes @ 0x0
 10976                           
 10977     0070                     ?_RN487X_is_tx_done:	
 10978                           ; 1 bytes @ 0x0
 10979                           
 10980     0070                     ?_RN487X_is_rx_ready:	
 10981                           ; 1 bytes @ 0x0
 10982                           
 10983     0070                     ?_RN487X_FilterData:	
 10984                           ; 1 bytes @ 0x0
 10985                           
 10986     0070                     ?_EUSART2_DefaultFramingErrorHandler:	
 10987                           ; 1 bytes @ 0x0
 10988                           
 10989     0070                     ??_EUSART2_DefaultFramingErrorHandler:	
 10990                           ; 1 bytes @ 0x0
 10991                           
 10992     0070                     ?_EUSART2_DefaultOverrunErrorHandler:	
 10993                           ; 1 bytes @ 0x0
 10994                           
 10995     0070                     ??_EUSART2_DefaultOverrunErrorHandler:	
 10996                           ; 1 bytes @ 0x0
 10997                           
 10998     0070                     ?_EUSART2_DefaultErrorHandler:	
 10999                           ; 1 bytes @ 0x0
 11000                           
 11001     0070                     ?_EUSART2_RxDataHandler:	
 11002                           ; 1 bytes @ 0x0
 11003                           
 11004     0070                     ??_EUSART2_RxDataHandler:	
 11005                           ; 1 bytes @ 0x0
 11006                           
 11007     0070                     ?_EUSART1_DefaultFramingErrorHandler:	
 11008                           ; 1 bytes @ 0x0
 11009                           
 11010     0070                     ??_EUSART1_DefaultFramingErrorHandler:	
 11011                           ; 1 bytes @ 0x0
 11012                           
 11013     0070                     ?_EUSART1_DefaultOverrunErrorHandler:	
 11014                           ; 1 bytes @ 0x0
 11015                           
 11016     0070                     ??_EUSART1_DefaultOverrunErrorHandler:	
 11017                           ; 1 bytes @ 0x0
 11018                           
 11019     0070                     ?_EUSART1_DefaultErrorHandler:	
 11020                           ; 1 bytes @ 0x0
 11021                           
 11022     0070                     ?_EUSART1_RxDataHandler:	
 11023                           ; 1 bytes @ 0x0
 11024                           
 11025     0070                     ??_EUSART1_RxDataHandler:	
 11026                           ; 1 bytes @ 0x0
 11027                           
 11028     0070                     ?_PIN_MANAGER_IOC:	
 11029                           ; 1 bytes @ 0x0
 11030                           
 11031     0070                     ??_PIN_MANAGER_IOC:	
 11032                           ; 1 bytes @ 0x0
 11033                           
 11034     0070                     ?_PMD_Initialize:	
 11035                           ; 1 bytes @ 0x0
 11036                           
 11037     0070                     ?_I2C1_Initialize:	
 11038                           ; 1 bytes @ 0x0
 11039                           
 11040     0070                     ?_PIN_MANAGER_Initialize:	
 11041                           ; 1 bytes @ 0x0
 11042                           
 11043     0070                     ?_OSCILLATOR_Initialize:	
 11044                           ; 1 bytes @ 0x0
 11045                           
 11046     0070                     ?_TMR0_Initialize:	
 11047                           ; 1 bytes @ 0x0
 11048                           
 11049     0070                     ?_IOCAF6_DefaultInterruptHandler:	
 11050                           ; 1 bytes @ 0x0
 11051                           
 11052     0070                     ??_IOCAF6_DefaultInterruptHandler:	
 11053                           ; 1 bytes @ 0x0
 11054                           
 11055     0070                     ?_IOCAF6_ISR:	
 11056                           ; 1 bytes @ 0x0
 11057                           
 11058     0070                     ??_IOCAF6_ISR:	
 11059                           ; 1 bytes @ 0x0
 11060                           
 11061     0070                     ?_I2C1_DO_IDLE:	
 11062                           ; 1 bytes @ 0x0
 11063                           
 11064     0070                     ?_I2C1_DO_SEND_ADR_READ:	
 11065                           ; 1 bytes @ 0x0
 11066                           
 11067     0070                     ?_I2C1_DO_SEND_ADR_WRITE:	
 11068                           ; 1 bytes @ 0x0
 11069                           
 11070     0070                     ?_I2C1_DO_TX:	
 11071                           ; 1 bytes @ 0x0
 11072                           
 11073     0070                     ?_I2C1_DO_RX:	
 11074                           ; 1 bytes @ 0x0
 11075                           
 11076     0070                     ?_I2C1_DO_RCEN:	
 11077                           ; 1 bytes @ 0x0
 11078                           
 11079     0070                     ?_I2C1_DO_TX_EMPTY:	
 11080                           ; 1 bytes @ 0x0
 11081                           
 11082     0070                     ?_I2C1_DO_SEND_RESTART_READ:	
 11083                           ; 1 bytes @ 0x0
 11084                           
 11085     0070                     ?_I2C1_DO_SEND_RESTART_WRITE:	
 11086                           ; 1 bytes @ 0x0
 11087                           
 11088     0070                     ?_I2C1_DO_SEND_RESTART:	
 11089                           ; 1 bytes @ 0x0
 11090                           
 11091     0070                     ?_I2C1_DO_SEND_STOP:	
 11092                           ; 1 bytes @ 0x0
 11093                           
 11094     0070                     ?_I2C1_DO_RX_ACK:	
 11095                           ; 1 bytes @ 0x0
 11096                           
 11097     0070                     ?_I2C1_DO_RX_NACK_STOP:	
 11098                           ; 1 bytes @ 0x0
 11099                           
 11100     0070                     ?_I2C1_DO_RX_NACK_RESTART:	
 11101                           ; 1 bytes @ 0x0
 11102                           
 11103     0070                     ?_I2C1_DO_RESET:	
 11104                           ; 1 bytes @ 0x0
 11105                           
 11106     0070                     ?_I2C1_DO_ADDRESS_NACK:	
 11107                           ; 1 bytes @ 0x0
 11108                           
 11109     0070                     ?_I2C1_MasterClearIrq:	
 11110                           ; 1 bytes @ 0x0
 11111                           
 11112     0070                     ?_I2C1_MasterOpen:	
 11113                           ; 1 bytes @ 0x0
 11114                           
 11115     0070                     ?_I2C1_MasterDisableIrq:	
 11116                           ; 1 bytes @ 0x0
 11117                           
 11118     0070                     ?_I2C1_MasterClose:	
 11119                           ; 1 bytes @ 0x0
 11120                           
 11121     0070                     ?_I2C1_MasterStart:	
 11122                           ; 1 bytes @ 0x0
 11123                           
 11124     0070                     ?_I2C1_Poller:	
 11125                           ; 1 bytes @ 0x0
 11126                           
 11127     0070                     ?_I2C1_MasterWaitForEvent:	
 11128                           ; 1 bytes @ 0x0
 11129                           
 11130     0070                     ?_I2C1_MasterFsm:	
 11131                           ; 1 bytes @ 0x0
 11132                           
 11133     0070                     ?_I2C1_MasterIsNack:	
 11134                           ; 1 bytes @ 0x0
 11135                           
 11136     0070                     ?_I2C1_MasterSendTxData:	
 11137                           ; 1 bytes @ 0x0
 11138                           
 11139     0070                     ?_I2C1_MasterGetRxData:	
 11140                           ; 1 bytes @ 0x0
 11141                           
 11142     0070                     ?_I2C1_MasterSendAck:	
 11143                           ; 1 bytes @ 0x0
 11144                           
 11145     0070                     ?_I2C1_MasterStartRx:	
 11146                           ; 1 bytes @ 0x0
 11147                           
 11148     0070                     ?_I2C1_MasterSetIrq:	
 11149                           ; 1 bytes @ 0x0
 11150                           
 11151     0070                     ?_I2C1_MasterEnableRestart:	
 11152                           ; 1 bytes @ 0x0
 11153                           
 11154     0070                     ?_I2C1_MasterStop:	
 11155                           ; 1 bytes @ 0x0
 11156                           
 11157     0070                     ?_I2C1_MasterSendNack:	
 11158                           ; 1 bytes @ 0x0
 11159                           
 11160     0070                     ?_begin:	
 11161                           ; 1 bytes @ 0x0
 11162                           
 11163     0070                     ?_isConnected:	
 11164                           ; 1 bytes @ 0x0
 11165                           
 11166     0070                     ?_setMagneticChannel:	
 11167                           ; 1 bytes @ 0x0
 11168                           
 11169     0070                     ?_setTemperatureEn:	
 11170                           ; 1 bytes @ 0x0
 11171                           
 11172     0070                     ?_setOperatingMode:	
 11173                           ; 1 bytes @ 0x0
 11174                           
 11175     0070                     ?_setXYAxisRange:	
 11176                           ; 1 bytes @ 0x0
 11177                           
 11178     0070                     ?_setZAxisRange:	
 11179                           ; 1 bytes @ 0x0
 11180                           
 11181     0070                     ?_getError:	
 11182                           ; 1 bytes @ 0x0
 11183                           
 11184     0070                     ?_getLowPower:	
 11185                           ; 1 bytes @ 0x0
 11186                           
 11187     0070                     ?_getOperatingMode:	
 11188                           ; 1 bytes @ 0x0
 11189                           
 11190     0070                     ?_getMagneticChannel:	
 11191                           ; 1 bytes @ 0x0
 11192                           
 11193     0070                     ?_getTemperatureEN:	
 11194                           ; 1 bytes @ 0x0
 11195                           
 11196     0070                     ?_getAngleEn:	
 11197                           ; 1 bytes @ 0x0
 11198                           
 11199     0070                     ?_BMA253_GetAccelDataY:	
 11200                           ; 1 bytes @ 0x0
 11201                           
 11202     0070                     ?_BMA253_GetAccelDataZ:	
 11203                           ; 1 bytes @ 0x0
 11204                           
 11205     0070                     ?_BMA253_GetAccelDataXYZ:	
 11206                           ; 1 bytes @ 0x0
 11207                           
 11208     0070                     ?_LIGHTBLUE_Initialize:	
 11209                           ; 1 bytes @ 0x0
 11210                           
 11211     0070                     ?_LIGHTBLUE_TemperatureSensor:	
 11212                           ; 1 bytes @ 0x0
 11213                           
 11214     0070                     ?_LIGHTBLUE_AccelSensor:	
 11215                           ; 1 bytes @ 0x0
 11216                           
 11217     0070                     ?_LIGHTBLUE_PushButton:	
 11218                           ; 1 bytes @ 0x0
 11219                           
 11220     0070                     ?_LIGHTBLUE_LedState:	
 11221                           ; 1 bytes @ 0x0
 11222                           
 11223     0070                     ?_LIGHTBLUE_SendProtocolVersion:	
 11224                           ; 1 bytes @ 0x0
 11225                           
 11226     0070                     ?_LIGHTBLUE_SendSerialData:	
 11227                           ; 1 bytes @ 0x0
 11228                           
 11229     0070                     ?_LIGHTBLUE_ParseIncomingPacket:	
 11230                           ; 1 bytes @ 0x0
 11231                           
 11232     0070                     ?_LIGHTBLUE_SetErrorLedValue:	
 11233                           ; 1 bytes @ 0x0
 11234                           
 11235     0070                     ?_rn487x_PrintMessageStart:	
 11236                           ; 1 bytes @ 0x0
 11237                           
 11238     0070                     ?_rn487x_PrintMessageEnd:	
 11239                           ; 1 bytes @ 0x0
 11240                           
 11241     0070                     ?_rn487x_PrintIndicatorCharacters:	
 11242                           ; 1 bytes @ 0x0
 11243                           
 11244     0070                     ?_RN487X_Init:	
 11245                           ; 1 bytes @ 0x0
 11246                           
 11247     0070                     ?_RN487X_ReadDefaultResponse:	
 11248                           ; 1 bytes @ 0x0
 11249                           
 11250     0070                     ?_INTERRUPT_InterruptManager:	
 11251                           ; 1 bytes @ 0x0
 11252                           
 11253     0070                     ?_SYSTEM_Initialize:	
 11254                           ; 1 bytes @ 0x0
 11255                           
 11256     0070                     ?_TMR0_HasOverflowOccured:	
 11257                           ; 1 bytes @ 0x0
 11258                           
 11259     0070                     ?_I2C1_MasterOperation:	
 11260                           ; 1 bytes @ 0x0
 11261                           
 11262     0070                     ?_getDeviceStatus:	
 11263                           ; 1 bytes @ 0x0
 11264                           
 11265     0070                     ?_main:	
 11266                           ; 1 bytes @ 0x0
 11267                           
 11268                           
 11269                           ; 2 bytes @ 0x0
 11270     0070                     	ds	1
 11271     0071                     ??_LIGHTBLUE_GetButtonValue:
 11272     0071                     ??_LIGHTBLUE_GetDataLedValue:	
 11273                           ; 1 bytes @ 0x1
 11274                           
 11275     0071                     ??_LIGHTBLUE_GetErrorLedValue:	
 11276                           ; 1 bytes @ 0x1
 11277                           
 11278     0071                     ??_EUSART1_Read:	
 11279                           ; 1 bytes @ 0x1
 11280                           
 11281     0071                     ?_EUSART1_Write:	
 11282                           ; 1 bytes @ 0x1
 11283                           
 11284     0071                     ??_EUSART1_is_rx_ready:	
 11285                           ; 1 bytes @ 0x1
 11286                           
 11287     0071                     ?_EUSART1_SetTxInterruptHandler:	
 11288                           ; 1 bytes @ 0x1
 11289                           
 11290     0071                     ??_EUSART1_Receive_ISR:	
 11291                           ; 1 bytes @ 0x1
 11292                           
 11293     0071                     ?_EUSART1_SetRxInterruptHandler:	
 11294                           ; 1 bytes @ 0x1
 11295                           
 11296     0071                     ??_EUSART1_is_tx_done:	
 11297                           ; 1 bytes @ 0x1
 11298                           
 11299     0071                     ??_EUSART2_Read:	
 11300                           ; 1 bytes @ 0x1
 11301                           
 11302     0071                     ?_EUSART2_Write:	
 11303                           ; 1 bytes @ 0x1
 11304                           
 11305     0071                     ??_EUSART2_is_rx_ready:	
 11306                           ; 1 bytes @ 0x1
 11307                           
 11308     0071                     ?_EUSART2_SetTxInterruptHandler:	
 11309                           ; 1 bytes @ 0x1
 11310                           
 11311     0071                     ??_EUSART2_Receive_ISR:	
 11312                           ; 1 bytes @ 0x1
 11313                           
 11314     0071                     ?_EUSART2_SetRxInterruptHandler:	
 11315                           ; 1 bytes @ 0x1
 11316                           
 11317     0071                     ??_EUSART2_is_tx_done:	
 11318                           ; 1 bytes @ 0x1
 11319                           
 11320     0071                     ?_I2C1_SetBuffer:	
 11321                           ; 1 bytes @ 0x1
 11322                           
 11323     0071                     ??_I2C1_Open:	
 11324                           ; 1 bytes @ 0x1
 11325                           
 11326     0071                     ??_I2C1_Close:	
 11327                           ; 1 bytes @ 0x1
 11328                           
 11329     0071                     ?_RN487X_SetAsyncMessageHandler:	
 11330                           ; 1 bytes @ 0x1
 11331                           
 11332     0071                     ??_RN487X_IsConnected:	
 11333                           ; 1 bytes @ 0x1
 11334                           
 11335     0071                     ??_RN487X_is_tx_done:	
 11336                           ; 1 bytes @ 0x1
 11337                           
 11338     0071                     ??_RN487X_is_rx_ready:	
 11339                           ; 1 bytes @ 0x1
 11340                           
 11341     0071                     ?_RN487X_IndicateRx:	
 11342                           ; 1 bytes @ 0x1
 11343                           
 11344     0071                     ?_RN487X_Reset:	
 11345                           ; 1 bytes @ 0x1
 11346                           
 11347     0071                     ?_RN487X_SetSystemMode:	
 11348                           ; 1 bytes @ 0x1
 11349                           
 11350     0071                     ?_DELAY_milliseconds:	
 11351                           ; 1 bytes @ 0x1
 11352                           
 11353     0071                     ?_strcpy:	
 11354                           ; 1 bytes @ 0x1
 11355                           
 11356     0071                     ?_EUSART2_SetFramingErrorHandler:	
 11357                           ; 1 bytes @ 0x1
 11358                           
 11359     0071                     ?_EUSART2_SetOverrunErrorHandler:	
 11360                           ; 1 bytes @ 0x1
 11361                           
 11362     0071                     ?_EUSART2_SetErrorHandler:	
 11363                           ; 1 bytes @ 0x1
 11364                           
 11365     0071                     ??_EUSART2_DefaultErrorHandler:	
 11366                           ; 1 bytes @ 0x1
 11367                           
 11368     0071                     ?_EUSART1_SetFramingErrorHandler:	
 11369                           ; 1 bytes @ 0x1
 11370                           
 11371     0071                     ?_EUSART1_SetOverrunErrorHandler:	
 11372                           ; 1 bytes @ 0x1
 11373                           
 11374     0071                     ?_EUSART1_SetErrorHandler:	
 11375                           ; 1 bytes @ 0x1
 11376                           
 11377     0071                     ??_EUSART1_DefaultErrorHandler:	
 11378                           ; 1 bytes @ 0x1
 11379                           
 11380     0071                     ??_PMD_Initialize:	
 11381                           ; 1 bytes @ 0x1
 11382                           
 11383     0071                     ??_I2C1_Initialize:	
 11384                           ; 1 bytes @ 0x1
 11385                           
 11386     0071                     ??_OSCILLATOR_Initialize:	
 11387                           ; 1 bytes @ 0x1
 11388                           
 11389     0071                     ??_TMR0_Initialize:	
 11390                           ; 1 bytes @ 0x1
 11391                           
 11392     0071                     ?_IOCAF6_SetInterruptHandler:	
 11393                           ; 1 bytes @ 0x1
 11394                           
 11395     0071                     ??_I2C1_DO_IDLE:	
 11396                           ; 1 bytes @ 0x1
 11397                           
 11398     0071                     ??_I2C1_DO_SEND_ADR_READ:	
 11399                           ; 1 bytes @ 0x1
 11400                           
 11401     0071                     ??_I2C1_DO_RCEN:	
 11402                           ; 1 bytes @ 0x1
 11403                           
 11404     0071                     ??_I2C1_DO_SEND_RESTART_READ:	
 11405                           ; 1 bytes @ 0x1
 11406                           
 11407     0071                     ??_I2C1_DO_SEND_RESTART_WRITE:	
 11408                           ; 1 bytes @ 0x1
 11409                           
 11410     0071                     ??_I2C1_DO_SEND_RESTART:	
 11411                           ; 1 bytes @ 0x1
 11412                           
 11413     0071                     ??_I2C1_DO_SEND_STOP:	
 11414                           ; 1 bytes @ 0x1
 11415                           
 11416     0071                     ??_I2C1_DO_RX_ACK:	
 11417                           ; 1 bytes @ 0x1
 11418                           
 11419     0071                     ??_I2C1_DO_RX_NACK_STOP:	
 11420                           ; 1 bytes @ 0x1
 11421                           
 11422     0071                     ??_I2C1_DO_RX_NACK_RESTART:	
 11423                           ; 1 bytes @ 0x1
 11424                           
 11425     0071                     ??_I2C1_DO_RESET:	
 11426                           ; 1 bytes @ 0x1
 11427                           
 11428     0071                     ??_I2C1_MasterClearIrq:	
 11429                           ; 1 bytes @ 0x1
 11430                           
 11431     0071                     ??_I2C1_MasterOpen:	
 11432                           ; 1 bytes @ 0x1
 11433                           
 11434     0071                     ??_I2C1_MasterDisableIrq:	
 11435                           ; 1 bytes @ 0x1
 11436                           
 11437     0071                     ??_I2C1_MasterClose:	
 11438                           ; 1 bytes @ 0x1
 11439                           
 11440     0071                     ??_I2C1_MasterStart:	
 11441                           ; 1 bytes @ 0x1
 11442                           
 11443     0071                     ?_I2C1_SetCallback:	
 11444                           ; 1 bytes @ 0x1
 11445                           
 11446     0071                     ??_I2C1_MasterWaitForEvent:	
 11447                           ; 1 bytes @ 0x1
 11448                           
 11449     0071                     ??_I2C1_MasterIsNack:	
 11450                           ; 1 bytes @ 0x1
 11451                           
 11452     0071                     ??_I2C1_MasterSendTxData:	
 11453                           ; 1 bytes @ 0x1
 11454                           
 11455     0071                     ??_I2C1_MasterGetRxData:	
 11456                           ; 1 bytes @ 0x1
 11457                           
 11458     0071                     ??_I2C1_MasterSendAck:	
 11459                           ; 1 bytes @ 0x1
 11460                           
 11461     0071                     ??_I2C1_MasterStartRx:	
 11462                           ; 1 bytes @ 0x1
 11463                           
 11464     0071                     ??_I2C1_MasterSetIrq:	
 11465                           ; 1 bytes @ 0x1
 11466                           
 11467     0071                     ??_I2C1_MasterEnableRestart:	
 11468                           ; 1 bytes @ 0x1
 11469                           
 11470     0071                     ??_I2C1_MasterStop:	
 11471                           ; 1 bytes @ 0x1
 11472                           
 11473     0071                     ??_I2C1_MasterSendNack:	
 11474                           ; 1 bytes @ 0x1
 11475                           
 11476     0071                     ?_bitWrite:	
 11477                           ; 1 bytes @ 0x1
 11478                           
 11479     0071                     ?_bitRead:	
 11480                           ; 1 bytes @ 0x1
 11481                           
 11482     0071                     ??_LIGHTBLUE_Initialize:	
 11483                           ; 1 bytes @ 0x1
 11484                           
 11485     0071                     ??_INTERRUPT_InterruptManager:	
 11486                           ; 1 bytes @ 0x1
 11487                           
 11488     0071                     ??_TMR0_HasOverflowOccured:	
 11489                           ; 1 bytes @ 0x1
 11490                           
 11491     0071                     ?_strlen:	
 11492                           ; 1 bytes @ 0x1
 11493                           
 11494     0071                     ?_swap:	
 11495                           ; 2 bytes @ 0x1
 11496                           
 11497     0071                     ?_strncmp:	
 11498                           ; 2 bytes @ 0x1
 11499                           
 11500     0071                     ?_strchr:	
 11501                           ; 2 bytes @ 0x1
 11502                           
 11503     0071                     RN487X_Reset@value:	
 11504                           ; 2 bytes @ 0x1
 11505                           
 11506     0071                     RN487X_IndicateRx@value:	
 11507                           ; 1 bytes @ 0x1
 11508                           
 11509     0071                     RN487X_SetSystemMode@mode:	
 11510                           ; 1 bytes @ 0x1
 11511                           
 11512     0071                     EUSART2_Write@txData:	
 11513                           ; 1 bytes @ 0x1
 11514                           
 11515     0071                     EUSART1_Write@txData:	
 11516                           ; 1 bytes @ 0x1
 11517                           
 11518     0071                     I2C1_Open@address:	
 11519                           ; 1 bytes @ 0x1
 11520                           
 11521     0071                     I2C1_Close@returnValue:	
 11522                           ; 1 bytes @ 0x1
 11523                           
 11524     0071                     I2C1_MasterSendTxData@data:	
 11525                           ; 1 bytes @ 0x1
 11526                           
 11527     0071                     RN487X_SetAsyncMessageHandler@pBuffer:	
 11528                           ; 1 bytes @ 0x1
 11529                           
 11530     0071                     EUSART2_SetFramingErrorHandler@interruptHandler:	
 11531                           ; 2 bytes @ 0x1
 11532                           
 11533     0071                     EUSART2_SetOverrunErrorHandler@interruptHandler:	
 11534                           ; 2 bytes @ 0x1
 11535                           
 11536     0071                     EUSART2_SetErrorHandler@interruptHandler:	
 11537                           ; 2 bytes @ 0x1
 11538                           
 11539     0071                     EUSART2_SetTxInterruptHandler@interruptHandler:	
 11540                           ; 2 bytes @ 0x1
 11541                           
 11542     0071                     EUSART2_SetRxInterruptHandler@interruptHandler:	
 11543                           ; 2 bytes @ 0x1
 11544                           
 11545     0071                     EUSART1_SetFramingErrorHandler@interruptHandler:	
 11546                           ; 2 bytes @ 0x1
 11547                           
 11548     0071                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
 11549                           ; 2 bytes @ 0x1
 11550                           
 11551     0071                     EUSART1_SetErrorHandler@interruptHandler:	
 11552                           ; 2 bytes @ 0x1
 11553                           
 11554     0071                     EUSART1_SetTxInterruptHandler@interruptHandler:	
 11555                           ; 2 bytes @ 0x1
 11556                           
 11557     0071                     EUSART1_SetRxInterruptHandler@interruptHandler:	
 11558                           ; 2 bytes @ 0x1
 11559                           
 11560     0071                     IOCAF6_SetInterruptHandler@InterruptHandler:	
 11561                           ; 2 bytes @ 0x1
 11562                           
 11563     0071                     I2C1_SetBuffer@bufferSize:	
 11564                           ; 2 bytes @ 0x1
 11565                           
 11566     0071                     I2C1_SetCallback@cb:	
 11567                           ; 2 bytes @ 0x1
 11568                           
 11569     0071                     DELAY_milliseconds@milliseconds:	
 11570                           ; 2 bytes @ 0x1
 11571                           
 11572     0071                     bitRead@reg:	
 11573                           ; 2 bytes @ 0x1
 11574                           
 11575     0071                     bitWrite@reg:	
 11576                           ; 2 bytes @ 0x1
 11577                           
 11578     0071                     swap@reg:	
 11579                           ; 2 bytes @ 0x1
 11580                           
 11581     0071                     strcpy@src:	
 11582                           ; 2 bytes @ 0x1
 11583                           
 11584     0071                     strlen@s:	
 11585                           ; 2 bytes @ 0x1
 11586                           
 11587     0071                     strchr@s:	
 11588                           ; 2 bytes @ 0x1
 11589                           
 11590     0071                     strncmp@l:	
 11591                           ; 2 bytes @ 0x1
 11592                           
 11593                           
 11594                           ; 2 bytes @ 0x1
 11595     0071                     	ds	1
 11596     0072                     ??_EUSART1_Write:
 11597     0072                     ??_EUSART2_Write:	
 11598                           ; 1 bytes @ 0x2
 11599                           
 11600     0072                     ??_RN487X_IndicateRx:	
 11601                           ; 1 bytes @ 0x2
 11602                           
 11603     0072                     ??_RN487X_Reset:	
 11604                           ; 1 bytes @ 0x2
 11605                           
 11606     0072                     ??_RN487X_SetSystemMode:	
 11607                           ; 1 bytes @ 0x2
 11608                           
 11609     0072                     ??_I2C1_DO_SEND_ADR_WRITE:	
 11610                           ; 1 bytes @ 0x2
 11611                           
 11612     0072                     EUSART2_Read@readValue:	
 11613                           ; 1 bytes @ 0x2
 11614                           
 11615     0072                     EUSART1_Read@readValue:	
 11616                           ; 1 bytes @ 0x2
 11617                           
 11618     0072                     I2C1_Open@returnValue:	
 11619                           ; 1 bytes @ 0x2
 11620                           
 11621                           
 11622                           ; 1 bytes @ 0x2
 11623     0072                     	ds	1
 11624     0073                     ??_strlen:
 11625     0073                     ??_EUSART1_SetTxInterruptHandler:	
 11626                           ; 1 bytes @ 0x3
 11627                           
 11628     0073                     ??_EUSART1_SetRxInterruptHandler:	
 11629                           ; 1 bytes @ 0x3
 11630                           
 11631     0073                     ??_EUSART1_Initialize:	
 11632                           ; 1 bytes @ 0x3
 11633                           
 11634     0073                     ??_EUSART2_SetTxInterruptHandler:	
 11635                           ; 1 bytes @ 0x3
 11636                           
 11637     0073                     ??_EUSART2_SetRxInterruptHandler:	
 11638                           ; 1 bytes @ 0x3
 11639                           
 11640     0073                     ??_EUSART2_Initialize:	
 11641                           ; 1 bytes @ 0x3
 11642                           
 11643     0073                     ??_I2C1_SetBuffer:	
 11644                           ; 1 bytes @ 0x3
 11645                           
 11646     0073                     ??_RN487X_Read@rn487x_interface$F1384:	
 11647                           ; 1 bytes @ 0x3
 11648                           
 11649     0073                     ??_DELAY_milliseconds:	
 11650                           ; 1 bytes @ 0x3
 11651                           
 11652     0073                     ??_strcpy:	
 11653                           ; 1 bytes @ 0x3
 11654                           
 11655     0073                     ??_EUSART2_SetFramingErrorHandler:	
 11656                           ; 1 bytes @ 0x3
 11657                           
 11658     0073                     ??_EUSART2_SetOverrunErrorHandler:	
 11659                           ; 1 bytes @ 0x3
 11660                           
 11661     0073                     ??_EUSART2_SetErrorHandler:	
 11662                           ; 1 bytes @ 0x3
 11663                           
 11664     0073                     ??_EUSART1_SetFramingErrorHandler:	
 11665                           ; 1 bytes @ 0x3
 11666                           
 11667     0073                     ??_EUSART1_SetOverrunErrorHandler:	
 11668                           ; 1 bytes @ 0x3
 11669                           
 11670     0073                     ??_EUSART1_SetErrorHandler:	
 11671                           ; 1 bytes @ 0x3
 11672                           
 11673     0073                     ??_PIN_MANAGER_Initialize:	
 11674                           ; 1 bytes @ 0x3
 11675                           
 11676     0073                     ??_IOCAF6_SetInterruptHandler:	
 11677                           ; 1 bytes @ 0x3
 11678                           
 11679     0073                     ??_swap:	
 11680                           ; 1 bytes @ 0x3
 11681                           
 11682     0073                     ??_rn487x_PrintMessageStart:	
 11683                           ; 1 bytes @ 0x3
 11684                           
 11685     0073                     ??_rn487x_PrintMessageEnd:	
 11686                           ; 1 bytes @ 0x3
 11687                           
 11688     0073                     ??_rn487x_PrintIndicatorCharacters:	
 11689                           ; 1 bytes @ 0x3
 11690                           
 11691     0073                     ?_RN487X_ReadMsg:	
 11692                           ; 1 bytes @ 0x3
 11693                           
 11694     0073                     ??_RN487X_ReadDefaultResponse:	
 11695                           ; 1 bytes @ 0x3
 11696                           
 11697     0073                     ??_SYSTEM_Initialize:	
 11698                           ; 1 bytes @ 0x3
 11699                           
 11700     0073                     rn487x_PrintIndicatorCharacters@messageType:	
 11701                           ; 1 bytes @ 0x3
 11702                           
 11703     0073                     RN487X_SetAsyncMessageHandler@len:	
 11704                           ; 1 bytes @ 0x3
 11705                           
 11706     0073                     I2C1_SetBuffer@buffer:	
 11707                           ; 1 bytes @ 0x3
 11708                           
 11709     0073                     I2C1_SetCallback@ptr:	
 11710                           ; 1 bytes @ 0x3
 11711                           
 11712     0073                     bitRead@position:	
 11713                           ; 1 bytes @ 0x3
 11714                           
 11715     0073                     bitWrite@position:	
 11716                           ; 1 bytes @ 0x3
 11717                           
 11718     0073                     RN487X_ReadMsg@expectedMsg:	
 11719                           ; 1 bytes @ 0x3
 11720                           
 11721     0073                     strchr@c:	
 11722                           ; 2 bytes @ 0x3
 11723                           
 11724     0073                     strncmp@r:	
 11725                           ; 2 bytes @ 0x3
 11726                           
 11727     0073                     RN487X_ReadDefaultResponse@resp:	
 11728                           ; 2 bytes @ 0x3
 11729                           
 11730                           
 11731                           ; 3 bytes @ 0x3
 11732     0073                     	ds	1
 11733     0074                     ??_RN487X_SetAsyncMessageHandler:
 11734     0074                     ?_RN487X_Delay:	
 11735                           ; 1 bytes @ 0x4
 11736                           
 11737     0074                     ??_I2C1_SetCallback:	
 11738                           ; 1 bytes @ 0x4
 11739                           
 11740     0074                     ??_bitRead:	
 11741                           ; 1 bytes @ 0x4
 11742                           
 11743     0074                     I2C1_SetCallback@idx:	
 11744                           ; 1 bytes @ 0x4
 11745                           
 11746     0074                     bitWrite@value:	
 11747                           ; 1 bytes @ 0x4
 11748                           
 11749     0074                     RN487X_Delay@delayCount:	
 11750                           ; 1 bytes @ 0x4
 11751                           
 11752     0074                     strlen@a:	
 11753                           ; 2 bytes @ 0x4
 11754                           
 11755                           
 11756                           ; 2 bytes @ 0x4
 11757     0074                     	ds	1
 11758     0075                     ?_I2C1_SetDataCompleteCallback:
 11759     0075                     ?_I2C1_SetAddressNackCallback:	
 11760                           ; 1 bytes @ 0x5
 11761                           
 11762     0075                     ??_bitWrite:	
 11763                           ; 1 bytes @ 0x5
 11764                           
 11765     0075                     ??_strchr:	
 11766                           ; 1 bytes @ 0x5
 11767                           
 11768     0075                     RN487X_ReadMsg@msgLen:	
 11769                           ; 1 bytes @ 0x5
 11770                           
 11771     0075                     strcpy@d:	
 11772                           ; 1 bytes @ 0x5
 11773                           
 11774     0075                     I2C1_SetDataCompleteCallback@cb:	
 11775                           ; 1 bytes @ 0x5
 11776                           
 11777     0075                     I2C1_SetAddressNackCallback@cb:	
 11778                           ; 2 bytes @ 0x5
 11779                           
 11780     0075                     strncmp@n:	
 11781                           ; 2 bytes @ 0x5
 11782                           
 11783                           
 11784                           ; 2 bytes @ 0x5
 11785     0075                     	ds	1
 11786     0076                     ?_LIGHTBLUE_SplitByte:
 11787     0076                     ?_RN487X_Write:	
 11788                           ; 1 bytes @ 0x6
 11789                           
 11790     0076                     ??_RN487X_Delay:	
 11791                           ; 1 bytes @ 0x6
 11792                           
 11793     0076                     ??_RN487X_Init:	
 11794                           ; 1 bytes @ 0x6
 11795                           
 11796     0076                     ??_RN487X_ReadMsg:	
 11797                           ; 1 bytes @ 0x6
 11798                           
 11799     0076                     LIGHTBLUE_SplitByte@value:	
 11800                           ; 1 bytes @ 0x6
 11801                           
 11802     0076                     RN487X_Write@txData:	
 11803                           ; 1 bytes @ 0x6
 11804                           
 11805     0076                     RN487X_ReadDefaultResponse@status:	
 11806                           ; 1 bytes @ 0x6
 11807                           
 11808     0076                     strcpy@dest:	
 11809                           ; 1 bytes @ 0x6
 11810                           
 11811                           
 11812                           ; 1 bytes @ 0x6
 11813     0076                     	ds	1
 11814     0077                     ?_LIGHTBLUE_SendPacket:
 11815     0077                     ??_LIGHTBLUE_SplitByte:	
 11816                           ; 1 bytes @ 0x7
 11817                           
 11818     0077                     ??_RN487X_Write:	
 11819                           ; 1 bytes @ 0x7
 11820                           
 11821     0077                     ??_strncmp:	
 11822                           ; 1 bytes @ 0x7
 11823                           
 11824     0077                     ??_LIGHTBLUE_SendSerialData:	
 11825                           ; 1 bytes @ 0x7
 11826                           
 11827     0077                     ?_rn487x_PrintMessage:	
 11828                           ; 1 bytes @ 0x7
 11829                           
 11830     0077                     ?_RN487X_SendCmd:	
 11831                           ; 1 bytes @ 0x7
 11832                           
 11833     0077                     LIGHTBLUE_SendPacket@payload:	
 11834                           ; 1 bytes @ 0x7
 11835                           
 11836     0077                     RN487X_SendCmd@cmdLen:	
 11837                           ; 1 bytes @ 0x7
 11838                           
 11839     0077                     I2C1_SetDataCompleteCallback@ptr:	
 11840                           ; 1 bytes @ 0x7
 11841                           
 11842     0077                     rn487x_PrintMessage@passedMessage:	
 11843                           ; 1 bytes @ 0x7
 11844                           
 11845     0077                     I2C1_SetAddressNackCallback@ptr:	
 11846                           ; 2 bytes @ 0x7
 11847                           
 11848                           
 11849                           ; 2 bytes @ 0x7
 11850     0077                     	ds	1
 11851     0078                     ??_LIGHTBLUE_SendPacket:
 11852     0078                     ??_I2C1_SetDataCompleteCallback:	
 11853                           ; 1 bytes @ 0x8
 11854                           
 11855     0078                     ?_rd1RegCompleteHandler:	
 11856                           ; 1 bytes @ 0x8
 11857                           
 11858     0078                     ?_rd2RegCompleteHandler:	
 11859                           ; 1 bytes @ 0x8
 11860                           
 11861     0078                     ?_wr1RegCompleteHandler:	
 11862                           ; 1 bytes @ 0x8
 11863                           
 11864     0078                     ?_wr2RegCompleteHandler:	
 11865                           ; 1 bytes @ 0x8
 11866                           
 11867     0078                     ?_rdBlkRegCompleteHandler:	
 11868                           ; 1 bytes @ 0x8
 11869                           
 11870     0078                     ?_I2C1_CallbackReturnStop:	
 11871                           ; 1 bytes @ 0x8
 11872                           
 11873     0078                     ?_I2C1_CallbackReturnReset:	
 11874                           ; 1 bytes @ 0x8
 11875                           
 11876     0078                     ?_wr1RegCompleteHandler@strncmp$F4854:	
 11877                           ; 1 bytes @ 0x8
 11878                           
 11879     0078                     ?_rd1RegCompleteHandler@strncmp$F4860:	
 11880                           ; 1 bytes @ 0x8
 11881                           
 11882     0078                     ?_rd2RegCompleteHandler@strncmp$F4863:	
 11883                           ; 1 bytes @ 0x8
 11884                           
 11885     0078                     ?_wr2RegCompleteHandler@strncmp$F4866:	
 11886                           ; 1 bytes @ 0x8
 11887                           
 11888     0078                     ?_rdBlkRegCompleteHandler@strncmp$F4872:	
 11889                           ; 1 bytes @ 0x8
 11890                           
 11891     0078                     ??_RN487X_SendCmd:	
 11892                           ; 1 bytes @ 0x8
 11893                           
 11894     0078                     ?_strstr:	
 11895                           ; 1 bytes @ 0x8
 11896                           
 11897     0078                     LIGHTBLUE_SendSerialData@length:	
 11898                           ; 2 bytes @ 0x8
 11899                           
 11900     0078                     LIGHTBLUE_SplitByte@payload:	
 11901                           ; 1 bytes @ 0x8
 11902                           
 11903     0078                     wr1RegCompleteHandler@p:	
 11904                           ; 1 bytes @ 0x8
 11905                           
 11906     0078                     rd1RegCompleteHandler@p:	
 11907                           ; 1 bytes @ 0x8
 11908                           
 11909     0078                     rd2RegCompleteHandler@p:	
 11910                           ; 1 bytes @ 0x8
 11911                           
 11912     0078                     wr2RegCompleteHandler@p:	
 11913                           ; 1 bytes @ 0x8
 11914                           
 11915     0078                     rdBlkRegCompleteHandler@p:	
 11916                           ; 1 bytes @ 0x8
 11917                           
 11918     0078                     rd1RegCompleteHandler@i2c1_master_example$F1239@ptr:	
 11919                           ; 1 bytes @ 0x8
 11920                           
 11921     0078                     rd2RegCompleteHandler@i2c1_master_example$F1250@ptr:	
 11922                           ; 1 bytes @ 0x8
 11923                           
 11924     0078                     wr1RegCompleteHandler@i2c1_master_example$F1256@ptr:	
 11925                           ; 1 bytes @ 0x8
 11926                           
 11927     0078                     wr2RegCompleteHandler@i2c1_master_example$F1262@ptr:	
 11928                           ; 1 bytes @ 0x8
 11929                           
 11930     0078                     rdBlkRegCompleteHandler@i2c1_master_example$F1273@ptr:	
 11931                           ; 1 bytes @ 0x8
 11932                           
 11933     0078                     RN487X_ReadMsg@resp:	
 11934                           ; 1 bytes @ 0x8
 11935                           
 11936     0078                     I2C1_CallbackReturnStop@funPtr:	
 11937                           ; 1 bytes @ 0x8
 11938                           
 11939     0078                     I2C1_CallbackReturnReset@funPtr:	
 11940                           ; 1 bytes @ 0x8
 11941                           
 11942     0078                     swap@upperByte:	
 11943                           ; 1 bytes @ 0x8
 11944                           
 11945     0078                     strstr@h:	
 11946                           ; 1 bytes @ 0x8
 11947                           
 11948                           
 11949                           ; 2 bytes @ 0x8
 11950     0078                     	ds	1
 11951     0079                     ?_LIGHTBLUE_SplitWord:
 11952     0079                     ??_I2C1_SetAddressNackCallback:	
 11953                           ; 1 bytes @ 0x9
 11954                           
 11955     0079                     ??_rd1RegCompleteHandler:	
 11956                           ; 1 bytes @ 0x9
 11957                           
 11958     0079                     ??_rd2RegCompleteHandler:	
 11959                           ; 1 bytes @ 0x9
 11960                           
 11961     0079                     ??_wr1RegCompleteHandler:	
 11962                           ; 1 bytes @ 0x9
 11963                           
 11964     0079                     ??_wr2RegCompleteHandler:	
 11965                           ; 1 bytes @ 0x9
 11966                           
 11967     0079                     ??_rdBlkRegCompleteHandler:	
 11968                           ; 1 bytes @ 0x9
 11969                           
 11970     0079                     ??_I2C1_DO_TX:	
 11971                           ; 1 bytes @ 0x9
 11972                           
 11973     0079                     ??_I2C1_DO_RX:	
 11974                           ; 1 bytes @ 0x9
 11975                           
 11976     0079                     ??_I2C1_DO_TX_EMPTY:	
 11977                           ; 1 bytes @ 0x9
 11978                           
 11979     0079                     ??_I2C1_DO_ADDRESS_NACK:	
 11980                           ; 1 bytes @ 0x9
 11981                           
 11982     0079                     ??_I2C1_CallbackReturnStop:	
 11983                           ; 1 bytes @ 0x9
 11984                           
 11985     0079                     ??_I2C1_CallbackReturnReset:	
 11986                           ; 1 bytes @ 0x9
 11987                           
 11988     0079                     ??_wr1RegCompleteHandler@strncmp$F4856:	
 11989                           ; 1 bytes @ 0x9
 11990                           
 11991     0079                     ??_rd1RegCompleteHandler@strncmp$F4862:	
 11992                           ; 1 bytes @ 0x9
 11993                           
 11994     0079                     ??_rd2RegCompleteHandler@strncmp$F4865:	
 11995                           ; 1 bytes @ 0x9
 11996                           
 11997     0079                     ??_wr2RegCompleteHandler@strncmp$F4868:	
 11998                           ; 1 bytes @ 0x9
 11999                           
 12000     0079                     ??_rdBlkRegCompleteHandler@strncmp$F4874:	
 12001                           ; 1 bytes @ 0x9
 12002                           
 12003     0079                     ??_rn487x_PrintMessage:	
 12004                           ; 1 bytes @ 0x9
 12005                           
 12006     0079                     LIGHTBLUE_SendSerialData@serialData:	
 12007                           ; 1 bytes @ 0x9
 12008                           
 12009     0079                     RN487X_SendCmd@index:	
 12010                           ; 1 bytes @ 0x9
 12011                           
 12012     0079                     RN487X_ReadMsg@index:	
 12013                           ; 1 bytes @ 0x9
 12014                           
 12015     0079                     swap@lowerByte:	
 12016                           ; 1 bytes @ 0x9
 12017                           
 12018     0079                     LIGHTBLUE_SplitWord@value:	
 12019                           ; 1 bytes @ 0x9
 12020                           
 12021     0079                     bitWrite@mask:	
 12022                           ; 2 bytes @ 0x9
 12023                           
 12024                           
 12025                           ; 2 bytes @ 0x9
 12026     0079                     	ds	1
 12027     007A                     LIGHTBLUE_SendPacket@packetID:
 12028     007A                     RN487X_SendCmd@cmd:	
 12029                           ; 1 bytes @ 0xA
 12030                           
 12031     007A                     strstr@n:	
 12032                           ; 1 bytes @ 0xA
 12033                           
 12034                           
 12035                           ; 2 bytes @ 0xA
 12036     007A                     	ds	1
 12037     007B                     ??_i2c_write1ByteRegister:
 12038     007B                     ??_i2c_read1ByteRegister:	
 12039                           ; 1 bytes @ 0xB
 12040                           
 12041     007B                     ??_BMA253_NewAccelDataRdyY:	
 12042                           ; 1 bytes @ 0xB
 12043                           
 12044     007B                     ??_BMA253_NewAccelDataRdyZ:	
 12045                           ; 1 bytes @ 0xB
 12046                           
 12047     007B                     ??_TMAG5273_GetTemperatureValue:	
 12048                           ; 1 bytes @ 0xB
 12049                           
 12050     007B                     ??_LIGHTBLUE_SplitWord:	
 12051                           ; 1 bytes @ 0xB
 12052                           
 12053     007B                     ??_LIGHTBLUE_UpdateErrorLed:	
 12054                           ; 1 bytes @ 0xB
 12055                           
 12056     007B                     ??_RN487X_EnterCmdMode:	
 12057                           ; 1 bytes @ 0xB
 12058                           
 12059     007B                     ??_RN487X_SetOutputs:	
 12060                           ; 1 bytes @ 0xB
 12061                           
 12062     007B                     ??_RN487X_EnterDataMode:	
 12063                           ; 1 bytes @ 0xB
 12064                           
 12065     007B                     ??_I2C1_MasterWrite:	
 12066                           ; 1 bytes @ 0xB
 12067                           
 12068     007B                     ??_I2C1_MasterRead:	
 12069                           ; 1 bytes @ 0xB
 12070                           
 12071     007B                     ??_I2C1_Poller:	
 12072                           ; 1 bytes @ 0xB
 12073                           
 12074     007B                     ??_isConnected:	
 12075                           ; 1 bytes @ 0xB
 12076                           
 12077     007B                     ??_TMAG5273_GetManufacture:	
 12078                           ; 1 bytes @ 0xB
 12079                           
 12080     007B                     ??_LIGHTBLUE_PushButton:	
 12081                           ; 1 bytes @ 0xB
 12082                           
 12083     007B                     ??_LIGHTBLUE_LedState:	
 12084                           ; 1 bytes @ 0xB
 12085                           
 12086     007B                     ??_LIGHTBLUE_SetErrorLedValue:	
 12087                           ; 1 bytes @ 0xB
 12088                           
 12089     007B                     ??_i2c_readNBytes:	
 12090                           ; 1 bytes @ 0xB
 12091                           
 12092     007B                     ??_I2C1_MasterOperation:	
 12093                           ; 1 bytes @ 0xB
 12094                           
 12095     007B                     BMA253_NewAccelDataRdyY@yNewData:	
 12096                           ; 1 bytes @ 0xB
 12097                           
 12098     007B                     BMA253_NewAccelDataRdyZ@zNewData:	
 12099                           ; 1 bytes @ 0xB
 12100                           
 12101     007B                     LIGHTBLUE_SplitWord@payload:	
 12102                           ; 1 bytes @ 0xB
 12103                           
 12104     007B                     i2c_write1ByteRegister@address:	
 12105                           ; 1 bytes @ 0xB
 12106                           
 12107     007B                     i2c_readNBytes@address:	
 12108                           ; 1 bytes @ 0xB
 12109                           
 12110                           
 12111                           ; 1 bytes @ 0xB
 12112     007B                     	ds	1
 12113     007C                     ??_readRegister:
 12114     007C                     ??_RN487X_Read:	
 12115                           ; 1 bytes @ 0xC
 12116                           
 12117     007C                     ??_RN487X_DataReady:	
 12118                           ; 1 bytes @ 0xC
 12119                           
 12120     007C                     ??_RN487X_MessageHandler:	
 12121                           ; 1 bytes @ 0xC
 12122                           
 12123     007C                     ??_begin:	
 12124                           ; 1 bytes @ 0xC
 12125                           
 12126     007C                     ??_LIGHTBLUE_TemperatureSensor:	
 12127                           ; 1 bytes @ 0xC
 12128                           
 12129     007C                     ??_LIGHTBLUE_AccelSensor:	
 12130                           ; 1 bytes @ 0xC
 12131                           
 12132     007C                     ??_writeRegister:	
 12133                           ; 1 bytes @ 0xC
 12134                           
 12135     007C                     ??_getDeviceStatus:	
 12136                           ; 1 bytes @ 0xC
 12137                           
 12138                           
 12139                           	psect	cstackBANK0
 12140     0020                     __pcstackBANK0:	
 12141                           ; 1 bytes @ 0xC
 12142                           
 12143     0020                     ?_RN487X_SetOutputs:
 12144     0020                     ??_strstr:	
 12145                           ; 1 bytes @ 0x0
 12146                           
 12147     0020                     ??_I2C1_MasterFsm:	
 12148                           ; 1 bytes @ 0x0
 12149                           
 12150     0020                     ??_LIGHTBLUE_SendProtocolVersion:	
 12151                           ; 1 bytes @ 0x0
 12152                           
 12153     0020                     LIGHTBLUE_PushButton@button:	
 12154                           ; 1 bytes @ 0x0
 12155                           
 12156     0020                     RN487X_SetOutputs@bitMap:	
 12157                           ; 1 bytes @ 0x0
 12158                           
 12159     0020                     LIGHTBLUE_LedState@payload:	
 12160                           ; 2 bytes @ 0x0
 12161                           
 12162     0020                     rn487x_PrintMessage@printCharacter:	
 12163                           ; 3 bytes @ 0x0
 12164                           
 12165                           
 12166                           ; 32 bytes @ 0x0
 12167     0020                     	ds	1
 12168     0021                     LIGHTBLUE_PushButton@payload:
 12169                           
 12170                           ; 3 bytes @ 0x1
 12171     0021                     	ds	1
 12172     0022                     RN487X_SetOutputs@ioLowNibble:
 12173     0022                     I2C1_MasterOperation@read:	
 12174                           ; 1 bytes @ 0x2
 12175                           
 12176     0022                     strstr@nl:	
 12177                           ; 1 bytes @ 0x2
 12178                           
 12179     0022                     LIGHTBLUE_SendProtocolVersion@payload:	
 12180                           ; 2 bytes @ 0x2
 12181                           
 12182                           
 12183                           ; 19 bytes @ 0x2
 12184     0022                     	ds	1
 12185     0023                     LIGHTBLUE_LedState@led:
 12186     0023                     RN487X_SetOutputs@stateLowNibble:	
 12187                           ; 1 bytes @ 0x3
 12188                           
 12189     0023                     I2C1_MasterOperation@returnValue:	
 12190                           ; 1 bytes @ 0x3
 12191                           
 12192                           
 12193                           ; 1 bytes @ 0x3
 12194     0023                     	ds	1
 12195     0024                     ?_i2c_write1ByteRegister:
 12196     0024                     ?_i2c_read1ByteRegister:	
 12197                           ; 1 bytes @ 0x4
 12198                           
 12199     0024                     ?_i2c_readNBytes:	
 12200                           ; 1 bytes @ 0x4
 12201                           
 12202     0024                     ?_i2c_read2ByteRegister:	
 12203                           ; 1 bytes @ 0x4
 12204                           
 12205     0024                     i2c_write1ByteRegister@reg:	
 12206                           ; 2 bytes @ 0x4
 12207                           
 12208     0024                     i2c_read1ByteRegister@reg:	
 12209                           ; 1 bytes @ 0x4
 12210                           
 12211     0024                     i2c_read2ByteRegister@reg:	
 12212                           ; 1 bytes @ 0x4
 12213                           
 12214     0024                     i2c_readNBytes@data:	
 12215                           ; 1 bytes @ 0x4
 12216                           
 12217     0024                     RN487X_SetOutputs@ioHighNibble:	
 12218                           ; 1 bytes @ 0x4
 12219                           
 12220                           
 12221                           ; 1 bytes @ 0x4
 12222     0024                     	ds	1
 12223     0025                     i2c_write1ByteRegister@data:
 12224     0025                     i2c_read1ByteRegister@address:	
 12225                           ; 1 bytes @ 0x5
 12226                           
 12227     0025                     RN487X_SetOutputs@stateHighNibble:	
 12228                           ; 1 bytes @ 0x5
 12229                           
 12230     0025                     i2c_readNBytes@len:	
 12231                           ; 1 bytes @ 0x5
 12232                           
 12233                           
 12234                           ; 2 bytes @ 0x5
 12235     0025                     	ds	1
 12236     0026                     ??_i2c_read2ByteRegister:
 12237     0026                     ?_writeRegister:	
 12238                           ; 1 bytes @ 0x6
 12239                           
 12240     0026                     LIGHTBLUE_SetErrorLedValue@value:	
 12241                           ; 1 bytes @ 0x6
 12242                           
 12243     0026                     i2c_read1ByteRegister@e:	
 12244                           ; 1 bytes @ 0x6
 12245                           
 12246     0026                     writeRegister@data:	
 12247                           ; 1 bytes @ 0x6
 12248                           
 12249                           
 12250                           ; 1 bytes @ 0x6
 12251     0026                     	ds	1
 12252     0027                     ?_LIGHTBLUE_PerformAction:
 12253     0027                     ?_readRegisters:	
 12254                           ; 1 bytes @ 0x7
 12255                           
 12256     0027                     LIGHTBLUE_PerformAction@data:	
 12257                           ; 1 bytes @ 0x7
 12258                           
 12259     0027                     readRegisters@dataBuffer:	
 12260                           ; 1 bytes @ 0x7
 12261                           
 12262     0027                     writeRegister@regAddress:	
 12263                           ; 1 bytes @ 0x7
 12264                           
 12265     0027                     i2c_read1ByteRegister@x:	
 12266                           ; 1 bytes @ 0x7
 12267                           
 12268                           
 12269                           ; 2 bytes @ 0x7
 12270     0027                     	ds	1
 12271     0028                     ??_LIGHTBLUE_PerformAction:
 12272     0028                     readRegisters@numBytes:	
 12273                           ; 1 bytes @ 0x8
 12274                           
 12275                           
 12276                           ; 1 bytes @ 0x8
 12277     0028                     	ds	1
 12278     0029                     ??_readRegisters:
 12279     0029                     LIGHTBLUE_PerformAction@id:	
 12280                           ; 1 bytes @ 0x9
 12281                           
 12282     0029                     i2c_read1ByteRegister@d2:	
 12283                           ; 1 bytes @ 0x9
 12284                           
 12285                           
 12286                           ; 1 bytes @ 0x9
 12287     0029                     	ds	1
 12288     002A                     ??_BMA253_GetAccelDataY:
 12289     002A                     ??_BMA253_GetAccelDataZ:	
 12290                           ; 1 bytes @ 0xA
 12291                           
 12292     002A                     LIGHTBLUE_PerformAction@led:	
 12293                           ; 1 bytes @ 0xA
 12294                           
 12295     002A                     i2c_read2ByteRegister@address:	
 12296                           ; 1 bytes @ 0xA
 12297                           
 12298                           
 12299                           ; 1 bytes @ 0xA
 12300     002A                     	ds	1
 12301     002B                     ??_LIGHTBLUE_ParseIncomingPacket:
 12302     002B                     readRegisters@regAddress:	
 12303                           ; 1 bytes @ 0xB
 12304                           
 12305     002B                     i2c_read2ByteRegister@result:	
 12306                           ; 1 bytes @ 0xB
 12307                           
 12308                           
 12309                           ; 2 bytes @ 0xB
 12310     002B                     	ds	1
 12311     002C                     readRegister@regAddress:
 12312                           
 12313                           ; 1 bytes @ 0xC
 12314     002C                     	ds	1
 12315     002D                     ?_TMAG5273_GetManufacture:
 12316     002D                     ?_TMAG5273_CalcTemperature:	
 12317                           ; 2 bytes @ 0xD
 12318                           
 12319     002D                     BMA253_GetAccelDataY@yAccelData:	
 12320                           ; 2 bytes @ 0xD
 12321                           
 12322     002D                     BMA253_GetAccelDataZ@zAccelData:	
 12323                           ; 1 bytes @ 0xD
 12324                           
 12325     002D                     readRegister@regVal:	
 12326                           ; 1 bytes @ 0xD
 12327                           
 12328     002D                     _LIGHTBLUE_ParseIncomingPacket$463:	
 12329                           ; 1 bytes @ 0xD
 12330                           
 12331                           
 12332                           ; 2 bytes @ 0xD
 12333     002D                     	ds	1
 12334     002E                     ??_getLowPower:
 12335     002E                     ??_getOperatingMode:	
 12336                           ; 1 bytes @ 0xE
 12337                           
 12338     002E                     ??_getMagneticChannel:	
 12339                           ; 1 bytes @ 0xE
 12340                           
 12341     002E                     ??_getTemperatureEN:	
 12342                           ; 1 bytes @ 0xE
 12343                           
 12344     002E                     ??_getAngleEn:	
 12345                           ; 1 bytes @ 0xE
 12346                           
 12347     002E                     BMA253_GetAccelDataY@lsbData:	
 12348                           ; 1 bytes @ 0xE
 12349                           
 12350     002E                     BMA253_GetAccelDataZ@lsbData:	
 12351                           ; 1 bytes @ 0xE
 12352                           
 12353     002E                     getDeviceStatus@deviceStatusReg:	
 12354                           ; 1 bytes @ 0xE
 12355                           
 12356                           
 12357                           ; 1 bytes @ 0xE
 12358     002E                     	ds	1
 12359     002F                     ??_getError:
 12360     002F                     ??_TMAG5273_CalcTemperature:	
 12361                           ; 1 bytes @ 0xF
 12362                           
 12363     002F                     BMA253_GetAccelDataY@msbData:	
 12364                           ; 1 bytes @ 0xF
 12365                           
 12366     002F                     BMA253_GetAccelDataZ@msbData:	
 12367                           ; 1 bytes @ 0xF
 12368                           
 12369     002F                     _LIGHTBLUE_ParseIncomingPacket$464:	
 12370                           ; 1 bytes @ 0xF
 12371                           
 12372     002F                     TMAG5273_GetManufacture@read:	
 12373                           ; 2 bytes @ 0xF
 12374                           
 12375                           
 12376                           ; 2 bytes @ 0xF
 12377     002F                     	ds	1
 12378     0030                     ??_BMA253_GetAccelDataXYZ:
 12379     0030                     getLowPower@lowPowerModeBit:	
 12380                           ; 1 bytes @ 0x10
 12381                           
 12382     0030                     getOperatingMode@opMode:	
 12383                           ; 1 bytes @ 0x10
 12384                           
 12385     0030                     getMagneticChannel@magChannel:	
 12386                           ; 1 bytes @ 0x10
 12387                           
 12388     0030                     getAngleEn@angleReg:	
 12389                           ; 1 bytes @ 0x10
 12390                           
 12391     0030                     getTemperatureEN@tempEN:	
 12392                           ; 1 bytes @ 0x10
 12393                           
 12394                           
 12395                           ; 1 bytes @ 0x10
 12396     0030                     	ds	1
 12397     0031                     BMA253_GetAccelDataXYZ@lSB:
 12398     0031                     getLowPower@lowPowerMode:	
 12399                           ; 1 bytes @ 0x11
 12400                           
 12401     0031                     getOperatingMode@opMode0:	
 12402                           ; 1 bytes @ 0x11
 12403                           
 12404     0031                     getMagneticChannel@magMode4:	
 12405                           ; 1 bytes @ 0x11
 12406                           
 12407     0031                     getAngleEn@angleDir2:	
 12408                           ; 1 bytes @ 0x11
 12409                           
 12410     0031                     getTemperatureEN@tempENreg:	
 12411                           ; 1 bytes @ 0x11
 12412                           
 12413     0031                     getError@undervoltageError:	
 12414                           ; 1 bytes @ 0x11
 12415                           
 12416     0031                     _LIGHTBLUE_ParseIncomingPacket$465:	
 12417                           ; 1 bytes @ 0x11
 12418                           
 12419                           
 12420                           ; 2 bytes @ 0x11
 12421     0031                     	ds	1
 12422     0032                     BMA253_GetAccelDataXYZ@mSB:
 12423     0032                     getOperatingMode@opMode1:	
 12424                           ; 1 bytes @ 0x12
 12425                           
 12426     0032                     getMagneticChannel@magMode5:	
 12427                           ; 1 bytes @ 0x12
 12428                           
 12429     0032                     getAngleEn@angleDir3:	
 12430                           ; 1 bytes @ 0x12
 12431                           
 12432     0032                     getError@otpCrcError:	
 12433                           ; 1 bytes @ 0x12
 12434                           
 12435     0032                     TMAG5273_CalcTemperature@lowerByte:	
 12436                           ; 1 bytes @ 0x12
 12437                           
 12438                           
 12439                           ; 1 bytes @ 0x12
 12440     0032                     	ds	1
 12441     0033                     BMA253_GetAccelDataXYZ@accelData:
 12442     0033                     LIGHTBLUE_ParseIncomingPacket@receivedByte:	
 12443                           ; 1 bytes @ 0x13
 12444                           
 12445     0033                     getMagneticChannel@magMode6:	
 12446                           ; 1 bytes @ 0x13
 12447                           
 12448     0033                     getError@intPinError:	
 12449                           ; 1 bytes @ 0x13
 12450                           
 12451     0033                     TMAG5273_CalcTemperature@temperatureData:	
 12452                           ; 1 bytes @ 0x13
 12453                           
 12454                           
 12455                           ; 2 bytes @ 0x13
 12456     0033                     	ds	1
 12457     0034                     getMagneticChannel@magMode7:
 12458     0034                     getError@oscillatorError:	
 12459                           ; 1 bytes @ 0x14
 12460                           
 12461     0034                     BMA253_GetAccelDataXYZ@sensorValue:	
 12462                           ; 1 bytes @ 0x14
 12463                           
 12464                           
 12465                           ; 2 bytes @ 0x14
 12466     0034                     	ds	1
 12467     0035                     ?_TMAG5273_GetTemperatureValue:
 12468     0035                     LIGHTBLUE_SendProtocolVersion@value:	
 12469                           ; 1 bytes @ 0x15
 12470                           
 12471     0035                     getError@statusReg:	
 12472                           ; 1 bytes @ 0x15
 12473                           
 12474     0035                     TMAG5273_GetTemperatureValue@temperature:	
 12475                           ; 1 bytes @ 0x15
 12476                           
 12477                           
 12478                           ; 2 bytes @ 0x15
 12479     0035                     	ds	1
 12480     0036                     ??_setMagneticChannel:
 12481     0036                     ??_setTemperatureEn:	
 12482                           ; 1 bytes @ 0x16
 12483                           
 12484     0036                     ??_setOperatingMode:	
 12485                           ; 1 bytes @ 0x16
 12486                           
 12487     0036                     ??_setXYAxisRange:	
 12488                           ; 1 bytes @ 0x16
 12489                           
 12490     0036                     ??_setZAxisRange:	
 12491                           ; 1 bytes @ 0x16
 12492                           
 12493     0036                     LIGHTBLUE_SendProtocolVersion@dataIndex:	
 12494                           ; 1 bytes @ 0x16
 12495                           
 12496     0036                     LIGHTBLUE_AccelSensor@payload:	
 12497                           ; 1 bytes @ 0x16
 12498                           
 12499                           
 12500                           ; 13 bytes @ 0x16
 12501     0036                     	ds	1
 12502     0037                     LIGHTBLUE_TemperatureSensor@payload:
 12503                           
 12504                           ; 5 bytes @ 0x17
 12505     0037                     	ds	1
 12506     0038                     setOperatingMode@opMode:
 12507     0038                     setMagneticChannel@channelMode:	
 12508                           ; 1 bytes @ 0x18
 12509                           
 12510     0038                     setXYAxisRange@xyAxisRange:	
 12511                           ; 1 bytes @ 0x18
 12512                           
 12513     0038                     setZAxisRange@zAxisRange:	
 12514                           ; 1 bytes @ 0x18
 12515                           
 12516     0038                     setTemperatureEn@temperatureEnable:	
 12517                           ; 1 bytes @ 0x18
 12518                           
 12519                           
 12520                           ; 1 bytes @ 0x18
 12521     0038                     	ds	1
 12522     0039                     setOperatingMode@mode:
 12523     0039                     setMagneticChannel@mode:	
 12524                           ; 2 bytes @ 0x19
 12525                           
 12526     0039                     setXYAxisRange@mode:	
 12527                           ; 2 bytes @ 0x19
 12528                           
 12529     0039                     setZAxisRange@mode:	
 12530                           ; 2 bytes @ 0x19
 12531                           
 12532     0039                     setTemperatureEn@mode:	
 12533                           ; 2 bytes @ 0x19
 12534                           
 12535                           
 12536                           ; 2 bytes @ 0x19
 12537     0039                     	ds	2
 12538     003B                     begin@testReg:
 12539                           
 12540                           ; 2 bytes @ 0x1B
 12541     003B                     	ds	1
 12542     003C                     LIGHTBLUE_TemperatureSensor@temperature:
 12543                           
 12544                           ; 2 bytes @ 0x1C
 12545     003C                     	ds	4
 12546     0040                     rn487x_PrintMessage@messageIndex:
 12547                           
 12548                           ; 1 bytes @ 0x20
 12549     0040                     	ds	1
 12550     0041                     ?_RN487X_MessageHandler:
 12551     0041                     RN487X_MessageHandler@message:	
 12552                           ; 1 bytes @ 0x21
 12553                           
 12554                           
 12555                           ; 2 bytes @ 0x21
 12556     0041                     	ds	2
 12557     0043                     RN487X_MessageHandler@messageType:
 12558     0043                     LIGHTBLUE_AccelSensor@accelData:	
 12559                           ; 1 bytes @ 0x23
 12560                           
 12561                           
 12562                           ; 6 bytes @ 0x23
 12563     0043                     	ds	1
 12564     0044                     ??_RN487X_FilterData:
 12565                           
 12566                           ; 1 bytes @ 0x24
 12567     0044                     	ds	4
 12568     0048                     RN487X_FilterData@readChar:
 12569                           
 12570                           ; 1 bytes @ 0x28
 12571     0048                     	ds	1
 12572     0049                     ??_main:
 12573                           
 12574                           ; 1 bytes @ 0x29
 12575     0049                     	ds	1
 12576                           
 12577                           	psect	maintext
 12578     04BD                     __pmaintext:	
 12579 ;;
 12580 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
 12581 ;;
 12582 ;; *************** function _main *****************
 12583 ;; Defined at:
 12584 ;;		line 72 in file "main.c"
 12585 ;; Parameters:    Size  Location     Type
 12586 ;;		None
 12587 ;; Auto vars:     Size  Location     Type
 12588 ;;		None
 12589 ;; Return value:  Size  Location     Type
 12590 ;;                  2  2041[None  ] int 
 12591 ;; Registers used:
 12592 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12593 ;; Tracked objects:
 12594 ;;		On entry : B3F/0
 12595 ;;		On exit  : 0/0
 12596 ;;		Unchanged: 0/0
 12597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12599 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12600 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12601 ;;      Totals:         0       1       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12602 ;;Total ram usage:        2 bytes
 12603 ;; Hardware stack levels required when called: 19
 12604 ;; This function calls:
 12605 ;;		_EUSART1_Read
 12606 ;;		_EUSART1_Write
 12607 ;;		_EUSART1_is_rx_ready
 12608 ;;		_EUSART2_Read
 12609 ;;		_EUSART2_Write
 12610 ;;		_EUSART2_is_rx_ready
 12611 ;;		_LIGHTBLUE_AccelSensor
 12612 ;;		_LIGHTBLUE_Initialize
 12613 ;;		_LIGHTBLUE_LedState
 12614 ;;		_LIGHTBLUE_ParseIncomingPacket
 12615 ;;		_LIGHTBLUE_PushButton
 12616 ;;		_LIGHTBLUE_SendProtocolVersion
 12617 ;;		_LIGHTBLUE_SendSerialData
 12618 ;;		_LIGHTBLUE_TemperatureSensor
 12619 ;;		_RN487X_DataReady
 12620 ;;		_RN487X_Init
 12621 ;;		_RN487X_IsConnected
 12622 ;;		_RN487X_Read
 12623 ;;		_RN487X_SetAsyncMessageHandler
 12624 ;;		_RN487X_Write
 12625 ;;		_SYSTEM_Initialize
 12626 ;;		_TMR0_HasOverflowOccured
 12627 ;;		_begin
 12628 ;; This function is called by:
 12629 ;;		Startup code after reset
 12630 ;; This function uses a non-reentrant model
 12631 ;;
 12632                           
 12633     04BD                     _main:	
 12634                           ;psect for function _main
 12635                           
 12636     04BD                     l14995:	
 12637                           ;incstack = 0
 12638 ;; hardware stack exceeded
 12639                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12640                           
 12641                           
 12642                           ;main.c: 75:     SYSTEM_Initialize();
 12643     04BD  3191  21EC  3184   	fcall	_SYSTEM_Initialize
 12644                           
 12645                           ;main.c: 76:     RN487X_SetAsyncMessageHandler(statusBuffer, sizeof(statusBuffer));
 12646     04C0  3020               	movlw	low _statusBuffer@main$F3783
 12647     04C1  00F1               	movwf	RN487X_SetAsyncMessageHandler@pBuffer
 12648     04C2  3003               	movlw	high _statusBuffer@main$F3783
 12649     04C3  00F2               	movwf	RN487X_SetAsyncMessageHandler@pBuffer+1
 12650     04C4  3050               	movlw	80
 12651     04C5  00F3               	movwf	RN487X_SetAsyncMessageHandler@len
 12652     04C6  3192  2279  3184   	fcall	_RN487X_SetAsyncMessageHandler
 12653     04C9                     l14997:
 12654                           
 12655                           ;main.c: 79:     (INTCONbits.GIE = 1);
 12656     04C9  178B               	bsf	11,7	;volatile
 12657     04CA                     l14999:
 12658                           
 12659                           ;main.c: 82:     (INTCONbits.PEIE = 1);
 12660     04CA  170B               	bsf	11,6	;volatile
 12661     04CB                     l15001:
 12662                           
 12663                           ;main.c: 84:     RN487X_Init();
 12664     04CB  318E  268E  3184   	fcall	_RN487X_Init
 12665     04CE                     l15003:
 12666                           
 12667                           ;main.c: 85:     LIGHTBLUE_Initialize();
 12668     04CE  319E  26FE  3184   	fcall	_LIGHTBLUE_Initialize
 12669                           
 12670                           ;main.c: 86:     begin();
 12671     04D1  3187  27A1  3184   	fcall	_begin
 12672     04D4                     l15005:
 12673                           
 12674                           ;main.c: 89:     {;main.c: 90:         if (RN487X_IsConnected() == 1)
 12675     04D4  319E  2689  3184   	fcall	_RN487X_IsConnected
 12676     04D7  3A01               	xorlw	1
 12677     04D8  1D03               	skipz
 12678     04D9  2CDB               	goto	u12261
 12679     04DA  2CDC               	goto	u12260
 12680     04DB                     u12261:
 12681     04DB  2D63               	goto	l2057
 12682     04DC                     u12260:
 12683     04DC                     l15007:
 12684                           
 12685                           ;main.c: 91:         {;main.c: 92:             if ((TMR0_HasOverflowOccured()) == 1)
 12686     04DC  319E  26ED  3184   	fcall	_TMR0_HasOverflowOccured
 12687     04DF  3A01               	xorlw	1
 12688     04E0  1D03               	skipz
 12689     04E1  2CE3               	goto	u12271
 12690     04E2  2CE4               	goto	u12270
 12691     04E3                     u12271:
 12692     04E3  2CFC               	goto	l2046
 12693     04E4                     u12270:
 12694     04E4                     l15009:
 12695                           
 12696                           ;main.c: 93:             {;main.c: 94:                 (PIR0bits.TMR0IF = 0);
 12697     04E4  014E               	movlb	14	; select bank14
 12698     04E5  128C               	bcf	12,5	;volatile
 12699     04E6                     l15011:
 12700                           
 12701                           ;main.c: 96:                 LIGHTBLUE_TemperatureSensor();
 12702     04E6  3192  22AA  3184   	fcall	_LIGHTBLUE_TemperatureSensor
 12703                           
 12704                           ;main.c: 97:                 LIGHTBLUE_AccelSensor();
 12705     04E9  3196  26A4  3184   	fcall	_LIGHTBLUE_AccelSensor
 12706                           
 12707                           ;main.c: 98:                 LIGHTBLUE_PushButton();
 12708     04EC  3191  2171  3184   	fcall	_LIGHTBLUE_PushButton
 12709                           
 12710                           ;main.c: 99:                 LIGHTBLUE_LedState();
 12711     04EF  3194  24B1  3184   	fcall	_LIGHTBLUE_LedState
 12712                           
 12713                           ;main.c: 100:                 LIGHTBLUE_SendProtocolVersion();
 12714     04F2  3197  2761  3184   	fcall	_LIGHTBLUE_SendProtocolVersion
 12715                           
 12716                           ;main.c: 101:             }
 12717     04F5  2CD4               	goto	l15005
 12718     04F6                     l15013:
 12719                           
 12720                           ;main.c: 105:                 {;main.c: 106:                     LIGHTBLUE_ParseIncoming
      +                          Packet(RN487X_Read());
 12721     04F6  3190  202B  3184   	fcall	_RN487X_Read
 12722     04F9  3185  2590  3184   	fcall	_LIGHTBLUE_ParseIncomingPacket
 12723     04FC                     l2046:	
 12724                           ;main.c: 107:                 }
 12725                           
 12726                           
 12727                           ;main.c: 104:                 while (RN487X_DataReady())
 12728     04FC  3193  2347  3184   	fcall	_RN487X_DataReady
 12729     04FF  3A00               	xorlw	0
 12730     0500  1D03               	skipz
 12731     0501  2D03               	goto	u12281
 12732     0502  2D04               	goto	u12280
 12733     0503                     u12281:
 12734     0503  2CF6               	goto	l15013
 12735     0504                     u12280:
 12736     0504  2D44               	goto	l15031
 12737     0505                     l15015:
 12738                           
 12739                           ;main.c: 109:                 {;main.c: 110:                     lightBlueSerial[serialI
      +                          ndex] = uart[UART_CDC].Read();
 12740     0505  3000               	movlw	low (_uart| (0+32768))
 12741     0506  0084               	movwf	4
 12742     0507  3098               	movlw	high (_uart| (0+32768))
 12743     0508  0085               	movwf	5
 12744     0509  3F01               	moviw [1]fsr0
 12745     050A  008A               	movwf	10
 12746     050B  3F00               	moviw [0]fsr0
 12747     050C  000A               	callw
 12748     050D  3184               	pagesel	$
 12749     050E  0140               	movlb	0	; select bank0
 12750     050F  00C9               	movwf	??_main
 12751     0510  0856               	movf	_serialIndex,w
 12752     0511  3E20               	addlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12753     0512  0086               	movwf	6
 12754     0513  3002               	movlw	2	; select bank4/5
 12755     0514  0087               	movwf	7
 12756     0515  0849               	movf	??_main,w
 12757     0516  0081               	movwf	1
 12758     0517                     l15017:
 12759                           
 12760                           ;main.c: 111:                     if ((lightBlueSerial[serialIndex] == '\r')
 12761     0517  0856               	movf	_serialIndex,w
 12762     0518  3E20               	addlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12763     0519  0086               	movwf	6
 12764     051A  3002               	movlw	2	; select bank4/5
 12765     051B  0087               	movwf	7
 12766     051C  300D               	movlw	13
 12767     051D  0601               	xorwf	1,w
 12768     051E  1903               	btfsc	3,2
 12769     051F  2D21               	goto	u12291
 12770     0520  2D22               	goto	u12290
 12771     0521                     u12291:
 12772     0521  2D33               	goto	l15023
 12773     0522                     u12290:
 12774     0522                     l15019:
 12775     0522  0856               	movf	_serialIndex,w
 12776     0523  3E20               	addlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12777     0524  0086               	movwf	6
 12778     0525  3002               	movlw	2	; select bank4/5
 12779     0526  0087               	movwf	7
 12780     0527  300A               	movlw	10
 12781     0528  0601               	xorwf	1,w
 12782     0529  1903               	btfsc	3,2
 12783     052A  2D2C               	goto	u12301
 12784     052B  2D2D               	goto	u12300
 12785     052C                     u12301:
 12786     052C  2D33               	goto	l15023
 12787     052D                     u12300:
 12788     052D                     l15021:
 12789     052D  304F               	movlw	79
 12790     052E  0656               	xorwf	_serialIndex,w
 12791     052F  1D03               	btfss	3,2
 12792     0530  2D32               	goto	u12311
 12793     0531  2D33               	goto	u12310
 12794     0532                     u12311:
 12795     0532  2D40               	goto	l15029
 12796     0533                     u12310:
 12797     0533                     l15023:
 12798                           
 12799                           ;main.c: 114:                     {;main.c: 115:                         lightBlueSerial
      +                          [serialIndex] = '\0';
 12800     0533  0856               	movf	_serialIndex,w
 12801     0534  3E20               	addlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12802     0535  0086               	movwf	6
 12803     0536  3002               	movlw	2	; select bank4/5
 12804     0537  0087               	movwf	7
 12805     0538  0181               	clrf	1
 12806     0539                     l15025:
 12807                           
 12808                           ;main.c: 116:                         LIGHTBLUE_SendSerialData(lightBlueSerial);
 12809     0539  3020               	movlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12810     053A  3186  265C  3184   	fcall	_LIGHTBLUE_SendSerialData
 12811     053D                     l15027:
 12812                           
 12813                           ;main.c: 117:                         serialIndex = 0;
 12814     053D  0140               	movlb	0	; select bank0
 12815     053E  01D6               	clrf	_serialIndex
 12816                           
 12817                           ;main.c: 118:                     }
 12818     053F  2D44               	goto	l15031
 12819     0540                     l15029:
 12820                           
 12821                           ;main.c: 120:                     {;main.c: 121:                         serialIndex++;
 12822     0540  3001               	movlw	1
 12823     0541  00C9               	movwf	??_main
 12824     0542  0849               	movf	??_main,w
 12825     0543  07D6               	addwf	_serialIndex,f
 12826     0544                     l15031:
 12827                           
 12828                           ;main.c: 108:                 while (uart[UART_CDC].DataReady())
 12829     0544  3006               	movlw	low ((_uart+6)| (0+32768))
 12830     0545  0084               	movwf	4
 12831     0546  3098               	movlw	high ((_uart+6)| (0+32768))
 12832     0547  0085               	movwf	5
 12833     0548  3F01               	moviw [1]fsr0
 12834     0549  008A               	movwf	10
 12835     054A  3F00               	moviw [0]fsr0
 12836     054B  000A               	callw
 12837     054C  3184               	pagesel	$
 12838     054D  3A00               	xorlw	0
 12839     054E  1D03               	skipz
 12840     054F  2D51               	goto	u12321
 12841     0550  2D52               	goto	u12320
 12842     0551                     u12321:
 12843     0551  2D05               	goto	l15015
 12844     0552                     u12320:
 12845     0552  2CD4               	goto	l15005
 12846     0553                     l15033:
 12847                           
 12848                           ;main.c: 130:             {;main.c: 131:                 uart[UART_CDC].Write(RN487X_Rea
      +                          d());
 12849     0553  3190  202B  3184   	fcall	_RN487X_Read
 12850     0556  0141               	movlb	1	; select bank1
 12851     0557  00EF               	movwf	_main$5438^(0+128)
 12852                           
 12853                           ;main.c: 130:             {;main.c: 131:                 uart[UART_CDC].Write(RN487X_Rea
      +                          d());
 12854     0558  086F               	movf	_main$5438^(0+128),w
 12855     0559  00F1               	movwf	EUSART2_Write@txData
 12856     055A  3002               	movlw	low ((_uart+2)| (0+32768))
 12857     055B  0084               	movwf	4
 12858     055C  3098               	movlw	high ((_uart+2)| (0+32768))
 12859     055D  0085               	movwf	5
 12860     055E  3F01               	moviw [1]fsr0
 12861     055F  008A               	movwf	10
 12862     0560  3F00               	moviw [0]fsr0
 12863     0561  000A               	callw
 12864     0562  3184               	pagesel	$
 12865     0563                     l2057:	
 12866                           ;main.c: 132:             }
 12867                           
 12868                           
 12869                           ;main.c: 129:             while(RN487X_DataReady())
 12870     0563  3193  2347  3184   	fcall	_RN487X_DataReady
 12871     0566  3A00               	xorlw	0
 12872     0567  1D03               	skipz
 12873     0568  2D6A               	goto	u12331
 12874     0569  2D6B               	goto	u12330
 12875     056A                     u12331:
 12876     056A  2D53               	goto	l15033
 12877     056B                     u12330:
 12878     056B  2D7F               	goto	l15037
 12879     056C                     l15035:
 12880                           
 12881                           ;main.c: 134:             {;main.c: 135:                 RN487X.Write(uart[UART_CDC].Rea
      +                          d());
 12882     056C  3000               	movlw	low (_uart| (0+32768))
 12883     056D  0084               	movwf	4
 12884     056E  3098               	movlw	high (_uart| (0+32768))
 12885     056F  0085               	movwf	5
 12886     0570  3F01               	moviw [1]fsr0
 12887     0571  008A               	movwf	10
 12888     0572  3F00               	moviw [0]fsr0
 12889     0573  000A               	callw
 12890     0574  3184               	pagesel	$
 12891     0575  00F6               	movwf	RN487X_Write@txData
 12892     0576  3068               	movlw	low (_RN487X| (0+32768))
 12893     0577  0084               	movwf	4
 12894     0578  3098               	movlw	high (_RN487X| (0+32768))
 12895     0579  0085               	movwf	5
 12896     057A  3F01               	moviw [1]fsr0
 12897     057B  008A               	movwf	10
 12898     057C  3F00               	moviw [0]fsr0
 12899     057D  000A               	callw
 12900     057E  3184               	pagesel	$
 12901     057F                     l15037:
 12902                           
 12903                           ;main.c: 133:             while (uart[UART_CDC].DataReady())
 12904     057F  3006               	movlw	low ((_uart+6)| (0+32768))
 12905     0580  0084               	movwf	4
 12906     0581  3098               	movlw	high ((_uart+6)| (0+32768))
 12907     0582  0085               	movwf	5
 12908     0583  3F01               	moviw [1]fsr0
 12909     0584  008A               	movwf	10
 12910     0585  3F00               	moviw [0]fsr0
 12911     0586  000A               	callw
 12912     0587  3184               	pagesel	$
 12913     0588  3A00               	xorlw	0
 12914     0589  1D03               	skipz
 12915     058A  2D8C               	goto	u12341
 12916     058B  2D8D               	goto	u12340
 12917     058C                     u12341:
 12918     058C  2D6C               	goto	l15035
 12919     058D                     u12340:
 12920     058D  2CD4               	goto	l15005
 12921     058E  3180  2855         	ljmp	start
 12922     0590                     __end_of_main:
 12923                           
 12924                           	psect	text1
 12925     07A1                     __ptext1:	
 12926 ;; *************** function _begin *****************
 12927 ;; Defined at:
 12928 ;;		line 31 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 12929 ;; Parameters:    Size  Location     Type
 12930 ;;		None
 12931 ;; Auto vars:     Size  Location     Type
 12932 ;;  testReg         2   27[BANK0 ] unsigned short 
 12933 ;; Return value:  Size  Location     Type
 12934 ;;                  1    wreg      char 
 12935 ;; Registers used:
 12936 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12937 ;; Tracked objects:
 12938 ;;		On entry : 0/0
 12939 ;;		On exit  : 0/0
 12940 ;;		Unchanged: 0/0
 12941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12943 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12945 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12946 ;;Total ram usage:        2 bytes
 12947 ;; Hardware stack levels used: 1
 12948 ;; Hardware stack levels required when called: 18
 12949 ;; This function calls:
 12950 ;;		_bitWrite
 12951 ;;		_getAngleEn
 12952 ;;		_getError
 12953 ;;		_getLowPower
 12954 ;;		_getMagneticChannel
 12955 ;;		_getOperatingMode
 12956 ;;		_getTemperatureEN
 12957 ;;		_isConnected
 12958 ;;		_setMagneticChannel
 12959 ;;		_setOperatingMode
 12960 ;;		_setTemperatureEn
 12961 ;;		_setXYAxisRange
 12962 ;;		_setZAxisRange
 12963 ;; This function is called by:
 12964 ;;		_main
 12965 ;; This function uses a non-reentrant model
 12966 ;;
 12967                           
 12968     07A1                     _begin:	
 12969                           ;psect for function _begin
 12970                           
 12971     07A1                     l14521:	
 12972                           ;incstack = 0
 12973 ;; hardware stack exceeded
 12974                           ; Regs used in _begin: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12975                           
 12976                           
 12977                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 33:     uint16_t testR
      +                          eg = 0b0001001110010001;
 12978     07A1  3091               	movlw	145
 12979     07A2  0140               	movlb	0	; select bank0
 12980     07A3  00BB               	movwf	begin@testReg
 12981     07A4  3013               	movlw	19
 12982     07A5  00BC               	movwf	begin@testReg+1
 12983     07A6                     l14523:
 12984                           
 12985                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 34:     bitWrite(&test
      +                          Reg, 2, 1);
 12986     07A6  303B               	movlw	low begin@testReg
 12987     07A7  00F1               	movwf	bitWrite@reg
 12988     07A8  3000               	movlw	high begin@testReg
 12989     07A9  00F2               	movwf	bitWrite@reg+1
 12990     07AA  3002               	movlw	2
 12991     07AB  00F3               	movwf	bitWrite@position
 12992     07AC  01F4               	clrf	bitWrite@value
 12993     07AD  0AF4               	incf	bitWrite@value,f
 12994     07AE  3194  248D  3187   	fcall	_bitWrite
 12995     07B1                     l14525:
 12996                           
 12997                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 40:     if (isConnecte
      +                          d() != 0) {
 12998     07B1  3191  21C1  3187   	fcall	_isConnected
 12999     07B4  3A00               	xorlw	0
 13000     07B5  1903               	skipnz
 13001     07B6  2FB8               	goto	u11681
 13002     07B7  2FB9               	goto	u11680
 13003     07B8                     u11681:
 13004     07B8  2FBA               	goto	l14529
 13005     07B9                     u11680:
 13006     07B9  2FFE               	goto	l2117
 13007     07BA                     l14529:
 13008                           
 13009                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 45:     setMagneticCha
      +                          nnel(0X7);
 13010     07BA  3007               	movlw	7
 13011     07BB  3180  20A8  3187   	fcall	_setMagneticChannel
 13012                           
 13013                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 46:     setTemperature
      +                          En(1);
 13014     07BE  3001               	movlw	1
 13015     07BF  3188  20C4  3187   	fcall	_setTemperatureEn
 13016                           
 13017                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 47:     setOperatingMo
      +                          de(0X2);
 13018     07C2  3002               	movlw	2
 13019     07C3  3187  2706  3187   	fcall	_setOperatingMode
 13020                           
 13021                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 50:     setXYAxisRange
      +                          (0X1);
 13022     07C6  3001               	movlw	1
 13023     07C7  3189  21BA  3187   	fcall	_setXYAxisRange
 13024                           
 13025                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 51:     setZAxisRange(
      +                          0X1);
 13026     07CA  3001               	movlw	1
 13027     07CB  3189  2101  3187   	fcall	_setZAxisRange
 13028                           
 13029                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 54:     if (getError()
      +                           != 0) {
 13030     07CE  318D  2589  3187   	fcall	_getError
 13031     07D1  3A00               	xorlw	0
 13032     07D2  1903               	skipnz
 13033     07D3  2FD5               	goto	u11691
 13034     07D4  2FD6               	goto	u11690
 13035     07D5                     u11691:
 13036     07D5  2FD7               	goto	l14533
 13037     07D6                     u11690:
 13038     07D6  2FFE               	goto	l2117
 13039     07D7                     l14533:
 13040                           
 13041                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 59:     if (getLowPowe
      +                          r() != 0X0) {
 13042     07D7  3188  2000  3187   	fcall	_getLowPower
 13043     07DA  3A00               	xorlw	0
 13044     07DB  1903               	skipnz
 13045     07DC  2FDE               	goto	u11701
 13046     07DD  2FDF               	goto	u11700
 13047     07DE                     u11701:
 13048     07DE  2FE0               	goto	l14537
 13049     07DF                     u11700:
 13050     07DF  2FFE               	goto	l2117
 13051     07E0                     l14537:
 13052                           
 13053                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 64:     if (getOperati
      +                          ngMode() != 0X2) {
 13054     07E0  318C  24E2  3187   	fcall	_getOperatingMode
 13055     07E3  3A02               	xorlw	2
 13056     07E4  1903               	skipnz
 13057     07E5  2FE7               	goto	u11711
 13058     07E6  2FE8               	goto	u11710
 13059     07E7                     u11711:
 13060     07E7  2FE9               	goto	l14541
 13061     07E8                     u11710:
 13062     07E8  2FFE               	goto	l2117
 13063     07E9                     l14541:
 13064                           
 13065                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 69:     if (getMagneti
      +                          cChannel() != 0X7) {
 13066     07E9  3183  2377  3187   	fcall	_getMagneticChannel
 13067     07EC  3A07               	xorlw	7
 13068     07ED  1903               	skipnz
 13069     07EE  2FF0               	goto	u11721
 13070     07EF  2FF1               	goto	u11720
 13071     07F0                     u11721:
 13072     07F0  2FF2               	goto	l14545
 13073     07F1                     u11720:
 13074     07F1  2FFE               	goto	l2117
 13075     07F2                     l14545:
 13076                           
 13077                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 74:     if (getTempera
      +                          tureEN() != 0X1) {
 13078     07F2  3191  21AC  3187   	fcall	_getTemperatureEN
 13079     07F5  3A01               	xorlw	1
 13080     07F6  1903               	skipnz
 13081     07F7  2FF9               	goto	u11731
 13082     07F8  2FFA               	goto	u11730
 13083     07F9                     u11731:
 13084     07F9  2FFB               	goto	l14549
 13085     07FA                     u11730:
 13086     07FA  2FFE               	goto	l2117
 13087     07FB                     l14549:
 13088                           
 13089                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 79:     if (getAngleEn
      +                          () != 0X0) {
 13090     07FB  318D  2535  3187   	fcall	_getAngleEn
 13091     07FE                     l2117:
 13092     07FE  0008               	return
 13093     07FF                     __end_of_begin:
 13094                           
 13095                           	psect	text2
 13096     0901                     __ptext2:	
 13097 ;; *************** function _setZAxisRange *****************
 13098 ;; Defined at:
 13099 ;;		line 1041 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13100 ;; Parameters:    Size  Location     Type
 13101 ;;  zAxisRange      1    wreg     unsigned char 
 13102 ;; Auto vars:     Size  Location     Type
 13103 ;;  zAxisRange      1   24[BANK0 ] unsigned char 
 13104 ;;  mode            2   25[BANK0 ] unsigned short 
 13105 ;; Return value:  Size  Location     Type
 13106 ;;                  1    wreg      char 
 13107 ;; Registers used:
 13108 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13109 ;; Tracked objects:
 13110 ;;		On entry : 0/0
 13111 ;;		On exit  : 0/0
 13112 ;;		Unchanged: 0/0
 13113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13115 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13116 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13117 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13118 ;;Total ram usage:        5 bytes
 13119 ;; Hardware stack levels used: 1
 13120 ;; Hardware stack levels required when called: 17
 13121 ;; This function calls:
 13122 ;;		_bitWrite
 13123 ;;		_getError
 13124 ;;		_readRegister
 13125 ;;		_writeRegister
 13126 ;; This function is called by:
 13127 ;;		_begin
 13128 ;; This function uses a non-reentrant model
 13129 ;;
 13130                           
 13131     0901                     _setZAxisRange:	
 13132                           ;psect for function _setZAxisRange
 13133                           
 13134                           
 13135                           ;incstack = 0
 13136 ;; hardware stack exceeded
 13137                           ; Regs used in _setZAxisRange: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13138                           ;setZAxisRange@zAxisRange stored from wreg
 13139     0901  0140               	movlb	0	; select bank0
 13140     0902  00B8               	movwf	setZAxisRange@zAxisRange
 13141     0903                     l13975:
 13142     0903                     l13977:
 13143                           
 13144                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1043:     mode = readR
      +                          egister(TMAG5273_REG_SENSOR_CONFIG_2);
 13145     0903  3003               	movlw	3
 13146     0904  3190  206C  3189   	fcall	_readRegister
 13147     0907  0140               	movlb	0	; select bank0
 13148     0908  00B6               	movwf	??_setZAxisRange
 13149     0909  01B7               	clrf	??_setZAxisRange+1
 13150     090A  0836               	movf	??_setZAxisRange,w
 13151     090B  00B9               	movwf	setZAxisRange@mode
 13152     090C  0837               	movf	??_setZAxisRange+1,w
 13153     090D  00BA               	movwf	setZAxisRange@mode+1
 13154     090E                     l13979:
 13155                           
 13156                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1046:     if (zAxisRan
      +                          ge == 0X0)
 13157     090E  0838               	movf	setZAxisRange@zAxisRange,w
 13158     090F  1D03               	btfss	3,2
 13159     0910  2912               	goto	u10831
 13160     0911  2913               	goto	u10830
 13161     0912                     u10831:
 13162     0912  2924               	goto	l13985
 13163     0913                     u10830:
 13164     0913                     l13981:
 13165                           
 13166                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1047:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1049:         bitWrite(mode, 0, 0
      +                          );
 13167     0913  083A               	movf	setZAxisRange@mode+1,w
 13168     0914  00F2               	movwf	bitWrite@reg+1
 13169     0915  0839               	movf	setZAxisRange@mode,w
 13170     0916  00F1               	movwf	bitWrite@reg
 13171     0917  01F3               	clrf	bitWrite@position
 13172     0918  01F4               	clrf	bitWrite@value
 13173     0919  3194  248D  3189   	fcall	_bitWrite
 13174     091C                     l13983:
 13175                           
 13176                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1051:         writeReg
      +                          ister(TMAG5273_REG_SENSOR_CONFIG_2, mode);
 13177     091C  0140               	movlb	0	; select bank0
 13178     091D  0839               	movf	setZAxisRange@mode,w
 13179     091E  00A6               	movwf	writeRegister@data
 13180     091F  3003               	movlw	3
 13181     0920  3190  2008  3189   	fcall	_writeRegister
 13182                           
 13183                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1052:     } else if (z
      +                          AxisRange == 0X1)
 13184     0923  293A               	goto	l13991
 13185     0924                     l13985:
 13186     0924  0338               	decf	setZAxisRange@zAxisRange,w
 13187     0925  1D03               	btfss	3,2
 13188     0926  2928               	goto	u10841
 13189     0927  2929               	goto	u10840
 13190     0928                     u10841:
 13191     0928  293A               	goto	l13991
 13192     0929                     u10840:
 13193     0929                     l13987:
 13194                           
 13195                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1053:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1054:         bitWrite(mode, 0, 1
      +                          );
 13196     0929  083A               	movf	setZAxisRange@mode+1,w
 13197     092A  00F2               	movwf	bitWrite@reg+1
 13198     092B  0839               	movf	setZAxisRange@mode,w
 13199     092C  00F1               	movwf	bitWrite@reg
 13200     092D  01F3               	clrf	bitWrite@position
 13201     092E  01F4               	clrf	bitWrite@value
 13202     092F  0AF4               	incf	bitWrite@value,f
 13203     0930  3194  248D  3189   	fcall	_bitWrite
 13204     0933                     l13989:
 13205                           
 13206                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1055:         writeReg
      +                          ister(TMAG5273_REG_SENSOR_CONFIG_2, mode);
 13207     0933  0140               	movlb	0	; select bank0
 13208     0934  0839               	movf	setZAxisRange@mode,w
 13209     0935  00A6               	movwf	writeRegister@data
 13210     0936  3003               	movlw	3
 13211     0937  3190  2008  3189   	fcall	_writeRegister
 13212     093A                     l13991:
 13213                           
 13214                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1058:     return getEr
      +                          ror();;	Return value of _setZAxisRange is never used
 13215     093A  318D  2589  3189   	fcall	_getError
 13216     093D                     l2332:
 13217     093D  0008               	return
 13218     093E                     __end_of_setZAxisRange:
 13219                           
 13220                           	psect	text3
 13221     09BA                     __ptext3:	
 13222 ;; *************** function _setXYAxisRange *****************
 13223 ;; Defined at:
 13224 ;;		line 1014 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13225 ;; Parameters:    Size  Location     Type
 13226 ;;  xyAxisRange     1    wreg     unsigned char 
 13227 ;; Auto vars:     Size  Location     Type
 13228 ;;  xyAxisRange     1   24[BANK0 ] unsigned char 
 13229 ;;  mode            2   25[BANK0 ] unsigned short 
 13230 ;; Return value:  Size  Location     Type
 13231 ;;                  1    wreg      char 
 13232 ;; Registers used:
 13233 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13234 ;; Tracked objects:
 13235 ;;		On entry : 0/0
 13236 ;;		On exit  : 0/0
 13237 ;;		Unchanged: 0/0
 13238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13240 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13241 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13242 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13243 ;;Total ram usage:        5 bytes
 13244 ;; Hardware stack levels used: 1
 13245 ;; Hardware stack levels required when called: 17
 13246 ;; This function calls:
 13247 ;;		_bitWrite
 13248 ;;		_getError
 13249 ;;		_readRegister
 13250 ;;		_writeRegister
 13251 ;; This function is called by:
 13252 ;;		_begin
 13253 ;; This function uses a non-reentrant model
 13254 ;;
 13255                           
 13256     09BA                     _setXYAxisRange:	
 13257                           ;psect for function _setXYAxisRange
 13258                           
 13259                           
 13260                           ;incstack = 0
 13261 ;; hardware stack exceeded
 13262                           ; Regs used in _setXYAxisRange: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13263                           ;setXYAxisRange@xyAxisRange stored from wreg
 13264     09BA  0140               	movlb	0	; select bank0
 13265     09BB  00B8               	movwf	setXYAxisRange@xyAxisRange
 13266     09BC                     l13955:
 13267     09BC                     l13957:
 13268                           
 13269                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1016:     mode = readR
      +                          egister(TMAG5273_REG_SENSOR_CONFIG_2);
 13270     09BC  3003               	movlw	3
 13271     09BD  3190  206C  3189   	fcall	_readRegister
 13272     09C0  0140               	movlb	0	; select bank0
 13273     09C1  00B6               	movwf	??_setXYAxisRange
 13274     09C2  01B7               	clrf	??_setXYAxisRange+1
 13275     09C3  0836               	movf	??_setXYAxisRange,w
 13276     09C4  00B9               	movwf	setXYAxisRange@mode
 13277     09C5  0837               	movf	??_setXYAxisRange+1,w
 13278     09C6  00BA               	movwf	setXYAxisRange@mode+1
 13279     09C7                     l13959:
 13280                           
 13281                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1019:     if (xyAxisRa
      +                          nge == 0X0)
 13282     09C7  0838               	movf	setXYAxisRange@xyAxisRange,w
 13283     09C8  1D03               	btfss	3,2
 13284     09C9  29CB               	goto	u10811
 13285     09CA  29CC               	goto	u10810
 13286     09CB                     u10811:
 13287     09CB  29DE               	goto	l13965
 13288     09CC                     u10810:
 13289     09CC                     l13961:
 13290                           
 13291                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1020:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1022:         bitWrite(mode, 1, 0
      +                          );
 13292     09CC  083A               	movf	setXYAxisRange@mode+1,w
 13293     09CD  00F2               	movwf	bitWrite@reg+1
 13294     09CE  0839               	movf	setXYAxisRange@mode,w
 13295     09CF  00F1               	movwf	bitWrite@reg
 13296     09D0  01F3               	clrf	bitWrite@position
 13297     09D1  0AF3               	incf	bitWrite@position,f
 13298     09D2  01F4               	clrf	bitWrite@value
 13299     09D3  3194  248D  3189   	fcall	_bitWrite
 13300     09D6                     l13963:
 13301                           
 13302                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1024:         writeReg
      +                          ister(TMAG5273_REG_SENSOR_CONFIG_2, mode);
 13303     09D6  0140               	movlb	0	; select bank0
 13304     09D7  0839               	movf	setXYAxisRange@mode,w
 13305     09D8  00A6               	movwf	writeRegister@data
 13306     09D9  3003               	movlw	3
 13307     09DA  3190  2008  3189   	fcall	_writeRegister
 13308                           
 13309                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1025:     } else if (x
      +                          yAxisRange == 0X1)
 13310     09DD  29F5               	goto	l13971
 13311     09DE                     l13965:
 13312     09DE  0338               	decf	setXYAxisRange@xyAxisRange,w
 13313     09DF  1D03               	btfss	3,2
 13314     09E0  29E2               	goto	u10821
 13315     09E1  29E3               	goto	u10820
 13316     09E2                     u10821:
 13317     09E2  29F5               	goto	l13971
 13318     09E3                     u10820:
 13319     09E3                     l13967:
 13320                           
 13321                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1026:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1027:         bitWrite(mode, 1, 1
      +                          );
 13322     09E3  083A               	movf	setXYAxisRange@mode+1,w
 13323     09E4  00F2               	movwf	bitWrite@reg+1
 13324     09E5  0839               	movf	setXYAxisRange@mode,w
 13325     09E6  00F1               	movwf	bitWrite@reg
 13326     09E7  01F3               	clrf	bitWrite@position
 13327     09E8  0AF3               	incf	bitWrite@position,f
 13328     09E9  01F4               	clrf	bitWrite@value
 13329     09EA  0AF4               	incf	bitWrite@value,f
 13330     09EB  3194  248D  3189   	fcall	_bitWrite
 13331     09EE                     l13969:
 13332                           
 13333                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1028:         writeReg
      +                          ister(TMAG5273_REG_SENSOR_CONFIG_2, mode);
 13334     09EE  0140               	movlb	0	; select bank0
 13335     09EF  0839               	movf	setXYAxisRange@mode,w
 13336     09F0  00A6               	movwf	writeRegister@data
 13337     09F1  3003               	movlw	3
 13338     09F2  3190  2008  3189   	fcall	_writeRegister
 13339     09F5                     l13971:
 13340                           
 13341                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1031:     return getEr
      +                          ror();;	Return value of _setXYAxisRange is never used
 13342     09F5  318D  2589  3189   	fcall	_getError
 13343     09F8                     l2326:
 13344     09F8  0008               	return
 13345     09F9                     __end_of_setXYAxisRange:
 13346                           
 13347                           	psect	text4
 13348     08C4                     __ptext4:	
 13349 ;; *************** function _setTemperatureEn *****************
 13350 ;; Defined at:
 13351 ;;		line 1140 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13352 ;; Parameters:    Size  Location     Type
 13353 ;;  temperatureE    1    wreg     _Bool 
 13354 ;; Auto vars:     Size  Location     Type
 13355 ;;  temperatureE    1   24[BANK0 ] _Bool 
 13356 ;;  mode            2   25[BANK0 ] unsigned short 
 13357 ;; Return value:  Size  Location     Type
 13358 ;;                  1    wreg      char 
 13359 ;; Registers used:
 13360 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13361 ;; Tracked objects:
 13362 ;;		On entry : 0/0
 13363 ;;		On exit  : 0/0
 13364 ;;		Unchanged: 0/0
 13365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13367 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13368 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13369 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13370 ;;Total ram usage:        5 bytes
 13371 ;; Hardware stack levels used: 1
 13372 ;; Hardware stack levels required when called: 17
 13373 ;; This function calls:
 13374 ;;		_bitWrite
 13375 ;;		_getError
 13376 ;;		_readRegister
 13377 ;;		_writeRegister
 13378 ;; This function is called by:
 13379 ;;		_begin
 13380 ;; This function uses a non-reentrant model
 13381 ;;
 13382                           
 13383     08C4                     _setTemperatureEn:	
 13384                           ;psect for function _setTemperatureEn
 13385                           
 13386                           
 13387                           ;incstack = 0
 13388 ;; hardware stack exceeded
 13389                           ; Regs used in _setTemperatureEn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13390                           ;setTemperatureEn@temperatureEnable stored from wreg
 13391     08C4  0140               	movlb	0	; select bank0
 13392     08C5  00B8               	movwf	setTemperatureEn@temperatureEnable
 13393     08C6                     l13903:
 13394     08C6                     l13905:
 13395                           
 13396                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1142:     mode = readR
      +                          egister(TMAG5273_REG_T_CONFIG);
 13397     08C6  3007               	movlw	7
 13398     08C7  3190  206C  3188   	fcall	_readRegister
 13399     08CA  0140               	movlb	0	; select bank0
 13400     08CB  00B6               	movwf	??_setTemperatureEn
 13401     08CC  01B7               	clrf	??_setTemperatureEn+1
 13402     08CD  0836               	movf	??_setTemperatureEn,w
 13403     08CE  00B9               	movwf	setTemperatureEn@mode
 13404     08CF  0837               	movf	??_setTemperatureEn+1,w
 13405     08D0  00BA               	movwf	setTemperatureEn@mode+1
 13406     08D1                     l13907:
 13407                           
 13408                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1145:     if (temperat
      +                          ureEnable == 0)
 13409     08D1  0838               	movf	setTemperatureEn@temperatureEnable,w
 13410     08D2  1D03               	btfss	3,2
 13411     08D3  28D5               	goto	u10751
 13412     08D4  28D6               	goto	u10750
 13413     08D5                     u10751:
 13414     08D5  28E7               	goto	l13913
 13415     08D6                     u10750:
 13416     08D6                     l13909:
 13417                           
 13418                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1146:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1148:         bitWrite(mode, 0, 0
      +                          );
 13419     08D6  083A               	movf	setTemperatureEn@mode+1,w
 13420     08D7  00F2               	movwf	bitWrite@reg+1
 13421     08D8  0839               	movf	setTemperatureEn@mode,w
 13422     08D9  00F1               	movwf	bitWrite@reg
 13423     08DA  01F3               	clrf	bitWrite@position
 13424     08DB  01F4               	clrf	bitWrite@value
 13425     08DC  3194  248D  3188   	fcall	_bitWrite
 13426     08DF                     l13911:
 13427                           
 13428                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1150:         writeReg
      +                          ister(TMAG5273_REG_T_CONFIG, mode);
 13429     08DF  0140               	movlb	0	; select bank0
 13430     08E0  0839               	movf	setTemperatureEn@mode,w
 13431     08E1  00A6               	movwf	writeRegister@data
 13432     08E2  3007               	movlw	7
 13433     08E3  3190  2008  3188   	fcall	_writeRegister
 13434                           
 13435                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1151:     } else if (t
      +                          emperatureEnable == 1)
 13436     08E6  28FD               	goto	l13919
 13437     08E7                     l13913:
 13438     08E7  0338               	decf	setTemperatureEn@temperatureEnable,w
 13439     08E8  1D03               	btfss	3,2
 13440     08E9  28EB               	goto	u10761
 13441     08EA  28EC               	goto	u10760
 13442     08EB                     u10761:
 13443     08EB  28FD               	goto	l13919
 13444     08EC                     u10760:
 13445     08EC                     l13915:
 13446                           
 13447                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1152:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1153:         bitWrite(mode, 0, 1
      +                          );
 13448     08EC  083A               	movf	setTemperatureEn@mode+1,w
 13449     08ED  00F2               	movwf	bitWrite@reg+1
 13450     08EE  0839               	movf	setTemperatureEn@mode,w
 13451     08EF  00F1               	movwf	bitWrite@reg
 13452     08F0  01F3               	clrf	bitWrite@position
 13453     08F1  01F4               	clrf	bitWrite@value
 13454     08F2  0AF4               	incf	bitWrite@value,f
 13455     08F3  3194  248D  3188   	fcall	_bitWrite
 13456     08F6                     l13917:
 13457                           
 13458                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1154:         writeReg
      +                          ister(TMAG5273_REG_T_CONFIG, mode);
 13459     08F6  0140               	movlb	0	; select bank0
 13460     08F7  0839               	movf	setTemperatureEn@mode,w
 13461     08F8  00A6               	movwf	writeRegister@data
 13462     08F9  3007               	movlw	7
 13463     08FA  3190  2008  3188   	fcall	_writeRegister
 13464     08FD                     l13919:
 13465                           
 13466                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1157:     return getEr
      +                          ror();;	Return value of _setTemperatureEn is never used
 13467     08FD  318D  2589  3188   	fcall	_getError
 13468     0900                     l2350:
 13469     0900  0008               	return
 13470     0901                     __end_of_setTemperatureEn:
 13471                           
 13472                           	psect	text5
 13473     0706                     __ptext5:	
 13474 ;; *************** function _setOperatingMode *****************
 13475 ;; Defined at:
 13476 ;;		line 533 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13477 ;; Parameters:    Size  Location     Type
 13478 ;;  opMode          1    wreg     unsigned char 
 13479 ;; Auto vars:     Size  Location     Type
 13480 ;;  opMode          1   24[BANK0 ] unsigned char 
 13481 ;;  mode            2   25[BANK0 ] unsigned short 
 13482 ;; Return value:  Size  Location     Type
 13483 ;;                  1    wreg      char 
 13484 ;; Registers used:
 13485 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13486 ;; Tracked objects:
 13487 ;;		On entry : 0/0
 13488 ;;		On exit  : 0/0
 13489 ;;		Unchanged: 0/0
 13490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13492 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13493 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13494 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13495 ;;Total ram usage:        5 bytes
 13496 ;; Hardware stack levels used: 1
 13497 ;; Hardware stack levels required when called: 17
 13498 ;; This function calls:
 13499 ;;		_bitWrite
 13500 ;;		_getError
 13501 ;;		_readRegister
 13502 ;;		_writeRegister
 13503 ;; This function is called by:
 13504 ;;		_begin
 13505 ;; This function uses a non-reentrant model
 13506 ;;
 13507                           
 13508     0706                     _setOperatingMode:	
 13509                           ;psect for function _setOperatingMode
 13510                           
 13511                           
 13512                           ;incstack = 0
 13513 ;; hardware stack exceeded
 13514                           ; Regs used in _setOperatingMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13515                           ;setOperatingMode@opMode stored from wreg
 13516     0706  0140               	movlb	0	; select bank0
 13517     0707  00B8               	movwf	setOperatingMode@opMode
 13518     0708                     l13923:
 13519     0708                     l13925:
 13520                           
 13521                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 535:     mode = readRe
      +                          gister(TMAG5273_REG_DEVICE_CONFIG_2);
 13522     0708  3001               	movlw	1
 13523     0709  3190  206C  3187   	fcall	_readRegister
 13524     070C  0140               	movlb	0	; select bank0
 13525     070D  00B6               	movwf	??_setOperatingMode
 13526     070E  01B7               	clrf	??_setOperatingMode+1
 13527     070F  0836               	movf	??_setOperatingMode,w
 13528     0710  00B9               	movwf	setOperatingMode@mode
 13529     0711  0837               	movf	??_setOperatingMode+1,w
 13530     0712  00BA               	movwf	setOperatingMode@mode+1
 13531     0713                     l13927:
 13532                           
 13533                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 538:     if (opMode ==
      +                           0)
 13534     0713  0838               	movf	setOperatingMode@opMode,w
 13535     0714  1D03               	btfss	3,2
 13536     0715  2F17               	goto	u10771
 13537     0716  2F18               	goto	u10770
 13538     0717                     u10771:
 13539     0717  2F34               	goto	l13933
 13540     0718                     u10770:
 13541     0718                     l13929:
 13542                           
 13543                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 539:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 541:         bitWrite(mode, 0, 0);
 13544     0718  083A               	movf	setOperatingMode@mode+1,w
 13545     0719  00F2               	movwf	bitWrite@reg+1
 13546     071A  0839               	movf	setOperatingMode@mode,w
 13547     071B  00F1               	movwf	bitWrite@reg
 13548     071C  01F3               	clrf	bitWrite@position
 13549     071D  01F4               	clrf	bitWrite@value
 13550     071E  3194  248D  3187   	fcall	_bitWrite
 13551                           
 13552                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 543:         bitWrite(
      +                          mode, 1, 0);
 13553     0721  0140               	movlb	0	; select bank0
 13554     0722  083A               	movf	setOperatingMode@mode+1,w
 13555     0723  00F2               	movwf	bitWrite@reg+1
 13556     0724  0839               	movf	setOperatingMode@mode,w
 13557     0725  00F1               	movwf	bitWrite@reg
 13558     0726  01F3               	clrf	bitWrite@position
 13559     0727  0AF3               	incf	bitWrite@position,f
 13560     0728  01F4               	clrf	bitWrite@value
 13561     0729  3194  248D  3187   	fcall	_bitWrite
 13562     072C                     l13931:
 13563                           
 13564                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 544:         writeRegi
      +                          ster(TMAG5273_REG_DEVICE_CONFIG_2, mode);
 13565     072C  0140               	movlb	0	; select bank0
 13566     072D  0839               	movf	setOperatingMode@mode,w
 13567     072E  00A6               	movwf	writeRegister@data
 13568     072F  3001               	movlw	1
 13569     0730  3190  2008  3187   	fcall	_writeRegister
 13570                           
 13571                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 545:     } else if (op
      +                          Mode == 0X1)
 13572     0733  2F9D               	goto	l13951
 13573     0734                     l13933:
 13574     0734  0338               	decf	setOperatingMode@opMode,w
 13575     0735  1D03               	btfss	3,2
 13576     0736  2F38               	goto	u10781
 13577     0737  2F39               	goto	u10780
 13578     0738                     u10781:
 13579     0738  2F56               	goto	l13939
 13580     0739                     u10780:
 13581     0739                     l13935:
 13582                           
 13583                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 546:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 548:         bitWrite(mode, 0, 1);
 13584     0739  083A               	movf	setOperatingMode@mode+1,w
 13585     073A  00F2               	movwf	bitWrite@reg+1
 13586     073B  0839               	movf	setOperatingMode@mode,w
 13587     073C  00F1               	movwf	bitWrite@reg
 13588     073D  01F3               	clrf	bitWrite@position
 13589     073E  01F4               	clrf	bitWrite@value
 13590     073F  0AF4               	incf	bitWrite@value,f
 13591     0740  3194  248D  3187   	fcall	_bitWrite
 13592                           
 13593                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 550:         bitWrite(
      +                          mode, 1, 0);
 13594     0743  0140               	movlb	0	; select bank0
 13595     0744  083A               	movf	setOperatingMode@mode+1,w
 13596     0745  00F2               	movwf	bitWrite@reg+1
 13597     0746  0839               	movf	setOperatingMode@mode,w
 13598     0747  00F1               	movwf	bitWrite@reg
 13599     0748  01F3               	clrf	bitWrite@position
 13600     0749  0AF3               	incf	bitWrite@position,f
 13601     074A  01F4               	clrf	bitWrite@value
 13602     074B  3194  248D  3187   	fcall	_bitWrite
 13603     074E                     l13937:
 13604                           
 13605                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 551:         writeRegi
      +                          ster(TMAG5273_REG_DEVICE_CONFIG_2, mode);
 13606     074E  0140               	movlb	0	; select bank0
 13607     074F  0839               	movf	setOperatingMode@mode,w
 13608     0750  00A6               	movwf	writeRegister@data
 13609     0751  3001               	movlw	1
 13610     0752  3190  2008  3187   	fcall	_writeRegister
 13611                           
 13612                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 552:     } else if (op
      +                          Mode == 0X2)
 13613     0755  2F9D               	goto	l13951
 13614     0756                     l13939:
 13615     0756  3002               	movlw	2
 13616     0757  0638               	xorwf	setOperatingMode@opMode,w
 13617     0758  1D03               	btfss	3,2
 13618     0759  2F5B               	goto	u10791
 13619     075A  2F5C               	goto	u10790
 13620     075B                     u10791:
 13621     075B  2F79               	goto	l13945
 13622     075C                     u10790:
 13623     075C                     l13941:
 13624                           
 13625                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 553:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 554:         bitWrite(mode, 0, 0);
 13626     075C  083A               	movf	setOperatingMode@mode+1,w
 13627     075D  00F2               	movwf	bitWrite@reg+1
 13628     075E  0839               	movf	setOperatingMode@mode,w
 13629     075F  00F1               	movwf	bitWrite@reg
 13630     0760  01F3               	clrf	bitWrite@position
 13631     0761  01F4               	clrf	bitWrite@value
 13632     0762  3194  248D  3187   	fcall	_bitWrite
 13633                           
 13634                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 555:         bitWrite(
      +                          mode, 1, 1);
 13635     0765  0140               	movlb	0	; select bank0
 13636     0766  083A               	movf	setOperatingMode@mode+1,w
 13637     0767  00F2               	movwf	bitWrite@reg+1
 13638     0768  0839               	movf	setOperatingMode@mode,w
 13639     0769  00F1               	movwf	bitWrite@reg
 13640     076A  01F3               	clrf	bitWrite@position
 13641     076B  0AF3               	incf	bitWrite@position,f
 13642     076C  01F4               	clrf	bitWrite@value
 13643     076D  0AF4               	incf	bitWrite@value,f
 13644     076E  3194  248D  3187   	fcall	_bitWrite
 13645     0771                     l13943:
 13646                           
 13647                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 556:         writeRegi
      +                          ster(TMAG5273_REG_DEVICE_CONFIG_2, mode);
 13648     0771  0140               	movlb	0	; select bank0
 13649     0772  0839               	movf	setOperatingMode@mode,w
 13650     0773  00A6               	movwf	writeRegister@data
 13651     0774  3001               	movlw	1
 13652     0775  3190  2008  3187   	fcall	_writeRegister
 13653                           
 13654                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 557:     } else if (op
      +                          Mode == 0X3)
 13655     0778  2F9D               	goto	l13951
 13656     0779                     l13945:
 13657     0779  3003               	movlw	3
 13658     077A  0638               	xorwf	setOperatingMode@opMode,w
 13659     077B  1D03               	btfss	3,2
 13660     077C  2F7E               	goto	u10801
 13661     077D  2F7F               	goto	u10800
 13662     077E                     u10801:
 13663     077E  2F9D               	goto	l2216
 13664     077F                     u10800:
 13665     077F                     l13947:
 13666                           
 13667                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 558:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 559:         bitWrite(mode, 0, 1);
 13668     077F  083A               	movf	setOperatingMode@mode+1,w
 13669     0780  00F2               	movwf	bitWrite@reg+1
 13670     0781  0839               	movf	setOperatingMode@mode,w
 13671     0782  00F1               	movwf	bitWrite@reg
 13672     0783  01F3               	clrf	bitWrite@position
 13673     0784  01F4               	clrf	bitWrite@value
 13674     0785  0AF4               	incf	bitWrite@value,f
 13675     0786  3194  248D  3187   	fcall	_bitWrite
 13676                           
 13677                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 560:         bitWrite(
      +                          mode, 1, 1);
 13678     0789  0140               	movlb	0	; select bank0
 13679     078A  083A               	movf	setOperatingMode@mode+1,w
 13680     078B  00F2               	movwf	bitWrite@reg+1
 13681     078C  0839               	movf	setOperatingMode@mode,w
 13682     078D  00F1               	movwf	bitWrite@reg
 13683     078E  01F3               	clrf	bitWrite@position
 13684     078F  0AF3               	incf	bitWrite@position,f
 13685     0790  01F4               	clrf	bitWrite@value
 13686     0791  0AF4               	incf	bitWrite@value,f
 13687     0792  3194  248D  3187   	fcall	_bitWrite
 13688     0795                     l13949:
 13689                           
 13690                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 561:         writeRegi
      +                          ster(TMAG5273_REG_DEVICE_CONFIG_2, mode);
 13691     0795  0140               	movlb	0	; select bank0
 13692     0796  0839               	movf	setOperatingMode@mode,w
 13693     0797  00A6               	movwf	writeRegister@data
 13694     0798  3001               	movlw	1
 13695     0799  3190  2008  3187   	fcall	_writeRegister
 13696     079C  2F9D               	goto	l13951
 13697     079D                     l2216:
 13698     079D                     l13951:
 13699                           
 13700                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 564:     return getErr
      +                          or();;	Return value of _setOperatingMode is never used
 13701     079D  318D  2589  3187   	fcall	_getError
 13702     07A0                     l2220:
 13703     07A0  0008               	return
 13704     07A1                     __end_of_setOperatingMode:
 13705                           
 13706                           	psect	text6
 13707     00A8                     __ptext6:	
 13708 ;; *************** function _setMagneticChannel *****************
 13709 ;; Defined at:
 13710 ;;		line 585 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13711 ;; Parameters:    Size  Location     Type
 13712 ;;  channelMode     1    wreg     unsigned char 
 13713 ;; Auto vars:     Size  Location     Type
 13714 ;;  channelMode     1   24[BANK0 ] unsigned char 
 13715 ;;  mode            2   25[BANK0 ] unsigned short 
 13716 ;; Return value:  Size  Location     Type
 13717 ;;                  1    wreg      char 
 13718 ;; Registers used:
 13719 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13720 ;; Tracked objects:
 13721 ;;		On entry : 0/0
 13722 ;;		On exit  : 0/0
 13723 ;;		Unchanged: 0/0
 13724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13726 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13727 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13728 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13729 ;;Total ram usage:        5 bytes
 13730 ;; Hardware stack levels used: 1
 13731 ;; Hardware stack levels required when called: 17
 13732 ;; This function calls:
 13733 ;;		_bitWrite
 13734 ;;		_getError
 13735 ;;		_readRegister
 13736 ;;		_writeRegister
 13737 ;; This function is called by:
 13738 ;;		_begin
 13739 ;; This function uses a non-reentrant model
 13740 ;;
 13741                           
 13742     00A8                     _setMagneticChannel:	
 13743                           ;psect for function _setMagneticChannel
 13744                           
 13745                           
 13746                           ;incstack = 0
 13747 ;; hardware stack exceeded
 13748                           ; Regs used in _setMagneticChannel: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13749                           ;setMagneticChannel@channelMode stored from wreg
 13750     00A8  0140               	movlb	0	; select bank0
 13751     00A9  00B8               	movwf	setMagneticChannel@channelMode
 13752     00AA                     l13823:
 13753     00AA                     l13825:
 13754                           
 13755                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 587:     mode = readRe
      +                          gister(TMAG5273_REG_SENSOR_CONFIG_1);
 13756     00AA  3002               	movlw	2
 13757     00AB  3190  206C  3180   	fcall	_readRegister
 13758     00AE  0140               	movlb	0	; select bank0
 13759     00AF  00B6               	movwf	??_setMagneticChannel
 13760     00B0  01B7               	clrf	??_setMagneticChannel+1
 13761     00B1  0836               	movf	??_setMagneticChannel,w
 13762     00B2  00B9               	movwf	setMagneticChannel@mode
 13763     00B3  0837               	movf	??_setMagneticChannel+1,w
 13764     00B4  00BA               	movwf	setMagneticChannel@mode+1
 13765     00B5                     l13827:
 13766                           
 13767                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 590:     if (channelMo
      +                          de == 0X0)
 13768     00B5  0838               	movf	setMagneticChannel@channelMode,w
 13769     00B6  1D03               	btfss	3,2
 13770     00B7  28B9               	goto	u10631
 13771     00B8  28BA               	goto	u10630
 13772     00B9                     u10631:
 13773     00B9  28ED               	goto	l13833
 13774     00BA                     u10630:
 13775     00BA                     l13829:
 13776                           
 13777                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 591:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 593:         bitWrite(mode, 4, 0);
 13778     00BA  083A               	movf	setMagneticChannel@mode+1,w
 13779     00BB  00F2               	movwf	bitWrite@reg+1
 13780     00BC  0839               	movf	setMagneticChannel@mode,w
 13781     00BD  00F1               	movwf	bitWrite@reg
 13782     00BE  3004               	movlw	4
 13783     00BF  00F3               	movwf	bitWrite@position
 13784     00C0  01F4               	clrf	bitWrite@value
 13785     00C1  3194  248D  3180   	fcall	_bitWrite
 13786                           
 13787                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 595:         bitWrite(
      +                          mode, 5, 0);
 13788     00C4  0140               	movlb	0	; select bank0
 13789     00C5  083A               	movf	setMagneticChannel@mode+1,w
 13790     00C6  00F2               	movwf	bitWrite@reg+1
 13791     00C7  0839               	movf	setMagneticChannel@mode,w
 13792     00C8  00F1               	movwf	bitWrite@reg
 13793     00C9  3005               	movlw	5
 13794     00CA  00F3               	movwf	bitWrite@position
 13795     00CB  01F4               	clrf	bitWrite@value
 13796     00CC  3194  248D  3180   	fcall	_bitWrite
 13797                           
 13798                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 597:         bitWrite(
      +                          mode, 6, 0);
 13799     00CF  0140               	movlb	0	; select bank0
 13800     00D0  083A               	movf	setMagneticChannel@mode+1,w
 13801     00D1  00F2               	movwf	bitWrite@reg+1
 13802     00D2  0839               	movf	setMagneticChannel@mode,w
 13803     00D3  00F1               	movwf	bitWrite@reg
 13804     00D4  3006               	movlw	6
 13805     00D5  00F3               	movwf	bitWrite@position
 13806     00D6  01F4               	clrf	bitWrite@value
 13807     00D7  3194  248D  3180   	fcall	_bitWrite
 13808                           
 13809                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 599:         bitWrite(
      +                          mode, 7, 0);
 13810     00DA  0140               	movlb	0	; select bank0
 13811     00DB  083A               	movf	setMagneticChannel@mode+1,w
 13812     00DC  00F2               	movwf	bitWrite@reg+1
 13813     00DD  0839               	movf	setMagneticChannel@mode,w
 13814     00DE  00F1               	movwf	bitWrite@reg
 13815     00DF  3007               	movlw	7
 13816     00E0  00F3               	movwf	bitWrite@position
 13817     00E1  01F4               	clrf	bitWrite@value
 13818     00E2  3194  248D  3180   	fcall	_bitWrite
 13819     00E5                     l13831:
 13820                           
 13821                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 601:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 13822     00E5  0140               	movlb	0	; select bank0
 13823     00E6  0839               	movf	setMagneticChannel@mode,w
 13824     00E7  00A6               	movwf	writeRegister@data
 13825     00E8  3002               	movlw	2
 13826     00E9  3190  2008  3180   	fcall	_writeRegister
 13827                           
 13828                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 603:     } else if (ch
      +                          annelMode == 0X1)
 13829     00EC  2B73               	goto	l13899
 13830     00ED                     l13833:
 13831     00ED  0338               	decf	setMagneticChannel@channelMode,w
 13832     00EE  1D03               	btfss	3,2
 13833     00EF  28F1               	goto	u10641
 13834     00F0  28F2               	goto	u10640
 13835     00F1                     u10641:
 13836     00F1  2926               	goto	l13839
 13837     00F2                     u10640:
 13838     00F2                     l13835:
 13839                           
 13840                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 604:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 605:         bitWrite(mode, 4, 1);
 13841     00F2  083A               	movf	setMagneticChannel@mode+1,w
 13842     00F3  00F2               	movwf	bitWrite@reg+1
 13843     00F4  0839               	movf	setMagneticChannel@mode,w
 13844     00F5  00F1               	movwf	bitWrite@reg
 13845     00F6  3004               	movlw	4
 13846     00F7  00F3               	movwf	bitWrite@position
 13847     00F8  01F4               	clrf	bitWrite@value
 13848     00F9  0AF4               	incf	bitWrite@value,f
 13849     00FA  3194  248D  3180   	fcall	_bitWrite
 13850                           
 13851                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 606:         bitWrite(
      +                          mode, 5, 0);
 13852     00FD  0140               	movlb	0	; select bank0
 13853     00FE  083A               	movf	setMagneticChannel@mode+1,w
 13854     00FF  00F2               	movwf	bitWrite@reg+1
 13855     0100  0839               	movf	setMagneticChannel@mode,w
 13856     0101  00F1               	movwf	bitWrite@reg
 13857     0102  3005               	movlw	5
 13858     0103  00F3               	movwf	bitWrite@position
 13859     0104  01F4               	clrf	bitWrite@value
 13860     0105  3194  248D  3180   	fcall	_bitWrite
 13861                           
 13862                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 607:         bitWrite(
      +                          mode, 6, 0);
 13863     0108  0140               	movlb	0	; select bank0
 13864     0109  083A               	movf	setMagneticChannel@mode+1,w
 13865     010A  00F2               	movwf	bitWrite@reg+1
 13866     010B  0839               	movf	setMagneticChannel@mode,w
 13867     010C  00F1               	movwf	bitWrite@reg
 13868     010D  3006               	movlw	6
 13869     010E  00F3               	movwf	bitWrite@position
 13870     010F  01F4               	clrf	bitWrite@value
 13871     0110  3194  248D  3180   	fcall	_bitWrite
 13872                           
 13873                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 608:         bitWrite(
      +                          mode, 7, 0);
 13874     0113  0140               	movlb	0	; select bank0
 13875     0114  083A               	movf	setMagneticChannel@mode+1,w
 13876     0115  00F2               	movwf	bitWrite@reg+1
 13877     0116  0839               	movf	setMagneticChannel@mode,w
 13878     0117  00F1               	movwf	bitWrite@reg
 13879     0118  3007               	movlw	7
 13880     0119  00F3               	movwf	bitWrite@position
 13881     011A  01F4               	clrf	bitWrite@value
 13882     011B  3194  248D  3180   	fcall	_bitWrite
 13883     011E                     l13837:
 13884                           
 13885                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 609:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 13886     011E  0140               	movlb	0	; select bank0
 13887     011F  0839               	movf	setMagneticChannel@mode,w
 13888     0120  00A6               	movwf	writeRegister@data
 13889     0121  3002               	movlw	2
 13890     0122  3190  2008  3180   	fcall	_writeRegister
 13891                           
 13892                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 610:     } else if (ch
      +                          annelMode == 0X2)
 13893     0125  2B73               	goto	l13899
 13894     0126                     l13839:
 13895     0126  3002               	movlw	2
 13896     0127  0638               	xorwf	setMagneticChannel@channelMode,w
 13897     0128  1D03               	btfss	3,2
 13898     0129  292B               	goto	u10651
 13899     012A  292C               	goto	u10650
 13900     012B                     u10651:
 13901     012B  2960               	goto	l13845
 13902     012C                     u10650:
 13903     012C                     l13841:
 13904                           
 13905                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 611:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 612:         bitWrite(mode, 4, 0);
 13906     012C  083A               	movf	setMagneticChannel@mode+1,w
 13907     012D  00F2               	movwf	bitWrite@reg+1
 13908     012E  0839               	movf	setMagneticChannel@mode,w
 13909     012F  00F1               	movwf	bitWrite@reg
 13910     0130  3004               	movlw	4
 13911     0131  00F3               	movwf	bitWrite@position
 13912     0132  01F4               	clrf	bitWrite@value
 13913     0133  3194  248D  3180   	fcall	_bitWrite
 13914                           
 13915                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 613:         bitWrite(
      +                          mode, 5, 1);
 13916     0136  0140               	movlb	0	; select bank0
 13917     0137  083A               	movf	setMagneticChannel@mode+1,w
 13918     0138  00F2               	movwf	bitWrite@reg+1
 13919     0139  0839               	movf	setMagneticChannel@mode,w
 13920     013A  00F1               	movwf	bitWrite@reg
 13921     013B  3005               	movlw	5
 13922     013C  00F3               	movwf	bitWrite@position
 13923     013D  01F4               	clrf	bitWrite@value
 13924     013E  0AF4               	incf	bitWrite@value,f
 13925     013F  3194  248D  3180   	fcall	_bitWrite
 13926                           
 13927                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 614:         bitWrite(
      +                          mode, 6, 0);
 13928     0142  0140               	movlb	0	; select bank0
 13929     0143  083A               	movf	setMagneticChannel@mode+1,w
 13930     0144  00F2               	movwf	bitWrite@reg+1
 13931     0145  0839               	movf	setMagneticChannel@mode,w
 13932     0146  00F1               	movwf	bitWrite@reg
 13933     0147  3006               	movlw	6
 13934     0148  00F3               	movwf	bitWrite@position
 13935     0149  01F4               	clrf	bitWrite@value
 13936     014A  3194  248D  3180   	fcall	_bitWrite
 13937                           
 13938                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 615:         bitWrite(
      +                          mode, 7, 0);
 13939     014D  0140               	movlb	0	; select bank0
 13940     014E  083A               	movf	setMagneticChannel@mode+1,w
 13941     014F  00F2               	movwf	bitWrite@reg+1
 13942     0150  0839               	movf	setMagneticChannel@mode,w
 13943     0151  00F1               	movwf	bitWrite@reg
 13944     0152  3007               	movlw	7
 13945     0153  00F3               	movwf	bitWrite@position
 13946     0154  01F4               	clrf	bitWrite@value
 13947     0155  3194  248D  3180   	fcall	_bitWrite
 13948     0158                     l13843:
 13949                           
 13950                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 616:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 13951     0158  0140               	movlb	0	; select bank0
 13952     0159  0839               	movf	setMagneticChannel@mode,w
 13953     015A  00A6               	movwf	writeRegister@data
 13954     015B  3002               	movlw	2
 13955     015C  3190  2008  3180   	fcall	_writeRegister
 13956                           
 13957                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 617:     } else if (ch
      +                          annelMode == 0X3)
 13958     015F  2B73               	goto	l13899
 13959     0160                     l13845:
 13960     0160  3003               	movlw	3
 13961     0161  0638               	xorwf	setMagneticChannel@channelMode,w
 13962     0162  1D03               	btfss	3,2
 13963     0163  2965               	goto	u10661
 13964     0164  2966               	goto	u10660
 13965     0165                     u10661:
 13966     0165  299B               	goto	l13851
 13967     0166                     u10660:
 13968     0166                     l13847:
 13969                           
 13970                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 618:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 619:         bitWrite(mode, 4, 1);
 13971     0166  083A               	movf	setMagneticChannel@mode+1,w
 13972     0167  00F2               	movwf	bitWrite@reg+1
 13973     0168  0839               	movf	setMagneticChannel@mode,w
 13974     0169  00F1               	movwf	bitWrite@reg
 13975     016A  3004               	movlw	4
 13976     016B  00F3               	movwf	bitWrite@position
 13977     016C  01F4               	clrf	bitWrite@value
 13978     016D  0AF4               	incf	bitWrite@value,f
 13979     016E  3194  248D  3180   	fcall	_bitWrite
 13980                           
 13981                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 620:         bitWrite(
      +                          mode, 5, 1);
 13982     0171  0140               	movlb	0	; select bank0
 13983     0172  083A               	movf	setMagneticChannel@mode+1,w
 13984     0173  00F2               	movwf	bitWrite@reg+1
 13985     0174  0839               	movf	setMagneticChannel@mode,w
 13986     0175  00F1               	movwf	bitWrite@reg
 13987     0176  3005               	movlw	5
 13988     0177  00F3               	movwf	bitWrite@position
 13989     0178  01F4               	clrf	bitWrite@value
 13990     0179  0AF4               	incf	bitWrite@value,f
 13991     017A  3194  248D  3180   	fcall	_bitWrite
 13992                           
 13993                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 621:         bitWrite(
      +                          mode, 6, 0);
 13994     017D  0140               	movlb	0	; select bank0
 13995     017E  083A               	movf	setMagneticChannel@mode+1,w
 13996     017F  00F2               	movwf	bitWrite@reg+1
 13997     0180  0839               	movf	setMagneticChannel@mode,w
 13998     0181  00F1               	movwf	bitWrite@reg
 13999     0182  3006               	movlw	6
 14000     0183  00F3               	movwf	bitWrite@position
 14001     0184  01F4               	clrf	bitWrite@value
 14002     0185  3194  248D  3180   	fcall	_bitWrite
 14003                           
 14004                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 622:         bitWrite(
      +                          mode, 7, 0);
 14005     0188  0140               	movlb	0	; select bank0
 14006     0189  083A               	movf	setMagneticChannel@mode+1,w
 14007     018A  00F2               	movwf	bitWrite@reg+1
 14008     018B  0839               	movf	setMagneticChannel@mode,w
 14009     018C  00F1               	movwf	bitWrite@reg
 14010     018D  3007               	movlw	7
 14011     018E  00F3               	movwf	bitWrite@position
 14012     018F  01F4               	clrf	bitWrite@value
 14013     0190  3194  248D  3180   	fcall	_bitWrite
 14014     0193                     l13849:
 14015                           
 14016                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 623:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14017     0193  0140               	movlb	0	; select bank0
 14018     0194  0839               	movf	setMagneticChannel@mode,w
 14019     0195  00A6               	movwf	writeRegister@data
 14020     0196  3002               	movlw	2
 14021     0197  3190  2008  3180   	fcall	_writeRegister
 14022                           
 14023                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 624:     } else if (ch
      +                          annelMode == 0X4)
 14024     019A  2B73               	goto	l13899
 14025     019B                     l13851:
 14026     019B  3004               	movlw	4
 14027     019C  0638               	xorwf	setMagneticChannel@channelMode,w
 14028     019D  1D03               	btfss	3,2
 14029     019E  29A0               	goto	u10671
 14030     019F  29A1               	goto	u10670
 14031     01A0                     u10671:
 14032     01A0  29D5               	goto	l13857
 14033     01A1                     u10670:
 14034     01A1                     l13853:
 14035                           
 14036                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 625:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 626:         bitWrite(mode, 4, 0);
 14037     01A1  083A               	movf	setMagneticChannel@mode+1,w
 14038     01A2  00F2               	movwf	bitWrite@reg+1
 14039     01A3  0839               	movf	setMagneticChannel@mode,w
 14040     01A4  00F1               	movwf	bitWrite@reg
 14041     01A5  3004               	movlw	4
 14042     01A6  00F3               	movwf	bitWrite@position
 14043     01A7  01F4               	clrf	bitWrite@value
 14044     01A8  3194  248D  3180   	fcall	_bitWrite
 14045                           
 14046                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 627:         bitWrite(
      +                          mode, 5, 0);
 14047     01AB  0140               	movlb	0	; select bank0
 14048     01AC  083A               	movf	setMagneticChannel@mode+1,w
 14049     01AD  00F2               	movwf	bitWrite@reg+1
 14050     01AE  0839               	movf	setMagneticChannel@mode,w
 14051     01AF  00F1               	movwf	bitWrite@reg
 14052     01B0  3005               	movlw	5
 14053     01B1  00F3               	movwf	bitWrite@position
 14054     01B2  01F4               	clrf	bitWrite@value
 14055     01B3  3194  248D  3180   	fcall	_bitWrite
 14056                           
 14057                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 628:         bitWrite(
      +                          mode, 6, 1);
 14058     01B6  0140               	movlb	0	; select bank0
 14059     01B7  083A               	movf	setMagneticChannel@mode+1,w
 14060     01B8  00F2               	movwf	bitWrite@reg+1
 14061     01B9  0839               	movf	setMagneticChannel@mode,w
 14062     01BA  00F1               	movwf	bitWrite@reg
 14063     01BB  3006               	movlw	6
 14064     01BC  00F3               	movwf	bitWrite@position
 14065     01BD  01F4               	clrf	bitWrite@value
 14066     01BE  0AF4               	incf	bitWrite@value,f
 14067     01BF  3194  248D  3180   	fcall	_bitWrite
 14068                           
 14069                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 629:         bitWrite(
      +                          mode, 7, 0);
 14070     01C2  0140               	movlb	0	; select bank0
 14071     01C3  083A               	movf	setMagneticChannel@mode+1,w
 14072     01C4  00F2               	movwf	bitWrite@reg+1
 14073     01C5  0839               	movf	setMagneticChannel@mode,w
 14074     01C6  00F1               	movwf	bitWrite@reg
 14075     01C7  3007               	movlw	7
 14076     01C8  00F3               	movwf	bitWrite@position
 14077     01C9  01F4               	clrf	bitWrite@value
 14078     01CA  3194  248D  3180   	fcall	_bitWrite
 14079     01CD                     l13855:
 14080                           
 14081                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 630:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14082     01CD  0140               	movlb	0	; select bank0
 14083     01CE  0839               	movf	setMagneticChannel@mode,w
 14084     01CF  00A6               	movwf	writeRegister@data
 14085     01D0  3002               	movlw	2
 14086     01D1  3190  2008  3180   	fcall	_writeRegister
 14087                           
 14088                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 631:     } else if (ch
      +                          annelMode == 0X5)
 14089     01D4  2B73               	goto	l13899
 14090     01D5                     l13857:
 14091     01D5  3005               	movlw	5
 14092     01D6  0638               	xorwf	setMagneticChannel@channelMode,w
 14093     01D7  1D03               	btfss	3,2
 14094     01D8  29DA               	goto	u10681
 14095     01D9  29DB               	goto	u10680
 14096     01DA                     u10681:
 14097     01DA  2A10               	goto	l13863
 14098     01DB                     u10680:
 14099     01DB                     l13859:
 14100                           
 14101                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 632:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 633:         bitWrite(mode, 4, 1);
 14102     01DB  083A               	movf	setMagneticChannel@mode+1,w
 14103     01DC  00F2               	movwf	bitWrite@reg+1
 14104     01DD  0839               	movf	setMagneticChannel@mode,w
 14105     01DE  00F1               	movwf	bitWrite@reg
 14106     01DF  3004               	movlw	4
 14107     01E0  00F3               	movwf	bitWrite@position
 14108     01E1  01F4               	clrf	bitWrite@value
 14109     01E2  0AF4               	incf	bitWrite@value,f
 14110     01E3  3194  248D  3180   	fcall	_bitWrite
 14111                           
 14112                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 634:         bitWrite(
      +                          mode, 5, 0);
 14113     01E6  0140               	movlb	0	; select bank0
 14114     01E7  083A               	movf	setMagneticChannel@mode+1,w
 14115     01E8  00F2               	movwf	bitWrite@reg+1
 14116     01E9  0839               	movf	setMagneticChannel@mode,w
 14117     01EA  00F1               	movwf	bitWrite@reg
 14118     01EB  3005               	movlw	5
 14119     01EC  00F3               	movwf	bitWrite@position
 14120     01ED  01F4               	clrf	bitWrite@value
 14121     01EE  3194  248D  3180   	fcall	_bitWrite
 14122                           
 14123                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 635:         bitWrite(
      +                          mode, 6, 1);
 14124     01F1  0140               	movlb	0	; select bank0
 14125     01F2  083A               	movf	setMagneticChannel@mode+1,w
 14126     01F3  00F2               	movwf	bitWrite@reg+1
 14127     01F4  0839               	movf	setMagneticChannel@mode,w
 14128     01F5  00F1               	movwf	bitWrite@reg
 14129     01F6  3006               	movlw	6
 14130     01F7  00F3               	movwf	bitWrite@position
 14131     01F8  01F4               	clrf	bitWrite@value
 14132     01F9  0AF4               	incf	bitWrite@value,f
 14133     01FA  3194  248D  3180   	fcall	_bitWrite
 14134                           
 14135                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 636:         bitWrite(
      +                          mode, 7, 0);
 14136     01FD  0140               	movlb	0	; select bank0
 14137     01FE  083A               	movf	setMagneticChannel@mode+1,w
 14138     01FF  00F2               	movwf	bitWrite@reg+1
 14139     0200  0839               	movf	setMagneticChannel@mode,w
 14140     0201  00F1               	movwf	bitWrite@reg
 14141     0202  3007               	movlw	7
 14142     0203  00F3               	movwf	bitWrite@position
 14143     0204  01F4               	clrf	bitWrite@value
 14144     0205  3194  248D  3180   	fcall	_bitWrite
 14145     0208                     l13861:
 14146                           
 14147                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 637:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14148     0208  0140               	movlb	0	; select bank0
 14149     0209  0839               	movf	setMagneticChannel@mode,w
 14150     020A  00A6               	movwf	writeRegister@data
 14151     020B  3002               	movlw	2
 14152     020C  3190  2008  3180   	fcall	_writeRegister
 14153                           
 14154                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 638:     } else if (ch
      +                          annelMode == 0X6)
 14155     020F  2B73               	goto	l13899
 14156     0210                     l13863:
 14157     0210  3006               	movlw	6
 14158     0211  0638               	xorwf	setMagneticChannel@channelMode,w
 14159     0212  1D03               	btfss	3,2
 14160     0213  2A15               	goto	u10691
 14161     0214  2A16               	goto	u10690
 14162     0215                     u10691:
 14163     0215  2A4B               	goto	l13869
 14164     0216                     u10690:
 14165     0216                     l13865:
 14166                           
 14167                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 639:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 640:         bitWrite(mode, 4, 0);
 14168     0216  083A               	movf	setMagneticChannel@mode+1,w
 14169     0217  00F2               	movwf	bitWrite@reg+1
 14170     0218  0839               	movf	setMagneticChannel@mode,w
 14171     0219  00F1               	movwf	bitWrite@reg
 14172     021A  3004               	movlw	4
 14173     021B  00F3               	movwf	bitWrite@position
 14174     021C  01F4               	clrf	bitWrite@value
 14175     021D  3194  248D  3180   	fcall	_bitWrite
 14176                           
 14177                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 641:         bitWrite(
      +                          mode, 5, 1);
 14178     0220  0140               	movlb	0	; select bank0
 14179     0221  083A               	movf	setMagneticChannel@mode+1,w
 14180     0222  00F2               	movwf	bitWrite@reg+1
 14181     0223  0839               	movf	setMagneticChannel@mode,w
 14182     0224  00F1               	movwf	bitWrite@reg
 14183     0225  3005               	movlw	5
 14184     0226  00F3               	movwf	bitWrite@position
 14185     0227  01F4               	clrf	bitWrite@value
 14186     0228  0AF4               	incf	bitWrite@value,f
 14187     0229  3194  248D  3180   	fcall	_bitWrite
 14188                           
 14189                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 642:         bitWrite(
      +                          mode, 6, 1);
 14190     022C  0140               	movlb	0	; select bank0
 14191     022D  083A               	movf	setMagneticChannel@mode+1,w
 14192     022E  00F2               	movwf	bitWrite@reg+1
 14193     022F  0839               	movf	setMagneticChannel@mode,w
 14194     0230  00F1               	movwf	bitWrite@reg
 14195     0231  3006               	movlw	6
 14196     0232  00F3               	movwf	bitWrite@position
 14197     0233  01F4               	clrf	bitWrite@value
 14198     0234  0AF4               	incf	bitWrite@value,f
 14199     0235  3194  248D  3180   	fcall	_bitWrite
 14200                           
 14201                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 643:         bitWrite(
      +                          mode, 7, 0);
 14202     0238  0140               	movlb	0	; select bank0
 14203     0239  083A               	movf	setMagneticChannel@mode+1,w
 14204     023A  00F2               	movwf	bitWrite@reg+1
 14205     023B  0839               	movf	setMagneticChannel@mode,w
 14206     023C  00F1               	movwf	bitWrite@reg
 14207     023D  3007               	movlw	7
 14208     023E  00F3               	movwf	bitWrite@position
 14209     023F  01F4               	clrf	bitWrite@value
 14210     0240  3194  248D  3180   	fcall	_bitWrite
 14211     0243                     l13867:
 14212                           
 14213                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 644:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14214     0243  0140               	movlb	0	; select bank0
 14215     0244  0839               	movf	setMagneticChannel@mode,w
 14216     0245  00A6               	movwf	writeRegister@data
 14217     0246  3002               	movlw	2
 14218     0247  3190  2008  3180   	fcall	_writeRegister
 14219                           
 14220                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 645:     } else if (ch
      +                          annelMode == 0X7)
 14221     024A  2B73               	goto	l13899
 14222     024B                     l13869:
 14223     024B  3007               	movlw	7
 14224     024C  0638               	xorwf	setMagneticChannel@channelMode,w
 14225     024D  1D03               	btfss	3,2
 14226     024E  2A50               	goto	u10701
 14227     024F  2A51               	goto	u10700
 14228     0250                     u10701:
 14229     0250  2A87               	goto	l13875
 14230     0251                     u10700:
 14231     0251                     l13871:
 14232                           
 14233                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 646:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 647:         bitWrite(mode, 4, 1);
 14234     0251  083A               	movf	setMagneticChannel@mode+1,w
 14235     0252  00F2               	movwf	bitWrite@reg+1
 14236     0253  0839               	movf	setMagneticChannel@mode,w
 14237     0254  00F1               	movwf	bitWrite@reg
 14238     0255  3004               	movlw	4
 14239     0256  00F3               	movwf	bitWrite@position
 14240     0257  01F4               	clrf	bitWrite@value
 14241     0258  0AF4               	incf	bitWrite@value,f
 14242     0259  3194  248D  3180   	fcall	_bitWrite
 14243                           
 14244                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 648:         bitWrite(
      +                          mode, 5, 1);
 14245     025C  0140               	movlb	0	; select bank0
 14246     025D  083A               	movf	setMagneticChannel@mode+1,w
 14247     025E  00F2               	movwf	bitWrite@reg+1
 14248     025F  0839               	movf	setMagneticChannel@mode,w
 14249     0260  00F1               	movwf	bitWrite@reg
 14250     0261  3005               	movlw	5
 14251     0262  00F3               	movwf	bitWrite@position
 14252     0263  01F4               	clrf	bitWrite@value
 14253     0264  0AF4               	incf	bitWrite@value,f
 14254     0265  3194  248D  3180   	fcall	_bitWrite
 14255                           
 14256                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 649:         bitWrite(
      +                          mode, 6, 1);
 14257     0268  0140               	movlb	0	; select bank0
 14258     0269  083A               	movf	setMagneticChannel@mode+1,w
 14259     026A  00F2               	movwf	bitWrite@reg+1
 14260     026B  0839               	movf	setMagneticChannel@mode,w
 14261     026C  00F1               	movwf	bitWrite@reg
 14262     026D  3006               	movlw	6
 14263     026E  00F3               	movwf	bitWrite@position
 14264     026F  01F4               	clrf	bitWrite@value
 14265     0270  0AF4               	incf	bitWrite@value,f
 14266     0271  3194  248D  3180   	fcall	_bitWrite
 14267                           
 14268                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 650:         bitWrite(
      +                          mode, 7, 0);
 14269     0274  0140               	movlb	0	; select bank0
 14270     0275  083A               	movf	setMagneticChannel@mode+1,w
 14271     0276  00F2               	movwf	bitWrite@reg+1
 14272     0277  0839               	movf	setMagneticChannel@mode,w
 14273     0278  00F1               	movwf	bitWrite@reg
 14274     0279  3007               	movlw	7
 14275     027A  00F3               	movwf	bitWrite@position
 14276     027B  01F4               	clrf	bitWrite@value
 14277     027C  3194  248D  3180   	fcall	_bitWrite
 14278     027F                     l13873:
 14279                           
 14280                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 651:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14281     027F  0140               	movlb	0	; select bank0
 14282     0280  0839               	movf	setMagneticChannel@mode,w
 14283     0281  00A6               	movwf	writeRegister@data
 14284     0282  3002               	movlw	2
 14285     0283  3190  2008  3180   	fcall	_writeRegister
 14286                           
 14287                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 652:     } else if (ch
      +                          annelMode == 0X8)
 14288     0286  2B73               	goto	l13899
 14289     0287                     l13875:
 14290     0287  3008               	movlw	8
 14291     0288  0638               	xorwf	setMagneticChannel@channelMode,w
 14292     0289  1D03               	btfss	3,2
 14293     028A  2A8C               	goto	u10711
 14294     028B  2A8D               	goto	u10710
 14295     028C                     u10711:
 14296     028C  2AC1               	goto	l13881
 14297     028D                     u10710:
 14298     028D                     l13877:
 14299                           
 14300                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 653:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 654:         bitWrite(mode, 4, 0);
 14301     028D  083A               	movf	setMagneticChannel@mode+1,w
 14302     028E  00F2               	movwf	bitWrite@reg+1
 14303     028F  0839               	movf	setMagneticChannel@mode,w
 14304     0290  00F1               	movwf	bitWrite@reg
 14305     0291  3004               	movlw	4
 14306     0292  00F3               	movwf	bitWrite@position
 14307     0293  01F4               	clrf	bitWrite@value
 14308     0294  3194  248D  3180   	fcall	_bitWrite
 14309                           
 14310                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 655:         bitWrite(
      +                          mode, 5, 0);
 14311     0297  0140               	movlb	0	; select bank0
 14312     0298  083A               	movf	setMagneticChannel@mode+1,w
 14313     0299  00F2               	movwf	bitWrite@reg+1
 14314     029A  0839               	movf	setMagneticChannel@mode,w
 14315     029B  00F1               	movwf	bitWrite@reg
 14316     029C  3005               	movlw	5
 14317     029D  00F3               	movwf	bitWrite@position
 14318     029E  01F4               	clrf	bitWrite@value
 14319     029F  3194  248D  3180   	fcall	_bitWrite
 14320                           
 14321                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 656:         bitWrite(
      +                          mode, 6, 0);
 14322     02A2  0140               	movlb	0	; select bank0
 14323     02A3  083A               	movf	setMagneticChannel@mode+1,w
 14324     02A4  00F2               	movwf	bitWrite@reg+1
 14325     02A5  0839               	movf	setMagneticChannel@mode,w
 14326     02A6  00F1               	movwf	bitWrite@reg
 14327     02A7  3006               	movlw	6
 14328     02A8  00F3               	movwf	bitWrite@position
 14329     02A9  01F4               	clrf	bitWrite@value
 14330     02AA  3194  248D  3180   	fcall	_bitWrite
 14331                           
 14332                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 657:         bitWrite(
      +                          mode, 7, 1);
 14333     02AD  0140               	movlb	0	; select bank0
 14334     02AE  083A               	movf	setMagneticChannel@mode+1,w
 14335     02AF  00F2               	movwf	bitWrite@reg+1
 14336     02B0  0839               	movf	setMagneticChannel@mode,w
 14337     02B1  00F1               	movwf	bitWrite@reg
 14338     02B2  3007               	movlw	7
 14339     02B3  00F3               	movwf	bitWrite@position
 14340     02B4  01F4               	clrf	bitWrite@value
 14341     02B5  0AF4               	incf	bitWrite@value,f
 14342     02B6  3194  248D  3180   	fcall	_bitWrite
 14343     02B9                     l13879:
 14344                           
 14345                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 658:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14346     02B9  0140               	movlb	0	; select bank0
 14347     02BA  0839               	movf	setMagneticChannel@mode,w
 14348     02BB  00A6               	movwf	writeRegister@data
 14349     02BC  3002               	movlw	2
 14350     02BD  3190  2008  3180   	fcall	_writeRegister
 14351                           
 14352                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 659:     } else if (ch
      +                          annelMode == 0X9)
 14353     02C0  2B73               	goto	l13899
 14354     02C1                     l13881:
 14355     02C1  3009               	movlw	9
 14356     02C2  0638               	xorwf	setMagneticChannel@channelMode,w
 14357     02C3  1D03               	btfss	3,2
 14358     02C4  2AC6               	goto	u10721
 14359     02C5  2AC7               	goto	u10720
 14360     02C6                     u10721:
 14361     02C6  2AFC               	goto	l13887
 14362     02C7                     u10720:
 14363     02C7                     l13883:
 14364                           
 14365                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 660:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 661:         bitWrite(mode, 4, 1);
 14366     02C7  083A               	movf	setMagneticChannel@mode+1,w
 14367     02C8  00F2               	movwf	bitWrite@reg+1
 14368     02C9  0839               	movf	setMagneticChannel@mode,w
 14369     02CA  00F1               	movwf	bitWrite@reg
 14370     02CB  3004               	movlw	4
 14371     02CC  00F3               	movwf	bitWrite@position
 14372     02CD  01F4               	clrf	bitWrite@value
 14373     02CE  0AF4               	incf	bitWrite@value,f
 14374     02CF  3194  248D  3180   	fcall	_bitWrite
 14375                           
 14376                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 662:         bitWrite(
      +                          mode, 5, 0);
 14377     02D2  0140               	movlb	0	; select bank0
 14378     02D3  083A               	movf	setMagneticChannel@mode+1,w
 14379     02D4  00F2               	movwf	bitWrite@reg+1
 14380     02D5  0839               	movf	setMagneticChannel@mode,w
 14381     02D6  00F1               	movwf	bitWrite@reg
 14382     02D7  3005               	movlw	5
 14383     02D8  00F3               	movwf	bitWrite@position
 14384     02D9  01F4               	clrf	bitWrite@value
 14385     02DA  3194  248D  3180   	fcall	_bitWrite
 14386                           
 14387                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 663:         bitWrite(
      +                          mode, 6, 0);
 14388     02DD  0140               	movlb	0	; select bank0
 14389     02DE  083A               	movf	setMagneticChannel@mode+1,w
 14390     02DF  00F2               	movwf	bitWrite@reg+1
 14391     02E0  0839               	movf	setMagneticChannel@mode,w
 14392     02E1  00F1               	movwf	bitWrite@reg
 14393     02E2  3006               	movlw	6
 14394     02E3  00F3               	movwf	bitWrite@position
 14395     02E4  01F4               	clrf	bitWrite@value
 14396     02E5  3194  248D  3180   	fcall	_bitWrite
 14397                           
 14398                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 664:         bitWrite(
      +                          mode, 7, 1);
 14399     02E8  0140               	movlb	0	; select bank0
 14400     02E9  083A               	movf	setMagneticChannel@mode+1,w
 14401     02EA  00F2               	movwf	bitWrite@reg+1
 14402     02EB  0839               	movf	setMagneticChannel@mode,w
 14403     02EC  00F1               	movwf	bitWrite@reg
 14404     02ED  3007               	movlw	7
 14405     02EE  00F3               	movwf	bitWrite@position
 14406     02EF  01F4               	clrf	bitWrite@value
 14407     02F0  0AF4               	incf	bitWrite@value,f
 14408     02F1  3194  248D  3180   	fcall	_bitWrite
 14409     02F4                     l13885:
 14410                           
 14411                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 665:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14412     02F4  0140               	movlb	0	; select bank0
 14413     02F5  0839               	movf	setMagneticChannel@mode,w
 14414     02F6  00A6               	movwf	writeRegister@data
 14415     02F7  3002               	movlw	2
 14416     02F8  3190  2008  3180   	fcall	_writeRegister
 14417                           
 14418                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 666:     } else if (ch
      +                          annelMode == 0XA)
 14419     02FB  2B73               	goto	l13899
 14420     02FC                     l13887:
 14421     02FC  300A               	movlw	10
 14422     02FD  0638               	xorwf	setMagneticChannel@channelMode,w
 14423     02FE  1D03               	btfss	3,2
 14424     02FF  2B01               	goto	u10731
 14425     0300  2B02               	goto	u10730
 14426     0301                     u10731:
 14427     0301  2B37               	goto	l13893
 14428     0302                     u10730:
 14429     0302                     l13889:
 14430                           
 14431                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 667:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 668:         bitWrite(mode, 4, 0);
 14432     0302  083A               	movf	setMagneticChannel@mode+1,w
 14433     0303  00F2               	movwf	bitWrite@reg+1
 14434     0304  0839               	movf	setMagneticChannel@mode,w
 14435     0305  00F1               	movwf	bitWrite@reg
 14436     0306  3004               	movlw	4
 14437     0307  00F3               	movwf	bitWrite@position
 14438     0308  01F4               	clrf	bitWrite@value
 14439     0309  3194  248D  3180   	fcall	_bitWrite
 14440                           
 14441                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 669:         bitWrite(
      +                          mode, 5, 1);
 14442     030C  0140               	movlb	0	; select bank0
 14443     030D  083A               	movf	setMagneticChannel@mode+1,w
 14444     030E  00F2               	movwf	bitWrite@reg+1
 14445     030F  0839               	movf	setMagneticChannel@mode,w
 14446     0310  00F1               	movwf	bitWrite@reg
 14447     0311  3005               	movlw	5
 14448     0312  00F3               	movwf	bitWrite@position
 14449     0313  01F4               	clrf	bitWrite@value
 14450     0314  0AF4               	incf	bitWrite@value,f
 14451     0315  3194  248D  3180   	fcall	_bitWrite
 14452                           
 14453                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 670:         bitWrite(
      +                          mode, 6, 0);
 14454     0318  0140               	movlb	0	; select bank0
 14455     0319  083A               	movf	setMagneticChannel@mode+1,w
 14456     031A  00F2               	movwf	bitWrite@reg+1
 14457     031B  0839               	movf	setMagneticChannel@mode,w
 14458     031C  00F1               	movwf	bitWrite@reg
 14459     031D  3006               	movlw	6
 14460     031E  00F3               	movwf	bitWrite@position
 14461     031F  01F4               	clrf	bitWrite@value
 14462     0320  3194  248D  3180   	fcall	_bitWrite
 14463                           
 14464                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 671:         bitWrite(
      +                          mode, 7, 1);
 14465     0323  0140               	movlb	0	; select bank0
 14466     0324  083A               	movf	setMagneticChannel@mode+1,w
 14467     0325  00F2               	movwf	bitWrite@reg+1
 14468     0326  0839               	movf	setMagneticChannel@mode,w
 14469     0327  00F1               	movwf	bitWrite@reg
 14470     0328  3007               	movlw	7
 14471     0329  00F3               	movwf	bitWrite@position
 14472     032A  01F4               	clrf	bitWrite@value
 14473     032B  0AF4               	incf	bitWrite@value,f
 14474     032C  3194  248D  3180   	fcall	_bitWrite
 14475     032F                     l13891:
 14476                           
 14477                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 672:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14478     032F  0140               	movlb	0	; select bank0
 14479     0330  0839               	movf	setMagneticChannel@mode,w
 14480     0331  00A6               	movwf	writeRegister@data
 14481     0332  3002               	movlw	2
 14482     0333  3190  2008  3180   	fcall	_writeRegister
 14483                           
 14484                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 673:     } else if (ch
      +                          annelMode == 0XB)
 14485     0336  2B73               	goto	l13899
 14486     0337                     l13893:
 14487     0337  300B               	movlw	11
 14488     0338  0638               	xorwf	setMagneticChannel@channelMode,w
 14489     0339  1D03               	btfss	3,2
 14490     033A  2B3C               	goto	u10741
 14491     033B  2B3D               	goto	u10740
 14492     033C                     u10741:
 14493     033C  2B73               	goto	l2240
 14494     033D                     u10740:
 14495     033D                     l13895:
 14496                           
 14497                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 674:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 675:         bitWrite(mode, 4, 1);
 14498     033D  083A               	movf	setMagneticChannel@mode+1,w
 14499     033E  00F2               	movwf	bitWrite@reg+1
 14500     033F  0839               	movf	setMagneticChannel@mode,w
 14501     0340  00F1               	movwf	bitWrite@reg
 14502     0341  3004               	movlw	4
 14503     0342  00F3               	movwf	bitWrite@position
 14504     0343  01F4               	clrf	bitWrite@value
 14505     0344  0AF4               	incf	bitWrite@value,f
 14506     0345  3194  248D  3180   	fcall	_bitWrite
 14507                           
 14508                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 676:         bitWrite(
      +                          mode, 5, 1);
 14509     0348  0140               	movlb	0	; select bank0
 14510     0349  083A               	movf	setMagneticChannel@mode+1,w
 14511     034A  00F2               	movwf	bitWrite@reg+1
 14512     034B  0839               	movf	setMagneticChannel@mode,w
 14513     034C  00F1               	movwf	bitWrite@reg
 14514     034D  3005               	movlw	5
 14515     034E  00F3               	movwf	bitWrite@position
 14516     034F  01F4               	clrf	bitWrite@value
 14517     0350  0AF4               	incf	bitWrite@value,f
 14518     0351  3194  248D  3180   	fcall	_bitWrite
 14519                           
 14520                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 677:         bitWrite(
      +                          mode, 6, 0);
 14521     0354  0140               	movlb	0	; select bank0
 14522     0355  083A               	movf	setMagneticChannel@mode+1,w
 14523     0356  00F2               	movwf	bitWrite@reg+1
 14524     0357  0839               	movf	setMagneticChannel@mode,w
 14525     0358  00F1               	movwf	bitWrite@reg
 14526     0359  3006               	movlw	6
 14527     035A  00F3               	movwf	bitWrite@position
 14528     035B  01F4               	clrf	bitWrite@value
 14529     035C  3194  248D  3180   	fcall	_bitWrite
 14530                           
 14531                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 678:         bitWrite(
      +                          mode, 7, 1);
 14532     035F  0140               	movlb	0	; select bank0
 14533     0360  083A               	movf	setMagneticChannel@mode+1,w
 14534     0361  00F2               	movwf	bitWrite@reg+1
 14535     0362  0839               	movf	setMagneticChannel@mode,w
 14536     0363  00F1               	movwf	bitWrite@reg
 14537     0364  3007               	movlw	7
 14538     0365  00F3               	movwf	bitWrite@position
 14539     0366  01F4               	clrf	bitWrite@value
 14540     0367  0AF4               	incf	bitWrite@value,f
 14541     0368  3194  248D  3180   	fcall	_bitWrite
 14542     036B                     l13897:
 14543                           
 14544                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 679:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14545     036B  0140               	movlb	0	; select bank0
 14546     036C  0839               	movf	setMagneticChannel@mode,w
 14547     036D  00A6               	movwf	writeRegister@data
 14548     036E  3002               	movlw	2
 14549     036F  3190  2008  3180   	fcall	_writeRegister
 14550     0372  2B73               	goto	l13899
 14551     0373                     l2240:
 14552     0373                     l13899:
 14553                           
 14554                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 682:     return getErr
      +                          or();;	Return value of _setMagneticChannel is never used
 14555     0373  318D  2589  3180   	fcall	_getError
 14556     0376                     l2246:
 14557     0376  0008               	return
 14558     0377                     __end_of_setMagneticChannel:
 14559                           
 14560                           	psect	text7
 14561     1008                     __ptext7:	
 14562 ;; *************** function _writeRegister *****************
 14563 ;; Defined at:
 14564 ;;		line 185 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 14565 ;; Parameters:    Size  Location     Type
 14566 ;;  regAddress      1    wreg     unsigned char 
 14567 ;;  data            1    6[BANK0 ] unsigned char 
 14568 ;; Auto vars:     Size  Location     Type
 14569 ;;  regAddress      1    7[BANK0 ] unsigned char 
 14570 ;; Return value:  Size  Location     Type
 14571 ;;                  1    wreg      unsigned char 
 14572 ;; Registers used:
 14573 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14574 ;; Tracked objects:
 14575 ;;		On entry : 0/0
 14576 ;;		On exit  : 0/0
 14577 ;;		Unchanged: 0/0
 14578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14579 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14580 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14582 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14583 ;;Total ram usage:        2 bytes
 14584 ;; Hardware stack levels used: 1
 14585 ;; Hardware stack levels required when called: 13
 14586 ;; This function calls:
 14587 ;;		_i2c_write1ByteRegister
 14588 ;; This function is called by:
 14589 ;;		_setOperatingMode
 14590 ;;		_setMagneticChannel
 14591 ;;		_setXYAxisRange
 14592 ;;		_setZAxisRange
 14593 ;;		_setTemperatureEn
 14594 ;;		_setupWakeUpAndSleep
 14595 ;;		_setCRCMode
 14596 ;;		_setMagTemp
 14597 ;;		_setConvAvg
 14598 ;;		_setIntThreshold
 14599 ;;		_setLowPower
 14600 ;;		_setGlitchFilter
 14601 ;;		_setTriggerMode
 14602 ;;		_setSleeptime
 14603 ;;		_setMagDir
 14604 ;;		_setMagnitudeGain
 14605 ;;		_setMagneticGain
 14606 ;;		_setMagneticOffset1
 14607 ;;		_setMagneticOffset2
 14608 ;;		_setAngleEn
 14609 ;;		_setXThreshold
 14610 ;;		_setYThreshold
 14611 ;;		_setZThreshold
 14612 ;;		_setTemperatureThreshold
 14613 ;;		_setInterruptResult
 14614 ;;		_setThresholdEn
 14615 ;;		_setIntPinState
 14616 ;;		_setInterruptMode
 14617 ;;		_setMaskInterrupt
 14618 ;;		_setI2CAddress
 14619 ;;		_setI2CAddressEN
 14620 ;; This function uses a non-reentrant model
 14621 ;;
 14622                           
 14623     1008                     _writeRegister:	
 14624                           ;psect for function _writeRegister
 14625                           
 14626                           
 14627                           ;incstack = 0
 14628                           ; Regs used in _writeRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14629                           ;writeRegister@regAddress stored from wreg
 14630     1008  0140               	movlb	0	; select bank0
 14631     1009  00A7               	movwf	writeRegister@regAddress
 14632     100A                     l13545:
 14633                           
 14634                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 188:     i2c_write1Byt
      +                          eRegister(0X22, regAddress, data);
 14635     100A  0827               	movf	writeRegister@regAddress,w
 14636     100B  00A4               	movwf	i2c_write1ByteRegister@reg
 14637     100C  0826               	movf	writeRegister@data,w
 14638     100D  00A5               	movwf	i2c_write1ByteRegister@data
 14639     100E  3022               	movlw	34
 14640     100F  3197  2700  3190   	fcall	_i2c_write1ByteRegister
 14641     1012                     l2139:
 14642     1012  0008               	return
 14643     1013                     __end_of_writeRegister:
 14644                           
 14645                           	psect	text8
 14646     1700                     __ptext8:	
 14647 ;; *************** function _i2c_write1ByteRegister *****************
 14648 ;; Defined at:
 14649 ;;		line 51 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 14650 ;; Parameters:    Size  Location     Type
 14651 ;;  address         1    wreg     unsigned char 
 14652 ;;  reg             1    4[BANK0 ] unsigned char 
 14653 ;;  data            1    5[BANK0 ] unsigned char 
 14654 ;; Auto vars:     Size  Location     Type
 14655 ;;  address         1   11[COMMON] unsigned char 
 14656 ;; Return value:  Size  Location     Type
 14657 ;;                  1    wreg      void 
 14658 ;; Registers used:
 14659 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14660 ;; Tracked objects:
 14661 ;;		On entry : 0/0
 14662 ;;		On exit  : 0/0
 14663 ;;		Unchanged: 0/0
 14664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14665 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14666 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14668 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14669 ;;Total ram usage:        3 bytes
 14670 ;; Hardware stack levels used: 1
 14671 ;; Hardware stack levels required when called: 12
 14672 ;; This function calls:
 14673 ;;		_I2C1_Close
 14674 ;;		_I2C1_MasterWrite
 14675 ;;		_I2C1_Open
 14676 ;;		_I2C1_SetAddressNackCallback
 14677 ;;		_I2C1_SetBuffer
 14678 ;;		_I2C1_SetDataCompleteCallback
 14679 ;; This function is called by:
 14680 ;;		_writeRegister
 14681 ;;		_BMA253_Initialize
 14682 ;; This function uses a non-reentrant model
 14683 ;;
 14684                           
 14685     1700                     _i2c_write1ByteRegister:	
 14686                           ;psect for function _i2c_write1ByteRegister
 14687                           
 14688                           
 14689                           ;incstack = 0
 14690                           ; Regs used in _i2c_write1ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14691                           ;i2c_write1ByteRegister@address stored from wreg
 14692     1700  00FB               	movwf	i2c_write1ByteRegister@address
 14693     1701                     l13307:
 14694     1701                     l13309:	
 14695                           ;mcc_generated_files/drivers/i2c_simple_master.c: 51: void i2c_write1ByteRegister(i2c1_a
      +                          ddress_t address, uint8_t reg, uint8_t data);mcc_generated_files/drivers/i2c_simple_mast
      +                          er.c: 52: {;mcc_generated_files/drivers/i2c_simple_master.c: 53:     while(!I2C1_Open(ad
      +                          dress));
 14696                           
 14697     1701  087B               	movf	i2c_write1ByteRegister@address,w
 14698     1702  3197  27CA  3197   	fcall	_I2C1_Open
 14699     1705  3A00               	xorlw	0
 14700     1706  1903               	skipnz
 14701     1707  2F09               	goto	u10151
 14702     1708  2F0A               	goto	u10150
 14703     1709                     u10151:
 14704     1709  2F01               	goto	l13309
 14705     170A                     u10150:
 14706     170A                     l13311:
 14707                           
 14708                           ;mcc_generated_files/drivers/i2c_simple_master.c: 54:     I2C1_SetDataCompleteCallback(w
      +                          r1RegCompleteHandler,&data);
 14709     170A  30C7               	movlw	low _wr1RegCompleteHandler
 14710     170B  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 14711     170C  3010               	movlw	high _wr1RegCompleteHandler
 14712     170D  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 14713     170E  3025               	movlw	(low (i2c_write1ByteRegister@data| 0))& (0+255)
 14714     170F  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 14715     1710  319F  27D4  3197   	fcall	_I2C1_SetDataCompleteCallback
 14716     1713                     l13313:
 14717                           
 14718                           ;mcc_generated_files/drivers/i2c_simple_master.c: 55:     I2C1_SetBuffer(&reg,1);
 14719     1713  3001               	movlw	1
 14720     1714  00F1               	movwf	I2C1_SetBuffer@bufferSize
 14721     1715  3000               	movlw	0
 14722     1716  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 14723     1717  3024               	movlw	(low (i2c_write1ByteRegister@reg| 0))& (0+255)
 14724     1718  3190  205E  3197   	fcall	_I2C1_SetBuffer
 14725     171B                     l13315:
 14726                           
 14727                           ;mcc_generated_files/drivers/i2c_simple_master.c: 56:     I2C1_SetAddressNackCallback(((
      +                          void*)0),((void*)0));
 14728     171B  3000               	movlw	0
 14729     171C  00F5               	movwf	I2C1_SetAddressNackCallback@cb
 14730     171D  00F6               	movwf	I2C1_SetAddressNackCallback@cb+1
 14731     171E  3000               	movlw	0
 14732     171F  00F7               	movwf	I2C1_SetAddressNackCallback@ptr
 14733     1720  00F8               	movwf	I2C1_SetAddressNackCallback@ptr+1
 14734     1721  319F  27DF  3197   	fcall	_I2C1_SetAddressNackCallback
 14735     1724                     l13317:
 14736                           
 14737                           ;mcc_generated_files/drivers/i2c_simple_master.c: 57:     I2C1_MasterWrite();
 14738     1724  319E  26DE  3197   	fcall	_I2C1_MasterWrite
 14739     1727                     l13319:	
 14740                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58:     while(I2C1_BUSY == I2C1_Close(
      +                          ));
 14741                           
 14742     1727  3192  2231  3197   	fcall	_I2C1_Close
 14743     172A  3A01               	xorlw	1
 14744     172B  1903               	skipnz
 14745     172C  2F2E               	goto	u10161
 14746     172D  2F2F               	goto	u10160
 14747     172E                     u10161:
 14748     172E  2F27               	goto	l13319
 14749     172F                     u10160:
 14750     172F                     l510:
 14751     172F  0008               	return
 14752     1730                     __end_of_i2c_write1ByteRegister:
 14753                           
 14754                           	psect	text9
 14755     0D89                     __ptext9:	
 14756 ;; *************** function _getError *****************
 14757 ;; Defined at:
 14758 ;;		line 2317 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 14759 ;; Parameters:    Size  Location     Type
 14760 ;;		None
 14761 ;; Auto vars:     Size  Location     Type
 14762 ;;  statusReg       1   21[BANK0 ] unsigned char 
 14763 ;;  oscillatorEr    1   20[BANK0 ] unsigned char 
 14764 ;;  intPinError     1   19[BANK0 ] unsigned char 
 14765 ;;  otpCrcError     1   18[BANK0 ] unsigned char 
 14766 ;;  undervoltage    1   17[BANK0 ] unsigned char 
 14767 ;; Return value:  Size  Location     Type
 14768 ;;                  1    wreg      char 
 14769 ;; Registers used:
 14770 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14771 ;; Tracked objects:
 14772 ;;		On entry : 0/0
 14773 ;;		On exit  : 0/0
 14774 ;;		Unchanged: 0/0
 14775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14777 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14778 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14779 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14780 ;;Total ram usage:        7 bytes
 14781 ;; Hardware stack levels used: 1
 14782 ;; Hardware stack levels required when called: 16
 14783 ;; This function calls:
 14784 ;;		_bitRead
 14785 ;;		_getDeviceStatus
 14786 ;; This function is called by:
 14787 ;;		_begin
 14788 ;;		_setOperatingMode
 14789 ;;		_setMagneticChannel
 14790 ;;		_setXYAxisRange
 14791 ;;		_setZAxisRange
 14792 ;;		_setTemperatureEn
 14793 ;;		_setupWakeUpAndSleep
 14794 ;;		_readWakeUpAndSleepData
 14795 ;;		_setCRCMode
 14796 ;;		_setMagTemp
 14797 ;;		_setConvAvg
 14798 ;;		_setReadMode
 14799 ;;		_setIntThreshold
 14800 ;;		_setLowPower
 14801 ;;		_setGlitchFilter
 14802 ;;		_setTriggerMode
 14803 ;;		_setSleeptime
 14804 ;;		_setMagDir
 14805 ;;		_setMagnitudeGain
 14806 ;;		_setMagneticGain
 14807 ;;		_setMagneticOffset1
 14808 ;;		_setMagneticOffset2
 14809 ;;		_setAngleEn
 14810 ;;		_setXThreshold
 14811 ;;		_setYThreshold
 14812 ;;		_setZThreshold
 14813 ;;		_setTemperatureThreshold
 14814 ;;		_setInterruptResult
 14815 ;;		_setThresholdEn
 14816 ;;		_setIntPinState
 14817 ;;		_setInterruptMode
 14818 ;;		_setMaskInterrupt
 14819 ;;		_setI2CAddress
 14820 ;;		_setI2CAddressEN
 14821 ;;		_setOscillatorError
 14822 ;; This function uses a non-reentrant model
 14823 ;;
 14824                           
 14825     0D89                     _getError:	
 14826                           ;psect for function _getError
 14827                           
 14828     0D89                     l13511:	
 14829                           ;incstack = 0
 14830 ;; hardware stack exceeded
 14831                           ; Regs used in _getError: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14832                           
 14833                           
 14834                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2319:     uint8_t stat
      +                          usReg = getDeviceStatus();
 14835     0D89  3190  2000  318D   	fcall	_getDeviceStatus
 14836     0D8C  0140               	movlb	0	; select bank0
 14837     0D8D  00B5               	movwf	getError@statusReg
 14838     0D8E                     l13513:
 14839                           
 14840                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2320:     uint8_t unde
      +                          rvoltageError = bitRead(statusReg, 0);
 14841     0D8E  0835               	movf	getError@statusReg,w
 14842     0D8F  00AF               	movwf	??_getError
 14843     0D90  01B0               	clrf	??_getError+1
 14844     0D91  082F               	movf	??_getError,w
 14845     0D92  00F1               	movwf	bitRead@reg
 14846     0D93  0830               	movf	??_getError+1,w
 14847     0D94  00F2               	movwf	bitRead@reg+1
 14848     0D95  01F3               	clrf	bitRead@position
 14849     0D96  3194  2469  318D   	fcall	_bitRead
 14850     0D99  0140               	movlb	0	; select bank0
 14851     0D9A  00B1               	movwf	getError@undervoltageError
 14852     0D9B                     l13515:
 14853                           
 14854                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2321:     uint8_t otpC
      +                          rcError = bitRead(statusReg, 1);
 14855     0D9B  0835               	movf	getError@statusReg,w
 14856     0D9C  00AF               	movwf	??_getError
 14857     0D9D  01B0               	clrf	??_getError+1
 14858     0D9E  082F               	movf	??_getError,w
 14859     0D9F  00F1               	movwf	bitRead@reg
 14860     0DA0  0830               	movf	??_getError+1,w
 14861     0DA1  00F2               	movwf	bitRead@reg+1
 14862     0DA2  01F3               	clrf	bitRead@position
 14863     0DA3  0AF3               	incf	bitRead@position,f
 14864     0DA4  3194  2469  318D   	fcall	_bitRead
 14865     0DA7  0140               	movlb	0	; select bank0
 14866     0DA8  00B2               	movwf	getError@otpCrcError
 14867     0DA9                     l13517:
 14868                           
 14869                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2322:     uint8_t intP
      +                          inError = bitRead(statusReg, 2);
 14870     0DA9  0835               	movf	getError@statusReg,w
 14871     0DAA  00AF               	movwf	??_getError
 14872     0DAB  01B0               	clrf	??_getError+1
 14873     0DAC  082F               	movf	??_getError,w
 14874     0DAD  00F1               	movwf	bitRead@reg
 14875     0DAE  0830               	movf	??_getError+1,w
 14876     0DAF  00F2               	movwf	bitRead@reg+1
 14877     0DB0  3002               	movlw	2
 14878     0DB1  00F3               	movwf	bitRead@position
 14879     0DB2  3194  2469  318D   	fcall	_bitRead
 14880     0DB5  0140               	movlb	0	; select bank0
 14881     0DB6  00B3               	movwf	getError@intPinError
 14882     0DB7                     l13519:
 14883                           
 14884                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2323:     uint8_t osci
      +                          llatorError = bitRead(statusReg, 3);
 14885     0DB7  0835               	movf	getError@statusReg,w
 14886     0DB8  00AF               	movwf	??_getError
 14887     0DB9  01B0               	clrf	??_getError+1
 14888     0DBA  082F               	movf	??_getError,w
 14889     0DBB  00F1               	movwf	bitRead@reg
 14890     0DBC  0830               	movf	??_getError+1,w
 14891     0DBD  00F2               	movwf	bitRead@reg+1
 14892     0DBE  3003               	movlw	3
 14893     0DBF  00F3               	movwf	bitRead@position
 14894     0DC0  3194  2469  318D   	fcall	_bitRead
 14895     0DC3  0140               	movlb	0	; select bank0
 14896     0DC4  00B4               	movwf	getError@oscillatorError
 14897     0DC5                     l13521:
 14898                           
 14899                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2326:     if ((undervo
      +                          ltageError != 0) && (otpCrcError != 0) && (intPinError != 0) && (oscillatorError != 0)) 
      +                          {
 14900     0DC5  0831               	movf	getError@undervoltageError,w
 14901     0DC6  1903               	btfsc	3,2
 14902     0DC7  2DC9               	goto	u10431
 14903     0DC8  2DCA               	goto	u10430
 14904     0DC9                     u10431:
 14905     0DC9  2DDB               	goto	l13535
 14906     0DCA                     u10430:
 14907     0DCA                     l13523:
 14908     0DCA  0832               	movf	getError@otpCrcError,w
 14909     0DCB  1903               	btfsc	3,2
 14910     0DCC  2DCE               	goto	u10441
 14911     0DCD  2DCF               	goto	u10440
 14912     0DCE                     u10441:
 14913     0DCE  2DDB               	goto	l13535
 14914     0DCF                     u10440:
 14915     0DCF                     l13525:
 14916     0DCF  0833               	movf	getError@intPinError,w
 14917     0DD0  1903               	btfsc	3,2
 14918     0DD1  2DD3               	goto	u10451
 14919     0DD2  2DD4               	goto	u10450
 14920     0DD3                     u10451:
 14921     0DD3  2DDB               	goto	l13535
 14922     0DD4                     u10450:
 14923     0DD4                     l13527:
 14924     0DD4  0834               	movf	getError@oscillatorError,w
 14925     0DD5  1903               	btfsc	3,2
 14926     0DD6  2DD8               	goto	u10461
 14927     0DD7  2DD9               	goto	u10460
 14928     0DD8                     u10461:
 14929     0DD8  2DDB               	goto	l13535
 14930     0DD9                     u10460:
 14931     0DD9                     l13529:
 14932                           
 14933                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2327:         return -
      +                          1;
 14934     0DD9  30FF               	movlw	255
 14935     0DDA  2DDC               	goto	l2640
 14936     0DDB                     l13535:
 14937                           
 14938                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2329:         return 0
      +                          ;
 14939     0DDB  3000               	movlw	0
 14940     0DDC                     l2640:
 14941     0DDC  0008               	return
 14942     0DDD                     __end_of_getError:
 14943                           
 14944                           	psect	text10
 14945     1000                     __ptext10:	
 14946 ;; *************** function _getDeviceStatus *****************
 14947 ;; Defined at:
 14948 ;;		line 2303 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 14949 ;; Parameters:    Size  Location     Type
 14950 ;;		None
 14951 ;; Auto vars:     Size  Location     Type
 14952 ;;  deviceStatus    1   14[BANK0 ] unsigned char 
 14953 ;; Return value:  Size  Location     Type
 14954 ;;                  1    wreg      unsigned char 
 14955 ;; Registers used:
 14956 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14957 ;; Tracked objects:
 14958 ;;		On entry : 0/0
 14959 ;;		On exit  : 0/0
 14960 ;;		Unchanged: 0/0
 14961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14963 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14965 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14966 ;;Total ram usage:        1 bytes
 14967 ;; Hardware stack levels used: 1
 14968 ;; Hardware stack levels required when called: 15
 14969 ;; This function calls:
 14970 ;;		_readRegister
 14971 ;; This function is called by:
 14972 ;;		_getError
 14973 ;; This function uses a non-reentrant model
 14974 ;;
 14975                           
 14976     1000                     _getDeviceStatus:	
 14977                           ;psect for function _getDeviceStatus
 14978                           
 14979     1000                     l13393:	
 14980                           ;incstack = 0
 14981 ;; hardware stack exceeded
 14982                           ; Regs used in _getDeviceStatus: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14983                           
 14984                           
 14985                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2305:     uint8_t devi
      +                          ceStatusReg = readRegister(TMAG5273_REG_DEVICE_STATUS);
 14986     1000  301C               	movlw	28
 14987     1001  3190  206C  3190   	fcall	_readRegister
 14988     1004  0140               	movlb	0	; select bank0
 14989     1005  00AE               	movwf	getDeviceStatus@deviceStatusReg
 14990     1006                     l13395:
 14991                           
 14992                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2307:     return devic
      +                          eStatusReg;
 14993     1006  082E               	movf	getDeviceStatus@deviceStatusReg,w
 14994     1007                     l2636:
 14995     1007  0008               	return
 14996     1008                     __end_of_getDeviceStatus:
 14997                           
 14998                           	psect	text11
 14999     148D                     __ptext11:	
 15000 ;; *************** function _bitWrite *****************
 15001 ;; Defined at:
 15002 ;;		line 2514 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15003 ;; Parameters:    Size  Location     Type
 15004 ;;  reg             2    1[COMMON] PTR unsigned short 
 15005 ;;		 -> begin@testReg(2), RAM(8192), 
 15006 ;;  position        1    3[COMMON] unsigned char 
 15007 ;;  value           1    4[COMMON] unsigned char 
 15008 ;; Auto vars:     Size  Location     Type
 15009 ;;  mask            2    9[COMMON] unsigned short 
 15010 ;; Return value:  Size  Location     Type
 15011 ;;                  1    wreg      void 
 15012 ;; Registers used:
 15013 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15014 ;; Tracked objects:
 15015 ;;		On entry : 0/0
 15016 ;;		On exit  : 0/0
 15017 ;;		Unchanged: 0/0
 15018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15019 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15020 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15021 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15022 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15023 ;;Total ram usage:       10 bytes
 15024 ;; Hardware stack levels used: 1
 15025 ;; Hardware stack levels required when called: 4
 15026 ;; This function calls:
 15027 ;;		Nothing
 15028 ;; This function is called by:
 15029 ;;		_begin
 15030 ;;		_setOperatingMode
 15031 ;;		_setMagneticChannel
 15032 ;;		_setXYAxisRange
 15033 ;;		_setZAxisRange
 15034 ;;		_setTemperatureEn
 15035 ;;		_setCRCMode
 15036 ;;		_setMagTemp
 15037 ;;		_setConvAvg
 15038 ;;		_setReadMode
 15039 ;;		_setIntThreshold
 15040 ;;		_setLowPower
 15041 ;;		_setGlitchFilter
 15042 ;;		_setTriggerMode
 15043 ;;		_setSleeptime
 15044 ;;		_setMagDir
 15045 ;;		_setMagnitudeGain
 15046 ;;		_setAngleEn
 15047 ;;		_setInterruptResult
 15048 ;;		_setThresholdEn
 15049 ;;		_setIntPinState
 15050 ;;		_setMaskInterrupt
 15051 ;;		_setI2CAddressEN
 15052 ;;		_setOscillatorError
 15053 ;; This function uses a non-reentrant model
 15054 ;;
 15055                           
 15056     148D                     _bitWrite:	
 15057                           ;psect for function _bitWrite
 15058                           
 15059     148D                     l13505:	
 15060                           ;incstack = 0
 15061                           ; Regs used in _bitWrite: [wreg+fsr1l+fsr1h+status,2+status,0]
 15062                           
 15063     148D                     l13507:
 15064                           
 15065                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2516:     mask = value
      +                           << position;
 15066     148D  0874               	movf	bitWrite@value,w
 15067     148E  00F5               	movwf	??_bitWrite
 15068     148F  01F6               	clrf	??_bitWrite+1
 15069     1490  0A73               	incf	bitWrite@position,w
 15070     1491  2C94               	goto	u10424
 15071     1492                     u10425:
 15072     1492  35F5               	lslf	??_bitWrite,f
 15073     1493  0DF6               	rlf	??_bitWrite+1,f
 15074     1494                     u10424:
 15075     1494  0B89               	decfsz	9,f
 15076     1495  2C92               	goto	u10425
 15077     1496  0875               	movf	??_bitWrite,w
 15078     1497  00F9               	movwf	bitWrite@mask
 15079     1498  0876               	movf	??_bitWrite+1,w
 15080     1499  00FA               	movwf	bitWrite@mask+1
 15081     149A                     l13509:
 15082                           
 15083                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2517:     *reg = *reg 
      +                          | mask;
 15084     149A  0871               	movf	bitWrite@reg,w
 15085     149B  0086               	movwf	6
 15086     149C  0872               	movf	bitWrite@reg+1,w
 15087     149D  0087               	movwf	7
 15088     149E  3F40               	moviw [0]fsr1
 15089     149F  00F5               	movwf	??_bitWrite
 15090     14A0  3F41               	moviw [1]fsr1
 15091     14A1  00F6               	movwf	??_bitWrite+1
 15092     14A2  0879               	movf	bitWrite@mask,w
 15093     14A3  0475               	iorwf	??_bitWrite,w
 15094     14A4  00F7               	movwf	??_bitWrite+2
 15095     14A5  087A               	movf	bitWrite@mask+1,w
 15096     14A6  0476               	iorwf	??_bitWrite+1,w
 15097     14A7  00F8               	movwf	??_bitWrite+3
 15098     14A8  0871               	movf	bitWrite@reg,w
 15099     14A9  0086               	movwf	6
 15100     14AA  0872               	movf	bitWrite@reg+1,w
 15101     14AB  0087               	movwf	7
 15102     14AC  0877               	movf	??_bitWrite+2,w
 15103     14AD  3FC0               	movwi [0]fsr1
 15104     14AE  0878               	movf	??_bitWrite+3,w
 15105     14AF  3FC1               	movwi [1]fsr1
 15106     14B0                     l2675:
 15107     14B0  0008               	return
 15108     14B1                     __end_of_bitWrite:
 15109                           
 15110                           	psect	text12
 15111     11C1                     __ptext12:	
 15112 ;; *************** function _isConnected *****************
 15113 ;; Defined at:
 15114 ;;		line 92 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15115 ;; Parameters:    Size  Location     Type
 15116 ;;		None
 15117 ;; Auto vars:     Size  Location     Type
 15118 ;;		None
 15119 ;; Return value:  Size  Location     Type
 15120 ;;                  1    wreg      char 
 15121 ;; Registers used:
 15122 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15123 ;; Tracked objects:
 15124 ;;		On entry : 0/0
 15125 ;;		On exit  : 0/0
 15126 ;;		Unchanged: 0/0
 15127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15132 ;;Total ram usage:        0 bytes
 15133 ;; Hardware stack levels used: 1
 15134 ;; Hardware stack levels required when called: 14
 15135 ;; This function calls:
 15136 ;;		_TMAG5273_GetManufacture
 15137 ;; This function is called by:
 15138 ;;		_begin
 15139 ;; This function uses a non-reentrant model
 15140 ;;
 15141                           
 15142     11C1                     _isConnected:	
 15143                           ;psect for function _isConnected
 15144                           
 15145     11C1                     l13811:	
 15146                           ;incstack = 0
 15147                           ; Regs used in _isConnected: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15148                           
 15149                           
 15150                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 100:     manufactureId
      +                           = TMAG5273_GetManufacture();
 15151     11C1  3192  22C3  3191   	fcall	_TMAG5273_GetManufacture
 15152     11C4  0140               	movlb	0	; select bank0
 15153     11C5  082E               	movf	?_TMAG5273_GetManufacture+1,w
 15154     11C6  00CB               	movwf	_manufactureId+1
 15155     11C7  082D               	movf	?_TMAG5273_GetManufacture,w
 15156     11C8  00CA               	movwf	_manufactureId
 15157     11C9                     l13813:
 15158                           
 15159                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 102:     if (manufactu
      +                          reId != 0x5449) {
 15160     11C9  3049               	movlw	73
 15161     11CA  064A               	xorwf	_manufactureId,w
 15162     11CB  3054               	movlw	84
 15163     11CC  1903               	skipnz
 15164     11CD  064B               	xorwf	_manufactureId+1,w
 15165     11CE  1903               	btfsc	3,2
 15166     11CF  29D1               	goto	u10621
 15167     11D0  29D2               	goto	u10620
 15168     11D1                     u10621:
 15169     11D1  29D4               	goto	l13819
 15170     11D2                     u10620:
 15171     11D2                     l13815:
 15172                           
 15173                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 103:         return -1
      +                          ;
 15174     11D2  30FF               	movlw	255
 15175     11D3  29D5               	goto	l2127
 15176     11D4                     l13819:
 15177                           
 15178                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 106:     return 0;
 15179     11D4  3000               	movlw	0
 15180     11D5                     l2127:
 15181     11D5  0008               	return
 15182     11D6                     __end_of_isConnected:
 15183                           
 15184                           	psect	text13
 15185     12C3                     __ptext13:	
 15186 ;; *************** function _TMAG5273_GetManufacture *****************
 15187 ;; Defined at:
 15188 ;;		line 2520 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15189 ;; Parameters:    Size  Location     Type
 15190 ;;		None
 15191 ;; Auto vars:     Size  Location     Type
 15192 ;;  read            2   15[BANK0 ] unsigned short 
 15193 ;; Return value:  Size  Location     Type
 15194 ;;                  2   13[BANK0 ] unsigned short 
 15195 ;; Registers used:
 15196 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15197 ;; Tracked objects:
 15198 ;;		On entry : 0/0
 15199 ;;		On exit  : 0/0
 15200 ;;		Unchanged: 0/0
 15201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15202 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15203 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15205 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15206 ;;Total ram usage:        4 bytes
 15207 ;; Hardware stack levels used: 1
 15208 ;; Hardware stack levels required when called: 13
 15209 ;; This function calls:
 15210 ;;		_i2c_read2ByteRegister
 15211 ;;		_swap
 15212 ;; This function is called by:
 15213 ;;		_isConnected
 15214 ;; This function uses a non-reentrant model
 15215 ;;
 15216                           
 15217     12C3                     _TMAG5273_GetManufacture:	
 15218                           ;psect for function _TMAG5273_GetManufacture
 15219                           
 15220     12C3                     l13539:	
 15221                           ;incstack = 0
 15222                           ; Regs used in _TMAG5273_GetManufacture: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15223                           
 15224                           
 15225                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2522:     uint16_t rea
      +                          d = i2c_read2ByteRegister(0X22, TMAG5273_REG_MANUFACTURER_ID_LSB);
 15226     12C3  300E               	movlw	14
 15227     12C4  0140               	movlb	0	; select bank0
 15228     12C5  00A4               	movwf	i2c_read2ByteRegister@reg
 15229     12C6  3022               	movlw	34
 15230     12C7  318A  223C  3192   	fcall	_i2c_read2ByteRegister
 15231     12CA  0140               	movlb	0	; select bank0
 15232     12CB  0825               	movf	?_i2c_read2ByteRegister+1,w
 15233     12CC  00B0               	movwf	TMAG5273_GetManufacture@read+1
 15234     12CD  0824               	movf	?_i2c_read2ByteRegister,w
 15235     12CE  00AF               	movwf	TMAG5273_GetManufacture@read
 15236     12CF                     l13541:
 15237                           
 15238                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2523:     return swap(
      +                          read);
 15239     12CF  0830               	movf	TMAG5273_GetManufacture@read+1,w
 15240     12D0  00F2               	movwf	swap@reg+1
 15241     12D1  082F               	movf	TMAG5273_GetManufacture@read,w
 15242     12D2  00F1               	movwf	swap@reg
 15243     12D3  3191  2198  3192   	fcall	_swap
 15244     12D6  0872               	movf	?_swap+1,w
 15245     12D7  0140               	movlb	0	; select bank0
 15246     12D8  00AE               	movwf	?_TMAG5273_GetManufacture+1
 15247     12D9  0871               	movf	?_swap,w
 15248     12DA  00AD               	movwf	?_TMAG5273_GetManufacture
 15249     12DB                     l2678:
 15250     12DB  0008               	return
 15251     12DC                     __end_of_TMAG5273_GetManufacture:
 15252                           
 15253                           	psect	text14
 15254     1198                     __ptext14:	
 15255 ;; *************** function _swap *****************
 15256 ;; Defined at:
 15257 ;;		line 2526 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15258 ;; Parameters:    Size  Location     Type
 15259 ;;  reg             2    1[COMMON] unsigned short 
 15260 ;; Auto vars:     Size  Location     Type
 15261 ;;  lowerByte       1    9[COMMON] unsigned char 
 15262 ;;  upperByte       1    8[COMMON] unsigned char 
 15263 ;; Return value:  Size  Location     Type
 15264 ;;                  2    1[COMMON] unsigned short 
 15265 ;; Registers used:
 15266 ;;		wreg, status,2
 15267 ;; Tracked objects:
 15268 ;;		On entry : 0/0
 15269 ;;		On exit  : 0/0
 15270 ;;		Unchanged: 0/0
 15271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15272 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15273 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15274 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15275 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15276 ;;Total ram usage:        9 bytes
 15277 ;; Hardware stack levels used: 1
 15278 ;; Hardware stack levels required when called: 4
 15279 ;; This function calls:
 15280 ;;		Nothing
 15281 ;; This function is called by:
 15282 ;;		_TMAG5273_GetManufacture
 15283 ;; This function uses a non-reentrant model
 15284 ;;
 15285                           
 15286     1198                     _swap:	
 15287                           ;psect for function _swap
 15288                           
 15289     1198                     l13399:	
 15290                           ;incstack = 0
 15291                           ; Regs used in _swap: [wreg+status,2]
 15292                           
 15293                           
 15294                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2527:     uint8_t uppe
      +                          rByte;;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2528:     uint8_
      +                          t lowerByte;;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2530:     
      +                          upperByte = ((reg & (0xFF00)) >> 8);
 15295     1198  0872               	movf	swap@reg+1,w
 15296     1199  00F8               	movwf	swap@upperByte
 15297     119A                     l13401:
 15298                           
 15299                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2531:     lowerByte = 
      +                          (uint8_t) reg;
 15300     119A  0871               	movf	swap@reg,w
 15301     119B  00F9               	movwf	swap@lowerByte
 15302     119C                     l13403:
 15303                           
 15304                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2533:     reg = ((int1
      +                          6_t) (lowerByte << 8) | upperByte);
 15305     119C  0878               	movf	swap@upperByte,w
 15306     119D  00F3               	movwf	??_swap
 15307     119E  01F4               	clrf	??_swap+1
 15308     119F  0879               	movf	swap@lowerByte,w
 15309     11A0  00F5               	movwf	??_swap+2
 15310     11A1  01F6               	clrf	??_swap+3
 15311     11A2  0875               	movf	??_swap+2,w
 15312     11A3  00F6               	movwf	??_swap+3
 15313     11A4  01F5               	clrf	??_swap+2
 15314     11A5  0873               	movf	??_swap,w
 15315     11A6  0475               	iorwf	??_swap+2,w
 15316     11A7  00F1               	movwf	swap@reg
 15317     11A8  0874               	movf	??_swap+1,w
 15318     11A9  0476               	iorwf	??_swap+3,w
 15319     11AA  00F2               	movwf	swap@reg+1
 15320     11AB                     l13405:
 15321     11AB                     l2681:	
 15322                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2535:     return reg;
 15323                           
 15324     11AB  0008               	return
 15325     11AC                     __end_of_swap:
 15326                           
 15327                           	psect	text15
 15328     11AC                     __ptext15:	
 15329 ;; *************** function _getTemperatureEN *****************
 15330 ;; Defined at:
 15331 ;;		line 2036 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15332 ;; Parameters:    Size  Location     Type
 15333 ;;		None
 15334 ;; Auto vars:     Size  Location     Type
 15335 ;;  tempENreg       1   17[BANK0 ] unsigned char 
 15336 ;;  tempEN          1   16[BANK0 ] unsigned char 
 15337 ;; Return value:  Size  Location     Type
 15338 ;;                  1    wreg      unsigned char 
 15339 ;; Registers used:
 15340 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15341 ;; Tracked objects:
 15342 ;;		On entry : 0/0
 15343 ;;		On exit  : 0/0
 15344 ;;		Unchanged: 0/0
 15345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15347 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15348 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15349 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15350 ;;Total ram usage:        4 bytes
 15351 ;; Hardware stack levels used: 1
 15352 ;; Hardware stack levels required when called: 15
 15353 ;; This function calls:
 15354 ;;		_bitRead
 15355 ;;		_readRegister
 15356 ;; This function is called by:
 15357 ;;		_begin
 15358 ;; This function uses a non-reentrant model
 15359 ;;
 15360                           
 15361     11AC                     _getTemperatureEN:	
 15362                           ;psect for function _getTemperatureEN
 15363                           
 15364     11AC                     l14239:	
 15365                           ;incstack = 0
 15366 ;; hardware stack exceeded
 15367                           ; Regs used in _getTemperatureEN: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15368                           
 15369     11AC                     l14241:
 15370                           
 15371                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2038:     tempENreg = 
      +                          readRegister(TMAG5273_REG_T_CONFIG);
 15372     11AC  3007               	movlw	7
 15373     11AD  3190  206C  3191   	fcall	_readRegister
 15374     11B0  0140               	movlb	0	; select bank0
 15375     11B1  00B1               	movwf	getTemperatureEN@tempENreg
 15376     11B2                     l14243:
 15377                           
 15378                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2040:     uint8_t temp
      +                          EN = bitRead(tempENreg, 0);
 15379     11B2  0831               	movf	getTemperatureEN@tempENreg,w
 15380     11B3  00AE               	movwf	??_getTemperatureEN
 15381     11B4  01AF               	clrf	??_getTemperatureEN+1
 15382     11B5  082E               	movf	??_getTemperatureEN,w
 15383     11B6  00F1               	movwf	bitRead@reg
 15384     11B7  082F               	movf	??_getTemperatureEN+1,w
 15385     11B8  00F2               	movwf	bitRead@reg+1
 15386     11B9  01F3               	clrf	bitRead@position
 15387     11BA  3194  2469  3191   	fcall	_bitRead
 15388     11BD  0140               	movlb	0	; select bank0
 15389     11BE  00B0               	movwf	getTemperatureEN@tempEN
 15390     11BF                     l14245:
 15391                           
 15392                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2042:     return tempE
      +                          N;
 15393     11BF  0830               	movf	getTemperatureEN@tempEN,w
 15394     11C0                     l2580:
 15395     11C0  0008               	return
 15396     11C1                     __end_of_getTemperatureEN:
 15397                           
 15398                           	psect	text16
 15399     0CE2                     __ptext16:	
 15400 ;; *************** function _getOperatingMode *****************
 15401 ;; Defined at:
 15402 ;;		line 1582 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15403 ;; Parameters:    Size  Location     Type
 15404 ;;		None
 15405 ;; Auto vars:     Size  Location     Type
 15406 ;;  opMode1         1   18[BANK0 ] unsigned char 
 15407 ;;  opMode0         1   17[BANK0 ] unsigned char 
 15408 ;;  opMode          1   16[BANK0 ] unsigned char 
 15409 ;; Return value:  Size  Location     Type
 15410 ;;                  1    wreg      unsigned char 
 15411 ;; Registers used:
 15412 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15413 ;; Tracked objects:
 15414 ;;		On entry : 0/0
 15415 ;;		On exit  : 0/0
 15416 ;;		Unchanged: 0/0
 15417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15419 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15420 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15421 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15422 ;;Total ram usage:        5 bytes
 15423 ;; Hardware stack levels used: 1
 15424 ;; Hardware stack levels required when called: 15
 15425 ;; This function calls:
 15426 ;;		_bitRead
 15427 ;;		_readRegister
 15428 ;; This function is called by:
 15429 ;;		_begin
 15430 ;; This function uses a non-reentrant model
 15431 ;;
 15432                           
 15433     0CE2                     _getOperatingMode:	
 15434                           ;psect for function _getOperatingMode
 15435                           
 15436     0CE2                     l14005:	
 15437                           ;incstack = 0
 15438 ;; hardware stack exceeded
 15439                           ; Regs used in _getOperatingMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15440                           
 15441     0CE2                     l14007:
 15442                           
 15443                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1584:     opMode = rea
      +                          dRegister(TMAG5273_REG_DEVICE_CONFIG_2);
 15444     0CE2  3001               	movlw	1
 15445     0CE3  3190  206C  318C   	fcall	_readRegister
 15446     0CE6  0140               	movlb	0	; select bank0
 15447     0CE7  00B0               	movwf	getOperatingMode@opMode
 15448     0CE8                     l14009:
 15449                           
 15450                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1586:     uint8_t opMo
      +                          de0 = bitRead(opMode, 0);
 15451     0CE8  0830               	movf	getOperatingMode@opMode,w
 15452     0CE9  00AE               	movwf	??_getOperatingMode
 15453     0CEA  01AF               	clrf	??_getOperatingMode+1
 15454     0CEB  082E               	movf	??_getOperatingMode,w
 15455     0CEC  00F1               	movwf	bitRead@reg
 15456     0CED  082F               	movf	??_getOperatingMode+1,w
 15457     0CEE  00F2               	movwf	bitRead@reg+1
 15458     0CEF  01F3               	clrf	bitRead@position
 15459     0CF0  3194  2469  318C   	fcall	_bitRead
 15460     0CF3  0140               	movlb	0	; select bank0
 15461     0CF4  00B1               	movwf	getOperatingMode@opMode0
 15462     0CF5                     l14011:
 15463                           
 15464                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1587:     uint8_t opMo
      +                          de1 = bitRead(opMode, 1);
 15465     0CF5  0830               	movf	getOperatingMode@opMode,w
 15466     0CF6  00AE               	movwf	??_getOperatingMode
 15467     0CF7  01AF               	clrf	??_getOperatingMode+1
 15468     0CF8  082E               	movf	??_getOperatingMode,w
 15469     0CF9  00F1               	movwf	bitRead@reg
 15470     0CFA  082F               	movf	??_getOperatingMode+1,w
 15471     0CFB  00F2               	movwf	bitRead@reg+1
 15472     0CFC  01F3               	clrf	bitRead@position
 15473     0CFD  0AF3               	incf	bitRead@position,f
 15474     0CFE  3194  2469  318C   	fcall	_bitRead
 15475     0D01  0140               	movlb	0	; select bank0
 15476     0D02  00B2               	movwf	getOperatingMode@opMode1
 15477     0D03                     l14013:
 15478                           
 15479                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1589:     if ((opMode0
      +                           == 0) && (opMode1 == 0))
 15480     0D03  0831               	movf	getOperatingMode@opMode0,w
 15481     0D04  1D03               	btfss	3,2
 15482     0D05  2D07               	goto	u10851
 15483     0D06  2D08               	goto	u10850
 15484     0D07                     u10851:
 15485     0D07  2D0F               	goto	l14023
 15486     0D08                     u10850:
 15487     0D08                     l14015:
 15488     0D08  0832               	movf	getOperatingMode@opMode1,w
 15489     0D09  1D03               	btfss	3,2
 15490     0D0A  2D0C               	goto	u10861
 15491     0D0B  2D0D               	goto	u10860
 15492     0D0C                     u10861:
 15493     0D0C  2D0F               	goto	l14023
 15494     0D0D                     u10860:
 15495     0D0D                     l14017:
 15496                           
 15497                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1590:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1592:         return 0;
 15498     0D0D  3000               	movlw	0
 15499     0D0E  2D34               	goto	l2452
 15500     0D0F                     l14023:
 15501     0D0F  0331               	decf	getOperatingMode@opMode0,w
 15502     0D10  1D03               	btfss	3,2
 15503     0D11  2D13               	goto	u10871
 15504     0D12  2D14               	goto	u10870
 15505     0D13                     u10871:
 15506     0D13  2D1B               	goto	l14033
 15507     0D14                     u10870:
 15508     0D14                     l14025:
 15509     0D14  0832               	movf	getOperatingMode@opMode1,w
 15510     0D15  1D03               	btfss	3,2
 15511     0D16  2D18               	goto	u10881
 15512     0D17  2D19               	goto	u10880
 15513     0D18                     u10881:
 15514     0D18  2D1B               	goto	l14033
 15515     0D19                     u10880:
 15516     0D19                     l14027:
 15517                           
 15518                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1594:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1596:         return 1;
 15519     0D19  3001               	movlw	1
 15520     0D1A  2D34               	goto	l2452
 15521     0D1B                     l14033:
 15522     0D1B  0831               	movf	getOperatingMode@opMode0,w
 15523     0D1C  1D03               	btfss	3,2
 15524     0D1D  2D1F               	goto	u10891
 15525     0D1E  2D20               	goto	u10890
 15526     0D1F                     u10891:
 15527     0D1F  2D27               	goto	l14043
 15528     0D20                     u10890:
 15529     0D20                     l14035:
 15530     0D20  0332               	decf	getOperatingMode@opMode1,w
 15531     0D21  1D03               	btfss	3,2
 15532     0D22  2D24               	goto	u10901
 15533     0D23  2D25               	goto	u10900
 15534     0D24                     u10901:
 15535     0D24  2D27               	goto	l14043
 15536     0D25                     u10900:
 15537     0D25                     l14037:
 15538                           
 15539                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1598:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1600:         return 2;
 15540     0D25  3002               	movlw	2
 15541     0D26  2D34               	goto	l2452
 15542     0D27                     l14043:
 15543     0D27  0331               	decf	getOperatingMode@opMode0,w
 15544     0D28  1D03               	btfss	3,2
 15545     0D29  2D2B               	goto	u10911
 15546     0D2A  2D2C               	goto	u10910
 15547     0D2B                     u10911:
 15548     0D2B  2D33               	goto	l2455
 15549     0D2C                     u10910:
 15550     0D2C                     l14045:
 15551     0D2C  0332               	decf	getOperatingMode@opMode1,w
 15552     0D2D  1D03               	btfss	3,2
 15553     0D2E  2D30               	goto	u10921
 15554     0D2F  2D31               	goto	u10920
 15555     0D30                     u10921:
 15556     0D30  2D33               	goto	l2455
 15557     0D31                     u10920:
 15558     0D31                     l14047:
 15559                           
 15560                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1602:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1604:         return 3;
 15561     0D31  3003               	movlw	3
 15562     0D32  2D34               	goto	l2452
 15563     0D33                     l2455:
 15564     0D33  2D0D               	goto	l14017
 15565     0D34                     l2452:
 15566     0D34  0008               	return
 15567     0D35                     __end_of_getOperatingMode:
 15568                           
 15569                           	psect	text17
 15570     0377                     __ptext17:	
 15571 ;; *************** function _getMagneticChannel *****************
 15572 ;; Defined at:
 15573 ;;		line 1626 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15574 ;; Parameters:    Size  Location     Type
 15575 ;;		None
 15576 ;; Auto vars:     Size  Location     Type
 15577 ;;  magMode7        1   20[BANK0 ] unsigned char 
 15578 ;;  magMode6        1   19[BANK0 ] unsigned char 
 15579 ;;  magMode5        1   18[BANK0 ] unsigned char 
 15580 ;;  magMode4        1   17[BANK0 ] unsigned char 
 15581 ;;  magChannel      1   16[BANK0 ] unsigned char 
 15582 ;; Return value:  Size  Location     Type
 15583 ;;                  1    wreg      unsigned char 
 15584 ;; Registers used:
 15585 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15586 ;; Tracked objects:
 15587 ;;		On entry : 0/0
 15588 ;;		On exit  : 0/0
 15589 ;;		Unchanged: 0/0
 15590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15592 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15593 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15594 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15595 ;;Total ram usage:        7 bytes
 15596 ;; Hardware stack levels used: 1
 15597 ;; Hardware stack levels required when called: 15
 15598 ;; This function calls:
 15599 ;;		_bitRead
 15600 ;;		_readRegister
 15601 ;; This function is called by:
 15602 ;;		_begin
 15603 ;; This function uses a non-reentrant model
 15604 ;;
 15605                           
 15606     0377                     _getMagneticChannel:	
 15607                           ;psect for function _getMagneticChannel
 15608                           
 15609     0377                     l14055:	
 15610                           ;incstack = 0
 15611 ;; hardware stack exceeded
 15612                           ; Regs used in _getMagneticChannel: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15613                           
 15614     0377                     l14057:
 15615                           
 15616                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1628:     magChannel =
      +                           readRegister(TMAG5273_REG_SENSOR_CONFIG_1);
 15617     0377  3002               	movlw	2
 15618     0378  3190  206C  3183   	fcall	_readRegister
 15619     037B  0140               	movlb	0	; select bank0
 15620     037C  00B0               	movwf	getMagneticChannel@magChannel
 15621     037D                     l14059:
 15622                           
 15623                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1630:     uint8_t magM
      +                          ode4 = bitRead(magChannel, 4);
 15624     037D  0830               	movf	getMagneticChannel@magChannel,w
 15625     037E  00AE               	movwf	??_getMagneticChannel
 15626     037F  01AF               	clrf	??_getMagneticChannel+1
 15627     0380  082E               	movf	??_getMagneticChannel,w
 15628     0381  00F1               	movwf	bitRead@reg
 15629     0382  082F               	movf	??_getMagneticChannel+1,w
 15630     0383  00F2               	movwf	bitRead@reg+1
 15631     0384  3004               	movlw	4
 15632     0385  00F3               	movwf	bitRead@position
 15633     0386  3194  2469  3183   	fcall	_bitRead
 15634     0389  0140               	movlb	0	; select bank0
 15635     038A  00B1               	movwf	getMagneticChannel@magMode4
 15636     038B                     l14061:
 15637                           
 15638                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1631:     uint8_t magM
      +                          ode5 = bitRead(magChannel, 5);
 15639     038B  0830               	movf	getMagneticChannel@magChannel,w
 15640     038C  00AE               	movwf	??_getMagneticChannel
 15641     038D  01AF               	clrf	??_getMagneticChannel+1
 15642     038E  082E               	movf	??_getMagneticChannel,w
 15643     038F  00F1               	movwf	bitRead@reg
 15644     0390  082F               	movf	??_getMagneticChannel+1,w
 15645     0391  00F2               	movwf	bitRead@reg+1
 15646     0392  3005               	movlw	5
 15647     0393  00F3               	movwf	bitRead@position
 15648     0394  3194  2469  3183   	fcall	_bitRead
 15649     0397  0140               	movlb	0	; select bank0
 15650     0398  00B2               	movwf	getMagneticChannel@magMode5
 15651     0399                     l14063:
 15652                           
 15653                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1632:     uint8_t magM
      +                          ode6 = bitRead(magChannel, 6);
 15654     0399  0830               	movf	getMagneticChannel@magChannel,w
 15655     039A  00AE               	movwf	??_getMagneticChannel
 15656     039B  01AF               	clrf	??_getMagneticChannel+1
 15657     039C  082E               	movf	??_getMagneticChannel,w
 15658     039D  00F1               	movwf	bitRead@reg
 15659     039E  082F               	movf	??_getMagneticChannel+1,w
 15660     039F  00F2               	movwf	bitRead@reg+1
 15661     03A0  3006               	movlw	6
 15662     03A1  00F3               	movwf	bitRead@position
 15663     03A2  3194  2469  3183   	fcall	_bitRead
 15664     03A5  0140               	movlb	0	; select bank0
 15665     03A6  00B3               	movwf	getMagneticChannel@magMode6
 15666     03A7                     l14065:
 15667                           
 15668                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1633:     uint8_t magM
      +                          ode7 = bitRead(magChannel, 7);
 15669     03A7  0830               	movf	getMagneticChannel@magChannel,w
 15670     03A8  00AE               	movwf	??_getMagneticChannel
 15671     03A9  01AF               	clrf	??_getMagneticChannel+1
 15672     03AA  082E               	movf	??_getMagneticChannel,w
 15673     03AB  00F1               	movwf	bitRead@reg
 15674     03AC  082F               	movf	??_getMagneticChannel+1,w
 15675     03AD  00F2               	movwf	bitRead@reg+1
 15676     03AE  3007               	movlw	7
 15677     03AF  00F3               	movwf	bitRead@position
 15678     03B0  3194  2469  3183   	fcall	_bitRead
 15679     03B3  0140               	movlb	0	; select bank0
 15680     03B4  00B4               	movwf	getMagneticChannel@magMode7
 15681     03B5                     l14067:
 15682                           
 15683                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1635:     if ((magMode
      +                          4 == 0) && (magMode5 == 0) && (magMode6 == 0) && (magMode7 == 0))
 15684     03B5  0831               	movf	getMagneticChannel@magMode4,w
 15685     03B6  1D03               	btfss	3,2
 15686     03B7  2BB9               	goto	u10931
 15687     03B8  2BBA               	goto	u10930
 15688     03B9                     u10931:
 15689     03B9  2BCB               	goto	l14081
 15690     03BA                     u10930:
 15691     03BA                     l14069:
 15692     03BA  0832               	movf	getMagneticChannel@magMode5,w
 15693     03BB  1D03               	btfss	3,2
 15694     03BC  2BBE               	goto	u10941
 15695     03BD  2BBF               	goto	u10940
 15696     03BE                     u10941:
 15697     03BE  2BCB               	goto	l14081
 15698     03BF                     u10940:
 15699     03BF                     l14071:
 15700     03BF  0833               	movf	getMagneticChannel@magMode6,w
 15701     03C0  1D03               	btfss	3,2
 15702     03C1  2BC3               	goto	u10951
 15703     03C2  2BC4               	goto	u10950
 15704     03C3                     u10951:
 15705     03C3  2BCB               	goto	l14081
 15706     03C4                     u10950:
 15707     03C4                     l14073:
 15708     03C4  0834               	movf	getMagneticChannel@magMode7,w
 15709     03C5  1D03               	btfss	3,2
 15710     03C6  2BC8               	goto	u10961
 15711     03C7  2BC9               	goto	u10960
 15712     03C8                     u10961:
 15713     03C8  2BCB               	goto	l14081
 15714     03C9                     u10960:
 15715     03C9                     l14075:
 15716                           
 15717                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1636:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1637:         return 0;
 15718     03C9  3000               	movlw	0
 15719     03CA  2CBC               	goto	l2462
 15720     03CB                     l14081:
 15721     03CB  0331               	decf	getMagneticChannel@magMode4,w
 15722     03CC  1D03               	btfss	3,2
 15723     03CD  2BCF               	goto	u10971
 15724     03CE  2BD0               	goto	u10970
 15725     03CF                     u10971:
 15726     03CF  2BE1               	goto	l14095
 15727     03D0                     u10970:
 15728     03D0                     l14083:
 15729     03D0  0832               	movf	getMagneticChannel@magMode5,w
 15730     03D1  1D03               	btfss	3,2
 15731     03D2  2BD4               	goto	u10981
 15732     03D3  2BD5               	goto	u10980
 15733     03D4                     u10981:
 15734     03D4  2BE1               	goto	l14095
 15735     03D5                     u10980:
 15736     03D5                     l14085:
 15737     03D5  0833               	movf	getMagneticChannel@magMode6,w
 15738     03D6  1D03               	btfss	3,2
 15739     03D7  2BD9               	goto	u10991
 15740     03D8  2BDA               	goto	u10990
 15741     03D9                     u10991:
 15742     03D9  2BE1               	goto	l14095
 15743     03DA                     u10990:
 15744     03DA                     l14087:
 15745     03DA  0834               	movf	getMagneticChannel@magMode7,w
 15746     03DB  1D03               	btfss	3,2
 15747     03DC  2BDE               	goto	u11001
 15748     03DD  2BDF               	goto	u11000
 15749     03DE                     u11001:
 15750     03DE  2BE1               	goto	l14095
 15751     03DF                     u11000:
 15752     03DF                     l14089:
 15753                           
 15754                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1639:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1640:         return 1;
 15755     03DF  3001               	movlw	1
 15756     03E0  2CBC               	goto	l2462
 15757     03E1                     l14095:
 15758     03E1  0831               	movf	getMagneticChannel@magMode4,w
 15759     03E2  1D03               	btfss	3,2
 15760     03E3  2BE5               	goto	u11011
 15761     03E4  2BE6               	goto	u11010
 15762     03E5                     u11011:
 15763     03E5  2BF7               	goto	l14109
 15764     03E6                     u11010:
 15765     03E6                     l14097:
 15766     03E6  0332               	decf	getMagneticChannel@magMode5,w
 15767     03E7  1D03               	btfss	3,2
 15768     03E8  2BEA               	goto	u11021
 15769     03E9  2BEB               	goto	u11020
 15770     03EA                     u11021:
 15771     03EA  2BF7               	goto	l14109
 15772     03EB                     u11020:
 15773     03EB                     l14099:
 15774     03EB  0833               	movf	getMagneticChannel@magMode6,w
 15775     03EC  1D03               	btfss	3,2
 15776     03ED  2BEF               	goto	u11031
 15777     03EE  2BF0               	goto	u11030
 15778     03EF                     u11031:
 15779     03EF  2BF7               	goto	l14109
 15780     03F0                     u11030:
 15781     03F0                     l14101:
 15782     03F0  0834               	movf	getMagneticChannel@magMode7,w
 15783     03F1  1D03               	btfss	3,2
 15784     03F2  2BF4               	goto	u11041
 15785     03F3  2BF5               	goto	u11040
 15786     03F4                     u11041:
 15787     03F4  2BF7               	goto	l14109
 15788     03F5                     u11040:
 15789     03F5                     l14103:
 15790                           
 15791                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1642:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1643:         return 2;
 15792     03F5  3002               	movlw	2
 15793     03F6  2CBC               	goto	l2462
 15794     03F7                     l14109:
 15795     03F7  0331               	decf	getMagneticChannel@magMode4,w
 15796     03F8  1D03               	btfss	3,2
 15797     03F9  2BFB               	goto	u11051
 15798     03FA  2BFC               	goto	u11050
 15799     03FB                     u11051:
 15800     03FB  2C0D               	goto	l14123
 15801     03FC                     u11050:
 15802     03FC                     l14111:
 15803     03FC  0332               	decf	getMagneticChannel@magMode5,w
 15804     03FD  1D03               	btfss	3,2
 15805     03FE  2C00               	goto	u11061
 15806     03FF  2C01               	goto	u11060
 15807     0400                     u11061:
 15808     0400  2C0D               	goto	l14123
 15809     0401                     u11060:
 15810     0401                     l14113:
 15811     0401  0833               	movf	getMagneticChannel@magMode6,w
 15812     0402  1D03               	btfss	3,2
 15813     0403  2C05               	goto	u11071
 15814     0404  2C06               	goto	u11070
 15815     0405                     u11071:
 15816     0405  2C0D               	goto	l14123
 15817     0406                     u11070:
 15818     0406                     l14115:
 15819     0406  0834               	movf	getMagneticChannel@magMode7,w
 15820     0407  1D03               	btfss	3,2
 15821     0408  2C0A               	goto	u11081
 15822     0409  2C0B               	goto	u11080
 15823     040A                     u11081:
 15824     040A  2C0D               	goto	l14123
 15825     040B                     u11080:
 15826     040B                     l14117:
 15827                           
 15828                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1645:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1646:         return 3;
 15829     040B  3003               	movlw	3
 15830     040C  2CBC               	goto	l2462
 15831     040D                     l14123:
 15832     040D  0831               	movf	getMagneticChannel@magMode4,w
 15833     040E  1D03               	btfss	3,2
 15834     040F  2C11               	goto	u11091
 15835     0410  2C12               	goto	u11090
 15836     0411                     u11091:
 15837     0411  2C23               	goto	l14137
 15838     0412                     u11090:
 15839     0412                     l14125:
 15840     0412  0832               	movf	getMagneticChannel@magMode5,w
 15841     0413  1D03               	btfss	3,2
 15842     0414  2C16               	goto	u11101
 15843     0415  2C17               	goto	u11100
 15844     0416                     u11101:
 15845     0416  2C23               	goto	l14137
 15846     0417                     u11100:
 15847     0417                     l14127:
 15848     0417  0333               	decf	getMagneticChannel@magMode6,w
 15849     0418  1D03               	btfss	3,2
 15850     0419  2C1B               	goto	u11111
 15851     041A  2C1C               	goto	u11110
 15852     041B                     u11111:
 15853     041B  2C23               	goto	l14137
 15854     041C                     u11110:
 15855     041C                     l14129:
 15856     041C  0834               	movf	getMagneticChannel@magMode7,w
 15857     041D  1D03               	btfss	3,2
 15858     041E  2C20               	goto	u11121
 15859     041F  2C21               	goto	u11120
 15860     0420                     u11121:
 15861     0420  2C23               	goto	l14137
 15862     0421                     u11120:
 15863     0421                     l14131:
 15864                           
 15865                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1648:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1649:         return 4;
 15866     0421  3004               	movlw	4
 15867     0422  2CBC               	goto	l2462
 15868     0423                     l14137:
 15869     0423  0331               	decf	getMagneticChannel@magMode4,w
 15870     0424  1D03               	btfss	3,2
 15871     0425  2C27               	goto	u11131
 15872     0426  2C28               	goto	u11130
 15873     0427                     u11131:
 15874     0427  2C39               	goto	l14151
 15875     0428                     u11130:
 15876     0428                     l14139:
 15877     0428  0832               	movf	getMagneticChannel@magMode5,w
 15878     0429  1D03               	btfss	3,2
 15879     042A  2C2C               	goto	u11141
 15880     042B  2C2D               	goto	u11140
 15881     042C                     u11141:
 15882     042C  2C39               	goto	l14151
 15883     042D                     u11140:
 15884     042D                     l14141:
 15885     042D  0333               	decf	getMagneticChannel@magMode6,w
 15886     042E  1D03               	btfss	3,2
 15887     042F  2C31               	goto	u11151
 15888     0430  2C32               	goto	u11150
 15889     0431                     u11151:
 15890     0431  2C39               	goto	l14151
 15891     0432                     u11150:
 15892     0432                     l14143:
 15893     0432  0834               	movf	getMagneticChannel@magMode7,w
 15894     0433  1D03               	btfss	3,2
 15895     0434  2C36               	goto	u11161
 15896     0435  2C37               	goto	u11160
 15897     0436                     u11161:
 15898     0436  2C39               	goto	l14151
 15899     0437                     u11160:
 15900     0437                     l14145:
 15901                           
 15902                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1651:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1652:         return 5;
 15903     0437  3005               	movlw	5
 15904     0438  2CBC               	goto	l2462
 15905     0439                     l14151:
 15906     0439  0831               	movf	getMagneticChannel@magMode4,w
 15907     043A  1D03               	btfss	3,2
 15908     043B  2C3D               	goto	u11171
 15909     043C  2C3E               	goto	u11170
 15910     043D                     u11171:
 15911     043D  2C4F               	goto	l14165
 15912     043E                     u11170:
 15913     043E                     l14153:
 15914     043E  0332               	decf	getMagneticChannel@magMode5,w
 15915     043F  1D03               	btfss	3,2
 15916     0440  2C42               	goto	u11181
 15917     0441  2C43               	goto	u11180
 15918     0442                     u11181:
 15919     0442  2C4F               	goto	l14165
 15920     0443                     u11180:
 15921     0443                     l14155:
 15922     0443  0333               	decf	getMagneticChannel@magMode6,w
 15923     0444  1D03               	btfss	3,2
 15924     0445  2C47               	goto	u11191
 15925     0446  2C48               	goto	u11190
 15926     0447                     u11191:
 15927     0447  2C4F               	goto	l14165
 15928     0448                     u11190:
 15929     0448                     l14157:
 15930     0448  0834               	movf	getMagneticChannel@magMode7,w
 15931     0449  1D03               	btfss	3,2
 15932     044A  2C4C               	goto	u11201
 15933     044B  2C4D               	goto	u11200
 15934     044C                     u11201:
 15935     044C  2C4F               	goto	l14165
 15936     044D                     u11200:
 15937     044D                     l14159:
 15938                           
 15939                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1654:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1655:         return 6;
 15940     044D  3006               	movlw	6
 15941     044E  2CBC               	goto	l2462
 15942     044F                     l14165:
 15943     044F  0331               	decf	getMagneticChannel@magMode4,w
 15944     0450  1D03               	btfss	3,2
 15945     0451  2C53               	goto	u11211
 15946     0452  2C54               	goto	u11210
 15947     0453                     u11211:
 15948     0453  2C65               	goto	l14179
 15949     0454                     u11210:
 15950     0454                     l14167:
 15951     0454  0332               	decf	getMagneticChannel@magMode5,w
 15952     0455  1D03               	btfss	3,2
 15953     0456  2C58               	goto	u11221
 15954     0457  2C59               	goto	u11220
 15955     0458                     u11221:
 15956     0458  2C65               	goto	l14179
 15957     0459                     u11220:
 15958     0459                     l14169:
 15959     0459  0333               	decf	getMagneticChannel@magMode6,w
 15960     045A  1D03               	btfss	3,2
 15961     045B  2C5D               	goto	u11231
 15962     045C  2C5E               	goto	u11230
 15963     045D                     u11231:
 15964     045D  2C65               	goto	l14179
 15965     045E                     u11230:
 15966     045E                     l14171:
 15967     045E  0834               	movf	getMagneticChannel@magMode7,w
 15968     045F  1D03               	btfss	3,2
 15969     0460  2C62               	goto	u11241
 15970     0461  2C63               	goto	u11240
 15971     0462                     u11241:
 15972     0462  2C65               	goto	l14179
 15973     0463                     u11240:
 15974     0463                     l14173:
 15975                           
 15976                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1657:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1658:         return 7;
 15977     0463  3007               	movlw	7
 15978     0464  2CBC               	goto	l2462
 15979     0465                     l14179:
 15980     0465  0831               	movf	getMagneticChannel@magMode4,w
 15981     0466  1D03               	btfss	3,2
 15982     0467  2C69               	goto	u11251
 15983     0468  2C6A               	goto	u11250
 15984     0469                     u11251:
 15985     0469  2C7B               	goto	l14193
 15986     046A                     u11250:
 15987     046A                     l14181:
 15988     046A  0832               	movf	getMagneticChannel@magMode5,w
 15989     046B  1D03               	btfss	3,2
 15990     046C  2C6E               	goto	u11261
 15991     046D  2C6F               	goto	u11260
 15992     046E                     u11261:
 15993     046E  2C7B               	goto	l14193
 15994     046F                     u11260:
 15995     046F                     l14183:
 15996     046F  0833               	movf	getMagneticChannel@magMode6,w
 15997     0470  1D03               	btfss	3,2
 15998     0471  2C73               	goto	u11271
 15999     0472  2C74               	goto	u11270
 16000     0473                     u11271:
 16001     0473  2C7B               	goto	l14193
 16002     0474                     u11270:
 16003     0474                     l14185:
 16004     0474  0334               	decf	getMagneticChannel@magMode7,w
 16005     0475  1D03               	btfss	3,2
 16006     0476  2C78               	goto	u11281
 16007     0477  2C79               	goto	u11280
 16008     0478                     u11281:
 16009     0478  2C7B               	goto	l14193
 16010     0479                     u11280:
 16011     0479                     l14187:
 16012                           
 16013                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1660:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1661:         return 8;
 16014     0479  3008               	movlw	8
 16015     047A  2CBC               	goto	l2462
 16016     047B                     l14193:
 16017     047B  0331               	decf	getMagneticChannel@magMode4,w
 16018     047C  1D03               	btfss	3,2
 16019     047D  2C7F               	goto	u11291
 16020     047E  2C80               	goto	u11290
 16021     047F                     u11291:
 16022     047F  2C91               	goto	l14207
 16023     0480                     u11290:
 16024     0480                     l14195:
 16025     0480  0832               	movf	getMagneticChannel@magMode5,w
 16026     0481  1D03               	btfss	3,2
 16027     0482  2C84               	goto	u11301
 16028     0483  2C85               	goto	u11300
 16029     0484                     u11301:
 16030     0484  2C91               	goto	l14207
 16031     0485                     u11300:
 16032     0485                     l14197:
 16033     0485  0833               	movf	getMagneticChannel@magMode6,w
 16034     0486  1D03               	btfss	3,2
 16035     0487  2C89               	goto	u11311
 16036     0488  2C8A               	goto	u11310
 16037     0489                     u11311:
 16038     0489  2C91               	goto	l14207
 16039     048A                     u11310:
 16040     048A                     l14199:
 16041     048A  0334               	decf	getMagneticChannel@magMode7,w
 16042     048B  1D03               	btfss	3,2
 16043     048C  2C8E               	goto	u11321
 16044     048D  2C8F               	goto	u11320
 16045     048E                     u11321:
 16046     048E  2C91               	goto	l14207
 16047     048F                     u11320:
 16048     048F                     l14201:
 16049                           
 16050                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1663:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1664:         return 9;
 16051     048F  3009               	movlw	9
 16052     0490  2CBC               	goto	l2462
 16053     0491                     l14207:
 16054     0491  0831               	movf	getMagneticChannel@magMode4,w
 16055     0492  1D03               	btfss	3,2
 16056     0493  2C95               	goto	u11331
 16057     0494  2C96               	goto	u11330
 16058     0495                     u11331:
 16059     0495  2CA7               	goto	l14221
 16060     0496                     u11330:
 16061     0496                     l14209:
 16062     0496  0332               	decf	getMagneticChannel@magMode5,w
 16063     0497  1D03               	btfss	3,2
 16064     0498  2C9A               	goto	u11341
 16065     0499  2C9B               	goto	u11340
 16066     049A                     u11341:
 16067     049A  2CA7               	goto	l14221
 16068     049B                     u11340:
 16069     049B                     l14211:
 16070     049B  0833               	movf	getMagneticChannel@magMode6,w
 16071     049C  1D03               	btfss	3,2
 16072     049D  2C9F               	goto	u11351
 16073     049E  2CA0               	goto	u11350
 16074     049F                     u11351:
 16075     049F  2CA7               	goto	l14221
 16076     04A0                     u11350:
 16077     04A0                     l14213:
 16078     04A0  0334               	decf	getMagneticChannel@magMode7,w
 16079     04A1  1D03               	btfss	3,2
 16080     04A2  2CA4               	goto	u11361
 16081     04A3  2CA5               	goto	u11360
 16082     04A4                     u11361:
 16083     04A4  2CA7               	goto	l14221
 16084     04A5                     u11360:
 16085     04A5                     l14215:
 16086                           
 16087                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1666:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1667:         return 10;
 16088     04A5  300A               	movlw	10
 16089     04A6  2CBC               	goto	l2462
 16090     04A7                     l14221:
 16091     04A7  0331               	decf	getMagneticChannel@magMode4,w
 16092     04A8  1D03               	btfss	3,2
 16093     04A9  2CAB               	goto	u11371
 16094     04AA  2CAC               	goto	u11370
 16095     04AB                     u11371:
 16096     04AB  2BC9               	goto	l14075
 16097     04AC                     u11370:
 16098     04AC                     l14223:
 16099     04AC  0332               	decf	getMagneticChannel@magMode5,w
 16100     04AD  1D03               	btfss	3,2
 16101     04AE  2CB0               	goto	u11381
 16102     04AF  2CB1               	goto	u11380
 16103     04B0                     u11381:
 16104     04B0  2BC9               	goto	l14075
 16105     04B1                     u11380:
 16106     04B1                     l14225:
 16107     04B1  0833               	movf	getMagneticChannel@magMode6,w
 16108     04B2  1D03               	btfss	3,2
 16109     04B3  2CB5               	goto	u11391
 16110     04B4  2CB6               	goto	u11390
 16111     04B5                     u11391:
 16112     04B5  2BC9               	goto	l14075
 16113     04B6                     u11390:
 16114     04B6                     l14227:
 16115     04B6  0334               	decf	getMagneticChannel@magMode7,w
 16116     04B7  1D03               	btfss	3,2
 16117     04B8  2CBA               	goto	u11401
 16118     04B9  2CBB               	goto	u11400
 16119     04BA                     u11401:
 16120     04BA  2BC9               	goto	l14075
 16121     04BB                     u11400:
 16122     04BB                     l14229:
 16123                           
 16124                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1669:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1670:         return 11;
 16125     04BB  300B               	movlw	11
 16126     04BC                     l2462:
 16127     04BC  0008               	return
 16128     04BD                     __end_of_getMagneticChannel:
 16129                           
 16130                           	psect	text18
 16131     0800                     __ptext18:	
 16132 ;; *************** function _getLowPower *****************
 16133 ;; Defined at:
 16134 ;;		line 1531 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 16135 ;; Parameters:    Size  Location     Type
 16136 ;;		None
 16137 ;; Auto vars:     Size  Location     Type
 16138 ;;  lowPowerMode    1   17[BANK0 ] unsigned char 
 16139 ;;  lowPowerMode    1   16[BANK0 ] unsigned char 
 16140 ;; Return value:  Size  Location     Type
 16141 ;;                  1    wreg      unsigned char 
 16142 ;; Registers used:
 16143 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16144 ;; Tracked objects:
 16145 ;;		On entry : 0/0
 16146 ;;		On exit  : 0/0
 16147 ;;		Unchanged: 0/0
 16148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16150 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16151 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16152 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16153 ;;Total ram usage:        4 bytes
 16154 ;; Hardware stack levels used: 1
 16155 ;; Hardware stack levels required when called: 15
 16156 ;; This function calls:
 16157 ;;		_bitRead
 16158 ;;		_readRegister
 16159 ;; This function is called by:
 16160 ;;		_begin
 16161 ;; This function uses a non-reentrant model
 16162 ;;
 16163                           
 16164     0800                     _getLowPower:	
 16165                           ;psect for function _getLowPower
 16166                           
 16167     0800                     l13995:	
 16168                           ;incstack = 0
 16169 ;; hardware stack exceeded
 16170                           ; Regs used in _getLowPower: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16171                           
 16172     0800                     l13997:
 16173                           
 16174                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1533:     lowPowerMode
      +                           = readRegister(TMAG5273_REG_DEVICE_CONFIG_2);
 16175     0800  3001               	movlw	1
 16176     0801  3190  206C  3188   	fcall	_readRegister
 16177     0804  0140               	movlb	0	; select bank0
 16178     0805  00B1               	movwf	getLowPower@lowPowerMode
 16179     0806                     l13999:
 16180                           
 16181                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1535:     uint8_t lowP
      +                          owerModeBit = bitRead(lowPowerMode, 4);
 16182     0806  0831               	movf	getLowPower@lowPowerMode,w
 16183     0807  00AE               	movwf	??_getLowPower
 16184     0808  01AF               	clrf	??_getLowPower+1
 16185     0809  082E               	movf	??_getLowPower,w
 16186     080A  00F1               	movwf	bitRead@reg
 16187     080B  082F               	movf	??_getLowPower+1,w
 16188     080C  00F2               	movwf	bitRead@reg+1
 16189     080D  3004               	movlw	4
 16190     080E  00F3               	movwf	bitRead@position
 16191     080F  3194  2469  3188   	fcall	_bitRead
 16192     0812  0140               	movlb	0	; select bank0
 16193     0813  00B0               	movwf	getLowPower@lowPowerModeBit
 16194     0814                     l14001:
 16195                           
 16196                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1537:     return lowPo
      +                          werModeBit;
 16197     0814  0830               	movf	getLowPower@lowPowerModeBit,w
 16198     0815                     l2442:
 16199     0815  0008               	return
 16200     0816                     __end_of_getLowPower:
 16201                           
 16202                           	psect	text19
 16203     0D35                     __ptext19:	
 16204 ;; *************** function _getAngleEn *****************
 16205 ;; Defined at:
 16206 ;;		line 1887 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 16207 ;; Parameters:    Size  Location     Type
 16208 ;;		None
 16209 ;; Auto vars:     Size  Location     Type
 16210 ;;  angleDir3       1   18[BANK0 ] unsigned char 
 16211 ;;  angleDir2       1   17[BANK0 ] unsigned char 
 16212 ;;  angleReg        1   16[BANK0 ] unsigned char 
 16213 ;; Return value:  Size  Location     Type
 16214 ;;                  1    wreg      unsigned char 
 16215 ;; Registers used:
 16216 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16217 ;; Tracked objects:
 16218 ;;		On entry : 0/0
 16219 ;;		On exit  : 0/0
 16220 ;;		Unchanged: 0/0
 16221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16223 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16224 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16225 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16226 ;;Total ram usage:        5 bytes
 16227 ;; Hardware stack levels used: 1
 16228 ;; Hardware stack levels required when called: 15
 16229 ;; This function calls:
 16230 ;;		_bitRead
 16231 ;;		_readRegister
 16232 ;; This function is called by:
 16233 ;;		_begin
 16234 ;;		_setMagneticOffset2
 16235 ;;		_getMagneticOffset2
 16236 ;; This function uses a non-reentrant model
 16237 ;;
 16238                           
 16239     0D35                     _getAngleEn:	
 16240                           ;psect for function _getAngleEn
 16241                           
 16242     0D35                     l14249:	
 16243                           ;incstack = 0
 16244 ;; hardware stack exceeded
 16245                           ; Regs used in _getAngleEn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16246                           
 16247     0D35                     l14251:
 16248                           
 16249                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1889:     angleReg = r
      +                          eadRegister(TMAG5273_REG_SENSOR_CONFIG_2);
 16250     0D35  3003               	movlw	3
 16251     0D36  3190  206C  318D   	fcall	_readRegister
 16252     0D39  0140               	movlb	0	; select bank0
 16253     0D3A  00B0               	movwf	getAngleEn@angleReg
 16254     0D3B                     l14253:
 16255                           
 16256                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1891:     uint8_t angl
      +                          eDir2 = bitRead(angleReg, 2);
 16257     0D3B  0830               	movf	getAngleEn@angleReg,w
 16258     0D3C  00AE               	movwf	??_getAngleEn
 16259     0D3D  01AF               	clrf	??_getAngleEn+1
 16260     0D3E  082E               	movf	??_getAngleEn,w
 16261     0D3F  00F1               	movwf	bitRead@reg
 16262     0D40  082F               	movf	??_getAngleEn+1,w
 16263     0D41  00F2               	movwf	bitRead@reg+1
 16264     0D42  3002               	movlw	2
 16265     0D43  00F3               	movwf	bitRead@position
 16266     0D44  3194  2469  318D   	fcall	_bitRead
 16267     0D47  0140               	movlb	0	; select bank0
 16268     0D48  00B1               	movwf	getAngleEn@angleDir2
 16269     0D49                     l14255:
 16270                           
 16271                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1892:     uint8_t angl
      +                          eDir3 = bitRead(angleReg, 3);
 16272     0D49  0830               	movf	getAngleEn@angleReg,w
 16273     0D4A  00AE               	movwf	??_getAngleEn
 16274     0D4B  01AF               	clrf	??_getAngleEn+1
 16275     0D4C  082E               	movf	??_getAngleEn,w
 16276     0D4D  00F1               	movwf	bitRead@reg
 16277     0D4E  082F               	movf	??_getAngleEn+1,w
 16278     0D4F  00F2               	movwf	bitRead@reg+1
 16279     0D50  3003               	movlw	3
 16280     0D51  00F3               	movwf	bitRead@position
 16281     0D52  3194  2469  318D   	fcall	_bitRead
 16282     0D55  0140               	movlb	0	; select bank0
 16283     0D56  00B2               	movwf	getAngleEn@angleDir3
 16284     0D57                     l14257:
 16285                           
 16286                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1894:     if ((angleDi
      +                          r2 == 0) && (angleDir3 == 0))
 16287     0D57  0831               	movf	getAngleEn@angleDir2,w
 16288     0D58  1D03               	btfss	3,2
 16289     0D59  2D5B               	goto	u11411
 16290     0D5A  2D5C               	goto	u11410
 16291     0D5B                     u11411:
 16292     0D5B  2D63               	goto	l14267
 16293     0D5C                     u11410:
 16294     0D5C                     l14259:
 16295     0D5C  0832               	movf	getAngleEn@angleDir3,w
 16296     0D5D  1D03               	btfss	3,2
 16297     0D5E  2D60               	goto	u11421
 16298     0D5F  2D61               	goto	u11420
 16299     0D60                     u11421:
 16300     0D60  2D63               	goto	l14267
 16301     0D61                     u11420:
 16302     0D61                     l14261:
 16303                           
 16304                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1895:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1897:         return 0;
 16305     0D61  3000               	movlw	0
 16306     0D62  2D88               	goto	l2547
 16307     0D63                     l14267:
 16308     0D63  0331               	decf	getAngleEn@angleDir2,w
 16309     0D64  1D03               	btfss	3,2
 16310     0D65  2D67               	goto	u11431
 16311     0D66  2D68               	goto	u11430
 16312     0D67                     u11431:
 16313     0D67  2D6F               	goto	l14277
 16314     0D68                     u11430:
 16315     0D68                     l14269:
 16316     0D68  0832               	movf	getAngleEn@angleDir3,w
 16317     0D69  1D03               	btfss	3,2
 16318     0D6A  2D6C               	goto	u11441
 16319     0D6B  2D6D               	goto	u11440
 16320     0D6C                     u11441:
 16321     0D6C  2D6F               	goto	l14277
 16322     0D6D                     u11440:
 16323     0D6D                     l14271:
 16324                           
 16325                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1899:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1901:         return 1;
 16326     0D6D  3001               	movlw	1
 16327     0D6E  2D88               	goto	l2547
 16328     0D6F                     l14277:
 16329     0D6F  0831               	movf	getAngleEn@angleDir2,w
 16330     0D70  1D03               	btfss	3,2
 16331     0D71  2D73               	goto	u11451
 16332     0D72  2D74               	goto	u11450
 16333     0D73                     u11451:
 16334     0D73  2D7B               	goto	l14287
 16335     0D74                     u11450:
 16336     0D74                     l14279:
 16337     0D74  0332               	decf	getAngleEn@angleDir3,w
 16338     0D75  1D03               	btfss	3,2
 16339     0D76  2D78               	goto	u11461
 16340     0D77  2D79               	goto	u11460
 16341     0D78                     u11461:
 16342     0D78  2D7B               	goto	l14287
 16343     0D79                     u11460:
 16344     0D79                     l14281:
 16345                           
 16346                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1903:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1905:         return 2;
 16347     0D79  3002               	movlw	2
 16348     0D7A  2D88               	goto	l2547
 16349     0D7B                     l14287:
 16350     0D7B  0331               	decf	getAngleEn@angleDir2,w
 16351     0D7C  1D03               	btfss	3,2
 16352     0D7D  2D7F               	goto	u11471
 16353     0D7E  2D80               	goto	u11470
 16354     0D7F                     u11471:
 16355     0D7F  2D87               	goto	l2550
 16356     0D80                     u11470:
 16357     0D80                     l14289:
 16358     0D80  0332               	decf	getAngleEn@angleDir3,w
 16359     0D81  1D03               	btfss	3,2
 16360     0D82  2D84               	goto	u11481
 16361     0D83  2D85               	goto	u11480
 16362     0D84                     u11481:
 16363     0D84  2D87               	goto	l2550
 16364     0D85                     u11480:
 16365     0D85                     l14291:
 16366                           
 16367                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1907:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1909:         return 3;
 16368     0D85  3003               	movlw	3
 16369     0D86  2D88               	goto	l2547
 16370     0D87                     l2550:
 16371     0D87  2D61               	goto	l14261
 16372     0D88                     l2547:
 16373     0D88  0008               	return
 16374     0D89                     __end_of_getAngleEn:
 16375                           
 16376                           	psect	text20
 16377     1469                     __ptext20:	
 16378 ;; *************** function _bitRead *****************
 16379 ;; Defined at:
 16380 ;;		line 2507 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 16381 ;; Parameters:    Size  Location     Type
 16382 ;;  reg             2    1[COMMON] unsigned short 
 16383 ;;  position        1    3[COMMON] unsigned char 
 16384 ;; Auto vars:     Size  Location     Type
 16385 ;;		None
 16386 ;; Return value:  Size  Location     Type
 16387 ;;                  1    wreg      unsigned char 
 16388 ;; Registers used:
 16389 ;;		wreg, status,2, status,0
 16390 ;; Tracked objects:
 16391 ;;		On entry : 0/0
 16392 ;;		On exit  : 0/0
 16393 ;;		Unchanged: 0/0
 16394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16395 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16397 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16398 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16399 ;;Total ram usage:        9 bytes
 16400 ;; Hardware stack levels used: 1
 16401 ;; Hardware stack levels required when called: 4
 16402 ;; This function calls:
 16403 ;;		Nothing
 16404 ;; This function is called by:
 16405 ;;		_getLowPower
 16406 ;;		_getOperatingMode
 16407 ;;		_getMagneticChannel
 16408 ;;		_getAngleEn
 16409 ;;		_getTemperatureEN
 16410 ;;		_getError
 16411 ;;		_getCRCMode
 16412 ;;		_getMagTemp
 16413 ;;		_getConvAvg
 16414 ;;		_getReadMode
 16415 ;;		_getIntThreshold
 16416 ;;		_getGlitchFiler
 16417 ;;		_getTriggerMode
 16418 ;;		_getSleeptime
 16419 ;;		_getMagDir
 16420 ;;		_getMagnitudeChannelSelect
 16421 ;;		_getXYAxisRange
 16422 ;;		_getZAxisRange
 16423 ;;		_getInterruptResult
 16424 ;;		_getThresholdEn
 16425 ;;		_getIntPinState
 16426 ;;		_getInterruptMode
 16427 ;;		_getMaskInt
 16428 ;;		_getPOR
 16429 ;;		_getDiagStatus
 16430 ;;		_getResultStatus
 16431 ;;		_getDeviceID
 16432 ;;		_getInterruptPinStatus
 16433 ;; This function uses a non-reentrant model
 16434 ;;
 16435                           
 16436     1469                     _bitRead:	
 16437                           ;psect for function _bitRead
 16438                           
 16439     1469                     l13383:	
 16440                           ;incstack = 0
 16441                           ; Regs used in _bitRead: [wreg+status,2+status,0]
 16442                           
 16443                           
 16444                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2508:     if (reg & (1
      +                           << position) == 0) {
 16445     1469  3001               	movlw	1
 16446     146A  00F4               	movwf	??_bitRead
 16447     146B  3000               	movlw	0
 16448     146C  00F5               	movwf	??_bitRead+1
 16449     146D  0A73               	incf	bitRead@position,w
 16450     146E  2C71               	goto	u10294
 16451     146F                     u10295:
 16452     146F  35F4               	lslf	??_bitRead,f
 16453     1470  0DF5               	rlf	??_bitRead+1,f
 16454     1471                     u10294:
 16455     1471  0B89               	decfsz	9,f
 16456     1472  2C6F               	goto	u10295
 16457     1473  0874               	movf	??_bitRead,w
 16458     1474  0475               	iorwf	??_bitRead+1,w
 16459     1475  1903               	btfsc	3,2
 16460     1476  2C78               	goto	u10301
 16461     1477  2C7A               	goto	u10300
 16462     1478                     u10301:
 16463     1478  3001               	movlw	1
 16464     1479  2C7B               	goto	u10310
 16465     147A                     u10300:
 16466     147A  3000               	movlw	0
 16467     147B                     u10310:
 16468     147B  00F6               	movwf	??_bitRead+2
 16469     147C  01F7               	clrf	??_bitRead+3
 16470     147D  0871               	movf	bitRead@reg,w
 16471     147E  0576               	andwf	??_bitRead+2,w
 16472     147F  00F8               	movwf	??_bitRead+4
 16473     1480  0872               	movf	bitRead@reg+1,w
 16474     1481  0577               	andwf	??_bitRead+3,w
 16475     1482  00F9               	movwf	??_bitRead+5
 16476     1483  0878               	movf	??_bitRead+4,w
 16477     1484  0479               	iorwf	??_bitRead+5,w
 16478     1485  1903               	btfsc	3,2
 16479     1486  2C88               	goto	u10321
 16480     1487  2C89               	goto	u10320
 16481     1488                     u10321:
 16482     1488  2C8B               	goto	l13389
 16483     1489                     u10320:
 16484     1489                     l13385:
 16485                           
 16486                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2509:         return 0
      +                          x0;
 16487     1489  3000               	movlw	0
 16488     148A  2C8C               	goto	l2672
 16489     148B                     l13389:
 16490                           
 16491                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2511:     return 0x01;
 16492     148B  3001               	movlw	1
 16493     148C                     l2672:
 16494     148C  0008               	return
 16495     148D                     __end_of_bitRead:
 16496                           
 16497                           	psect	text21
 16498     1EED                     __ptext21:	
 16499 ;; *************** function _TMR0_HasOverflowOccured *****************
 16500 ;; Defined at:
 16501 ;;		line 127 in file "mcc_generated_files/tmr0.c"
 16502 ;; Parameters:    Size  Location     Type
 16503 ;;		None
 16504 ;; Auto vars:     Size  Location     Type
 16505 ;;		None
 16506 ;; Return value:  Size  Location     Type
 16507 ;;                  1    wreg      _Bool 
 16508 ;; Registers used:
 16509 ;;		wreg, status,2, status,0
 16510 ;; Tracked objects:
 16511 ;;		On entry : 0/0
 16512 ;;		On exit  : 0/0
 16513 ;;		Unchanged: 0/0
 16514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16519 ;;Total ram usage:        0 bytes
 16520 ;; Hardware stack levels used: 1
 16521 ;; Hardware stack levels required when called: 4
 16522 ;; This function calls:
 16523 ;;		Nothing
 16524 ;; This function is called by:
 16525 ;;		_main
 16526 ;; This function uses a non-reentrant model
 16527 ;;
 16528                           
 16529     1EED                     _TMR0_HasOverflowOccured:	
 16530                           ;psect for function _TMR0_HasOverflowOccured
 16531                           
 16532     1EED                     l14517:	
 16533                           ;incstack = 0
 16534                           ; Regs used in _TMR0_HasOverflowOccured: [wreg+status,2+status,0]
 16535                           
 16536                           
 16537                           ;mcc_generated_files/tmr0.c: 130:     return(PIR0bits.TMR0IF);
 16538     1EED  014E               	movlb	14	; select bank14
 16539     1EEE  0E0C               	swapf	12,w	;volatile
 16540     1EEF  0C89               	rrf	9,f
 16541     1EF0  3901               	andlw	1
 16542     1EF1                     l1492:
 16543     1EF1  0008               	return
 16544     1EF2                     __end_of_TMR0_HasOverflowOccured:
 16545                           
 16546                           	psect	text22
 16547     11EC                     __ptext22:	
 16548 ;; *************** function _SYSTEM_Initialize *****************
 16549 ;; Defined at:
 16550 ;;		line 50 in file "mcc_generated_files/mcc.c"
 16551 ;; Parameters:    Size  Location     Type
 16552 ;;		None
 16553 ;; Auto vars:     Size  Location     Type
 16554 ;;		None
 16555 ;; Return value:  Size  Location     Type
 16556 ;;                  1    wreg      void 
 16557 ;; Registers used:
 16558 ;;		wreg, status,2, status,0, pclath, cstack
 16559 ;; Tracked objects:
 16560 ;;		On entry : 0/0
 16561 ;;		On exit  : 0/0
 16562 ;;		Unchanged: 0/0
 16563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16568 ;;Total ram usage:        0 bytes
 16569 ;; Hardware stack levels used: 1
 16570 ;; Hardware stack levels required when called: 6
 16571 ;; This function calls:
 16572 ;;		_EUSART1_Initialize
 16573 ;;		_EUSART2_Initialize
 16574 ;;		_I2C1_Initialize
 16575 ;;		_OSCILLATOR_Initialize
 16576 ;;		_PIN_MANAGER_Initialize
 16577 ;;		_PMD_Initialize
 16578 ;;		_TMR0_Initialize
 16579 ;; This function is called by:
 16580 ;;		_main
 16581 ;; This function uses a non-reentrant model
 16582 ;;
 16583                           
 16584     11EC                     _SYSTEM_Initialize:	
 16585                           ;psect for function _SYSTEM_Initialize
 16586                           
 16587     11EC                     l14503:	
 16588                           ;incstack = 0
 16589                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16590                           
 16591                           
 16592                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 16593     11EC  319F  27CA  3191   	fcall	_PMD_Initialize
 16594     11EF                     l14505:
 16595                           
 16596                           ;mcc_generated_files/mcc.c: 53:     I2C1_Initialize();
 16597     11EF  319F  2799  3191   	fcall	_I2C1_Initialize
 16598     11F2                     l14507:
 16599                           
 16600                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 16601     11F2  318B  230B  3191   	fcall	_PIN_MANAGER_Initialize
 16602     11F5                     l14509:
 16603                           
 16604                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 16605     11F5  319F  27C0  3191   	fcall	_OSCILLATOR_Initialize
 16606     11F8                     l14511:
 16607                           
 16608                           ;mcc_generated_files/mcc.c: 56:     TMR0_Initialize();
 16609     11F8  3191  2184  3191   	fcall	_TMR0_Initialize
 16610     11FB                     l14513:
 16611                           
 16612                           ;mcc_generated_files/mcc.c: 57:     EUSART1_Initialize();
 16613     11FB  3189  213E  3191   	fcall	_EUSART1_Initialize
 16614     11FE                     l14515:
 16615                           
 16616                           ;mcc_generated_files/mcc.c: 58:     EUSART2_Initialize();
 16617     11FE  3189  217C  3191   	fcall	_EUSART2_Initialize
 16618     1201                     l1352:
 16619     1201  0008               	return
 16620     1202                     __end_of_SYSTEM_Initialize:
 16621                           
 16622                           	psect	text23
 16623     1184                     __ptext23:	
 16624 ;; *************** function _TMR0_Initialize *****************
 16625 ;; Defined at:
 16626 ;;		line 65 in file "mcc_generated_files/tmr0.c"
 16627 ;; Parameters:    Size  Location     Type
 16628 ;;		None
 16629 ;; Auto vars:     Size  Location     Type
 16630 ;;		None
 16631 ;; Return value:  Size  Location     Type
 16632 ;;                  1    wreg      void 
 16633 ;; Registers used:
 16634 ;;		wreg
 16635 ;; Tracked objects:
 16636 ;;		On entry : 0/0
 16637 ;;		On exit  : 0/0
 16638 ;;		Unchanged: 0/0
 16639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16644 ;;Total ram usage:        0 bytes
 16645 ;; Hardware stack levels used: 1
 16646 ;; Hardware stack levels required when called: 4
 16647 ;; This function calls:
 16648 ;;		Nothing
 16649 ;; This function is called by:
 16650 ;;		_SYSTEM_Initialize
 16651 ;; This function uses a non-reentrant model
 16652 ;;
 16653                           
 16654     1184                     _TMR0_Initialize:	
 16655                           ;psect for function _TMR0_Initialize
 16656                           
 16657     1184                     l13807:	
 16658                           ;incstack = 0
 16659                           ; Regs used in _TMR0_Initialize: [wreg]
 16660                           
 16661                           
 16662                           ;mcc_generated_files/tmr0.c: 70:     T0CON1 = 0x47;
 16663     1184  3047               	movlw	71
 16664     1185  014B               	movlb	11	; select bank11
 16665     1186  009F               	movwf	31	;volatile
 16666                           
 16667                           ;mcc_generated_files/tmr0.c: 73:     TMR0H = 0x0B;
 16668     1187  300B               	movlw	11
 16669     1188  009D               	movwf	29	;volatile
 16670                           
 16671                           ;mcc_generated_files/tmr0.c: 76:     TMR0L = 0xDC;
 16672     1189  30DC               	movlw	220
 16673     118A  009C               	movwf	28	;volatile
 16674                           
 16675                           ;mcc_generated_files/tmr0.c: 79:     timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
 16676     118B  081D               	movf	29,w	;volatile
 16677     118C  0140               	movlb	0	; select bank0
 16678     118D  00CD               	movwf	_timer0ReloadVal16bit+1	;volatile
 16679     118E  014B               	movlb	11	; select bank11
 16680     118F  081C               	movf	28,w	;volatile
 16681     1190  0140               	movlb	0	; select bank0
 16682     1191  00CC               	movwf	_timer0ReloadVal16bit	;volatile
 16683     1192                     l13809:
 16684                           
 16685                           ;mcc_generated_files/tmr0.c: 82:     PIR0bits.TMR0IF = 0;
 16686     1192  014E               	movlb	14	; select bank14
 16687     1193  128C               	bcf	12,5	;volatile
 16688                           
 16689                           ;mcc_generated_files/tmr0.c: 85:     T0CON0 = 0x90;
 16690     1194  3090               	movlw	144
 16691     1195  014B               	movlb	11	; select bank11
 16692     1196  009E               	movwf	30	;volatile
 16693     1197                     l1474:
 16694     1197  0008               	return
 16695     1198                     __end_of_TMR0_Initialize:
 16696                           
 16697                           	psect	text24
 16698     1FCA                     __ptext24:	
 16699 ;; *************** function _PMD_Initialize *****************
 16700 ;; Defined at:
 16701 ;;		line 77 in file "mcc_generated_files/mcc.c"
 16702 ;; Parameters:    Size  Location     Type
 16703 ;;		None
 16704 ;; Auto vars:     Size  Location     Type
 16705 ;;		None
 16706 ;; Return value:  Size  Location     Type
 16707 ;;                  1    wreg      void 
 16708 ;; Registers used:
 16709 ;;		status,2
 16710 ;; Tracked objects:
 16711 ;;		On entry : 0/0
 16712 ;;		On exit  : 0/0
 16713 ;;		Unchanged: 0/0
 16714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16719 ;;Total ram usage:        0 bytes
 16720 ;; Hardware stack levels used: 1
 16721 ;; Hardware stack levels required when called: 4
 16722 ;; This function calls:
 16723 ;;		Nothing
 16724 ;; This function is called by:
 16725 ;;		_SYSTEM_Initialize
 16726 ;; This function uses a non-reentrant model
 16727 ;;
 16728                           
 16729     1FCA                     _PMD_Initialize:	
 16730                           ;psect for function _PMD_Initialize
 16731                           
 16732     1FCA                     l13721:	
 16733                           ;incstack = 0
 16734                           ; Regs used in _PMD_Initialize: [status,2]
 16735                           
 16736                           
 16737                           ;mcc_generated_files/mcc.c: 80:     PMD0 = 0x00;
 16738     1FCA  014F               	movlb	15	; select bank15
 16739     1FCB  0196               	clrf	22	;volatile
 16740                           
 16741                           ;mcc_generated_files/mcc.c: 82:     PMD1 = 0x00;
 16742     1FCC  0197               	clrf	23	;volatile
 16743                           
 16744                           ;mcc_generated_files/mcc.c: 84:     PMD2 = 0x00;
 16745     1FCD  0198               	clrf	24	;volatile
 16746                           
 16747                           ;mcc_generated_files/mcc.c: 86:     PMD3 = 0x00;
 16748     1FCE  0199               	clrf	25	;volatile
 16749                           
 16750                           ;mcc_generated_files/mcc.c: 88:     PMD4 = 0x00;
 16751     1FCF  019A               	clrf	26	;volatile
 16752                           
 16753                           ;mcc_generated_files/mcc.c: 90:     PMD5 = 0x00;
 16754     1FD0  019B               	clrf	27	;volatile
 16755                           
 16756                           ;mcc_generated_files/mcc.c: 92:     PMD6 = 0x00;
 16757     1FD1  019C               	clrf	28	;volatile
 16758                           
 16759                           ;mcc_generated_files/mcc.c: 94:     PMD7 = 0x00;
 16760     1FD2  019D               	clrf	29	;volatile
 16761     1FD3                     l1358:
 16762     1FD3  0008               	return
 16763     1FD4                     __end_of_PMD_Initialize:
 16764                           
 16765                           	psect	text25
 16766     0B0B                     __ptext25:	
 16767 ;; *************** function _PIN_MANAGER_Initialize *****************
 16768 ;; Defined at:
 16769 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 16770 ;; Parameters:    Size  Location     Type
 16771 ;;		None
 16772 ;; Auto vars:     Size  Location     Type
 16773 ;;		None
 16774 ;; Return value:  Size  Location     Type
 16775 ;;                  1    wreg      void 
 16776 ;; Registers used:
 16777 ;;		wreg, status,2, status,0, pclath, cstack
 16778 ;; Tracked objects:
 16779 ;;		On entry : 0/0
 16780 ;;		On exit  : 0/0
 16781 ;;		Unchanged: 0/0
 16782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16787 ;;Total ram usage:        0 bytes
 16788 ;; Hardware stack levels used: 1
 16789 ;; Hardware stack levels required when called: 5
 16790 ;; This function calls:
 16791 ;;		_IOCAF6_SetInterruptHandler
 16792 ;; This function is called by:
 16793 ;;		_SYSTEM_Initialize
 16794 ;; This function uses a non-reentrant model
 16795 ;;
 16796                           
 16797     0B0B                     _PIN_MANAGER_Initialize:	
 16798                           ;psect for function _PIN_MANAGER_Initialize
 16799                           
 16800     0B0B                     l13731:	
 16801                           ;incstack = 0
 16802                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16803                           
 16804                           
 16805                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x00;
 16806     0B0B  0140               	movlb	0	; select bank0
 16807     0B0C  019C               	clrf	28	;volatile
 16808     0B0D                     l13733:
 16809                           
 16810                           ;mcc_generated_files/pin_manager.c: 63:     LATA = 0x31;
 16811     0B0D  3031               	movlw	49
 16812     0B0E  0098               	movwf	24	;volatile
 16813     0B0F                     l13735:
 16814                           
 16815                           ;mcc_generated_files/pin_manager.c: 64:     LATB = 0x00;
 16816     0B0F  0199               	clrf	25	;volatile
 16817                           
 16818                           ;mcc_generated_files/pin_manager.c: 65:     LATC = 0xC1;
 16819     0B10  30C1               	movlw	193
 16820     0B11  009A               	movwf	26	;volatile
 16821                           
 16822                           ;mcc_generated_files/pin_manager.c: 70:     TRISE = 0x08;
 16823     0B12  3008               	movlw	8
 16824     0B13  0096               	movwf	22	;volatile
 16825                           
 16826                           ;mcc_generated_files/pin_manager.c: 71:     TRISA = 0xDE;
 16827     0B14  30DE               	movlw	222
 16828     0B15  0092               	movwf	18	;volatile
 16829                           
 16830                           ;mcc_generated_files/pin_manager.c: 72:     TRISB = 0xEF;
 16831     0B16  30EF               	movlw	239
 16832     0B17  0093               	movwf	19	;volatile
 16833                           
 16834                           ;mcc_generated_files/pin_manager.c: 73:     TRISC = 0x25;
 16835     0B18  3025               	movlw	37
 16836     0B19  0094               	movwf	20	;volatile
 16837     0B1A                     l13737:
 16838                           
 16839                           ;mcc_generated_files/pin_manager.c: 78:     ANSELC = 0x00;
 16840     0B1A  017E               	movlb	62	; select bank62
 16841     0B1B  01CE               	clrf	78	;volatile
 16842     0B1C                     l13739:
 16843                           
 16844                           ;mcc_generated_files/pin_manager.c: 79:     ANSELB = 0xC9;
 16845     0B1C  30C9               	movlw	201
 16846     0B1D  00C3               	movwf	67	;volatile
 16847     0B1E                     l13741:
 16848                           
 16849                           ;mcc_generated_files/pin_manager.c: 80:     ANSELA = 0x0E;
 16850     0B1E  300E               	movlw	14
 16851     0B1F  00B8               	movwf	56	;volatile
 16852     0B20                     l13743:
 16853                           
 16854                           ;mcc_generated_files/pin_manager.c: 85:     WPUE = 0x00;
 16855     0B20  01E5               	clrf	101	;volatile
 16856     0B21                     l13745:
 16857                           
 16858                           ;mcc_generated_files/pin_manager.c: 86:     WPUB = 0x00;
 16859     0B21  01C4               	clrf	68	;volatile
 16860     0B22                     l13747:
 16861                           
 16862                           ;mcc_generated_files/pin_manager.c: 87:     WPUA = 0x00;
 16863     0B22  01B9               	clrf	57	;volatile
 16864     0B23                     l13749:
 16865                           
 16866                           ;mcc_generated_files/pin_manager.c: 88:     WPUC = 0x00;
 16867     0B23  01CF               	clrf	79	;volatile
 16868     0B24                     l13751:
 16869                           
 16870                           ;mcc_generated_files/pin_manager.c: 93:     ODCONE = 0x00;
 16871     0B24  01E6               	clrf	102	;volatile
 16872     0B25                     l13753:
 16873                           
 16874                           ;mcc_generated_files/pin_manager.c: 94:     ODCONA = 0x00;
 16875     0B25  01BA               	clrf	58	;volatile
 16876     0B26                     l13755:
 16877                           
 16878                           ;mcc_generated_files/pin_manager.c: 95:     ODCONB = 0x00;
 16879     0B26  01C5               	clrf	69	;volatile
 16880     0B27                     l13757:
 16881                           
 16882                           ;mcc_generated_files/pin_manager.c: 96:     ODCONC = 0x00;
 16883     0B27  01D0               	clrf	80	;volatile
 16884     0B28                     l13759:
 16885                           
 16886                           ;mcc_generated_files/pin_manager.c: 101:     SLRCONA = 0xFF;
 16887     0B28  30FF               	movlw	255
 16888     0B29  00BB               	movwf	59	;volatile
 16889     0B2A                     l13761:
 16890                           
 16891                           ;mcc_generated_files/pin_manager.c: 102:     SLRCONB = 0xFF;
 16892     0B2A  30FF               	movlw	255
 16893     0B2B  00C6               	movwf	70	;volatile
 16894     0B2C                     l13763:
 16895                           
 16896                           ;mcc_generated_files/pin_manager.c: 103:     SLRCONC = 0xFF;
 16897     0B2C  30FF               	movlw	255
 16898     0B2D  00D1               	movwf	81	;volatile
 16899     0B2E                     l13765:
 16900                           
 16901                           ;mcc_generated_files/pin_manager.c: 108:     INLVLA = 0x3F;
 16902     0B2E  303F               	movlw	63
 16903     0B2F  00BC               	movwf	60	;volatile
 16904     0B30                     l13767:
 16905                           
 16906                           ;mcc_generated_files/pin_manager.c: 109:     INLVLB = 0x3F;
 16907     0B30  303F               	movlw	63
 16908     0B31  00C7               	movwf	71	;volatile
 16909     0B32                     l13769:
 16910                           
 16911                           ;mcc_generated_files/pin_manager.c: 110:     INLVLC = 0x3F;
 16912     0B32  303F               	movlw	63
 16913     0B33  00D2               	movwf	82	;volatile
 16914     0B34                     l13771:
 16915                           
 16916                           ;mcc_generated_files/pin_manager.c: 117:     IOCAFbits.IOCAF6 = 0;
 16917     0B34  133F               	bcf	63,6	;volatile
 16918     0B35                     l13773:
 16919                           
 16920                           ;mcc_generated_files/pin_manager.c: 119:     IOCANbits.IOCAN6 = 0;
 16921     0B35  133E               	bcf	62,6	;volatile
 16922     0B36                     l13775:
 16923                           
 16924                           ;mcc_generated_files/pin_manager.c: 121:     IOCAPbits.IOCAP6 = 1;
 16925     0B36  173D               	bsf	61,6	;volatile
 16926     0B37                     l13777:
 16927                           
 16928                           ;mcc_generated_files/pin_manager.c: 126:     IOCAF6_SetInterruptHandler(IOCAF6_DefaultIn
      +                          terruptHandler);
 16929     0B37  30FF               	movlw	low _IOCAF6_DefaultInterruptHandler
 16930     0B38  00F1               	movwf	IOCAF6_SetInterruptHandler@InterruptHandler
 16931     0B39  3007               	movlw	high _IOCAF6_DefaultInterruptHandler
 16932     0B3A  00F2               	movwf	IOCAF6_SetInterruptHandler@InterruptHandler+1
 16933     0B3B  319F  274C  318B   	fcall	_IOCAF6_SetInterruptHandler
 16934     0B3E                     l13779:
 16935                           
 16936                           ;mcc_generated_files/pin_manager.c: 129:     PIE0bits.IOCIE = 1;
 16937     0B3E  014E               	movlb	14	; select bank14
 16938     0B3F  1616               	bsf	22,4	;volatile
 16939     0B40                     l13781:
 16940                           
 16941                           ;mcc_generated_files/pin_manager.c: 132:     SSP1CLKPPS = 0x09;
 16942     0B40  3009               	movlw	9
 16943     0B41  017D               	movlb	61	; select bank61
 16944     0B42  00C5               	movwf	69	;volatile
 16945     0B43                     l13783:
 16946                           
 16947                           ;mcc_generated_files/pin_manager.c: 133:     RB1PPS = 0x13;
 16948     0B43  3013               	movlw	19
 16949     0B44  017E               	movlb	62	; select bank62
 16950     0B45  0099               	movwf	25	;volatile
 16951     0B46                     l13785:
 16952                           
 16953                           ;mcc_generated_files/pin_manager.c: 134:     RB2PPS = 0x14;
 16954     0B46  3014               	movlw	20
 16955     0B47  009A               	movwf	26	;volatile
 16956     0B48                     l13787:
 16957                           
 16958                           ;mcc_generated_files/pin_manager.c: 135:     RC4PPS = 0x25;
 16959     0B48  3025               	movlw	37
 16960     0B49  00A4               	movwf	36	;volatile
 16961     0B4A                     l13789:
 16962                           
 16963                           ;mcc_generated_files/pin_manager.c: 136:     RB4PPS = 0x0F;
 16964     0B4A  300F               	movlw	15
 16965     0B4B  009C               	movwf	28	;volatile
 16966     0B4C                     l13791:
 16967                           
 16968                           ;mcc_generated_files/pin_manager.c: 137:     RX2DTPPS = 0x15;
 16969     0B4C  3015               	movlw	21
 16970     0B4D  017D               	movlb	61	; select bank61
 16971     0B4E  00CD               	movwf	77	;volatile
 16972     0B4F                     l13793:
 16973                           
 16974                           ;mcc_generated_files/pin_manager.c: 138:     SSP1DATPPS = 0x0A;
 16975     0B4F  300A               	movlw	10
 16976     0B50  00C6               	movwf	70	;volatile
 16977     0B51                     l13795:
 16978                           
 16979                           ;mcc_generated_files/pin_manager.c: 139:     RX1DTPPS = 0x0D;
 16980     0B51  300D               	movlw	13
 16981     0B52  00CB               	movwf	75	;volatile
 16982     0B53                     l1443:
 16983     0B53  0008               	return
 16984     0B54                     __end_of_PIN_MANAGER_Initialize:
 16985                           
 16986                           	psect	text26
 16987     1F4C                     __ptext26:	
 16988 ;; *************** function _IOCAF6_SetInterruptHandler *****************
 16989 ;; Defined at:
 16990 ;;		line 169 in file "mcc_generated_files/pin_manager.c"
 16991 ;; Parameters:    Size  Location     Type
 16992 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
 16993 ;;		 -> IOCAF6_DefaultInterruptHandler(1), 
 16994 ;; Auto vars:     Size  Location     Type
 16995 ;;		None
 16996 ;; Return value:  Size  Location     Type
 16997 ;;                  1    wreg      void 
 16998 ;; Registers used:
 16999 ;;		wreg
 17000 ;; Tracked objects:
 17001 ;;		On entry : 0/0
 17002 ;;		On exit  : 0/0
 17003 ;;		Unchanged: 0/0
 17004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17005 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17008 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17009 ;;Total ram usage:        2 bytes
 17010 ;; Hardware stack levels used: 1
 17011 ;; Hardware stack levels required when called: 4
 17012 ;; This function calls:
 17013 ;;		Nothing
 17014 ;; This function is called by:
 17015 ;;		_PIN_MANAGER_Initialize
 17016 ;; This function uses a non-reentrant model
 17017 ;;
 17018                           
 17019     1F4C                     _IOCAF6_SetInterruptHandler:	
 17020                           ;psect for function _IOCAF6_SetInterruptHandler
 17021                           
 17022     1F4C                     l13503:	
 17023                           ;incstack = 0
 17024                           ; Regs used in _IOCAF6_SetInterruptHandler: [wreg]
 17025                           
 17026                           
 17027                           ;mcc_generated_files/pin_manager.c: 170:     IOCAF6_InterruptHandler = InterruptHandler;
 17028     1F4C  0872               	movf	IOCAF6_SetInterruptHandler@InterruptHandler+1,w
 17029     1F4D  0141               	movlb	1	; select bank1
 17030     1F4E  00EA               	movwf	(_IOCAF6_InterruptHandler+1)^(0+128)
 17031     1F4F  0871               	movf	IOCAF6_SetInterruptHandler@InterruptHandler,w
 17032     1F50  00E9               	movwf	_IOCAF6_InterruptHandler^(0+128)
 17033     1F51                     l1454:
 17034     1F51  0008               	return
 17035     1F52                     __end_of_IOCAF6_SetInterruptHandler:
 17036                           
 17037                           	psect	text27
 17038     1FC0                     __ptext27:	
 17039 ;; *************** function _OSCILLATOR_Initialize *****************
 17040 ;; Defined at:
 17041 ;;		line 61 in file "mcc_generated_files/mcc.c"
 17042 ;; Parameters:    Size  Location     Type
 17043 ;;		None
 17044 ;; Auto vars:     Size  Location     Type
 17045 ;;		None
 17046 ;; Return value:  Size  Location     Type
 17047 ;;                  1    wreg      void 
 17048 ;; Registers used:
 17049 ;;		wreg, status,2
 17050 ;; Tracked objects:
 17051 ;;		On entry : 0/0
 17052 ;;		On exit  : 0/0
 17053 ;;		Unchanged: 0/0
 17054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17059 ;;Total ram usage:        0 bytes
 17060 ;; Hardware stack levels used: 1
 17061 ;; Hardware stack levels required when called: 4
 17062 ;; This function calls:
 17063 ;;		Nothing
 17064 ;; This function is called by:
 17065 ;;		_SYSTEM_Initialize
 17066 ;; This function uses a non-reentrant model
 17067 ;;
 17068                           
 17069     1FC0                     _OSCILLATOR_Initialize:	
 17070                           ;psect for function _OSCILLATOR_Initialize
 17071                           
 17072     1FC0                     l13797:	
 17073                           ;incstack = 0
 17074                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 17075                           
 17076                           
 17077                           ;mcc_generated_files/mcc.c: 64:     OSCCON1 = 0x60;
 17078     1FC0  3060               	movlw	96
 17079     1FC1  0151               	movlb	17	; select bank17
 17080     1FC2  008D               	movwf	13	;volatile
 17081     1FC3                     l13799:
 17082                           
 17083                           ;mcc_generated_files/mcc.c: 66:     OSCCON3 = 0x00;
 17084     1FC3  018F               	clrf	15	;volatile
 17085     1FC4                     l13801:
 17086                           
 17087                           ;mcc_generated_files/mcc.c: 68:     OSCEN = 0x00;
 17088     1FC4  0191               	clrf	17	;volatile
 17089                           
 17090                           ;mcc_generated_files/mcc.c: 70:     OSCFRQ = 0x06;
 17091     1FC5  3006               	movlw	6
 17092     1FC6  0093               	movwf	19	;volatile
 17093     1FC7                     l13803:
 17094                           
 17095                           ;mcc_generated_files/mcc.c: 72:     OSCSTAT = 0x00;
 17096     1FC7  0190               	clrf	16	;volatile
 17097     1FC8                     l13805:
 17098                           
 17099                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
 17100     1FC8  0192               	clrf	18	;volatile
 17101     1FC9                     l1355:
 17102     1FC9  0008               	return
 17103     1FCA                     __end_of_OSCILLATOR_Initialize:
 17104                           
 17105                           	psect	text28
 17106     1F99                     __ptext28:	
 17107 ;; *************** function _I2C1_Initialize *****************
 17108 ;; Defined at:
 17109 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 17110 ;; Parameters:    Size  Location     Type
 17111 ;;		None
 17112 ;; Auto vars:     Size  Location     Type
 17113 ;;		None
 17114 ;; Return value:  Size  Location     Type
 17115 ;;                  1    wreg      void 
 17116 ;; Registers used:
 17117 ;;		wreg, status,2
 17118 ;; Tracked objects:
 17119 ;;		On entry : 0/0
 17120 ;;		On exit  : 0/0
 17121 ;;		Unchanged: 0/0
 17122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17127 ;;Total ram usage:        0 bytes
 17128 ;; Hardware stack levels used: 1
 17129 ;; Hardware stack levels required when called: 4
 17130 ;; This function calls:
 17131 ;;		Nothing
 17132 ;; This function is called by:
 17133 ;;		_SYSTEM_Initialize
 17134 ;; This function uses a non-reentrant model
 17135 ;;
 17136                           
 17137     1F99                     _I2C1_Initialize:	
 17138                           ;psect for function _I2C1_Initialize
 17139                           
 17140     1F99                     l13723:	
 17141                           ;incstack = 0
 17142                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 17143                           
 17144                           
 17145                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x00;
 17146     1F99  0143               	movlb	3	; select bank3
 17147     1F9A  018F               	clrf	15	;volatile
 17148     1F9B                     l13725:
 17149                           
 17150                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 17151     1F9B  3008               	movlw	8
 17152     1F9C  0090               	movwf	16	;volatile
 17153     1F9D                     l13727:
 17154                           
 17155                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 17156     1F9D  0191               	clrf	17	;volatile
 17157                           
 17158                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x4F;
 17159     1F9E  304F               	movlw	79
 17160     1F9F  008D               	movwf	13	;volatile
 17161     1FA0                     l13729:
 17162                           
 17163                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 17164     1FA0  1290               	bcf	16,5	;volatile
 17165     1FA1                     l1742:
 17166     1FA1  0008               	return
 17167     1FA2                     __end_of_I2C1_Initialize:
 17168                           
 17169                           	psect	text29
 17170     097C                     __ptext29:	
 17171 ;; *************** function _EUSART2_Initialize *****************
 17172 ;; Defined at:
 17173 ;;		line 88 in file "mcc_generated_files/eusart2.c"
 17174 ;; Parameters:    Size  Location     Type
 17175 ;;		None
 17176 ;; Auto vars:     Size  Location     Type
 17177 ;;		None
 17178 ;; Return value:  Size  Location     Type
 17179 ;;                  1    wreg      void 
 17180 ;; Registers used:
 17181 ;;		wreg, status,2, status,0, pclath, cstack
 17182 ;; Tracked objects:
 17183 ;;		On entry : 0/0
 17184 ;;		On exit  : 0/0
 17185 ;;		Unchanged: 0/0
 17186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17191 ;;Total ram usage:        0 bytes
 17192 ;; Hardware stack levels used: 1
 17193 ;; Hardware stack levels required when called: 5
 17194 ;; This function calls:
 17195 ;;		_EUSART2_SetErrorHandler
 17196 ;;		_EUSART2_SetFramingErrorHandler
 17197 ;;		_EUSART2_SetOverrunErrorHandler
 17198 ;;		_EUSART2_SetRxInterruptHandler
 17199 ;;		_EUSART2_SetTxInterruptHandler
 17200 ;; This function is called by:
 17201 ;;		_SYSTEM_Initialize
 17202 ;; This function uses a non-reentrant model
 17203 ;;
 17204                           
 17205     097C                     _EUSART2_Initialize:	
 17206                           ;psect for function _EUSART2_Initialize
 17207                           
 17208     097C                     l13653:	
 17209                           ;incstack = 0
 17210                           ; Regs used in _EUSART2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17211                           
 17212                           
 17213                           ;mcc_generated_files/eusart2.c: 91:     PIE3bits.RC2IE = 0;
 17214     097C  014E               	movlb	14	; select bank14
 17215     097D  1399               	bcf	25,7	;volatile
 17216     097E                     l13655:
 17217                           
 17218                           ;mcc_generated_files/eusart2.c: 92:     EUSART2_SetRxInterruptHandler(EUSART2_Receive_IS
      +                          R);
 17219     097E  304E               	movlw	low _EUSART2_Receive_ISR
 17220     097F  00F1               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler
 17221     0980  3008               	movlw	high _EUSART2_Receive_ISR
 17222     0981  00F2               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler+1
 17223     0982  319F  2740  3189   	fcall	_EUSART2_SetRxInterruptHandler
 17224     0985                     l13657:
 17225                           
 17226                           ;mcc_generated_files/eusart2.c: 93:     PIE3bits.TX2IE = 0;
 17227     0985  014E               	movlb	14	; select bank14
 17228     0986  1319               	bcf	25,6	;volatile
 17229                           
 17230                           ;mcc_generated_files/eusart2.c: 94:     EUSART2_SetTxInterruptHandler(EUSART2_Transmit_I
      +                          SR);
 17231     0987  30DE               	movlw	low _EUSART2_Transmit_ISR
 17232     0988  00F1               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler
 17233     0989  3013               	movlw	high _EUSART2_Transmit_ISR
 17234     098A  00F2               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler+1
 17235     098B  319F  2746  3189   	fcall	_EUSART2_SetTxInterruptHandler
 17236     098E                     l13659:
 17237                           
 17238                           ;mcc_generated_files/eusart2.c: 98:     BAUD2CON = 0x08;
 17239     098E  3008               	movlw	8
 17240     098F  0154               	movlb	20	; select bank20
 17241     0990  009F               	movwf	31	;volatile
 17242     0991                     l13661:
 17243                           
 17244                           ;mcc_generated_files/eusart2.c: 101:     RC2STA = 0x90;
 17245     0991  3090               	movlw	144
 17246     0992  009D               	movwf	29	;volatile
 17247     0993                     l13663:
 17248                           
 17249                           ;mcc_generated_files/eusart2.c: 104:     TX2STA = 0x24;
 17250     0993  3024               	movlw	36
 17251     0994  009E               	movwf	30	;volatile
 17252     0995                     l13665:
 17253                           
 17254                           ;mcc_generated_files/eusart2.c: 107:     SP2BRGL = 0x40;
 17255     0995  3040               	movlw	64
 17256     0996  009B               	movwf	27	;volatile
 17257     0997                     l13667:
 17258                           
 17259                           ;mcc_generated_files/eusart2.c: 110:     SP2BRGH = 0x03;
 17260     0997  3003               	movlw	3
 17261     0998  009C               	movwf	28	;volatile
 17262     0999                     l13669:
 17263                           
 17264                           ;mcc_generated_files/eusart2.c: 113:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultF
      +                          ramingErrorHandler);
 17265     0999  3069               	movlw	low _EUSART2_DefaultFramingErrorHandler
 17266     099A  00F1               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler
 17267     099B  301E               	movlw	high _EUSART2_DefaultFramingErrorHandler
 17268     099C  00F2               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler+1
 17269     099D  319F  2734  3189   	fcall	_EUSART2_SetFramingErrorHandler
 17270     09A0                     l13671:
 17271                           
 17272                           ;mcc_generated_files/eusart2.c: 114:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultO
      +                          verrunErrorHandler);
 17273     09A0  3098               	movlw	low _EUSART2_DefaultOverrunErrorHandler
 17274     09A1  00F1               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler
 17275     09A2  301E               	movlw	high _EUSART2_DefaultOverrunErrorHandler
 17276     09A3  00F2               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler+1
 17277     09A4  319F  273A  3189   	fcall	_EUSART2_SetOverrunErrorHandler
 17278     09A7                     l13673:
 17279                           
 17280                           ;mcc_generated_files/eusart2.c: 115:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHan
      +                          dler);
 17281     09A7  3094               	movlw	low _EUSART2_DefaultErrorHandler
 17282     09A8  00F1               	movwf	EUSART2_SetErrorHandler@interruptHandler
 17283     09A9  301E               	movlw	high _EUSART2_DefaultErrorHandler
 17284     09AA  00F2               	movwf	EUSART2_SetErrorHandler@interruptHandler+1
 17285     09AB  319F  272E  3189   	fcall	_EUSART2_SetErrorHandler
 17286     09AE                     l13675:
 17287                           
 17288                           ;mcc_generated_files/eusart2.c: 117:     eusart2RxLastError.status = 0;
 17289     09AE  0140               	movlb	0	; select bank0
 17290     09AF  01DE               	clrf	_eusart2RxLastError	;volatile
 17291     09B0                     l13677:
 17292                           
 17293                           ;mcc_generated_files/eusart2.c: 120:     eusart2TxHead = 0;
 17294     09B0  01E3               	clrf	_eusart2TxHead	;volatile
 17295     09B1                     l13679:
 17296                           
 17297                           ;mcc_generated_files/eusart2.c: 121:     eusart2TxTail = 0;
 17298     09B1  01E2               	clrf	_eusart2TxTail	;volatile
 17299     09B2                     l13681:
 17300                           
 17301                           ;mcc_generated_files/eusart2.c: 122:     eusart2TxBufferRemaining = sizeof(eusart2TxBuff
      +                          er);
 17302     09B2  3008               	movlw	8
 17303     09B3  00E1               	movwf	_eusart2TxBufferRemaining	;volatile
 17304                           
 17305                           ;mcc_generated_files/eusart2.c: 124:     eusart2RxHead = 0;
 17306     09B4  01FC               	clrf	_eusart2RxHead	;volatile
 17307                           
 17308                           ;mcc_generated_files/eusart2.c: 125:     eusart2RxTail = 0;
 17309     09B5  01E0               	clrf	_eusart2RxTail	;volatile
 17310                           
 17311                           ;mcc_generated_files/eusart2.c: 126:     eusart2RxCount = 0;
 17312     09B6  01DF               	clrf	_eusart2RxCount	;volatile
 17313     09B7                     l13683:
 17314                           
 17315                           ;mcc_generated_files/eusart2.c: 129:     PIE3bits.RC2IE = 1;
 17316     09B7  014E               	movlb	14	; select bank14
 17317     09B8  1799               	bsf	25,7	;volatile
 17318     09B9                     l1051:
 17319     09B9  0008               	return
 17320     09BA                     __end_of_EUSART2_Initialize:
 17321                           
 17322                           	psect	text30
 17323     1F46                     __ptext30:	
 17324 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
 17325 ;; Defined at:
 17326 ;;		line 276 in file "mcc_generated_files/eusart2.c"
 17327 ;; Parameters:    Size  Location     Type
 17328 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17329 ;;		 -> EUSART2_Transmit_ISR(1), EUSART1_Transmit_ISR(1), 
 17330 ;; Auto vars:     Size  Location     Type
 17331 ;;		None
 17332 ;; Return value:  Size  Location     Type
 17333 ;;                  1    wreg      void 
 17334 ;; Registers used:
 17335 ;;		wreg
 17336 ;; Tracked objects:
 17337 ;;		On entry : 0/0
 17338 ;;		On exit  : 0/0
 17339 ;;		Unchanged: 0/0
 17340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17341 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17344 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17345 ;;Total ram usage:        2 bytes
 17346 ;; Hardware stack levels used: 1
 17347 ;; Hardware stack levels required when called: 4
 17348 ;; This function calls:
 17349 ;;		Nothing
 17350 ;; This function is called by:
 17351 ;;		_EUSART2_Initialize
 17352 ;; This function uses a non-reentrant model
 17353 ;;
 17354                           
 17355     1F46                     _EUSART2_SetTxInterruptHandler:	
 17356                           ;psect for function _EUSART2_SetTxInterruptHandler
 17357                           
 17358     1F46                     l13475:	
 17359                           ;incstack = 0
 17360                           ; Regs used in _EUSART2_SetTxInterruptHandler: [wreg]
 17361                           
 17362                           
 17363                           ;mcc_generated_files/eusart2.c: 277:     EUSART2_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 17364     1F46  0872               	movf	EUSART2_SetTxInterruptHandler@interruptHandler+1,w
 17365     1F47  0141               	movlb	1	; select bank1
 17366     1F48  00EE               	movwf	(_EUSART2_TxDefaultInterruptHandler+1)^(0+128)
 17367     1F49  0871               	movf	EUSART2_SetTxInterruptHandler@interruptHandler,w
 17368     1F4A  00ED               	movwf	_EUSART2_TxDefaultInterruptHandler^(0+128)
 17369     1F4B                     l1117:
 17370     1F4B  0008               	return
 17371     1F4C                     __end_of_EUSART2_SetTxInterruptHandler:
 17372                           
 17373                           	psect	text31
 17374     1F40                     __ptext31:	
 17375 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
 17376 ;; Defined at:
 17377 ;;		line 280 in file "mcc_generated_files/eusart2.c"
 17378 ;; Parameters:    Size  Location     Type
 17379 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17380 ;;		 -> EUSART2_Receive_ISR(1), EUSART1_Receive_ISR(1), 
 17381 ;; Auto vars:     Size  Location     Type
 17382 ;;		None
 17383 ;; Return value:  Size  Location     Type
 17384 ;;                  1    wreg      void 
 17385 ;; Registers used:
 17386 ;;		wreg
 17387 ;; Tracked objects:
 17388 ;;		On entry : 0/0
 17389 ;;		On exit  : 0/0
 17390 ;;		Unchanged: 0/0
 17391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17392 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17395 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17396 ;;Total ram usage:        2 bytes
 17397 ;; Hardware stack levels used: 1
 17398 ;; Hardware stack levels required when called: 4
 17399 ;; This function calls:
 17400 ;;		Nothing
 17401 ;; This function is called by:
 17402 ;;		_EUSART2_Initialize
 17403 ;; This function uses a non-reentrant model
 17404 ;;
 17405                           
 17406     1F40                     _EUSART2_SetRxInterruptHandler:	
 17407                           ;psect for function _EUSART2_SetRxInterruptHandler
 17408                           
 17409     1F40                     l13473:	
 17410                           ;incstack = 0
 17411                           ; Regs used in _EUSART2_SetRxInterruptHandler: [wreg]
 17412                           
 17413                           
 17414                           ;mcc_generated_files/eusart2.c: 281:     EUSART2_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 17415     1F40  0872               	movf	EUSART2_SetRxInterruptHandler@interruptHandler+1,w
 17416     1F41  0141               	movlb	1	; select bank1
 17417     1F42  00EC               	movwf	(_EUSART2_RxDefaultInterruptHandler+1)^(0+128)
 17418     1F43  0871               	movf	EUSART2_SetRxInterruptHandler@interruptHandler,w
 17419     1F44  00EB               	movwf	_EUSART2_RxDefaultInterruptHandler^(0+128)
 17420     1F45                     l1120:
 17421     1F45  0008               	return
 17422     1F46                     __end_of_EUSART2_SetRxInterruptHandler:
 17423                           
 17424                           	psect	text32
 17425     1F3A                     __ptext32:	
 17426 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
 17427 ;; Defined at:
 17428 ;;		line 268 in file "mcc_generated_files/eusart2.c"
 17429 ;; Parameters:    Size  Location     Type
 17430 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17431 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
 17432 ;; Auto vars:     Size  Location     Type
 17433 ;;		None
 17434 ;; Return value:  Size  Location     Type
 17435 ;;                  1    wreg      void 
 17436 ;; Registers used:
 17437 ;;		wreg
 17438 ;; Tracked objects:
 17439 ;;		On entry : 0/0
 17440 ;;		On exit  : 0/0
 17441 ;;		Unchanged: 0/0
 17442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17443 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17446 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17447 ;;Total ram usage:        2 bytes
 17448 ;; Hardware stack levels used: 1
 17449 ;; Hardware stack levels required when called: 4
 17450 ;; This function calls:
 17451 ;;		Nothing
 17452 ;; This function is called by:
 17453 ;;		_EUSART2_Initialize
 17454 ;; This function uses a non-reentrant model
 17455 ;;
 17456                           
 17457     1F3A                     _EUSART2_SetOverrunErrorHandler:	
 17458                           ;psect for function _EUSART2_SetOverrunErrorHandler
 17459                           
 17460     1F3A                     l13479:	
 17461                           ;incstack = 0
 17462                           ; Regs used in _EUSART2_SetOverrunErrorHandler: [wreg]
 17463                           
 17464                           
 17465                           ;mcc_generated_files/eusart2.c: 269:     EUSART2_OverrunErrorHandler = interruptHandler;
 17466     1F3A  0872               	movf	EUSART2_SetOverrunErrorHandler@interruptHandler+1,w
 17467     1F3B  0142               	movlb	2	; select bank2
 17468     1F3C  00EA               	movwf	(_EUSART2_OverrunErrorHandler+1)^(0+256)
 17469     1F3D  0871               	movf	EUSART2_SetOverrunErrorHandler@interruptHandler,w
 17470     1F3E  00E9               	movwf	_EUSART2_OverrunErrorHandler^(0+256)
 17471     1F3F                     l1111:
 17472     1F3F  0008               	return
 17473     1F40                     __end_of_EUSART2_SetOverrunErrorHandler:
 17474                           
 17475                           	psect	text33
 17476     1F34                     __ptext33:	
 17477 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
 17478 ;; Defined at:
 17479 ;;		line 264 in file "mcc_generated_files/eusart2.c"
 17480 ;; Parameters:    Size  Location     Type
 17481 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17482 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
 17483 ;; Auto vars:     Size  Location     Type
 17484 ;;		None
 17485 ;; Return value:  Size  Location     Type
 17486 ;;                  1    wreg      void 
 17487 ;; Registers used:
 17488 ;;		wreg
 17489 ;; Tracked objects:
 17490 ;;		On entry : 0/0
 17491 ;;		On exit  : 0/0
 17492 ;;		Unchanged: 0/0
 17493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17494 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17497 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17498 ;;Total ram usage:        2 bytes
 17499 ;; Hardware stack levels used: 1
 17500 ;; Hardware stack levels required when called: 4
 17501 ;; This function calls:
 17502 ;;		Nothing
 17503 ;; This function is called by:
 17504 ;;		_EUSART2_Initialize
 17505 ;; This function uses a non-reentrant model
 17506 ;;
 17507                           
 17508     1F34                     _EUSART2_SetFramingErrorHandler:	
 17509                           ;psect for function _EUSART2_SetFramingErrorHandler
 17510                           
 17511     1F34                     l13477:	
 17512                           ;incstack = 0
 17513                           ; Regs used in _EUSART2_SetFramingErrorHandler: [wreg]
 17514                           
 17515                           
 17516                           ;mcc_generated_files/eusart2.c: 265:     EUSART2_FramingErrorHandler = interruptHandler;
 17517     1F34  0872               	movf	EUSART2_SetFramingErrorHandler@interruptHandler+1,w
 17518     1F35  0142               	movlb	2	; select bank2
 17519     1F36  00EC               	movwf	(_EUSART2_FramingErrorHandler+1)^(0+256)
 17520     1F37  0871               	movf	EUSART2_SetFramingErrorHandler@interruptHandler,w
 17521     1F38  00EB               	movwf	_EUSART2_FramingErrorHandler^(0+256)
 17522     1F39                     l1108:
 17523     1F39  0008               	return
 17524     1F3A                     __end_of_EUSART2_SetFramingErrorHandler:
 17525                           
 17526                           	psect	text34
 17527     1F2E                     __ptext34:	
 17528 ;; *************** function _EUSART2_SetErrorHandler *****************
 17529 ;; Defined at:
 17530 ;;		line 272 in file "mcc_generated_files/eusart2.c"
 17531 ;; Parameters:    Size  Location     Type
 17532 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17533 ;;		 -> EUSART2_DefaultErrorHandler(1), 
 17534 ;; Auto vars:     Size  Location     Type
 17535 ;;		None
 17536 ;; Return value:  Size  Location     Type
 17537 ;;                  1    wreg      void 
 17538 ;; Registers used:
 17539 ;;		wreg
 17540 ;; Tracked objects:
 17541 ;;		On entry : 0/0
 17542 ;;		On exit  : 0/0
 17543 ;;		Unchanged: 0/0
 17544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17545 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17548 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17549 ;;Total ram usage:        2 bytes
 17550 ;; Hardware stack levels used: 1
 17551 ;; Hardware stack levels required when called: 4
 17552 ;; This function calls:
 17553 ;;		Nothing
 17554 ;; This function is called by:
 17555 ;;		_EUSART2_Initialize
 17556 ;; This function uses a non-reentrant model
 17557 ;;
 17558                           
 17559     1F2E                     _EUSART2_SetErrorHandler:	
 17560                           ;psect for function _EUSART2_SetErrorHandler
 17561                           
 17562     1F2E                     l13481:	
 17563                           ;incstack = 0
 17564                           ; Regs used in _EUSART2_SetErrorHandler: [wreg]
 17565                           
 17566                           
 17567                           ;mcc_generated_files/eusart2.c: 273:     EUSART2_ErrorHandler = interruptHandler;
 17568     1F2E  0872               	movf	EUSART2_SetErrorHandler@interruptHandler+1,w
 17569     1F2F  0142               	movlb	2	; select bank2
 17570     1F30  00E8               	movwf	(_EUSART2_ErrorHandler+1)^(0+256)
 17571     1F31  0871               	movf	EUSART2_SetErrorHandler@interruptHandler,w
 17572     1F32  00E7               	movwf	_EUSART2_ErrorHandler^(0+256)
 17573     1F33                     l1114:
 17574     1F33  0008               	return
 17575     1F34                     __end_of_EUSART2_SetErrorHandler:
 17576                           
 17577                           	psect	text35
 17578     093E                     __ptext35:	
 17579 ;; *************** function _EUSART1_Initialize *****************
 17580 ;; Defined at:
 17581 ;;		line 88 in file "mcc_generated_files/eusart1.c"
 17582 ;; Parameters:    Size  Location     Type
 17583 ;;		None
 17584 ;; Auto vars:     Size  Location     Type
 17585 ;;		None
 17586 ;; Return value:  Size  Location     Type
 17587 ;;                  1    wreg      void 
 17588 ;; Registers used:
 17589 ;;		wreg, status,2, status,0, pclath, cstack
 17590 ;; Tracked objects:
 17591 ;;		On entry : 0/0
 17592 ;;		On exit  : 0/0
 17593 ;;		Unchanged: 0/0
 17594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17599 ;;Total ram usage:        0 bytes
 17600 ;; Hardware stack levels used: 1
 17601 ;; Hardware stack levels required when called: 5
 17602 ;; This function calls:
 17603 ;;		_EUSART1_SetErrorHandler
 17604 ;;		_EUSART1_SetFramingErrorHandler
 17605 ;;		_EUSART1_SetOverrunErrorHandler
 17606 ;;		_EUSART1_SetRxInterruptHandler
 17607 ;;		_EUSART1_SetTxInterruptHandler
 17608 ;; This function is called by:
 17609 ;;		_SYSTEM_Initialize
 17610 ;; This function uses a non-reentrant model
 17611 ;;
 17612                           
 17613     093E                     _EUSART1_Initialize:	
 17614                           ;psect for function _EUSART1_Initialize
 17615                           
 17616     093E                     l13689:	
 17617                           ;incstack = 0
 17618                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17619                           
 17620                           
 17621                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
 17622     093E  014E               	movlb	14	; select bank14
 17623     093F  1299               	bcf	25,5	;volatile
 17624     0940                     l13691:
 17625                           
 17626                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 17627     0940  3087               	movlw	low _EUSART1_Receive_ISR
 17628     0941  00F1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 17629     0942  3008               	movlw	high _EUSART1_Receive_ISR
 17630     0943  00F2               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 17631     0944  319F  2722  3189   	fcall	_EUSART1_SetRxInterruptHandler
 17632     0947                     l13693:
 17633                           
 17634                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
 17635     0947  014E               	movlb	14	; select bank14
 17636     0948  1219               	bcf	25,4	;volatile
 17637                           
 17638                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
 17639     0949  3000               	movlw	low _EUSART1_Transmit_ISR
 17640     094A  00F1               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler
 17641     094B  3014               	movlw	high _EUSART1_Transmit_ISR
 17642     094C  00F2               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1
 17643     094D  319F  2728  3189   	fcall	_EUSART1_SetTxInterruptHandler
 17644     0950                     l13695:
 17645                           
 17646                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
 17647     0950  3008               	movlw	8
 17648     0951  0142               	movlb	2	; select bank2
 17649     0952  009F               	movwf	31	;volatile
 17650     0953                     l13697:
 17651                           
 17652                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
 17653     0953  3090               	movlw	144
 17654     0954  009D               	movwf	29	;volatile
 17655     0955                     l13699:
 17656                           
 17657                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
 17658     0955  3024               	movlw	36
 17659     0956  009E               	movwf	30	;volatile
 17660     0957                     l13701:
 17661                           
 17662                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x40;
 17663     0957  3040               	movlw	64
 17664     0958  009B               	movwf	27	;volatile
 17665     0959                     l13703:
 17666                           
 17667                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x03;
 17668     0959  3003               	movlw	3
 17669     095A  009C               	movwf	28	;volatile
 17670     095B                     l13705:
 17671                           
 17672                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 17673     095B  3068               	movlw	low _EUSART1_DefaultFramingErrorHandler
 17674     095C  00F1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
 17675     095D  301E               	movlw	high _EUSART1_DefaultFramingErrorHandler
 17676     095E  00F2               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
 17677     095F  319F  2716  3189   	fcall	_EUSART1_SetFramingErrorHandler
 17678     0962                     l13707:
 17679                           
 17680                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 17681     0962  3090               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 17682     0963  00F1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
 17683     0964  301E               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 17684     0965  00F2               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
 17685     0966  319F  271C  3189   	fcall	_EUSART1_SetOverrunErrorHandler
 17686     0969                     l13709:
 17687                           
 17688                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 17689     0969  308C               	movlw	low _EUSART1_DefaultErrorHandler
 17690     096A  00F1               	movwf	EUSART1_SetErrorHandler@interruptHandler
 17691     096B  301E               	movlw	high _EUSART1_DefaultErrorHandler
 17692     096C  00F2               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
 17693     096D  319F  2710  3189   	fcall	_EUSART1_SetErrorHandler
 17694     0970                     l13711:
 17695                           
 17696                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
 17697     0970  0140               	movlb	0	; select bank0
 17698     0971  01D7               	clrf	_eusart1RxLastError	;volatile
 17699     0972                     l13713:
 17700                           
 17701                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
 17702     0972  01DD               	clrf	_eusart1TxHead	;volatile
 17703     0973                     l13715:
 17704                           
 17705                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
 17706     0973  01DC               	clrf	_eusart1TxTail	;volatile
 17707     0974                     l13717:
 17708                           
 17709                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
 17710     0974  3008               	movlw	8
 17711     0975  00DB               	movwf	_eusart1TxBufferRemaining	;volatile
 17712                           
 17713                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
 17714     0976  01DA               	clrf	_eusart1RxHead	;volatile
 17715                           
 17716                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
 17717     0977  01D9               	clrf	_eusart1RxTail	;volatile
 17718                           
 17719                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
 17720     0978  01D8               	clrf	_eusart1RxCount	;volatile
 17721     0979                     l13719:
 17722                           
 17723                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
 17724     0979  014E               	movlb	14	; select bank14
 17725     097A  1699               	bsf	25,5	;volatile
 17726     097B                     l1195:
 17727     097B  0008               	return
 17728     097C                     __end_of_EUSART1_Initialize:
 17729                           
 17730                           	psect	text36
 17731     1F28                     __ptext36:	
 17732 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
 17733 ;; Defined at:
 17734 ;;		line 285 in file "mcc_generated_files/eusart1.c"
 17735 ;; Parameters:    Size  Location     Type
 17736 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17737 ;;		 -> EUSART2_Transmit_ISR(1), EUSART1_Transmit_ISR(1), 
 17738 ;; Auto vars:     Size  Location     Type
 17739 ;;		None
 17740 ;; Return value:  Size  Location     Type
 17741 ;;                  1    wreg      void 
 17742 ;; Registers used:
 17743 ;;		wreg
 17744 ;; Tracked objects:
 17745 ;;		On entry : 0/0
 17746 ;;		On exit  : 0/0
 17747 ;;		Unchanged: 0/0
 17748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17749 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17752 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17753 ;;Total ram usage:        2 bytes
 17754 ;; Hardware stack levels used: 1
 17755 ;; Hardware stack levels required when called: 4
 17756 ;; This function calls:
 17757 ;;		Nothing
 17758 ;; This function is called by:
 17759 ;;		_EUSART1_Initialize
 17760 ;; This function uses a non-reentrant model
 17761 ;;
 17762                           
 17763     1F28                     _EUSART1_SetTxInterruptHandler:	
 17764                           ;psect for function _EUSART1_SetTxInterruptHandler
 17765                           
 17766     1F28                     l13495:	
 17767                           ;incstack = 0
 17768                           ; Regs used in _EUSART1_SetTxInterruptHandler: [wreg]
 17769                           
 17770                           
 17771                           ;mcc_generated_files/eusart1.c: 286:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 17772     1F28  0872               	movf	EUSART1_SetTxInterruptHandler@interruptHandler+1,w
 17773     1F29  0142               	movlb	2	; select bank2
 17774     1F2A  00E6               	movwf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+256)
 17775     1F2B  0871               	movf	EUSART1_SetTxInterruptHandler@interruptHandler,w
 17776     1F2C  00E5               	movwf	_EUSART1_TxDefaultInterruptHandler^(0+256)
 17777     1F2D                     l1267:
 17778     1F2D  0008               	return
 17779     1F2E                     __end_of_EUSART1_SetTxInterruptHandler:
 17780                           
 17781                           	psect	text37
 17782     1F22                     __ptext37:	
 17783 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 17784 ;; Defined at:
 17785 ;;		line 289 in file "mcc_generated_files/eusart1.c"
 17786 ;; Parameters:    Size  Location     Type
 17787 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17788 ;;		 -> EUSART2_Receive_ISR(1), EUSART1_Receive_ISR(1), 
 17789 ;; Auto vars:     Size  Location     Type
 17790 ;;		None
 17791 ;; Return value:  Size  Location     Type
 17792 ;;                  1    wreg      void 
 17793 ;; Registers used:
 17794 ;;		wreg
 17795 ;; Tracked objects:
 17796 ;;		On entry : 0/0
 17797 ;;		On exit  : 0/0
 17798 ;;		Unchanged: 0/0
 17799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17800 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17803 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17804 ;;Total ram usage:        2 bytes
 17805 ;; Hardware stack levels used: 1
 17806 ;; Hardware stack levels required when called: 4
 17807 ;; This function calls:
 17808 ;;		Nothing
 17809 ;; This function is called by:
 17810 ;;		_EUSART1_Initialize
 17811 ;; This function uses a non-reentrant model
 17812 ;;
 17813                           
 17814     1F22                     _EUSART1_SetRxInterruptHandler:	
 17815                           ;psect for function _EUSART1_SetRxInterruptHandler
 17816                           
 17817     1F22                     l13493:	
 17818                           ;incstack = 0
 17819                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
 17820                           
 17821                           
 17822                           ;mcc_generated_files/eusart1.c: 290:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 17823     1F22  0872               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
 17824     1F23  0142               	movlb	2	; select bank2
 17825     1F24  00E4               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256)
 17826     1F25  0871               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
 17827     1F26  00E3               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+256)
 17828     1F27                     l1270:
 17829     1F27  0008               	return
 17830     1F28                     __end_of_EUSART1_SetRxInterruptHandler:
 17831                           
 17832                           	psect	text38
 17833     1F1C                     __ptext38:	
 17834 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 17835 ;; Defined at:
 17836 ;;		line 277 in file "mcc_generated_files/eusart1.c"
 17837 ;; Parameters:    Size  Location     Type
 17838 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17839 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 17840 ;; Auto vars:     Size  Location     Type
 17841 ;;		None
 17842 ;; Return value:  Size  Location     Type
 17843 ;;                  1    wreg      void 
 17844 ;; Registers used:
 17845 ;;		wreg
 17846 ;; Tracked objects:
 17847 ;;		On entry : 0/0
 17848 ;;		On exit  : 0/0
 17849 ;;		Unchanged: 0/0
 17850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17851 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17854 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17855 ;;Total ram usage:        2 bytes
 17856 ;; Hardware stack levels used: 1
 17857 ;; Hardware stack levels required when called: 4
 17858 ;; This function calls:
 17859 ;;		Nothing
 17860 ;; This function is called by:
 17861 ;;		_EUSART1_Initialize
 17862 ;; This function uses a non-reentrant model
 17863 ;;
 17864                           
 17865     1F1C                     _EUSART1_SetOverrunErrorHandler:	
 17866                           ;psect for function _EUSART1_SetOverrunErrorHandler
 17867                           
 17868     1F1C                     l13499:	
 17869                           ;incstack = 0
 17870                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
 17871                           
 17872                           
 17873                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_OverrunErrorHandler = interruptHandler;
 17874     1F1C  0872               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
 17875     1F1D  0142               	movlb	2	; select bank2
 17876     1F1E  00E0               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+256)
 17877     1F1F  0871               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
 17878     1F20  00DF               	movwf	_EUSART1_OverrunErrorHandler^(0+256)
 17879     1F21                     l1261:
 17880     1F21  0008               	return
 17881     1F22                     __end_of_EUSART1_SetOverrunErrorHandler:
 17882                           
 17883                           	psect	text39
 17884     1F16                     __ptext39:	
 17885 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 17886 ;; Defined at:
 17887 ;;		line 273 in file "mcc_generated_files/eusart1.c"
 17888 ;; Parameters:    Size  Location     Type
 17889 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17890 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 17891 ;; Auto vars:     Size  Location     Type
 17892 ;;		None
 17893 ;; Return value:  Size  Location     Type
 17894 ;;                  1    wreg      void 
 17895 ;; Registers used:
 17896 ;;		wreg
 17897 ;; Tracked objects:
 17898 ;;		On entry : 0/0
 17899 ;;		On exit  : 0/0
 17900 ;;		Unchanged: 0/0
 17901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17902 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17905 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17906 ;;Total ram usage:        2 bytes
 17907 ;; Hardware stack levels used: 1
 17908 ;; Hardware stack levels required when called: 4
 17909 ;; This function calls:
 17910 ;;		Nothing
 17911 ;; This function is called by:
 17912 ;;		_EUSART1_Initialize
 17913 ;; This function uses a non-reentrant model
 17914 ;;
 17915                           
 17916     1F16                     _EUSART1_SetFramingErrorHandler:	
 17917                           ;psect for function _EUSART1_SetFramingErrorHandler
 17918                           
 17919     1F16                     l13497:	
 17920                           ;incstack = 0
 17921                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
 17922                           
 17923                           
 17924                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_FramingErrorHandler = interruptHandler;
 17925     1F16  0872               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
 17926     1F17  0142               	movlb	2	; select bank2
 17927     1F18  00E2               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+256)
 17928     1F19  0871               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
 17929     1F1A  00E1               	movwf	_EUSART1_FramingErrorHandler^(0+256)
 17930     1F1B                     l1258:
 17931     1F1B  0008               	return
 17932     1F1C                     __end_of_EUSART1_SetFramingErrorHandler:
 17933                           
 17934                           	psect	text40
 17935     1F10                     __ptext40:	
 17936 ;; *************** function _EUSART1_SetErrorHandler *****************
 17937 ;; Defined at:
 17938 ;;		line 281 in file "mcc_generated_files/eusart1.c"
 17939 ;; Parameters:    Size  Location     Type
 17940 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17941 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 17942 ;; Auto vars:     Size  Location     Type
 17943 ;;		None
 17944 ;; Return value:  Size  Location     Type
 17945 ;;                  1    wreg      void 
 17946 ;; Registers used:
 17947 ;;		wreg
 17948 ;; Tracked objects:
 17949 ;;		On entry : 0/0
 17950 ;;		On exit  : 0/0
 17951 ;;		Unchanged: 0/0
 17952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17953 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17956 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17957 ;;Total ram usage:        2 bytes
 17958 ;; Hardware stack levels used: 1
 17959 ;; Hardware stack levels required when called: 4
 17960 ;; This function calls:
 17961 ;;		Nothing
 17962 ;; This function is called by:
 17963 ;;		_EUSART1_Initialize
 17964 ;; This function uses a non-reentrant model
 17965 ;;
 17966                           
 17967     1F10                     _EUSART1_SetErrorHandler:	
 17968                           ;psect for function _EUSART1_SetErrorHandler
 17969                           
 17970     1F10                     l13501:	
 17971                           ;incstack = 0
 17972                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
 17973                           
 17974                           
 17975                           ;mcc_generated_files/eusart1.c: 282:     EUSART1_ErrorHandler = interruptHandler;
 17976     1F10  0872               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
 17977     1F11  0142               	movlb	2	; select bank2
 17978     1F12  00DE               	movwf	(_EUSART1_ErrorHandler+1)^(0+256)
 17979     1F13  0871               	movf	EUSART1_SetErrorHandler@interruptHandler,w
 17980     1F14  00DD               	movwf	_EUSART1_ErrorHandler^(0+256)
 17981     1F15                     l1264:
 17982     1F15  0008               	return
 17983     1F16                     __end_of_EUSART1_SetErrorHandler:
 17984                           
 17985                           	psect	text41
 17986     1279                     __ptext41:	
 17987 ;; *************** function _RN487X_SetAsyncMessageHandler *****************
 17988 ;; Defined at:
 17989 ;;		line 328 in file "mcc_generated_files/rn487x/rn487x.c"
 17990 ;; Parameters:    Size  Location     Type
 17991 ;;  pBuffer         2    1[COMMON] PTR unsigned char 
 17992 ;;		 -> statusBuffer@main$F3783(80), statusBuffer(80), 
 17993 ;;  len             1    3[COMMON] unsigned char 
 17994 ;; Auto vars:     Size  Location     Type
 17995 ;;		None
 17996 ;; Return value:  Size  Location     Type
 17997 ;;                  1    wreg      _Bool 
 17998 ;; Registers used:
 17999 ;;		wreg, status,2, status,0
 18000 ;; Tracked objects:
 18001 ;;		On entry : 0/0
 18002 ;;		On exit  : 0/0
 18003 ;;		Unchanged: 0/0
 18004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18005 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18008 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18009 ;;Total ram usage:        3 bytes
 18010 ;; Hardware stack levels used: 1
 18011 ;; Hardware stack levels required when called: 4
 18012 ;; This function calls:
 18013 ;;		Nothing
 18014 ;; This function is called by:
 18015 ;;		_main
 18016 ;;		_RN487X_Example_Initialized
 18017 ;; This function uses a non-reentrant model
 18018 ;;
 18019                           
 18020     1279                     _RN487X_SetAsyncMessageHandler:	
 18021                           ;psect for function _RN487X_SetAsyncMessageHandler
 18022                           
 18023     1279                     l14445:	
 18024                           ;incstack = 0
 18025                           ; Regs used in _RN487X_SetAsyncMessageHandler: [wreg+status,2+status,0]
 18026                           
 18027                           
 18028                           ;mcc_generated_files/rn487x/rn487x.c: 328: _Bool RN487X_SetAsyncMessageHandler(char* pBu
      +                          ffer, uint8_t len);mcc_generated_files/rn487x/rn487x.c: 329: {;mcc_generated_files/rn487
      +                          x/rn487x.c: 330:     if ((pBuffer != ((void*)0)) && (len > 1))
 18029     1279  0871               	movf	RN487X_SetAsyncMessageHandler@pBuffer,w
 18030     127A  0472               	iorwf	RN487X_SetAsyncMessageHandler@pBuffer+1,w
 18031     127B  1903               	btfsc	3,2
 18032     127C  2A7E               	goto	u11611
 18033     127D  2A7F               	goto	u11610
 18034     127E                     u11611:
 18035     127E  2A8F               	goto	l14459
 18036     127F                     u11610:
 18037     127F                     l14447:
 18038     127F  3002               	movlw	2
 18039     1280  0273               	subwf	RN487X_SetAsyncMessageHandler@len,w
 18040     1281  1C03               	skipc
 18041     1282  2A84               	goto	u11621
 18042     1283  2A85               	goto	u11620
 18043     1284                     u11621:
 18044     1284  2A8F               	goto	l14459
 18045     1285                     u11620:
 18046     1285                     l14449:
 18047                           
 18048                           ;mcc_generated_files/rn487x/rn487x.c: 331:     {;mcc_generated_files/rn487x/rn487x.c: 33
      +                          2:       asyncBuffer = pBuffer;
 18049     1285  0872               	movf	RN487X_SetAsyncMessageHandler@pBuffer+1,w
 18050     1286  0140               	movlb	0	; select bank0
 18051     1287  00D1               	movwf	_asyncBuffer+1
 18052     1288  0871               	movf	RN487X_SetAsyncMessageHandler@pBuffer,w
 18053     1289  00D0               	movwf	_asyncBuffer
 18054     128A                     l14451:
 18055                           
 18056                           ;mcc_generated_files/rn487x/rn487x.c: 333:       asyncBufferSize = len - 1;
 18057     128A  0873               	movf	RN487X_SetAsyncMessageHandler@len,w
 18058     128B  3EFF               	addlw	255
 18059     128C  00E7               	movwf	_asyncBufferSize
 18060     128D                     l14453:
 18061                           
 18062                           ;mcc_generated_files/rn487x/rn487x.c: 334:       return 1;
 18063     128D  3001               	movlw	1
 18064     128E  2A90               	goto	l952
 18065     128F                     l14459:
 18066                           
 18067                           ;mcc_generated_files/rn487x/rn487x.c: 337:     {;mcc_generated_files/rn487x/rn487x.c: 33
      +                          8:         return 0;
 18068     128F  3000               	movlw	0
 18069     1290                     l952:
 18070     1290  0008               	return
 18071     1291                     __end_of_RN487X_SetAsyncMessageHandler:
 18072                           
 18073                           	psect	text42
 18074     102B                     __ptext42:	
 18075 ;; *************** function _RN487X_Read *****************
 18076 ;; Defined at:
 18077 ;;		line 356 in file "mcc_generated_files/rn487x/rn487x.c"
 18078 ;; Parameters:    Size  Location     Type
 18079 ;;		None
 18080 ;; Auto vars:     Size  Location     Type
 18081 ;;		None
 18082 ;; Return value:  Size  Location     Type
 18083 ;;                  1    wreg      unsigned char 
 18084 ;; Registers used:
 18085 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18086 ;; Tracked objects:
 18087 ;;		On entry : 0/0
 18088 ;;		On exit  : 0/0
 18089 ;;		Unchanged: 0/0
 18090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18095 ;;Total ram usage:        0 bytes
 18096 ;; Hardware stack levels used: 1
 18097 ;; Hardware stack levels required when called: 9
 18098 ;; This function calls:
 18099 ;;		_RN487X_DataReady
 18100 ;; This function is called by:
 18101 ;;		_main
 18102 ;;		_RN487X_Example_TransparentUart
 18103 ;; This function uses a non-reentrant model
 18104 ;;
 18105                           
 18106     102B                     _RN487X_Read:	
 18107                           ;psect for function _RN487X_Read
 18108                           
 18109     102B                     l14467:	
 18110                           ;incstack = 0
 18111                           ; Regs used in _RN487X_Read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18112                           
 18113     102B                     l14469:	
 18114                           ;mcc_generated_files/rn487x/rn487x.c: 358:     while(RN487X_DataReady() == 0);
 18115                           
 18116     102B  3193  2347  3190   	fcall	_RN487X_DataReady
 18117     102E  3A00               	xorlw	0
 18118     102F  1903               	skipnz
 18119     1030  2832               	goto	u11631
 18120     1031  2833               	goto	u11630
 18121     1032                     u11631:
 18122     1032  282B               	goto	l14469
 18123     1033                     u11630:
 18124     1033                     l14471:
 18125                           
 18126                           ;mcc_generated_files/rn487x/rn487x.c: 359:     dataReady = 0;
 18127     1033  0140               	movlb	0	; select bank0
 18128     1034  01E5               	clrf	_dataReady
 18129     1035                     l14473:
 18130                           
 18131                           ;mcc_generated_files/rn487x/rn487x.c: 360:     return peek;
 18132     1035  0866               	movf	_peek,w
 18133     1036                     l964:
 18134     1036  0008               	return
 18135     1037                     __end_of_RN487X_Read:
 18136                           
 18137                           	psect	text43
 18138     1347                     __ptext43:	
 18139 ;; *************** function _RN487X_DataReady *****************
 18140 ;; Defined at:
 18141 ;;		line 342 in file "mcc_generated_files/rn487x/rn487x.c"
 18142 ;; Parameters:    Size  Location     Type
 18143 ;;		None
 18144 ;; Auto vars:     Size  Location     Type
 18145 ;;		None
 18146 ;; Return value:  Size  Location     Type
 18147 ;;                  1    wreg      _Bool 
 18148 ;; Registers used:
 18149 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18150 ;; Tracked objects:
 18151 ;;		On entry : 0/0
 18152 ;;		On exit  : 0/0
 18153 ;;		Unchanged: 0/0
 18154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18159 ;;Total ram usage:        0 bytes
 18160 ;; Hardware stack levels used: 1
 18161 ;; Hardware stack levels required when called: 8
 18162 ;; This function calls:
 18163 ;;		_RN487X_FilterData
 18164 ;;		_RN487X_is_rx_ready
 18165 ;; This function is called by:
 18166 ;;		_RN487X_Read
 18167 ;;		_main
 18168 ;;		_RN487X_Example_TransparentUart
 18169 ;; This function uses a non-reentrant model
 18170 ;;
 18171                           
 18172     1347                     _RN487X_DataReady:	
 18173                           ;psect for function _RN487X_DataReady
 18174                           
 18175     1347                     l13631:	
 18176                           ;incstack = 0
 18177                           ; Regs used in _RN487X_DataReady: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18178                           
 18179                           
 18180                           ;mcc_generated_files/rn487x/rn487x.c: 344:     if (dataReady)
 18181     1347  0140               	movlb	0	; select bank0
 18182     1348  0865               	movf	_dataReady,w
 18183     1349  1903               	btfsc	3,2
 18184     134A  2B4C               	goto	u10571
 18185     134B  2B4D               	goto	u10570
 18186     134C                     u10571:
 18187     134C  2B4F               	goto	l13637
 18188     134D                     u10570:
 18189     134D                     l13633:
 18190                           
 18191                           ;mcc_generated_files/rn487x/rn487x.c: 345:     {;mcc_generated_files/rn487x/rn487x.c: 34
      +                          6:         return 1;
 18192     134D  3001               	movlw	1
 18193     134E  2B62               	goto	l957
 18194     134F                     l13637:
 18195                           
 18196                           ;mcc_generated_files/rn487x/rn487x.c: 349:     if (RN487X.DataReady())
 18197     134F  306E               	movlw	low ((_RN487X+6)| (0+32768))
 18198     1350  0084               	movwf	4
 18199     1351  3098               	movlw	high ((_RN487X+6)| (0+32768))
 18200     1352  0085               	movwf	5
 18201     1353  3F01               	moviw [1]fsr0
 18202     1354  008A               	movwf	10
 18203     1355  3F00               	moviw [0]fsr0
 18204     1356  000A               	callw
 18205     1357  3193               	pagesel	$
 18206     1358  3A00               	xorlw	0
 18207     1359  1903               	skipnz
 18208     135A  2B5C               	goto	u10581
 18209     135B  2B5D               	goto	u10580
 18210     135C                     u10581:
 18211     135C  2B61               	goto	l13643
 18212     135D                     u10580:
 18213     135D                     l13639:
 18214                           
 18215                           ;mcc_generated_files/rn487x/rn487x.c: 350:     {;mcc_generated_files/rn487x/rn487x.c: 35
      +                          1:         return RN487X_FilterData();
 18216     135D  318E  2632  3193   	fcall	_RN487X_FilterData
 18217     1360  2B62               	goto	l957
 18218     1361                     l13643:
 18219                           
 18220                           ;mcc_generated_files/rn487x/rn487x.c: 353:     return 0;
 18221     1361  3000               	movlw	0
 18222     1362                     l957:
 18223     1362  0008               	return
 18224     1363                     __end_of_RN487X_DataReady:
 18225                           
 18226                           	psect	text44
 18227     0E32                     __ptext44:	
 18228 ;; *************** function _RN487X_FilterData *****************
 18229 ;; Defined at:
 18230 ;;		line 363 in file "mcc_generated_files/rn487x/rn487x.c"
 18231 ;; Parameters:    Size  Location     Type
 18232 ;;		None
 18233 ;; Auto vars:     Size  Location     Type
 18234 ;;  readChar        1   40[BANK0 ] unsigned char 
 18235 ;; Return value:  Size  Location     Type
 18236 ;;                  1    wreg      _Bool 
 18237 ;; Registers used:
 18238 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18239 ;; Tracked objects:
 18240 ;;		On entry : 0/0
 18241 ;;		On exit  : 0/0
 18242 ;;		Unchanged: 0/0
 18243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18245 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18246 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18247 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18248 ;;Total ram usage:        5 bytes
 18249 ;; Hardware stack levels used: 1
 18250 ;; Hardware stack levels required when called: 7
 18251 ;; This function calls:
 18252 ;;		_RN487X_MessageHandler
 18253 ;;		_RN487X_Read@rn487x_interface$F1381
 18254 ;; This function is called by:
 18255 ;;		_RN487X_DataReady
 18256 ;; This function uses a non-reentrant model
 18257 ;;
 18258                           
 18259     0E32                     _RN487X_FilterData:	
 18260                           ;psect for function _RN487X_FilterData
 18261                           
 18262     0E32                     l13445:	
 18263                           ;incstack = 0
 18264                           ; Regs used in _RN487X_FilterData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18265                           
 18266                           
 18267                           ;mcc_generated_files/rn487x/rn487x.c: 365:     static _Bool asyncBuffering = 0;;mcc_gene
      +                          rated_files/rn487x/rn487x.c: 367:     uint8_t readChar = RN487X.Read();
 18268     0E32  306A               	movlw	low ((_RN487X+2)| (0+32768))
 18269     0E33  0084               	movwf	4
 18270     0E34  3098               	movlw	high ((_RN487X+2)| (0+32768))
 18271     0E35  0085               	movwf	5
 18272     0E36  3F01               	moviw [1]fsr0
 18273     0E37  008A               	movwf	10
 18274     0E38  3F00               	moviw [0]fsr0
 18275     0E39  000A               	callw
 18276     0E3A  318E               	pagesel	$
 18277     0E3B  0140               	movlb	0	; select bank0
 18278     0E3C  00C8               	movwf	RN487X_FilterData@readChar
 18279     0E3D                     l13447:
 18280                           
 18281                           ;mcc_generated_files/rn487x/rn487x.c: 369:     if(asyncBuffering == 1)
 18282     0E3D  0364               	decf	RN487X_FilterData@asyncBuffering,w
 18283     0E3E  1D03               	btfss	3,2
 18284     0E3F  2E41               	goto	u10371
 18285     0E40  2E42               	goto	u10370
 18286     0E41                     u10371:
 18287     0E41  2E7A               	goto	l13463
 18288     0E42                     u10370:
 18289     0E42                     l13449:
 18290                           
 18291                           ;mcc_generated_files/rn487x/rn487x.c: 370:     {;mcc_generated_files/rn487x/rn487x.c: 37
      +                          1:         if(readChar == ('%'))
 18292     0E42  3025               	movlw	37
 18293     0E43  0648               	xorwf	RN487X_FilterData@readChar,w
 18294     0E44  1D03               	btfss	3,2
 18295     0E45  2E47               	goto	u10381
 18296     0E46  2E48               	goto	u10380
 18297     0E47                     u10381:
 18298     0E47  2E5C               	goto	l13457
 18299     0E48                     u10380:
 18300     0E48                     l13451:
 18301                           
 18302                           ;mcc_generated_files/rn487x/rn487x.c: 372:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 373:             asyncBuffering = 0;
 18303     0E48  01E4               	clrf	RN487X_FilterData@asyncBuffering
 18304     0E49                     l13453:
 18305                           
 18306                           ;mcc_generated_files/rn487x/rn487x.c: 374:             *pHead = '\0';
 18307     0E49  084E               	movf	_pHead,w
 18308     0E4A  0086               	movwf	6
 18309     0E4B  084F               	movf	_pHead+1,w
 18310     0E4C  0087               	movwf	7
 18311     0E4D  0181               	clrf	1
 18312     0E4E                     l13455:
 18313                           
 18314                           ;mcc_generated_files/rn487x/rn487x.c: 375:             RN487X.AsyncHandler(asyncBuffer);
 18315     0E4E  0851               	movf	_asyncBuffer+1,w
 18316     0E4F  00C2               	movwf	RN487X_MessageHandler@message+1
 18317     0E50  0850               	movf	_asyncBuffer,w
 18318     0E51  00C1               	movwf	RN487X_MessageHandler@message
 18319     0E52  3078               	movlw	low ((_RN487X+16)| (0+32768))
 18320     0E53  0084               	movwf	4
 18321     0E54  3098               	movlw	high ((_RN487X+16)| (0+32768))
 18322     0E55  0085               	movwf	5
 18323     0E56  3F01               	moviw [1]fsr0
 18324     0E57  008A               	movwf	10
 18325     0E58  3F00               	moviw [0]fsr0
 18326     0E59  000A               	callw
 18327     0E5A  318E               	pagesel	$
 18328                           
 18329                           ;mcc_generated_files/rn487x/rn487x.c: 376:         }
 18330     0E5B  2E8B               	goto	l973
 18331     0E5C                     l13457:
 18332     0E5C  0867               	movf	_asyncBufferSize,w
 18333     0E5D  00C4               	movwf	??_RN487X_FilterData
 18334     0E5E  01C5               	clrf	??_RN487X_FilterData+1
 18335     0E5F  0844               	movf	??_RN487X_FilterData,w
 18336     0E60  0750               	addwf	_asyncBuffer,w
 18337     0E61  00C6               	movwf	??_RN487X_FilterData+2
 18338     0E62  0845               	movf	??_RN487X_FilterData+1,w
 18339     0E63  3D51               	addwfc	_asyncBuffer+1,w
 18340     0E64  00C7               	movwf	??_RN487X_FilterData+3
 18341     0E65  0847               	movf	??_RN487X_FilterData+3,w
 18342     0E66  024F               	subwf	_pHead+1,w
 18343     0E67  1D03               	skipz
 18344     0E68  2E6B               	goto	u10395
 18345     0E69  0846               	movf	??_RN487X_FilterData+2,w
 18346     0E6A  024E               	subwf	_pHead,w
 18347     0E6B                     u10395:
 18348     0E6B  1803               	skipnc
 18349     0E6C  2E6E               	goto	u10391
 18350     0E6D  2E6F               	goto	u10390
 18351     0E6E                     u10391:
 18352     0E6E  2E8B               	goto	l973
 18353     0E6F                     u10390:
 18354     0E6F                     l13459:
 18355                           
 18356                           ;mcc_generated_files/rn487x/rn487x.c: 378:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 379:             *pHead++ = readChar;
 18357     0E6F  084E               	movf	_pHead,w
 18358     0E70  0086               	movwf	6
 18359     0E71  084F               	movf	_pHead+1,w
 18360     0E72  0087               	movwf	7
 18361     0E73  0848               	movf	RN487X_FilterData@readChar,w
 18362     0E74  0081               	movwf	1
 18363     0E75                     l13461:
 18364     0E75  3001               	movlw	1
 18365     0E76  07CE               	addwf	_pHead,f
 18366     0E77  3000               	movlw	0
 18367     0E78  3DCF               	addwfc	_pHead+1,f
 18368     0E79  2E8B               	goto	l973
 18369     0E7A                     l13463:
 18370                           
 18371                           ;mcc_generated_files/rn487x/rn487x.c: 383:     {;mcc_generated_files/rn487x/rn487x.c: 38
      +                          4:         if (readChar == ('%'))
 18372     0E7A  3025               	movlw	37
 18373     0E7B  0648               	xorwf	RN487X_FilterData@readChar,w
 18374     0E7C  1D03               	btfss	3,2
 18375     0E7D  2E7F               	goto	u10401
 18376     0E7E  2E80               	goto	u10400
 18377     0E7F                     u10401:
 18378     0E7F  2E87               	goto	l974
 18379     0E80                     u10400:
 18380     0E80                     l13465:
 18381                           
 18382                           ;mcc_generated_files/rn487x/rn487x.c: 385:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 386:             asyncBuffering = 1;
 18383     0E80  01E4               	clrf	RN487X_FilterData@asyncBuffering
 18384     0E81  0AE4               	incf	RN487X_FilterData@asyncBuffering,f
 18385     0E82                     l13467:
 18386                           
 18387                           ;mcc_generated_files/rn487x/rn487x.c: 387:             pHead = asyncBuffer;
 18388     0E82  0851               	movf	_asyncBuffer+1,w
 18389     0E83  00CF               	movwf	_pHead+1
 18390     0E84  0850               	movf	_asyncBuffer,w
 18391     0E85  00CE               	movwf	_pHead
 18392                           
 18393                           ;mcc_generated_files/rn487x/rn487x.c: 388:         }
 18394     0E86  2E8B               	goto	l973
 18395     0E87                     l974:	
 18396                           ;mcc_generated_files/rn487x/rn487x.c: 389:         else
 18397                           
 18398                           
 18399                           ;mcc_generated_files/rn487x/rn487x.c: 390:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 391:             dataReady = 1;
 18400     0E87  01E5               	clrf	_dataReady
 18401     0E88  0AE5               	incf	_dataReady,f
 18402     0E89                     l13469:
 18403                           
 18404                           ;mcc_generated_files/rn487x/rn487x.c: 392:             peek = readChar;
 18405     0E89  0848               	movf	RN487X_FilterData@readChar,w
 18406     0E8A  00E6               	movwf	_peek
 18407     0E8B                     l973:	
 18408                           ;mcc_generated_files/rn487x/rn487x.c: 394:     }
 18409                           
 18410                           
 18411                           ;mcc_generated_files/rn487x/rn487x.c: 395:     return dataReady;
 18412     0E8B  0140               	movlb	0	; select bank0
 18413     0E8C  0865               	movf	_dataReady,w
 18414     0E8D                     l976:
 18415     0E8D  0008               	return
 18416     0E8E                     __end_of_RN487X_FilterData:
 18417                           
 18418                           	psect	text45
 18419     0A7F                     __ptext45:	
 18420 ;; *************** function _RN487X_MessageHandler *****************
 18421 ;; Defined at:
 18422 ;;		line 368 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 18423 ;; Parameters:    Size  Location     Type
 18424 ;;  message         2   33[BANK0 ] PTR unsigned char 
 18425 ;;		 -> statusBuffer@main$F3783(80), statusBuffer(80), NULL(0), 
 18426 ;; Auto vars:     Size  Location     Type
 18427 ;;  messageType     1   35[BANK0 ] enum E12962
 18428 ;; Return value:  Size  Location     Type
 18429 ;;                  1    wreg      void 
 18430 ;; Registers used:
 18431 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18432 ;; Tracked objects:
 18433 ;;		On entry : 0/0
 18434 ;;		On exit  : 0/0
 18435 ;;		Unchanged: 0/0
 18436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18437 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18438 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18440 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18441 ;;Total ram usage:        3 bytes
 18442 ;; Hardware stack levels used: 1
 18443 ;; Hardware stack levels required when called: 6
 18444 ;; This function calls:
 18445 ;;		_rn487x_PrintIndicatorCharacters
 18446 ;;		_rn487x_PrintMessage
 18447 ;;		_rn487x_PrintMessageEnd
 18448 ;;		_rn487x_PrintMessageStart
 18449 ;;		_strstr
 18450 ;; This function is called by:
 18451 ;;		_RN487X_FilterData
 18452 ;; This function uses a non-reentrant model
 18453 ;;
 18454                           
 18455     0A7F                     _RN487X_MessageHandler:	
 18456                           ;psect for function _RN487X_MessageHandler
 18457                           
 18458     0A7F                     l13359:	
 18459                           ;incstack = 0
 18460                           ; Regs used in _RN487X_MessageHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18461                           
 18462                           
 18463                           ;mcc_generated_files/rn487x/rn487x_interface.c: 368: static void RN487X_MessageHandler(c
      +                          har* message);mcc_generated_files/rn487x/rn487x_interface.c: 369: {;mcc_generated_files/
      +                          rn487x/rn487x_interface.c: 370:     RN487X_MESSAGE_TYPE messageType;;mcc_generated_files
      +                          /rn487x/rn487x_interface.c: 371:     rn487x_PrintMessageStart();
 18464     0A7F  3196  261B  318A   	fcall	_rn487x_PrintMessageStart
 18465                           
 18466                           ;mcc_generated_files/rn487x/rn487x_interface.c: 372:     if (strstr(message, "DISCONNECT
      +                          "))
 18467     0A82  0140               	movlb	0	; select bank0
 18468     0A83  0842               	movf	RN487X_MessageHandler@message+1,w
 18469     0A84  00F9               	movwf	strstr@h+1
 18470     0A85  0841               	movf	RN487X_MessageHandler@message,w
 18471     0A86  00F8               	movwf	strstr@h
 18472     0A87  3091               	movlw	low (STR_2| (0+32768))
 18473     0A88  00FA               	movwf	strstr@n
 18474     0A89  3098               	movlw	high (STR_2| (0+32768))
 18475     0A8A  00FB               	movwf	strstr@n+1
 18476     0A8B  318D  25DD  318A   	fcall	_strstr
 18477     0A8E  0878               	movf	?_strstr,w
 18478     0A8F  0479               	iorwf	?_strstr+1,w
 18479     0A90  1903               	btfsc	3,2
 18480     0A91  2A93               	goto	u10231
 18481     0A92  2A94               	goto	u10230
 18482     0A93                     u10231:
 18483     0A93  2A98               	goto	l13363
 18484     0A94                     u10230:
 18485     0A94                     l13361:
 18486                           
 18487                           ;mcc_generated_files/rn487x/rn487x_interface.c: 373:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 374:         messageType = DISCONNECT_MSG;
 18488     0A94  0140               	movlb	0	; select bank0
 18489     0A95  01C3               	clrf	RN487X_MessageHandler@messageType
 18490                           
 18491                           ;mcc_generated_files/rn487x/rn487x_interface.c: 375:         connected = 0;
 18492     0A96  01E8               	clrf	_connected
 18493                           
 18494                           ;mcc_generated_files/rn487x/rn487x_interface.c: 376:     }
 18495     0A97  2AB3               	goto	l13369
 18496     0A98                     l13363:
 18497     0A98  0140               	movlb	0	; select bank0
 18498     0A99  0842               	movf	RN487X_MessageHandler@message+1,w
 18499     0A9A  00F9               	movwf	strstr@h+1
 18500     0A9B  0841               	movf	RN487X_MessageHandler@message,w
 18501     0A9C  00F8               	movwf	strstr@h
 18502     0A9D  307A               	movlw	low (STR_4| (0+32768))
 18503     0A9E  00FA               	movwf	strstr@n
 18504     0A9F  3098               	movlw	high (STR_4| (0+32768))
 18505     0AA0  00FB               	movwf	strstr@n+1
 18506     0AA1  318D  25DD  318A   	fcall	_strstr
 18507     0AA4  0878               	movf	?_strstr,w
 18508     0AA5  0479               	iorwf	?_strstr+1,w
 18509     0AA6  1903               	btfsc	3,2
 18510     0AA7  2AA9               	goto	u10241
 18511     0AA8  2AAA               	goto	u10240
 18512     0AA9                     u10241:
 18513     0AA9  2AB0               	goto	l13367
 18514     0AAA                     u10240:
 18515     0AAA                     l13365:
 18516                           
 18517                           ;mcc_generated_files/rn487x/rn487x_interface.c: 378:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 379:         messageType = STREAM_OPEN_MSG;
 18518     0AAA  0140               	movlb	0	; select bank0
 18519     0AAB  01C3               	clrf	RN487X_MessageHandler@messageType
 18520     0AAC  0AC3               	incf	RN487X_MessageHandler@messageType,f
 18521                           
 18522                           ;mcc_generated_files/rn487x/rn487x_interface.c: 380:         connected = 1;
 18523     0AAD  01E8               	clrf	_connected
 18524     0AAE  0AE8               	incf	_connected,f
 18525                           
 18526                           ;mcc_generated_files/rn487x/rn487x_interface.c: 381:     }
 18527     0AAF  2AB3               	goto	l13369
 18528     0AB0                     l13367:
 18529                           
 18530                           ;mcc_generated_files/rn487x/rn487x_interface.c: 383:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 384:         messageType = GENERAL_MSG;
 18531     0AB0  3002               	movlw	2
 18532     0AB1  0140               	movlb	0	; select bank0
 18533     0AB2  00C3               	movwf	RN487X_MessageHandler@messageType
 18534     0AB3                     l13369:
 18535                           
 18536                           ;mcc_generated_files/rn487x/rn487x_interface.c: 386:     rn487x_PrintMessage(message);
 18537     0AB3  0842               	movf	RN487X_MessageHandler@message+1,w
 18538     0AB4  00F8               	movwf	rn487x_PrintMessage@passedMessage+1
 18539     0AB5  0841               	movf	RN487X_MessageHandler@message,w
 18540     0AB6  00F7               	movwf	rn487x_PrintMessage@passedMessage
 18541     0AB7  3197  2795  318A   	fcall	_rn487x_PrintMessage
 18542     0ABA                     l13371:
 18543                           
 18544                           ;mcc_generated_files/rn487x/rn487x_interface.c: 387:     rn487x_PrintMessageEnd();
 18545     0ABA  318B  239F  318A   	fcall	_rn487x_PrintMessageEnd
 18546     0ABD                     l13373:
 18547                           
 18548                           ;mcc_generated_files/rn487x/rn487x_interface.c: 388:     rn487x_PrintIndicatorCharacters
      +                          (messageType);
 18549     0ABD  0140               	movlb	0	; select bank0
 18550     0ABE  0843               	movf	RN487X_MessageHandler@messageType,w
 18551     0ABF  3194  2422  318A   	fcall	_rn487x_PrintIndicatorCharacters
 18552     0AC2                     l855:
 18553     0AC2  0008               	return
 18554     0AC3                     __end_of_RN487X_MessageHandler:
 18555                           
 18556                           	psect	text46
 18557     0DDD                     __ptext46:	
 18558 ;; *************** function _strstr *****************
 18559 ;; Defined at:
 18560 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strstr.c"
 18561 ;; Parameters:    Size  Location     Type
 18562 ;;  h               2    8[COMMON] PTR const unsigned char 
 18563 ;;		 -> statusBuffer@main$F3783(80), statusBuffer(80), NULL(0), 
 18564 ;;  n               2   10[COMMON] PTR const unsigned char 
 18565 ;;		 -> STR_5(12), STR_3(11), 
 18566 ;; Auto vars:     Size  Location     Type
 18567 ;;  nl              2    2[BANK0 ] unsigned int 
 18568 ;; Return value:  Size  Location     Type
 18569 ;;                  2    8[COMMON] PTR unsigned char 
 18570 ;; Registers used:
 18571 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18572 ;; Tracked objects:
 18573 ;;		On entry : 0/0
 18574 ;;		On exit  : 0/0
 18575 ;;		Unchanged: 0/0
 18576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18577 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18578 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18579 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18580 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18581 ;;Total ram usage:        8 bytes
 18582 ;; Hardware stack levels used: 1
 18583 ;; Hardware stack levels required when called: 5
 18584 ;; This function calls:
 18585 ;;		_strchr
 18586 ;;		_strlen
 18587 ;;		_strncmp
 18588 ;; This function is called by:
 18589 ;;		_RN487X_MessageHandler
 18590 ;; This function uses a non-reentrant model
 18591 ;;
 18592                           
 18593     0DDD                     _strstr:	
 18594                           ;psect for function _strstr
 18595                           
 18596     0DDD                     l13289:	
 18597                           ;incstack = 0
 18598                           ; Regs used in _strstr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18599                           
 18600     0DDD  087A               	movf	strstr@n,w
 18601     0DDE  047B               	iorwf	strstr@n+1,w
 18602     0DDF  1903               	btfsc	3,2
 18603     0DE0  2DE2               	goto	u10111
 18604     0DE1  2DE3               	goto	u10110
 18605     0DE2                     u10111:
 18606     0DE2  2E2F               	goto	l13303
 18607     0DE3                     u10110:
 18608     0DE3                     l13291:
 18609     0DE3  087B               	movf	strstr@n+1,w
 18610     0DE4  00F2               	movwf	strlen@s+1
 18611     0DE5  087A               	movf	strstr@n,w
 18612     0DE6  00F1               	movwf	strlen@s
 18613     0DE7  3192  2291  318D   	fcall	_strlen
 18614     0DEA  0872               	movf	?_strlen+1,w
 18615     0DEB  0140               	movlb	0	; select bank0
 18616     0DEC  00A3               	movwf	strstr@nl+1
 18617     0DED  0871               	movf	?_strlen,w
 18618     0DEE  00A2               	movwf	strstr@nl
 18619     0DEF  2E20               	goto	l13299
 18620     0DF0                     l13293:
 18621     0DF0  0879               	movf	strstr@h+1,w
 18622     0DF1  00F2               	movwf	strncmp@l+1
 18623     0DF2  0878               	movf	strstr@h,w
 18624     0DF3  00F1               	movwf	strncmp@l
 18625     0DF4  087B               	movf	strstr@n+1,w
 18626     0DF5  00F4               	movwf	strncmp@r+1
 18627     0DF6  087A               	movf	strstr@n,w
 18628     0DF7  00F3               	movwf	strncmp@r
 18629     0DF8  0140               	movlb	0	; select bank0
 18630     0DF9  0823               	movf	strstr@nl+1,w
 18631     0DFA  00F6               	movwf	strncmp@n+1
 18632     0DFB  0822               	movf	strstr@nl,w
 18633     0DFC  00F5               	movwf	strncmp@n
 18634     0DFD  318C  243D  318D   	fcall	_strncmp
 18635     0E00  0871               	movf	?_strncmp,w
 18636     0E01  0472               	iorwf	?_strncmp+1,w
 18637     0E02  1D03               	btfss	3,2
 18638     0E03  2E05               	goto	u10121
 18639     0E04  2E06               	goto	u10120
 18640     0E05                     u10121:
 18641     0E05  2E07               	goto	l13297
 18642     0E06                     u10120:
 18643     0E06                     l13295:
 18644     0E06  2E31               	goto	l3323
 18645     0E07                     l13297:
 18646     0E07  0878               	movf	strstr@h,w
 18647     0E08  3E01               	addlw	1
 18648     0E09  00F1               	movwf	strchr@s
 18649     0E0A  3000               	movlw	0
 18650     0E0B  3D79               	addwfc	strstr@h+1,w
 18651     0E0C  00F2               	movwf	strchr@s+1
 18652     0E0D  087A               	movf	strstr@n,w
 18653     0E0E  0084               	movwf	4
 18654     0E0F  087B               	movf	strstr@n+1,w
 18655     0E10  0085               	movwf	5
 18656     0E11  0800               	movf	0,w	;code access
 18657     0E12  0140               	movlb	0	; select bank0
 18658     0E13  00A0               	movwf	??_strstr
 18659     0E14  01A1               	clrf	??_strstr+1
 18660     0E15  0820               	movf	??_strstr,w
 18661     0E16  00F3               	movwf	strchr@c
 18662     0E17  0821               	movf	??_strstr+1,w
 18663     0E18  00F4               	movwf	strchr@c+1
 18664     0E19  3193  2380  318D   	fcall	_strchr
 18665     0E1C  0872               	movf	?_strchr+1,w
 18666     0E1D  00F9               	movwf	strstr@h+1
 18667     0E1E  0871               	movf	?_strchr,w
 18668     0E1F  00F8               	movwf	strstr@h
 18669     0E20                     l13299:
 18670     0E20  0878               	movf	strstr@h,w
 18671     0E21  0479               	iorwf	strstr@h+1,w
 18672     0E22  1903               	btfsc	3,2
 18673     0E23  2E25               	goto	u10131
 18674     0E24  2E26               	goto	u10130
 18675     0E25                     u10131:
 18676     0E25  2E2F               	goto	l13303
 18677     0E26                     u10130:
 18678     0E26                     l13301:
 18679     0E26  0878               	movf	strstr@h,w
 18680     0E27  0086               	movwf	6
 18681     0E28  0879               	movf	strstr@h+1,w
 18682     0E29  0087               	movwf	7
 18683     0E2A  0801               	movf	1,w
 18684     0E2B  1D03               	btfss	3,2
 18685     0E2C  2E2E               	goto	u10141
 18686     0E2D  2E2F               	goto	u10140
 18687     0E2E                     u10141:
 18688     0E2E  2DF0               	goto	l13293
 18689     0E2F                     u10140:
 18690     0E2F                     l13303:
 18691     0E2F  01F8               	clrf	?_strstr
 18692     0E30  01F9               	clrf	?_strstr+1
 18693     0E31                     l3323:
 18694     0E31  0008               	return
 18695     0E32                     __end_of_strstr:
 18696                           
 18697                           	psect	text47
 18698     0C3D                     __ptext47:	
 18699 ;; *************** function _strncmp *****************
 18700 ;; Defined at:
 18701 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strncmp.c"
 18702 ;; Parameters:    Size  Location     Type
 18703 ;;  l               2    1[COMMON] PTR const unsigned char 
 18704 ;;		 -> statusBuffer@main$F3783(80), statusBuffer(80), NULL(0), 
 18705 ;;  r               2    3[COMMON] PTR const unsigned char 
 18706 ;;		 -> STR_5(12), STR_3(11), 
 18707 ;;  n               2    5[COMMON] unsigned int 
 18708 ;; Auto vars:     Size  Location     Type
 18709 ;;		None
 18710 ;; Return value:  Size  Location     Type
 18711 ;;                  2    1[COMMON] int 
 18712 ;; Registers used:
 18713 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 18714 ;; Tracked objects:
 18715 ;;		On entry : 0/0
 18716 ;;		On exit  : 0/0
 18717 ;;		Unchanged: 0/0
 18718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18719 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18721 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18722 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18723 ;;Total ram usage:        7 bytes
 18724 ;; Hardware stack levels used: 1
 18725 ;; Hardware stack levels required when called: 4
 18726 ;; This function calls:
 18727 ;;		Nothing
 18728 ;; This function is called by:
 18729 ;;		_strstr
 18730 ;; This function uses a non-reentrant model
 18731 ;;
 18732                           
 18733     0C3D                     _strncmp:	
 18734                           ;psect for function _strncmp
 18735                           
 18736     0C3D                     l13135:	
 18737                           ;incstack = 0
 18738                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
 18739                           
 18740     0C3D  3001               	movlw	1
 18741     0C3E  02F5               	subwf	strncmp@n,f
 18742     0C3F  3000               	movlw	0
 18743     0C40  3BF6               	subwfb	strncmp@n+1,f
 18744     0C41  0A75               	incf	strncmp@n,w
 18745     0C42  1D03               	skipz
 18746     0C43  2C48               	goto	u9951
 18747     0C44  0A76               	incf	strncmp@n+1,w
 18748     0C45  1D03               	btfss	3,2
 18749     0C46  2C48               	goto	u9951
 18750     0C47  2C49               	goto	u9950
 18751     0C48                     u9951:
 18752     0C48  2C58               	goto	l13143
 18753     0C49                     u9950:
 18754     0C49                     l13137:
 18755     0C49  01F1               	clrf	?_strncmp
 18756     0C4A  01F2               	clrf	?_strncmp+1
 18757     0C4B  2C8E               	goto	l3336
 18758     0C4C                     l13141:
 18759     0C4C  3001               	movlw	1
 18760     0C4D  07F1               	addwf	strncmp@l,f
 18761     0C4E  3000               	movlw	0
 18762     0C4F  3DF2               	addwfc	strncmp@l+1,f
 18763     0C50  3001               	movlw	1
 18764     0C51  07F3               	addwf	strncmp@r,f
 18765     0C52  3000               	movlw	0
 18766     0C53  3DF4               	addwfc	strncmp@r+1,f
 18767     0C54  3001               	movlw	1
 18768     0C55  02F5               	subwf	strncmp@n,f
 18769     0C56  3000               	movlw	0
 18770     0C57  3BF6               	subwfb	strncmp@n+1,f
 18771     0C58                     l13143:
 18772     0C58  0871               	movf	strncmp@l,w
 18773     0C59  0086               	movwf	6
 18774     0C5A  0872               	movf	strncmp@l+1,w
 18775     0C5B  0087               	movwf	7
 18776     0C5C  0801               	movf	1,w
 18777     0C5D  1903               	btfsc	3,2
 18778     0C5E  2C60               	goto	u9961
 18779     0C5F  2C61               	goto	u9960
 18780     0C60                     u9961:
 18781     0C60  2C80               	goto	l13151
 18782     0C61                     u9960:
 18783     0C61                     l13145:
 18784     0C61  0873               	movf	strncmp@r,w
 18785     0C62  0084               	movwf	4
 18786     0C63  0874               	movf	strncmp@r+1,w
 18787     0C64  0085               	movwf	5
 18788     0C65  0012               	moviw fsr0++
 18789     0C66  1903               	btfsc	3,2
 18790     0C67  2C69               	goto	u9971
 18791     0C68  2C6A               	goto	u9970
 18792     0C69                     u9971:
 18793     0C69  2C80               	goto	l13151
 18794     0C6A                     u9970:
 18795     0C6A                     l13147:
 18796     0C6A  0875               	movf	strncmp@n,w
 18797     0C6B  0476               	iorwf	strncmp@n+1,w
 18798     0C6C  1903               	btfsc	3,2
 18799     0C6D  2C6F               	goto	u9981
 18800     0C6E  2C70               	goto	u9980
 18801     0C6F                     u9981:
 18802     0C6F  2C80               	goto	l13151
 18803     0C70                     u9980:
 18804     0C70                     l13149:
 18805     0C70  0873               	movf	strncmp@r,w
 18806     0C71  0084               	movwf	4
 18807     0C72  0874               	movf	strncmp@r+1,w
 18808     0C73  0085               	movwf	5
 18809     0C74  0800               	movf	0,w	;code access
 18810     0C75  00F7               	movwf	??_strncmp
 18811     0C76  0871               	movf	strncmp@l,w
 18812     0C77  0086               	movwf	6
 18813     0C78  0872               	movf	strncmp@l+1,w
 18814     0C79  0087               	movwf	7
 18815     0C7A  0801               	movf	1,w
 18816     0C7B  0677               	xorwf	??_strncmp,w
 18817     0C7C  1903               	skipnz
 18818     0C7D  2C7F               	goto	u9991
 18819     0C7E  2C80               	goto	u9990
 18820     0C7F                     u9991:
 18821     0C7F  2C4C               	goto	l13141
 18822     0C80                     u9990:
 18823     0C80                     l13151:
 18824     0C80  0871               	movf	strncmp@l,w
 18825     0C81  0086               	movwf	6
 18826     0C82  0872               	movf	strncmp@l+1,w
 18827     0C83  0087               	movwf	7
 18828     0C84  0873               	movf	strncmp@r,w
 18829     0C85  0084               	movwf	4
 18830     0C86  0874               	movf	strncmp@r+1,w
 18831     0C87  0085               	movwf	5
 18832     0C88  0800               	movf	0,w	;code access
 18833     0C89  0201               	subwf	1,w
 18834     0C8A  00F1               	movwf	?_strncmp
 18835     0C8B  01F2               	clrf	?_strncmp+1
 18836     0C8C  1C03               	skipc
 18837     0C8D  03F2               	decf	?_strncmp+1,f
 18838     0C8E                     l3336:
 18839     0C8E  0008               	return
 18840     0C8F                     __end_of_strncmp:
 18841                           
 18842                           	psect	text48
 18843     1380                     __ptext48:	
 18844 ;; *************** function _strchr *****************
 18845 ;; Defined at:
 18846 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strchr.c"
 18847 ;; Parameters:    Size  Location     Type
 18848 ;;  s               2    1[COMMON] PTR const unsigned char 
 18849 ;;		 -> statusBuffer@main$F3783(80), statusBuffer(80), NULL(0), 
 18850 ;;  c               2    3[COMMON] int 
 18851 ;; Auto vars:     Size  Location     Type
 18852 ;;		None
 18853 ;; Return value:  Size  Location     Type
 18854 ;;                  2    1[COMMON] PTR unsigned char 
 18855 ;; Registers used:
 18856 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18857 ;; Tracked objects:
 18858 ;;		On entry : 0/0
 18859 ;;		On exit  : 0/0
 18860 ;;		Unchanged: 0/0
 18861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18862 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18864 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18865 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18866 ;;Total ram usage:        6 bytes
 18867 ;; Hardware stack levels used: 1
 18868 ;; Hardware stack levels required when called: 4
 18869 ;; This function calls:
 18870 ;;		Nothing
 18871 ;; This function is called by:
 18872 ;;		_strstr
 18873 ;; This function uses a non-reentrant model
 18874 ;;
 18875                           
 18876     1380                     _strchr:	
 18877                           ;psect for function _strchr
 18878                           
 18879     1380                     l3329:	
 18880                           ;incstack = 0
 18881                           ; Regs used in _strchr: [wreg+fsr1l+fsr1h+status,2+status,0]
 18882                           
 18883     1380                     l13155:
 18884     1380  0871               	movf	strchr@s,w
 18885     1381  0086               	movwf	6
 18886     1382  0872               	movf	strchr@s+1,w
 18887     1383  0087               	movwf	7
 18888     1384  0801               	movf	1,w
 18889     1385  0673               	xorwf	strchr@c,w
 18890     1386  1D03               	skipz
 18891     1387  2B89               	goto	u10001
 18892     1388  2B8A               	goto	u10000
 18893     1389                     u10001:
 18894     1389  2B8B               	goto	l13159
 18895     138A                     u10000:
 18896     138A                     l13157:
 18897     138A  2B9D               	goto	l3331
 18898     138B                     l13159:
 18899     138B  0872               	movf	strchr@s+1,w
 18900     138C  00F6               	movwf	??_strchr+1
 18901     138D  0871               	movf	strchr@s,w
 18902     138E  00F5               	movwf	??_strchr
 18903     138F  0AF1               	incf	strchr@s,f
 18904     1390  1903               	skipnz
 18905     1391  0AF2               	incf	strchr@s+1,f
 18906     1392  0875               	movf	??_strchr,w
 18907     1393  0086               	movwf	6
 18908     1394  0876               	movf	??_strchr+1,w
 18909     1395  0087               	movwf	7
 18910     1396  0801               	movf	1,w
 18911     1397  1D03               	btfss	3,2
 18912     1398  2B9A               	goto	u10011
 18913     1399  2B9B               	goto	u10010
 18914     139A                     u10011:
 18915     139A  2B80               	goto	l3329
 18916     139B                     u10010:
 18917     139B                     l13161:
 18918     139B  01F1               	clrf	?_strchr
 18919     139C  01F2               	clrf	?_strchr+1
 18920     139D                     l3331:
 18921     139D  0008               	return
 18922     139E                     __end_of_strchr:
 18923                           
 18924                           	psect	text49
 18925     161B                     __ptext49:	
 18926 ;; *************** function _rn487x_PrintMessageStart *****************
 18927 ;; Defined at:
 18928 ;;		line 323 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 18929 ;; Parameters:    Size  Location     Type
 18930 ;;		None
 18931 ;; Auto vars:     Size  Location     Type
 18932 ;;		None
 18933 ;; Return value:  Size  Location     Type
 18934 ;;                  1    wreg      void 
 18935 ;; Registers used:
 18936 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18937 ;; Tracked objects:
 18938 ;;		On entry : 0/0
 18939 ;;		On exit  : 0/0
 18940 ;;		Unchanged: 0/0
 18941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18946 ;;Total ram usage:        0 bytes
 18947 ;; Hardware stack levels used: 1
 18948 ;; Hardware stack levels required when called: 5
 18949 ;; This function calls:
 18950 ;;		_EUSART1_Write
 18951 ;;		_EUSART2_Write
 18952 ;; This function is called by:
 18953 ;;		_RN487X_MessageHandler
 18954 ;; This function uses a non-reentrant model
 18955 ;;
 18956                           
 18957     161B                     _rn487x_PrintMessageStart:	
 18958                           ;psect for function _rn487x_PrintMessageStart
 18959                           
 18960     161B                     l13267:	
 18961                           ;incstack = 0
 18962                           ; Regs used in _rn487x_PrintMessageStart: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18963                           
 18964                           
 18965                           ;mcc_generated_files/rn487x/rn487x_interface.c: 325:     uart[UART_CDC].Write('<');
 18966     161B  303C               	movlw	60
 18967     161C  00F1               	movwf	EUSART2_Write@txData
 18968     161D  3002               	movlw	low ((_uart+2)| (0+32768))
 18969     161E  0084               	movwf	4
 18970     161F  3098               	movlw	high ((_uart+2)| (0+32768))
 18971     1620  0085               	movwf	5
 18972     1621  3F01               	moviw [1]fsr0
 18973     1622  008A               	movwf	10
 18974     1623  3F00               	moviw [0]fsr0
 18975     1624  000A               	callw
 18976     1625  3196               	pagesel	$
 18977                           
 18978                           ;mcc_generated_files/rn487x/rn487x_interface.c: 326:     uart[UART_CDC].Write('<');
 18979     1626  303C               	movlw	60
 18980     1627  00F1               	movwf	EUSART2_Write@txData
 18981     1628  3002               	movlw	low ((_uart+2)| (0+32768))
 18982     1629  0084               	movwf	4
 18983     162A  3098               	movlw	high ((_uart+2)| (0+32768))
 18984     162B  0085               	movwf	5
 18985     162C  3F01               	moviw [1]fsr0
 18986     162D  008A               	movwf	10
 18987     162E  3F00               	moviw [0]fsr0
 18988     162F  000A               	callw
 18989     1630  3196               	pagesel	$
 18990                           
 18991                           ;mcc_generated_files/rn487x/rn487x_interface.c: 327:     uart[UART_CDC].Write('<');
 18992     1631  303C               	movlw	60
 18993     1632  00F1               	movwf	EUSART2_Write@txData
 18994     1633  3002               	movlw	low ((_uart+2)| (0+32768))
 18995     1634  0084               	movwf	4
 18996     1635  3098               	movlw	high ((_uart+2)| (0+32768))
 18997     1636  0085               	movwf	5
 18998     1637  3F01               	moviw [1]fsr0
 18999     1638  008A               	movwf	10
 19000     1639  3F00               	moviw [0]fsr0
 19001     163A  000A               	callw
 19002     163B  3196               	pagesel	$
 19003                           
 19004                           ;mcc_generated_files/rn487x/rn487x_interface.c: 328:     uart[UART_CDC].Write(' ');
 19005     163C  3020               	movlw	32
 19006     163D  00F1               	movwf	EUSART2_Write@txData
 19007     163E  3002               	movlw	low ((_uart+2)| (0+32768))
 19008     163F  0084               	movwf	4
 19009     1640  3098               	movlw	high ((_uart+2)| (0+32768))
 19010     1641  0085               	movwf	5
 19011     1642  3F01               	moviw [1]fsr0
 19012     1643  008A               	movwf	10
 19013     1644  3F00               	moviw [0]fsr0
 19014     1645  000A               	callw
 19015     1646  3196               	pagesel	$
 19016     1647                     l832:
 19017     1647  0008               	return
 19018     1648                     __end_of_rn487x_PrintMessageStart:
 19019                           
 19020                           	psect	text50
 19021     0B9F                     __ptext50:	
 19022 ;; *************** function _rn487x_PrintMessageEnd *****************
 19023 ;; Defined at:
 19024 ;;		line 331 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19025 ;; Parameters:    Size  Location     Type
 19026 ;;		None
 19027 ;; Auto vars:     Size  Location     Type
 19028 ;;		None
 19029 ;; Return value:  Size  Location     Type
 19030 ;;                  1    wreg      void 
 19031 ;; Registers used:
 19032 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19033 ;; Tracked objects:
 19034 ;;		On entry : 0/0
 19035 ;;		On exit  : 0/0
 19036 ;;		Unchanged: 0/0
 19037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19042 ;;Total ram usage:        0 bytes
 19043 ;; Hardware stack levels used: 1
 19044 ;; Hardware stack levels required when called: 5
 19045 ;; This function calls:
 19046 ;;		_EUSART1_Write
 19047 ;;		_EUSART2_Write
 19048 ;; This function is called by:
 19049 ;;		_RN487X_MessageHandler
 19050 ;; This function uses a non-reentrant model
 19051 ;;
 19052                           
 19053     0B9F                     _rn487x_PrintMessageEnd:	
 19054                           ;psect for function _rn487x_PrintMessageEnd
 19055                           
 19056     0B9F                     l13269:	
 19057                           ;incstack = 0
 19058                           ; Regs used in _rn487x_PrintMessageEnd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19059                           
 19060                           
 19061                           ;mcc_generated_files/rn487x/rn487x_interface.c: 333:     uart[UART_CDC].Write(' ');
 19062     0B9F  3020               	movlw	32
 19063     0BA0  00F1               	movwf	EUSART2_Write@txData
 19064     0BA1  3002               	movlw	low ((_uart+2)| (0+32768))
 19065     0BA2  0084               	movwf	4
 19066     0BA3  3098               	movlw	high ((_uart+2)| (0+32768))
 19067     0BA4  0085               	movwf	5
 19068     0BA5  3F01               	moviw [1]fsr0
 19069     0BA6  008A               	movwf	10
 19070     0BA7  3F00               	moviw [0]fsr0
 19071     0BA8  000A               	callw
 19072     0BA9  318B               	pagesel	$
 19073                           
 19074                           ;mcc_generated_files/rn487x/rn487x_interface.c: 334:     uart[UART_CDC].Write('>');
 19075     0BAA  303E               	movlw	62
 19076     0BAB  00F1               	movwf	EUSART2_Write@txData
 19077     0BAC  3002               	movlw	low ((_uart+2)| (0+32768))
 19078     0BAD  0084               	movwf	4
 19079     0BAE  3098               	movlw	high ((_uart+2)| (0+32768))
 19080     0BAF  0085               	movwf	5
 19081     0BB0  3F01               	moviw [1]fsr0
 19082     0BB1  008A               	movwf	10
 19083     0BB2  3F00               	moviw [0]fsr0
 19084     0BB3  000A               	callw
 19085     0BB4  318B               	pagesel	$
 19086                           
 19087                           ;mcc_generated_files/rn487x/rn487x_interface.c: 335:     uart[UART_CDC].Write('>');
 19088     0BB5  303E               	movlw	62
 19089     0BB6  00F1               	movwf	EUSART2_Write@txData
 19090     0BB7  3002               	movlw	low ((_uart+2)| (0+32768))
 19091     0BB8  0084               	movwf	4
 19092     0BB9  3098               	movlw	high ((_uart+2)| (0+32768))
 19093     0BBA  0085               	movwf	5
 19094     0BBB  3F01               	moviw [1]fsr0
 19095     0BBC  008A               	movwf	10
 19096     0BBD  3F00               	moviw [0]fsr0
 19097     0BBE  000A               	callw
 19098     0BBF  318B               	pagesel	$
 19099                           
 19100                           ;mcc_generated_files/rn487x/rn487x_interface.c: 336:     uart[UART_CDC].Write('>');
 19101     0BC0  303E               	movlw	62
 19102     0BC1  00F1               	movwf	EUSART2_Write@txData
 19103     0BC2  3002               	movlw	low ((_uart+2)| (0+32768))
 19104     0BC3  0084               	movwf	4
 19105     0BC4  3098               	movlw	high ((_uart+2)| (0+32768))
 19106     0BC5  0085               	movwf	5
 19107     0BC6  3F01               	moviw [1]fsr0
 19108     0BC7  008A               	movwf	10
 19109     0BC8  3F00               	moviw [0]fsr0
 19110     0BC9  000A               	callw
 19111     0BCA  318B               	pagesel	$
 19112                           
 19113                           ;mcc_generated_files/rn487x/rn487x_interface.c: 337:     uart[UART_CDC].Write(' ');
 19114     0BCB  3020               	movlw	32
 19115     0BCC  00F1               	movwf	EUSART2_Write@txData
 19116     0BCD  3002               	movlw	low ((_uart+2)| (0+32768))
 19117     0BCE  0084               	movwf	4
 19118     0BCF  3098               	movlw	high ((_uart+2)| (0+32768))
 19119     0BD0  0085               	movwf	5
 19120     0BD1  3F01               	moviw [1]fsr0
 19121     0BD2  008A               	movwf	10
 19122     0BD3  3F00               	moviw [0]fsr0
 19123     0BD4  000A               	callw
 19124     0BD5  318B               	pagesel	$
 19125                           
 19126                           ;mcc_generated_files/rn487x/rn487x_interface.c: 338:     uart[UART_CDC].Write('\r');
 19127     0BD6  300D               	movlw	13
 19128     0BD7  00F1               	movwf	EUSART2_Write@txData
 19129     0BD8  3002               	movlw	low ((_uart+2)| (0+32768))
 19130     0BD9  0084               	movwf	4
 19131     0BDA  3098               	movlw	high ((_uart+2)| (0+32768))
 19132     0BDB  0085               	movwf	5
 19133     0BDC  3F01               	moviw [1]fsr0
 19134     0BDD  008A               	movwf	10
 19135     0BDE  3F00               	moviw [0]fsr0
 19136     0BDF  000A               	callw
 19137     0BE0  318B               	pagesel	$
 19138                           
 19139                           ;mcc_generated_files/rn487x/rn487x_interface.c: 339:     uart[UART_CDC].Write('\n');
 19140     0BE1  300A               	movlw	10
 19141     0BE2  00F1               	movwf	EUSART2_Write@txData
 19142     0BE3  3002               	movlw	low ((_uart+2)| (0+32768))
 19143     0BE4  0084               	movwf	4
 19144     0BE5  3098               	movlw	high ((_uart+2)| (0+32768))
 19145     0BE6  0085               	movwf	5
 19146     0BE7  3F01               	moviw [1]fsr0
 19147     0BE8  008A               	movwf	10
 19148     0BE9  3F00               	moviw [0]fsr0
 19149     0BEA  000A               	callw
 19150     0BEB  318B               	pagesel	$
 19151     0BEC                     l835:
 19152     0BEC  0008               	return
 19153     0BED                     __end_of_rn487x_PrintMessageEnd:
 19154                           
 19155                           	psect	text51
 19156     1795                     __ptext51:	
 19157 ;; *************** function _rn487x_PrintMessage *****************
 19158 ;; Defined at:
 19159 ;;		line 358 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19160 ;; Parameters:    Size  Location     Type
 19161 ;;  passedMessag    2    7[COMMON] PTR unsigned char 
 19162 ;;		 -> statusBuffer@main$F3783(80), statusBuffer(80), NULL(0), 
 19163 ;; Auto vars:     Size  Location     Type
 19164 ;;  messageIndex    1   32[BANK0 ] unsigned char 
 19165 ;;  printCharact   32    0[BANK0 ] unsigned char [32]
 19166 ;; Return value:  Size  Location     Type
 19167 ;;                  1    wreg      void 
 19168 ;; Registers used:
 19169 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19170 ;; Tracked objects:
 19171 ;;		On entry : 0/0
 19172 ;;		On exit  : 0/0
 19173 ;;		Unchanged: 0/0
 19174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19175 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19176 ;;      Locals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19177 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19178 ;;      Totals:         4      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19179 ;;Total ram usage:       37 bytes
 19180 ;; Hardware stack levels used: 1
 19181 ;; Hardware stack levels required when called: 5
 19182 ;; This function calls:
 19183 ;;		_EUSART1_Write
 19184 ;;		_EUSART2_Write
 19185 ;;		_strcpy
 19186 ;;		_strlen
 19187 ;; This function is called by:
 19188 ;;		_RN487X_MessageHandler
 19189 ;; This function uses a non-reentrant model
 19190 ;;
 19191                           
 19192     1795                     _rn487x_PrintMessage:	
 19193                           ;psect for function _rn487x_PrintMessage
 19194                           
 19195     1795                     l13279:	
 19196                           ;incstack = 0
 19197                           ; Regs used in _rn487x_PrintMessage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19198                           
 19199                           
 19200                           ;mcc_generated_files/rn487x/rn487x_interface.c: 358: static __attribute__((inline)) void
      +                           rn487x_PrintMessage(char* passedMessage);mcc_generated_files/rn487x/rn487x_interface.c:
      +                           359: {;mcc_generated_files/rn487x/rn487x_interface.c: 360:     char printCharacter [(32
      +                          )];;mcc_generated_files/rn487x/rn487x_interface.c: 361:     strcpy(printCharacter, passe
      +                          dMessage);
 19201     1795  0878               	movf	rn487x_PrintMessage@passedMessage+1,w
 19202     1796  00F2               	movwf	strcpy@src+1
 19203     1797  0877               	movf	rn487x_PrintMessage@passedMessage,w
 19204     1798  00F1               	movwf	strcpy@src
 19205     1799  3020               	movlw	(low (rn487x_PrintMessage@printCharacter| 0))& (0+255)
 19206     179A  3192  22F6  3197   	fcall	_strcpy
 19207     179D                     l13281:
 19208                           
 19209                           ;mcc_generated_files/rn487x/rn487x_interface.c: 362:     for (uint8_t messageIndex = 0; 
      +                          messageIndex < strlen(passedMessage); messageIndex++)
 19210     179D  0140               	movlb	0	; select bank0
 19211     179E  01C0               	clrf	rn487x_PrintMessage@messageIndex
 19212     179F  2FB4               	goto	l13287
 19213     17A0                     l13283:
 19214                           
 19215                           ;mcc_generated_files/rn487x/rn487x_interface.c: 363:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 364:         uart[UART_CDC].Write(printCharacter[messageIndex]);
 19216     17A0  0840               	movf	rn487x_PrintMessage@messageIndex,w
 19217     17A1  3E20               	addlw	(low (rn487x_PrintMessage@printCharacter| 0))& (0+255)
 19218     17A2  0086               	movwf	6
 19219     17A3  0187               	clrf	7
 19220     17A4  0801               	movf	1,w
 19221     17A5  00F1               	movwf	EUSART2_Write@txData
 19222     17A6  3002               	movlw	low ((_uart+2)| (0+32768))
 19223     17A7  0084               	movwf	4
 19224     17A8  3098               	movlw	high ((_uart+2)| (0+32768))
 19225     17A9  0085               	movwf	5
 19226     17AA  3F01               	moviw [1]fsr0
 19227     17AB  008A               	movwf	10
 19228     17AC  3F00               	moviw [0]fsr0
 19229     17AD  000A               	callw
 19230     17AE  3197               	pagesel	$
 19231     17AF                     l13285:
 19232                           
 19233                           ;mcc_generated_files/rn487x/rn487x_interface.c: 365:     }
 19234     17AF  3001               	movlw	1
 19235     17B0  00F9               	movwf	??_rn487x_PrintMessage
 19236     17B1  0879               	movf	??_rn487x_PrintMessage,w
 19237     17B2  0140               	movlb	0	; select bank0
 19238     17B3  07C0               	addwf	rn487x_PrintMessage@messageIndex,f
 19239     17B4                     l13287:
 19240     17B4  0878               	movf	rn487x_PrintMessage@passedMessage+1,w
 19241     17B5  00F2               	movwf	strlen@s+1
 19242     17B6  0877               	movf	rn487x_PrintMessage@passedMessage,w
 19243     17B7  00F1               	movwf	strlen@s
 19244     17B8  3192  2291  3197   	fcall	_strlen
 19245     17BB  0140               	movlb	0	; select bank0
 19246     17BC  0840               	movf	rn487x_PrintMessage@messageIndex,w
 19247     17BD  00F9               	movwf	??_rn487x_PrintMessage
 19248     17BE  01FA               	clrf	??_rn487x_PrintMessage+1
 19249     17BF  0872               	movf	?_strlen+1,w
 19250     17C0  027A               	subwf	??_rn487x_PrintMessage+1,w
 19251     17C1  1D03               	skipz
 19252     17C2  2FC5               	goto	u10105
 19253     17C3  0871               	movf	?_strlen,w
 19254     17C4  0279               	subwf	??_rn487x_PrintMessage,w
 19255     17C5                     u10105:
 19256     17C5  1C03               	skipc
 19257     17C6  2FC8               	goto	u10101
 19258     17C7  2FC9               	goto	u10100
 19259     17C8                     u10101:
 19260     17C8  2FA0               	goto	l13283
 19261     17C9                     u10100:
 19262     17C9                     l848:
 19263     17C9  0008               	return
 19264     17CA                     __end_of_rn487x_PrintMessage:
 19265                           
 19266                           	psect	text52
 19267     12F6                     __ptext52:	
 19268 ;; *************** function _strcpy *****************
 19269 ;; Defined at:
 19270 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strcpy.c"
 19271 ;; Parameters:    Size  Location     Type
 19272 ;;  dest            1    wreg     PTR unsigned char 
 19273 ;;		 -> rn487x_PrintMessage@printCharacter(32), 
 19274 ;;  src             2    1[COMMON] PTR const unsigned char 
 19275 ;;		 -> statusBuffer@main$F3783(80), statusBuffer(80), NULL(0), 
 19276 ;; Auto vars:     Size  Location     Type
 19277 ;;  dest            1    6[COMMON] PTR unsigned char 
 19278 ;;		 -> rn487x_PrintMessage@printCharacter(32), 
 19279 ;;  d               1    5[COMMON] PTR unsigned char 
 19280 ;;		 -> rn487x_PrintMessage@printCharacter(32), 
 19281 ;; Return value:  Size  Location     Type
 19282 ;;                  1    wreg      PTR unsigned char 
 19283 ;; Registers used:
 19284 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 19285 ;; Tracked objects:
 19286 ;;		On entry : 0/0
 19287 ;;		On exit  : 0/0
 19288 ;;		Unchanged: 0/0
 19289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19290 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19291 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19292 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19293 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19294 ;;Total ram usage:        6 bytes
 19295 ;; Hardware stack levels used: 1
 19296 ;; Hardware stack levels required when called: 4
 19297 ;; This function calls:
 19298 ;;		Nothing
 19299 ;; This function is called by:
 19300 ;;		_rn487x_PrintMessage
 19301 ;; This function uses a non-reentrant model
 19302 ;;
 19303                           
 19304     12F6                     _strcpy:	
 19305                           ;psect for function _strcpy
 19306                           
 19307                           
 19308                           ;incstack = 0
 19309                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0]
 19310                           ;strcpy@dest stored from wreg
 19311     12F6  00F6               	movwf	strcpy@dest
 19312     12F7                     l13065:
 19313     12F7  0876               	movf	strcpy@dest,w
 19314     12F8  00F5               	movwf	strcpy@d
 19315     12F9                     l13067:
 19316     12F9  0875               	movf	strcpy@d,w
 19317     12FA  0086               	movwf	6
 19318     12FB  0187               	clrf	7
 19319     12FC  0AF5               	incf	strcpy@d,f
 19320     12FD  0872               	movf	strcpy@src+1,w
 19321     12FE  00F4               	movwf	??_strcpy+1
 19322     12FF  0871               	movf	strcpy@src,w
 19323     1300  00F3               	movwf	??_strcpy
 19324     1301  0AF1               	incf	strcpy@src,f
 19325     1302  1903               	skipnz
 19326     1303  0AF2               	incf	strcpy@src+1,f
 19327     1304  0873               	movf	??_strcpy,w
 19328     1305  0084               	movwf	4
 19329     1306  0874               	movf	??_strcpy+1,w
 19330     1307  0085               	movwf	5
 19331     1308  0800               	movf	0,w
 19332     1309  3FC0               	movwi [0]fsr1
 19333     130A  0889               	movf	9,f
 19334     130B  1D03               	btfss	3,2
 19335     130C  2B0E               	goto	u9861
 19336     130D  2B0F               	goto	u9860
 19337     130E                     u9861:
 19338     130E  2AF9               	goto	l13067
 19339     130F                     u9860:
 19340     130F                     l3304:
 19341     130F  0008               	return
 19342     1310                     __end_of_strcpy:
 19343                           
 19344                           	psect	text53
 19345     1422                     __ptext53:	
 19346 ;; *************** function _rn487x_PrintIndicatorCharacters *****************
 19347 ;; Defined at:
 19348 ;;		line 342 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19349 ;; Parameters:    Size  Location     Type
 19350 ;;  messageType     1    wreg     enum E12962
 19351 ;; Auto vars:     Size  Location     Type
 19352 ;;  messageType     1    3[COMMON] enum E12962
 19353 ;; Return value:  Size  Location     Type
 19354 ;;                  1    wreg      void 
 19355 ;; Registers used:
 19356 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19357 ;; Tracked objects:
 19358 ;;		On entry : 0/0
 19359 ;;		On exit  : 0/0
 19360 ;;		Unchanged: 0/0
 19361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19363 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19365 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19366 ;;Total ram usage:        1 bytes
 19367 ;; Hardware stack levels used: 1
 19368 ;; Hardware stack levels required when called: 5
 19369 ;; This function calls:
 19370 ;;		_EUSART1_Write
 19371 ;;		_EUSART2_Write
 19372 ;; This function is called by:
 19373 ;;		_RN487X_MessageHandler
 19374 ;; This function uses a non-reentrant model
 19375 ;;
 19376                           
 19377     1422                     _rn487x_PrintIndicatorCharacters:	
 19378                           ;psect for function _rn487x_PrintIndicatorCharacters
 19379                           
 19380                           
 19381                           ;incstack = 0
 19382                           ; Regs used in _rn487x_PrintIndicatorCharacters: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 19383                           ;rn487x_PrintIndicatorCharacters@messageType stored from wreg
 19384     1422  00F3               	movwf	rn487x_PrintIndicatorCharacters@messageType
 19385     1423                     l13271:
 19386                           
 19387                           ;mcc_generated_files/rn487x/rn487x_interface.c: 342: static __attribute__((inline)) void
      +                           rn487x_PrintIndicatorCharacters(RN487X_MESSAGE_TYPE messageType);mcc_generated_files/rn
      +                          487x/rn487x_interface.c: 343: {;mcc_generated_files/rn487x/rn487x_interface.c: 344:     
      +                          if (DISCONNECT_MSG == messageType)
 19388     1423  0873               	movf	rn487x_PrintIndicatorCharacters@messageType,w
 19389     1424  1D03               	btfss	3,2
 19390     1425  2C27               	goto	u10081
 19391     1426  2C28               	goto	u10080
 19392     1427                     u10081:
 19393     1427  2C34               	goto	l13275
 19394     1428                     u10080:
 19395     1428                     l13273:
 19396                           
 19397                           ;mcc_generated_files/rn487x/rn487x_interface.c: 345:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 346:         uart[UART_CDC].Write('[');
 19398     1428  305B               	movlw	91
 19399     1429  00F1               	movwf	EUSART2_Write@txData
 19400     142A  3002               	movlw	low ((_uart+2)| (0+32768))
 19401     142B  0084               	movwf	4
 19402     142C  3098               	movlw	high ((_uart+2)| (0+32768))
 19403     142D  0085               	movwf	5
 19404     142E  3F01               	moviw [1]fsr0
 19405     142F  008A               	movwf	10
 19406     1430  3F00               	moviw [0]fsr0
 19407     1431  000A               	callw
 19408     1432  3194               	pagesel	$
 19409                           
 19410                           ;mcc_generated_files/rn487x/rn487x_interface.c: 347:     }
 19411     1433  2C44               	goto	l842
 19412     1434                     l13275:
 19413     1434  0373               	decf	rn487x_PrintIndicatorCharacters@messageType,w
 19414     1435  1D03               	btfss	3,2
 19415     1436  2C38               	goto	u10091
 19416     1437  2C39               	goto	u10090
 19417     1438                     u10091:
 19418     1438  2C44               	goto	l842
 19419     1439                     u10090:
 19420     1439                     l13277:
 19421                           
 19422                           ;mcc_generated_files/rn487x/rn487x_interface.c: 349:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 350:         uart[UART_CDC].Write(']');
 19423     1439  305D               	movlw	93
 19424     143A  00F1               	movwf	EUSART2_Write@txData
 19425     143B  3002               	movlw	low ((_uart+2)| (0+32768))
 19426     143C  0084               	movwf	4
 19427     143D  3098               	movlw	high ((_uart+2)| (0+32768))
 19428     143E  0085               	movwf	5
 19429     143F  3F01               	moviw [1]fsr0
 19430     1440  008A               	movwf	10
 19431     1441  3F00               	moviw [0]fsr0
 19432     1442  000A               	callw
 19433     1443  3194               	pagesel	$
 19434     1444                     l842:	
 19435                           ;mcc_generated_files/rn487x/rn487x_interface.c: 351:     }
 19436                           
 19437     1444  0008               	return
 19438     1445                     __end_of_rn487x_PrintIndicatorCharacters:
 19439                           
 19440                           	psect	text54
 19441     1E89                     __ptext54:	
 19442 ;; *************** function _RN487X_IsConnected *****************
 19443 ;; Defined at:
 19444 ;;		line 243 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19445 ;; Parameters:    Size  Location     Type
 19446 ;;		None
 19447 ;; Auto vars:     Size  Location     Type
 19448 ;;		None
 19449 ;; Return value:  Size  Location     Type
 19450 ;;                  1    wreg      _Bool 
 19451 ;; Registers used:
 19452 ;;		wreg
 19453 ;; Tracked objects:
 19454 ;;		On entry : 0/0
 19455 ;;		On exit  : 0/0
 19456 ;;		Unchanged: 0/0
 19457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19462 ;;Total ram usage:        0 bytes
 19463 ;; Hardware stack levels used: 1
 19464 ;; Hardware stack levels required when called: 4
 19465 ;; This function calls:
 19466 ;;		Nothing
 19467 ;; This function is called by:
 19468 ;;		_main
 19469 ;;		_RN487X_Example_TransparentUart
 19470 ;; This function uses a non-reentrant model
 19471 ;;
 19472                           
 19473     1E89                     _RN487X_IsConnected:	
 19474                           ;psect for function _RN487X_IsConnected
 19475                           
 19476     1E89                     l14463:	
 19477                           ;incstack = 0
 19478                           ; Regs used in _RN487X_IsConnected: [wreg]
 19479                           
 19480                           
 19481                           ;mcc_generated_files/rn487x/rn487x_interface.c: 245:     return connected;
 19482     1E89  0140               	movlb	0	; select bank0
 19483     1E8A  0868               	movf	_connected,w
 19484     1E8B                     l783:
 19485     1E8B  0008               	return
 19486     1E8C                     __end_of_RN487X_IsConnected:
 19487                           
 19488                           	psect	text55
 19489     0E8E                     __ptext55:	
 19490 ;; *************** function _RN487X_Init *****************
 19491 ;; Defined at:
 19492 ;;		line 54 in file "mcc_generated_files/rn487x/rn487x.c"
 19493 ;; Parameters:    Size  Location     Type
 19494 ;;		None
 19495 ;; Auto vars:     Size  Location     Type
 19496 ;;		None
 19497 ;; Return value:  Size  Location     Type
 19498 ;;                  1    wreg      _Bool 
 19499 ;; Registers used:
 19500 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19501 ;; Tracked objects:
 19502 ;;		On entry : 0/0
 19503 ;;		On exit  : 0/0
 19504 ;;		Unchanged: 0/0
 19505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19510 ;;Total ram usage:        0 bytes
 19511 ;; Hardware stack levels used: 1
 19512 ;; Hardware stack levels required when called: 6
 19513 ;; This function calls:
 19514 ;;		_RN487X_Delay
 19515 ;;		_RN487X_IndicateRx
 19516 ;;		_RN487X_Read@rn487x_interface$F1381
 19517 ;;		_RN487X_Reset
 19518 ;;		_RN487X_SetSystemMode
 19519 ;;		_RN487X_is_rx_ready
 19520 ;; This function is called by:
 19521 ;;		_main
 19522 ;; This function uses a non-reentrant model
 19523 ;;
 19524                           
 19525     0E8E                     _RN487X_Init:	
 19526                           ;psect for function _RN487X_Init
 19527                           
 19528     0E8E                     l14477:	
 19529                           ;incstack = 0
 19530                           ; Regs used in _RN487X_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19531                           
 19532                           
 19533                           ;mcc_generated_files/rn487x/rn487x.c: 57:     RN487X.SetSystemMode(APPLICATION_MODE);
 19534     0E8E  01F1               	clrf	RN487X_SetSystemMode@mode
 19535     0E8F  0AF1               	incf	RN487X_SetSystemMode@mode,f
 19536     0E90  3074               	movlw	low ((_RN487X+12)| (0+32768))
 19537     0E91  0084               	movwf	4
 19538     0E92  3098               	movlw	high ((_RN487X+12)| (0+32768))
 19539     0E93  0085               	movwf	5
 19540     0E94  3F01               	moviw [1]fsr0
 19541     0E95  008A               	movwf	10
 19542     0E96  3F00               	moviw [0]fsr0
 19543     0E97  000A               	callw
 19544     0E98  318E               	pagesel	$
 19545                           
 19546                           ;mcc_generated_files/rn487x/rn487x.c: 59:     RN487X.ResetModule(1);
 19547     0E99  01F1               	clrf	RN487X_Reset@value
 19548     0E9A  0AF1               	incf	RN487X_Reset@value,f
 19549     0E9B  3072               	movlw	low ((_RN487X+10)| (0+32768))
 19550     0E9C  0084               	movwf	4
 19551     0E9D  3098               	movlw	high ((_RN487X+10)| (0+32768))
 19552     0E9E  0085               	movwf	5
 19553     0E9F  3F01               	moviw [1]fsr0
 19554     0EA0  008A               	movwf	10
 19555     0EA1  3F00               	moviw [0]fsr0
 19556     0EA2  000A               	callw
 19557     0EA3  318E               	pagesel	$
 19558                           
 19559                           ;mcc_generated_files/rn487x/rn487x.c: 61:     RN487X.DelayMs((1));
 19560     0EA4  3001               	movlw	1
 19561     0EA5  00F4               	movwf	RN487X_Delay@delayCount
 19562     0EA6  3000               	movlw	0
 19563     0EA7  00F5               	movwf	RN487X_Delay@delayCount+1
 19564     0EA8  3076               	movlw	low ((_RN487X+14)| (0+32768))
 19565     0EA9  0084               	movwf	4
 19566     0EAA  3098               	movlw	high ((_RN487X+14)| (0+32768))
 19567     0EAB  0085               	movwf	5
 19568     0EAC  3F01               	moviw [1]fsr0
 19569     0EAD  008A               	movwf	10
 19570     0EAE  3F00               	moviw [0]fsr0
 19571     0EAF  000A               	callw
 19572     0EB0  318E               	pagesel	$
 19573                           
 19574                           ;mcc_generated_files/rn487x/rn487x.c: 63:     RN487X.ResetModule(0);
 19575     0EB1  01F1               	clrf	RN487X_Reset@value
 19576     0EB2  3072               	movlw	low ((_RN487X+10)| (0+32768))
 19577     0EB3  0084               	movwf	4
 19578     0EB4  3098               	movlw	high ((_RN487X+10)| (0+32768))
 19579     0EB5  0085               	movwf	5
 19580     0EB6  3F01               	moviw [1]fsr0
 19581     0EB7  008A               	movwf	10
 19582     0EB8  3F00               	moviw [0]fsr0
 19583     0EB9  000A               	callw
 19584     0EBA  318E               	pagesel	$
 19585                           
 19586                           ;mcc_generated_files/rn487x/rn487x.c: 66:     RN487X.IndicateRx(1);
 19587     0EBB  01F1               	clrf	RN487X_IndicateRx@value
 19588     0EBC  0AF1               	incf	RN487X_IndicateRx@value,f
 19589     0EBD  3070               	movlw	low ((_RN487X+8)| (0+32768))
 19590     0EBE  0084               	movwf	4
 19591     0EBF  3098               	movlw	high ((_RN487X+8)| (0+32768))
 19592     0EC0  0085               	movwf	5
 19593     0EC1  3F01               	moviw [1]fsr0
 19594     0EC2  008A               	movwf	10
 19595     0EC3  3F00               	moviw [0]fsr0
 19596     0EC4  000A               	callw
 19597     0EC5  318E               	pagesel	$
 19598                           
 19599                           ;mcc_generated_files/rn487x/rn487x.c: 68:     RN487X.DelayMs((200));
 19600     0EC6  30C8               	movlw	200
 19601     0EC7  00F4               	movwf	RN487X_Delay@delayCount
 19602     0EC8  3000               	movlw	0
 19603     0EC9  00F5               	movwf	RN487X_Delay@delayCount+1
 19604     0ECA  3076               	movlw	low ((_RN487X+14)| (0+32768))
 19605     0ECB  0084               	movwf	4
 19606     0ECC  3098               	movlw	high ((_RN487X+14)| (0+32768))
 19607     0ECD  0085               	movwf	5
 19608     0ECE  3F01               	moviw [1]fsr0
 19609     0ECF  008A               	movwf	10
 19610     0ED0  3F00               	moviw [0]fsr0
 19611     0ED1  000A               	callw
 19612     0ED2  318E               	pagesel	$
 19613                           
 19614                           ;mcc_generated_files/rn487x/rn487x.c: 71:     while (RN487X.DataReady())
 19615     0ED3  2EDD               	goto	l14481
 19616     0ED4                     l14479:
 19617                           
 19618                           ;mcc_generated_files/rn487x/rn487x.c: 72:     {;mcc_generated_files/rn487x/rn487x.c: 73:
      +                                   RN487X.Read();
 19619     0ED4  306A               	movlw	low ((_RN487X+2)| (0+32768))
 19620     0ED5  0084               	movwf	4
 19621     0ED6  3098               	movlw	high ((_RN487X+2)| (0+32768))
 19622     0ED7  0085               	movwf	5
 19623     0ED8  3F01               	moviw [1]fsr0
 19624     0ED9  008A               	movwf	10
 19625     0EDA  3F00               	moviw [0]fsr0
 19626     0EDB  000A               	callw
 19627     0EDC  318E               	pagesel	$
 19628     0EDD                     l14481:
 19629                           
 19630                           ;mcc_generated_files/rn487x/rn487x.c: 71:     while (RN487X.DataReady())
 19631     0EDD  306E               	movlw	low ((_RN487X+6)| (0+32768))
 19632     0EDE  0084               	movwf	4
 19633     0EDF  3098               	movlw	high ((_RN487X+6)| (0+32768))
 19634     0EE0  0085               	movwf	5
 19635     0EE1  3F01               	moviw [1]fsr0
 19636     0EE2  008A               	movwf	10
 19637     0EE3  3F00               	moviw [0]fsr0
 19638     0EE4  000A               	callw
 19639     0EE5  318E               	pagesel	$
 19640     0EE6  3A00               	xorlw	0
 19641     0EE7  1D03               	skipz
 19642     0EE8  2EEA               	goto	u11641
 19643     0EE9  2EEB               	goto	u11640
 19644     0EEA                     u11641:
 19645     0EEA  2ED4               	goto	l14479
 19646     0EEB                     u11640:
 19647     0EEB                     l879:
 19648     0EEB  0008               	return
 19649     0EEC                     __end_of_RN487X_Init:
 19650                           
 19651                           	psect	text56
 19652     1FB6                     __ptext56:	
 19653 ;; *************** function _RN487X_is_rx_ready *****************
 19654 ;; Defined at:
 19655 ;;		line 267 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19656 ;; Parameters:    Size  Location     Type
 19657 ;;		None
 19658 ;; Auto vars:     Size  Location     Type
 19659 ;;		None
 19660 ;; Return value:  Size  Location     Type
 19661 ;;                  1    wreg      _Bool 
 19662 ;; Registers used:
 19663 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 19664 ;; Tracked objects:
 19665 ;;		On entry : 0/0
 19666 ;;		On exit  : 0/0
 19667 ;;		Unchanged: 0/0
 19668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19673 ;;Total ram usage:        0 bytes
 19674 ;; Hardware stack levels used: 1
 19675 ;; Hardware stack levels required when called: 5
 19676 ;; This function calls:
 19677 ;;		_EUSART1_is_rx_ready
 19678 ;;		_EUSART2_is_rx_ready
 19679 ;; This function is called by:
 19680 ;;		_RN487X_DataReady
 19681 ;;		_RN487X_Init
 19682 ;; This function uses a non-reentrant model
 19683 ;;
 19684                           
 19685     1FB6                     _RN487X_is_rx_ready:	
 19686                           ;psect for function _RN487X_is_rx_ready
 19687                           
 19688     1FB6                     l13441:	
 19689                           ;incstack = 0
 19690                           ; Regs used in _RN487X_is_rx_ready: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 19691                           
 19692                           
 19693                           ;mcc_generated_files/rn487x/rn487x_interface.c: 269:     return uart[UART_BLE].DataReady
      +                          ();
 19694     1FB6  301A               	movlw	low ((_uart+26)| (0+32768))
 19695     1FB7  0084               	movwf	4
 19696     1FB8  3098               	movlw	high ((_uart+26)| (0+32768))
 19697     1FB9  0085               	movwf	5
 19698     1FBA  3F01               	moviw [1]fsr0
 19699     1FBB  008A               	movwf	10
 19700     1FBC  3F00               	moviw [0]fsr0
 19701     1FBD  000A               	callw
 19702     1FBE  319F               	pagesel	$
 19703     1FBF                     l795:
 19704     1FBF  0008               	return
 19705     1FC0                     __end_of_RN487X_is_rx_ready:
 19706                           
 19707                           	psect	text57
 19708     1F90                     __ptext57:	
 19709 ;; *************** function _EUSART1_is_rx_ready *****************
 19710 ;; Defined at:
 19711 ;;		line 137 in file "mcc_generated_files/eusart1.c"
 19712 ;; Parameters:    Size  Location     Type
 19713 ;;		None
 19714 ;; Auto vars:     Size  Location     Type
 19715 ;;		None
 19716 ;; Return value:  Size  Location     Type
 19717 ;;                  1    wreg      _Bool 
 19718 ;; Registers used:
 19719 ;;		wreg, status,2, status,0
 19720 ;; Tracked objects:
 19721 ;;		On entry : 0/0
 19722 ;;		On exit  : 0/0
 19723 ;;		Unchanged: 0/0
 19724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19729 ;;Total ram usage:        0 bytes
 19730 ;; Hardware stack levels used: 1
 19731 ;; Hardware stack levels required when called: 4
 19732 ;; This function calls:
 19733 ;;		Nothing
 19734 ;; This function is called by:
 19735 ;;		_RN487X_is_rx_ready
 19736 ;;		_RN487X_Example_TransparentUart
 19737 ;;		_main
 19738 ;; This function uses a non-reentrant model
 19739 ;;
 19740                           
 19741     1F90                     _EUSART1_is_rx_ready:	
 19742                           ;psect for function _EUSART1_is_rx_ready
 19743                           
 19744     1F90                     l13379:	
 19745                           ;incstack = 0
 19746                           ; Regs used in _EUSART1_is_rx_ready: [wreg+status,2+status,0]
 19747                           
 19748                           
 19749                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
 19750     1F90  0140               	movlb	0	; select bank0
 19751     1F91  0858               	movf	_eusart1RxCount,w	;volatile
 19752     1F92  1D03               	btfss	3,2
 19753     1F93  2F95               	goto	u10271
 19754     1F94  2F97               	goto	u10270
 19755     1F95                     u10271:
 19756     1F95  3001               	movlw	1
 19757     1F96  2F98               	goto	u10280
 19758     1F97                     u10270:
 19759     1F97  3000               	movlw	0
 19760     1F98                     u10280:
 19761     1F98                     l1201:
 19762     1F98  0008               	return
 19763     1F99                     __end_of_EUSART1_is_rx_ready:
 19764                           
 19765                           	psect	text58
 19766     1F87                     __ptext58:	
 19767 ;; *************** function _EUSART2_is_rx_ready *****************
 19768 ;; Defined at:
 19769 ;;		line 137 in file "mcc_generated_files/eusart2.c"
 19770 ;; Parameters:    Size  Location     Type
 19771 ;;		None
 19772 ;; Auto vars:     Size  Location     Type
 19773 ;;		None
 19774 ;; Return value:  Size  Location     Type
 19775 ;;                  1    wreg      _Bool 
 19776 ;; Registers used:
 19777 ;;		wreg, status,2, status,0
 19778 ;; Tracked objects:
 19779 ;;		On entry : 0/0
 19780 ;;		On exit  : 0/0
 19781 ;;		Unchanged: 0/0
 19782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19787 ;;Total ram usage:        0 bytes
 19788 ;; Hardware stack levels used: 1
 19789 ;; Hardware stack levels required when called: 4
 19790 ;; This function calls:
 19791 ;;		Nothing
 19792 ;; This function is called by:
 19793 ;;		_RN487X_is_rx_ready
 19794 ;;		_RN487X_Example_TransparentUart
 19795 ;;		_main
 19796 ;; This function uses a non-reentrant model
 19797 ;;
 19798                           
 19799     1F87                     _EUSART2_is_rx_ready:	
 19800                           ;psect for function _EUSART2_is_rx_ready
 19801                           
 19802     1F87                     l13375:	
 19803                           ;incstack = 0
 19804                           ; Regs used in _EUSART2_is_rx_ready: [wreg+status,2+status,0]
 19805                           
 19806                           
 19807                           ;mcc_generated_files/eusart2.c: 139:     return (eusart2RxCount ? 1 : 0);
 19808     1F87  0140               	movlb	0	; select bank0
 19809     1F88  085F               	movf	_eusart2RxCount,w	;volatile
 19810     1F89  1D03               	btfss	3,2
 19811     1F8A  2F8C               	goto	u10251
 19812     1F8B  2F8E               	goto	u10250
 19813     1F8C                     u10251:
 19814     1F8C  3001               	movlw	1
 19815     1F8D  2F8F               	goto	u10260
 19816     1F8E                     u10250:
 19817     1F8E  3000               	movlw	0
 19818     1F8F                     u10260:
 19819     1F8F                     l1057:
 19820     1F8F  0008               	return
 19821     1F90                     __end_of_EUSART2_is_rx_ready:
 19822                           
 19823                           	psect	text59
 19824     101F                     __ptext59:	
 19825 ;; *************** function _RN487X_SetSystemMode *****************
 19826 ;; Defined at:
 19827 ;;		line 301 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19828 ;; Parameters:    Size  Location     Type
 19829 ;;  mode            1    1[COMMON] enum E204
 19830 ;; Auto vars:     Size  Location     Type
 19831 ;;		None
 19832 ;; Return value:  Size  Location     Type
 19833 ;;                  1    wreg      void 
 19834 ;; Registers used:
 19835 ;;		wreg, status,2, status,0
 19836 ;; Tracked objects:
 19837 ;;		On entry : 0/0
 19838 ;;		On exit  : 0/0
 19839 ;;		Unchanged: 0/0
 19840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19841 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19844 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19845 ;;Total ram usage:        1 bytes
 19846 ;; Hardware stack levels used: 1
 19847 ;; Hardware stack levels required when called: 4
 19848 ;; This function calls:
 19849 ;;		Nothing
 19850 ;; This function is called by:
 19851 ;;		_RN487X_Init
 19852 ;; This function uses a non-reentrant model
 19853 ;;
 19854                           
 19855     101F                     _RN487X_SetSystemMode:	
 19856                           ;psect for function _RN487X_SetSystemMode
 19857                           
 19858     101F                     l819:	
 19859                           ;incstack = 0
 19860                           ; Regs used in _RN487X_SetSystemMode: [wreg+status,2+status,0]
 19861                           ;mcc_generated_files/rn487x/rn487x_interface.c: 301: static void RN487X_SetSystemMode(RN
      +                          487X_SYSTEM_MODES_t mode);mcc_generated_files/rn487x/rn487x_interface.c: 302: {;mcc_gene
      +                          rated_files/rn487x/rn487x_interface.c: 304:     do { TRISAbits.TRISA7 = 0; } while(0);
 19862                           
 19863     101F  0140               	movlb	0	; select bank0
 19864     1020  1392               	bcf	18,7	;volatile
 19865     1021                     l13651:
 19866                           
 19867                           ;mcc_generated_files/rn487x/rn487x_interface.c: 306:     if (APPLICATION_MODE == mode)
 19868     1021  0371               	decf	RN487X_SetSystemMode@mode,w
 19869     1022  1D03               	btfss	3,2
 19870     1023  2825               	goto	u10611
 19871     1024  2826               	goto	u10610
 19872     1025                     u10611:
 19873     1025  2828               	goto	l825
 19874     1026                     u10610:
 19875     1026                     l822:	
 19876                           ;mcc_generated_files/rn487x/rn487x_interface.c: 307:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 308:         do { LATAbits.LATA7 = 1; } while(0);
 19877                           
 19878     1026  1798               	bsf	24,7	;volatile
 19879     1027  2829               	goto	l827
 19880     1028                     l825:	
 19881                           ;mcc_generated_files/rn487x/rn487x_interface.c: 311:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 312:         do { LATAbits.LATA7 = 0; } while(0);
 19882                           
 19883     1028  1398               	bcf	24,7	;volatile
 19884     1029                     l827:	
 19885                           ;mcc_generated_files/rn487x/rn487x_interface.c: 316:     do { TRISAbits.TRISA7 = 1; } wh
      +                          ile(0);
 19886                           
 19887     1029  1792               	bsf	18,7	;volatile
 19888     102A                     l829:
 19889     102A  0008               	return
 19890     102B                     __end_of_RN487X_SetSystemMode:
 19891                           
 19892                           	psect	text60
 19893     1FF5                     __ptext60:	
 19894 ;; *************** function _RN487X_Reset *****************
 19895 ;; Defined at:
 19896 ;;		line 277 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19897 ;; Parameters:    Size  Location     Type
 19898 ;;  value           1    1[COMMON] _Bool 
 19899 ;; Auto vars:     Size  Location     Type
 19900 ;;		None
 19901 ;; Return value:  Size  Location     Type
 19902 ;;                  1    wreg      void 
 19903 ;; Registers used:
 19904 ;;		wreg, status,2, status,0
 19905 ;; Tracked objects:
 19906 ;;		On entry : 0/0
 19907 ;;		On exit  : 0/0
 19908 ;;		Unchanged: 0/0
 19909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19910 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19913 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19914 ;;Total ram usage:        1 bytes
 19915 ;; Hardware stack levels used: 1
 19916 ;; Hardware stack levels required when called: 4
 19917 ;; This function calls:
 19918 ;;		Nothing
 19919 ;; This function is called by:
 19920 ;;		_RN487X_Init
 19921 ;; This function uses a non-reentrant model
 19922 ;;
 19923                           
 19924     1FF5                     _RN487X_Reset:	
 19925                           ;psect for function _RN487X_Reset
 19926                           
 19927     1FF5                     l13647:	
 19928                           ;incstack = 0
 19929                           ; Regs used in _RN487X_Reset: [wreg+status,2+status,0]
 19930                           
 19931                           
 19932                           ;mcc_generated_files/rn487x/rn487x_interface.c: 277: static void RN487X_Reset(_Bool valu
      +                          e);mcc_generated_files/rn487x/rn487x_interface.c: 278: {;mcc_generated_files/rn487x/rn48
      +                          7x_interface.c: 279:     if (1 == value)
 19933     1FF5  0371               	decf	RN487X_Reset@value,w
 19934     1FF6  1D03               	btfss	3,2
 19935     1FF7  2FF9               	goto	u10591
 19936     1FF8  2FFA               	goto	u10590
 19937     1FF9                     u10591:
 19938     1FF9  2FFD               	goto	l805
 19939     1FFA                     u10590:
 19940     1FFA                     l802:	
 19941                           ;mcc_generated_files/rn487x/rn487x_interface.c: 280:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 281:         do { LATAbits.LATA0 = 0; } while(0);
 19942                           
 19943     1FFA  0140               	movlb	0	; select bank0
 19944     1FFB  1018               	bcf	24,0	;volatile
 19945     1FFC  2FFF               	goto	l807
 19946     1FFD                     l805:	
 19947                           ;mcc_generated_files/rn487x/rn487x_interface.c: 284:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 285:         do { LATAbits.LATA0 = 1; } while(0);
 19948                           
 19949     1FFD  0140               	movlb	0	; select bank0
 19950     1FFE  1418               	bsf	24,0	;volatile
 19951     1FFF                     l807:
 19952     1FFF  0008               	return
 19953     2000                     __end_of_RN487X_Reset:
 19954                           
 19955                           	psect	text61
 19956     1FEA                     __ptext61:	
 19957 ;; *************** function _RN487X_IndicateRx *****************
 19958 ;; Defined at:
 19959 ;;		line 289 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19960 ;; Parameters:    Size  Location     Type
 19961 ;;  value           1    1[COMMON] _Bool 
 19962 ;; Auto vars:     Size  Location     Type
 19963 ;;		None
 19964 ;; Return value:  Size  Location     Type
 19965 ;;                  1    wreg      void 
 19966 ;; Registers used:
 19967 ;;		wreg, status,2, status,0
 19968 ;; Tracked objects:
 19969 ;;		On entry : 0/0
 19970 ;;		On exit  : 0/0
 19971 ;;		Unchanged: 0/0
 19972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19973 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19976 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19977 ;;Total ram usage:        1 bytes
 19978 ;; Hardware stack levels used: 1
 19979 ;; Hardware stack levels required when called: 4
 19980 ;; This function calls:
 19981 ;;		Nothing
 19982 ;; This function is called by:
 19983 ;;		_RN487X_Init
 19984 ;; This function uses a non-reentrant model
 19985 ;;
 19986                           
 19987     1FEA                     _RN487X_IndicateRx:	
 19988                           ;psect for function _RN487X_IndicateRx
 19989                           
 19990     1FEA                     l13649:	
 19991                           ;incstack = 0
 19992                           ; Regs used in _RN487X_IndicateRx: [wreg+status,2+status,0]
 19993                           
 19994                           
 19995                           ;mcc_generated_files/rn487x/rn487x_interface.c: 289: static void RN487X_IndicateRx(_Bool
      +                           value);mcc_generated_files/rn487x/rn487x_interface.c: 290: {;mcc_generated_files/rn487x
      +                          /rn487x_interface.c: 291:     if (1 == value)
 19996     1FEA  0371               	decf	RN487X_IndicateRx@value,w
 19997     1FEB  1D03               	btfss	3,2
 19998     1FEC  2FEE               	goto	u10601
 19999     1FED  2FEF               	goto	u10600
 20000     1FEE                     u10601:
 20001     1FEE  2FF2               	goto	l814
 20002     1FEF                     u10600:
 20003     1FEF                     l811:	
 20004                           ;mcc_generated_files/rn487x/rn487x_interface.c: 292:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 293:         do { LATCbits.LATC6 = 0; } while(0);
 20005                           
 20006     1FEF  0140               	movlb	0	; select bank0
 20007     1FF0  131A               	bcf	26,6	;volatile
 20008     1FF1  2FF4               	goto	l816
 20009     1FF2                     l814:	
 20010                           ;mcc_generated_files/rn487x/rn487x_interface.c: 296:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 297:         do { LATCbits.LATC6 = 1; } while(0);
 20011                           
 20012     1FF2  0140               	movlb	0	; select bank0
 20013     1FF3  171A               	bsf	26,6	;volatile
 20014     1FF4                     l816:
 20015     1FF4  0008               	return
 20016     1FF5                     __end_of_RN487X_IndicateRx:
 20017                           
 20018                           	psect	text62
 20019     12AA                     __ptext62:	
 20020 ;; *************** function _LIGHTBLUE_TemperatureSensor *****************
 20021 ;; Defined at:
 20022 ;;		line 311 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20023 ;; Parameters:    Size  Location     Type
 20024 ;;		None
 20025 ;; Auto vars:     Size  Location     Type
 20026 ;;  payload         5   23[BANK0 ] unsigned char [5]
 20027 ;;  temperature     2   28[BANK0 ] short 
 20028 ;; Return value:  Size  Location     Type
 20029 ;;                  1    wreg      void 
 20030 ;; Registers used:
 20031 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20032 ;; Tracked objects:
 20033 ;;		On entry : 0/0
 20034 ;;		On exit  : 0/0
 20035 ;;		Unchanged: 0/0
 20036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20038 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20040 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20041 ;;Total ram usage:        7 bytes
 20042 ;; Hardware stack levels used: 1
 20043 ;; Hardware stack levels required when called: 15
 20044 ;; This function calls:
 20045 ;;		_LIGHTBLUE_SendPacket
 20046 ;;		_LIGHTBLUE_SplitWord
 20047 ;;		_TMAG5273_GetTemperatureValue
 20048 ;; This function is called by:
 20049 ;;		_main
 20050 ;; This function uses a non-reentrant model
 20051 ;;
 20052                           
 20053     12AA                     _LIGHTBLUE_TemperatureSensor:	
 20054                           ;psect for function _LIGHTBLUE_TemperatureSensor
 20055                           
 20056     12AA                     l14301:	
 20057                           ;incstack = 0
 20058                           ; Regs used in _LIGHTBLUE_TemperatureSensor: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 20059                           
 20060                           
 20061                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 312:     char payload[5];;mcc_gene
      +                          rated_files/application/LIGHTBLUE_service.c: 313:     int16_t temperature;;mcc_generated
      +                          _files/application/LIGHTBLUE_service.c: 315:     *payload = '\0';
 20062     12AA  0140               	movlb	0	; select bank0
 20063     12AB  01B7               	clrf	LIGHTBLUE_TemperatureSensor@payload
 20064     12AC                     l14303:
 20065                           
 20066                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 319:     TMAG5273_GetTemperatureVa
      +                          lue(temperature);
 20067     12AC  083D               	movf	LIGHTBLUE_TemperatureSensor@temperature+1,w
 20068     12AD  00B6               	movwf	TMAG5273_GetTemperatureValue@temperature+1
 20069     12AE  083C               	movf	LIGHTBLUE_TemperatureSensor@temperature,w
 20070     12AF  00B5               	movwf	TMAG5273_GetTemperatureValue@temperature
 20071     12B0  3190  2051  3192   	fcall	_TMAG5273_GetTemperatureValue
 20072     12B3                     l14305:
 20073                           
 20074                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 321:     LIGHTBLUE_SplitWord(paylo
      +                          ad, temperature);
 20075     12B3  0140               	movlb	0	; select bank0
 20076     12B4  083D               	movf	LIGHTBLUE_TemperatureSensor@temperature+1,w
 20077     12B5  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 20078     12B6  083C               	movf	LIGHTBLUE_TemperatureSensor@temperature,w
 20079     12B7  00F9               	movwf	LIGHTBLUE_SplitWord@value
 20080     12B8  3037               	movlw	(low (LIGHTBLUE_TemperatureSensor@payload| 0))& (0+255)
 20081     12B9  3190  207A  3192   	fcall	_LIGHTBLUE_SplitWord
 20082     12BC                     l14307:
 20083                           
 20084                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 323:     LIGHTBLUE_SendPacket(TEMP
      +                          ERATURE_DATA_ID, payload);
 20085     12BC  3037               	movlw	(low (LIGHTBLUE_TemperatureSensor@payload| 0))& (0+255)
 20086     12BD  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 20087     12BE  3054               	movlw	84
 20088     12BF  318F  2774  3192   	fcall	_LIGHTBLUE_SendPacket
 20089     12C2                     l124:
 20090     12C2  0008               	return
 20091     12C3                     __end_of_LIGHTBLUE_TemperatureSensor:
 20092                           
 20093                           	psect	text63
 20094     1051                     __ptext63:	
 20095 ;; *************** function _TMAG5273_GetTemperatureValue *****************
 20096 ;; Defined at:
 20097 ;;		line 2543 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 20098 ;; Parameters:    Size  Location     Type
 20099 ;;  temperature     2   21[BANK0 ] PTR short 
 20100 ;;		 -> RAM(8192), 
 20101 ;; Auto vars:     Size  Location     Type
 20102 ;;		None
 20103 ;; Return value:  Size  Location     Type
 20104 ;;                  1    wreg      void 
 20105 ;; Registers used:
 20106 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20107 ;; Tracked objects:
 20108 ;;		On entry : 0/0
 20109 ;;		On exit  : 0/0
 20110 ;;		Unchanged: 0/0
 20111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20112 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20115 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20116 ;;Total ram usage:        2 bytes
 20117 ;; Hardware stack levels used: 1
 20118 ;; Hardware stack levels required when called: 14
 20119 ;; This function calls:
 20120 ;;		_TMAG5273_CalcTemperature
 20121 ;; This function is called by:
 20122 ;;		_LIGHTBLUE_TemperatureSensor
 20123 ;; This function uses a non-reentrant model
 20124 ;;
 20125                           
 20126     1051                     _TMAG5273_GetTemperatureValue:	
 20127                           ;psect for function _TMAG5273_GetTemperatureValue
 20128                           
 20129     1051                     l13583:	
 20130                           ;incstack = 0
 20131                           ; Regs used in _TMAG5273_GetTemperatureValue: [wreg-fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 20132                           
 20133                           
 20134                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2544:     *temperature
      +                           = TMAG5273_CalcTemperature();
 20135     1051  3193  2363  3190   	fcall	_TMAG5273_CalcTemperature
 20136     1054  0140               	movlb	0	; select bank0
 20137     1055  0835               	movf	TMAG5273_GetTemperatureValue@temperature,w
 20138     1056  0086               	movwf	6
 20139     1057  0836               	movf	TMAG5273_GetTemperatureValue@temperature+1,w
 20140     1058  0087               	movwf	7
 20141     1059  082D               	movf	?_TMAG5273_CalcTemperature,w
 20142     105A  3FC0               	movwi [0]fsr1
 20143     105B  082E               	movf	?_TMAG5273_CalcTemperature+1,w
 20144     105C  3FC1               	movwi [1]fsr1
 20145     105D                     l2687:
 20146     105D  0008               	return
 20147     105E                     __end_of_TMAG5273_GetTemperatureValue:
 20148                           
 20149                           	psect	text64
 20150     1363                     __ptext64:	
 20151 ;; *************** function _TMAG5273_CalcTemperature *****************
 20152 ;; Defined at:
 20153 ;;		line 2547 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 20154 ;; Parameters:    Size  Location     Type
 20155 ;;		None
 20156 ;; Auto vars:     Size  Location     Type
 20157 ;;  temperatureD    2   19[BANK0 ] short 
 20158 ;;  lowerByte       1   18[BANK0 ] unsigned char 
 20159 ;;  upperByte       1    0        unsigned char 
 20160 ;; Return value:  Size  Location     Type
 20161 ;;                  2   13[BANK0 ] short 
 20162 ;; Registers used:
 20163 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20164 ;; Tracked objects:
 20165 ;;		On entry : 0/0
 20166 ;;		On exit  : 0/0
 20167 ;;		Unchanged: 0/0
 20168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20169 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20170 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20171 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20172 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20173 ;;Total ram usage:        8 bytes
 20174 ;; Hardware stack levels used: 1
 20175 ;; Hardware stack levels required when called: 13
 20176 ;; This function calls:
 20177 ;;		_i2c_read2ByteRegister
 20178 ;; This function is called by:
 20179 ;;		_TMAG5273_GetTemperatureValue
 20180 ;; This function uses a non-reentrant model
 20181 ;;
 20182                           
 20183     1363                     _TMAG5273_CalcTemperature:	
 20184                           ;psect for function _TMAG5273_CalcTemperature
 20185                           
 20186     1363                     l13549:	
 20187                           ;incstack = 0
 20188                           ; Regs used in _TMAG5273_CalcTemperature: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20189                           
 20190                           
 20191                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2548:     int16_t temp
      +                          eratureData;;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2549:     
      +                          uint8_t upperByte;;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2550
      +                          :     uint8_t lowerByte;;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c
      +                          : 2552:     temperatureData = i2c_read2ByteRegister(0X22, TMAG5273_REG_T_MSB_RESULT);
 20192     1363  3010               	movlw	16
 20193     1364  0140               	movlb	0	; select bank0
 20194     1365  00A4               	movwf	i2c_read2ByteRegister@reg
 20195     1366  3022               	movlw	34
 20196     1367  318A  223C  3193   	fcall	_i2c_read2ByteRegister
 20197     136A  0140               	movlb	0	; select bank0
 20198     136B  0825               	movf	?_i2c_read2ByteRegister+1,w
 20199     136C  00B4               	movwf	TMAG5273_CalcTemperature@temperatureData+1
 20200     136D  0824               	movf	?_i2c_read2ByteRegister,w
 20201     136E  00B3               	movwf	TMAG5273_CalcTemperature@temperatureData
 20202     136F                     l13551:
 20203     136F                     l13553:
 20204                           
 20205                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2554:     lowerByte = 
      +                          (uint8_t) temperatureData;
 20206     136F  0833               	movf	TMAG5273_CalcTemperature@temperatureData,w
 20207     1370  00B2               	movwf	TMAG5273_CalcTemperature@lowerByte
 20208     1371                     l13555:
 20209                           
 20210                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2556:     temperatureD
      +                          ata = ((int16_t) (lowerByte << 8) | upperByte);
 20211     1371  0832               	movf	TMAG5273_CalcTemperature@lowerByte,w
 20212     1372  00AF               	movwf	??_TMAG5273_CalcTemperature
 20213     1373  01B0               	clrf	??_TMAG5273_CalcTemperature+1
 20214     1374  082F               	movf	??_TMAG5273_CalcTemperature,w
 20215     1375  00B0               	movwf	??_TMAG5273_CalcTemperature+1
 20216     1376  01AF               	clrf	??_TMAG5273_CalcTemperature
 20217     1377  082F               	movf	??_TMAG5273_CalcTemperature,w
 20218     1378  00B3               	movwf	TMAG5273_CalcTemperature@temperatureData
 20219     1379  0830               	movf	??_TMAG5273_CalcTemperature+1,w
 20220     137A  00B4               	movwf	TMAG5273_CalcTemperature@temperatureData+1
 20221     137B                     l13557:
 20222                           
 20223                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2558:     return tempe
      +                          ratureData;
 20224     137B  0834               	movf	TMAG5273_CalcTemperature@temperatureData+1,w
 20225     137C  00AE               	movwf	?_TMAG5273_CalcTemperature+1
 20226     137D  0833               	movf	TMAG5273_CalcTemperature@temperatureData,w
 20227     137E  00AD               	movwf	?_TMAG5273_CalcTemperature
 20228     137F                     l2690:
 20229     137F  0008               	return
 20230     1380                     __end_of_TMAG5273_CalcTemperature:
 20231                           
 20232                           	psect	text65
 20233     0A3C                     __ptext65:	
 20234 ;; *************** function _i2c_read2ByteRegister *****************
 20235 ;; Defined at:
 20236 ;;		line 135 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 20237 ;; Parameters:    Size  Location     Type
 20238 ;;  address         1    wreg     unsigned char 
 20239 ;;  reg             1    4[BANK0 ] unsigned char 
 20240 ;; Auto vars:     Size  Location     Type
 20241 ;;  address         1   10[BANK0 ] unsigned char 
 20242 ;;  result          2   11[BANK0 ] unsigned short 
 20243 ;; Return value:  Size  Location     Type
 20244 ;;                  2    4[BANK0 ] unsigned short 
 20245 ;; Registers used:
 20246 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20247 ;; Tracked objects:
 20248 ;;		On entry : 0/0
 20249 ;;		On exit  : 0/0
 20250 ;;		Unchanged: 0/0
 20251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20252 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20253 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20254 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20255 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20256 ;;Total ram usage:        9 bytes
 20257 ;; Hardware stack levels used: 1
 20258 ;; Hardware stack levels required when called: 12
 20259 ;; This function calls:
 20260 ;;		_I2C1_Close
 20261 ;;		_I2C1_MasterWrite
 20262 ;;		_I2C1_Open
 20263 ;;		_I2C1_SetAddressNackCallback
 20264 ;;		_I2C1_SetBuffer
 20265 ;;		_I2C1_SetDataCompleteCallback
 20266 ;; This function is called by:
 20267 ;;		_TMAG5273_GetManufacture
 20268 ;;		_TMAG5273_CalcTemperature
 20269 ;;		_MCP9844_GetManufacture
 20270 ;;		_MCP9844_GetDevice
 20271 ;;		_MCP9844_CalcTemperature
 20272 ;;		_TMAG5273_GetDevice
 20273 ;; This function uses a non-reentrant model
 20274 ;;
 20275                           
 20276     0A3C                     _i2c_read2ByteRegister:	
 20277                           ;psect for function _i2c_read2ByteRegister
 20278                           
 20279                           
 20280                           ;incstack = 0
 20281                           ; Regs used in _i2c_read2ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20282                           ;i2c_read2ByteRegister@address stored from wreg
 20283     0A3C  0140               	movlb	0	; select bank0
 20284     0A3D  00AA               	movwf	i2c_read2ByteRegister@address
 20285     0A3E                     l13333:
 20286     0A3E                     l13335:	
 20287                           ;mcc_generated_files/drivers/i2c_simple_master.c: 135: uint16_t i2c_read2ByteRegister(i2
      +                          c1_address_t address, uint8_t reg);mcc_generated_files/drivers/i2c_simple_master.c: 136:
      +                           {;mcc_generated_files/drivers/i2c_simple_master.c: 138:     uint16_t result;;mcc_genera
      +                          ted_files/drivers/i2c_simple_master.c: 140:     while(!I2C1_Open(address));
 20288                           
 20289     0A3E  0140               	movlb	0	; select bank0
 20290     0A3F  082A               	movf	i2c_read2ByteRegister@address,w
 20291     0A40  3197  27CA  318A   	fcall	_I2C1_Open
 20292     0A43  3A00               	xorlw	0
 20293     0A44  1903               	skipnz
 20294     0A45  2A47               	goto	u10211
 20295     0A46  2A48               	goto	u10210
 20296     0A47                     u10211:
 20297     0A47  2A3E               	goto	l13335
 20298     0A48                     u10210:
 20299     0A48                     l13337:
 20300                           
 20301                           ;mcc_generated_files/drivers/i2c_simple_master.c: 141:     I2C1_SetDataCompleteCallback(
      +                          rd2RegCompleteHandler,&result);
 20302     0A48  30E9               	movlw	low _rd2RegCompleteHandler
 20303     0A49  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 20304     0A4A  3010               	movlw	high _rd2RegCompleteHandler
 20305     0A4B  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 20306     0A4C  302B               	movlw	(low (i2c_read2ByteRegister@result| 0))& (0+255)
 20307     0A4D  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 20308     0A4E  319F  27D4  318A   	fcall	_I2C1_SetDataCompleteCallback
 20309     0A51                     l13339:
 20310                           
 20311                           ;mcc_generated_files/drivers/i2c_simple_master.c: 142:     I2C1_SetBuffer(&reg,1);
 20312     0A51  3001               	movlw	1
 20313     0A52  00F1               	movwf	I2C1_SetBuffer@bufferSize
 20314     0A53  3000               	movlw	0
 20315     0A54  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 20316     0A55  3024               	movlw	(low (i2c_read2ByteRegister@reg| 0))& (0+255)
 20317     0A56  3190  205E  318A   	fcall	_I2C1_SetBuffer
 20318     0A59                     l13341:
 20319                           
 20320                           ;mcc_generated_files/drivers/i2c_simple_master.c: 143:     I2C1_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
 20321     0A59  3000               	movlw	0
 20322     0A5A  00F5               	movwf	I2C1_SetAddressNackCallback@cb
 20323     0A5B  00F6               	movwf	I2C1_SetAddressNackCallback@cb+1
 20324     0A5C  3000               	movlw	0
 20325     0A5D  00F7               	movwf	I2C1_SetAddressNackCallback@ptr
 20326     0A5E  00F8               	movwf	I2C1_SetAddressNackCallback@ptr+1
 20327     0A5F  319F  27DF  318A   	fcall	_I2C1_SetAddressNackCallback
 20328     0A62                     l13343:
 20329                           
 20330                           ;mcc_generated_files/drivers/i2c_simple_master.c: 144:     I2C1_MasterWrite();
 20331     0A62  319E  26DE  318A   	fcall	_I2C1_MasterWrite
 20332     0A65                     l13345:	
 20333                           ;mcc_generated_files/drivers/i2c_simple_master.c: 145:     while(I2C1_BUSY == I2C1_Close
      +                          ());
 20334                           
 20335     0A65  3192  2231  318A   	fcall	_I2C1_Close
 20336     0A68  3A01               	xorlw	1
 20337     0A69  1903               	skipnz
 20338     0A6A  2A6C               	goto	u10221
 20339     0A6B  2A6D               	goto	u10220
 20340     0A6C                     u10221:
 20341     0A6C  2A65               	goto	l13345
 20342     0A6D                     u10220:
 20343     0A6D                     l13347:
 20344                           
 20345                           ;mcc_generated_files/drivers/i2c_simple_master.c: 147:     return (result << 8 | result 
      +                          >> 8);
 20346     0A6D  0140               	movlb	0	; select bank0
 20347     0A6E  082C               	movf	i2c_read2ByteRegister@result+1,w
 20348     0A6F  00A7               	movwf	??_i2c_read2ByteRegister+1
 20349     0A70  082B               	movf	i2c_read2ByteRegister@result,w
 20350     0A71  00A6               	movwf	??_i2c_read2ByteRegister
 20351     0A72  0827               	movf	??_i2c_read2ByteRegister+1,w
 20352     0A73  00A6               	movwf	??_i2c_read2ByteRegister
 20353     0A74  01A7               	clrf	??_i2c_read2ByteRegister+1
 20354     0A75  082B               	movf	i2c_read2ByteRegister@result,w
 20355     0A76  00A9               	movwf	??_i2c_read2ByteRegister+3
 20356     0A77  01A8               	clrf	??_i2c_read2ByteRegister+2
 20357     0A78  0826               	movf	??_i2c_read2ByteRegister,w
 20358     0A79  0428               	iorwf	??_i2c_read2ByteRegister+2,w
 20359     0A7A  00A4               	movwf	?_i2c_read2ByteRegister
 20360     0A7B  0827               	movf	??_i2c_read2ByteRegister+1,w
 20361     0A7C  0429               	iorwf	??_i2c_read2ByteRegister+3,w
 20362     0A7D  00A5               	movwf	?_i2c_read2ByteRegister+1
 20363     0A7E                     l546:
 20364     0A7E  0008               	return
 20365     0A7F                     __end_of_i2c_read2ByteRegister:
 20366                           
 20367                           	psect	text66
 20368     065C                     __ptext66:	
 20369 ;; *************** function _LIGHTBLUE_SendSerialData *****************
 20370 ;; Defined at:
 20371 ;;		line 385 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20372 ;; Parameters:    Size  Location     Type
 20373 ;;  serialData      1    wreg     PTR unsigned char 
 20374 ;;		 -> lightBlueSerial(80), 
 20375 ;; Auto vars:     Size  Location     Type
 20376 ;;  serialData      1    9[COMMON] PTR unsigned char 
 20377 ;;		 -> lightBlueSerial(80), 
 20378 ;;  length          1    8[COMMON] unsigned char 
 20379 ;; Return value:  Size  Location     Type
 20380 ;;                  1    wreg      void 
 20381 ;; Registers used:
 20382 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20383 ;; Tracked objects:
 20384 ;;		On entry : 0/0
 20385 ;;		On exit  : 0/0
 20386 ;;		Unchanged: 0/0
 20387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20389 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20390 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20391 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20392 ;;Total ram usage:        3 bytes
 20393 ;; Hardware stack levels used: 1
 20394 ;; Hardware stack levels required when called: 6
 20395 ;; This function calls:
 20396 ;;		_RN487X_Write
 20397 ;;		_strlen
 20398 ;; This function is called by:
 20399 ;;		_main
 20400 ;; This function uses a non-reentrant model
 20401 ;;
 20402                           
 20403     065C                     _LIGHTBLUE_SendSerialData:	
 20404                           ;psect for function _LIGHTBLUE_SendSerialData
 20405                           
 20406                           
 20407                           ;incstack = 0
 20408                           ; Regs used in _LIGHTBLUE_SendSerialData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20409                           ;LIGHTBLUE_SendSerialData@serialData stored from wreg
 20410     065C  00F9               	movwf	LIGHTBLUE_SendSerialData@serialData
 20411     065D                     l14355:
 20412                           
 20413                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 386:     uint8_t length = strlen(s
      +                          erialData) * 2;
 20414     065D  0879               	movf	LIGHTBLUE_SendSerialData@serialData,w
 20415     065E  00F1               	movwf	strlen@s
 20416     065F  3002               	movlw	2
 20417     0660  00F2               	movwf	strlen@s+1
 20418     0661  3192  2291  3186   	fcall	_strlen
 20419     0664  0871               	movf	?_strlen,w
 20420     0665  0709               	addwf	9,w
 20421     0666  00F8               	movwf	LIGHTBLUE_SendSerialData@length
 20422     0667                     l14357:
 20423                           
 20424                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 388:     RN487X.Write(('['));
 20425     0667  305B               	movlw	91
 20426     0668  00F6               	movwf	RN487X_Write@txData
 20427     0669  3068               	movlw	low (_RN487X| (0+32768))
 20428     066A  0084               	movwf	4
 20429     066B  3098               	movlw	high (_RN487X| (0+32768))
 20430     066C  0085               	movwf	5
 20431     066D  3F01               	moviw [1]fsr0
 20432     066E  008A               	movwf	10
 20433     066F  3F00               	moviw [0]fsr0
 20434     0670  000A               	callw
 20435     0671  3186               	pagesel	$
 20436     0672                     l14359:
 20437                           
 20438                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 389:     RN487X.Write((_hex[(seque
      +                          nceNumber++) & 0xF]));
 20439     0672  0140               	movlb	0	; select bank0
 20440     0673  086C               	movf	_sequenceNumber,w
 20441     0674  390F               	andlw	15
 20442     0675  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 20443     0676  0086               	movwf	6
 20444     0677  3001               	movlw	1	; select bank2/3
 20445     0678  0087               	movwf	7
 20446     0679  0801               	movf	1,w
 20447     067A  00F6               	movwf	RN487X_Write@txData
 20448     067B  3068               	movlw	low (_RN487X| (0+32768))
 20449     067C  0084               	movwf	4
 20450     067D  3098               	movlw	high (_RN487X| (0+32768))
 20451     067E  0085               	movwf	5
 20452     067F  3F01               	moviw [1]fsr0
 20453     0680  008A               	movwf	10
 20454     0681  3F00               	moviw [0]fsr0
 20455     0682  000A               	callw
 20456     0683  3186               	pagesel	$
 20457     0684                     l14361:
 20458     0684  3001               	movlw	1
 20459     0685  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 20460     0686  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 20461     0687  0140               	movlb	0	; select bank0
 20462     0688  07EC               	addwf	_sequenceNumber,f
 20463     0689                     l14363:
 20464                           
 20465                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 390:     RN487X.Write(SERIAL_DATA_
      +                          ID);
 20466     0689  3053               	movlw	83
 20467     068A  00F6               	movwf	RN487X_Write@txData
 20468     068B  3068               	movlw	low (_RN487X| (0+32768))
 20469     068C  0084               	movwf	4
 20470     068D  3098               	movlw	high (_RN487X| (0+32768))
 20471     068E  0085               	movwf	5
 20472     068F  3F01               	moviw [1]fsr0
 20473     0690  008A               	movwf	10
 20474     0691  3F00               	moviw [0]fsr0
 20475     0692  000A               	callw
 20476     0693  3186               	pagesel	$
 20477     0694                     l14365:
 20478                           
 20479                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 391:     RN487X.Write((_hex[(lengt
      +                          h >> 4) & 0xF]));
 20480     0694  0878               	movf	LIGHTBLUE_SendSerialData@length,w
 20481     0695  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 20482     0696  3004               	movlw	4
 20483     0697                     u11505:
 20484     0697  36F7               	lsrf	??_LIGHTBLUE_SendSerialData,f
 20485     0698  0B89               	decfsz	9,f
 20486     0699  2E97               	goto	u11505
 20487     069A  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 20488     069B  390F               	andlw	15
 20489     069C  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 20490     069D  0086               	movwf	6
 20491     069E  3001               	movlw	1	; select bank2/3
 20492     069F  0087               	movwf	7
 20493     06A0  0801               	movf	1,w
 20494     06A1  00F6               	movwf	RN487X_Write@txData
 20495     06A2  3068               	movlw	low (_RN487X| (0+32768))
 20496     06A3  0084               	movwf	4
 20497     06A4  3098               	movlw	high (_RN487X| (0+32768))
 20498     06A5  0085               	movwf	5
 20499     06A6  3F01               	moviw [1]fsr0
 20500     06A7  008A               	movwf	10
 20501     06A8  3F00               	moviw [0]fsr0
 20502     06A9  000A               	callw
 20503     06AA  3186               	pagesel	$
 20504     06AB                     l14367:
 20505                           
 20506                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 392:     RN487X.Write((_hex[(lengt
      +                          h) & 0xF]));
 20507     06AB  0878               	movf	LIGHTBLUE_SendSerialData@length,w
 20508     06AC  390F               	andlw	15
 20509     06AD  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 20510     06AE  0086               	movwf	6
 20511     06AF  3001               	movlw	1	; select bank2/3
 20512     06B0  0087               	movwf	7
 20513     06B1  0801               	movf	1,w
 20514     06B2  00F6               	movwf	RN487X_Write@txData
 20515     06B3  3068               	movlw	low (_RN487X| (0+32768))
 20516     06B4  0084               	movwf	4
 20517     06B5  3098               	movlw	high (_RN487X| (0+32768))
 20518     06B6  0085               	movwf	5
 20519     06B7  3F01               	moviw [1]fsr0
 20520     06B8  008A               	movwf	10
 20521     06B9  3F00               	moviw [0]fsr0
 20522     06BA  000A               	callw
 20523     06BB  3186               	pagesel	$
 20524                           
 20525                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 393:     while (*serialData) {
 20526     06BC  2EF1               	goto	l14373
 20527     06BD                     l14369:
 20528                           
 20529                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 394:         RN487X.Write((_hex[(*
      +                          serialData >> 4) & 0xF]));
 20530     06BD  0879               	movf	LIGHTBLUE_SendSerialData@serialData,w
 20531     06BE  0086               	movwf	6
 20532     06BF  3002               	movlw	2	; select bank4/5
 20533     06C0  0087               	movwf	7
 20534     06C1  0801               	movf	1,w
 20535     06C2  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 20536     06C3  3004               	movlw	4
 20537     06C4                     u11515:
 20538     06C4  36F7               	lsrf	??_LIGHTBLUE_SendSerialData,f
 20539     06C5  0B89               	decfsz	9,f
 20540     06C6  2EC4               	goto	u11515
 20541     06C7  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 20542     06C8  390F               	andlw	15
 20543     06C9  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 20544     06CA  0086               	movwf	6
 20545     06CB  3001               	movlw	1	; select bank2/3
 20546     06CC  0087               	movwf	7
 20547     06CD  0801               	movf	1,w
 20548     06CE  00F6               	movwf	RN487X_Write@txData
 20549     06CF  3068               	movlw	low (_RN487X| (0+32768))
 20550     06D0  0084               	movwf	4
 20551     06D1  3098               	movlw	high (_RN487X| (0+32768))
 20552     06D2  0085               	movwf	5
 20553     06D3  3F01               	moviw [1]fsr0
 20554     06D4  008A               	movwf	10
 20555     06D5  3F00               	moviw [0]fsr0
 20556     06D6  000A               	callw
 20557     06D7  3186               	pagesel	$
 20558                           
 20559                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 395:         RN487X.Write((_hex[(*
      +                          serialData++) & 0xF]));
 20560     06D8  0879               	movf	LIGHTBLUE_SendSerialData@serialData,w
 20561     06D9  0086               	movwf	6
 20562     06DA  3002               	movlw	2	; select bank4/5
 20563     06DB  0087               	movwf	7
 20564     06DC  0801               	movf	1,w
 20565     06DD  390F               	andlw	15
 20566     06DE  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 20567     06DF  0086               	movwf	6
 20568     06E0  3001               	movlw	1	; select bank2/3
 20569     06E1  0087               	movwf	7
 20570     06E2  0801               	movf	1,w
 20571     06E3  00F6               	movwf	RN487X_Write@txData
 20572     06E4  3068               	movlw	low (_RN487X| (0+32768))
 20573     06E5  0084               	movwf	4
 20574     06E6  3098               	movlw	high (_RN487X| (0+32768))
 20575     06E7  0085               	movwf	5
 20576     06E8  3F01               	moviw [1]fsr0
 20577     06E9  008A               	movwf	10
 20578     06EA  3F00               	moviw [0]fsr0
 20579     06EB  000A               	callw
 20580     06EC  3186               	pagesel	$
 20581     06ED                     l14371:
 20582     06ED  3001               	movlw	1
 20583     06EE  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 20584     06EF  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 20585     06F0  07F9               	addwf	LIGHTBLUE_SendSerialData@serialData,f
 20586     06F1                     l14373:
 20587                           
 20588                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 393:     while (*serialData) {
 20589     06F1  0879               	movf	LIGHTBLUE_SendSerialData@serialData,w
 20590     06F2  0086               	movwf	6
 20591     06F3  3002               	movlw	2	; select bank4/5
 20592     06F4  0087               	movwf	7
 20593     06F5  0801               	movf	1,w
 20594     06F6  1D03               	btfss	3,2
 20595     06F7  2EF9               	goto	u11521
 20596     06F8  2EFA               	goto	u11520
 20597     06F9                     u11521:
 20598     06F9  2EBD               	goto	l14369
 20599     06FA                     u11520:
 20600     06FA                     l14375:
 20601                           
 20602                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 397:     RN487X.Write((']'));
 20603     06FA  305D               	movlw	93
 20604     06FB  00F6               	movwf	RN487X_Write@txData
 20605     06FC  3068               	movlw	low (_RN487X| (0+32768))
 20606     06FD  0084               	movwf	4
 20607     06FE  3098               	movlw	high (_RN487X| (0+32768))
 20608     06FF  0085               	movwf	5
 20609     0700  3F01               	moviw [1]fsr0
 20610     0701  008A               	movwf	10
 20611     0702  3F00               	moviw [0]fsr0
 20612     0703  000A               	callw
 20613     0704  3186               	pagesel	$
 20614     0705                     l145:
 20615     0705  0008               	return
 20616     0706                     __end_of_LIGHTBLUE_SendSerialData:
 20617                           
 20618                           	psect	text67
 20619     1761                     __ptext67:	
 20620 ;; *************** function _LIGHTBLUE_SendProtocolVersion *****************
 20621 ;; Defined at:
 20622 ;;		line 370 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20623 ;; Parameters:    Size  Location     Type
 20624 ;;		None
 20625 ;; Auto vars:     Size  Location     Type
 20626 ;;  payload        19    2[BANK0 ] unsigned char [19]
 20627 ;;  dataIndex       1   22[BANK0 ] unsigned char 
 20628 ;;  value           1   21[BANK0 ] unsigned char 
 20629 ;; Return value:  Size  Location     Type
 20630 ;;                  1    wreg      void 
 20631 ;; Registers used:
 20632 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20633 ;; Tracked objects:
 20634 ;;		On entry : 0/0
 20635 ;;		On exit  : 0/0
 20636 ;;		Unchanged: 0/0
 20637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20639 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20640 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20641 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20642 ;;Total ram usage:       23 bytes
 20643 ;; Hardware stack levels used: 1
 20644 ;; Hardware stack levels required when called: 7
 20645 ;; This function calls:
 20646 ;;		_LIGHTBLUE_SendPacket
 20647 ;;		_LIGHTBLUE_SplitByte
 20648 ;;		_strlen
 20649 ;; This function is called by:
 20650 ;;		_main
 20651 ;; This function uses a non-reentrant model
 20652 ;;
 20653                           
 20654     1761                     _LIGHTBLUE_SendProtocolVersion:	
 20655                           ;psect for function _LIGHTBLUE_SendProtocolVersion
 20656                           
 20657     1761                     l14343:	
 20658                           ;incstack = 0
 20659                           ; Regs used in _LIGHTBLUE_SendProtocolVersion: [wreg-fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 20660                           
 20661                           
 20662                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 371:     char payload[19];;mcc_gen
      +                          erated_files/application/LIGHTBLUE_service.c: 372:     uint8_t value;;mcc_generated_file
      +                          s/application/LIGHTBLUE_service.c: 373:     uint8_t dataIndex;;mcc_generated_files/appli
      +                          cation/LIGHTBLUE_service.c: 375:     *payload = '\0';
 20663     1761  0140               	movlb	0	; select bank0
 20664     1762  01A2               	clrf	LIGHTBLUE_SendProtocolVersion@payload
 20665                           
 20666                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 377:     for (dataIndex = 0; dataI
      +                          ndex < strlen(protocol_version_number); dataIndex++) {
 20667     1763  01B6               	clrf	LIGHTBLUE_SendProtocolVersion@dataIndex
 20668     1764  2F79               	goto	l14351
 20669     1765                     l14345:
 20670                           
 20671                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 378:         value = protocol_vers
      +                          ion_number[dataIndex];
 20672     1765  0836               	movf	LIGHTBLUE_SendProtocolVersion@dataIndex,w
 20673     1766  3E00               	addlw	low (STR_1| (0+32768))
 20674     1767  0084               	movwf	4
 20675     1768  30A0               	movlw	high (STR_1| (0+32768))
 20676     1769  1803               	skipnc
 20677     176A  3E01               	addlw	1
 20678     176B  0085               	movwf	5
 20679     176C  0800               	movf	0,w	;code access
 20680     176D  00B5               	movwf	LIGHTBLUE_SendProtocolVersion@value
 20681     176E                     l14347:
 20682                           
 20683                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 379:         LIGHTBLUE_SplitByte(p
      +                          ayload, value);
 20684     176E  0835               	movf	LIGHTBLUE_SendProtocolVersion@value,w
 20685     176F  00F6               	movwf	LIGHTBLUE_SplitByte@value
 20686     1770  3022               	movlw	(low (LIGHTBLUE_SendProtocolVersion@payload| 0))& (0+255)
 20687     1771  3197  2730  3197   	fcall	_LIGHTBLUE_SplitByte
 20688     1774                     l14349:
 20689                           
 20690                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 380:     }
 20691     1774  3001               	movlw	1
 20692     1775  0140               	movlb	0	; select bank0
 20693     1776  00A0               	movwf	??_LIGHTBLUE_SendProtocolVersion
 20694     1777  0820               	movf	??_LIGHTBLUE_SendProtocolVersion,w
 20695     1778  07B6               	addwf	LIGHTBLUE_SendProtocolVersion@dataIndex,f
 20696     1779                     l14351:
 20697     1779  3000               	movlw	low (STR_1| (0+32768))
 20698     177A  00F1               	movwf	strlen@s
 20699     177B  30A0               	movlw	high (STR_1| (0+32768))
 20700     177C  00F2               	movwf	strlen@s+1
 20701     177D  3192  2291  3197   	fcall	_strlen
 20702     1780  0140               	movlb	0	; select bank0
 20703     1781  0836               	movf	LIGHTBLUE_SendProtocolVersion@dataIndex,w
 20704     1782  00A0               	movwf	??_LIGHTBLUE_SendProtocolVersion
 20705     1783  01A1               	clrf	??_LIGHTBLUE_SendProtocolVersion+1
 20706     1784  0872               	movf	?_strlen+1,w
 20707     1785  0221               	subwf	??_LIGHTBLUE_SendProtocolVersion+1,w
 20708     1786  1D03               	skipz
 20709     1787  2F8A               	goto	u11495
 20710     1788  0871               	movf	?_strlen,w
 20711     1789  0220               	subwf	??_LIGHTBLUE_SendProtocolVersion,w
 20712     178A                     u11495:
 20713     178A  1C03               	skipc
 20714     178B  2F8D               	goto	u11491
 20715     178C  2F8E               	goto	u11490
 20716     178D                     u11491:
 20717     178D  2F65               	goto	l14345
 20718     178E                     u11490:
 20719     178E                     l14353:
 20720                           
 20721                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 382:     LIGHTBLUE_SendPacket(PROT
      +                          OCOL_VERSION_ID, payload);
 20722     178E  3022               	movlw	(low (LIGHTBLUE_SendProtocolVersion@payload| 0))& (0+255)
 20723     178F  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 20724     1790  3056               	movlw	86
 20725     1791  318F  2774  3197   	fcall	_LIGHTBLUE_SendPacket
 20726     1794                     l139:
 20727     1794  0008               	return
 20728     1795                     __end_of_LIGHTBLUE_SendProtocolVersion:
 20729                           
 20730                           	psect	text68
 20731     1171                     __ptext68:	
 20732 ;; *************** function _LIGHTBLUE_PushButton *****************
 20733 ;; Defined at:
 20734 ;;		line 342 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20735 ;; Parameters:    Size  Location     Type
 20736 ;;		None
 20737 ;; Auto vars:     Size  Location     Type
 20738 ;;  payload         3    1[BANK0 ] unsigned char [3]
 20739 ;;  button          1    0[BANK0 ] unsigned char 
 20740 ;; Return value:  Size  Location     Type
 20741 ;;                  1    wreg      void 
 20742 ;; Registers used:
 20743 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20744 ;; Tracked objects:
 20745 ;;		On entry : 0/0
 20746 ;;		On exit  : 0/0
 20747 ;;		Unchanged: 0/0
 20748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20750 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20752 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20753 ;;Total ram usage:        4 bytes
 20754 ;; Hardware stack levels used: 1
 20755 ;; Hardware stack levels required when called: 7
 20756 ;; This function calls:
 20757 ;;		_LIGHTBLUE_GetButtonValue
 20758 ;;		_LIGHTBLUE_SendPacket
 20759 ;;		_LIGHTBLUE_SplitByte
 20760 ;; This function is called by:
 20761 ;;		_main
 20762 ;; This function uses a non-reentrant model
 20763 ;;
 20764                           
 20765     1171                     _LIGHTBLUE_PushButton:	
 20766                           ;psect for function _LIGHTBLUE_PushButton
 20767                           
 20768     1171                     l14321:	
 20769                           ;incstack = 0
 20770                           ; Regs used in _LIGHTBLUE_PushButton: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20771                           
 20772                           
 20773                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 343:     char payload[3];;mcc_gene
      +                          rated_files/application/LIGHTBLUE_service.c: 344:     uint8_t button = LIGHTBLUE_GetButt
      +                          onValue();
 20774     1171  319F  270A  3191   	fcall	_LIGHTBLUE_GetButtonValue
 20775     1174  0140               	movlb	0	; select bank0
 20776     1175  00A0               	movwf	LIGHTBLUE_PushButton@button
 20777     1176                     l14323:
 20778                           
 20779                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 346:     *payload = '\0';
 20780     1176  01A1               	clrf	LIGHTBLUE_PushButton@payload
 20781     1177                     l14325:
 20782                           
 20783                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 347:     LIGHTBLUE_SplitByte(paylo
      +                          ad, button);
 20784     1177  0820               	movf	LIGHTBLUE_PushButton@button,w
 20785     1178  00F6               	movwf	LIGHTBLUE_SplitByte@value
 20786     1179  3021               	movlw	(low (LIGHTBLUE_PushButton@payload| 0))& (0+255)
 20787     117A  3197  2730  3191   	fcall	_LIGHTBLUE_SplitByte
 20788     117D                     l14327:
 20789                           
 20790                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 349:     LIGHTBLUE_SendPacket(BUTT
      +                          ON_STATE_ID, payload);
 20791     117D  3021               	movlw	(low (LIGHTBLUE_PushButton@payload| 0))& (0+255)
 20792     117E  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 20793     117F  3050               	movlw	80
 20794     1180  318F  2774  3191   	fcall	_LIGHTBLUE_SendPacket
 20795     1183                     l130:
 20796     1183  0008               	return
 20797     1184                     __end_of_LIGHTBLUE_PushButton:
 20798                           
 20799                           	psect	text69
 20800     1F0A                     __ptext69:	
 20801 ;; *************** function _LIGHTBLUE_GetButtonValue *****************
 20802 ;; Defined at:
 20803 ;;		line 475 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20804 ;; Parameters:    Size  Location     Type
 20805 ;;		None
 20806 ;; Auto vars:     Size  Location     Type
 20807 ;;		None
 20808 ;; Return value:  Size  Location     Type
 20809 ;;                  1    wreg      unsigned char 
 20810 ;; Registers used:
 20811 ;;		wreg, status,2, status,0
 20812 ;; Tracked objects:
 20813 ;;		On entry : 0/0
 20814 ;;		On exit  : 0/0
 20815 ;;		Unchanged: 0/0
 20816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20821 ;;Total ram usage:        0 bytes
 20822 ;; Hardware stack levels used: 1
 20823 ;; Hardware stack levels required when called: 4
 20824 ;; This function calls:
 20825 ;;		Nothing
 20826 ;; This function is called by:
 20827 ;;		_LIGHTBLUE_PushButton
 20828 ;; This function uses a non-reentrant model
 20829 ;;
 20830                           
 20831     1F0A                     _LIGHTBLUE_GetButtonValue:	
 20832                           ;psect for function _LIGHTBLUE_GetButtonValue
 20833                           
 20834     1F0A                     l13605:	
 20835                           ;incstack = 0
 20836                           ; Regs used in _LIGHTBLUE_GetButtonValue: [wreg+status,2+status,0]
 20837                           
 20838                           
 20839                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 476:     return (0x01) - PORTAbits
      +                          .RA7;
 20840     1F0A  0140               	movlb	0	; select bank0
 20841     1F0B  0D0C               	rlf	12,w	;volatile
 20842     1F0C  0D0C               	rlf	12,w	;volatile
 20843     1F0D  3901               	andlw	1
 20844     1F0E  3C01               	sublw	1
 20845     1F0F                     l202:
 20846     1F0F  0008               	return
 20847     1F10                     __end_of_LIGHTBLUE_GetButtonValue:
 20848                           
 20849                           	psect	text70
 20850     0590                     __ptext70:	
 20851 ;; *************** function _LIGHTBLUE_ParseIncomingPacket *****************
 20852 ;; Defined at:
 20853 ;;		line 400 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20854 ;; Parameters:    Size  Location     Type
 20855 ;;  receivedByte    1    wreg     unsigned char 
 20856 ;; Auto vars:     Size  Location     Type
 20857 ;;  receivedByte    1   19[BANK0 ] unsigned char 
 20858 ;; Return value:  Size  Location     Type
 20859 ;;                  1    wreg      void 
 20860 ;; Registers used:
 20861 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20862 ;; Tracked objects:
 20863 ;;		On entry : 0/0
 20864 ;;		On exit  : 0/0
 20865 ;;		Unchanged: 0/0
 20866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20868 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20869 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20870 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20871 ;;Total ram usage:        9 bytes
 20872 ;; Hardware stack levels used: 1
 20873 ;; Hardware stack levels required when called: 11
 20874 ;; This function calls:
 20875 ;;		_LIGHTBLUE_PerformAction
 20876 ;; This function is called by:
 20877 ;;		_main
 20878 ;; This function uses a non-reentrant model
 20879 ;;
 20880                           
 20881     0590                     _LIGHTBLUE_ParseIncomingPacket:	
 20882                           ;psect for function _LIGHTBLUE_ParseIncomingPacket
 20883                           
 20884                           
 20885                           ;incstack = 0
 20886                           ; Regs used in _LIGHTBLUE_ParseIncomingPacket: [wreg-fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 20887                           ;LIGHTBLUE_ParseIncomingPacket@receivedByte stored from wreg
 20888     0590  0140               	movlb	0	; select bank0
 20889     0591  00B3               	movwf	LIGHTBLUE_ParseIncomingPacket@receivedByte
 20890     0592                     l14377:
 20891                           
 20892                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 401:     static PACKET_PARSER_STAT
      +                          E_t parserState = IDLE;;mcc_generated_files/application/LIGHTBLUE_service.c: 402:     st
      +                          atic uint8_t length = 0;;mcc_generated_files/application/LIGHTBLUE_service.c: 403:     s
      +                          tatic uint16_t data = 0;;mcc_generated_files/application/LIGHTBLUE_service.c: 404:     s
      +                          tatic char packetID = '\0';;mcc_generated_files/application/LIGHTBLUE_service.c: 406:   
      +                            switch (parserState) {
 20893     0592  2E3C               	goto	l14437
 20894     0593                     l14379:
 20895                           
 20896                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 409:             parserState = PAC
      +                          KET_ID;
 20897     0593  3002               	movlw	2
 20898     0594  00EB               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 20899                           
 20900                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 410:             break;
 20901     0595  2E5B               	goto	l187
 20902     0596                     l14381:
 20903                           
 20904                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 412:             packetID = receiv
      +                          edByte;
 20905     0596  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20906     0597  00E9               	movwf	LIGHTBLUE_ParseIncomingPacket@packetID
 20907                           
 20908                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 413:             parserState = PAY
      +                          LOAD_SIZE_0;
 20909     0598  3003               	movlw	3
 20910     0599  00EB               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 20911                           
 20912                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 414:             break;
 20913     059A  2E5B               	goto	l187
 20914     059B                     l14383:
 20915                           
 20916                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 416:             length = (((recei
      +                          vedByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 10);
 20917     059B  303A               	movlw	58
 20918     059C  0233               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20919     059D  1C03               	skipc
 20920     059E  2DA0               	goto	u11531
 20921     059F  2DA1               	goto	u11530
 20922     05A0                     u11531:
 20923     05A0  2DAA               	goto	l14387
 20924     05A1                     u11530:
 20925     05A1                     l14385:
 20926     05A1  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20927     05A2  395F               	andlw	95
 20928     05A3  3EC9               	addlw	201
 20929     05A4  00AD               	movwf	_LIGHTBLUE_ParseIncomingPacket$463
 20930     05A5  30FF               	movlw	255
 20931     05A6  1803               	skipnc
 20932     05A7  3000               	movlw	0
 20933     05A8  00AE               	movwf	_LIGHTBLUE_ParseIncomingPacket$463+1
 20934     05A9  2DB1               	goto	l164
 20935     05AA                     l14387:
 20936     05AA  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20937     05AB  3ED0               	addlw	208
 20938     05AC  00AD               	movwf	_LIGHTBLUE_ParseIncomingPacket$463
 20939     05AD  30FF               	movlw	255
 20940     05AE  1803               	skipnc
 20941     05AF  3000               	movlw	0
 20942     05B0  00AE               	movwf	_LIGHTBLUE_ParseIncomingPacket$463+1
 20943     05B1                     l164:
 20944     05B1  082D               	movf	_LIGHTBLUE_ParseIncomingPacket$463,w
 20945     05B2  00EA               	movwf	LIGHTBLUE_ParseIncomingPacket@length
 20946                           
 20947                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 417:             parserState = PAY
      +                          LOAD_SIZE_1;
 20948     05B3  3004               	movlw	4
 20949     05B4  00EB               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 20950                           
 20951                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 418:             break;
 20952     05B5  2E5B               	goto	l187
 20953     05B6                     l14389:
 20954                           
 20955                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 420:             length = (length 
      +                          << 4) + (((receivedByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 
      +                          10);
 20956     05B6  303A               	movlw	58
 20957     05B7  0233               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20958     05B8  1C03               	skipc
 20959     05B9  2DBB               	goto	u11541
 20960     05BA  2DBC               	goto	u11540
 20961     05BB                     u11541:
 20962     05BB  2DC5               	goto	l14393
 20963     05BC                     u11540:
 20964     05BC                     l14391:
 20965     05BC  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20966     05BD  395F               	andlw	95
 20967     05BE  3EC9               	addlw	201
 20968     05BF  00AF               	movwf	_LIGHTBLUE_ParseIncomingPacket$464
 20969     05C0  30FF               	movlw	255
 20970     05C1  1803               	skipnc
 20971     05C2  3000               	movlw	0
 20972     05C3  00B0               	movwf	_LIGHTBLUE_ParseIncomingPacket$464+1
 20973     05C4  2DCC               	goto	l14395
 20974     05C5                     l14393:
 20975     05C5  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20976     05C6  3ED0               	addlw	208
 20977     05C7  00AF               	movwf	_LIGHTBLUE_ParseIncomingPacket$464
 20978     05C8  30FF               	movlw	255
 20979     05C9  1803               	skipnc
 20980     05CA  3000               	movlw	0
 20981     05CB  00B0               	movwf	_LIGHTBLUE_ParseIncomingPacket$464+1
 20982     05CC                     l14395:
 20983     05CC  086A               	movf	LIGHTBLUE_ParseIncomingPacket@length,w
 20984     05CD  00AB               	movwf	??_LIGHTBLUE_ParseIncomingPacket
 20985     05CE  3003               	movlw	3
 20986     05CF                     u11555:
 20987     05CF  35AB               	lslf	??_LIGHTBLUE_ParseIncomingPacket,f
 20988     05D0  3EFF               	addlw	-1
 20989     05D1  1D03               	skipz
 20990     05D2  2DCF               	goto	u11555
 20991     05D3  352B               	lslf	??_LIGHTBLUE_ParseIncomingPacket,w
 20992     05D4  072F               	addwf	_LIGHTBLUE_ParseIncomingPacket$464,w
 20993     05D5  00EA               	movwf	LIGHTBLUE_ParseIncomingPacket@length
 20994     05D6                     l14397:
 20995                           
 20996                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 421:             parserState = PAY
      +                          LOAD_0;
 20997     05D6  3005               	movlw	5
 20998     05D7  00EB               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 20999                           
 21000                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 422:             break;
 21001     05D8  2E5B               	goto	l187
 21002     05D9                     l14399:
 21003                           
 21004                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 424:             data = (((receive
      +                          dByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 10);
 21005     05D9  303A               	movlw	58
 21006     05DA  0233               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 21007     05DB  1C03               	skipc
 21008     05DC  2DDE               	goto	u11561
 21009     05DD  2DDF               	goto	u11560
 21010     05DE                     u11561:
 21011     05DE  2DE8               	goto	l14403
 21012     05DF                     u11560:
 21013     05DF                     l14401:
 21014     05DF  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 21015     05E0  395F               	andlw	95
 21016     05E1  3EC9               	addlw	201
 21017     05E2  00D2               	movwf	LIGHTBLUE_ParseIncomingPacket@data
 21018     05E3  30FF               	movlw	255
 21019     05E4  1803               	skipnc
 21020     05E5  3000               	movlw	0
 21021     05E6  00D3               	movwf	LIGHTBLUE_ParseIncomingPacket@data+1
 21022     05E7  2DEF               	goto	l14405
 21023     05E8                     l14403:
 21024     05E8  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 21025     05E9  3ED0               	addlw	208
 21026     05EA  00D2               	movwf	LIGHTBLUE_ParseIncomingPacket@data
 21027     05EB  30FF               	movlw	255
 21028     05EC  1803               	skipnc
 21029     05ED  3000               	movlw	0
 21030     05EE  00D3               	movwf	LIGHTBLUE_ParseIncomingPacket@data+1
 21031     05EF                     l14405:
 21032                           
 21033                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 425:             length--;
 21034     05EF  3001               	movlw	1
 21035     05F0  02EA               	subwf	LIGHTBLUE_ParseIncomingPacket@length,f
 21036     05F1                     l14407:
 21037                           
 21038                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 426:             if (length == 0) 
      +                          {
 21039     05F1  086A               	movf	LIGHTBLUE_ParseIncomingPacket@length,w
 21040     05F2  1D03               	btfss	3,2
 21041     05F3  2DF5               	goto	u11571
 21042     05F4  2DF6               	goto	u11570
 21043     05F5                     u11571:
 21044     05F5  2DF8               	goto	l14411
 21045     05F6                     u11570:
 21046     05F6                     l14409:
 21047                           
 21048                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 427:                 parserState =
      +                           IDLE;
 21049     05F6  01EB               	clrf	LIGHTBLUE_ParseIncomingPacket@parserState
 21050                           
 21051                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 428:             } else {
 21052     05F7  2E5B               	goto	l187
 21053     05F8                     l14411:
 21054                           
 21055                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 429:                 parserState =
      +                           PAYLOAD_1;
 21056     05F8  3006               	movlw	6
 21057     05F9  00EB               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 21058     05FA  2E5B               	goto	l187
 21059     05FB                     l14413:
 21060                           
 21061                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 433:             data = (data << 4
      +                          ) + (((receivedByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 10);
 21062     05FB  303A               	movlw	58
 21063     05FC  0233               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 21064     05FD  1C03               	skipc
 21065     05FE  2E00               	goto	u11581
 21066     05FF  2E01               	goto	u11580
 21067     0600                     u11581:
 21068     0600  2E0A               	goto	l14417
 21069     0601                     u11580:
 21070     0601                     l14415:
 21071     0601  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 21072     0602  395F               	andlw	95
 21073     0603  3EC9               	addlw	201
 21074     0604  00B1               	movwf	_LIGHTBLUE_ParseIncomingPacket$465
 21075     0605  30FF               	movlw	255
 21076     0606  1803               	skipnc
 21077     0607  3000               	movlw	0
 21078     0608  00B2               	movwf	_LIGHTBLUE_ParseIncomingPacket$465+1
 21079     0609  2E11               	goto	l14419
 21080     060A                     l14417:
 21081     060A  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 21082     060B  3ED0               	addlw	208
 21083     060C  00B1               	movwf	_LIGHTBLUE_ParseIncomingPacket$465
 21084     060D  30FF               	movlw	255
 21085     060E  1803               	skipnc
 21086     060F  3000               	movlw	0
 21087     0610  00B2               	movwf	_LIGHTBLUE_ParseIncomingPacket$465+1
 21088     0611                     l14419:
 21089     0611  0853               	movf	LIGHTBLUE_ParseIncomingPacket@data+1,w
 21090     0612  00AC               	movwf	??_LIGHTBLUE_ParseIncomingPacket+1
 21091     0613  0852               	movf	LIGHTBLUE_ParseIncomingPacket@data,w
 21092     0614  00AB               	movwf	??_LIGHTBLUE_ParseIncomingPacket
 21093     0615  0EAB               	swapf	??_LIGHTBLUE_ParseIncomingPacket,f
 21094     0616  0EAC               	swapf	??_LIGHTBLUE_ParseIncomingPacket+1,f
 21095     0617  30F0               	movlw	240
 21096     0618  05AC               	andwf	??_LIGHTBLUE_ParseIncomingPacket+1,f
 21097     0619  082B               	movf	??_LIGHTBLUE_ParseIncomingPacket,w
 21098     061A  390F               	andlw	15
 21099     061B  04AC               	iorwf	??_LIGHTBLUE_ParseIncomingPacket+1,f
 21100     061C  30F0               	movlw	240
 21101     061D  05AB               	andwf	??_LIGHTBLUE_ParseIncomingPacket,f
 21102     061E  0831               	movf	_LIGHTBLUE_ParseIncomingPacket$465,w
 21103     061F  072B               	addwf	??_LIGHTBLUE_ParseIncomingPacket,w
 21104     0620  00D2               	movwf	LIGHTBLUE_ParseIncomingPacket@data
 21105     0621  0832               	movf	_LIGHTBLUE_ParseIncomingPacket$465+1,w
 21106     0622  3D2C               	addwfc	??_LIGHTBLUE_ParseIncomingPacket+1,w
 21107     0623  00D3               	movwf	LIGHTBLUE_ParseIncomingPacket@data+1
 21108     0624                     l14421:
 21109                           
 21110                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 434:             LIGHTBLUE_Perform
      +                          Action(packetID, data);
 21111     0624  0852               	movf	LIGHTBLUE_ParseIncomingPacket@data,w
 21112     0625  00A7               	movwf	LIGHTBLUE_PerformAction@data
 21113     0626  0869               	movf	LIGHTBLUE_ParseIncomingPacket@packetID,w
 21114     0627  3188  2016  3185   	fcall	_LIGHTBLUE_PerformAction
 21115     062A                     l14423:
 21116                           
 21117                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 435:             length--;
 21118     062A  3001               	movlw	1
 21119     062B  0140               	movlb	0	; select bank0
 21120     062C  02EA               	subwf	LIGHTBLUE_ParseIncomingPacket@length,f
 21121     062D                     l14425:
 21122                           
 21123                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 436:             if (length == 0) 
      +                          {
 21124     062D  086A               	movf	LIGHTBLUE_ParseIncomingPacket@length,w
 21125     062E  1D03               	btfss	3,2
 21126     062F  2E31               	goto	u11591
 21127     0630  2E32               	goto	u11590
 21128     0631                     u11591:
 21129     0631  2DD6               	goto	l14397
 21130     0632                     u11590:
 21131     0632  2DF6               	goto	l14409
 21132     0633                     l14431:
 21133                           
 21134                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 444:             if (receivedByte 
      +                          == ('[')) {
 21135     0633  305B               	movlw	91
 21136     0634  0633               	xorwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 21137     0635  1D03               	btfss	3,2
 21138     0636  2E38               	goto	u11601
 21139     0637  2E39               	goto	u11600
 21140     0638                     u11601:
 21141     0638  2E5B               	goto	l187
 21142     0639                     u11600:
 21143     0639                     l14433:
 21144                           
 21145                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 445:                 parserState =
      +                           SEQUENCE_NUMBER;
 21146     0639  01EB               	clrf	LIGHTBLUE_ParseIncomingPacket@parserState
 21147     063A  0AEB               	incf	LIGHTBLUE_ParseIncomingPacket@parserState,f
 21148     063B  2E5B               	goto	l187
 21149     063C                     l14437:
 21150     063C  086B               	movf	LIGHTBLUE_ParseIncomingPacket@parserState,w
 21151     063D  00AB               	movwf	??_LIGHTBLUE_ParseIncomingPacket
 21152     063E  01AC               	clrf	??_LIGHTBLUE_ParseIncomingPacket+1
 21153                           
 21154                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21155                           ; Switch size 1, requested type "simple"
 21156                           ; Number of cases is 1, Range of values is 0 to 0
 21157                           ; switch strategies available:
 21158                           ; Name         Instructions Cycles
 21159                           ; simple_byte            4     3 (average)
 21160                           ; direct_byte            8     6 (fixed)
 21161                           ; jumptable            260     6 (fixed)
 21162                           ;	Chosen strategy is simple_byte
 21163     063F  082C               	movf	??_LIGHTBLUE_ParseIncomingPacket+1,w
 21164     0640  3A00               	xorlw	0	; case 0
 21165     0641  1903               	skipnz
 21166     0642  2E44               	goto	l16611
 21167     0643  2E33               	goto	l14431
 21168     0644                     l16611:
 21169                           
 21170                           ; Switch size 1, requested type "simple"
 21171                           ; Number of cases is 7, Range of values is 0 to 6
 21172                           ; switch strategies available:
 21173                           ; Name         Instructions Cycles
 21174                           ; direct_byte           20     6 (fixed)
 21175                           ; simple_byte           22    12 (average)
 21176                           ; jumptable            260     6 (fixed)
 21177                           ;	Chosen strategy is simple_byte
 21178     0644  082B               	movf	??_LIGHTBLUE_ParseIncomingPacket,w
 21179     0645  3A00               	xorlw	0	; case 0
 21180     0646  1903               	skipnz
 21181     0647  2E33               	goto	l14431
 21182     0648  3A01               	xorlw	1	; case 1
 21183     0649  1903               	skipnz
 21184     064A  2D93               	goto	l14379
 21185     064B  3A03               	xorlw	3	; case 2
 21186     064C  1903               	skipnz
 21187     064D  2D96               	goto	l14381
 21188     064E  3A01               	xorlw	1	; case 3
 21189     064F  1903               	skipnz
 21190     0650  2D9B               	goto	l14383
 21191     0651  3A07               	xorlw	7	; case 4
 21192     0652  1903               	skipnz
 21193     0653  2DB6               	goto	l14389
 21194     0654  3A01               	xorlw	1	; case 5
 21195     0655  1903               	skipnz
 21196     0656  2DD9               	goto	l14399
 21197     0657  3A03               	xorlw	3	; case 6
 21198     0658  1903               	skipnz
 21199     0659  2DFB               	goto	l14413
 21200     065A  2E33               	goto	l14431
 21201     065B                     l187:
 21202     065B  0008               	return
 21203     065C                     __end_of_LIGHTBLUE_ParseIncomingPacket:
 21204                           
 21205                           	psect	text71
 21206     0816                     __ptext71:	
 21207 ;; *************** function _LIGHTBLUE_PerformAction *****************
 21208 ;; Defined at:
 21209 ;;		line 499 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 21210 ;; Parameters:    Size  Location     Type
 21211 ;;  id              1    wreg     unsigned char 
 21212 ;;  data            1    7[BANK0 ] unsigned char 
 21213 ;; Auto vars:     Size  Location     Type
 21214 ;;  id              1    9[BANK0 ] unsigned char 
 21215 ;;  led             1   10[BANK0 ] unsigned char 
 21216 ;; Return value:  Size  Location     Type
 21217 ;;                  1    wreg      void 
 21218 ;; Registers used:
 21219 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21220 ;; Tracked objects:
 21221 ;;		On entry : 0/0
 21222 ;;		On exit  : 0/0
 21223 ;;		Unchanged: 0/0
 21224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21225 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21226 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21227 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21228 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21229 ;;Total ram usage:        4 bytes
 21230 ;; Hardware stack levels used: 1
 21231 ;; Hardware stack levels required when called: 10
 21232 ;; This function calls:
 21233 ;;		_EUSART1_Write
 21234 ;;		_EUSART2_Write
 21235 ;;		_LIGHTBLUE_SetErrorLedValue
 21236 ;; This function is called by:
 21237 ;;		_LIGHTBLUE_ParseIncomingPacket
 21238 ;; This function uses a non-reentrant model
 21239 ;;
 21240                           
 21241     0816                     _LIGHTBLUE_PerformAction:	
 21242                           ;psect for function _LIGHTBLUE_PerformAction
 21243                           
 21244                           
 21245                           ;incstack = 0
 21246                           ; Regs used in _LIGHTBLUE_PerformAction: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21247                           ;LIGHTBLUE_PerformAction@id stored from wreg
 21248     0816  0140               	movlb	0	; select bank0
 21249     0817  00A9               	movwf	LIGHTBLUE_PerformAction@id
 21250     0818                     l13617:
 21251                           
 21252                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 500:     uint8_t led;;mcc_generate
      +                          d_files/application/LIGHTBLUE_service.c: 502:     switch (id) {
 21253     0818  2845               	goto	l13629
 21254     0819                     l13619:
 21255                           
 21256                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 504:             led = (data >> 4)
      +                           & (0x01);
 21257     0819  0827               	movf	LIGHTBLUE_PerformAction@data,w
 21258     081A  00A8               	movwf	??_LIGHTBLUE_PerformAction
 21259     081B  3004               	movlw	4
 21260     081C                     u10525:
 21261     081C  36A8               	lsrf	??_LIGHTBLUE_PerformAction,f
 21262     081D  0B89               	decfsz	9,f
 21263     081E  281C               	goto	u10525
 21264     081F  0828               	movf	??_LIGHTBLUE_PerformAction,w
 21265     0820  3901               	andlw	1
 21266     0821  00AA               	movwf	LIGHTBLUE_PerformAction@led
 21267                           
 21268                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 505:             if (led == (0x00)
      +                          ) {
 21269     0822  082A               	movf	LIGHTBLUE_PerformAction@led,w
 21270     0823  1D03               	btfss	3,2
 21271     0824  2826               	goto	u10531
 21272     0825  2827               	goto	u10530
 21273     0826                     u10531:
 21274     0826  282F               	goto	l13623
 21275     0827                     u10530:
 21276     0827                     l13621:
 21277                           
 21278                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 506:                 if ((data & (
      +                          0x01)) == (0x00)) {
 21279     0827  1827               	btfsc	LIGHTBLUE_PerformAction@data,0
 21280     0828  282A               	goto	u10541
 21281     0829  282B               	goto	u10540
 21282     082A                     u10541:
 21283     082A  282D               	goto	l224
 21284     082B                     u10540:
 21285     082B                     l221:	
 21286                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 507:                     do { LATA
      +                          bits.LATA5 = 1; } while(0);
 21287                           
 21288     082B  1698               	bsf	24,5	;volatile
 21289     082C  284D               	goto	l230
 21290     082D                     l224:	
 21291                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 509:                     do { LATA
      +                          bits.LATA5 = 0; } while(0);
 21292                           
 21293     082D  1298               	bcf	24,5	;volatile
 21294     082E  284D               	goto	l230
 21295     082F                     l13623:
 21296                           
 21297                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 512:                 LIGHTBLUE_Set
      +                          ErrorLedValue(data & (0x01));
 21298     082F  1827               	btfsc	LIGHTBLUE_PerformAction@data,0
 21299     0830  2832               	goto	u10551
 21300     0831  2834               	goto	u10550
 21301     0832                     u10551:
 21302     0832  3001               	movlw	1
 21303     0833  2835               	goto	u10560
 21304     0834                     u10550:
 21305     0834  3000               	movlw	0
 21306     0835                     u10560:
 21307     0835  3190  2097  3188   	fcall	_LIGHTBLUE_SetErrorLedValue
 21308     0838  284D               	goto	l230
 21309     0839                     l13625:
 21310                           
 21311                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 516:             uart[UART_CDC].Wr
      +                          ite(data);
 21312     0839  0827               	movf	LIGHTBLUE_PerformAction@data,w
 21313     083A  00F1               	movwf	EUSART2_Write@txData
 21314     083B  3002               	movlw	low ((_uart+2)| (0+32768))
 21315     083C  0084               	movwf	4
 21316     083D  3098               	movlw	high ((_uart+2)| (0+32768))
 21317     083E  0085               	movwf	5
 21318     083F  3F01               	moviw [1]fsr0
 21319     0840  008A               	movwf	10
 21320     0841  3F00               	moviw [0]fsr0
 21321     0842  000A               	callw
 21322     0843  3188               	pagesel	$
 21323                           
 21324                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 517:             break;
 21325     0844  284D               	goto	l230
 21326     0845                     l13629:
 21327     0845  0829               	movf	LIGHTBLUE_PerformAction@id,w
 21328                           
 21329                           ; Switch size 1, requested type "simple"
 21330                           ; Number of cases is 2, Range of values is 76 to 83
 21331                           ; switch strategies available:
 21332                           ; Name         Instructions Cycles
 21333                           ; simple_byte            7     4 (average)
 21334                           ; direct_byte           25     9 (fixed)
 21335                           ; jumptable            263     9 (fixed)
 21336                           ;	Chosen strategy is simple_byte
 21337     0846  3A4C               	xorlw	76	; case 76
 21338     0847  1903               	skipnz
 21339     0848  2819               	goto	l13619
 21340     0849  3A1F               	xorlw	31	; case 83
 21341     084A  1903               	skipnz
 21342     084B  2839               	goto	l13625
 21343     084C  284D               	goto	l230
 21344     084D                     l230:
 21345     084D  0008               	return
 21346     084E                     __end_of_LIGHTBLUE_PerformAction:
 21347                           
 21348                           	psect	text72
 21349     1097                     __ptext72:	
 21350 ;; *************** function _LIGHTBLUE_SetErrorLedValue *****************
 21351 ;; Defined at:
 21352 ;;		line 487 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 21353 ;; Parameters:    Size  Location     Type
 21354 ;;  value           1    wreg     _Bool 
 21355 ;; Auto vars:     Size  Location     Type
 21356 ;;  value           1    6[BANK0 ] _Bool 
 21357 ;; Return value:  Size  Location     Type
 21358 ;;                  1    wreg      void 
 21359 ;; Registers used:
 21360 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21361 ;; Tracked objects:
 21362 ;;		On entry : 0/0
 21363 ;;		On exit  : 0/0
 21364 ;;		Unchanged: 0/0
 21365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21367 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21368 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21369 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21370 ;;Total ram usage:        2 bytes
 21371 ;; Hardware stack levels used: 1
 21372 ;; Hardware stack levels required when called: 9
 21373 ;; This function calls:
 21374 ;;		_LIGHTBLUE_UpdateErrorLed
 21375 ;; This function is called by:
 21376 ;;		_LIGHTBLUE_PerformAction
 21377 ;; This function uses a non-reentrant model
 21378 ;;
 21379                           
 21380     1097                     _LIGHTBLUE_SetErrorLedValue:	
 21381                           ;psect for function _LIGHTBLUE_SetErrorLedValue
 21382                           
 21383                           
 21384                           ;incstack = 0
 21385                           ; Regs used in _LIGHTBLUE_SetErrorLedValue: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21386                           ;LIGHTBLUE_SetErrorLedValue@value stored from wreg
 21387     1097  0140               	movlb	0	; select bank0
 21388     1098  00A6               	movwf	LIGHTBLUE_SetErrorLedValue@value
 21389     1099                     l13437:
 21390                           
 21391                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 488:     (bitMap.ioStateBitMap.p2_
      +                          2_state) = (0x01) - value;
 21392     1099  3001               	movlw	1
 21393     109A  00FB               	movwf	??_LIGHTBLUE_SetErrorLedValue
 21394     109B  0826               	movf	LIGHTBLUE_SetErrorLedValue@value,w
 21395     109C  02FB               	subwf	??_LIGHTBLUE_SetErrorLedValue,f
 21396     109D  0855               	movf	_bitMap+1,w	;volatile
 21397     109E  067B               	xorwf	??_LIGHTBLUE_SetErrorLedValue,w
 21398     109F  39FE               	andlw	-2
 21399     10A0  067B               	xorwf	??_LIGHTBLUE_SetErrorLedValue,w
 21400     10A1  00D5               	movwf	_bitMap+1	;volatile
 21401     10A2                     l13439:
 21402                           
 21403                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 489:     LIGHTBLUE_UpdateErrorLed(
      +                          );
 21404     10A2  3193  232B  3190   	fcall	_LIGHTBLUE_UpdateErrorLed
 21405     10A5                     l211:
 21406     10A5  0008               	return
 21407     10A6                     __end_of_LIGHTBLUE_SetErrorLedValue:
 21408                           
 21409                           	psect	text73
 21410     132B                     __ptext73:	
 21411 ;; *************** function _LIGHTBLUE_UpdateErrorLed *****************
 21412 ;; Defined at:
 21413 ;;		line 492 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 21414 ;; Parameters:    Size  Location     Type
 21415 ;;		None
 21416 ;; Auto vars:     Size  Location     Type
 21417 ;;		None
 21418 ;; Return value:  Size  Location     Type
 21419 ;;                  1    wreg      void 
 21420 ;; Registers used:
 21421 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21422 ;; Tracked objects:
 21423 ;;		On entry : 0/0
 21424 ;;		On exit  : 0/0
 21425 ;;		Unchanged: 0/0
 21426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21431 ;;Total ram usage:        0 bytes
 21432 ;; Hardware stack levels used: 1
 21433 ;; Hardware stack levels required when called: 8
 21434 ;; This function calls:
 21435 ;;		_RN487X_Delay
 21436 ;;		_RN487X_EnterCmdMode
 21437 ;;		_RN487X_EnterDataMode
 21438 ;;		_RN487X_SetOutputs
 21439 ;; This function is called by:
 21440 ;;		_LIGHTBLUE_SetErrorLedValue
 21441 ;; This function uses a non-reentrant model
 21442 ;;
 21443                           
 21444     132B                     _LIGHTBLUE_UpdateErrorLed:	
 21445                           ;psect for function _LIGHTBLUE_UpdateErrorLed
 21446                           
 21447     132B                     l13351:	
 21448                           ;incstack = 0
 21449                           ; Regs used in _LIGHTBLUE_UpdateErrorLed: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21450                           
 21451                           
 21452                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 493:     RN487X_EnterCmdMode();
 21453     132B  3192  2202  3193   	fcall	_RN487X_EnterCmdMode
 21454     132E                     l13353:
 21455                           
 21456                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 494:     RN487X.DelayMs((20));
 21457     132E  3014               	movlw	20
 21458     132F  00F4               	movwf	RN487X_Delay@delayCount
 21459     1330  3000               	movlw	0
 21460     1331  00F5               	movwf	RN487X_Delay@delayCount+1
 21461     1332  3076               	movlw	low ((_RN487X+14)| (0+32768))
 21462     1333  0084               	movwf	4
 21463     1334  3098               	movlw	high ((_RN487X+14)| (0+32768))
 21464     1335  0085               	movwf	5
 21465     1336  3F01               	moviw [1]fsr0
 21466     1337  008A               	movwf	10
 21467     1338  3F00               	moviw [0]fsr0
 21468     1339  000A               	callw
 21469     133A  3193               	pagesel	$
 21470     133B                     l13355:
 21471                           
 21472                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 495:     RN487X_SetOutputs(bitMap)
      +                          ;
 21473     133B  0140               	movlb	0	; select bank0
 21474     133C  0855               	movf	_bitMap+1,w	;volatile
 21475     133D  00A1               	movwf	RN487X_SetOutputs@bitMap+1
 21476     133E  0854               	movf	_bitMap,w	;volatile
 21477     133F  00A0               	movwf	RN487X_SetOutputs@bitMap
 21478     1340  318A  22C3  3193   	fcall	_RN487X_SetOutputs
 21479     1343                     l13357:
 21480                           
 21481                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 496:     RN487X_EnterDataMode();
 21482     1343  3193  2310  3193   	fcall	_RN487X_EnterDataMode
 21483     1346                     l214:
 21484     1346  0008               	return
 21485     1347                     __end_of_LIGHTBLUE_UpdateErrorLed:
 21486                           
 21487                           	psect	text74
 21488     0AC3                     __ptext74:	
 21489 ;; *************** function _RN487X_SetOutputs *****************
 21490 ;; Defined at:
 21491 ;;		line 223 in file "mcc_generated_files/rn487x/rn487x.c"
 21492 ;; Parameters:    Size  Location     Type
 21493 ;;  bitMap          2    0[BANK0 ] struct .
 21494 ;; Auto vars:     Size  Location     Type
 21495 ;;  stateHighNib    1    5[BANK0 ] unsigned char 
 21496 ;;  ioHighNibble    1    4[BANK0 ] unsigned char 
 21497 ;;  stateLowNibb    1    3[BANK0 ] unsigned char 
 21498 ;;  ioLowNibble     1    2[BANK0 ] unsigned char 
 21499 ;; Return value:  Size  Location     Type
 21500 ;;                  1    wreg      _Bool 
 21501 ;; Registers used:
 21502 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21503 ;; Tracked objects:
 21504 ;;		On entry : 0/0
 21505 ;;		On exit  : 0/0
 21506 ;;		Unchanged: 0/0
 21507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21508 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21509 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21511 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21512 ;;Total ram usage:        6 bytes
 21513 ;; Hardware stack levels used: 1
 21514 ;; Hardware stack levels required when called: 7
 21515 ;; This function calls:
 21516 ;;		_RN487X_ReadDefaultResponse
 21517 ;;		_RN487X_SendCmd
 21518 ;; This function is called by:
 21519 ;;		_LIGHTBLUE_UpdateErrorLed
 21520 ;; This function uses a non-reentrant model
 21521 ;;
 21522                           
 21523     0AC3                     _RN487X_SetOutputs:	
 21524                           ;psect for function _RN487X_SetOutputs
 21525                           
 21526     0AC3                     l13211:	
 21527                           ;incstack = 0
 21528                           ; Regs used in _RN487X_SetOutputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21529                           
 21530                           
 21531                           ;mcc_generated_files/rn487x/rn487x.c: 226:     char ioLowNibble = '0';
 21532     0AC3  3030               	movlw	48
 21533     0AC4  0140               	movlb	0	; select bank0
 21534     0AC5  00A2               	movwf	RN487X_SetOutputs@ioLowNibble
 21535                           
 21536                           ;mcc_generated_files/rn487x/rn487x.c: 227:     char stateHighNibble = '0';
 21537     0AC6  3030               	movlw	48
 21538     0AC7  00A5               	movwf	RN487X_SetOutputs@stateHighNibble
 21539                           
 21540                           ;mcc_generated_files/rn487x/rn487x.c: 228:     char stateLowNibble = '0';
 21541     0AC8  3030               	movlw	48
 21542     0AC9  00A3               	movwf	RN487X_SetOutputs@stateLowNibble
 21543     0ACA                     l13213:
 21544                           
 21545                           ;mcc_generated_files/rn487x/rn487x.c: 231:     if (bitMap.ioBitMap.p1_3)
 21546     0ACA  1E20               	btfss	RN487X_SetOutputs@bitMap,4
 21547     0ACB  2ACD               	goto	u10061
 21548     0ACC  2ACE               	goto	u10060
 21549     0ACD                     u10061:
 21550     0ACD  2AD1               	goto	l13217
 21551     0ACE                     u10060:
 21552     0ACE                     l13215:
 21553                           
 21554                           ;mcc_generated_files/rn487x/rn487x.c: 232:     {;mcc_generated_files/rn487x/rn487x.c: 23
      +                          3:         ioHighNibble = '1';
 21555     0ACE  3031               	movlw	49
 21556     0ACF  00A4               	movwf	RN487X_SetOutputs@ioHighNibble
 21557                           
 21558                           ;mcc_generated_files/rn487x/rn487x.c: 234:     }
 21559     0AD0  2AD3               	goto	l13219
 21560     0AD1                     l13217:
 21561                           
 21562                           ;mcc_generated_files/rn487x/rn487x.c: 236:     {;mcc_generated_files/rn487x/rn487x.c: 23
      +                          7:         ioHighNibble = '0';
 21563     0AD1  3030               	movlw	48
 21564     0AD2  00A4               	movwf	RN487X_SetOutputs@ioHighNibble
 21565     0AD3                     l13219:
 21566                           
 21567                           ;mcc_generated_files/rn487x/rn487x.c: 239:     ioLowNibble = ( (0x0F & bitMap.ioBitMap.g
      +                          pioBitMap) + '0');
 21568     0AD3  0820               	movf	RN487X_SetOutputs@bitMap,w
 21569     0AD4  390F               	andlw	15
 21570     0AD5  3E30               	addlw	48
 21571     0AD6  00A2               	movwf	RN487X_SetOutputs@ioLowNibble
 21572     0AD7                     l13221:
 21573                           
 21574                           ;mcc_generated_files/rn487x/rn487x.c: 242:     if (bitMap.ioStateBitMap.p1_3_state)
 21575     0AD7  1E21               	btfss	RN487X_SetOutputs@bitMap+1,4
 21576     0AD8  2ADA               	goto	u10071
 21577     0AD9  2ADB               	goto	u10070
 21578     0ADA                     u10071:
 21579     0ADA  2ADE               	goto	l13225
 21580     0ADB                     u10070:
 21581     0ADB                     l13223:
 21582                           
 21583                           ;mcc_generated_files/rn487x/rn487x.c: 243:     {;mcc_generated_files/rn487x/rn487x.c: 24
      +                          4:         stateHighNibble = '1';
 21584     0ADB  3031               	movlw	49
 21585     0ADC  00A5               	movwf	RN487X_SetOutputs@stateHighNibble
 21586                           
 21587                           ;mcc_generated_files/rn487x/rn487x.c: 245:     }
 21588     0ADD  2AE0               	goto	l13227
 21589     0ADE                     l13225:
 21590                           
 21591                           ;mcc_generated_files/rn487x/rn487x.c: 247:     {;mcc_generated_files/rn487x/rn487x.c: 24
      +                          8:         stateHighNibble = '0';
 21592     0ADE  3030               	movlw	48
 21593     0ADF  00A5               	movwf	RN487X_SetOutputs@stateHighNibble
 21594     0AE0                     l13227:
 21595                           
 21596                           ;mcc_generated_files/rn487x/rn487x.c: 250:     stateLowNibble = ( (0x0F & bitMap.ioState
      +                          BitMap.gpioStateBitMap) + '0');
 21597     0AE0  0821               	movf	RN487X_SetOutputs@bitMap+1,w
 21598     0AE1  390F               	andlw	15
 21599     0AE2  3E30               	addlw	48
 21600     0AE3  00A3               	movwf	RN487X_SetOutputs@stateLowNibble
 21601     0AE4                     l13229:
 21602                           
 21603                           ;mcc_generated_files/rn487x/rn487x.c: 252:     cmdBuf[0] = '|';
 21604     0AE4  307C               	movlw	124
 21605     0AE5  0143               	movlb	3	; select bank3
 21606     0AE6  00A0               	movwf	_cmdBuf^(0+384)
 21607     0AE7                     l13231:
 21608                           
 21609                           ;mcc_generated_files/rn487x/rn487x.c: 253:     cmdBuf[1] = 'O';
 21610     0AE7  304F               	movlw	79
 21611     0AE8  00A1               	movwf	(_cmdBuf^(0+384)+1)
 21612     0AE9                     l13233:
 21613                           
 21614                           ;mcc_generated_files/rn487x/rn487x.c: 254:     cmdBuf[2] = ',';
 21615     0AE9  302C               	movlw	44
 21616     0AEA  00A2               	movwf	(_cmdBuf^(0+384)+2)
 21617     0AEB                     l13235:
 21618                           
 21619                           ;mcc_generated_files/rn487x/rn487x.c: 255:     cmdBuf[3] = ioHighNibble;
 21620     0AEB  0140               	movlb	0	; select bank0
 21621     0AEC  0824               	movf	RN487X_SetOutputs@ioHighNibble,w
 21622     0AED  0143               	movlb	3	; select bank3
 21623     0AEE  00A3               	movwf	(_cmdBuf^(0+384)+3)
 21624     0AEF                     l13237:
 21625                           
 21626                           ;mcc_generated_files/rn487x/rn487x.c: 256:     cmdBuf[4] = ioLowNibble;
 21627     0AEF  0140               	movlb	0	; select bank0
 21628     0AF0  0822               	movf	RN487X_SetOutputs@ioLowNibble,w
 21629     0AF1  0143               	movlb	3	; select bank3
 21630     0AF2  00A4               	movwf	(_cmdBuf^(0+384)+4)
 21631     0AF3                     l13239:
 21632                           
 21633                           ;mcc_generated_files/rn487x/rn487x.c: 257:     cmdBuf[5] = ',';
 21634     0AF3  302C               	movlw	44
 21635     0AF4  00A5               	movwf	(_cmdBuf^(0+384)+5)
 21636     0AF5                     l13241:
 21637                           
 21638                           ;mcc_generated_files/rn487x/rn487x.c: 258:     cmdBuf[6] = stateHighNibble;
 21639     0AF5  0140               	movlb	0	; select bank0
 21640     0AF6  0825               	movf	RN487X_SetOutputs@stateHighNibble,w
 21641     0AF7  0143               	movlb	3	; select bank3
 21642     0AF8  00A6               	movwf	(_cmdBuf^(0+384)+6)
 21643     0AF9                     l13243:
 21644                           
 21645                           ;mcc_generated_files/rn487x/rn487x.c: 259:     cmdBuf[7] = stateLowNibble;
 21646     0AF9  0140               	movlb	0	; select bank0
 21647     0AFA  0823               	movf	RN487X_SetOutputs@stateLowNibble,w
 21648     0AFB  0143               	movlb	3	; select bank3
 21649     0AFC  00A7               	movwf	(_cmdBuf^(0+384)+7)
 21650     0AFD                     l13245:
 21651                           
 21652                           ;mcc_generated_files/rn487x/rn487x.c: 260:     cmdBuf[8] = '\r';
 21653     0AFD  300D               	movlw	13
 21654     0AFE  00A8               	movwf	(_cmdBuf^(0+384)+8)
 21655     0AFF                     l13247:
 21656                           
 21657                           ;mcc_generated_files/rn487x/rn487x.c: 261:     cmdBuf[9] = '\n';
 21658     0AFF  300A               	movlw	10
 21659     0B00  00A9               	movwf	(_cmdBuf^(0+384)+9)
 21660     0B01                     l13249:
 21661                           
 21662                           ;mcc_generated_files/rn487x/rn487x.c: 263:     RN487X_SendCmd(cmdBuf, 10);
 21663     0B01  300A               	movlw	10
 21664     0B02  00F7               	movwf	RN487X_SendCmd@cmdLen
 21665     0B03  30A0               	movlw	(low (_cmdBuf| (0+256)))& (0+255)
 21666     0B04  3196  26D2  318A   	fcall	_RN487X_SendCmd
 21667     0B07                     l13251:
 21668                           
 21669                           ;mcc_generated_files/rn487x/rn487x.c: 264:     return RN487X_ReadDefaultResponse();;	Ret
      +                          urn value of _RN487X_SetOutputs is never used
 21670     0B07  318E  26EC  318A   	fcall	_RN487X_ReadDefaultResponse
 21671     0B0A                     l933:
 21672     0B0A  0008               	return
 21673     0B0B                     __end_of_RN487X_SetOutputs:
 21674                           
 21675                           	psect	text75
 21676     0EEC                     __ptext75:	
 21677 ;; *************** function _RN487X_ReadDefaultResponse *****************
 21678 ;; Defined at:
 21679 ;;		line 125 in file "mcc_generated_files/rn487x/rn487x.c"
 21680 ;; Parameters:    Size  Location     Type
 21681 ;;		None
 21682 ;; Auto vars:     Size  Location     Type
 21683 ;;  resp            3    3[COMMON] unsigned char [3]
 21684 ;;  status          1    6[COMMON] _Bool 
 21685 ;; Return value:  Size  Location     Type
 21686 ;;                  1    wreg      _Bool 
 21687 ;; Registers used:
 21688 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21689 ;; Tracked objects:
 21690 ;;		On entry : 0/0
 21691 ;;		On exit  : 0/0
 21692 ;;		Unchanged: 0/0
 21693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21695 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21697 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21698 ;;Total ram usage:        4 bytes
 21699 ;; Hardware stack levels used: 1
 21700 ;; Hardware stack levels required when called: 6
 21701 ;; This function calls:
 21702 ;;		_RN487X_Read@rn487x_interface$F1381
 21703 ;; This function is called by:
 21704 ;;		_RN487X_SetOutputs
 21705 ;;		_RN487X_Disconnect
 21706 ;; This function uses a non-reentrant model
 21707 ;;
 21708                           
 21709     0EEC                     _RN487X_ReadDefaultResponse:	
 21710                           ;psect for function _RN487X_ReadDefaultResponse
 21711                           
 21712     0EEC                     l13097:	
 21713                           ;incstack = 0
 21714                           ; Regs used in _RN487X_ReadDefaultResponse: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21715                           
 21716                           
 21717                           ;mcc_generated_files/rn487x/rn487x.c: 127:     uint8_t resp[3];;mcc_generated_files/rn48
      +                          7x/rn487x.c: 128:     _Bool status = 0;
 21718     0EEC  01F6               	clrf	RN487X_ReadDefaultResponse@status
 21719     0EED                     l13099:
 21720                           
 21721                           ;mcc_generated_files/rn487x/rn487x.c: 130:     resp[0] = RN487X.Read();
 21722     0EED  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21723     0EEE  0084               	movwf	4
 21724     0EEF  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21725     0EF0  0085               	movwf	5
 21726     0EF1  3F01               	moviw [1]fsr0
 21727     0EF2  008A               	movwf	10
 21728     0EF3  3F00               	moviw [0]fsr0
 21729     0EF4  000A               	callw
 21730     0EF5  318E               	pagesel	$
 21731     0EF6  00F3               	movwf	RN487X_ReadDefaultResponse@resp
 21732     0EF7                     l13101:
 21733                           
 21734                           ;mcc_generated_files/rn487x/rn487x.c: 131:     resp[1] = RN487X.Read();
 21735     0EF7  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21736     0EF8  0084               	movwf	4
 21737     0EF9  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21738     0EFA  0085               	movwf	5
 21739     0EFB  3F01               	moviw [1]fsr0
 21740     0EFC  008A               	movwf	10
 21741     0EFD  3F00               	moviw [0]fsr0
 21742     0EFE  000A               	callw
 21743     0EFF  318E               	pagesel	$
 21744     0F00  00F4               	movwf	RN487X_ReadDefaultResponse@resp+1
 21745     0F01                     l13103:
 21746                           
 21747                           ;mcc_generated_files/rn487x/rn487x.c: 132:     resp[2] = RN487X.Read();
 21748     0F01  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21749     0F02  0084               	movwf	4
 21750     0F03  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21751     0F04  0085               	movwf	5
 21752     0F05  3F01               	moviw [1]fsr0
 21753     0F06  008A               	movwf	10
 21754     0F07  3F00               	moviw [0]fsr0
 21755     0F08  000A               	callw
 21756     0F09  318E               	pagesel	$
 21757     0F0A  00F5               	movwf	RN487X_ReadDefaultResponse@resp+2
 21758                           
 21759                           ;mcc_generated_files/rn487x/rn487x.c: 134:     switch (resp[0])
 21760     0F0B  2F2B               	goto	l13123
 21761     0F0C                     l13105:
 21762                           
 21763                           ;mcc_generated_files/rn487x/rn487x.c: 137:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 138:             if ((resp[1] == 'O') && (resp[2] == 'K'))
 21764     0F0C  304F               	movlw	79
 21765     0F0D  0674               	xorwf	RN487X_ReadDefaultResponse@resp+1,w
 21766     0F0E  1D03               	btfss	3,2
 21767     0F0F  2F11               	goto	u9911
 21768     0F10  2F12               	goto	u9910
 21769     0F11                     u9911:
 21770     0F11  2F33               	goto	l13125
 21771     0F12                     u9910:
 21772     0F12                     l13107:
 21773     0F12  304B               	movlw	75
 21774     0F13  0675               	xorwf	RN487X_ReadDefaultResponse@resp+2,w
 21775     0F14  1D03               	btfss	3,2
 21776     0F15  2F17               	goto	u9921
 21777     0F16  2F18               	goto	u9920
 21778     0F17                     u9921:
 21779     0F17  2F33               	goto	l13125
 21780     0F18                     u9920:
 21781     0F18                     l13109:
 21782                           
 21783                           ;mcc_generated_files/rn487x/rn487x.c: 139:                 status = 1;
 21784     0F18  01F6               	clrf	RN487X_ReadDefaultResponse@status
 21785     0F19  0AF6               	incf	RN487X_ReadDefaultResponse@status,f
 21786     0F1A  2F33               	goto	l13125
 21787     0F1B                     l13111:
 21788                           
 21789                           ;mcc_generated_files/rn487x/rn487x.c: 144:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 145:             if ((resp[1] == 'r') && (resp[2] == 'r'))
 21790     0F1B  3072               	movlw	114
 21791     0F1C  0674               	xorwf	RN487X_ReadDefaultResponse@resp+1,w
 21792     0F1D  1D03               	btfss	3,2
 21793     0F1E  2F20               	goto	u9931
 21794     0F1F  2F21               	goto	u9930
 21795     0F20                     u9931:
 21796     0F20  2F33               	goto	l13125
 21797     0F21                     u9930:
 21798     0F21                     l13113:
 21799     0F21  3072               	movlw	114
 21800     0F22  0675               	xorwf	RN487X_ReadDefaultResponse@resp+2,w
 21801     0F23  1D03               	btfss	3,2
 21802     0F24  2F26               	goto	u9941
 21803     0F25  2F27               	goto	u9940
 21804     0F26                     u9941:
 21805     0F26  2F33               	goto	l13125
 21806     0F27                     u9940:
 21807     0F27                     l13115:
 21808                           
 21809                           ;mcc_generated_files/rn487x/rn487x.c: 146:                 status = 0;
 21810     0F27  01F6               	clrf	RN487X_ReadDefaultResponse@status
 21811     0F28  2F33               	goto	l13125
 21812     0F29                     l13117:
 21813                           
 21814                           ;mcc_generated_files/rn487x/rn487x.c: 151:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 152:             return status;
 21815     0F29  3000               	movlw	0
 21816     0F2A  2F73               	goto	l908
 21817     0F2B                     l13123:
 21818     0F2B  0873               	movf	RN487X_ReadDefaultResponse@resp,w
 21819                           
 21820                           ; Switch size 1, requested type "simple"
 21821                           ; Number of cases is 2, Range of values is 65 to 69
 21822                           ; switch strategies available:
 21823                           ; Name         Instructions Cycles
 21824                           ; simple_byte            7     4 (average)
 21825                           ; direct_byte           19     9 (fixed)
 21826                           ; jumptable            263     9 (fixed)
 21827                           ;	Chosen strategy is simple_byte
 21828     0F2C  3A41               	xorlw	65	; case 65
 21829     0F2D  1903               	skipnz
 21830     0F2E  2F0C               	goto	l13105
 21831     0F2F  3A04               	xorlw	4	; case 69
 21832     0F30  1903               	skipnz
 21833     0F31  2F1B               	goto	l13111
 21834     0F32  2F29               	goto	l13117
 21835     0F33                     l13125:
 21836                           
 21837                           ;mcc_generated_files/rn487x/rn487x.c: 157:     RN487X.Read();
 21838     0F33  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21839     0F34  0084               	movwf	4
 21840     0F35  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21841     0F36  0085               	movwf	5
 21842     0F37  3F01               	moviw [1]fsr0
 21843     0F38  008A               	movwf	10
 21844     0F39  3F00               	moviw [0]fsr0
 21845     0F3A  000A               	callw
 21846     0F3B  318E               	pagesel	$
 21847                           
 21848                           ;mcc_generated_files/rn487x/rn487x.c: 158:     RN487X.Read();
 21849     0F3C  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21850     0F3D  0084               	movwf	4
 21851     0F3E  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21852     0F3F  0085               	movwf	5
 21853     0F40  3F01               	moviw [1]fsr0
 21854     0F41  008A               	movwf	10
 21855     0F42  3F00               	moviw [0]fsr0
 21856     0F43  000A               	callw
 21857     0F44  318E               	pagesel	$
 21858                           
 21859                           ;mcc_generated_files/rn487x/rn487x.c: 161:     RN487X.Read();
 21860     0F45  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21861     0F46  0084               	movwf	4
 21862     0F47  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21863     0F48  0085               	movwf	5
 21864     0F49  3F01               	moviw [1]fsr0
 21865     0F4A  008A               	movwf	10
 21866     0F4B  3F00               	moviw [0]fsr0
 21867     0F4C  000A               	callw
 21868     0F4D  318E               	pagesel	$
 21869                           
 21870                           ;mcc_generated_files/rn487x/rn487x.c: 162:     RN487X.Read();
 21871     0F4E  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21872     0F4F  0084               	movwf	4
 21873     0F50  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21874     0F51  0085               	movwf	5
 21875     0F52  3F01               	moviw [1]fsr0
 21876     0F53  008A               	movwf	10
 21877     0F54  3F00               	moviw [0]fsr0
 21878     0F55  000A               	callw
 21879     0F56  318E               	pagesel	$
 21880                           
 21881                           ;mcc_generated_files/rn487x/rn487x.c: 163:     RN487X.Read();
 21882     0F57  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21883     0F58  0084               	movwf	4
 21884     0F59  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21885     0F5A  0085               	movwf	5
 21886     0F5B  3F01               	moviw [1]fsr0
 21887     0F5C  008A               	movwf	10
 21888     0F5D  3F00               	moviw [0]fsr0
 21889     0F5E  000A               	callw
 21890     0F5F  318E               	pagesel	$
 21891                           
 21892                           ;mcc_generated_files/rn487x/rn487x.c: 164:     RN487X.Read();
 21893     0F60  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21894     0F61  0084               	movwf	4
 21895     0F62  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21896     0F63  0085               	movwf	5
 21897     0F64  3F01               	moviw [1]fsr0
 21898     0F65  008A               	movwf	10
 21899     0F66  3F00               	moviw [0]fsr0
 21900     0F67  000A               	callw
 21901     0F68  318E               	pagesel	$
 21902                           
 21903                           ;mcc_generated_files/rn487x/rn487x.c: 165:     RN487X.Read();
 21904     0F69  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21905     0F6A  0084               	movwf	4
 21906     0F6B  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21907     0F6C  0085               	movwf	5
 21908     0F6D  3F01               	moviw [1]fsr0
 21909     0F6E  008A               	movwf	10
 21910     0F6F  3F00               	moviw [0]fsr0
 21911     0F70  000A               	callw
 21912     0F71  318E               	pagesel	$
 21913     0F72                     l13127:
 21914                           
 21915                           ;mcc_generated_files/rn487x/rn487x.c: 167:     return status;
 21916     0F72  0876               	movf	RN487X_ReadDefaultResponse@status,w
 21917     0F73                     l908:
 21918     0F73  0008               	return
 21919     0F74                     __end_of_RN487X_ReadDefaultResponse:
 21920                           
 21921                           	psect	text76
 21922     1310                     __ptext76:	
 21923 ;; *************** function _RN487X_EnterDataMode *****************
 21924 ;; Defined at:
 21925 ;;		line 208 in file "mcc_generated_files/rn487x/rn487x.c"
 21926 ;; Parameters:    Size  Location     Type
 21927 ;;		None
 21928 ;; Auto vars:     Size  Location     Type
 21929 ;;		None
 21930 ;; Return value:  Size  Location     Type
 21931 ;;                  1    wreg      _Bool 
 21932 ;; Registers used:
 21933 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21934 ;; Tracked objects:
 21935 ;;		On entry : 0/0
 21936 ;;		On exit  : 0/0
 21937 ;;		Unchanged: 0/0
 21938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21943 ;;Total ram usage:        0 bytes
 21944 ;; Hardware stack levels used: 1
 21945 ;; Hardware stack levels required when called: 7
 21946 ;; This function calls:
 21947 ;;		_RN487X_ReadMsg
 21948 ;;		_RN487X_SendCmd
 21949 ;; This function is called by:
 21950 ;;		_LIGHTBLUE_UpdateErrorLed
 21951 ;; This function uses a non-reentrant model
 21952 ;;
 21953                           
 21954     1310                     _RN487X_EnterDataMode:	
 21955                           ;psect for function _RN487X_EnterDataMode
 21956                           
 21957     1310                     l13255:	
 21958                           ;incstack = 0
 21959                           ; Regs used in _RN487X_EnterDataMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21960                           
 21961                           
 21962                           ;mcc_generated_files/rn487x/rn487x.c: 210:     const uint8_t cmdPrompt[] = {'E', 'N', 'D
      +                          ', '\r', '\n'};;mcc_generated_files/rn487x/rn487x.c: 212:     cmdBuf[0] = '-';
 21963     1310  302D               	movlw	45
 21964     1311  0143               	movlb	3	; select bank3
 21965     1312  00A0               	movwf	_cmdBuf^(0+384)
 21966                           
 21967                           ;mcc_generated_files/rn487x/rn487x.c: 213:     cmdBuf[1] = '-';
 21968     1313  302D               	movlw	45
 21969     1314  00A1               	movwf	(_cmdBuf^(0+384)+1)
 21970                           
 21971                           ;mcc_generated_files/rn487x/rn487x.c: 214:     cmdBuf[2] = '-';
 21972     1315  302D               	movlw	45
 21973     1316  00A2               	movwf	(_cmdBuf^(0+384)+2)
 21974                           
 21975                           ;mcc_generated_files/rn487x/rn487x.c: 215:     cmdBuf[3] = '\r';
 21976     1317  300D               	movlw	13
 21977     1318  00A3               	movwf	(_cmdBuf^(0+384)+3)
 21978                           
 21979                           ;mcc_generated_files/rn487x/rn487x.c: 216:     cmdBuf[4] = '\n';
 21980     1319  300A               	movlw	10
 21981     131A  00A4               	movwf	(_cmdBuf^(0+384)+4)
 21982     131B                     l13257:
 21983                           
 21984                           ;mcc_generated_files/rn487x/rn487x.c: 218:     RN487X_SendCmd(cmdBuf, 5);
 21985     131B  3005               	movlw	5
 21986     131C  00F7               	movwf	RN487X_SendCmd@cmdLen
 21987     131D  30A0               	movlw	(low (_cmdBuf| (0+256)))& (0+255)
 21988     131E  3196  26D2  3193   	fcall	_RN487X_SendCmd
 21989     1321                     l13259:
 21990                           
 21991                           ;mcc_generated_files/rn487x/rn487x.c: 220:     return RN487X_ReadMsg(cmdPrompt, sizeof (
      +                          cmdPrompt));;	Return value of _RN487X_EnterDataMode is never used
 21992     1321  3006               	movlw	low (RN487X_EnterDataMode@cmdPrompt| (0+32768))
 21993     1322  00F3               	movwf	RN487X_ReadMsg@expectedMsg
 21994     1323  30A0               	movlw	high (RN487X_EnterDataMode@cmdPrompt| (0+32768))
 21995     1324  00F4               	movwf	RN487X_ReadMsg@expectedMsg+1
 21996     1325  3005               	movlw	5
 21997     1326  00F5               	movwf	RN487X_ReadMsg@msgLen
 21998     1327  3195  25C3  3193   	fcall	_RN487X_ReadMsg
 21999     132A                     l926:
 22000     132A  0008               	return
 22001     132B                     __end_of_RN487X_EnterDataMode:
 22002                           
 22003                           	psect	text77
 22004     1202                     __ptext77:	
 22005 ;; *************** function _RN487X_EnterCmdMode *****************
 22006 ;; Defined at:
 22007 ;;		line 195 in file "mcc_generated_files/rn487x/rn487x.c"
 22008 ;; Parameters:    Size  Location     Type
 22009 ;;		None
 22010 ;; Auto vars:     Size  Location     Type
 22011 ;;		None
 22012 ;; Return value:  Size  Location     Type
 22013 ;;                  1    wreg      _Bool 
 22014 ;; Registers used:
 22015 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22016 ;; Tracked objects:
 22017 ;;		On entry : 0/0
 22018 ;;		On exit  : 0/0
 22019 ;;		Unchanged: 0/0
 22020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22025 ;;Total ram usage:        0 bytes
 22026 ;; Hardware stack levels used: 1
 22027 ;; Hardware stack levels required when called: 7
 22028 ;; This function calls:
 22029 ;;		_RN487X_ReadMsg
 22030 ;;		_RN487X_SendCmd
 22031 ;; This function is called by:
 22032 ;;		_LIGHTBLUE_UpdateErrorLed
 22033 ;; This function uses a non-reentrant model
 22034 ;;
 22035                           
 22036     1202                     _RN487X_EnterCmdMode:	
 22037                           ;psect for function _RN487X_EnterCmdMode
 22038                           
 22039     1202                     l13203:	
 22040                           ;incstack = 0
 22041                           ; Regs used in _RN487X_EnterCmdMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22042                           
 22043                           
 22044                           ;mcc_generated_files/rn487x/rn487x.c: 197:     const uint8_t cmdPrompt[] = {'C', 'M', 'D
      +                          ', '>', ' '};;mcc_generated_files/rn487x/rn487x.c: 199:     cmdBuf[0] = '$';
 22045     1202  3024               	movlw	36
 22046     1203  0143               	movlb	3	; select bank3
 22047     1204  00A0               	movwf	_cmdBuf^(0+384)
 22048                           
 22049                           ;mcc_generated_files/rn487x/rn487x.c: 200:     cmdBuf[1] = '$';
 22050     1205  3024               	movlw	36
 22051     1206  00A1               	movwf	(_cmdBuf^(0+384)+1)
 22052                           
 22053                           ;mcc_generated_files/rn487x/rn487x.c: 201:     cmdBuf[2] = '$';
 22054     1207  3024               	movlw	36
 22055     1208  00A2               	movwf	(_cmdBuf^(0+384)+2)
 22056     1209                     l13205:
 22057                           
 22058                           ;mcc_generated_files/rn487x/rn487x.c: 203:     RN487X_SendCmd(cmdBuf, 3);
 22059     1209  3003               	movlw	3
 22060     120A  00F7               	movwf	RN487X_SendCmd@cmdLen
 22061     120B  30A0               	movlw	(low (_cmdBuf| (0+256)))& (0+255)
 22062     120C  3196  26D2  3192   	fcall	_RN487X_SendCmd
 22063     120F                     l13207:
 22064                           
 22065                           ;mcc_generated_files/rn487x/rn487x.c: 205:     return RN487X_ReadMsg(cmdPrompt, sizeof (
      +                          cmdPrompt));;	Return value of _RN487X_EnterCmdMode is never used
 22066     120F  300B               	movlw	low (RN487X_EnterCmdMode@cmdPrompt| (0+32768))
 22067     1210  00F3               	movwf	RN487X_ReadMsg@expectedMsg
 22068     1211  30A0               	movlw	high (RN487X_EnterCmdMode@cmdPrompt| (0+32768))
 22069     1212  00F4               	movwf	RN487X_ReadMsg@expectedMsg+1
 22070     1213  3005               	movlw	5
 22071     1214  00F5               	movwf	RN487X_ReadMsg@msgLen
 22072     1215  3195  25C3  3192   	fcall	_RN487X_ReadMsg
 22073     1218                     l921:
 22074     1218  0008               	return
 22075     1219                     __end_of_RN487X_EnterCmdMode:
 22076                           
 22077                           	psect	text78
 22078     16D2                     __ptext78:	
 22079 ;; *************** function _RN487X_SendCmd *****************
 22080 ;; Defined at:
 22081 ;;		line 79 in file "mcc_generated_files/rn487x/rn487x.c"
 22082 ;; Parameters:    Size  Location     Type
 22083 ;;  cmd             1    wreg     PTR const unsigned char 
 22084 ;;		 -> cmdBuf(64), 
 22085 ;;  cmdLen          1    7[COMMON] unsigned char 
 22086 ;; Auto vars:     Size  Location     Type
 22087 ;;  cmd             1   10[COMMON] PTR const unsigned char 
 22088 ;;		 -> cmdBuf(64), 
 22089 ;;  index           1    9[COMMON] unsigned char 
 22090 ;; Return value:  Size  Location     Type
 22091 ;;                  1    wreg      void 
 22092 ;; Registers used:
 22093 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22094 ;; Tracked objects:
 22095 ;;		On entry : 0/0
 22096 ;;		On exit  : 0/0
 22097 ;;		Unchanged: 0/0
 22098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22099 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22100 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22101 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22102 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22103 ;;Total ram usage:        4 bytes
 22104 ;; Hardware stack levels used: 1
 22105 ;; Hardware stack levels required when called: 6
 22106 ;; This function calls:
 22107 ;;		_RN487X_Write
 22108 ;;		_RN487X_is_tx_done
 22109 ;; This function is called by:
 22110 ;;		_RN487X_EnterCmdMode
 22111 ;;		_RN487X_EnterDataMode
 22112 ;;		_RN487X_SetOutputs
 22113 ;;		_RN487X_GetCmd
 22114 ;;		_RN487X_GetInputsValues
 22115 ;;		_RN487X_RebootCmd
 22116 ;;		_RN487X_Disconnect
 22117 ;; This function uses a non-reentrant model
 22118 ;;
 22119                           
 22120     16D2                     _RN487X_SendCmd:	
 22121                           ;psect for function _RN487X_SendCmd
 22122                           
 22123                           
 22124                           ;incstack = 0
 22125                           ; Regs used in _RN487X_SendCmd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22126                           ;RN487X_SendCmd@cmd stored from wreg
 22127     16D2  00FA               	movwf	RN487X_SendCmd@cmd
 22128     16D3                     l13069:
 22129                           
 22130                           ;mcc_generated_files/rn487x/rn487x.c: 79: void RN487X_SendCmd(const uint8_t *cmd, uint8_
      +                          t cmdLen);mcc_generated_files/rn487x/rn487x.c: 80: {;mcc_generated_files/rn487x/rn487x.c
      +                          : 81:     uint8_t index = 0;
 22131     16D3  01F9               	clrf	RN487X_SendCmd@index
 22132                           
 22133                           ;mcc_generated_files/rn487x/rn487x.c: 83:     while (index < cmdLen)
 22134     16D4  2EF9               	goto	l13077
 22135     16D5                     l13071:
 22136                           
 22137                           ;mcc_generated_files/rn487x/rn487x.c: 84:     {;mcc_generated_files/rn487x/rn487x.c: 85:
      +                                   if (RN487X.TransmitDone())
 22138     16D5  306C               	movlw	low ((_RN487X+4)| (0+32768))
 22139     16D6  0084               	movwf	4
 22140     16D7  3098               	movlw	high ((_RN487X+4)| (0+32768))
 22141     16D8  0085               	movwf	5
 22142     16D9  3F01               	moviw [1]fsr0
 22143     16DA  008A               	movwf	10
 22144     16DB  3F00               	moviw [0]fsr0
 22145     16DC  000A               	callw
 22146     16DD  3196               	pagesel	$
 22147     16DE  3A00               	xorlw	0
 22148     16DF  1903               	skipnz
 22149     16E0  2EE2               	goto	u9871
 22150     16E1  2EE3               	goto	u9870
 22151     16E2                     u9871:
 22152     16E2  2EF9               	goto	l13077
 22153     16E3                     u9870:
 22154     16E3                     l13073:
 22155                           
 22156                           ;mcc_generated_files/rn487x/rn487x.c: 86:         {;mcc_generated_files/rn487x/rn487x.c:
      +                           87:             RN487X.Write(cmd[index]);
 22157     16E3  0879               	movf	RN487X_SendCmd@index,w
 22158     16E4  077A               	addwf	RN487X_SendCmd@cmd,w
 22159     16E5  00F8               	movwf	??_RN487X_SendCmd
 22160     16E6  0878               	movf	??_RN487X_SendCmd,w
 22161     16E7  0086               	movwf	6
 22162     16E8  3001               	movlw	1	; select bank2/3
 22163     16E9  0087               	movwf	7
 22164     16EA  0801               	movf	1,w
 22165     16EB  00F6               	movwf	RN487X_Write@txData
 22166     16EC  3068               	movlw	low (_RN487X| (0+32768))
 22167     16ED  0084               	movwf	4
 22168     16EE  3098               	movlw	high (_RN487X| (0+32768))
 22169     16EF  0085               	movwf	5
 22170     16F0  3F01               	moviw [1]fsr0
 22171     16F1  008A               	movwf	10
 22172     16F2  3F00               	moviw [0]fsr0
 22173     16F3  000A               	callw
 22174     16F4  3196               	pagesel	$
 22175     16F5                     l13075:
 22176                           
 22177                           ;mcc_generated_files/rn487x/rn487x.c: 88:             index++;
 22178     16F5  3001               	movlw	1
 22179     16F6  00F8               	movwf	??_RN487X_SendCmd
 22180     16F7  0878               	movf	??_RN487X_SendCmd,w
 22181     16F8  07F9               	addwf	RN487X_SendCmd@index,f
 22182     16F9                     l13077:
 22183                           
 22184                           ;mcc_generated_files/rn487x/rn487x.c: 83:     while (index < cmdLen)
 22185     16F9  0877               	movf	RN487X_SendCmd@cmdLen,w
 22186     16FA  0279               	subwf	RN487X_SendCmd@index,w
 22187     16FB  1C03               	skipc
 22188     16FC  2EFE               	goto	u9881
 22189     16FD  2EFF               	goto	u9880
 22190     16FE                     u9881:
 22191     16FE  2ED5               	goto	l13071
 22192     16FF                     u9880:
 22193     16FF                     l886:
 22194     16FF  0008               	return
 22195     1700                     __end_of_RN487X_SendCmd:
 22196                           
 22197                           	psect	text79
 22198     1FAC                     __ptext79:	
 22199 ;; *************** function _RN487X_is_tx_done *****************
 22200 ;; Defined at:
 22201 ;;		line 262 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 22202 ;; Parameters:    Size  Location     Type
 22203 ;;		None
 22204 ;; Auto vars:     Size  Location     Type
 22205 ;;		None
 22206 ;; Return value:  Size  Location     Type
 22207 ;;                  1    wreg      _Bool 
 22208 ;; Registers used:
 22209 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 22210 ;; Tracked objects:
 22211 ;;		On entry : 0/0
 22212 ;;		On exit  : 0/0
 22213 ;;		Unchanged: 0/0
 22214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22219 ;;Total ram usage:        0 bytes
 22220 ;; Hardware stack levels used: 1
 22221 ;; Hardware stack levels required when called: 5
 22222 ;; This function calls:
 22223 ;;		_EUSART1_is_tx_done
 22224 ;;		_EUSART2_is_tx_done
 22225 ;; This function is called by:
 22226 ;;		_RN487X_SendCmd
 22227 ;; This function uses a non-reentrant model
 22228 ;;
 22229                           
 22230     1FAC                     _RN487X_is_tx_done:	
 22231                           ;psect for function _RN487X_is_tx_done
 22232                           
 22233     1FAC                     l13039:	
 22234                           ;incstack = 0
 22235                           ; Regs used in _RN487X_is_tx_done: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 22236                           
 22237                           
 22238                           ;mcc_generated_files/rn487x/rn487x_interface.c: 264:     return uart[UART_BLE].TransmitD
      +                          one();
 22239     1FAC  3022               	movlw	low ((_uart+34)| (0+32768))
 22240     1FAD  0084               	movwf	4
 22241     1FAE  3098               	movlw	high ((_uart+34)| (0+32768))
 22242     1FAF  0085               	movwf	5
 22243     1FB0  3F01               	moviw [1]fsr0
 22244     1FB1  008A               	movwf	10
 22245     1FB2  3F00               	moviw [0]fsr0
 22246     1FB3  000A               	callw
 22247     1FB4  319F               	pagesel	$
 22248     1FB5                     l792:
 22249     1FB5  0008               	return
 22250     1FB6                     __end_of_RN487X_is_tx_done:
 22251                           
 22252                           	psect	text80
 22253     1EA8                     __ptext80:	
 22254 ;; *************** function _EUSART1_is_tx_done *****************
 22255 ;; Defined at:
 22256 ;;		line 142 in file "mcc_generated_files/eusart1.c"
 22257 ;; Parameters:    Size  Location     Type
 22258 ;;		None
 22259 ;; Auto vars:     Size  Location     Type
 22260 ;;		None
 22261 ;; Return value:  Size  Location     Type
 22262 ;;                  1    wreg      _Bool 
 22263 ;; Registers used:
 22264 ;;		wreg, status,2, status,0
 22265 ;; Tracked objects:
 22266 ;;		On entry : 0/0
 22267 ;;		On exit  : 0/0
 22268 ;;		Unchanged: 0/0
 22269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22274 ;;Total ram usage:        0 bytes
 22275 ;; Hardware stack levels used: 1
 22276 ;; Hardware stack levels required when called: 4
 22277 ;; This function calls:
 22278 ;;		Nothing
 22279 ;; This function is called by:
 22280 ;;		_RN487X_is_tx_done
 22281 ;; This function uses a non-reentrant model
 22282 ;;
 22283                           
 22284     1EA8                     _EUSART1_is_tx_done:	
 22285                           ;psect for function _EUSART1_is_tx_done
 22286                           
 22287     1EA8                     l12979:	
 22288                           ;incstack = 0
 22289                           ; Regs used in _EUSART1_is_tx_done: [wreg+status,2+status,0]
 22290                           
 22291                           
 22292                           ;mcc_generated_files/eusart1.c: 144:     return TX1STAbits.TRMT;
 22293     1EA8  0142               	movlb	2	; select bank2
 22294     1EA9  0C1E               	rrf	30,w	;volatile
 22295     1EAA  3901               	andlw	1
 22296     1EAB                     l1204:
 22297     1EAB  0008               	return
 22298     1EAC                     __end_of_EUSART1_is_tx_done:
 22299                           
 22300                           	psect	text81
 22301     1EA4                     __ptext81:	
 22302 ;; *************** function _EUSART2_is_tx_done *****************
 22303 ;; Defined at:
 22304 ;;		line 142 in file "mcc_generated_files/eusart2.c"
 22305 ;; Parameters:    Size  Location     Type
 22306 ;;		None
 22307 ;; Auto vars:     Size  Location     Type
 22308 ;;		None
 22309 ;; Return value:  Size  Location     Type
 22310 ;;                  1    wreg      _Bool 
 22311 ;; Registers used:
 22312 ;;		wreg, status,2, status,0
 22313 ;; Tracked objects:
 22314 ;;		On entry : 0/0
 22315 ;;		On exit  : 0/0
 22316 ;;		Unchanged: 0/0
 22317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22322 ;;Total ram usage:        0 bytes
 22323 ;; Hardware stack levels used: 1
 22324 ;; Hardware stack levels required when called: 4
 22325 ;; This function calls:
 22326 ;;		Nothing
 22327 ;; This function is called by:
 22328 ;;		_RN487X_is_tx_done
 22329 ;; This function uses a non-reentrant model
 22330 ;;
 22331                           
 22332     1EA4                     _EUSART2_is_tx_done:	
 22333                           ;psect for function _EUSART2_is_tx_done
 22334                           
 22335     1EA4                     l12935:	
 22336                           ;incstack = 0
 22337                           ; Regs used in _EUSART2_is_tx_done: [wreg+status,2+status,0]
 22338                           
 22339                           
 22340                           ;mcc_generated_files/eusart2.c: 144:     return TX2STAbits.TRMT;
 22341     1EA4  0154               	movlb	20	; select bank20
 22342     1EA5  0C1E               	rrf	30,w	;volatile
 22343     1EA6  3901               	andlw	1
 22344     1EA7                     l1060:
 22345     1EA7  0008               	return
 22346     1EA8                     __end_of_EUSART2_is_tx_done:
 22347                           
 22348                           	psect	text82
 22349     15C3                     __ptext82:	
 22350 ;; *************** function _RN487X_ReadMsg *****************
 22351 ;; Defined at:
 22352 ;;		line 108 in file "mcc_generated_files/rn487x/rn487x.c"
 22353 ;; Parameters:    Size  Location     Type
 22354 ;;  expectedMsg     2    3[COMMON] PTR const unsigned char 
 22355 ;;		 -> RN487X_RebootCmd@reboot(11), RN487X_GetInputsValues@ioValue(2), RN487X_EnterDataMode@cmdPrompt(5), RN487X_EnterC
      +mdMode@cmdPrompt(5), 
 22356 ;;  msgLen          1    5[COMMON] unsigned char 
 22357 ;; Auto vars:     Size  Location     Type
 22358 ;;  index           1    9[COMMON] unsigned char 
 22359 ;;  resp            1    8[COMMON] unsigned char 
 22360 ;; Return value:  Size  Location     Type
 22361 ;;                  1    wreg      _Bool 
 22362 ;; Registers used:
 22363 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22364 ;; Tracked objects:
 22365 ;;		On entry : 0/0
 22366 ;;		On exit  : 0/0
 22367 ;;		Unchanged: 0/0
 22368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22369 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22370 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22371 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22372 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22373 ;;Total ram usage:        7 bytes
 22374 ;; Hardware stack levels used: 1
 22375 ;; Hardware stack levels required when called: 6
 22376 ;; This function calls:
 22377 ;;		_RN487X_Read@rn487x_interface$F1381
 22378 ;; This function is called by:
 22379 ;;		_RN487X_EnterCmdMode
 22380 ;;		_RN487X_EnterDataMode
 22381 ;;		_RN487X_GetInputsValues
 22382 ;;		_RN487X_RebootCmd
 22383 ;; This function uses a non-reentrant model
 22384 ;;
 22385                           
 22386     15C3                     _RN487X_ReadMsg:	
 22387                           ;psect for function _RN487X_ReadMsg
 22388                           
 22389     15C3                     l13079:	
 22390                           ;incstack = 0
 22391                           ; Regs used in _RN487X_ReadMsg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22392                           
 22393                           
 22394                           ;mcc_generated_files/rn487x/rn487x.c: 108: _Bool RN487X_ReadMsg(const uint8_t *expectedM
      +                          sg, uint8_t msgLen);mcc_generated_files/rn487x/rn487x.c: 109: {;mcc_generated_files/rn48
      +                          7x/rn487x.c: 110:     uint8_t index;;mcc_generated_files/rn487x/rn487x.c: 111:     uint8
      +                          _t resp;;mcc_generated_files/rn487x/rn487x.c: 113:     for (index = 0; index < msgLen; i
      +                          ndex++)
 22395     15C3  01F9               	clrf	RN487X_ReadMsg@index
 22396     15C4  2DE6               	goto	l13091
 22397     15C5                     l13081:
 22398                           
 22399                           ;mcc_generated_files/rn487x/rn487x.c: 114:     {;mcc_generated_files/rn487x/rn487x.c: 11
      +                          5:         resp = RN487X.Read();
 22400     15C5  306A               	movlw	low ((_RN487X+2)| (0+32768))
 22401     15C6  0084               	movwf	4
 22402     15C7  3098               	movlw	high ((_RN487X+2)| (0+32768))
 22403     15C8  0085               	movwf	5
 22404     15C9  3F01               	moviw [1]fsr0
 22405     15CA  008A               	movwf	10
 22406     15CB  3F00               	moviw [0]fsr0
 22407     15CC  000A               	callw
 22408     15CD  3195               	pagesel	$
 22409     15CE  00F8               	movwf	RN487X_ReadMsg@resp
 22410     15CF                     l13083:
 22411                           
 22412                           ;mcc_generated_files/rn487x/rn487x.c: 116:         if (resp != expectedMsg[index])
 22413     15CF  0874               	movf	RN487X_ReadMsg@expectedMsg+1,w
 22414     15D0  00F7               	movwf	??_RN487X_ReadMsg+1
 22415     15D1  0873               	movf	RN487X_ReadMsg@expectedMsg,w
 22416     15D2  00F6               	movwf	??_RN487X_ReadMsg
 22417     15D3  0879               	movf	RN487X_ReadMsg@index,w
 22418     15D4  0776               	addwf	??_RN487X_ReadMsg,w
 22419     15D5  0084               	movwf	4
 22420     15D6  0877               	movf	??_RN487X_ReadMsg+1,w
 22421     15D7  1803               	skipnc
 22422     15D8  0A77               	incf	??_RN487X_ReadMsg+1,w
 22423     15D9  0085               	movwf	5
 22424     15DA  0800               	movf	0,w	;code access
 22425     15DB  0678               	xorwf	RN487X_ReadMsg@resp,w
 22426     15DC  1903               	skipnz
 22427     15DD  2DDF               	goto	u9891
 22428     15DE  2DE0               	goto	u9890
 22429     15DF                     u9891:
 22430     15DF  2DE2               	goto	l13089
 22431     15E0                     u9890:
 22432     15E0                     l13085:
 22433                           
 22434                           ;mcc_generated_files/rn487x/rn487x.c: 117:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 118:             return 0;
 22435     15E0  3000               	movlw	0
 22436     15E1  2DED               	goto	l897
 22437     15E2                     l13089:
 22438                           
 22439                           ;mcc_generated_files/rn487x/rn487x.c: 120:     }
 22440     15E2  3001               	movlw	1
 22441     15E3  00F6               	movwf	??_RN487X_ReadMsg
 22442     15E4  0876               	movf	??_RN487X_ReadMsg,w
 22443     15E5  07F9               	addwf	RN487X_ReadMsg@index,f
 22444     15E6                     l13091:
 22445     15E6  0875               	movf	RN487X_ReadMsg@msgLen,w
 22446     15E7  0279               	subwf	RN487X_ReadMsg@index,w
 22447     15E8  1C03               	skipc
 22448     15E9  2DEB               	goto	u9901
 22449     15EA  2DEC               	goto	u9900
 22450     15EB                     u9901:
 22451     15EB  2DC5               	goto	l13081
 22452     15EC                     u9900:
 22453     15EC                     l13093:
 22454                           
 22455                           ;mcc_generated_files/rn487x/rn487x.c: 122:     return 1;
 22456     15EC  3001               	movlw	1
 22457     15ED                     l897:
 22458     15ED  0008               	return
 22459     15EE                     __end_of_RN487X_ReadMsg:
 22460                           
 22461                           	psect	text83
 22462     1FA2                     __ptext83:	
 22463 ;; *************** function _RN487X_Read@rn487x_interface$F1381 *****************
 22464 ;; Defined at:
 22465 ;;		line 257 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 22466 ;; Parameters:    Size  Location     Type
 22467 ;;		None
 22468 ;; Auto vars:     Size  Location     Type
 22469 ;;		None
 22470 ;; Return value:  Size  Location     Type
 22471 ;;                  1    wreg      unsigned char 
 22472 ;; Registers used:
 22473 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22474 ;; Tracked objects:
 22475 ;;		On entry : 0/0
 22476 ;;		On exit  : 0/0
 22477 ;;		Unchanged: 0/0
 22478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22483 ;;Total ram usage:        0 bytes
 22484 ;; Hardware stack levels used: 1
 22485 ;; Hardware stack levels required when called: 5
 22486 ;; This function calls:
 22487 ;;		_EUSART1_Read
 22488 ;;		_EUSART2_Read
 22489 ;; This function is called by:
 22490 ;;		_RN487X_ReadMsg
 22491 ;;		_RN487X_ReadDefaultResponse
 22492 ;;		_RN487X_FilterData
 22493 ;;		_RN487X_Init
 22494 ;;		_RN487X_GetCmd
 22495 ;;		_RN487X_WaitForMsg
 22496 ;; This function uses a non-reentrant model
 22497 ;;
 22498                           
 22499     1FA2                     _RN487X_Read@rn487x_interface$F1381:	
 22500                           ;psect for function _RN487X_Read@rn487x_interface$F1381
 22501                           
 22502     1FA2                     l13035:	
 22503                           ;incstack = 0
 22504                           ; Regs used in _RN487X_Read@rn487x_interface$F1381: [wreg-fsr1h+status,2+status,0+pclath
      +                          +cstack]
 22505                           
 22506                           
 22507                           ;mcc_generated_files/rn487x/rn487x_interface.c: 259:     return uart[UART_BLE].Read();
 22508     1FA2  3014               	movlw	low ((_uart+20)| (0+32768))
 22509     1FA3  0084               	movwf	4
 22510     1FA4  3098               	movlw	high ((_uart+20)| (0+32768))
 22511     1FA5  0085               	movwf	5
 22512     1FA6  3F01               	moviw [1]fsr0
 22513     1FA7  008A               	movwf	10
 22514     1FA8  3F00               	moviw [0]fsr0
 22515     1FA9  000A               	callw
 22516     1FAA  319F               	pagesel	$
 22517     1FAB                     l789:
 22518     1FAB  0008               	return
 22519     1FAC                     __end_of_RN487X_Read@rn487x_interface$F1381:
 22520                           
 22521                           	psect	text84
 22522     154B                     __ptext84:	
 22523 ;; *************** function _EUSART1_Read *****************
 22524 ;; Defined at:
 22525 ;;		line 151 in file "mcc_generated_files/eusart1.c"
 22526 ;; Parameters:    Size  Location     Type
 22527 ;;		None
 22528 ;; Auto vars:     Size  Location     Type
 22529 ;;  readValue       1    2[COMMON] unsigned char 
 22530 ;; Return value:  Size  Location     Type
 22531 ;;                  1    wreg      unsigned char 
 22532 ;; Registers used:
 22533 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 22534 ;; Tracked objects:
 22535 ;;		On entry : 0/0
 22536 ;;		On exit  : 0/0
 22537 ;;		Unchanged: 0/0
 22538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22540 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22541 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22542 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22543 ;;Total ram usage:        2 bytes
 22544 ;; Hardware stack levels used: 1
 22545 ;; Hardware stack levels required when called: 4
 22546 ;; This function calls:
 22547 ;;		Nothing
 22548 ;; This function is called by:
 22549 ;;		_getch
 22550 ;;		_RN487X_Read@rn487x_interface$F1381
 22551 ;;		_RN487X_Example_TransparentUart
 22552 ;;		_main
 22553 ;; This function uses a non-reentrant model
 22554 ;;
 22555                           
 22556     154B                     _EUSART1_Read:	
 22557                           ;psect for function _EUSART1_Read
 22558                           
 22559     154B                     l12983:	
 22560                           ;incstack = 0
 22561                           ; Regs used in _EUSART1_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 22562                           
 22563     154B                     l12985:	
 22564                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 22565                           
 22566                           
 22567                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 22568     154B  0140               	movlb	0	; select bank0
 22569     154C  0858               	movf	_eusart1RxCount,w	;volatile
 22570     154D  1903               	btfsc	3,2
 22571     154E  2D50               	goto	u9771
 22572     154F  2D51               	goto	u9770
 22573     1550                     u9771:
 22574     1550  2D4B               	goto	l12985
 22575     1551                     u9770:
 22576     1551                     l12987:
 22577                           
 22578                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 22579     1551  0859               	movf	_eusart1RxTail,w	;volatile
 22580     1552  3EBD               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 22581     1553  0086               	movwf	6
 22582     1554  0187               	clrf	7
 22583     1555  0801               	movf	1,w
 22584     1556  00D7               	movwf	_eusart1RxLastError	;volatile
 22585                           
 22586                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
 22587     1557  0859               	movf	_eusart1RxTail,w
 22588     1558  3E44               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 22589     1559  0086               	movwf	6
 22590     155A  3001               	movlw	1	; select bank2/3
 22591     155B  0087               	movwf	7
 22592     155C  0801               	movf	1,w
 22593     155D  00F2               	movwf	EUSART1_Read@readValue
 22594     155E                     l12989:
 22595     155E  3001               	movlw	1
 22596     155F  00F1               	movwf	??_EUSART1_Read
 22597     1560  0871               	movf	??_EUSART1_Read,w
 22598     1561  07D9               	addwf	_eusart1RxTail,f	;volatile
 22599     1562                     l12991:
 22600                           
 22601                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 22602     1562  3008               	movlw	8
 22603     1563  0259               	subwf	_eusart1RxTail,w	;volatile
 22604     1564  1C03               	skipc
 22605     1565  2D67               	goto	u9781
 22606     1566  2D68               	goto	u9780
 22607     1567                     u9781:
 22608     1567  2D69               	goto	l12995
 22609     1568                     u9780:
 22610     1568                     l12993:
 22611                           
 22612                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
 22613     1568  01D9               	clrf	_eusart1RxTail	;volatile
 22614     1569                     l12995:
 22615                           
 22616                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
 22617     1569  014E               	movlb	14	; select bank14
 22618     156A  1299               	bcf	25,5	;volatile
 22619     156B                     l12997:
 22620                           
 22621                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
 22622     156B  3001               	movlw	1
 22623     156C  0140               	movlb	0	; select bank0
 22624     156D  02D8               	subwf	_eusart1RxCount,f	;volatile
 22625     156E                     l12999:
 22626                           
 22627                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
 22628     156E  014E               	movlb	14	; select bank14
 22629     156F  1699               	bsf	25,5	;volatile
 22630     1570                     l13001:
 22631                           
 22632                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
 22633     1570  0872               	movf	EUSART1_Read@readValue,w
 22634     1571                     l1214:
 22635     1571  0008               	return
 22636     1572                     __end_of_EUSART1_Read:
 22637                           
 22638                           	psect	text85
 22639     14D7                     __ptext85:	
 22640 ;; *************** function _EUSART2_Read *****************
 22641 ;; Defined at:
 22642 ;;		line 151 in file "mcc_generated_files/eusart2.c"
 22643 ;; Parameters:    Size  Location     Type
 22644 ;;		None
 22645 ;; Auto vars:     Size  Location     Type
 22646 ;;  readValue       1    2[COMMON] unsigned char 
 22647 ;; Return value:  Size  Location     Type
 22648 ;;                  1    wreg      unsigned char 
 22649 ;; Registers used:
 22650 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 22651 ;; Tracked objects:
 22652 ;;		On entry : 0/0
 22653 ;;		On exit  : 0/0
 22654 ;;		Unchanged: 0/0
 22655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22657 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22658 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22659 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22660 ;;Total ram usage:        2 bytes
 22661 ;; Hardware stack levels used: 1
 22662 ;; Hardware stack levels required when called: 4
 22663 ;; This function calls:
 22664 ;;		Nothing
 22665 ;; This function is called by:
 22666 ;;		_RN487X_Read@rn487x_interface$F1381
 22667 ;;		_RN487X_Example_TransparentUart
 22668 ;;		_main
 22669 ;; This function uses a non-reentrant model
 22670 ;;
 22671                           
 22672     14D7                     _EUSART2_Read:	
 22673                           ;psect for function _EUSART2_Read
 22674                           
 22675     14D7                     l12939:	
 22676                           ;incstack = 0
 22677                           ; Regs used in _EUSART2_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 22678                           
 22679     14D7                     l12941:	
 22680                           ;mcc_generated_files/eusart2.c: 155:     while(0 == eusart2RxCount)
 22681                           
 22682                           
 22683                           ;mcc_generated_files/eusart2.c: 155:     while(0 == eusart2RxCount)
 22684     14D7  0140               	movlb	0	; select bank0
 22685     14D8  085F               	movf	_eusart2RxCount,w	;volatile
 22686     14D9  1903               	btfsc	3,2
 22687     14DA  2CDC               	goto	u9721
 22688     14DB  2CDD               	goto	u9720
 22689     14DC                     u9721:
 22690     14DC  2CD7               	goto	l12941
 22691     14DD                     u9720:
 22692     14DD                     l12943:
 22693                           
 22694                           ;mcc_generated_files/eusart2.c: 159:     eusart2RxLastError = eusart2RxStatusBuffer[eusa
      +                          rt2RxTail];
 22695     14DD  0860               	movf	_eusart2RxTail,w	;volatile
 22696     14DE  3ECD               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 22697     14DF  0086               	movwf	6
 22698     14E0  0187               	clrf	7
 22699     14E1  0801               	movf	1,w
 22700     14E2  00DE               	movwf	_eusart2RxLastError	;volatile
 22701                           
 22702                           ;mcc_generated_files/eusart2.c: 161:     readValue = eusart2RxBuffer[eusart2RxTail++];
 22703     14E3  0860               	movf	_eusart2RxTail,w
 22704     14E4  3ED5               	addlw	(low (_eusart2RxBuffer| 0))& (0+255)
 22705     14E5  0086               	movwf	6
 22706     14E6  0187               	clrf	7
 22707     14E7  0801               	movf	1,w
 22708     14E8  00F2               	movwf	EUSART2_Read@readValue
 22709     14E9                     l12945:
 22710     14E9  3001               	movlw	1
 22711     14EA  00F1               	movwf	??_EUSART2_Read
 22712     14EB  0871               	movf	??_EUSART2_Read,w
 22713     14EC  07E0               	addwf	_eusart2RxTail,f	;volatile
 22714     14ED                     l12947:
 22715                           
 22716                           ;mcc_generated_files/eusart2.c: 162:     if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
 22717     14ED  3008               	movlw	8
 22718     14EE  0260               	subwf	_eusart2RxTail,w	;volatile
 22719     14EF  1C03               	skipc
 22720     14F0  2CF2               	goto	u9731
 22721     14F1  2CF3               	goto	u9730
 22722     14F2                     u9731:
 22723     14F2  2CF4               	goto	l12951
 22724     14F3                     u9730:
 22725     14F3                     l12949:
 22726                           
 22727                           ;mcc_generated_files/eusart2.c: 163:     {;mcc_generated_files/eusart2.c: 164:         e
      +                          usart2RxTail = 0;
 22728     14F3  01E0               	clrf	_eusart2RxTail	;volatile
 22729     14F4                     l12951:
 22730                           
 22731                           ;mcc_generated_files/eusart2.c: 166:     PIE3bits.RC2IE = 0;
 22732     14F4  014E               	movlb	14	; select bank14
 22733     14F5  1399               	bcf	25,7	;volatile
 22734     14F6                     l12953:
 22735                           
 22736                           ;mcc_generated_files/eusart2.c: 167:     eusart2RxCount--;
 22737     14F6  3001               	movlw	1
 22738     14F7  0140               	movlb	0	; select bank0
 22739     14F8  02DF               	subwf	_eusart2RxCount,f	;volatile
 22740     14F9                     l12955:
 22741                           
 22742                           ;mcc_generated_files/eusart2.c: 168:     PIE3bits.RC2IE = 1;
 22743     14F9  014E               	movlb	14	; select bank14
 22744     14FA  1799               	bsf	25,7	;volatile
 22745     14FB                     l12957:
 22746                           
 22747                           ;mcc_generated_files/eusart2.c: 170:     return readValue;
 22748     14FB  0872               	movf	EUSART2_Read@readValue,w
 22749     14FC                     l1070:
 22750     14FC  0008               	return
 22751     14FD                     __end_of_EUSART2_Read:
 22752                           
 22753                           	psect	text86
 22754     1F6D                     __ptext86:	
 22755 ;; *************** function _RN487X_Delay *****************
 22756 ;; Defined at:
 22757 ;;		line 272 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 22758 ;; Parameters:    Size  Location     Type
 22759 ;;  delayCount      2    4[COMMON] unsigned short 
 22760 ;; Auto vars:     Size  Location     Type
 22761 ;;		None
 22762 ;; Return value:  Size  Location     Type
 22763 ;;                  1    wreg      void 
 22764 ;; Registers used:
 22765 ;;		wreg, status,2, status,0, pclath, cstack
 22766 ;; Tracked objects:
 22767 ;;		On entry : 0/0
 22768 ;;		On exit  : 0/0
 22769 ;;		Unchanged: 0/0
 22770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22771 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22774 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22775 ;;Total ram usage:        2 bytes
 22776 ;; Hardware stack levels used: 1
 22777 ;; Hardware stack levels required when called: 5
 22778 ;; This function calls:
 22779 ;;		_DELAY_milliseconds
 22780 ;; This function is called by:
 22781 ;;		_LIGHTBLUE_UpdateErrorLed
 22782 ;;		_RN487X_Init
 22783 ;; This function uses a non-reentrant model
 22784 ;;
 22785                           
 22786     1F6D                     _RN487X_Delay:	
 22787                           ;psect for function _RN487X_Delay
 22788                           
 22789     1F6D                     l13263:	
 22790                           ;incstack = 0
 22791                           ; Regs used in _RN487X_Delay: [wreg+status,2+status,0+pclath+cstack]
 22792                           
 22793                           
 22794                           ;mcc_generated_files/rn487x/rn487x_interface.c: 272: static __attribute__((inline)) void
      +                           RN487X_Delay(uint16_t delayCount);mcc_generated_files/rn487x/rn487x_interface.c: 273: {
      +                          ;mcc_generated_files/rn487x/rn487x_interface.c: 274:     return DELAY_milliseconds(delay
      +                          Count);;	Return value of _RN487X_Delay is never used
 22795     1F6D  0875               	movf	RN487X_Delay@delayCount+1,w
 22796     1F6E  00F2               	movwf	DELAY_milliseconds@milliseconds+1
 22797     1F6F  0874               	movf	RN487X_Delay@delayCount,w
 22798     1F70  00F1               	movwf	DELAY_milliseconds@milliseconds
 22799     1F71  3191  21D6  319F   	fcall	_DELAY_milliseconds
 22800     1F74                     l798:
 22801     1F74  0008               	return
 22802     1F75                     __end_of_RN487X_Delay:
 22803                           
 22804                           	psect	text87
 22805     11D6                     __ptext87:	
 22806 ;; *************** function _DELAY_milliseconds *****************
 22807 ;; Defined at:
 22808 ;;		line 38 in file "mcc_generated_files/delay.c"
 22809 ;; Parameters:    Size  Location     Type
 22810 ;;  milliseconds    2    1[COMMON] unsigned short 
 22811 ;; Auto vars:     Size  Location     Type
 22812 ;;		None
 22813 ;; Return value:  Size  Location     Type
 22814 ;;                  1    wreg      void 
 22815 ;; Registers used:
 22816 ;;		wreg, status,2, status,0
 22817 ;; Tracked objects:
 22818 ;;		On entry : 0/0
 22819 ;;		On exit  : 0/0
 22820 ;;		Unchanged: 0/0
 22821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22822 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22824 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22825 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22826 ;;Total ram usage:        3 bytes
 22827 ;; Hardware stack levels used: 1
 22828 ;; Hardware stack levels required when called: 4
 22829 ;; This function calls:
 22830 ;;		Nothing
 22831 ;; This function is called by:
 22832 ;;		_RN487X_Delay
 22833 ;; This function uses a non-reentrant model
 22834 ;;
 22835                           
 22836     11D6                     _DELAY_milliseconds:	
 22837                           ;psect for function _DELAY_milliseconds
 22838                           
 22839     11D6                     l13059:	
 22840                           ;incstack = 0
 22841                           ; Regs used in _DELAY_milliseconds: [wreg+status,2+status,0]
 22842                           
 22843                           
 22844                           ;mcc_generated_files/delay.c: 39:     while(milliseconds--){
 22845     11D6  29DF               	goto	l13063
 22846     11D7                     l13061:
 22847                           
 22848                           ;mcc_generated_files/delay.c: 40:         _delay((unsigned long)((1)*(32000000/4000.0)))
      +                          ;
 22849     11D7  300B               	movlw	11
 22850     11D8  00F3               	movwf	??_DELAY_milliseconds
 22851     11D9  3062               	movlw	98
 22852     11DA                     u14107:
 22853     11DA  0B89               	decfsz	9,f
 22854     11DB  29DA               	goto	u14107
 22855     11DC  0BF3               	decfsz	??_DELAY_milliseconds,f
 22856     11DD  29DA               	goto	u14107
 22857     11DE  3200               	nop2
 22858     11DF                     l13063:
 22859                           
 22860                           ;mcc_generated_files/delay.c: 39:     while(milliseconds--){
 22861     11DF  3001               	movlw	1
 22862     11E0  02F1               	subwf	DELAY_milliseconds@milliseconds,f
 22863     11E1  3000               	movlw	0
 22864     11E2  3BF2               	subwfb	DELAY_milliseconds@milliseconds+1,f
 22865     11E3  0A71               	incf	DELAY_milliseconds@milliseconds,w
 22866     11E4  1D03               	skipz
 22867     11E5  29EA               	goto	u9851
 22868     11E6  0A72               	incf	DELAY_milliseconds@milliseconds+1,w
 22869     11E7  1D03               	btfss	3,2
 22870     11E8  29EA               	goto	u9851
 22871     11E9  29EB               	goto	u9850
 22872     11EA                     u9851:
 22873     11EA  29D7               	goto	l13061
 22874     11EB                     u9850:
 22875     11EB                     l1980:
 22876     11EB  0008               	return
 22877     11EC                     __end_of_DELAY_milliseconds:
 22878                           
 22879                           	psect	text88
 22880     14B1                     __ptext88:	
 22881 ;; *************** function _LIGHTBLUE_LedState *****************
 22882 ;; Defined at:
 22883 ;;		line 352 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 22884 ;; Parameters:    Size  Location     Type
 22885 ;;		None
 22886 ;; Auto vars:     Size  Location     Type
 22887 ;;  payload         3    0[BANK0 ] unsigned char [3]
 22888 ;;  led             1    3[BANK0 ] unsigned char 
 22889 ;; Return value:  Size  Location     Type
 22890 ;;                  1    wreg      void 
 22891 ;; Registers used:
 22892 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22893 ;; Tracked objects:
 22894 ;;		On entry : 0/0
 22895 ;;		On exit  : 0/0
 22896 ;;		Unchanged: 0/0
 22897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22899 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22901 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22902 ;;Total ram usage:        4 bytes
 22903 ;; Hardware stack levels used: 1
 22904 ;; Hardware stack levels required when called: 7
 22905 ;; This function calls:
 22906 ;;		_LIGHTBLUE_GetDataLedValue
 22907 ;;		_LIGHTBLUE_GetErrorLedValue
 22908 ;;		_LIGHTBLUE_SendPacket
 22909 ;;		_LIGHTBLUE_SplitByte
 22910 ;; This function is called by:
 22911 ;;		_main
 22912 ;; This function uses a non-reentrant model
 22913 ;;
 22914                           
 22915     14B1                     _LIGHTBLUE_LedState:	
 22916                           ;psect for function _LIGHTBLUE_LedState
 22917                           
 22918     14B1                     l14329:	
 22919                           ;incstack = 0
 22920                           ; Regs used in _LIGHTBLUE_LedState: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22921                           
 22922                           
 22923                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 353:     char payload[3];;mcc_gene
      +                          rated_files/application/LIGHTBLUE_service.c: 354:     uint8_t led;;mcc_generated_files/a
      +                          pplication/LIGHTBLUE_service.c: 356:     led = (0x00) + LIGHTBLUE_GetDataLedValue();
 22924     14B1  319F  2704  3194   	fcall	_LIGHTBLUE_GetDataLedValue
 22925     14B4  0140               	movlb	0	; select bank0
 22926     14B5  00A3               	movwf	LIGHTBLUE_LedState@led
 22927     14B6                     l14331:
 22928                           
 22929                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 358:     *payload = '\0';
 22930     14B6  01A0               	clrf	LIGHTBLUE_LedState@payload
 22931     14B7                     l14333:
 22932                           
 22933                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 359:     LIGHTBLUE_SplitByte(paylo
      +                          ad, led);
 22934     14B7  0823               	movf	LIGHTBLUE_LedState@led,w
 22935     14B8  00F6               	movwf	LIGHTBLUE_SplitByte@value
 22936     14B9  3020               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 22937     14BA  3197  2730  3194   	fcall	_LIGHTBLUE_SplitByte
 22938     14BD                     l14335:
 22939                           
 22940                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 361:     LIGHTBLUE_SendPacket(LED_
      +                          STATE_ID, payload);
 22941     14BD  3020               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 22942     14BE  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 22943     14BF  304C               	movlw	76
 22944     14C0  318F  2774  3194   	fcall	_LIGHTBLUE_SendPacket
 22945     14C3                     l14337:
 22946                           
 22947                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 363:     led = (0x10) + LIGHTBLUE_
      +                          GetErrorLedValue();
 22948     14C3  319E  26E8  3194   	fcall	_LIGHTBLUE_GetErrorLedValue
 22949     14C6  3E10               	addlw	16
 22950     14C7  0140               	movlb	0	; select bank0
 22951     14C8  00A3               	movwf	LIGHTBLUE_LedState@led
 22952                           
 22953                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 364:     *payload = '\0';
 22954     14C9  01A0               	clrf	LIGHTBLUE_LedState@payload
 22955     14CA                     l14339:
 22956                           
 22957                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 365:     LIGHTBLUE_SplitByte(paylo
      +                          ad, led);
 22958     14CA  0823               	movf	LIGHTBLUE_LedState@led,w
 22959     14CB  00F6               	movwf	LIGHTBLUE_SplitByte@value
 22960     14CC  3020               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 22961     14CD  3197  2730  3194   	fcall	_LIGHTBLUE_SplitByte
 22962     14D0                     l14341:
 22963                           
 22964                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 367:     LIGHTBLUE_SendPacket(LED_
      +                          STATE_ID, payload);
 22965     14D0  3020               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 22966     14D1  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 22967     14D2  304C               	movlw	76
 22968     14D3  318F  2774  3194   	fcall	_LIGHTBLUE_SendPacket
 22969     14D6                     l133:
 22970     14D6  0008               	return
 22971     14D7                     __end_of_LIGHTBLUE_LedState:
 22972                           
 22973                           	psect	text89
 22974     1EE8                     __ptext89:	
 22975 ;; *************** function _LIGHTBLUE_GetErrorLedValue *****************
 22976 ;; Defined at:
 22977 ;;		line 483 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 22978 ;; Parameters:    Size  Location     Type
 22979 ;;		None
 22980 ;; Auto vars:     Size  Location     Type
 22981 ;;		None
 22982 ;; Return value:  Size  Location     Type
 22983 ;;                  1    wreg      unsigned char 
 22984 ;; Registers used:
 22985 ;;		wreg, status,2, status,0
 22986 ;; Tracked objects:
 22987 ;;		On entry : 0/0
 22988 ;;		On exit  : 0/0
 22989 ;;		Unchanged: 0/0
 22990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22995 ;;Total ram usage:        0 bytes
 22996 ;; Hardware stack levels used: 1
 22997 ;; Hardware stack levels required when called: 4
 22998 ;; This function calls:
 22999 ;;		Nothing
 23000 ;; This function is called by:
 23001 ;;		_LIGHTBLUE_LedState
 23002 ;; This function uses a non-reentrant model
 23003 ;;
 23004                           
 23005     1EE8                     _LIGHTBLUE_GetErrorLedValue:	
 23006                           ;psect for function _LIGHTBLUE_GetErrorLedValue
 23007                           
 23008     1EE8                     l13613:	
 23009                           ;incstack = 0
 23010                           ; Regs used in _LIGHTBLUE_GetErrorLedValue: [wreg+status,2+status,0]
 23011                           
 23012                           
 23013                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 484:     return (0x01) - (bitMap.i
      +                          oStateBitMap.p2_2_state);
 23014     1EE8  0140               	movlb	0	; select bank0
 23015     1EE9  0855               	movf	_bitMap+1,w	;volatile
 23016     1EEA  3901               	andlw	1
 23017     1EEB  3C01               	sublw	1
 23018     1EEC                     l208:
 23019     1EEC  0008               	return
 23020     1EED                     __end_of_LIGHTBLUE_GetErrorLedValue:
 23021                           
 23022                           	psect	text90
 23023     1F04                     __ptext90:	
 23024 ;; *************** function _LIGHTBLUE_GetDataLedValue *****************
 23025 ;; Defined at:
 23026 ;;		line 479 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 23027 ;; Parameters:    Size  Location     Type
 23028 ;;		None
 23029 ;; Auto vars:     Size  Location     Type
 23030 ;;		None
 23031 ;; Return value:  Size  Location     Type
 23032 ;;                  1    wreg      unsigned char 
 23033 ;; Registers used:
 23034 ;;		wreg, status,2, status,0
 23035 ;; Tracked objects:
 23036 ;;		On entry : 0/0
 23037 ;;		On exit  : 0/0
 23038 ;;		Unchanged: 0/0
 23039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23044 ;;Total ram usage:        0 bytes
 23045 ;; Hardware stack levels used: 1
 23046 ;; Hardware stack levels required when called: 4
 23047 ;; This function calls:
 23048 ;;		Nothing
 23049 ;; This function is called by:
 23050 ;;		_LIGHTBLUE_LedState
 23051 ;; This function uses a non-reentrant model
 23052 ;;
 23053                           
 23054     1F04                     _LIGHTBLUE_GetDataLedValue:	
 23055                           ;psect for function _LIGHTBLUE_GetDataLedValue
 23056                           
 23057     1F04                     l13609:	
 23058                           ;incstack = 0
 23059                           ; Regs used in _LIGHTBLUE_GetDataLedValue: [wreg+status,2+status,0]
 23060                           
 23061                           
 23062                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 480:     return (0x01) - PORTAbits
      +                          .RA5;
 23063     1F04  0140               	movlb	0	; select bank0
 23064     1F05  0E0C               	swapf	12,w	;volatile
 23065     1F06  0C89               	rrf	9,f
 23066     1F07  3901               	andlw	1
 23067     1F08  3C01               	sublw	1
 23068     1F09                     l205:
 23069     1F09  0008               	return
 23070     1F0A                     __end_of_LIGHTBLUE_GetDataLedValue:
 23071                           
 23072                           	psect	text91
 23073     1EFE                     __ptext91:	
 23074 ;; *************** function _LIGHTBLUE_Initialize *****************
 23075 ;; Defined at:
 23076 ;;		line 306 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 23077 ;; Parameters:    Size  Location     Type
 23078 ;;		None
 23079 ;; Auto vars:     Size  Location     Type
 23080 ;;		None
 23081 ;; Return value:  Size  Location     Type
 23082 ;;                  1    wreg      void 
 23083 ;; Registers used:
 23084 ;;		wreg
 23085 ;; Tracked objects:
 23086 ;;		On entry : 0/0
 23087 ;;		On exit  : 0/0
 23088 ;;		Unchanged: 0/0
 23089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23094 ;;Total ram usage:        0 bytes
 23095 ;; Hardware stack levels used: 1
 23096 ;; Hardware stack levels required when called: 4
 23097 ;; This function calls:
 23098 ;;		Nothing
 23099 ;; This function is called by:
 23100 ;;		_main
 23101 ;; This function uses a non-reentrant model
 23102 ;;
 23103                           
 23104     1EFE                     _LIGHTBLUE_Initialize:	
 23105                           ;psect for function _LIGHTBLUE_Initialize
 23106                           
 23107     1EFE                     l14299:	
 23108                           ;incstack = 0
 23109                           ; Regs used in _LIGHTBLUE_Initialize: [wreg]
 23110                           
 23111                           
 23112                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 307:     bitMap.ioBitMap.gpioBitMa
      +                          p = 0x01;
 23113     1EFE  3001               	movlw	1
 23114     1EFF  0140               	movlb	0	; select bank0
 23115     1F00  00D4               	movwf	_bitMap	;volatile
 23116                           
 23117                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 308:     bitMap.ioStateBitMap.gpio
      +                          StateBitMap = 0x01;
 23118     1F01  3001               	movlw	1
 23119     1F02  00D5               	movwf	_bitMap+1	;volatile
 23120     1F03                     l121:
 23121     1F03  0008               	return
 23122     1F04                     __end_of_LIGHTBLUE_Initialize:
 23123                           
 23124                           	psect	text92
 23125     16A4                     __ptext92:	
 23126 ;; *************** function _LIGHTBLUE_AccelSensor *****************
 23127 ;; Defined at:
 23128 ;;		line 326 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 23129 ;; Parameters:    Size  Location     Type
 23130 ;;		None
 23131 ;; Auto vars:     Size  Location     Type
 23132 ;;  payload        13   22[BANK0 ] unsigned char [13]
 23133 ;;  accelData       6   35[BANK0 ] struct .
 23134 ;; Return value:  Size  Location     Type
 23135 ;;                  1    wreg      void 
 23136 ;; Registers used:
 23137 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23138 ;; Tracked objects:
 23139 ;;		On entry : 0/0
 23140 ;;		On exit  : 0/0
 23141 ;;		Unchanged: 0/0
 23142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23144 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23146 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23147 ;;Total ram usage:       19 bytes
 23148 ;; Hardware stack levels used: 1
 23149 ;; Hardware stack levels required when called: 16
 23150 ;; This function calls:
 23151 ;;		_BMA253_GetAccelDataXYZ
 23152 ;;		_LIGHTBLUE_SendPacket
 23153 ;;		_LIGHTBLUE_SplitWord
 23154 ;; This function is called by:
 23155 ;;		_main
 23156 ;; This function uses a non-reentrant model
 23157 ;;
 23158                           
 23159     16A4                     _LIGHTBLUE_AccelSensor:	
 23160                           ;psect for function _LIGHTBLUE_AccelSensor
 23161                           
 23162     16A4                     l14309:	
 23163                           ;incstack = 0
 23164 ;; hardware stack exceeded
 23165                           ; Regs used in _LIGHTBLUE_AccelSensor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23166                           
 23167                           
 23168                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 327:     char payload[13];;mcc_gen
      +                          erated_files/application/LIGHTBLUE_service.c: 328:     BMA253_ACCEL_DATA_t accelData;;mc
      +                          c_generated_files/application/LIGHTBLUE_service.c: 331:     *payload = '\0';
 23169     16A4  0140               	movlb	0	; select bank0
 23170     16A5  01B6               	clrf	LIGHTBLUE_AccelSensor@payload
 23171     16A6                     l14311:
 23172                           
 23173                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 332:     BMA253_GetAccelDataXYZ(&a
      +                          ccelData);
 23174     16A6  3043               	movlw	(low (LIGHTBLUE_AccelSensor@accelData| 0))& (0+255)
 23175     16A7  318B  23ED  3196   	fcall	_BMA253_GetAccelDataXYZ
 23176     16AA                     l14313:
 23177                           
 23178                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 335:     LIGHTBLUE_SplitWord(paylo
      +                          ad, (accelData.x & 0x0FFF));
 23179     16AA  30FF               	movlw	255
 23180     16AB  0140               	movlb	0	; select bank0
 23181     16AC  0543               	andwf	LIGHTBLUE_AccelSensor@accelData,w
 23182     16AD  00F9               	movwf	LIGHTBLUE_SplitWord@value
 23183     16AE  300F               	movlw	15
 23184     16AF  0544               	andwf	LIGHTBLUE_AccelSensor@accelData+1,w
 23185     16B0  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 23186     16B1  3036               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 23187     16B2  3190  207A  3196   	fcall	_LIGHTBLUE_SplitWord
 23188     16B5                     l14315:
 23189                           
 23190                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 336:     LIGHTBLUE_SplitWord(paylo
      +                          ad, (accelData.y & 0x0FFF));
 23191     16B5  30FF               	movlw	255
 23192     16B6  0140               	movlb	0	; select bank0
 23193     16B7  0545               	andwf	LIGHTBLUE_AccelSensor@accelData+2,w
 23194     16B8  00F9               	movwf	LIGHTBLUE_SplitWord@value
 23195     16B9  300F               	movlw	15
 23196     16BA  0546               	andwf	LIGHTBLUE_AccelSensor@accelData+3,w
 23197     16BB  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 23198     16BC  3036               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 23199     16BD  3190  207A  3196   	fcall	_LIGHTBLUE_SplitWord
 23200     16C0                     l14317:
 23201                           
 23202                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 337:     LIGHTBLUE_SplitWord(paylo
      +                          ad, (accelData.z & 0x0FFF));
 23203     16C0  30FF               	movlw	255
 23204     16C1  0140               	movlb	0	; select bank0
 23205     16C2  0547               	andwf	LIGHTBLUE_AccelSensor@accelData+4,w
 23206     16C3  00F9               	movwf	LIGHTBLUE_SplitWord@value
 23207     16C4  300F               	movlw	15
 23208     16C5  0548               	andwf	LIGHTBLUE_AccelSensor@accelData+5,w
 23209     16C6  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 23210     16C7  3036               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 23211     16C8  3190  207A  3196   	fcall	_LIGHTBLUE_SplitWord
 23212     16CB                     l14319:
 23213                           
 23214                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 339:     LIGHTBLUE_SendPacket(ACCE
      +                          L_DATA_ID, payload);
 23215     16CB  3036               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 23216     16CC  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 23217     16CD  3058               	movlw	88
 23218     16CE  318F  2774  3196   	fcall	_LIGHTBLUE_SendPacket
 23219     16D1                     l127:
 23220     16D1  0008               	return
 23221     16D2                     __end_of_LIGHTBLUE_AccelSensor:
 23222                           
 23223                           	psect	text93
 23224     107A                     __ptext93:	
 23225 ;; *************** function _LIGHTBLUE_SplitWord *****************
 23226 ;; Defined at:
 23227 ;;		line 463 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 23228 ;; Parameters:    Size  Location     Type
 23229 ;;  payload         1    wreg     PTR unsigned char 
 23230 ;;		 -> LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), 
 23231 ;;  value           2    9[COMMON] short 
 23232 ;; Auto vars:     Size  Location     Type
 23233 ;;  payload         1   11[COMMON] PTR unsigned char 
 23234 ;;		 -> LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), 
 23235 ;; Return value:  Size  Location     Type
 23236 ;;                  1    wreg      void 
 23237 ;; Registers used:
 23238 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23239 ;; Tracked objects:
 23240 ;;		On entry : 0/0
 23241 ;;		On exit  : 0/0
 23242 ;;		Unchanged: 0/0
 23243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23244 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23245 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23247 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23248 ;;Total ram usage:        3 bytes
 23249 ;; Hardware stack levels used: 1
 23250 ;; Hardware stack levels required when called: 6
 23251 ;; This function calls:
 23252 ;;		_LIGHTBLUE_SplitByte
 23253 ;; This function is called by:
 23254 ;;		_LIGHTBLUE_TemperatureSensor
 23255 ;;		_LIGHTBLUE_AccelSensor
 23256 ;; This function uses a non-reentrant model
 23257 ;;
 23258                           
 23259     107A                     _LIGHTBLUE_SplitWord:	
 23260                           ;psect for function _LIGHTBLUE_SplitWord
 23261                           
 23262                           
 23263                           ;incstack = 0
 23264                           ; Regs used in _LIGHTBLUE_SplitWord: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23265                           ;LIGHTBLUE_SplitWord@payload stored from wreg
 23266     107A  00FB               	movwf	LIGHTBLUE_SplitWord@payload
 23267     107B                     l13585:
 23268                           
 23269                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 464:     LIGHTBLUE_SplitByte(paylo
      +                          ad, value);
 23270     107B  0879               	movf	LIGHTBLUE_SplitWord@value,w
 23271     107C  00F6               	movwf	LIGHTBLUE_SplitByte@value
 23272     107D  087B               	movf	LIGHTBLUE_SplitWord@payload,w
 23273     107E  3197  2730  3190   	fcall	_LIGHTBLUE_SplitByte
 23274                           
 23275                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 465:     LIGHTBLUE_SplitByte(paylo
      +                          ad, value >> 8);
 23276     1081  087A               	movf	LIGHTBLUE_SplitWord@value+1,w
 23277     1082  00F6               	movwf	LIGHTBLUE_SplitByte@value
 23278     1083  087B               	movf	LIGHTBLUE_SplitWord@payload,w
 23279     1084  3197  2730  3190   	fcall	_LIGHTBLUE_SplitByte
 23280     1087                     l196:
 23281     1087  0008               	return
 23282     1088                     __end_of_LIGHTBLUE_SplitWord:
 23283                           
 23284                           	psect	text94
 23285     1730                     __ptext94:	
 23286 ;; *************** function _LIGHTBLUE_SplitByte *****************
 23287 ;; Defined at:
 23288 ;;		line 468 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 23289 ;; Parameters:    Size  Location     Type
 23290 ;;  payload         1    wreg     PTR unsigned char 
 23291 ;;		 -> LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), LIGHTBLUE_PushButton@payload(3), LIGHT
      +BLUE_AccelSensor@payload(13), 
 23292 ;;		 -> LIGHTBLUE_TemperatureSensor@payload(5), 
 23293 ;;  value           1    6[COMMON] char 
 23294 ;; Auto vars:     Size  Location     Type
 23295 ;;  payload         1    8[COMMON] PTR unsigned char 
 23296 ;;		 -> LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), LIGHTBLUE_PushButton@payload(3), LIGHT
      +BLUE_AccelSensor@payload(13), 
 23297 ;;		 -> LIGHTBLUE_TemperatureSensor@payload(5), 
 23298 ;; Return value:  Size  Location     Type
 23299 ;;                  1    wreg      void 
 23300 ;; Registers used:
 23301 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23302 ;; Tracked objects:
 23303 ;;		On entry : 0/0
 23304 ;;		On exit  : 0/0
 23305 ;;		Unchanged: 0/0
 23306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23307 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23308 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23309 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23310 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23311 ;;Total ram usage:        3 bytes
 23312 ;; Hardware stack levels used: 1
 23313 ;; Hardware stack levels required when called: 5
 23314 ;; This function calls:
 23315 ;;		_strlen
 23316 ;; This function is called by:
 23317 ;;		_LIGHTBLUE_PushButton
 23318 ;;		_LIGHTBLUE_LedState
 23319 ;;		_LIGHTBLUE_SendProtocolVersion
 23320 ;;		_LIGHTBLUE_SplitWord
 23321 ;; This function uses a non-reentrant model
 23322 ;;
 23323                           
 23324     1730                     _LIGHTBLUE_SplitByte:	
 23325                           ;psect for function _LIGHTBLUE_SplitByte
 23326                           
 23327                           
 23328                           ;incstack = 0
 23329                           ; Regs used in _LIGHTBLUE_SplitByte: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23330                           ;LIGHTBLUE_SplitByte@payload stored from wreg
 23331     1730  00F8               	movwf	LIGHTBLUE_SplitByte@payload
 23332     1731                     l13425:
 23333                           
 23334                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 469:     payload += strlen(payload
      +                          );
 23335     1731  0878               	movf	LIGHTBLUE_SplitByte@payload,w
 23336     1732  00F1               	movwf	strlen@s
 23337     1733  01F2               	clrf	strlen@s+1
 23338     1734  3192  2291  3197   	fcall	_strlen
 23339     1737  0871               	movf	?_strlen,w
 23340     1738  00F7               	movwf	??_LIGHTBLUE_SplitByte
 23341     1739  0877               	movf	??_LIGHTBLUE_SplitByte,w
 23342     173A  07F8               	addwf	LIGHTBLUE_SplitByte@payload,f
 23343     173B                     l13427:
 23344                           
 23345                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 470:     *payload++ = (_hex[(value
      +                           >> 4) & 0xF]);
 23346     173B  0878               	movf	LIGHTBLUE_SplitByte@payload,w
 23347     173C  0086               	movwf	6
 23348     173D  0187               	clrf	7
 23349     173E  0E76               	swapf	LIGHTBLUE_SplitByte@value,w
 23350     173F  390F               	andlw	15
 23351     1740  1989               	btfsc	9,3
 23352     1741  38F0               	iorlw	240
 23353     1742  390F               	andlw	15
 23354     1743  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 23355     1744  0084               	movwf	4
 23356     1745  3001               	movlw	1	; select bank2/3
 23357     1746  0085               	movwf	5
 23358     1747  0800               	movf	0,w
 23359     1748  0081               	movwf	1
 23360     1749                     l13429:
 23361     1749  3001               	movlw	1
 23362     174A  00F7               	movwf	??_LIGHTBLUE_SplitByte
 23363     174B  0877               	movf	??_LIGHTBLUE_SplitByte,w
 23364     174C  07F8               	addwf	LIGHTBLUE_SplitByte@payload,f
 23365     174D                     l13431:
 23366                           
 23367                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 471:     *payload++ = (_hex[(value
      +                          ) & 0xF]);
 23368     174D  0878               	movf	LIGHTBLUE_SplitByte@payload,w
 23369     174E  0086               	movwf	6
 23370     174F  0187               	clrf	7
 23371     1750  0876               	movf	LIGHTBLUE_SplitByte@value,w
 23372     1751  390F               	andlw	15
 23373     1752  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 23374     1753  0084               	movwf	4
 23375     1754  3001               	movlw	1	; select bank2/3
 23376     1755  0085               	movwf	5
 23377     1756  0800               	movf	0,w
 23378     1757  0081               	movwf	1
 23379     1758                     l13433:
 23380     1758  3001               	movlw	1
 23381     1759  00F7               	movwf	??_LIGHTBLUE_SplitByte
 23382     175A  0877               	movf	??_LIGHTBLUE_SplitByte,w
 23383     175B  07F8               	addwf	LIGHTBLUE_SplitByte@payload,f
 23384     175C                     l13435:
 23385                           
 23386                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 472:     *payload = '\0';
 23387     175C  0878               	movf	LIGHTBLUE_SplitByte@payload,w
 23388     175D  0086               	movwf	6
 23389     175E  0187               	clrf	7
 23390     175F  0181               	clrf	1
 23391     1760                     l199:
 23392     1760  0008               	return
 23393     1761                     __end_of_LIGHTBLUE_SplitByte:
 23394                           
 23395                           	psect	text95
 23396     0F74                     __ptext95:	
 23397 ;; *************** function _LIGHTBLUE_SendPacket *****************
 23398 ;; Defined at:
 23399 ;;		line 451 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 23400 ;; Parameters:    Size  Location     Type
 23401 ;;  packetID        1    wreg     unsigned char 
 23402 ;;  payload         1    7[COMMON] PTR unsigned char 
 23403 ;;		 -> LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), LIGHTBLUE_PushButton@payload(3), LIGHT
      +BLUE_AccelSensor@payload(13), 
 23404 ;;		 -> LIGHTBLUE_TemperatureSensor@payload(5), 
 23405 ;; Auto vars:     Size  Location     Type
 23406 ;;  packetID        1   10[COMMON] unsigned char 
 23407 ;; Return value:  Size  Location     Type
 23408 ;;                  1    wreg      void 
 23409 ;; Registers used:
 23410 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23411 ;; Tracked objects:
 23412 ;;		On entry : 0/0
 23413 ;;		On exit  : 0/0
 23414 ;;		Unchanged: 0/0
 23415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23416 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23417 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23418 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23419 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23420 ;;Total ram usage:        4 bytes
 23421 ;; Hardware stack levels used: 1
 23422 ;; Hardware stack levels required when called: 6
 23423 ;; This function calls:
 23424 ;;		_RN487X_Write
 23425 ;;		_strlen
 23426 ;; This function is called by:
 23427 ;;		_LIGHTBLUE_TemperatureSensor
 23428 ;;		_LIGHTBLUE_AccelSensor
 23429 ;;		_LIGHTBLUE_PushButton
 23430 ;;		_LIGHTBLUE_LedState
 23431 ;;		_LIGHTBLUE_SendProtocolVersion
 23432 ;; This function uses a non-reentrant model
 23433 ;;
 23434                           
 23435     0F74                     _LIGHTBLUE_SendPacket:	
 23436                           ;psect for function _LIGHTBLUE_SendPacket
 23437                           
 23438                           
 23439                           ;incstack = 0
 23440                           ; Regs used in _LIGHTBLUE_SendPacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23441                           ;LIGHTBLUE_SendPacket@packetID stored from wreg
 23442     0F74  00FA               	movwf	LIGHTBLUE_SendPacket@packetID
 23443     0F75                     l13587:
 23444                           
 23445                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 452:     RN487X.Write(('['));
 23446     0F75  305B               	movlw	91
 23447     0F76  00F6               	movwf	RN487X_Write@txData
 23448     0F77  3068               	movlw	low (_RN487X| (0+32768))
 23449     0F78  0084               	movwf	4
 23450     0F79  3098               	movlw	high (_RN487X| (0+32768))
 23451     0F7A  0085               	movwf	5
 23452     0F7B  3F01               	moviw [1]fsr0
 23453     0F7C  008A               	movwf	10
 23454     0F7D  3F00               	moviw [0]fsr0
 23455     0F7E  000A               	callw
 23456     0F7F  318F               	pagesel	$
 23457                           
 23458                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 453:     RN487X.Write((_hex[(seque
      +                          nceNumber++) & 0xF]));
 23459     0F80  0140               	movlb	0	; select bank0
 23460     0F81  086C               	movf	_sequenceNumber,w
 23461     0F82  390F               	andlw	15
 23462     0F83  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 23463     0F84  0086               	movwf	6
 23464     0F85  3001               	movlw	1	; select bank2/3
 23465     0F86  0087               	movwf	7
 23466     0F87  0801               	movf	1,w
 23467     0F88  00F6               	movwf	RN487X_Write@txData
 23468     0F89  3068               	movlw	low (_RN487X| (0+32768))
 23469     0F8A  0084               	movwf	4
 23470     0F8B  3098               	movlw	high (_RN487X| (0+32768))
 23471     0F8C  0085               	movwf	5
 23472     0F8D  3F01               	moviw [1]fsr0
 23473     0F8E  008A               	movwf	10
 23474     0F8F  3F00               	moviw [0]fsr0
 23475     0F90  000A               	callw
 23476     0F91  318F               	pagesel	$
 23477     0F92                     l13589:
 23478     0F92  3001               	movlw	1
 23479     0F93  00F8               	movwf	??_LIGHTBLUE_SendPacket
 23480     0F94  0878               	movf	??_LIGHTBLUE_SendPacket,w
 23481     0F95  0140               	movlb	0	; select bank0
 23482     0F96  07EC               	addwf	_sequenceNumber,f
 23483     0F97                     l13591:
 23484                           
 23485                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 454:     RN487X.Write(packetID);
 23486     0F97  087A               	movf	LIGHTBLUE_SendPacket@packetID,w
 23487     0F98  00F6               	movwf	RN487X_Write@txData
 23488     0F99  3068               	movlw	low (_RN487X| (0+32768))
 23489     0F9A  0084               	movwf	4
 23490     0F9B  3098               	movlw	high (_RN487X| (0+32768))
 23491     0F9C  0085               	movwf	5
 23492     0F9D  3F01               	moviw [1]fsr0
 23493     0F9E  008A               	movwf	10
 23494     0F9F  3F00               	moviw [0]fsr0
 23495     0FA0  000A               	callw
 23496     0FA1  318F               	pagesel	$
 23497     0FA2                     l13593:
 23498                           
 23499                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 455:     RN487X.Write((_hex[(strle
      +                          n(payload) >> 4) & 0xF]));
 23500     0FA2  0877               	movf	LIGHTBLUE_SendPacket@payload,w
 23501     0FA3  00F1               	movwf	strlen@s
 23502     0FA4  01F2               	clrf	strlen@s+1
 23503     0FA5  3192  2291  318F   	fcall	_strlen
 23504     0FA8  0871               	movf	?_strlen,w
 23505     0FA9  00F8               	movwf	??_LIGHTBLUE_SendPacket
 23506     0FAA  0872               	movf	?_strlen+1,w
 23507     0FAB  00F9               	movwf	??_LIGHTBLUE_SendPacket+1
 23508     0FAC  3004               	movlw	4
 23509     0FAD                     u10505:
 23510     0FAD  36F9               	lsrf	??_LIGHTBLUE_SendPacket+1,f
 23511     0FAE  0CF8               	rrf	??_LIGHTBLUE_SendPacket,f
 23512     0FAF  0B89               	decfsz	9,f
 23513     0FB0  2FAD               	goto	u10505
 23514     0FB1  0878               	movf	??_LIGHTBLUE_SendPacket,w
 23515     0FB2  390F               	andlw	15
 23516     0FB3  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 23517     0FB4  0086               	movwf	6
 23518     0FB5  3001               	movlw	1	; select bank2/3
 23519     0FB6  0087               	movwf	7
 23520     0FB7  0801               	movf	1,w
 23521     0FB8  00F6               	movwf	RN487X_Write@txData
 23522     0FB9  3068               	movlw	low (_RN487X| (0+32768))
 23523     0FBA  0084               	movwf	4
 23524     0FBB  3098               	movlw	high (_RN487X| (0+32768))
 23525     0FBC  0085               	movwf	5
 23526     0FBD  3F01               	moviw [1]fsr0
 23527     0FBE  008A               	movwf	10
 23528     0FBF  3F00               	moviw [0]fsr0
 23529     0FC0  000A               	callw
 23530     0FC1  318F               	pagesel	$
 23531     0FC2                     l13595:
 23532                           
 23533                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 456:     RN487X.Write((_hex[(strle
      +                          n(payload)) & 0xF]));
 23534     0FC2  0877               	movf	LIGHTBLUE_SendPacket@payload,w
 23535     0FC3  00F1               	movwf	strlen@s
 23536     0FC4  01F2               	clrf	strlen@s+1
 23537     0FC5  3192  2291  318F   	fcall	_strlen
 23538     0FC8  0871               	movf	?_strlen,w
 23539     0FC9  390F               	andlw	15
 23540     0FCA  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 23541     0FCB  0086               	movwf	6
 23542     0FCC  3001               	movlw	1	; select bank2/3
 23543     0FCD  0087               	movwf	7
 23544     0FCE  0801               	movf	1,w
 23545     0FCF  00F6               	movwf	RN487X_Write@txData
 23546     0FD0  3068               	movlw	low (_RN487X| (0+32768))
 23547     0FD1  0084               	movwf	4
 23548     0FD2  3098               	movlw	high (_RN487X| (0+32768))
 23549     0FD3  0085               	movwf	5
 23550     0FD4  3F01               	moviw [1]fsr0
 23551     0FD5  008A               	movwf	10
 23552     0FD6  3F00               	moviw [0]fsr0
 23553     0FD7  000A               	callw
 23554     0FD8  318F               	pagesel	$
 23555                           
 23556                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 457:     while (*payload) {
 23557     0FD9  2FEC               	goto	l13601
 23558     0FDA                     l13597:
 23559                           
 23560                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 458:         RN487X.Write((*(uint8
      +                          _t *) payload++));
 23561     0FDA  0877               	movf	LIGHTBLUE_SendPacket@payload,w
 23562     0FDB  0086               	movwf	6
 23563     0FDC  0187               	clrf	7
 23564     0FDD  0801               	movf	1,w
 23565     0FDE  00F6               	movwf	RN487X_Write@txData
 23566     0FDF  3068               	movlw	low (_RN487X| (0+32768))
 23567     0FE0  0084               	movwf	4
 23568     0FE1  3098               	movlw	high (_RN487X| (0+32768))
 23569     0FE2  0085               	movwf	5
 23570     0FE3  3F01               	moviw [1]fsr0
 23571     0FE4  008A               	movwf	10
 23572     0FE5  3F00               	moviw [0]fsr0
 23573     0FE6  000A               	callw
 23574     0FE7  318F               	pagesel	$
 23575     0FE8                     l13599:
 23576     0FE8  3001               	movlw	1
 23577     0FE9  00F8               	movwf	??_LIGHTBLUE_SendPacket
 23578     0FEA  0878               	movf	??_LIGHTBLUE_SendPacket,w
 23579     0FEB  07F7               	addwf	LIGHTBLUE_SendPacket@payload,f
 23580     0FEC                     l13601:
 23581                           
 23582                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 457:     while (*payload) {
 23583     0FEC  0877               	movf	LIGHTBLUE_SendPacket@payload,w
 23584     0FED  0086               	movwf	6
 23585     0FEE  0187               	clrf	7
 23586     0FEF  0801               	movf	1,w
 23587     0FF0  1D03               	btfss	3,2
 23588     0FF1  2FF3               	goto	u10511
 23589     0FF2  2FF4               	goto	u10510
 23590     0FF3                     u10511:
 23591     0FF3  2FDA               	goto	l13597
 23592     0FF4                     u10510:
 23593     0FF4                     l13603:
 23594                           
 23595                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 460:     RN487X.Write((']'));
 23596     0FF4  305D               	movlw	93
 23597     0FF5  00F6               	movwf	RN487X_Write@txData
 23598     0FF6  3068               	movlw	low (_RN487X| (0+32768))
 23599     0FF7  0084               	movwf	4
 23600     0FF8  3098               	movlw	high (_RN487X| (0+32768))
 23601     0FF9  0085               	movwf	5
 23602     0FFA  3F01               	moviw [1]fsr0
 23603     0FFB  008A               	movwf	10
 23604     0FFC  3F00               	moviw [0]fsr0
 23605     0FFD  000A               	callw
 23606     0FFE  318F               	pagesel	$
 23607     0FFF                     l193:
 23608     0FFF  0008               	return
 23609     1000                     __end_of_LIGHTBLUE_SendPacket:
 23610                           
 23611                           	psect	text96
 23612     1291                     __ptext96:	
 23613 ;; *************** function _strlen *****************
 23614 ;; Defined at:
 23615 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strlen.c"
 23616 ;; Parameters:    Size  Location     Type
 23617 ;;  s               2    1[COMMON] PTR const unsigned char 
 23618 ;;		 -> lightBlueSerial(80), statusBuffer@main$F3783(80), STR_5(12), STR_3(11), 
 23619 ;;		 -> statusBuffer(80), NULL(0), LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), 
 23620 ;;		 -> LIGHTBLUE_PushButton@payload(3), LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), STR_
      +1(6), 
 23621 ;; Auto vars:     Size  Location     Type
 23622 ;;  a               2    4[COMMON] PTR const unsigned char 
 23623 ;;		 -> lightBlueSerial(80), statusBuffer@main$F3783(80), STR_5(12), STR_3(11), 
 23624 ;;		 -> statusBuffer(80), NULL(0), LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), 
 23625 ;;		 -> LIGHTBLUE_PushButton@payload(3), LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), STR_
      +1(6), 
 23626 ;; Return value:  Size  Location     Type
 23627 ;;                  2    1[COMMON] unsigned int 
 23628 ;; Registers used:
 23629 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 23630 ;; Tracked objects:
 23631 ;;		On entry : 0/0
 23632 ;;		On exit  : 0/0
 23633 ;;		Unchanged: 0/0
 23634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23635 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23636 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23637 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23638 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23639 ;;Total ram usage:        5 bytes
 23640 ;; Hardware stack levels used: 1
 23641 ;; Hardware stack levels required when called: 4
 23642 ;; This function calls:
 23643 ;;		Nothing
 23644 ;; This function is called by:
 23645 ;;		_LIGHTBLUE_SendProtocolVersion
 23646 ;;		_LIGHTBLUE_SendSerialData
 23647 ;;		_LIGHTBLUE_SendPacket
 23648 ;;		_LIGHTBLUE_SplitByte
 23649 ;;		_rn487x_PrintMessage
 23650 ;;		_strstr
 23651 ;; This function uses a non-reentrant model
 23652 ;;
 23653                           
 23654     1291                     _strlen:	
 23655                           ;psect for function _strlen
 23656                           
 23657     1291                     l13043:	
 23658                           ;incstack = 0
 23659                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 23660                           
 23661     1291  0872               	movf	strlen@s+1,w
 23662     1292  00F5               	movwf	strlen@a+1
 23663     1293  0871               	movf	strlen@s,w
 23664     1294  00F4               	movwf	strlen@a
 23665     1295  2A9A               	goto	l13047
 23666     1296                     l13045:
 23667     1296  3001               	movlw	1
 23668     1297  07F1               	addwf	strlen@s,f
 23669     1298  3000               	movlw	0
 23670     1299  3DF2               	addwfc	strlen@s+1,f
 23671     129A                     l13047:
 23672     129A  0871               	movf	strlen@s,w
 23673     129B  0084               	movwf	4
 23674     129C  0872               	movf	strlen@s+1,w
 23675     129D  0085               	movwf	5
 23676     129E  0012               	moviw fsr0++
 23677     129F  1D03               	btfss	3,2
 23678     12A0  2AA2               	goto	u9841
 23679     12A1  2AA3               	goto	u9840
 23680     12A2                     u9841:
 23681     12A2  2A96               	goto	l13045
 23682     12A3                     u9840:
 23683     12A3                     l13049:
 23684     12A3  0874               	movf	strlen@a,w
 23685     12A4  0271               	subwf	strlen@s,w
 23686     12A5  00F1               	movwf	?_strlen
 23687     12A6  0875               	movf	strlen@a+1,w
 23688     12A7  3B72               	subwfb	strlen@s+1,w
 23689     12A8  00F2               	movwf	?_strlen+1
 23690     12A9                     l3310:
 23691     12A9  0008               	return
 23692     12AA                     __end_of_strlen:
 23693                           
 23694                           	psect	text97
 23695     1013                     __ptext97:	
 23696 ;; *************** function _RN487X_Write *****************
 23697 ;; Defined at:
 23698 ;;		line 252 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 23699 ;; Parameters:    Size  Location     Type
 23700 ;;  txData          1    6[COMMON] unsigned char 
 23701 ;; Auto vars:     Size  Location     Type
 23702 ;;		None
 23703 ;; Return value:  Size  Location     Type
 23704 ;;                  1    wreg      void 
 23705 ;; Registers used:
 23706 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23707 ;; Tracked objects:
 23708 ;;		On entry : 0/0
 23709 ;;		On exit  : 0/0
 23710 ;;		Unchanged: 0/0
 23711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23712 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23715 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23716 ;;Total ram usage:        1 bytes
 23717 ;; Hardware stack levels used: 1
 23718 ;; Hardware stack levels required when called: 5
 23719 ;; This function calls:
 23720 ;;		_EUSART1_Write
 23721 ;;		_EUSART2_Write
 23722 ;; This function is called by:
 23723 ;;		_RN487X_SendCmd
 23724 ;;		_LIGHTBLUE_SendPacket
 23725 ;;		_LIGHTBLUE_SendSerialData
 23726 ;;		_RN487X_Example_TransparentUart
 23727 ;;		_main
 23728 ;; This function uses a non-reentrant model
 23729 ;;
 23730                           
 23731     1013                     _RN487X_Write:	
 23732                           ;psect for function _RN487X_Write
 23733                           
 23734     1013                     l13033:	
 23735                           ;incstack = 0
 23736                           ; Regs used in _RN487X_Write: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23737                           
 23738                           
 23739                           ;mcc_generated_files/rn487x/rn487x_interface.c: 252: static __attribute__((inline)) void
      +                           RN487X_Write(uint8_t txData);mcc_generated_files/rn487x/rn487x_interface.c: 253: {;mcc_
      +                          generated_files/rn487x/rn487x_interface.c: 254:     uart[UART_BLE].Write(txData);
 23740     1013  0876               	movf	RN487X_Write@txData,w
 23741     1014  00F1               	movwf	EUSART2_Write@txData
 23742     1015  3016               	movlw	low ((_uart+22)| (0+32768))
 23743     1016  0084               	movwf	4
 23744     1017  3098               	movlw	high ((_uart+22)| (0+32768))
 23745     1018  0085               	movwf	5
 23746     1019  3F01               	moviw [1]fsr0
 23747     101A  008A               	movwf	10
 23748     101B  3F00               	moviw [0]fsr0
 23749     101C  000A               	callw
 23750     101D  3190               	pagesel	$
 23751     101E                     l786:
 23752     101E  0008               	return
 23753     101F                     __end_of_RN487X_Write:
 23754                           
 23755                           	psect	text98
 23756     1524                     __ptext98:	
 23757 ;; *************** function _EUSART1_Write *****************
 23758 ;; Defined at:
 23759 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 23760 ;; Parameters:    Size  Location     Type
 23761 ;;  txData          1    1[COMMON] unsigned char 
 23762 ;; Auto vars:     Size  Location     Type
 23763 ;;		None
 23764 ;; Return value:  Size  Location     Type
 23765 ;;                  1    wreg      void 
 23766 ;; Registers used:
 23767 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23768 ;; Tracked objects:
 23769 ;;		On entry : 0/0
 23770 ;;		On exit  : 0/0
 23771 ;;		Unchanged: 0/0
 23772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23773 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23775 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23776 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23777 ;;Total ram usage:        2 bytes
 23778 ;; Hardware stack levels used: 1
 23779 ;; Hardware stack levels required when called: 4
 23780 ;; This function calls:
 23781 ;;		Nothing
 23782 ;; This function is called by:
 23783 ;;		_putch
 23784 ;;		_RN487X_Write
 23785 ;;		_rn487x_PrintMessageStart
 23786 ;;		_rn487x_PrintMessageEnd
 23787 ;;		_rn487x_PrintIndicatorCharacters
 23788 ;;		_rn487x_PrintMessage
 23789 ;;		_LIGHTBLUE_PerformAction
 23790 ;;		_RN487X_Example_TransparentUart
 23791 ;;		_main
 23792 ;; This function uses a non-reentrant model
 23793 ;;
 23794                           
 23795     1524                     _EUSART1_Write:	
 23796                           ;psect for function _EUSART1_Write
 23797                           
 23798     1524                     l13005:	
 23799                           ;incstack = 0
 23800                           ; Regs used in _EUSART1_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 23801                           
 23802     1524                     l13007:	
 23803                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 23804                           
 23805                           
 23806                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 23807     1524  0140               	movlb	0	; select bank0
 23808     1525  085B               	movf	_eusart1TxBufferRemaining,w	;volatile
 23809     1526  1903               	btfsc	3,2
 23810     1527  2D29               	goto	u9791
 23811     1528  2D2A               	goto	u9790
 23812     1529                     u9791:
 23813     1529  2D24               	goto	l13007
 23814     152A                     u9790:
 23815     152A                     l1219:
 23816                           
 23817                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
 23818     152A  014E               	movlb	14	; select bank14
 23819     152B  1A19               	btfsc	25,4	;volatile
 23820     152C  2D2E               	goto	u9801
 23821     152D  2D2F               	goto	u9800
 23822     152E                     u9801:
 23823     152E  2D33               	goto	l1220
 23824     152F                     u9800:
 23825     152F                     l13009:
 23826                           
 23827                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
 23828     152F  0871               	movf	EUSART1_Write@txData,w
 23829     1530  0142               	movlb	2	; select bank2
 23830     1531  009A               	movwf	26	;volatile
 23831                           
 23832                           ;mcc_generated_files/eusart1.c: 182:     }
 23833     1532  2D48               	goto	l13021
 23834     1533                     l1220:	
 23835                           ;mcc_generated_files/eusart1.c: 183:     else
 23836                           
 23837                           
 23838                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
 23839     1533  1219               	bcf	25,4	;volatile
 23840     1534                     l13011:
 23841                           
 23842                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 23843     1534  0140               	movlb	0	; select bank0
 23844     1535  085D               	movf	_eusart1TxHead,w
 23845     1536  3EC5               	addlw	(low (_eusart1TxBuffer| 0))& (0+255)
 23846     1537  0086               	movwf	6
 23847     1538  0187               	clrf	7
 23848     1539  0871               	movf	EUSART1_Write@txData,w
 23849     153A  0081               	movwf	1
 23850     153B                     l13013:
 23851     153B  3001               	movlw	1
 23852     153C  00F2               	movwf	??_EUSART1_Write
 23853     153D  0872               	movf	??_EUSART1_Write,w
 23854     153E  07DD               	addwf	_eusart1TxHead,f	;volatile
 23855     153F                     l13015:
 23856                           
 23857                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 23858     153F  3008               	movlw	8
 23859     1540  025D               	subwf	_eusart1TxHead,w	;volatile
 23860     1541  1C03               	skipc
 23861     1542  2D44               	goto	u9811
 23862     1543  2D45               	goto	u9810
 23863     1544                     u9811:
 23864     1544  2D46               	goto	l13019
 23865     1545                     u9810:
 23866     1545                     l13017:
 23867                           
 23868                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 23869     1545  01DD               	clrf	_eusart1TxHead	;volatile
 23870     1546                     l13019:
 23871                           
 23872                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 23873     1546  3001               	movlw	1
 23874     1547  02DB               	subwf	_eusart1TxBufferRemaining,f	;volatile
 23875     1548                     l13021:
 23876                           
 23877                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
 23878     1548  014E               	movlb	14	; select bank14
 23879     1549  1619               	bsf	25,4	;volatile
 23880     154A                     l1223:
 23881     154A  0008               	return
 23882     154B                     __end_of_EUSART1_Write:
 23883                           
 23884                           	psect	text99
 23885     14FD                     __ptext99:	
 23886 ;; *************** function _EUSART2_Write *****************
 23887 ;; Defined at:
 23888 ;;		line 173 in file "mcc_generated_files/eusart2.c"
 23889 ;; Parameters:    Size  Location     Type
 23890 ;;  txData          1    1[COMMON] unsigned char 
 23891 ;; Auto vars:     Size  Location     Type
 23892 ;;		None
 23893 ;; Return value:  Size  Location     Type
 23894 ;;                  1    wreg      void 
 23895 ;; Registers used:
 23896 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23897 ;; Tracked objects:
 23898 ;;		On entry : 0/0
 23899 ;;		On exit  : 0/0
 23900 ;;		Unchanged: 0/0
 23901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23902 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23904 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23905 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23906 ;;Total ram usage:        2 bytes
 23907 ;; Hardware stack levels used: 1
 23908 ;; Hardware stack levels required when called: 4
 23909 ;; This function calls:
 23910 ;;		Nothing
 23911 ;; This function is called by:
 23912 ;;		_RN487X_Write
 23913 ;;		_rn487x_PrintMessageStart
 23914 ;;		_rn487x_PrintMessageEnd
 23915 ;;		_rn487x_PrintIndicatorCharacters
 23916 ;;		_rn487x_PrintMessage
 23917 ;;		_LIGHTBLUE_PerformAction
 23918 ;;		_RN487X_Example_TransparentUart
 23919 ;;		_main
 23920 ;; This function uses a non-reentrant model
 23921 ;;
 23922                           
 23923     14FD                     _EUSART2_Write:	
 23924                           ;psect for function _EUSART2_Write
 23925                           
 23926     14FD                     l12961:	
 23927                           ;incstack = 0
 23928                           ; Regs used in _EUSART2_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 23929                           
 23930     14FD                     l12963:	
 23931                           ;mcc_generated_files/eusart2.c: 173: void EUSART2_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart2.c: 174: {;mcc_generated_files/eusart2.c: 175:     while(0 == eusart2TxBuffer
      +                          Remaining)
 23932                           
 23933                           
 23934                           ;mcc_generated_files/eusart2.c: 175:     while(0 == eusart2TxBufferRemaining)
 23935     14FD  0140               	movlb	0	; select bank0
 23936     14FE  0861               	movf	_eusart2TxBufferRemaining,w	;volatile
 23937     14FF  1903               	btfsc	3,2
 23938     1500  2D02               	goto	u9741
 23939     1501  2D03               	goto	u9740
 23940     1502                     u9741:
 23941     1502  2CFD               	goto	l12963
 23942     1503                     u9740:
 23943     1503                     l1075:
 23944                           
 23945                           ;mcc_generated_files/eusart2.c: 179:     if(0 == PIE3bits.TX2IE)
 23946     1503  014E               	movlb	14	; select bank14
 23947     1504  1B19               	btfsc	25,6	;volatile
 23948     1505  2D07               	goto	u9751
 23949     1506  2D08               	goto	u9750
 23950     1507                     u9751:
 23951     1507  2D0C               	goto	l1076
 23952     1508                     u9750:
 23953     1508                     l12965:
 23954                           
 23955                           ;mcc_generated_files/eusart2.c: 180:     {;mcc_generated_files/eusart2.c: 181:         T
      +                          X2REG = txData;
 23956     1508  0871               	movf	EUSART2_Write@txData,w
 23957     1509  0154               	movlb	20	; select bank20
 23958     150A  009A               	movwf	26	;volatile
 23959                           
 23960                           ;mcc_generated_files/eusart2.c: 182:     }
 23961     150B  2D21               	goto	l12977
 23962     150C                     l1076:	
 23963                           ;mcc_generated_files/eusart2.c: 183:     else
 23964                           
 23965                           
 23966                           ;mcc_generated_files/eusart2.c: 184:     {;mcc_generated_files/eusart2.c: 185:         P
      +                          IE3bits.TX2IE = 0;
 23967     150C  1319               	bcf	25,6	;volatile
 23968     150D                     l12967:
 23969                           
 23970                           ;mcc_generated_files/eusart2.c: 186:         eusart2TxBuffer[eusart2TxHead++] = txData;
 23971     150D  0140               	movlb	0	; select bank0
 23972     150E  0863               	movf	_eusart2TxHead,w
 23973     150F  3EDD               	addlw	(low (_eusart2TxBuffer| 0))& (0+255)
 23974     1510  0086               	movwf	6
 23975     1511  0187               	clrf	7
 23976     1512  0871               	movf	EUSART2_Write@txData,w
 23977     1513  0081               	movwf	1
 23978     1514                     l12969:
 23979     1514  3001               	movlw	1
 23980     1515  00F2               	movwf	??_EUSART2_Write
 23981     1516  0872               	movf	??_EUSART2_Write,w
 23982     1517  07E3               	addwf	_eusart2TxHead,f	;volatile
 23983     1518                     l12971:
 23984                           
 23985                           ;mcc_generated_files/eusart2.c: 187:         if(sizeof(eusart2TxBuffer) <= eusart2TxHead
      +                          )
 23986     1518  3008               	movlw	8
 23987     1519  0263               	subwf	_eusart2TxHead,w	;volatile
 23988     151A  1C03               	skipc
 23989     151B  2D1D               	goto	u9761
 23990     151C  2D1E               	goto	u9760
 23991     151D                     u9761:
 23992     151D  2D1F               	goto	l12975
 23993     151E                     u9760:
 23994     151E                     l12973:
 23995                           
 23996                           ;mcc_generated_files/eusart2.c: 188:         {;mcc_generated_files/eusart2.c: 189:      
      +                                 eusart2TxHead = 0;
 23997     151E  01E3               	clrf	_eusart2TxHead	;volatile
 23998     151F                     l12975:
 23999                           
 24000                           ;mcc_generated_files/eusart2.c: 191:         eusart2TxBufferRemaining--;
 24001     151F  3001               	movlw	1
 24002     1520  02E1               	subwf	_eusart2TxBufferRemaining,f	;volatile
 24003     1521                     l12977:
 24004                           
 24005                           ;mcc_generated_files/eusart2.c: 193:     PIE3bits.TX2IE = 1;
 24006     1521  014E               	movlb	14	; select bank14
 24007     1522  1719               	bsf	25,6	;volatile
 24008     1523                     l1079:
 24009     1523  0008               	return
 24010     1524                     __end_of_EUSART2_Write:
 24011                           
 24012                           	psect	text100
 24013     0BED                     __ptext100:	
 24014 ;; *************** function _BMA253_GetAccelDataXYZ *****************
 24015 ;; Defined at:
 24016 ;;		line 118 in file "mcc_generated_files/application/BMA253_accel.c"
 24017 ;; Parameters:    Size  Location     Type
 24018 ;;  accelData       1    wreg     PTR struct .
 24019 ;;		 -> LIGHTBLUE_AccelSensor@accelData(6), 
 24020 ;; Auto vars:     Size  Location     Type
 24021 ;;  accelData       1   19[BANK0 ] PTR struct .
 24022 ;;		 -> LIGHTBLUE_AccelSensor@accelData(6), 
 24023 ;;  sensorValue     2   20[BANK0 ] short 
 24024 ;;  mSB             1   18[BANK0 ] char 
 24025 ;;  lSB             1   17[BANK0 ] char 
 24026 ;; Return value:  Size  Location     Type
 24027 ;;                  1    wreg      void 
 24028 ;; Registers used:
 24029 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24030 ;; Tracked objects:
 24031 ;;		On entry : 0/0
 24032 ;;		On exit  : 0/0
 24033 ;;		Unchanged: 0/0
 24034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24036 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24037 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24038 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24039 ;;Total ram usage:        6 bytes
 24040 ;; Hardware stack levels used: 1
 24041 ;; Hardware stack levels required when called: 15
 24042 ;; This function calls:
 24043 ;;		_BMA253_GetAccelDataY
 24044 ;;		_BMA253_GetAccelDataZ
 24045 ;;		_BMA253_NewAccelDataRdyY
 24046 ;;		_BMA253_NewAccelDataRdyZ
 24047 ;;		_readRegister
 24048 ;; This function is called by:
 24049 ;;		_LIGHTBLUE_AccelSensor
 24050 ;; This function uses a non-reentrant model
 24051 ;;
 24052                           
 24053     0BED                     _BMA253_GetAccelDataXYZ:	
 24054                           ;psect for function _BMA253_GetAccelDataXYZ
 24055                           
 24056                           
 24057                           ;incstack = 0
 24058 ;; hardware stack exceeded
 24059                           ; Regs used in _BMA253_GetAccelDataXYZ: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24060                           ;BMA253_GetAccelDataXYZ@accelData stored from wreg
 24061     0BED  0140               	movlb	0	; select bank0
 24062     0BEE  00B3               	movwf	BMA253_GetAccelDataXYZ@accelData
 24063     0BEF                     l13561:
 24064                           
 24065                           ;mcc_generated_files/application/BMA253_accel.c: 121:     int8_t mSB = 0;
 24066     0BEF  01B2               	clrf	BMA253_GetAccelDataXYZ@mSB
 24067     0BF0                     l13563:
 24068                           
 24069                           ;mcc_generated_files/application/BMA253_accel.c: 123:     lSB = readRegister(TMAG5273_RE
      +                          G_X_LSB_RESULT);
 24070     0BF0  3013               	movlw	19
 24071     0BF1  3190  206C  318B   	fcall	_readRegister
 24072     0BF4  0140               	movlb	0	; select bank0
 24073     0BF5  00B1               	movwf	BMA253_GetAccelDataXYZ@lSB
 24074     0BF6                     l13565:
 24075                           
 24076                           ;mcc_generated_files/application/BMA253_accel.c: 124:     mSB = readRegister(TMAG5273_RE
      +                          G_X_MSB_RESULT);
 24077     0BF6  3012               	movlw	18
 24078     0BF7  3190  206C  318B   	fcall	_readRegister
 24079     0BFA  0140               	movlb	0	; select bank0
 24080     0BFB  00B2               	movwf	BMA253_GetAccelDataXYZ@mSB
 24081     0BFC                     l13567:
 24082                           
 24083                           ;mcc_generated_files/application/BMA253_accel.c: 126:     int16_t sensorValue;;mcc_gener
      +                          ated_files/application/BMA253_accel.c: 128:     sensorValue = mSB >> 8 | lSB;
 24084     0BFC  0832               	movf	BMA253_GetAccelDataXYZ@mSB,w
 24085     0BFD  00B0               	movwf	??_BMA253_GetAccelDataXYZ
 24086     0BFE  3008               	movlw	8
 24087     0BFF                     u10475:
 24088     0BFF  1003               	clrc
 24089     0C00  1BB0               	btfsc	??_BMA253_GetAccelDataXYZ,7
 24090     0C01  1403               	setc
 24091     0C02  0CB0               	rrf	??_BMA253_GetAccelDataXYZ,f
 24092     0C03  0B89               	decfsz	9,f
 24093     0C04  2BFF               	goto	u10475
 24094     0C05  0830               	movf	??_BMA253_GetAccelDataXYZ,w
 24095     0C06  0431               	iorwf	BMA253_GetAccelDataXYZ@lSB,w
 24096     0C07  00B4               	movwf	BMA253_GetAccelDataXYZ@sensorValue
 24097     0C08  01B5               	clrf	BMA253_GetAccelDataXYZ@sensorValue+1
 24098     0C09  1BB4               	btfsc	BMA253_GetAccelDataXYZ@sensorValue,7
 24099     0C0A  03B5               	decf	BMA253_GetAccelDataXYZ@sensorValue+1,f
 24100     0C0B                     l13569:
 24101                           
 24102                           ;mcc_generated_files/application/BMA253_accel.c: 130:     accelData->x = sensorValue;
 24103     0C0B  0833               	movf	BMA253_GetAccelDataXYZ@accelData,w
 24104     0C0C  0086               	movwf	6
 24105     0C0D  0187               	clrf	7
 24106     0C0E  0834               	movf	BMA253_GetAccelDataXYZ@sensorValue,w
 24107     0C0F  3FC0               	movwi [0]fsr1
 24108     0C10  0835               	movf	BMA253_GetAccelDataXYZ@sensorValue+1,w
 24109     0C11  3FC1               	movwi [1]fsr1
 24110     0C12                     l13571:	
 24111                           ;mcc_generated_files/application/BMA253_accel.c: 132:     while (!BMA253_NewAccelDataRdy
      +                          Y())
 24112                           
 24113                           
 24114                           ;mcc_generated_files/application/BMA253_accel.c: 132:     while (!BMA253_NewAccelDataRdy
      +                          Y())
 24115     0C12  3191  213E  318B   	fcall	_BMA253_NewAccelDataRdyY
 24116     0C15  3A00               	xorlw	0
 24117     0C16  1903               	skipnz
 24118     0C17  2C19               	goto	u10481
 24119     0C18  2C1A               	goto	u10480
 24120     0C19                     u10481:
 24121     0C19  2C12               	goto	l13571
 24122     0C1A                     u10480:
 24123     0C1A                     l13573:
 24124                           
 24125                           ;mcc_generated_files/application/BMA253_accel.c: 137:     BMA253_GetAccelDataY(&sensorVa
      +                          lue);
 24126     0C1A  3034               	movlw	(low (BMA253_GetAccelDataXYZ@sensorValue| 0))& (0+255)
 24127     0C1B  3196  2648  318B   	fcall	_BMA253_GetAccelDataY
 24128     0C1E                     l13575:
 24129                           
 24130                           ;mcc_generated_files/application/BMA253_accel.c: 138:     accelData->y = sensorValue;
 24131     0C1E  0140               	movlb	0	; select bank0
 24132     0C1F  0833               	movf	BMA253_GetAccelDataXYZ@accelData,w
 24133     0C20  3E02               	addlw	2
 24134     0C21  0086               	movwf	6
 24135     0C22  0187               	clrf	7
 24136     0C23  0834               	movf	BMA253_GetAccelDataXYZ@sensorValue,w
 24137     0C24  3FC0               	movwi [0]fsr1
 24138     0C25  0835               	movf	BMA253_GetAccelDataXYZ@sensorValue+1,w
 24139     0C26  3FC1               	movwi [1]fsr1
 24140     0C27                     l13577:	
 24141                           ;mcc_generated_files/application/BMA253_accel.c: 140:      while (!BMA253_NewAccelDataRd
      +                          yZ())
 24142                           
 24143                           
 24144                           ;mcc_generated_files/application/BMA253_accel.c: 140:      while (!BMA253_NewAccelDataRd
      +                          yZ())
 24145     0C27  3191  214F  318B   	fcall	_BMA253_NewAccelDataRdyZ
 24146     0C2A  3A00               	xorlw	0
 24147     0C2B  1903               	skipnz
 24148     0C2C  2C2E               	goto	u10491
 24149     0C2D  2C2F               	goto	u10490
 24150     0C2E                     u10491:
 24151     0C2E  2C27               	goto	l13577
 24152     0C2F                     u10490:
 24153     0C2F                     l13579:
 24154                           
 24155                           ;mcc_generated_files/application/BMA253_accel.c: 145:     BMA253_GetAccelDataZ(&sensorVa
      +                          lue);
 24156     0C2F  3034               	movlw	(low (BMA253_GetAccelDataXYZ@sensorValue| 0))& (0+255)
 24157     0C30  3196  2676  318B   	fcall	_BMA253_GetAccelDataZ
 24158     0C33                     l13581:
 24159                           
 24160                           ;mcc_generated_files/application/BMA253_accel.c: 146:     accelData->z = sensorValue;
 24161     0C33  0140               	movlb	0	; select bank0
 24162     0C34  0833               	movf	BMA253_GetAccelDataXYZ@accelData,w
 24163     0C35  3E04               	addlw	4
 24164     0C36  0086               	movwf	6
 24165     0C37  0187               	clrf	7
 24166     0C38  0834               	movf	BMA253_GetAccelDataXYZ@sensorValue,w
 24167     0C39  3FC0               	movwi [0]fsr1
 24168     0C3A  0835               	movf	BMA253_GetAccelDataXYZ@sensorValue+1,w
 24169     0C3B  3FC1               	movwi [1]fsr1
 24170     0C3C                     l44:
 24171     0C3C  0008               	return
 24172     0C3D                     __end_of_BMA253_GetAccelDataXYZ:
 24173                           
 24174                           	psect	text101
 24175     106C                     __ptext101:	
 24176 ;; *************** function _readRegister *****************
 24177 ;; Defined at:
 24178 ;;		line 172 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 24179 ;; Parameters:    Size  Location     Type
 24180 ;;  regAddress      1    wreg     unsigned char 
 24181 ;; Auto vars:     Size  Location     Type
 24182 ;;  regAddress      1   12[BANK0 ] unsigned char 
 24183 ;;  regVal          1   13[BANK0 ] unsigned char 
 24184 ;; Return value:  Size  Location     Type
 24185 ;;                  1    wreg      unsigned char 
 24186 ;; Registers used:
 24187 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24188 ;; Tracked objects:
 24189 ;;		On entry : 0/0
 24190 ;;		On exit  : 0/0
 24191 ;;		Unchanged: 0/0
 24192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24194 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24196 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24197 ;;Total ram usage:        2 bytes
 24198 ;; Hardware stack levels used: 1
 24199 ;; Hardware stack levels required when called: 14
 24200 ;; This function calls:
 24201 ;;		_readRegisters
 24202 ;; This function is called by:
 24203 ;;		_BMA253_GetAccelDataXYZ
 24204 ;;		_setOperatingMode
 24205 ;;		_setMagneticChannel
 24206 ;;		_setXYAxisRange
 24207 ;;		_setZAxisRange
 24208 ;;		_setTemperatureEn
 24209 ;;		_getLowPower
 24210 ;;		_getOperatingMode
 24211 ;;		_getMagneticChannel
 24212 ;;		_getAngleEn
 24213 ;;		_getTemperatureEN
 24214 ;;		_getDeviceStatus
 24215 ;;		_setCRCMode
 24216 ;;		_setMagTemp
 24217 ;;		_setConvAvg
 24218 ;;		_setReadMode
 24219 ;;		_setIntThreshold
 24220 ;;		_setLowPower
 24221 ;;		_setGlitchFilter
 24222 ;;		_setTriggerMode
 24223 ;;		_setSleeptime
 24224 ;;		_setMagDir
 24225 ;;		_setMagnitudeGain
 24226 ;;		_setAngleEn
 24227 ;;		_setInterruptResult
 24228 ;;		_setThresholdEn
 24229 ;;		_setIntPinState
 24230 ;;		_setInterruptMode
 24231 ;;		_setMaskInterrupt
 24232 ;;		_setI2CAddressEN
 24233 ;;		_setOscillatorError
 24234 ;;		_getCRCMode
 24235 ;;		_getMagTemp
 24236 ;;		_getConvAvg
 24237 ;;		_getReadMode
 24238 ;;		_getIntThreshold
 24239 ;;		_getGlitchFiler
 24240 ;;		_getTriggerMode
 24241 ;;		_getSleeptime
 24242 ;;		_getMagDir
 24243 ;;		_getMagnitudeChannelSelect
 24244 ;;		_getMagneticGain
 24245 ;;		_getMagneticOffset1
 24246 ;;		_getMagneticOffset2
 24247 ;;		_getXYAxisRange
 24248 ;;		_getZAxisRange
 24249 ;;		_getXThreshold
 24250 ;;		_getYThreshold
 24251 ;;		_getZThreshold
 24252 ;;		_getTemperatureThreshold
 24253 ;;		_getInterruptResult
 24254 ;;		_getThresholdEn
 24255 ;;		_getIntPinState
 24256 ;;		_getInterruptMode
 24257 ;;		_getMaskInt
 24258 ;;		_getSetCount
 24259 ;;		_getPOR
 24260 ;;		_getDiagStatus
 24261 ;;		_getResultStatus
 24262 ;;		_getI2CAddress
 24263 ;;		_getDeviceID
 24264 ;;		_getInterruptPinStatus
 24265 ;;		_getXData
 24266 ;;		_getYData
 24267 ;;		_getZData
 24268 ;;		_getAngleResult
 24269 ;;		_getMagnitudeResult
 24270 ;; This function uses a non-reentrant model
 24271 ;;
 24272                           
 24273     106C                     _readRegister:	
 24274                           ;psect for function _readRegister
 24275                           
 24276                           
 24277                           ;incstack = 0
 24278 ;; hardware stack exceeded
 24279                           ; Regs used in _readRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24280                           ;readRegister@regAddress stored from wreg
 24281     106C  0140               	movlb	0	; select bank0
 24282     106D  00AC               	movwf	readRegister@regAddress
 24283     106E                     l13195:
 24284                           
 24285                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 173:     uint8_t regVa
      +                          l = 0;
 24286     106E  01AD               	clrf	readRegister@regVal
 24287     106F                     l13197:
 24288                           
 24289                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 174:     readRegisters
      +                          (regAddress, &regVal, 1);
 24290     106F  302D               	movlw	(low (readRegister@regVal| 0))& (0+255)
 24291     1070  00A7               	movwf	readRegisters@dataBuffer
 24292     1071  01A8               	clrf	readRegisters@numBytes
 24293     1072  0AA8               	incf	readRegisters@numBytes,f
 24294     1073  082C               	movf	readRegister@regAddress,w
 24295     1074  3190  20A6  3190   	fcall	_readRegisters
 24296     1077                     l13199:
 24297                           
 24298                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 177:     return regVal
      +                          ;
 24299     1077  0140               	movlb	0	; select bank0
 24300     1078  082D               	movf	readRegister@regVal,w
 24301     1079                     l2136:
 24302     1079  0008               	return
 24303     107A                     __end_of_readRegister:
 24304                           
 24305                           	psect	text102
 24306     10A6                     __ptext102:	
 24307 ;; *************** function _readRegisters *****************
 24308 ;; Defined at:
 24309 ;;		line 116 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 24310 ;; Parameters:    Size  Location     Type
 24311 ;;  regAddress      1    wreg     unsigned char 
 24312 ;;  dataBuffer      1    7[BANK0 ] PTR unsigned char 
 24313 ;;		 -> getTemp@databuffer(2), getManufacturerID@databuffer(2), readWakeUpAndSleepData@wakeupRegisterRead(8), readRegist
      +er@regVal(1), 
 24314 ;;  numBytes        1    8[BANK0 ] unsigned char 
 24315 ;; Auto vars:     Size  Location     Type
 24316 ;;  regAddress      1   11[BANK0 ] unsigned char 
 24317 ;; Return value:  Size  Location     Type
 24318 ;;                  1    wreg      char 
 24319 ;; Registers used:
 24320 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24321 ;; Tracked objects:
 24322 ;;		On entry : 0/0
 24323 ;;		On exit  : 0/0
 24324 ;;		Unchanged: 0/0
 24325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24326 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24327 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24328 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24329 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24330 ;;Total ram usage:        5 bytes
 24331 ;; Hardware stack levels used: 1
 24332 ;; Hardware stack levels required when called: 13
 24333 ;; This function calls:
 24334 ;;		_i2c_readNBytes
 24335 ;; This function is called by:
 24336 ;;		_readRegister
 24337 ;;		_readWakeUpAndSleepData
 24338 ;;		_getManufacturerID
 24339 ;;		_getTemp
 24340 ;; This function uses a non-reentrant model
 24341 ;;
 24342                           
 24343     10A6                     _readRegisters:	
 24344                           ;psect for function _readRegisters
 24345                           
 24346                           
 24347                           ;incstack = 0
 24348 ;; hardware stack exceeded
 24349                           ; Regs used in _readRegisters: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24350                           ;readRegisters@regAddress stored from wreg
 24351     10A6  0140               	movlb	0	; select bank0
 24352     10A7  00AB               	movwf	readRegisters@regAddress
 24353     10A8                     l13131:
 24354                           
 24355                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 135:     i2c_readNByte
      +                          s(regAddress, &dataBuffer, numBytes);
 24356     10A8  3027               	movlw	(low (readRegisters@dataBuffer| 0))& (0+255)
 24357     10A9  00A4               	movwf	i2c_readNBytes@data
 24358     10AA  0828               	movf	readRegisters@numBytes,w
 24359     10AB  00A9               	movwf	??_readRegisters
 24360     10AC  01AA               	clrf	??_readRegisters+1
 24361     10AD  0829               	movf	??_readRegisters,w
 24362     10AE  00A5               	movwf	i2c_readNBytes@len
 24363     10AF  082A               	movf	??_readRegisters+1,w
 24364     10B0  00A6               	movwf	i2c_readNBytes@len+1
 24365     10B1  082B               	movf	readRegisters@regAddress,w
 24366     10B2  3193  239E  3190   	fcall	_i2c_readNBytes
 24367     10B5                     l2130:
 24368     10B5  0008               	return
 24369     10B6                     __end_of_readRegisters:
 24370                           
 24371                           	psect	text103
 24372     139E                     __ptext103:	
 24373 ;; *************** function _i2c_readNBytes *****************
 24374 ;; Defined at:
 24375 ;;		line 228 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 24376 ;; Parameters:    Size  Location     Type
 24377 ;;  address         1    wreg     unsigned char 
 24378 ;;  data            1    4[BANK0 ] PTR void 
 24379 ;;		 -> readRegisters@dataBuffer(1), 
 24380 ;;  len             2    5[BANK0 ] unsigned int 
 24381 ;; Auto vars:     Size  Location     Type
 24382 ;;  address         1   11[COMMON] unsigned char 
 24383 ;; Return value:  Size  Location     Type
 24384 ;;                  1    wreg      void 
 24385 ;; Registers used:
 24386 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24387 ;; Tracked objects:
 24388 ;;		On entry : 0/0
 24389 ;;		On exit  : 0/0
 24390 ;;		Unchanged: 0/0
 24391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24392 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24393 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24395 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24396 ;;Total ram usage:        4 bytes
 24397 ;; Hardware stack levels used: 1
 24398 ;; Hardware stack levels required when called: 12
 24399 ;; This function calls:
 24400 ;;		_I2C1_Close
 24401 ;;		_I2C1_MasterRead
 24402 ;;		_I2C1_Open
 24403 ;;		_I2C1_SetBuffer
 24404 ;; This function is called by:
 24405 ;;		_readRegisters
 24406 ;; This function uses a non-reentrant model
 24407 ;;
 24408                           
 24409     139E                     _i2c_readNBytes:	
 24410                           ;psect for function _i2c_readNBytes
 24411                           
 24412                           
 24413                           ;incstack = 0
 24414 ;; hardware stack exceeded
 24415                           ; Regs used in _i2c_readNBytes: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24416                           ;i2c_readNBytes@address stored from wreg
 24417     139E  00FB               	movwf	i2c_readNBytes@address
 24418     139F                     l13023:
 24419     139F                     l13025:	
 24420                           ;mcc_generated_files/drivers/i2c_simple_master.c: 228: void i2c_readNBytes(i2c1_address_
      +                          t address, void *data, size_t len);mcc_generated_files/drivers/i2c_simple_master.c: 229:
      +                           {;mcc_generated_files/drivers/i2c_simple_master.c: 230:     while(!I2C1_Open(address));
 24421                           
 24422     139F  087B               	movf	i2c_readNBytes@address,w
 24423     13A0  3197  27CA  3193   	fcall	_I2C1_Open
 24424     13A3  3A00               	xorlw	0
 24425     13A4  1903               	skipnz
 24426     13A5  2BA7               	goto	u9821
 24427     13A6  2BA8               	goto	u9820
 24428     13A7                     u9821:
 24429     13A7  2B9F               	goto	l13025
 24430     13A8                     u9820:
 24431     13A8                     l13027:
 24432                           
 24433                           ;mcc_generated_files/drivers/i2c_simple_master.c: 231:     I2C1_SetBuffer(data,len);
 24434     13A8  0140               	movlb	0	; select bank0
 24435     13A9  0826               	movf	i2c_readNBytes@len+1,w
 24436     13AA  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 24437     13AB  0825               	movf	i2c_readNBytes@len,w
 24438     13AC  00F1               	movwf	I2C1_SetBuffer@bufferSize
 24439     13AD  0824               	movf	i2c_readNBytes@data,w
 24440     13AE  3190  205E  3193   	fcall	_I2C1_SetBuffer
 24441     13B1                     l13029:
 24442                           
 24443                           ;mcc_generated_files/drivers/i2c_simple_master.c: 232:     I2C1_MasterRead();
 24444     13B1  319E  26E3  3193   	fcall	_I2C1_MasterRead
 24445     13B4                     l13031:	
 24446                           ;mcc_generated_files/drivers/i2c_simple_master.c: 233:     while(I2C1_BUSY == I2C1_Close
      +                          ());
 24447                           
 24448     13B4  3192  2231  3193   	fcall	_I2C1_Close
 24449     13B7  3A01               	xorlw	1
 24450     13B8  1903               	skipnz
 24451     13B9  2BBB               	goto	u9831
 24452     13BA  2BBC               	goto	u9830
 24453     13BB                     u9831:
 24454     13BB  2BB4               	goto	l13031
 24455     13BC                     u9830:
 24456     13BC                     l579:
 24457     13BC  0008               	return
 24458     13BD                     __end_of_i2c_readNBytes:
 24459                           
 24460                           	psect	text104
 24461     1EE3                     __ptext104:	
 24462 ;; *************** function _I2C1_MasterRead *****************
 24463 ;; Defined at:
 24464 ;;		line 246 in file "mcc_generated_files/i2c1_master.c"
 24465 ;; Parameters:    Size  Location     Type
 24466 ;;		None
 24467 ;; Auto vars:     Size  Location     Type
 24468 ;;		None
 24469 ;; Return value:  Size  Location     Type
 24470 ;;                  1    wreg      enum E358
 24471 ;; Registers used:
 24472 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24473 ;; Tracked objects:
 24474 ;;		On entry : 0/0
 24475 ;;		On exit  : 0/0
 24476 ;;		Unchanged: 0/0
 24477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24482 ;;Total ram usage:        0 bytes
 24483 ;; Hardware stack levels used: 1
 24484 ;; Hardware stack levels required when called: 11
 24485 ;; This function calls:
 24486 ;;		_I2C1_MasterOperation
 24487 ;; This function is called by:
 24488 ;;		_i2c_readNBytes
 24489 ;;		_I2C1_ReadNBytes
 24490 ;; This function uses a non-reentrant model
 24491 ;;
 24492                           
 24493     1EE3                     _I2C1_MasterRead:	
 24494                           ;psect for function _I2C1_MasterRead
 24495                           
 24496     1EE3                     l12931:	
 24497                           ;incstack = 0
 24498 ;; hardware stack exceeded
 24499                           ; Regs used in _I2C1_MasterRead: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24500                           
 24501                           
 24502                           ;mcc_generated_files/i2c1_master.c: 248:     return I2C1_MasterOperation(1);;	Return val
      +                          ue of _I2C1_MasterRead is never used
 24503     1EE3  3001               	movlw	1
 24504     1EE4  3193  23BD  319E   	fcall	_I2C1_MasterOperation
 24505     1EE7                     l1759:
 24506     1EE7  0008               	return
 24507     1EE8                     __end_of_I2C1_MasterRead:
 24508                           
 24509                           	psect	text105
 24510     1676                     __ptext105:	
 24511 ;; *************** function _BMA253_GetAccelDataZ *****************
 24512 ;; Defined at:
 24513 ;;		line 104 in file "mcc_generated_files/application/BMA253_accel.c"
 24514 ;; Parameters:    Size  Location     Type
 24515 ;;  zAccelData      1    wreg     PTR short 
 24516 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 24517 ;; Auto vars:     Size  Location     Type
 24518 ;;  zAccelData      1   13[BANK0 ] PTR short 
 24519 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 24520 ;;  msbData         1   15[BANK0 ] unsigned char 
 24521 ;;  lsbData         1   14[BANK0 ] unsigned char 
 24522 ;; Return value:  Size  Location     Type
 24523 ;;                  1    wreg      void 
 24524 ;; Registers used:
 24525 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24526 ;; Tracked objects:
 24527 ;;		On entry : 0/0
 24528 ;;		On exit  : 0/0
 24529 ;;		Unchanged: 0/0
 24530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24532 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24533 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24534 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24535 ;;Total ram usage:        6 bytes
 24536 ;; Hardware stack levels used: 1
 24537 ;; Hardware stack levels required when called: 14
 24538 ;; This function calls:
 24539 ;;		_BMA253_NewAccelDataRdyZ
 24540 ;;		_i2c_read1ByteRegister
 24541 ;; This function is called by:
 24542 ;;		_BMA253_GetAccelDataXYZ
 24543 ;; This function uses a non-reentrant model
 24544 ;;
 24545                           
 24546     1676                     _BMA253_GetAccelDataZ:	
 24547                           ;psect for function _BMA253_GetAccelDataZ
 24548                           
 24549                           
 24550                           ;incstack = 0
 24551 ;; hardware stack exceeded
 24552                           ; Regs used in _BMA253_GetAccelDataZ: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24553                           ;BMA253_GetAccelDataZ@zAccelData stored from wreg
 24554     1676  0140               	movlb	0	; select bank0
 24555     1677  00AD               	movwf	BMA253_GetAccelDataZ@zAccelData
 24556     1678                     l13417:
 24557     1678                     l13419:	
 24558                           ;mcc_generated_files/application/BMA253_accel.c: 104: void BMA253_GetAccelDataZ(int16_t 
      +                          *zAccelData);mcc_generated_files/application/BMA253_accel.c: 105: {;mcc_generated_files/
      +                          application/BMA253_accel.c: 106:     uint8_t lsbData;;mcc_generated_files/application/BM
      +                          A253_accel.c: 107:     uint8_t msbData;;mcc_generated_files/application/BMA253_accel.c: 
      +                          108:     while(!BMA253_NewAccelDataRdyZ())
 24559                           
 24560                           
 24561                           ;mcc_generated_files/application/BMA253_accel.c: 108:     while(!BMA253_NewAccelDataRdyZ
      +                          ())
 24562     1678  3191  214F  3196   	fcall	_BMA253_NewAccelDataRdyZ
 24563     167B  3A00               	xorlw	0
 24564     167C  1903               	skipnz
 24565     167D  2E7F               	goto	u10351
 24566     167E  2E80               	goto	u10350
 24567     167F                     u10351:
 24568     167F  2E78               	goto	l13419
 24569     1680                     u10350:
 24570     1680                     l13421:
 24571                           
 24572                           ;mcc_generated_files/application/BMA253_accel.c: 113:     lsbData = i2c_read1ByteRegiste
      +                          r((0x19), (0x06));
 24573     1680  3006               	movlw	6
 24574     1681  0140               	movlb	0	; select bank0
 24575     1682  00A4               	movwf	i2c_read1ByteRegister@reg
 24576     1683  3019               	movlw	25
 24577     1684  318B  2354  3196   	fcall	_i2c_read1ByteRegister
 24578     1687  0140               	movlb	0	; select bank0
 24579     1688  00AE               	movwf	BMA253_GetAccelDataZ@lsbData
 24580                           
 24581                           ;mcc_generated_files/application/BMA253_accel.c: 114:     msbData = i2c_read1ByteRegiste
      +                          r((0x19), (0x07));
 24582     1689  3007               	movlw	7
 24583     168A  00A4               	movwf	i2c_read1ByteRegister@reg
 24584     168B  3019               	movlw	25
 24585     168C  318B  2354  3196   	fcall	_i2c_read1ByteRegister
 24586     168F  0140               	movlb	0	; select bank0
 24587     1690  00AF               	movwf	BMA253_GetAccelDataZ@msbData
 24588     1691                     l13423:
 24589                           
 24590                           ;mcc_generated_files/application/BMA253_accel.c: 115:     *zAccelData = ( (((int16_t)msb
      +                          Data) << 8) | (lsbData) ) >> 4;
 24591     1691  082F               	movf	BMA253_GetAccelDataZ@msbData,w
 24592     1692  00AB               	movwf	??_BMA253_GetAccelDataZ+1
 24593     1693  082E               	movf	BMA253_GetAccelDataZ@lsbData,w
 24594     1694  00AA               	movwf	??_BMA253_GetAccelDataZ
 24595     1695  3004               	movlw	4
 24596     1696  00AC               	movwf	??_BMA253_GetAccelDataZ+2
 24597     1697                     u10365:
 24598     1697  0D2B               	rlf	??_BMA253_GetAccelDataZ+1,w
 24599     1698  0CAB               	rrf	??_BMA253_GetAccelDataZ+1,f
 24600     1699  0CAA               	rrf	??_BMA253_GetAccelDataZ,f
 24601     169A  0BAC               	decfsz	??_BMA253_GetAccelDataZ+2,f
 24602     169B  2E97               	goto	u10365
 24603     169C  082D               	movf	BMA253_GetAccelDataZ@zAccelData,w
 24604     169D  0086               	movwf	6
 24605     169E  0187               	clrf	7
 24606     169F  082A               	movf	??_BMA253_GetAccelDataZ,w
 24607     16A0  3FC0               	movwi [0]fsr1
 24608     16A1  082B               	movf	??_BMA253_GetAccelDataZ+1,w
 24609     16A2  3FC1               	movwi [1]fsr1
 24610     16A3                     l35:
 24611     16A3  0008               	return
 24612     16A4                     __end_of_BMA253_GetAccelDataZ:
 24613                           
 24614                           	psect	text106
 24615     114F                     __ptext106:	
 24616 ;; *************** function _BMA253_NewAccelDataRdyZ *****************
 24617 ;; Defined at:
 24618 ;;		line 172 in file "mcc_generated_files/application/BMA253_accel.c"
 24619 ;; Parameters:    Size  Location     Type
 24620 ;;		None
 24621 ;; Auto vars:     Size  Location     Type
 24622 ;;  zNewData        1   11[COMMON] _Bool 
 24623 ;; Return value:  Size  Location     Type
 24624 ;;                  1    wreg      _Bool 
 24625 ;; Registers used:
 24626 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24627 ;; Tracked objects:
 24628 ;;		On entry : 0/0
 24629 ;;		On exit  : 0/0
 24630 ;;		Unchanged: 0/0
 24631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24633 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24635 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24636 ;;Total ram usage:        1 bytes
 24637 ;; Hardware stack levels used: 1
 24638 ;; Hardware stack levels required when called: 13
 24639 ;; This function calls:
 24640 ;;		_i2c_read1ByteRegister
 24641 ;; This function is called by:
 24642 ;;		_BMA253_GetAccelDataZ
 24643 ;;		_BMA253_GetAccelDataXYZ
 24644 ;; This function uses a non-reentrant model
 24645 ;;
 24646                           
 24647     114F                     _BMA253_NewAccelDataRdyZ:	
 24648                           ;psect for function _BMA253_NewAccelDataRdyZ
 24649                           
 24650     114F                     l13327:	
 24651                           ;incstack = 0
 24652                           ; Regs used in _BMA253_NewAccelDataRdyZ: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24653                           
 24654                           
 24655                           ;mcc_generated_files/application/BMA253_accel.c: 174:     _Bool zNewData;;mcc_generated_
      +                          files/application/BMA253_accel.c: 176:     zNewData = (i2c_read1ByteRegister((0x19), (0x
      +                          06)) & (0x01));
 24656     114F  3006               	movlw	6
 24657     1150  0140               	movlb	0	; select bank0
 24658     1151  00A4               	movwf	i2c_read1ByteRegister@reg
 24659     1152  3019               	movlw	25
 24660     1153  318B  2354  3191   	fcall	_i2c_read1ByteRegister
 24661     1156  3901               	andlw	1
 24662     1157  1D03               	btfss	3,2
 24663     1158  295A               	goto	u10191
 24664     1159  295C               	goto	u10190
 24665     115A                     u10191:
 24666     115A  3001               	movlw	1
 24667     115B  295D               	goto	u10200
 24668     115C                     u10190:
 24669     115C  3000               	movlw	0
 24670     115D                     u10200:
 24671     115D  00FB               	movwf	BMA253_NewAccelDataRdyZ@zNewData
 24672     115E                     l13329:
 24673                           
 24674                           ;mcc_generated_files/application/BMA253_accel.c: 178:     return zNewData;
 24675     115E  087B               	movf	BMA253_NewAccelDataRdyZ@zNewData,w
 24676     115F                     l56:
 24677     115F  0008               	return
 24678     1160                     __end_of_BMA253_NewAccelDataRdyZ:
 24679                           
 24680                           	psect	text107
 24681     1648                     __ptext107:	
 24682 ;; *************** function _BMA253_GetAccelDataY *****************
 24683 ;; Defined at:
 24684 ;;		line 90 in file "mcc_generated_files/application/BMA253_accel.c"
 24685 ;; Parameters:    Size  Location     Type
 24686 ;;  yAccelData      1    wreg     PTR short 
 24687 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 24688 ;; Auto vars:     Size  Location     Type
 24689 ;;  yAccelData      1   13[BANK0 ] PTR short 
 24690 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 24691 ;;  msbData         1   15[BANK0 ] unsigned char 
 24692 ;;  lsbData         1   14[BANK0 ] unsigned char 
 24693 ;; Return value:  Size  Location     Type
 24694 ;;                  1    wreg      void 
 24695 ;; Registers used:
 24696 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24697 ;; Tracked objects:
 24698 ;;		On entry : 0/0
 24699 ;;		On exit  : 0/0
 24700 ;;		Unchanged: 0/0
 24701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24703 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24704 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24705 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24706 ;;Total ram usage:        6 bytes
 24707 ;; Hardware stack levels used: 1
 24708 ;; Hardware stack levels required when called: 14
 24709 ;; This function calls:
 24710 ;;		_BMA253_NewAccelDataRdyY
 24711 ;;		_i2c_read1ByteRegister
 24712 ;; This function is called by:
 24713 ;;		_BMA253_GetAccelDataXYZ
 24714 ;; This function uses a non-reentrant model
 24715 ;;
 24716                           
 24717     1648                     _BMA253_GetAccelDataY:	
 24718                           ;psect for function _BMA253_GetAccelDataY
 24719                           
 24720                           
 24721                           ;incstack = 0
 24722 ;; hardware stack exceeded
 24723                           ; Regs used in _BMA253_GetAccelDataY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24724                           ;BMA253_GetAccelDataY@yAccelData stored from wreg
 24725     1648  0140               	movlb	0	; select bank0
 24726     1649  00AD               	movwf	BMA253_GetAccelDataY@yAccelData
 24727     164A                     l13409:
 24728     164A                     l13411:	
 24729                           ;mcc_generated_files/application/BMA253_accel.c: 90: void BMA253_GetAccelDataY(int16_t *
      +                          yAccelData);mcc_generated_files/application/BMA253_accel.c: 91: {;mcc_generated_files/ap
      +                          plication/BMA253_accel.c: 92:     uint8_t lsbData;;mcc_generated_files/application/BMA25
      +                          3_accel.c: 93:     uint8_t msbData;;mcc_generated_files/application/BMA253_accel.c: 94: 
      +                              while(!BMA253_NewAccelDataRdyY())
 24730                           
 24731                           
 24732                           ;mcc_generated_files/application/BMA253_accel.c: 94:     while(!BMA253_NewAccelDataRdyY(
      +                          ))
 24733     164A  3191  213E  3196   	fcall	_BMA253_NewAccelDataRdyY
 24734     164D  3A00               	xorlw	0
 24735     164E  1903               	skipnz
 24736     164F  2E51               	goto	u10331
 24737     1650  2E52               	goto	u10330
 24738     1651                     u10331:
 24739     1651  2E4A               	goto	l13411
 24740     1652                     u10330:
 24741     1652                     l13413:
 24742                           
 24743                           ;mcc_generated_files/application/BMA253_accel.c: 99:     lsbData = i2c_read1ByteRegister
      +                          ((0x19), (0x04));
 24744     1652  3004               	movlw	4
 24745     1653  0140               	movlb	0	; select bank0
 24746     1654  00A4               	movwf	i2c_read1ByteRegister@reg
 24747     1655  3019               	movlw	25
 24748     1656  318B  2354  3196   	fcall	_i2c_read1ByteRegister
 24749     1659  0140               	movlb	0	; select bank0
 24750     165A  00AE               	movwf	BMA253_GetAccelDataY@lsbData
 24751                           
 24752                           ;mcc_generated_files/application/BMA253_accel.c: 100:     msbData = i2c_read1ByteRegiste
      +                          r((0x19), (0x05));
 24753     165B  3005               	movlw	5
 24754     165C  00A4               	movwf	i2c_read1ByteRegister@reg
 24755     165D  3019               	movlw	25
 24756     165E  318B  2354  3196   	fcall	_i2c_read1ByteRegister
 24757     1661  0140               	movlb	0	; select bank0
 24758     1662  00AF               	movwf	BMA253_GetAccelDataY@msbData
 24759     1663                     l13415:
 24760                           
 24761                           ;mcc_generated_files/application/BMA253_accel.c: 101:     *yAccelData = ( (((int16_t)msb
      +                          Data) << 8) | (lsbData) ) >> 4;
 24762     1663  082F               	movf	BMA253_GetAccelDataY@msbData,w
 24763     1664  00AB               	movwf	??_BMA253_GetAccelDataY+1
 24764     1665  082E               	movf	BMA253_GetAccelDataY@lsbData,w
 24765     1666  00AA               	movwf	??_BMA253_GetAccelDataY
 24766     1667  3004               	movlw	4
 24767     1668  00AC               	movwf	??_BMA253_GetAccelDataY+2
 24768     1669                     u10345:
 24769     1669  0D2B               	rlf	??_BMA253_GetAccelDataY+1,w
 24770     166A  0CAB               	rrf	??_BMA253_GetAccelDataY+1,f
 24771     166B  0CAA               	rrf	??_BMA253_GetAccelDataY,f
 24772     166C  0BAC               	decfsz	??_BMA253_GetAccelDataY+2,f
 24773     166D  2E69               	goto	u10345
 24774     166E  082D               	movf	BMA253_GetAccelDataY@yAccelData,w
 24775     166F  0086               	movwf	6
 24776     1670  0187               	clrf	7
 24777     1671  082A               	movf	??_BMA253_GetAccelDataY,w
 24778     1672  3FC0               	movwi [0]fsr1
 24779     1673  082B               	movf	??_BMA253_GetAccelDataY+1,w
 24780     1674  3FC1               	movwi [1]fsr1
 24781     1675                     l29:
 24782     1675  0008               	return
 24783     1676                     __end_of_BMA253_GetAccelDataY:
 24784                           
 24785                           	psect	text108
 24786     113E                     __ptext108:	
 24787 ;; *************** function _BMA253_NewAccelDataRdyY *****************
 24788 ;; Defined at:
 24789 ;;		line 163 in file "mcc_generated_files/application/BMA253_accel.c"
 24790 ;; Parameters:    Size  Location     Type
 24791 ;;		None
 24792 ;; Auto vars:     Size  Location     Type
 24793 ;;  yNewData        1   11[COMMON] _Bool 
 24794 ;; Return value:  Size  Location     Type
 24795 ;;                  1    wreg      _Bool 
 24796 ;; Registers used:
 24797 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24798 ;; Tracked objects:
 24799 ;;		On entry : 0/0
 24800 ;;		On exit  : 0/0
 24801 ;;		Unchanged: 0/0
 24802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24804 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24806 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24807 ;;Total ram usage:        1 bytes
 24808 ;; Hardware stack levels used: 1
 24809 ;; Hardware stack levels required when called: 13
 24810 ;; This function calls:
 24811 ;;		_i2c_read1ByteRegister
 24812 ;; This function is called by:
 24813 ;;		_BMA253_GetAccelDataY
 24814 ;;		_BMA253_GetAccelDataXYZ
 24815 ;; This function uses a non-reentrant model
 24816 ;;
 24817                           
 24818     113E                     _BMA253_NewAccelDataRdyY:	
 24819                           ;psect for function _BMA253_NewAccelDataRdyY
 24820                           
 24821     113E                     l13321:	
 24822                           ;incstack = 0
 24823                           ; Regs used in _BMA253_NewAccelDataRdyY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24824                           
 24825                           
 24826                           ;mcc_generated_files/application/BMA253_accel.c: 165:     _Bool yNewData;;mcc_generated_
      +                          files/application/BMA253_accel.c: 167:     yNewData = (i2c_read1ByteRegister((0x19), (0x
      +                          04)) & (0x01));
 24827     113E  3004               	movlw	4
 24828     113F  0140               	movlb	0	; select bank0
 24829     1140  00A4               	movwf	i2c_read1ByteRegister@reg
 24830     1141  3019               	movlw	25
 24831     1142  318B  2354  3191   	fcall	_i2c_read1ByteRegister
 24832     1145  3901               	andlw	1
 24833     1146  1D03               	btfss	3,2
 24834     1147  2949               	goto	u10171
 24835     1148  294B               	goto	u10170
 24836     1149                     u10171:
 24837     1149  3001               	movlw	1
 24838     114A  294C               	goto	u10180
 24839     114B                     u10170:
 24840     114B  3000               	movlw	0
 24841     114C                     u10180:
 24842     114C  00FB               	movwf	BMA253_NewAccelDataRdyY@yNewData
 24843     114D                     l13323:
 24844                           
 24845                           ;mcc_generated_files/application/BMA253_accel.c: 169:     return yNewData;
 24846     114D  087B               	movf	BMA253_NewAccelDataRdyY@yNewData,w
 24847     114E                     l53:
 24848     114E  0008               	return
 24849     114F                     __end_of_BMA253_NewAccelDataRdyY:
 24850                           
 24851                           	psect	text109
 24852     0B54                     __ptext109:	
 24853 ;; *************** function _i2c_read1ByteRegister *****************
 24854 ;; Defined at:
 24855 ;;		line 97 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 24856 ;; Parameters:    Size  Location     Type
 24857 ;;  address         1    wreg     unsigned char 
 24858 ;;  reg             1    4[BANK0 ] unsigned char 
 24859 ;; Auto vars:     Size  Location     Type
 24860 ;;  address         1    5[BANK0 ] unsigned char 
 24861 ;;  x               2    7[BANK0 ] int 
 24862 ;;  d2              1    9[BANK0 ] unsigned char 
 24863 ;;  e               1    6[BANK0 ] enum E358
 24864 ;; Return value:  Size  Location     Type
 24865 ;;                  1    wreg      unsigned char 
 24866 ;; Registers used:
 24867 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24868 ;; Tracked objects:
 24869 ;;		On entry : 0/0
 24870 ;;		On exit  : 0/0
 24871 ;;		Unchanged: 0/0
 24872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24873 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24874 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24876 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24877 ;;Total ram usage:        6 bytes
 24878 ;; Hardware stack levels used: 1
 24879 ;; Hardware stack levels required when called: 12
 24880 ;; This function calls:
 24881 ;;		_I2C1_Close
 24882 ;;		_I2C1_MasterWrite
 24883 ;;		_I2C1_Open
 24884 ;;		_I2C1_SetAddressNackCallback
 24885 ;;		_I2C1_SetBuffer
 24886 ;;		_I2C1_SetDataCompleteCallback
 24887 ;; This function is called by:
 24888 ;;		_BMA253_GetAccelDataY
 24889 ;;		_BMA253_GetAccelDataZ
 24890 ;;		_BMA253_NewAccelDataRdyY
 24891 ;;		_BMA253_NewAccelDataRdyZ
 24892 ;;		_BMA253_GetAccelDataX
 24893 ;;		_BMA253_GetAccelChipId
 24894 ;;		_BMA253_NewAccelDataRdyX
 24895 ;; This function uses a non-reentrant model
 24896 ;;
 24897                           
 24898     0B54                     _i2c_read1ByteRegister:	
 24899                           ;psect for function _i2c_read1ByteRegister
 24900                           
 24901                           
 24902                           ;incstack = 0
 24903                           ; Regs used in _i2c_read1ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24904                           ;i2c_read1ByteRegister@address stored from wreg
 24905     0B54  0140               	movlb	0	; select bank0
 24906     0B55  00A5               	movwf	i2c_read1ByteRegister@address
 24907     0B56                     l13165:
 24908                           
 24909                           ;mcc_generated_files/drivers/i2c_simple_master.c: 97: uint8_t i2c_read1ByteRegister(i2c1
      +                          _address_t address, uint8_t reg);mcc_generated_files/drivers/i2c_simple_master.c: 98: {;
      +                          mcc_generated_files/drivers/i2c_simple_master.c: 99:     uint8_t d2=42;
 24910     0B56  302A               	movlw	42
 24911     0B57  00A9               	movwf	i2c_read1ByteRegister@d2
 24912                           
 24913                           ;mcc_generated_files/drivers/i2c_simple_master.c: 100:     i2c1_error_t e;;mcc_generated
      +                          _files/drivers/i2c_simple_master.c: 101:     int x;;mcc_generated_files/drivers/i2c_simp
      +                          le_master.c: 103:     for(x = 2; x != 0; x--)
 24914     0B58  3002               	movlw	2
 24915     0B59  00A7               	movwf	i2c_read1ByteRegister@x
 24916     0B5A  3000               	movlw	0
 24917     0B5B  00A8               	movwf	i2c_read1ByteRegister@x+1
 24918     0B5C                     l13171:
 24919     0B5C  0140               	movlb	0	; select bank0
 24920     0B5D  0825               	movf	i2c_read1ByteRegister@address,w
 24921     0B5E  3197  27CA  318B   	fcall	_I2C1_Open
 24922     0B61  3A00               	xorlw	0
 24923     0B62  1903               	skipnz
 24924     0B63  2B65               	goto	u10021
 24925     0B64  2B66               	goto	u10020
 24926     0B65                     u10021:
 24927     0B65  2B5C               	goto	l13171
 24928     0B66                     u10020:
 24929     0B66                     l13173:
 24930                           
 24931                           ;mcc_generated_files/drivers/i2c_simple_master.c: 106:         I2C1_SetDataCompleteCallb
      +                          ack(rd1RegCompleteHandler,&d2);
 24932     0B66  30D8               	movlw	low _rd1RegCompleteHandler
 24933     0B67  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 24934     0B68  3010               	movlw	high _rd1RegCompleteHandler
 24935     0B69  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 24936     0B6A  3029               	movlw	(low (i2c_read1ByteRegister@d2| 0))& (0+255)
 24937     0B6B  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 24938     0B6C  319F  27D4  318B   	fcall	_I2C1_SetDataCompleteCallback
 24939     0B6F                     l13175:
 24940                           
 24941                           ;mcc_generated_files/drivers/i2c_simple_master.c: 107:         I2C1_SetBuffer(&reg,1);
 24942     0B6F  3001               	movlw	1
 24943     0B70  00F1               	movwf	I2C1_SetBuffer@bufferSize
 24944     0B71  3000               	movlw	0
 24945     0B72  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 24946     0B73  3024               	movlw	(low (i2c_read1ByteRegister@reg| 0))& (0+255)
 24947     0B74  3190  205E  318B   	fcall	_I2C1_SetBuffer
 24948     0B77                     l13177:
 24949                           
 24950                           ;mcc_generated_files/drivers/i2c_simple_master.c: 108:         I2C1_SetAddressNackCallba
      +                          ck(((void*)0),((void*)0));
 24951     0B77  3000               	movlw	0
 24952     0B78  00F5               	movwf	I2C1_SetAddressNackCallback@cb
 24953     0B79  00F6               	movwf	I2C1_SetAddressNackCallback@cb+1
 24954     0B7A  3000               	movlw	0
 24955     0B7B  00F7               	movwf	I2C1_SetAddressNackCallback@ptr
 24956     0B7C  00F8               	movwf	I2C1_SetAddressNackCallback@ptr+1
 24957     0B7D  319F  27DF  318B   	fcall	_I2C1_SetAddressNackCallback
 24958     0B80                     l13179:
 24959                           
 24960                           ;mcc_generated_files/drivers/i2c_simple_master.c: 109:         I2C1_MasterWrite();
 24961     0B80  319E  26DE  318B   	fcall	_I2C1_MasterWrite
 24962     0B83                     l13181:	
 24963                           ;mcc_generated_files/drivers/i2c_simple_master.c: 110:         while(I2C1_BUSY == (e = I
      +                          2C1_Close()));
 24964                           
 24965     0B83  3192  2231  318B   	fcall	_I2C1_Close
 24966     0B86  0140               	movlb	0	; select bank0
 24967     0B87  00A6               	movwf	i2c_read1ByteRegister@e
 24968     0B88  0326               	decf	i2c_read1ByteRegister@e,w
 24969     0B89  1903               	btfsc	3,2
 24970     0B8A  2B8C               	goto	u10031
 24971     0B8B  2B8D               	goto	u10030
 24972     0B8C                     u10031:
 24973     0B8C  2B83               	goto	l13181
 24974     0B8D                     u10030:
 24975     0B8D                     l13183:
 24976                           
 24977                           ;mcc_generated_files/drivers/i2c_simple_master.c: 111:         if(e==I2C1_NOERR) break;
 24978     0B8D  0826               	movf	i2c_read1ByteRegister@e,w
 24979     0B8E  1D03               	btfss	3,2
 24980     0B8F  2B91               	goto	u10041
 24981     0B90  2B92               	goto	u10040
 24982     0B91                     u10041:
 24983     0B91  2B93               	goto	l13187
 24984     0B92                     u10040:
 24985     0B92  2B9D               	goto	l13191
 24986     0B93                     l13187:
 24987                           
 24988                           ;mcc_generated_files/drivers/i2c_simple_master.c: 112:     }
 24989     0B93  30FF               	movlw	255
 24990     0B94  07A7               	addwf	i2c_read1ByteRegister@x,f
 24991     0B95  30FF               	movlw	255
 24992     0B96  3DA8               	addwfc	i2c_read1ByteRegister@x+1,f
 24993     0B97                     l13189:
 24994     0B97  0827               	movf	i2c_read1ByteRegister@x,w
 24995     0B98  0428               	iorwf	i2c_read1ByteRegister@x+1,w
 24996     0B99  1D03               	btfss	3,2
 24997     0B9A  2B9C               	goto	u10051
 24998     0B9B  2B9D               	goto	u10050
 24999     0B9C                     u10051:
 25000     0B9C  2B5C               	goto	l13171
 25001     0B9D                     u10050:
 25002     0B9D                     l13191:
 25003                           
 25004                           ;mcc_generated_files/drivers/i2c_simple_master.c: 115:     return d2;
 25005     0B9D  0829               	movf	i2c_read1ByteRegister@d2,w
 25006     0B9E                     l534:
 25007     0B9E  0008               	return
 25008     0B9F                     __end_of_i2c_read1ByteRegister:
 25009                           
 25010                           	psect	text110
 25011     1FDF                     __ptext110:	
 25012 ;; *************** function _I2C1_SetAddressNackCallback *****************
 25013 ;; Defined at:
 25014 ;;		line 283 in file "mcc_generated_files/i2c1_master.c"
 25015 ;; Parameters:    Size  Location     Type
 25016 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 25017 ;;		 -> NULL(1), 
 25018 ;;  ptr             2    7[COMMON] PTR void 
 25019 ;;		 -> NULL(0), 
 25020 ;; Auto vars:     Size  Location     Type
 25021 ;;		None
 25022 ;; Return value:  Size  Location     Type
 25023 ;;                  1    wreg      void 
 25024 ;; Registers used:
 25025 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25026 ;; Tracked objects:
 25027 ;;		On entry : 0/0
 25028 ;;		On exit  : 0/0
 25029 ;;		Unchanged: 0/0
 25030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25031 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25034 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25035 ;;Total ram usage:        4 bytes
 25036 ;; Hardware stack levels used: 1
 25037 ;; Hardware stack levels required when called: 5
 25038 ;; This function calls:
 25039 ;;		_I2C1_SetCallback
 25040 ;; This function is called by:
 25041 ;;		_i2c_write1ByteRegister
 25042 ;;		_i2c_read1ByteRegister
 25043 ;;		_i2c_read2ByteRegister
 25044 ;;		_i2c_writeNBytes
 25045 ;;		_i2c_write2ByteRegister
 25046 ;;		_i2c_readDataBlock
 25047 ;;		_I2C1_Read1ByteRegister
 25048 ;;		_I2C1_Read2ByteRegister
 25049 ;;		_I2C1_Write1ByteRegister
 25050 ;;		_I2C1_Write2ByteRegister
 25051 ;;		_I2C1_WriteNBytes
 25052 ;;		_I2C1_ReadDataBlock
 25053 ;; This function uses a non-reentrant model
 25054 ;;
 25055                           
 25056     1FDF                     _I2C1_SetAddressNackCallback:	
 25057                           ;psect for function _I2C1_SetAddressNackCallback
 25058                           
 25059     1FDF                     l13053:	
 25060                           ;incstack = 0
 25061                           ; Regs used in _I2C1_SetAddressNackCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 25062                           
 25063                           
 25064                           ;mcc_generated_files/i2c1_master.c: 283: void I2C1_SetAddressNackCallback(i2c1_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c1_master.c: 284: {;mcc_generated_files/i2c1_mast
      +                          er.c: 285:     I2C1_SetCallback(I2C1_ADDR_NACK, cb, ptr);
 25065     1FDF  0876               	movf	I2C1_SetAddressNackCallback@cb+1,w
 25066     1FE0  00F2               	movwf	I2C1_SetCallback@cb+1
 25067     1FE1  0875               	movf	I2C1_SetAddressNackCallback@cb,w
 25068     1FE2  00F1               	movwf	I2C1_SetCallback@cb
 25069     1FE3  0877               	movf	I2C1_SetAddressNackCallback@ptr,w
 25070     1FE4  00F3               	movwf	I2C1_SetCallback@ptr
 25071     1FE5  3002               	movlw	2
 25072     1FE6  3194  2445  319F   	fcall	_I2C1_SetCallback
 25073     1FE9                     l1778:
 25074     1FE9  0008               	return
 25075     1FEA                     __end_of_I2C1_SetAddressNackCallback:
 25076                           
 25077                           	psect	text111
 25078     17CA                     __ptext111:	
 25079 ;; *************** function _I2C1_Open *****************
 25080 ;; Defined at:
 25081 ;;		line 176 in file "mcc_generated_files/i2c1_master.c"
 25082 ;; Parameters:    Size  Location     Type
 25083 ;;  address         1    wreg     unsigned char 
 25084 ;; Auto vars:     Size  Location     Type
 25085 ;;  address         1    1[COMMON] unsigned char 
 25086 ;;  returnValue     1    2[COMMON] enum E358
 25087 ;; Return value:  Size  Location     Type
 25088 ;;                  1    wreg      enum E358
 25089 ;; Registers used:
 25090 ;;		wreg, status,2, status,0, pclath, cstack
 25091 ;; Tracked objects:
 25092 ;;		On entry : 0/0
 25093 ;;		On exit  : 0/0
 25094 ;;		Unchanged: 0/0
 25095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25097 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25099 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25100 ;;Total ram usage:        2 bytes
 25101 ;; Hardware stack levels used: 1
 25102 ;; Hardware stack levels required when called: 5
 25103 ;; This function calls:
 25104 ;;		_I2C1_MasterClearIrq
 25105 ;;		_I2C1_MasterOpen
 25106 ;; This function is called by:
 25107 ;;		_i2c_write1ByteRegister
 25108 ;;		_i2c_read1ByteRegister
 25109 ;;		_i2c_read2ByteRegister
 25110 ;;		_i2c_readNBytes
 25111 ;;		_i2c_writeNBytes
 25112 ;;		_i2c_write2ByteRegister
 25113 ;;		_i2c_readDataBlock
 25114 ;;		_I2C1_Read1ByteRegister
 25115 ;;		_I2C1_Read2ByteRegister
 25116 ;;		_I2C1_Write1ByteRegister
 25117 ;;		_I2C1_Write2ByteRegister
 25118 ;;		_I2C1_WriteNBytes
 25119 ;;		_I2C1_ReadNBytes
 25120 ;;		_I2C1_ReadDataBlock
 25121 ;; This function uses a non-reentrant model
 25122 ;;
 25123                           
 25124     17CA                     _I2C1_Open:	
 25125                           ;psect for function _I2C1_Open
 25126                           
 25127                           
 25128                           ;incstack = 0
 25129                           ; Regs used in _I2C1_Open: [wreg+status,2+status,0+pclath+cstack]
 25130                           ;I2C1_Open@address stored from wreg
 25131     17CA  00F1               	movwf	I2C1_Open@address
 25132     17CB                     l12881:
 25133                           
 25134                           ;mcc_generated_files/i2c1_master.c: 176: i2c1_error_t I2C1_Open(i2c1_address_t address);
      +                          mcc_generated_files/i2c1_master.c: 177: {;mcc_generated_files/i2c1_master.c: 178:     i2
      +                          c1_error_t returnValue = I2C1_BUSY;
 25135     17CB  01F2               	clrf	I2C1_Open@returnValue
 25136     17CC  0AF2               	incf	I2C1_Open@returnValue,f
 25137                           
 25138                           ;mcc_generated_files/i2c1_master.c: 180:     if(!I2C1_Status.inUse)
 25139     17CD  0141               	movlb	1	; select bank1
 25140     17CE  193C               	btfsc	(_I2C1_Status^(0+128)+28),2
 25141     17CF  2FD1               	goto	u9701
 25142     17D0  2FD2               	goto	u9700
 25143     17D1                     u9701:
 25144     17D1  2FFE               	goto	l1745
 25145     17D2                     u9700:
 25146     17D2                     l12883:
 25147                           
 25148                           ;mcc_generated_files/i2c1_master.c: 181:     {;mcc_generated_files/i2c1_master.c: 182:  
      +                                 I2C1_Status.address = address;
 25149     17D2  0871               	movf	I2C1_Open@address,w
 25150     17D3  00B6               	movwf	(_I2C1_Status^(0+128)+22)
 25151     17D4                     l12885:
 25152                           
 25153                           ;mcc_generated_files/i2c1_master.c: 183:         I2C1_Status.busy = 0;
 25154     17D4  10BC               	bcf	(_I2C1_Status^(0+128)+28),1
 25155     17D5                     l12887:
 25156                           
 25157                           ;mcc_generated_files/i2c1_master.c: 184:         I2C1_Status.inUse = 1;
 25158     17D5  153C               	bsf	(_I2C1_Status^(0+128)+28),2
 25159     17D6                     l12889:
 25160                           
 25161                           ;mcc_generated_files/i2c1_master.c: 185:         I2C1_Status.addressNackCheck = 0;
 25162     17D6  103C               	bcf	(_I2C1_Status^(0+128)+28),0
 25163                           
 25164                           ;mcc_generated_files/i2c1_master.c: 186:         I2C1_Status.state = I2C1_RESET;
 25165     17D7  300E               	movlw	14
 25166     17D8  00BA               	movwf	(_I2C1_Status^(0+128)+26)
 25167                           
 25168                           ;mcc_generated_files/i2c1_master.c: 187:         I2C1_Status.time_out_value = 500;
 25169     17D9  30F4               	movlw	244
 25170     17DA  00B4               	movwf	(_I2C1_Status^(0+128)+20)
 25171     17DB  3001               	movlw	1
 25172     17DC  00B5               	movwf	(_I2C1_Status^(0+128)+21)
 25173     17DD                     l12891:
 25174                           
 25175                           ;mcc_generated_files/i2c1_master.c: 188:         I2C1_Status.bufferFree = 1;
 25176     17DD  15BC               	bsf	(_I2C1_Status^(0+128)+28),3
 25177                           
 25178                           ;mcc_generated_files/i2c1_master.c: 191:         I2C1_Status.callbackTable[I2C1_DATA_COM
      +                          PLETE]=I2C1_CallbackReturnStop;
 25179     17DE  306A               	movlw	low _I2C1_CallbackReturnStop
 25180     17DF  00A0               	movwf	_I2C1_Status^(0+128)
 25181     17E0  301E               	movlw	high _I2C1_CallbackReturnStop
 25182     17E1  00A1               	movwf	(_I2C1_Status^(0+128)+1)
 25183     17E2                     l12893:
 25184                           
 25185                           ;mcc_generated_files/i2c1_master.c: 192:         I2C1_Status.callbackPayload[I2C1_DATA_C
      +                          OMPLETE] = ((void*)0);
 25186     17E2  01AC               	clrf	(low ((_I2C1_Status| 0+12)))^(0+128)
 25187     17E3                     l12895:
 25188                           
 25189                           ;mcc_generated_files/i2c1_master.c: 193:         I2C1_Status.callbackTable[I2C1_WRITE_CO
      +                          LLISION]=I2C1_CallbackReturnStop;
 25190     17E3  306A               	movlw	low _I2C1_CallbackReturnStop
 25191     17E4  00A2               	movwf	(low ((_I2C1_Status| 0+2)))^(0+128)
 25192     17E5  301E               	movlw	high _I2C1_CallbackReturnStop
 25193     17E6  00A3               	movwf	((low ((_I2C1_Status| 0+2)))^(0+128)+1)
 25194                           
 25195                           ;mcc_generated_files/i2c1_master.c: 194:         I2C1_Status.callbackPayload[I2C1_WRITE_
      +                          COLLISION] = ((void*)0);
 25196     17E7  01AD               	clrf	(low ((_I2C1_Status| 0+13)))^(0+128)
 25197     17E8                     l12897:
 25198                           
 25199                           ;mcc_generated_files/i2c1_master.c: 195:         I2C1_Status.callbackTable[I2C1_ADDR_NAC
      +                          K]=I2C1_CallbackReturnStop;
 25200     17E8  306A               	movlw	low _I2C1_CallbackReturnStop
 25201     17E9  00A4               	movwf	(low ((_I2C1_Status| 0+4)))^(0+128)
 25202     17EA  301E               	movlw	high _I2C1_CallbackReturnStop
 25203     17EB  00A5               	movwf	((low ((_I2C1_Status| 0+4)))^(0+128)+1)
 25204     17EC                     l12899:
 25205                           
 25206                           ;mcc_generated_files/i2c1_master.c: 196:         I2C1_Status.callbackPayload[I2C1_ADDR_N
      +                          ACK] = ((void*)0);
 25207     17EC  01AE               	clrf	(low ((_I2C1_Status| 0+14)))^(0+128)
 25208                           
 25209                           ;mcc_generated_files/i2c1_master.c: 197:         I2C1_Status.callbackTable[I2C1_DATA_NAC
      +                          K]=I2C1_CallbackReturnStop;
 25210     17ED  306A               	movlw	low _I2C1_CallbackReturnStop
 25211     17EE  00A6               	movwf	(low ((_I2C1_Status| 0+6)))^(0+128)
 25212     17EF  301E               	movlw	high _I2C1_CallbackReturnStop
 25213     17F0  00A7               	movwf	((low ((_I2C1_Status| 0+6)))^(0+128)+1)
 25214     17F1                     l12901:
 25215                           
 25216                           ;mcc_generated_files/i2c1_master.c: 198:         I2C1_Status.callbackPayload[I2C1_DATA_N
      +                          ACK] = ((void*)0);
 25217     17F1  01AF               	clrf	(low ((_I2C1_Status| 0+15)))^(0+128)
 25218     17F2                     l12903:
 25219                           
 25220                           ;mcc_generated_files/i2c1_master.c: 199:         I2C1_Status.callbackTable[I2C1_TIMEOUT]
      +                          =I2C1_CallbackReturnReset;
 25221     17F2  306C               	movlw	low _I2C1_CallbackReturnReset
 25222     17F3  00A8               	movwf	(low ((_I2C1_Status| 0+8)))^(0+128)
 25223     17F4  301E               	movlw	high _I2C1_CallbackReturnReset
 25224     17F5  00A9               	movwf	((low ((_I2C1_Status| 0+8)))^(0+128)+1)
 25225                           
 25226                           ;mcc_generated_files/i2c1_master.c: 200:         I2C1_Status.callbackPayload[I2C1_TIMEOU
      +                          T] = ((void*)0);
 25227     17F6  01B0               	clrf	(low ((_I2C1_Status| 0+16)))^(0+128)
 25228     17F7                     l12905:
 25229                           
 25230                           ;mcc_generated_files/i2c1_master.c: 202:         I2C1_MasterClearIrq();
 25231     17F7  319E  266E  3197   	fcall	_I2C1_MasterClearIrq
 25232     17FA                     l12907:
 25233                           
 25234                           ;mcc_generated_files/i2c1_master.c: 203:         I2C1_MasterOpen();
 25235     17FA  3190  2044  3197   	fcall	_I2C1_MasterOpen
 25236     17FD                     l12909:
 25237                           
 25238                           ;mcc_generated_files/i2c1_master.c: 204:         returnValue = I2C1_NOERR;
 25239     17FD  01F2               	clrf	I2C1_Open@returnValue
 25240     17FE                     l1745:	
 25241                           ;mcc_generated_files/i2c1_master.c: 205:     }
 25242                           
 25243                           
 25244                           ;mcc_generated_files/i2c1_master.c: 206:     return returnValue;
 25245     17FE  0872               	movf	I2C1_Open@returnValue,w
 25246     17FF                     l1746:
 25247     17FF  0008               	return
 25248     1800                     __end_of_I2C1_Open:
 25249                           
 25250                           	psect	text112
 25251     1044                     __ptext112:	
 25252 ;; *************** function _I2C1_MasterOpen *****************
 25253 ;; Defined at:
 25254 ;;		line 543 in file "mcc_generated_files/i2c1_master.c"
 25255 ;; Parameters:    Size  Location     Type
 25256 ;;		None
 25257 ;; Auto vars:     Size  Location     Type
 25258 ;;		None
 25259 ;; Return value:  Size  Location     Type
 25260 ;;                  1    wreg      _Bool 
 25261 ;; Registers used:
 25262 ;;		wreg, status,2
 25263 ;; Tracked objects:
 25264 ;;		On entry : 0/0
 25265 ;;		On exit  : 0/0
 25266 ;;		Unchanged: 0/0
 25267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25272 ;;Total ram usage:        0 bytes
 25273 ;; Hardware stack levels used: 1
 25274 ;; Hardware stack levels required when called: 4
 25275 ;; This function calls:
 25276 ;;		Nothing
 25277 ;; This function is called by:
 25278 ;;		_I2C1_Open
 25279 ;; This function uses a non-reentrant model
 25280 ;;
 25281                           
 25282     1044                     _I2C1_MasterOpen:	
 25283                           ;psect for function _I2C1_MasterOpen
 25284                           
 25285     1044                     l12845:	
 25286                           ;incstack = 0
 25287                           ; Regs used in _I2C1_MasterOpen: [wreg+status,2]
 25288                           
 25289                           
 25290                           ;mcc_generated_files/i2c1_master.c: 545:     if(!SSP1CON1bits.SSPEN)
 25291     1044  0143               	movlb	3	; select bank3
 25292     1045  1A90               	btfsc	16,5	;volatile
 25293     1046  2848               	goto	u9671
 25294     1047  2849               	goto	u9670
 25295     1048                     u9671:
 25296     1048  2850               	goto	l1911
 25297     1049                     u9670:
 25298     1049                     l12847:
 25299                           
 25300                           ;mcc_generated_files/i2c1_master.c: 546:     {;mcc_generated_files/i2c1_master.c: 547:  
      +                                 SSP1STAT = 0x00;
 25301     1049  018F               	clrf	15	;volatile
 25302     104A                     l12849:
 25303                           
 25304                           ;mcc_generated_files/i2c1_master.c: 548:         SSP1CON1 = 0x08;
 25305     104A  3008               	movlw	8
 25306     104B  0090               	movwf	16	;volatile
 25307     104C                     l12851:
 25308                           
 25309                           ;mcc_generated_files/i2c1_master.c: 549:         SSP1CON2 = 0x00;
 25310     104C  0191               	clrf	17	;volatile
 25311                           
 25312                           ;mcc_generated_files/i2c1_master.c: 550:         SSP1ADD = 0x4F;
 25313     104D  304F               	movlw	79
 25314     104E  008D               	movwf	13	;volatile
 25315     104F                     l12853:
 25316                           
 25317                           ;mcc_generated_files/i2c1_master.c: 551:         SSP1CON1bits.SSPEN = 1;
 25318     104F  1690               	bsf	16,5	;volatile
 25319     1050                     l1911:
 25320     1050  0008               	return
 25321     1051                     __end_of_I2C1_MasterOpen:
 25322                           
 25323                           	psect	text113
 25324     1EDE                     __ptext113:	
 25325 ;; *************** function _I2C1_MasterWrite *****************
 25326 ;; Defined at:
 25327 ;;		line 251 in file "mcc_generated_files/i2c1_master.c"
 25328 ;; Parameters:    Size  Location     Type
 25329 ;;		None
 25330 ;; Auto vars:     Size  Location     Type
 25331 ;;		None
 25332 ;; Return value:  Size  Location     Type
 25333 ;;                  1    wreg      enum E358
 25334 ;; Registers used:
 25335 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25336 ;; Tracked objects:
 25337 ;;		On entry : 0/0
 25338 ;;		On exit  : 0/0
 25339 ;;		Unchanged: 0/0
 25340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25345 ;;Total ram usage:        0 bytes
 25346 ;; Hardware stack levels used: 1
 25347 ;; Hardware stack levels required when called: 11
 25348 ;; This function calls:
 25349 ;;		_I2C1_MasterOperation
 25350 ;; This function is called by:
 25351 ;;		_i2c_write1ByteRegister
 25352 ;;		_i2c_read1ByteRegister
 25353 ;;		_i2c_read2ByteRegister
 25354 ;;		_i2c_writeNBytes
 25355 ;;		_i2c_write2ByteRegister
 25356 ;;		_i2c_readDataBlock
 25357 ;;		_I2C1_Read1ByteRegister
 25358 ;;		_I2C1_Read2ByteRegister
 25359 ;;		_I2C1_Write1ByteRegister
 25360 ;;		_I2C1_Write2ByteRegister
 25361 ;;		_I2C1_WriteNBytes
 25362 ;;		_I2C1_ReadDataBlock
 25363 ;; This function uses a non-reentrant model
 25364 ;;
 25365                           
 25366     1EDE                     _I2C1_MasterWrite:	
 25367                           ;psect for function _I2C1_MasterWrite
 25368                           
 25369     1EDE                     l13055:	
 25370                           ;incstack = 0
 25371                           ; Regs used in _I2C1_MasterWrite: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25372                           
 25373                           
 25374                           ;mcc_generated_files/i2c1_master.c: 253:     return I2C1_MasterOperation(0);;	Return val
      +                          ue of _I2C1_MasterWrite is never used
 25375     1EDE  3000               	movlw	0
 25376     1EDF  3193  23BD  319E   	fcall	_I2C1_MasterOperation
 25377     1EE2                     l1762:
 25378     1EE2  0008               	return
 25379     1EE3                     __end_of_I2C1_MasterWrite:
 25380                           
 25381                           	psect	text114
 25382     13BD                     __ptext114:	
 25383 ;; *************** function _I2C1_MasterOperation *****************
 25384 ;; Defined at:
 25385 ;;		line 224 in file "mcc_generated_files/i2c1_master.c"
 25386 ;; Parameters:    Size  Location     Type
 25387 ;;  read            1    wreg     _Bool 
 25388 ;; Auto vars:     Size  Location     Type
 25389 ;;  read            1    2[BANK0 ] _Bool 
 25390 ;;  returnValue     1    3[BANK0 ] enum E358
 25391 ;; Return value:  Size  Location     Type
 25392 ;;                  1    wreg      enum E358
 25393 ;; Registers used:
 25394 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25395 ;; Tracked objects:
 25396 ;;		On entry : 0/0
 25397 ;;		On exit  : 0/0
 25398 ;;		Unchanged: 0/0
 25399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25401 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25403 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25404 ;;Total ram usage:        2 bytes
 25405 ;; Hardware stack levels used: 1
 25406 ;; Hardware stack levels required when called: 10
 25407 ;; This function calls:
 25408 ;;		_I2C1_MasterStart
 25409 ;;		_I2C1_Poller
 25410 ;; This function is called by:
 25411 ;;		_I2C1_MasterRead
 25412 ;;		_I2C1_MasterWrite
 25413 ;; This function uses a non-reentrant model
 25414 ;;
 25415                           
 25416     13BD                     _I2C1_MasterOperation:	
 25417                           ;psect for function _I2C1_MasterOperation
 25418                           
 25419                           
 25420                           ;incstack = 0
 25421                           ; Regs used in _I2C1_MasterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25422                           ;I2C1_MasterOperation@read stored from wreg
 25423     13BD  0140               	movlb	0	; select bank0
 25424     13BE  00A2               	movwf	I2C1_MasterOperation@read
 25425     13BF                     l12861:
 25426                           
 25427                           ;mcc_generated_files/i2c1_master.c: 224: i2c1_error_t I2C1_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c1_master.c: 225: {;mcc_generated_files/i2c1_master.c: 226:     i2c
      +                          1_error_t returnValue = I2C1_BUSY;
 25428     13BF  01A3               	clrf	I2C1_MasterOperation@returnValue
 25429     13C0  0AA3               	incf	I2C1_MasterOperation@returnValue,f
 25430                           
 25431                           ;mcc_generated_files/i2c1_master.c: 227:     if(!I2C1_Status.busy)
 25432     13C1  0141               	movlb	1	; select bank1
 25433     13C2  18BC               	btfsc	(_I2C1_Status^(0+128)+28),1
 25434     13C3  2BC5               	goto	u9681
 25435     13C4  2BC6               	goto	u9680
 25436     13C5                     u9681:
 25437     13C5  2BDB               	goto	l12877
 25438     13C6                     u9680:
 25439     13C6                     l12863:
 25440                           
 25441                           ;mcc_generated_files/i2c1_master.c: 228:     {;mcc_generated_files/i2c1_master.c: 229:  
      +                                 I2C1_Status.busy = 1;
 25442     13C6  14BC               	bsf	(_I2C1_Status^(0+128)+28),1
 25443     13C7                     l12865:
 25444                           
 25445                           ;mcc_generated_files/i2c1_master.c: 230:         returnValue = I2C1_NOERR;
 25446     13C7  0140               	movlb	0	; select bank0
 25447     13C8  01A3               	clrf	I2C1_MasterOperation@returnValue
 25448     13C9                     l12867:
 25449                           
 25450                           ;mcc_generated_files/i2c1_master.c: 232:         if(read)
 25451     13C9  0822               	movf	I2C1_MasterOperation@read,w
 25452     13CA  1903               	btfsc	3,2
 25453     13CB  2BCD               	goto	u9691
 25454     13CC  2BCE               	goto	u9690
 25455     13CD                     u9691:
 25456     13CD  2BD2               	goto	l12871
 25457     13CE                     u9690:
 25458     13CE                     l12869:
 25459                           
 25460                           ;mcc_generated_files/i2c1_master.c: 233:         {;mcc_generated_files/i2c1_master.c: 23
      +                          4:             I2C1_Status.state = I2C1_SEND_ADR_READ;
 25461     13CE  0141               	movlb	1	; select bank1
 25462     13CF  01BA               	clrf	(_I2C1_Status^(0+128)+26)
 25463     13D0  0ABA               	incf	(_I2C1_Status^(0+128)+26),f
 25464                           
 25465                           ;mcc_generated_files/i2c1_master.c: 235:         }
 25466     13D1  2BD5               	goto	l12873
 25467     13D2                     l12871:
 25468                           
 25469                           ;mcc_generated_files/i2c1_master.c: 237:         {;mcc_generated_files/i2c1_master.c: 23
      +                          8:             I2C1_Status.state = I2C1_SEND_ADR_WRITE;
 25470     13D2  3002               	movlw	2
 25471     13D3  0141               	movlb	1	; select bank1
 25472     13D4  00BA               	movwf	(_I2C1_Status^(0+128)+26)
 25473     13D5                     l12873:
 25474                           
 25475                           ;mcc_generated_files/i2c1_master.c: 240:         I2C1_MasterStart();
 25476     13D5  319E  2677  3193   	fcall	_I2C1_MasterStart
 25477     13D8                     l12875:
 25478                           
 25479                           ;mcc_generated_files/i2c1_master.c: 241:         I2C1_Poller();
 25480     13D8  3190  2037  3193   	fcall	_I2C1_Poller
 25481     13DB                     l12877:
 25482                           
 25483                           ;mcc_generated_files/i2c1_master.c: 243:     return returnValue;
 25484     13DB  0140               	movlb	0	; select bank0
 25485     13DC  0823               	movf	I2C1_MasterOperation@returnValue,w
 25486     13DD                     l1756:
 25487     13DD  0008               	return
 25488     13DE                     __end_of_I2C1_MasterOperation:
 25489                           
 25490                           	psect	text115
 25491     1037                     __ptext115:	
 25492 ;; *************** function _I2C1_Poller *****************
 25493 ;; Defined at:
 25494 ;;		line 312 in file "mcc_generated_files/i2c1_master.c"
 25495 ;; Parameters:    Size  Location     Type
 25496 ;;		None
 25497 ;; Auto vars:     Size  Location     Type
 25498 ;;		None
 25499 ;; Return value:  Size  Location     Type
 25500 ;;                  1    wreg      void 
 25501 ;; Registers used:
 25502 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25503 ;; Tracked objects:
 25504 ;;		On entry : 0/0
 25505 ;;		On exit  : 0/0
 25506 ;;		Unchanged: 0/0
 25507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25512 ;;Total ram usage:        0 bytes
 25513 ;; Hardware stack levels used: 1
 25514 ;; Hardware stack levels required when called: 9
 25515 ;; This function calls:
 25516 ;;		_I2C1_MasterFsm
 25517 ;;		_I2C1_MasterWaitForEvent
 25518 ;; This function is called by:
 25519 ;;		_I2C1_MasterOperation
 25520 ;; This function uses a non-reentrant model
 25521 ;;
 25522                           
 25523     1037                     _I2C1_Poller:	
 25524                           ;psect for function _I2C1_Poller
 25525                           
 25526     1037                     l12837:	
 25527                           ;incstack = 0
 25528                           ; Regs used in _I2C1_Poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25529                           
 25530                           
 25531                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 25532     1037  283E               	goto	l12843
 25533     1038                     l12839:
 25534                           
 25535                           ;mcc_generated_files/i2c1_master.c: 315:     {;mcc_generated_files/i2c1_master.c: 316:  
      +                                 I2C1_MasterWaitForEvent();
 25536     1038  319E  26F8  3190   	fcall	_I2C1_MasterWaitForEvent
 25537     103B                     l12841:
 25538                           
 25539                           ;mcc_generated_files/i2c1_master.c: 317:         I2C1_MasterFsm();
 25540     103B  3195  259A  3190   	fcall	_I2C1_MasterFsm
 25541     103E                     l12843:
 25542                           
 25543                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 25544     103E  0141               	movlb	1	; select bank1
 25545     103F  18BC               	btfsc	(_I2C1_Status^(0+128)+28),1
 25546     1040  2842               	goto	u9661
 25547     1041  2843               	goto	u9660
 25548     1042                     u9661:
 25549     1042  2838               	goto	l12839
 25550     1043                     u9660:
 25551     1043                     l1795:
 25552     1043  0008               	return
 25553     1044                     __end_of_I2C1_Poller:
 25554                           
 25555                           	psect	text116
 25556     1EF8                     __ptext116:	
 25557 ;; *************** function _I2C1_MasterWaitForEvent *****************
 25558 ;; Defined at:
 25559 ;;		line 650 in file "mcc_generated_files/i2c1_master.c"
 25560 ;; Parameters:    Size  Location     Type
 25561 ;;		None
 25562 ;; Auto vars:     Size  Location     Type
 25563 ;;		None
 25564 ;; Return value:  Size  Location     Type
 25565 ;;                  1    wreg      void 
 25566 ;; Registers used:
 25567 ;;		None
 25568 ;; Tracked objects:
 25569 ;;		On entry : 0/0
 25570 ;;		On exit  : 0/0
 25571 ;;		Unchanged: 0/0
 25572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25577 ;;Total ram usage:        0 bytes
 25578 ;; Hardware stack levels used: 1
 25579 ;; Hardware stack levels required when called: 4
 25580 ;; This function calls:
 25581 ;;		Nothing
 25582 ;; This function is called by:
 25583 ;;		_I2C1_Poller
 25584 ;; This function uses a non-reentrant model
 25585 ;;
 25586                           
 25587     1EF8                     _I2C1_MasterWaitForEvent:	
 25588                           ;psect for function _I2C1_MasterWaitForEvent
 25589                           
 25590     1EF8                     l1968:	
 25591                           ;incstack = 0
 25592                           ; Regs used in _I2C1_MasterWaitForEvent: []
 25593                           ;mcc_generated_files/i2c1_master.c: 652:     while(1)
 25594                           
 25595                           
 25596                           ;mcc_generated_files/i2c1_master.c: 653:     {;mcc_generated_files/i2c1_master.c: 654:  
      +                                 if(PIR3bits.SSP1IF)
 25597     1EF8  014E               	movlb	14	; select bank14
 25598     1EF9  1C0F               	btfss	15,0	;volatile
 25599     1EFA  2EFC               	goto	u9631
 25600     1EFB  2EFD               	goto	u9630
 25601     1EFC                     u9631:
 25602     1EFC  2EF8               	goto	l1968
 25603     1EFD                     u9630:
 25604     1EFD                     l1972:
 25605     1EFD  0008               	return
 25606     1EFE                     __end_of_I2C1_MasterWaitForEvent:
 25607                           
 25608                           	psect	text117
 25609     159A                     __ptext117:	
 25610 ;; *************** function _I2C1_MasterFsm *****************
 25611 ;; Defined at:
 25612 ;;		line 321 in file "mcc_generated_files/i2c1_master.c"
 25613 ;; Parameters:    Size  Location     Type
 25614 ;;		None
 25615 ;; Auto vars:     Size  Location     Type
 25616 ;;		None
 25617 ;; Return value:  Size  Location     Type
 25618 ;;                  1    wreg      void 
 25619 ;; Registers used:
 25620 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25621 ;; Tracked objects:
 25622 ;;		On entry : 0/0
 25623 ;;		On exit  : 0/0
 25624 ;;		Unchanged: 0/0
 25625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25628 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25629 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25630 ;;Total ram usage:        2 bytes
 25631 ;; Hardware stack levels used: 1
 25632 ;; Hardware stack levels required when called: 8
 25633 ;; This function calls:
 25634 ;;		_I2C1_DO_ADDRESS_NACK
 25635 ;;		_I2C1_DO_IDLE
 25636 ;;		_I2C1_DO_RCEN
 25637 ;;		_I2C1_DO_RESET
 25638 ;;		_I2C1_DO_RX
 25639 ;;		_I2C1_DO_RX_ACK
 25640 ;;		_I2C1_DO_RX_NACK_RESTART
 25641 ;;		_I2C1_DO_RX_NACK_STOP
 25642 ;;		_I2C1_DO_SEND_ADR_READ
 25643 ;;		_I2C1_DO_SEND_ADR_WRITE
 25644 ;;		_I2C1_DO_SEND_RESTART
 25645 ;;		_I2C1_DO_SEND_RESTART_READ
 25646 ;;		_I2C1_DO_SEND_RESTART_WRITE
 25647 ;;		_I2C1_DO_SEND_STOP
 25648 ;;		_I2C1_DO_TX
 25649 ;;		_I2C1_DO_TX_EMPTY
 25650 ;;		_I2C1_MasterClearIrq
 25651 ;;		_I2C1_MasterIsNack
 25652 ;; This function is called by:
 25653 ;;		_I2C1_Poller
 25654 ;; This function uses a non-reentrant model
 25655 ;;
 25656                           
 25657     159A                     _I2C1_MasterFsm:	
 25658                           ;psect for function _I2C1_MasterFsm
 25659                           
 25660     159A                     l12825:	
 25661                           ;incstack = 0
 25662                           ; Regs used in _I2C1_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25663                           
 25664                           
 25665                           ;mcc_generated_files/i2c1_master.c: 323:     I2C1_MasterClearIrq();
 25666     159A  319E  266E  3195   	fcall	_I2C1_MasterClearIrq
 25667     159D                     l12827:
 25668                           
 25669                           ;mcc_generated_files/i2c1_master.c: 325:     if(I2C1_Status.addressNackCheck && I2C1_Mas
      +                          terIsNack())
 25670     159D  0141               	movlb	1	; select bank1
 25671     159E  1C3C               	btfss	(_I2C1_Status^(0+128)+28),0
 25672     159F  2DA1               	goto	u9641
 25673     15A0  2DA2               	goto	u9640
 25674     15A1                     u9641:
 25675     15A1  2DAD               	goto	l12833
 25676     15A2                     u9640:
 25677     15A2                     l12829:
 25678     15A2  319E  26F2  3195   	fcall	_I2C1_MasterIsNack
 25679     15A5  3A00               	xorlw	0
 25680     15A6  1903               	skipnz
 25681     15A7  2DA9               	goto	u9651
 25682     15A8  2DAA               	goto	u9650
 25683     15A9                     u9651:
 25684     15A9  2DAD               	goto	l12833
 25685     15AA                     u9650:
 25686     15AA                     l12831:
 25687                           
 25688                           ;mcc_generated_files/i2c1_master.c: 326:     {;mcc_generated_files/i2c1_master.c: 327:  
      +                                 I2C1_Status.state = I2C1_ADDRESS_NACK;
 25689     15AA  300F               	movlw	15
 25690     15AB  0141               	movlb	1	; select bank1
 25691     15AC  00BA               	movwf	(_I2C1_Status^(0+128)+26)
 25692     15AD                     l12833:
 25693                           
 25694                           ;mcc_generated_files/i2c1_master.c: 329:     I2C1_Status.state = i2c1_fsmStateTable[I2C1
      +                          _Status.state]();
 25695     15AD  0141               	movlb	1	; select bank1
 25696     15AE  083A               	movf	(_I2C1_Status^(0+128)+26),w
 25697     15AF  0140               	movlb	0	; select bank0
 25698     15B0  00A0               	movwf	??_I2C1_MasterFsm
 25699     15B1  01A1               	clrf	??_I2C1_MasterFsm+1
 25700     15B2  35A0               	lslf	??_I2C1_MasterFsm,f
 25701     15B3  0DA1               	rlf	??_I2C1_MasterFsm+1,f
 25702     15B4  3028               	movlw	low _i2c1_fsmStateTable
 25703     15B5  0720               	addwf	??_I2C1_MasterFsm,w
 25704     15B6  0084               	movwf	4
 25705     15B7  3018               	movlw	high _i2c1_fsmStateTable
 25706     15B8  3D21               	addwfc	??_I2C1_MasterFsm+1,w
 25707     15B9  3880               	iorlw	128
 25708     15BA  0085               	movwf	5
 25709     15BB  3F01               	moviw [1]fsr0
 25710     15BC  008A               	movwf	10
 25711     15BD  3F00               	moviw [0]fsr0
 25712     15BE  000A               	callw
 25713     15BF  3195               	pagesel	$
 25714     15C0  0141               	movlb	1	; select bank1
 25715     15C1  00BA               	movwf	(_I2C1_Status^(0+128)+26)
 25716     15C2                     l1799:
 25717     15C2  0008               	return
 25718     15C3                     __end_of_I2C1_MasterFsm:
 25719                           
 25720                           	psect	text118
 25721     1572                     __ptext118:	
 25722 ;; *************** function _I2C1_DO_ADDRESS_NACK *****************
 25723 ;; Defined at:
 25724 ;;		line 500 in file "mcc_generated_files/i2c1_master.c"
 25725 ;; Parameters:    Size  Location     Type
 25726 ;;		None
 25727 ;; Auto vars:     Size  Location     Type
 25728 ;;		None
 25729 ;; Return value:  Size  Location     Type
 25730 ;;                  1    wreg      enum E12565
 25731 ;; Registers used:
 25732 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25733 ;; Tracked objects:
 25734 ;;		On entry : 0/0
 25735 ;;		On exit  : 0/0
 25736 ;;		Unchanged: 0/0
 25737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25740 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25741 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25742 ;;Total ram usage:        2 bytes
 25743 ;; Hardware stack levels used: 1
 25744 ;; Hardware stack levels required when called: 7
 25745 ;; This function calls:
 25746 ;;		NULL
 25747 ;;		_I2C1_CallbackReturnReset
 25748 ;;		_I2C1_CallbackReturnStop
 25749 ;;		_I2C1_DO_SEND_RESTART
 25750 ;;		_I2C1_DO_SEND_STOP
 25751 ;;		_rd1RegCompleteHandler
 25752 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1239
 25753 ;;		_rd2RegCompleteHandler
 25754 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1250
 25755 ;;		_rdBlkRegCompleteHandler
 25756 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1273
 25757 ;;		_wr1RegCompleteHandler
 25758 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1256
 25759 ;;		_wr2RegCompleteHandler
 25760 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1262
 25761 ;; This function is called by:
 25762 ;;		_I2C1_MasterFsm
 25763 ;; This function uses a non-reentrant model
 25764 ;;
 25765                           
 25766     1572                     _I2C1_DO_ADDRESS_NACK:	
 25767                           ;psect for function _I2C1_DO_ADDRESS_NACK
 25768                           
 25769     1572                     l12801:	
 25770                           ;incstack = 0
 25771                           ; Regs used in _I2C1_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25772                           
 25773                           
 25774                           ;mcc_generated_files/i2c1_master.c: 502:     I2C1_Status.addressNackCheck = 0;
 25775     1572  0141               	movlb	1	; select bank1
 25776     1573  103C               	bcf	(_I2C1_Status^(0+128)+28),0
 25777     1574                     l12803:
 25778                           
 25779                           ;mcc_generated_files/i2c1_master.c: 503:     I2C1_Status.error = I2C1_FAIL;
 25780     1574  3002               	movlw	2
 25781     1575  00BB               	movwf	(_I2C1_Status^(0+128)+27)
 25782                           
 25783                           ;mcc_generated_files/i2c1_master.c: 504:     switch(I2C1_Status.callbackTable[I2C1_ADDR_
      +                          NACK](I2C1_Status.callbackPayload[I2C1_ADDR_NACK]))
 25784     1576  2D7F               	goto	l12815
 25785     1577                     l12805:
 25786                           
 25787                           ;mcc_generated_files/i2c1_master.c: 508:             return I2C1_DO_SEND_RESTART();
 25788     1577  319E  26C0  3195   	fcall	_I2C1_DO_SEND_RESTART
 25789     157A  2D99               	goto	l1890
 25790     157B                     l12809:
 25791                           
 25792                           ;mcc_generated_files/i2c1_master.c: 510:             return I2C1_DO_SEND_STOP();
 25793     157B  319E  26C5  3195   	fcall	_I2C1_DO_SEND_STOP
 25794     157E  2D99               	goto	l1890
 25795     157F                     l12815:
 25796     157F  082E               	movf	(low ((_I2C1_Status| 0+14)))^(0+128),w
 25797     1580  00F8               	movwf	I2C1_CallbackReturnReset@funPtr
 25798     1581  3004               	movlw	4
 25799     1582  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 25800     1583  0086               	movwf	6
 25801     1584  0187               	clrf	7
 25802     1585  3F41               	moviw [1]fsr1
 25803     1586  008A               	movwf	10
 25804     1587  3F40               	moviw [0]fsr1
 25805     1588  000A               	callw
 25806     1589  3195               	pagesel	$
 25807     158A  00F9               	movwf	??_I2C1_DO_ADDRESS_NACK
 25808     158B  01FA               	clrf	??_I2C1_DO_ADDRESS_NACK+1
 25809                           
 25810                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25811                           ; Switch size 1, requested type "simple"
 25812                           ; Number of cases is 1, Range of values is 0 to 0
 25813                           ; switch strategies available:
 25814                           ; Name         Instructions Cycles
 25815                           ; simple_byte            4     3 (average)
 25816                           ; direct_byte            8     6 (fixed)
 25817                           ; jumptable            260     6 (fixed)
 25818                           ;	Chosen strategy is simple_byte
 25819     158C  087A               	movf	??_I2C1_DO_ADDRESS_NACK+1,w
 25820     158D  3A00               	xorlw	0	; case 0
 25821     158E  1903               	skipnz
 25822     158F  2D91               	goto	l16613
 25823     1590  2D7B               	goto	l12809
 25824     1591                     l16613:
 25825                           
 25826                           ; Switch size 1, requested type "simple"
 25827                           ; Number of cases is 2, Range of values is 2 to 3
 25828                           ; switch strategies available:
 25829                           ; Name         Instructions Cycles
 25830                           ; simple_byte            7     4 (average)
 25831                           ; direct_byte           13     9 (fixed)
 25832                           ; jumptable            263     9 (fixed)
 25833                           ;	Chosen strategy is simple_byte
 25834     1591  0879               	movf	??_I2C1_DO_ADDRESS_NACK,w
 25835     1592  3A02               	xorlw	2	; case 2
 25836     1593  1903               	skipnz
 25837     1594  2D77               	goto	l12805
 25838     1595  3A01               	xorlw	1	; case 3
 25839     1596  1903               	skipnz
 25840     1597  2D77               	goto	l12805
 25841     1598  2D7B               	goto	l12809
 25842     1599                     l1890:
 25843     1599  0008               	return
 25844     159A                     __end_of_I2C1_DO_ADDRESS_NACK:
 25845                           
 25846                           	psect	text119
 25847     1ED9                     __ptext119:	
 25848 ;; *************** function _I2C1_DO_RESET *****************
 25849 ;; Defined at:
 25850 ;;		line 494 in file "mcc_generated_files/i2c1_master.c"
 25851 ;; Parameters:    Size  Location     Type
 25852 ;;		None
 25853 ;; Auto vars:     Size  Location     Type
 25854 ;;		None
 25855 ;; Return value:  Size  Location     Type
 25856 ;;                  1    wreg      enum E12565
 25857 ;; Registers used:
 25858 ;;		wreg, status,2
 25859 ;; Tracked objects:
 25860 ;;		On entry : 0/0
 25861 ;;		On exit  : 0/0
 25862 ;;		Unchanged: 0/0
 25863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25868 ;;Total ram usage:        0 bytes
 25869 ;; Hardware stack levels used: 1
 25870 ;; Hardware stack levels required when called: 4
 25871 ;; This function calls:
 25872 ;;		Nothing
 25873 ;; This function is called by:
 25874 ;;		_I2C1_MasterFsm
 25875 ;; This function uses a non-reentrant model
 25876 ;;
 25877                           
 25878     1ED9                     _I2C1_DO_RESET:	
 25879                           ;psect for function _I2C1_DO_RESET
 25880                           
 25881     1ED9                     l12793:	
 25882                           ;incstack = 0
 25883                           ; Regs used in _I2C1_DO_RESET: [wreg+status,2]
 25884                           
 25885                           
 25886                           ;mcc_generated_files/i2c1_master.c: 496:     I2C1_Status.busy = 0;
 25887     1ED9  0141               	movlb	1	; select bank1
 25888     1EDA  10BC               	bcf	(_I2C1_Status^(0+128)+28),1
 25889     1EDB                     l12795:
 25890                           
 25891                           ;mcc_generated_files/i2c1_master.c: 497:     I2C1_Status.error = I2C1_NOERR;
 25892     1EDB  01BB               	clrf	(_I2C1_Status^(0+128)+27)
 25893     1EDC                     l12797:
 25894                           
 25895                           ;mcc_generated_files/i2c1_master.c: 498:     return I2C1_RESET;
 25896     1EDC  300E               	movlw	14
 25897     1EDD                     l1884:
 25898     1EDD  0008               	return
 25899     1EDE                     __end_of_I2C1_DO_RESET:
 25900                           
 25901                           	psect	text120
 25902     1ED4                     __ptext120:	
 25903 ;; *************** function _I2C1_DO_RX_NACK_RESTART *****************
 25904 ;; Defined at:
 25905 ;;		line 488 in file "mcc_generated_files/i2c1_master.c"
 25906 ;; Parameters:    Size  Location     Type
 25907 ;;		None
 25908 ;; Auto vars:     Size  Location     Type
 25909 ;;		None
 25910 ;; Return value:  Size  Location     Type
 25911 ;;                  1    wreg      enum E12565
 25912 ;; Registers used:
 25913 ;;		wreg, status,2, status,0, pclath, cstack
 25914 ;; Tracked objects:
 25915 ;;		On entry : 0/0
 25916 ;;		On exit  : 0/0
 25917 ;;		Unchanged: 0/0
 25918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25923 ;;Total ram usage:        0 bytes
 25924 ;; Hardware stack levels used: 1
 25925 ;; Hardware stack levels required when called: 5
 25926 ;; This function calls:
 25927 ;;		_I2C1_MasterSendNack
 25928 ;; This function is called by:
 25929 ;;		_I2C1_DO_RX
 25930 ;;		_I2C1_MasterFsm
 25931 ;; This function uses a non-reentrant model
 25932 ;;
 25933                           
 25934     1ED4                     _I2C1_DO_RX_NACK_RESTART:	
 25935                           ;psect for function _I2C1_DO_RX_NACK_RESTART
 25936                           
 25937     1ED4                     l12631:	
 25938                           ;incstack = 0
 25939                           ; Regs used in _I2C1_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 25940                           
 25941                           
 25942                           ;mcc_generated_files/i2c1_master.c: 490:     I2C1_MasterSendNack();
 25943     1ED4  319E  269C  319E   	fcall	_I2C1_MasterSendNack
 25944     1ED7                     l12633:
 25945                           
 25946                           ;mcc_generated_files/i2c1_master.c: 491:     return I2C1_SEND_RESTART;
 25947     1ED7  3009               	movlw	9
 25948     1ED8                     l1881:
 25949     1ED8  0008               	return
 25950     1ED9                     __end_of_I2C1_DO_RX_NACK_RESTART:
 25951                           
 25952                           	psect	text121
 25953     1ECF                     __ptext121:	
 25954 ;; *************** function _I2C1_DO_RX_NACK_STOP *****************
 25955 ;; Defined at:
 25956 ;;		line 482 in file "mcc_generated_files/i2c1_master.c"
 25957 ;; Parameters:    Size  Location     Type
 25958 ;;		None
 25959 ;; Auto vars:     Size  Location     Type
 25960 ;;		None
 25961 ;; Return value:  Size  Location     Type
 25962 ;;                  1    wreg      enum E12565
 25963 ;; Registers used:
 25964 ;;		wreg, status,2, status,0, pclath, cstack
 25965 ;; Tracked objects:
 25966 ;;		On entry : 0/0
 25967 ;;		On exit  : 0/0
 25968 ;;		Unchanged: 0/0
 25969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25974 ;;Total ram usage:        0 bytes
 25975 ;; Hardware stack levels used: 1
 25976 ;; Hardware stack levels required when called: 5
 25977 ;; This function calls:
 25978 ;;		_I2C1_MasterSendNack
 25979 ;; This function is called by:
 25980 ;;		_I2C1_DO_RX
 25981 ;;		_I2C1_MasterFsm
 25982 ;; This function uses a non-reentrant model
 25983 ;;
 25984                           
 25985     1ECF                     _I2C1_DO_RX_NACK_STOP:	
 25986                           ;psect for function _I2C1_DO_RX_NACK_STOP
 25987                           
 25988     1ECF                     l12637:	
 25989                           ;incstack = 0
 25990                           ; Regs used in _I2C1_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 25991                           
 25992                           
 25993                           ;mcc_generated_files/i2c1_master.c: 484:     I2C1_MasterSendNack();
 25994     1ECF  319E  269C  319E   	fcall	_I2C1_MasterSendNack
 25995     1ED2                     l12639:
 25996                           
 25997                           ;mcc_generated_files/i2c1_master.c: 485:     return I2C1_SEND_STOP;
 25998     1ED2  300A               	movlw	10
 25999     1ED3                     l1878:
 26000     1ED3  0008               	return
 26001     1ED4                     __end_of_I2C1_DO_RX_NACK_STOP:
 26002                           
 26003                           	psect	text122
 26004     1ECA                     __ptext122:	
 26005 ;; *************** function _I2C1_DO_RX_ACK *****************
 26006 ;; Defined at:
 26007 ;;		line 475 in file "mcc_generated_files/i2c1_master.c"
 26008 ;; Parameters:    Size  Location     Type
 26009 ;;		None
 26010 ;; Auto vars:     Size  Location     Type
 26011 ;;		None
 26012 ;; Return value:  Size  Location     Type
 26013 ;;                  1    wreg      enum E12565
 26014 ;; Registers used:
 26015 ;;		wreg, status,2, status,0, pclath, cstack
 26016 ;; Tracked objects:
 26017 ;;		On entry : 0/0
 26018 ;;		On exit  : 0/0
 26019 ;;		Unchanged: 0/0
 26020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26025 ;;Total ram usage:        0 bytes
 26026 ;; Hardware stack levels used: 1
 26027 ;; Hardware stack levels required when called: 5
 26028 ;; This function calls:
 26029 ;;		_I2C1_MasterSendAck
 26030 ;; This function is called by:
 26031 ;;		_I2C1_MasterFsm
 26032 ;; This function uses a non-reentrant model
 26033 ;;
 26034                           
 26035     1ECA                     _I2C1_DO_RX_ACK:	
 26036                           ;psect for function _I2C1_DO_RX_ACK
 26037                           
 26038     1ECA                     l12787:	
 26039                           ;incstack = 0
 26040                           ; Regs used in _I2C1_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
 26041                           
 26042                           
 26043                           ;mcc_generated_files/i2c1_master.c: 477:     I2C1_MasterSendAck();
 26044     1ECA  319E  26A0  319E   	fcall	_I2C1_MasterSendAck
 26045     1ECD                     l12789:
 26046                           
 26047                           ;mcc_generated_files/i2c1_master.c: 478:     return I2C1_RCEN;
 26048     1ECD  3005               	movlw	5
 26049     1ECE                     l1875:
 26050     1ECE  0008               	return
 26051     1ECF                     __end_of_I2C1_DO_RX_ACK:
 26052                           
 26053                           	psect	text123
 26054     1EC5                     __ptext123:	
 26055 ;; *************** function _I2C1_DO_SEND_STOP *****************
 26056 ;; Defined at:
 26057 ;;		line 469 in file "mcc_generated_files/i2c1_master.c"
 26058 ;; Parameters:    Size  Location     Type
 26059 ;;		None
 26060 ;; Auto vars:     Size  Location     Type
 26061 ;;		None
 26062 ;; Return value:  Size  Location     Type
 26063 ;;                  1    wreg      enum E12565
 26064 ;; Registers used:
 26065 ;;		wreg, status,2, status,0, pclath, cstack
 26066 ;; Tracked objects:
 26067 ;;		On entry : 0/0
 26068 ;;		On exit  : 0/0
 26069 ;;		Unchanged: 0/0
 26070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26075 ;;Total ram usage:        0 bytes
 26076 ;; Hardware stack levels used: 1
 26077 ;; Hardware stack levels required when called: 5
 26078 ;; This function calls:
 26079 ;;		_I2C1_MasterStop
 26080 ;; This function is called by:
 26081 ;;		_I2C1_DO_TX
 26082 ;;		_I2C1_DO_TX_EMPTY
 26083 ;;		_I2C1_DO_ADDRESS_NACK
 26084 ;;		_I2C1_MasterFsm
 26085 ;; This function uses a non-reentrant model
 26086 ;;
 26087                           
 26088     1EC5                     _I2C1_DO_SEND_STOP:	
 26089                           ;psect for function _I2C1_DO_SEND_STOP
 26090                           
 26091     1EC5                     l12619:	
 26092                           ;incstack = 0
 26093                           ; Regs used in _I2C1_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 26094                           
 26095                           
 26096                           ;mcc_generated_files/i2c1_master.c: 471:     I2C1_MasterStop();
 26097     1EC5  319E  267D  319E   	fcall	_I2C1_MasterStop
 26098     1EC8                     l12621:
 26099                           
 26100                           ;mcc_generated_files/i2c1_master.c: 472:     return I2C1_IDLE;
 26101     1EC8  3000               	movlw	0
 26102     1EC9                     l1872:
 26103     1EC9  0008               	return
 26104     1ECA                     __end_of_I2C1_DO_SEND_STOP:
 26105                           
 26106                           	psect	text124
 26107     1EC0                     __ptext124:	
 26108 ;; *************** function _I2C1_DO_SEND_RESTART *****************
 26109 ;; Defined at:
 26110 ;;		line 463 in file "mcc_generated_files/i2c1_master.c"
 26111 ;; Parameters:    Size  Location     Type
 26112 ;;		None
 26113 ;; Auto vars:     Size  Location     Type
 26114 ;;		None
 26115 ;; Return value:  Size  Location     Type
 26116 ;;                  1    wreg      enum E12565
 26117 ;; Registers used:
 26118 ;;		wreg, status,2, status,0, pclath, cstack
 26119 ;; Tracked objects:
 26120 ;;		On entry : 0/0
 26121 ;;		On exit  : 0/0
 26122 ;;		Unchanged: 0/0
 26123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26128 ;;Total ram usage:        0 bytes
 26129 ;; Hardware stack levels used: 1
 26130 ;; Hardware stack levels required when called: 5
 26131 ;; This function calls:
 26132 ;;		_I2C1_MasterEnableRestart
 26133 ;; This function is called by:
 26134 ;;		_I2C1_DO_TX_EMPTY
 26135 ;;		_I2C1_DO_ADDRESS_NACK
 26136 ;;		_I2C1_MasterFsm
 26137 ;; This function uses a non-reentrant model
 26138 ;;
 26139                           
 26140     1EC0                     _I2C1_DO_SEND_RESTART:	
 26141                           ;psect for function _I2C1_DO_SEND_RESTART
 26142                           
 26143     1EC0                     l12645:	
 26144                           ;incstack = 0
 26145                           ; Regs used in _I2C1_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 26146                           
 26147                           
 26148                           ;mcc_generated_files/i2c1_master.c: 465:     I2C1_MasterEnableRestart();
 26149     1EC0  319E  267A  319E   	fcall	_I2C1_MasterEnableRestart
 26150     1EC3                     l12647:
 26151                           
 26152                           ;mcc_generated_files/i2c1_master.c: 466:     return I2C1_SEND_ADR_READ;
 26153     1EC3  3001               	movlw	1
 26154     1EC4                     l1869:
 26155     1EC4  0008               	return
 26156     1EC5                     __end_of_I2C1_DO_SEND_RESTART:
 26157                           
 26158                           	psect	text125
 26159     1EBB                     __ptext125:	
 26160 ;; *************** function _I2C1_DO_SEND_RESTART_WRITE *****************
 26161 ;; Defined at:
 26162 ;;		line 456 in file "mcc_generated_files/i2c1_master.c"
 26163 ;; Parameters:    Size  Location     Type
 26164 ;;		None
 26165 ;; Auto vars:     Size  Location     Type
 26166 ;;		None
 26167 ;; Return value:  Size  Location     Type
 26168 ;;                  1    wreg      enum E12565
 26169 ;; Registers used:
 26170 ;;		wreg, status,2, status,0, pclath, cstack
 26171 ;; Tracked objects:
 26172 ;;		On entry : 0/0
 26173 ;;		On exit  : 0/0
 26174 ;;		Unchanged: 0/0
 26175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26180 ;;Total ram usage:        0 bytes
 26181 ;; Hardware stack levels used: 1
 26182 ;; Hardware stack levels required when called: 5
 26183 ;; This function calls:
 26184 ;;		_I2C1_MasterEnableRestart
 26185 ;; This function is called by:
 26186 ;;		_I2C1_DO_TX
 26187 ;;		_I2C1_MasterFsm
 26188 ;; This function uses a non-reentrant model
 26189 ;;
 26190                           
 26191     1EBB                     _I2C1_DO_SEND_RESTART_WRITE:	
 26192                           ;psect for function _I2C1_DO_SEND_RESTART_WRITE
 26193                           
 26194     1EBB                     l12613:	
 26195                           ;incstack = 0
 26196                           ; Regs used in _I2C1_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 26197                           
 26198                           
 26199                           ;mcc_generated_files/i2c1_master.c: 458:     I2C1_MasterEnableRestart();
 26200     1EBB  319E  267A  319E   	fcall	_I2C1_MasterEnableRestart
 26201     1EBE                     l12615:
 26202                           
 26203                           ;mcc_generated_files/i2c1_master.c: 459:     return I2C1_SEND_ADR_WRITE;
 26204     1EBE  3002               	movlw	2
 26205     1EBF                     l1866:
 26206     1EBF  0008               	return
 26207     1EC0                     __end_of_I2C1_DO_SEND_RESTART_WRITE:
 26208                           
 26209                           	psect	text126
 26210     1EB6                     __ptext126:	
 26211 ;; *************** function _I2C1_DO_SEND_RESTART_READ *****************
 26212 ;; Defined at:
 26213 ;;		line 450 in file "mcc_generated_files/i2c1_master.c"
 26214 ;; Parameters:    Size  Location     Type
 26215 ;;		None
 26216 ;; Auto vars:     Size  Location     Type
 26217 ;;		None
 26218 ;; Return value:  Size  Location     Type
 26219 ;;                  1    wreg      enum E12565
 26220 ;; Registers used:
 26221 ;;		wreg, status,2, status,0, pclath, cstack
 26222 ;; Tracked objects:
 26223 ;;		On entry : 0/0
 26224 ;;		On exit  : 0/0
 26225 ;;		Unchanged: 0/0
 26226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26231 ;;Total ram usage:        0 bytes
 26232 ;; Hardware stack levels used: 1
 26233 ;; Hardware stack levels required when called: 5
 26234 ;; This function calls:
 26235 ;;		_I2C1_MasterEnableRestart
 26236 ;; This function is called by:
 26237 ;;		_I2C1_DO_TX
 26238 ;;		_I2C1_MasterFsm
 26239 ;; This function uses a non-reentrant model
 26240 ;;
 26241                           
 26242     1EB6                     _I2C1_DO_SEND_RESTART_READ:	
 26243                           ;psect for function _I2C1_DO_SEND_RESTART_READ
 26244                           
 26245     1EB6                     l12607:	
 26246                           ;incstack = 0
 26247                           ; Regs used in _I2C1_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 26248                           
 26249                           
 26250                           ;mcc_generated_files/i2c1_master.c: 452:     I2C1_MasterEnableRestart();
 26251     1EB6  319E  267A  319E   	fcall	_I2C1_MasterEnableRestart
 26252     1EB9                     l12609:
 26253                           
 26254                           ;mcc_generated_files/i2c1_master.c: 453:     return I2C1_SEND_ADR_READ;
 26255     1EB9  3001               	movlw	1
 26256     1EBA                     l1863:
 26257     1EBA  0008               	return
 26258     1EBB                     __end_of_I2C1_DO_SEND_RESTART_READ:
 26259                           
 26260                           	psect	text127
 26261     1F5E                     __ptext127:	
 26262 ;; *************** function _I2C1_DO_RCEN *****************
 26263 ;; Defined at:
 26264 ;;		line 402 in file "mcc_generated_files/i2c1_master.c"
 26265 ;; Parameters:    Size  Location     Type
 26266 ;;		None
 26267 ;; Auto vars:     Size  Location     Type
 26268 ;;		None
 26269 ;; Return value:  Size  Location     Type
 26270 ;;                  1    wreg      enum E12565
 26271 ;; Registers used:
 26272 ;;		wreg, status,2, status,0, pclath, cstack
 26273 ;; Tracked objects:
 26274 ;;		On entry : 0/0
 26275 ;;		On exit  : 0/0
 26276 ;;		Unchanged: 0/0
 26277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26282 ;;Total ram usage:        0 bytes
 26283 ;; Hardware stack levels used: 1
 26284 ;; Hardware stack levels required when called: 5
 26285 ;; This function calls:
 26286 ;;		_I2C1_MasterStartRx
 26287 ;; This function is called by:
 26288 ;;		_I2C1_MasterFsm
 26289 ;; This function uses a non-reentrant model
 26290 ;;
 26291                           
 26292     1F5E                     _I2C1_DO_RCEN:	
 26293                           ;psect for function _I2C1_DO_RCEN
 26294                           
 26295     1F5E                     l12753:	
 26296                           ;incstack = 0
 26297                           ; Regs used in _I2C1_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
 26298                           
 26299                           
 26300                           ;mcc_generated_files/i2c1_master.c: 404:     I2C1_Status.addressNackCheck = 0;
 26301     1F5E  0141               	movlb	1	; select bank1
 26302     1F5F  103C               	bcf	(_I2C1_Status^(0+128)+28),0
 26303     1F60                     l12755:
 26304                           
 26305                           ;mcc_generated_files/i2c1_master.c: 405:     I2C1_MasterStartRx();
 26306     1F60  319E  2680  319F   	fcall	_I2C1_MasterStartRx
 26307     1F63                     l12757:
 26308                           
 26309                           ;mcc_generated_files/i2c1_master.c: 406:     return I2C1_RX;
 26310     1F63  3004               	movlw	4
 26311     1F64                     l1839:
 26312     1F64  0008               	return
 26313     1F65                     __end_of_I2C1_DO_RCEN:
 26314                           
 26315                           	psect	text128
 26316     09F9                     __ptext128:	
 26317 ;; *************** function _I2C1_DO_RX *****************
 26318 ;; Defined at:
 26319 ;;		line 378 in file "mcc_generated_files/i2c1_master.c"
 26320 ;; Parameters:    Size  Location     Type
 26321 ;;		None
 26322 ;; Auto vars:     Size  Location     Type
 26323 ;;		None
 26324 ;; Return value:  Size  Location     Type
 26325 ;;                  1    wreg      enum E12565
 26326 ;; Registers used:
 26327 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 26328 ;; Tracked objects:
 26329 ;;		On entry : 0/0
 26330 ;;		On exit  : 0/0
 26331 ;;		Unchanged: 0/0
 26332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26335 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26336 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26337 ;;Total ram usage:        2 bytes
 26338 ;; Hardware stack levels used: 1
 26339 ;; Hardware stack levels required when called: 7
 26340 ;; This function calls:
 26341 ;;		NULL
 26342 ;;		_I2C1_CallbackReturnReset
 26343 ;;		_I2C1_CallbackReturnStop
 26344 ;;		_I2C1_DO_RX_NACK_RESTART
 26345 ;;		_I2C1_DO_RX_NACK_STOP
 26346 ;;		_I2C1_MasterGetRxData
 26347 ;;		_I2C1_MasterSendAck
 26348 ;;		_rd1RegCompleteHandler
 26349 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1239
 26350 ;;		_rd2RegCompleteHandler
 26351 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1250
 26352 ;;		_rdBlkRegCompleteHandler
 26353 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1273
 26354 ;;		_wr1RegCompleteHandler
 26355 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1256
 26356 ;;		_wr2RegCompleteHandler
 26357 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1262
 26358 ;; This function is called by:
 26359 ;;		_I2C1_MasterFsm
 26360 ;; This function uses a non-reentrant model
 26361 ;;
 26362                           
 26363     09F9                     _I2C1_DO_RX:	
 26364                           ;psect for function _I2C1_DO_RX
 26365                           
 26366     09F9                     l12721:	
 26367                           ;incstack = 0
 26368                           ; Regs used in _I2C1_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 26369                           
 26370                           
 26371                           ;mcc_generated_files/i2c1_master.c: 380:     *I2C1_Status.data_ptr++ = I2C1_MasterGetRxD
      +                          ata();
 26372     09F9  0141               	movlb	1	; select bank1
 26373     09FA  0837               	movf	(low ((_I2C1_Status| 0+23)))^(0+128),w
 26374     09FB  0086               	movwf	6
 26375     09FC  0187               	clrf	7
 26376     09FD  319E  2683  3189   	fcall	_I2C1_MasterGetRxData
 26377     0A00  0081               	movwf	1
 26378     0A01                     l12723:
 26379     0A01  3001               	movlw	1
 26380     0A02  00F9               	movwf	??_I2C1_DO_RX
 26381     0A03  0879               	movf	??_I2C1_DO_RX,w
 26382     0A04  0141               	movlb	1	; select bank1
 26383     0A05  07B7               	addwf	(low ((_I2C1_Status| 0+23)))^(0+128),f
 26384     0A06                     l12725:
 26385                           
 26386                           ;mcc_generated_files/i2c1_master.c: 381:     if(--I2C1_Status.data_length)
 26387     0A06  3001               	movlw	1
 26388     0A07  02B8               	subwf	(_I2C1_Status^(0+128)+24),f
 26389     0A08  3000               	movlw	0
 26390     0A09  3BB9               	subwfb	((_I2C1_Status+1)^(0+128)+24),f
 26391     0A0A  0838               	movf	(_I2C1_Status^(0+128)+24),w
 26392     0A0B  0439               	iorwf	((_I2C1_Status+1)^(0+128)+24),w
 26393     0A0C  1903               	btfsc	3,2
 26394     0A0D  2A0F               	goto	u9621
 26395     0A0E  2A10               	goto	u9620
 26396     0A0F                     u9621:
 26397     0A0F  2A15               	goto	l1827
 26398     0A10                     u9620:
 26399     0A10                     l12727:
 26400                           
 26401                           ;mcc_generated_files/i2c1_master.c: 382:     {;mcc_generated_files/i2c1_master.c: 383:  
      +                                 I2C1_MasterSendAck();
 26402     0A10  319E  26A0  3189   	fcall	_I2C1_MasterSendAck
 26403     0A13                     l12729:
 26404                           
 26405                           ;mcc_generated_files/i2c1_master.c: 384:         return I2C1_RCEN;
 26406     0A13  3005               	movlw	5
 26407     0A14  2A3B               	goto	l1828
 26408     0A15                     l1827:	
 26409                           ;mcc_generated_files/i2c1_master.c: 386:     else
 26410                           
 26411                           
 26412                           ;mcc_generated_files/i2c1_master.c: 387:     {;mcc_generated_files/i2c1_master.c: 388:  
      +                                 I2C1_Status.bufferFree = 1;
 26413     0A15  15BC               	bsf	(_I2C1_Status^(0+128)+28),3
 26414                           
 26415                           ;mcc_generated_files/i2c1_master.c: 389:         switch(I2C1_Status.callbackTable[I2C1_D
      +                          ATA_COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 26416     0A16  2A1F               	goto	l12745
 26417     0A17                     l12735:
 26418                           
 26419                           ;mcc_generated_files/i2c1_master.c: 393:                 return I2C1_DO_RX_NACK_RESTART(
      +                          );
 26420     0A17  319E  26D4  3189   	fcall	_I2C1_DO_RX_NACK_RESTART
 26421     0A1A  2A3B               	goto	l1828
 26422     0A1B                     l12739:
 26423                           
 26424                           ;mcc_generated_files/i2c1_master.c: 397:                 return I2C1_DO_RX_NACK_STOP();
 26425     0A1B  319E  26CF  3189   	fcall	_I2C1_DO_RX_NACK_STOP
 26426     0A1E  2A3B               	goto	l1828
 26427     0A1F                     l12745:
 26428     0A1F  082C               	movf	(low ((_I2C1_Status| 0+12)))^(0+128),w
 26429     0A20  00F8               	movwf	I2C1_CallbackReturnReset@funPtr
 26430     0A21  0821               	movf	(_I2C1_Status+1)^(0+128),w
 26431     0A22  008A               	movwf	10
 26432     0A23  0820               	movf	_I2C1_Status^(0+128),w
 26433     0A24  000A               	callw
 26434     0A25  3189               	pagesel	$
 26435     0A26  00F9               	movwf	??_I2C1_DO_RX
 26436     0A27  01FA               	clrf	??_I2C1_DO_RX+1
 26437                           
 26438                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26439                           ; Switch size 1, requested type "simple"
 26440                           ; Number of cases is 1, Range of values is 0 to 0
 26441                           ; switch strategies available:
 26442                           ; Name         Instructions Cycles
 26443                           ; simple_byte            4     3 (average)
 26444                           ; direct_byte            8     6 (fixed)
 26445                           ; jumptable            260     6 (fixed)
 26446                           ;	Chosen strategy is simple_byte
 26447     0A28  087A               	movf	??_I2C1_DO_RX+1,w
 26448     0A29  3A00               	xorlw	0	; case 0
 26449     0A2A  1903               	skipnz
 26450     0A2B  2A2D               	goto	l16615
 26451     0A2C  2A1B               	goto	l12739
 26452     0A2D                     l16615:
 26453                           
 26454                           ; Switch size 1, requested type "simple"
 26455                           ; Number of cases is 4, Range of values is 1 to 4
 26456                           ; switch strategies available:
 26457                           ; Name         Instructions Cycles
 26458                           ; simple_byte           13     7 (average)
 26459                           ; direct_byte           17     9 (fixed)
 26460                           ; jumptable            263     9 (fixed)
 26461                           ;	Chosen strategy is simple_byte
 26462     0A2D  0879               	movf	??_I2C1_DO_RX,w
 26463     0A2E  3A01               	xorlw	1	; case 1
 26464     0A2F  1903               	skipnz
 26465     0A30  2A1B               	goto	l12739
 26466     0A31  3A03               	xorlw	3	; case 2
 26467     0A32  1903               	skipnz
 26468     0A33  2A17               	goto	l12735
 26469     0A34  3A01               	xorlw	1	; case 3
 26470     0A35  1903               	skipnz
 26471     0A36  2A17               	goto	l12735
 26472     0A37  3A07               	xorlw	7	; case 4
 26473     0A38  1903               	skipnz
 26474     0A39  2A1B               	goto	l12739
 26475     0A3A  2A1B               	goto	l12739
 26476     0A3B                     l1828:
 26477     0A3B  0008               	return
 26478     0A3C                     __end_of_I2C1_DO_RX:
 26479                           
 26480                           	psect	text129
 26481     0C8F                     __ptext129:	
 26482 ;; *************** function _I2C1_DO_TX *****************
 26483 ;; Defined at:
 26484 ;;		line 354 in file "mcc_generated_files/i2c1_master.c"
 26485 ;; Parameters:    Size  Location     Type
 26486 ;;		None
 26487 ;; Auto vars:     Size  Location     Type
 26488 ;;		None
 26489 ;; Return value:  Size  Location     Type
 26490 ;;                  1    wreg      enum E12565
 26491 ;; Registers used:
 26492 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 26493 ;; Tracked objects:
 26494 ;;		On entry : 0/0
 26495 ;;		On exit  : 0/0
 26496 ;;		Unchanged: 0/0
 26497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26500 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26501 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26502 ;;Total ram usage:        2 bytes
 26503 ;; Hardware stack levels used: 1
 26504 ;; Hardware stack levels required when called: 7
 26505 ;; This function calls:
 26506 ;;		NULL
 26507 ;;		_I2C1_CallbackReturnReset
 26508 ;;		_I2C1_CallbackReturnStop
 26509 ;;		_I2C1_DO_SEND_RESTART_READ
 26510 ;;		_I2C1_DO_SEND_RESTART_WRITE
 26511 ;;		_I2C1_DO_SEND_STOP
 26512 ;;		_I2C1_MasterIsNack
 26513 ;;		_I2C1_MasterSendTxData
 26514 ;;		_rd1RegCompleteHandler
 26515 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1239
 26516 ;;		_rd2RegCompleteHandler
 26517 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1250
 26518 ;;		_rdBlkRegCompleteHandler
 26519 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1273
 26520 ;;		_wr1RegCompleteHandler
 26521 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1256
 26522 ;;		_wr2RegCompleteHandler
 26523 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1262
 26524 ;; This function is called by:
 26525 ;;		_I2C1_MasterFsm
 26526 ;; This function uses a non-reentrant model
 26527 ;;
 26528                           
 26529     0C8F                     _I2C1_DO_TX:	
 26530                           ;psect for function _I2C1_DO_TX
 26531                           
 26532     0C8F                     l12687:	
 26533                           ;incstack = 0
 26534                           ; Regs used in _I2C1_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 26535                           
 26536                           
 26537                           ;mcc_generated_files/i2c1_master.c: 356:     if(I2C1_MasterIsNack())
 26538     0C8F  319E  26F2  318C   	fcall	_I2C1_MasterIsNack
 26539     0C92  3A00               	xorlw	0
 26540     0C93  1903               	skipnz
 26541     0C94  2C96               	goto	u9601
 26542     0C95  2C97               	goto	u9600
 26543     0C96                     u9601:
 26544     0C96  2CC5               	goto	l1811
 26545     0C97                     u9600:
 26546     0C97  2CA4               	goto	l12705
 26547     0C98                     l12691:
 26548                           
 26549                           ;mcc_generated_files/i2c1_master.c: 361:                 return I2C1_DO_SEND_RESTART_REA
      +                          D();
 26550     0C98  319E  26B6  318C   	fcall	_I2C1_DO_SEND_RESTART_READ
 26551     0C9B  2CE1               	goto	l1814
 26552     0C9C                     l12695:
 26553                           
 26554                           ;mcc_generated_files/i2c1_master.c: 363:                   return I2C1_DO_SEND_RESTART_W
      +                          RITE();
 26555     0C9C  319E  26BB  318C   	fcall	_I2C1_DO_SEND_RESTART_WRITE
 26556     0C9F  2CE1               	goto	l1814
 26557     0CA0                     l12699:
 26558                           
 26559                           ;mcc_generated_files/i2c1_master.c: 367:                 return I2C1_DO_SEND_STOP();
 26560     0CA0  319E  26C5  318C   	fcall	_I2C1_DO_SEND_STOP
 26561     0CA3  2CE1               	goto	l1814
 26562     0CA4                     l12705:
 26563     0CA4  0141               	movlb	1	; select bank1
 26564     0CA5  082F               	movf	(low ((_I2C1_Status| 0+15)))^(0+128),w
 26565     0CA6  00F8               	movwf	I2C1_CallbackReturnReset@funPtr
 26566     0CA7  3006               	movlw	6
 26567     0CA8  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 26568     0CA9  0086               	movwf	6
 26569     0CAA  0187               	clrf	7
 26570     0CAB  3F41               	moviw [1]fsr1
 26571     0CAC  008A               	movwf	10
 26572     0CAD  3F40               	moviw [0]fsr1
 26573     0CAE  000A               	callw
 26574     0CAF  318C               	pagesel	$
 26575     0CB0  00F9               	movwf	??_I2C1_DO_TX
 26576     0CB1  01FA               	clrf	??_I2C1_DO_TX+1
 26577                           
 26578                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26579                           ; Switch size 1, requested type "simple"
 26580                           ; Number of cases is 1, Range of values is 0 to 0
 26581                           ; switch strategies available:
 26582                           ; Name         Instructions Cycles
 26583                           ; simple_byte            4     3 (average)
 26584                           ; direct_byte            8     6 (fixed)
 26585                           ; jumptable            260     6 (fixed)
 26586                           ;	Chosen strategy is simple_byte
 26587     0CB2  087A               	movf	??_I2C1_DO_TX+1,w
 26588     0CB3  3A00               	xorlw	0	; case 0
 26589     0CB4  1903               	skipnz
 26590     0CB5  2CB7               	goto	l16617
 26591     0CB6  2CA0               	goto	l12699
 26592     0CB7                     l16617:
 26593                           
 26594                           ; Switch size 1, requested type "simple"
 26595                           ; Number of cases is 4, Range of values is 1 to 4
 26596                           ; switch strategies available:
 26597                           ; Name         Instructions Cycles
 26598                           ; simple_byte           13     7 (average)
 26599                           ; direct_byte           17     9 (fixed)
 26600                           ; jumptable            263     9 (fixed)
 26601                           ;	Chosen strategy is simple_byte
 26602     0CB7  0879               	movf	??_I2C1_DO_TX,w
 26603     0CB8  3A01               	xorlw	1	; case 1
 26604     0CB9  1903               	skipnz
 26605     0CBA  2CA0               	goto	l12699
 26606     0CBB  3A03               	xorlw	3	; case 2
 26607     0CBC  1903               	skipnz
 26608     0CBD  2C98               	goto	l12691
 26609     0CBE  3A01               	xorlw	1	; case 3
 26610     0CBF  1903               	skipnz
 26611     0CC0  2C9C               	goto	l12695
 26612     0CC1  3A07               	xorlw	7	; case 4
 26613     0CC2  1903               	skipnz
 26614     0CC3  2CA0               	goto	l12699
 26615     0CC4  2CA0               	goto	l12699
 26616     0CC5                     l1811:	
 26617                           ;mcc_generated_files/i2c1_master.c: 370:     else
 26618                           
 26619                           
 26620                           ;mcc_generated_files/i2c1_master.c: 371:     {;mcc_generated_files/i2c1_master.c: 372:  
      +                                 I2C1_Status.addressNackCheck = 0;
 26621     0CC5  0141               	movlb	1	; select bank1
 26622     0CC6  103C               	bcf	(_I2C1_Status^(0+128)+28),0
 26623     0CC7                     l12707:
 26624                           
 26625                           ;mcc_generated_files/i2c1_master.c: 373:         I2C1_MasterSendTxData(*I2C1_Status.data
      +                          _ptr++);
 26626     0CC7  3017               	movlw	23
 26627     0CC8  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 26628     0CC9  0086               	movwf	6
 26629     0CCA  0187               	clrf	7
 26630     0CCB  3F40               	moviw [0]fsr1
 26631     0CCC  0084               	movwf	4
 26632     0CCD  0185               	clrf	5
 26633     0CCE  0A81               	incf	1,f
 26634     0CCF  0800               	movf	0,w
 26635     0CD0  319E  26AC  318C   	fcall	_I2C1_MasterSendTxData
 26636     0CD3                     l12709:
 26637                           
 26638                           ;mcc_generated_files/i2c1_master.c: 374:         return (--I2C1_Status.data_length)?I2C1
      +                          _TX:I2C1_TX_EMPTY;
 26639     0CD3  3001               	movlw	1
 26640     0CD4  0141               	movlb	1	; select bank1
 26641     0CD5  02B8               	subwf	(_I2C1_Status^(0+128)+24),f
 26642     0CD6  3000               	movlw	0
 26643     0CD7  3BB9               	subwfb	((_I2C1_Status+1)^(0+128)+24),f
 26644     0CD8  0838               	movf	(_I2C1_Status^(0+128)+24),w
 26645     0CD9  0439               	iorwf	((_I2C1_Status+1)^(0+128)+24),w
 26646     0CDA  1D03               	btfss	3,2
 26647     0CDB  2CDD               	goto	u9611
 26648     0CDC  2CDE               	goto	u9610
 26649     0CDD                     u9611:
 26650     0CDD  2CE0               	goto	l12713
 26651     0CDE                     u9610:
 26652     0CDE                     l12711:
 26653     0CDE  3006               	movlw	6
 26654     0CDF  2CE1               	goto	l1814
 26655     0CE0                     l12713:
 26656     0CE0  3003               	movlw	3
 26657     0CE1                     l1814:
 26658     0CE1  0008               	return
 26659     0CE2                     __end_of_I2C1_DO_TX:
 26660                           
 26661                           	psect	text130
 26662     1F65                     __ptext130:	
 26663 ;; *************** function _I2C1_DO_SEND_ADR_WRITE *****************
 26664 ;; Defined at:
 26665 ;;		line 347 in file "mcc_generated_files/i2c1_master.c"
 26666 ;; Parameters:    Size  Location     Type
 26667 ;;		None
 26668 ;; Auto vars:     Size  Location     Type
 26669 ;;		None
 26670 ;; Return value:  Size  Location     Type
 26671 ;;                  1    wreg      enum E12565
 26672 ;; Registers used:
 26673 ;;		wreg, status,2, status,0, pclath, cstack
 26674 ;; Tracked objects:
 26675 ;;		On entry : 0/0
 26676 ;;		On exit  : 0/0
 26677 ;;		Unchanged: 0/0
 26678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26683 ;;Total ram usage:        0 bytes
 26684 ;; Hardware stack levels used: 1
 26685 ;; Hardware stack levels required when called: 5
 26686 ;; This function calls:
 26687 ;;		_I2C1_MasterSendTxData
 26688 ;; This function is called by:
 26689 ;;		_I2C1_MasterFsm
 26690 ;; This function uses a non-reentrant model
 26691 ;;
 26692                           
 26693     1F65                     _I2C1_DO_SEND_ADR_WRITE:	
 26694                           ;psect for function _I2C1_DO_SEND_ADR_WRITE
 26695                           
 26696     1F65                     l12679:	
 26697                           ;incstack = 0
 26698                           ; Regs used in _I2C1_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 26699                           
 26700                           
 26701                           ;mcc_generated_files/i2c1_master.c: 349:     I2C1_Status.addressNackCheck = 1;
 26702     1F65  0141               	movlb	1	; select bank1
 26703     1F66  143C               	bsf	(_I2C1_Status^(0+128)+28),0
 26704     1F67                     l12681:
 26705                           
 26706                           ;mcc_generated_files/i2c1_master.c: 350:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1));
 26707     1F67  3536               	lslf	(_I2C1_Status^(0+128)+22),w
 26708     1F68  319E  26AC  319F   	fcall	_I2C1_MasterSendTxData
 26709     1F6B                     l12683:
 26710                           
 26711                           ;mcc_generated_files/i2c1_master.c: 351:     return I2C1_TX;
 26712     1F6B  3003               	movlw	3
 26713     1F6C                     l1808:
 26714     1F6C  0008               	return
 26715     1F6D                     __end_of_I2C1_DO_SEND_ADR_WRITE:
 26716                           
 26717                           	psect	text131
 26718     1F7E                     __ptext131:	
 26719 ;; *************** function _I2C1_DO_SEND_ADR_READ *****************
 26720 ;; Defined at:
 26721 ;;		line 340 in file "mcc_generated_files/i2c1_master.c"
 26722 ;; Parameters:    Size  Location     Type
 26723 ;;		None
 26724 ;; Auto vars:     Size  Location     Type
 26725 ;;		None
 26726 ;; Return value:  Size  Location     Type
 26727 ;;                  1    wreg      enum E12565
 26728 ;; Registers used:
 26729 ;;		wreg, status,2, status,0, pclath, cstack
 26730 ;; Tracked objects:
 26731 ;;		On entry : 0/0
 26732 ;;		On exit  : 0/0
 26733 ;;		Unchanged: 0/0
 26734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26739 ;;Total ram usage:        0 bytes
 26740 ;; Hardware stack levels used: 1
 26741 ;; Hardware stack levels required when called: 5
 26742 ;; This function calls:
 26743 ;;		_I2C1_MasterSendTxData
 26744 ;; This function is called by:
 26745 ;;		_I2C1_MasterFsm
 26746 ;; This function uses a non-reentrant model
 26747 ;;
 26748                           
 26749     1F7E                     _I2C1_DO_SEND_ADR_READ:	
 26750                           ;psect for function _I2C1_DO_SEND_ADR_READ
 26751                           
 26752     1F7E                     l12671:	
 26753                           ;incstack = 0
 26754                           ; Regs used in _I2C1_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 26755                           
 26756                           
 26757                           ;mcc_generated_files/i2c1_master.c: 342:     I2C1_Status.addressNackCheck = 1;
 26758     1F7E  0141               	movlb	1	; select bank1
 26759     1F7F  143C               	bsf	(_I2C1_Status^(0+128)+28),0
 26760     1F80                     l12673:
 26761                           
 26762                           ;mcc_generated_files/i2c1_master.c: 343:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1 | 1));
 26763     1F80  1403               	setc
 26764     1F81  0D36               	rlf	(_I2C1_Status^(0+128)+22),w
 26765     1F82  319E  26AC  319F   	fcall	_I2C1_MasterSendTxData
 26766     1F85                     l12675:
 26767                           
 26768                           ;mcc_generated_files/i2c1_master.c: 344:     return I2C1_RCEN;
 26769     1F85  3005               	movlw	5
 26770     1F86                     l1805:
 26771     1F86  0008               	return
 26772     1F87                     __end_of_I2C1_DO_SEND_ADR_READ:
 26773                           
 26774                           	psect	text132
 26775     1EB1                     __ptext132:	
 26776 ;; *************** function _I2C1_DO_IDLE *****************
 26777 ;; Defined at:
 26778 ;;		line 333 in file "mcc_generated_files/i2c1_master.c"
 26779 ;; Parameters:    Size  Location     Type
 26780 ;;		None
 26781 ;; Auto vars:     Size  Location     Type
 26782 ;;		None
 26783 ;; Return value:  Size  Location     Type
 26784 ;;                  1    wreg      enum E12565
 26785 ;; Registers used:
 26786 ;;		wreg, status,2
 26787 ;; Tracked objects:
 26788 ;;		On entry : 0/0
 26789 ;;		On exit  : 0/0
 26790 ;;		Unchanged: 0/0
 26791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26796 ;;Total ram usage:        0 bytes
 26797 ;; Hardware stack levels used: 1
 26798 ;; Hardware stack levels required when called: 4
 26799 ;; This function calls:
 26800 ;;		Nothing
 26801 ;; This function is called by:
 26802 ;;		_I2C1_MasterFsm
 26803 ;; This function uses a non-reentrant model
 26804 ;;
 26805                           
 26806     1EB1                     _I2C1_DO_IDLE:	
 26807                           ;psect for function _I2C1_DO_IDLE
 26808                           
 26809     1EB1                     l12663:	
 26810                           ;incstack = 0
 26811                           ; Regs used in _I2C1_DO_IDLE: [wreg+status,2]
 26812                           
 26813                           
 26814                           ;mcc_generated_files/i2c1_master.c: 335:     I2C1_Status.busy = 0;
 26815     1EB1  0141               	movlb	1	; select bank1
 26816     1EB2  10BC               	bcf	(_I2C1_Status^(0+128)+28),1
 26817     1EB3                     l12665:
 26818                           
 26819                           ;mcc_generated_files/i2c1_master.c: 336:     I2C1_Status.error = I2C1_NOERR;
 26820     1EB3  01BB               	clrf	(_I2C1_Status^(0+128)+27)
 26821     1EB4                     l12667:
 26822                           
 26823                           ;mcc_generated_files/i2c1_master.c: 337:     return I2C1_RESET;
 26824     1EB4  300E               	movlw	14
 26825     1EB5                     l1802:
 26826     1EB5  0008               	return
 26827     1EB6                     __end_of_I2C1_DO_IDLE:
 26828                           
 26829                           	psect	text133
 26830     15EE                     __ptext133:	
 26831 ;; *************** function _I2C1_DO_TX_EMPTY *****************
 26832 ;; Defined at:
 26833 ;;		line 409 in file "mcc_generated_files/i2c1_master.c"
 26834 ;; Parameters:    Size  Location     Type
 26835 ;;		None
 26836 ;; Auto vars:     Size  Location     Type
 26837 ;;		None
 26838 ;; Return value:  Size  Location     Type
 26839 ;;                  1    wreg      enum E12565
 26840 ;; Registers used:
 26841 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 26842 ;; Tracked objects:
 26843 ;;		On entry : 0/0
 26844 ;;		On exit  : 0/0
 26845 ;;		Unchanged: 0/0
 26846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26849 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26850 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26851 ;;Total ram usage:        2 bytes
 26852 ;; Hardware stack levels used: 1
 26853 ;; Hardware stack levels required when called: 7
 26854 ;; This function calls:
 26855 ;;		NULL
 26856 ;;		_I2C1_CallbackReturnReset
 26857 ;;		_I2C1_CallbackReturnStop
 26858 ;;		_I2C1_DO_SEND_RESTART
 26859 ;;		_I2C1_DO_SEND_STOP
 26860 ;;		_I2C1_MasterSetIrq
 26861 ;;		_rd1RegCompleteHandler
 26862 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1239
 26863 ;;		_rd2RegCompleteHandler
 26864 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1250
 26865 ;;		_rdBlkRegCompleteHandler
 26866 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1273
 26867 ;;		_wr1RegCompleteHandler
 26868 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1256
 26869 ;;		_wr2RegCompleteHandler
 26870 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1262
 26871 ;; This function is called by:
 26872 ;;		_I2C1_MasterFsm
 26873 ;; This function uses a non-reentrant model
 26874 ;;
 26875                           
 26876     15EE                     _I2C1_DO_TX_EMPTY:	
 26877                           ;psect for function _I2C1_DO_TX_EMPTY
 26878                           
 26879     15EE                     l12761:	
 26880                           ;incstack = 0
 26881                           ; Regs used in _I2C1_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 26882                           
 26883                           
 26884                           ;mcc_generated_files/i2c1_master.c: 411:     I2C1_Status.bufferFree = 1;
 26885     15EE  0141               	movlb	1	; select bank1
 26886     15EF  15BC               	bsf	(_I2C1_Status^(0+128)+28),3
 26887                           
 26888                           ;mcc_generated_files/i2c1_master.c: 412:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 26889     15F0  2DFE               	goto	l12779
 26890     15F1                     l12763:
 26891                           
 26892                           ;mcc_generated_files/i2c1_master.c: 416:             return I2C1_DO_SEND_RESTART();
 26893     15F1  319E  26C0  3195   	fcall	_I2C1_DO_SEND_RESTART
 26894     15F4  2E1A               	goto	l1845
 26895     15F5                     l12767:
 26896                           
 26897                           ;mcc_generated_files/i2c1_master.c: 418:             I2C1_MasterSetIrq();
 26898     15F5  319E  2686  3195   	fcall	_I2C1_MasterSetIrq
 26899     15F8                     l12769:
 26900                           
 26901                           ;mcc_generated_files/i2c1_master.c: 419:             return I2C1_TX;
 26902     15F8  3003               	movlw	3
 26903     15F9  2E1A               	goto	l1845
 26904     15FA                     l12773:
 26905                           
 26906                           ;mcc_generated_files/i2c1_master.c: 422:             return I2C1_DO_SEND_STOP();
 26907     15FA  319E  26C5  3195   	fcall	_I2C1_DO_SEND_STOP
 26908     15FD  2E1A               	goto	l1845
 26909     15FE                     l12779:
 26910     15FE  082C               	movf	(low ((_I2C1_Status| 0+12)))^(0+128),w
 26911     15FF  00F8               	movwf	I2C1_CallbackReturnReset@funPtr
 26912     1600  0821               	movf	(_I2C1_Status+1)^(0+128),w
 26913     1601  008A               	movwf	10
 26914     1602  0820               	movf	_I2C1_Status^(0+128),w
 26915     1603  000A               	callw
 26916     1604  3195               	pagesel	$
 26917     1605  00F9               	movwf	??_I2C1_DO_TX_EMPTY
 26918     1606  01FA               	clrf	??_I2C1_DO_TX_EMPTY+1
 26919                           
 26920                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26921                           ; Switch size 1, requested type "simple"
 26922                           ; Number of cases is 1, Range of values is 0 to 0
 26923                           ; switch strategies available:
 26924                           ; Name         Instructions Cycles
 26925                           ; simple_byte            4     3 (average)
 26926                           ; direct_byte            8     6 (fixed)
 26927                           ; jumptable            260     6 (fixed)
 26928                           ;	Chosen strategy is simple_byte
 26929     1607  087A               	movf	??_I2C1_DO_TX_EMPTY+1,w
 26930     1608  3A00               	xorlw	0	; case 0
 26931     1609  1903               	skipnz
 26932     160A  2E0C               	goto	l16619
 26933     160B  2DFA               	goto	l12773
 26934     160C                     l16619:
 26935                           
 26936                           ; Switch size 1, requested type "simple"
 26937                           ; Number of cases is 4, Range of values is 1 to 4
 26938                           ; switch strategies available:
 26939                           ; Name         Instructions Cycles
 26940                           ; simple_byte           13     7 (average)
 26941                           ; direct_byte           17     9 (fixed)
 26942                           ; jumptable            263     9 (fixed)
 26943                           ;	Chosen strategy is simple_byte
 26944     160C  0879               	movf	??_I2C1_DO_TX_EMPTY,w
 26945     160D  3A01               	xorlw	1	; case 1
 26946     160E  1903               	skipnz
 26947     160F  2DFA               	goto	l12773
 26948     1610  3A03               	xorlw	3	; case 2
 26949     1611  1903               	skipnz
 26950     1612  2DF1               	goto	l12763
 26951     1613  3A01               	xorlw	1	; case 3
 26952     1614  1903               	skipnz
 26953     1615  2DF1               	goto	l12763
 26954     1616  3A07               	xorlw	7	; case 4
 26955     1617  1903               	skipnz
 26956     1618  2DF5               	goto	l12767
 26957     1619  2DFA               	goto	l12773
 26958     161A                     l1845:
 26959     161A  0008               	return
 26960     161B                     __end_of_I2C1_DO_TX_EMPTY:
 26961                           
 26962                           	psect	text134
 26963     1E86                     __ptext134:	
 26964 ;; *************** function _I2C1_MasterSetIrq *****************
 26965 ;; Defined at:
 26966 ;;		line 645 in file "mcc_generated_files/i2c1_master.c"
 26967 ;; Parameters:    Size  Location     Type
 26968 ;;		None
 26969 ;; Auto vars:     Size  Location     Type
 26970 ;;		None
 26971 ;; Return value:  Size  Location     Type
 26972 ;;                  1    wreg      void 
 26973 ;; Registers used:
 26974 ;;		None
 26975 ;; Tracked objects:
 26976 ;;		On entry : 0/0
 26977 ;;		On exit  : 0/0
 26978 ;;		Unchanged: 0/0
 26979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26984 ;;Total ram usage:        0 bytes
 26985 ;; Hardware stack levels used: 1
 26986 ;; Hardware stack levels required when called: 4
 26987 ;; This function calls:
 26988 ;;		Nothing
 26989 ;; This function is called by:
 26990 ;;		_I2C1_DO_TX_EMPTY
 26991 ;; This function uses a non-reentrant model
 26992 ;;
 26993                           
 26994     1E86                     _I2C1_MasterSetIrq:	
 26995                           ;psect for function _I2C1_MasterSetIrq
 26996                           
 26997     1E86                     l12651:	
 26998                           ;incstack = 0
 26999                           ; Regs used in _I2C1_MasterSetIrq: []
 27000                           
 27001                           
 27002                           ;mcc_generated_files/i2c1_master.c: 647:     PIR3bits.SSP1IF = 1;
 27003     1E86  014E               	movlb	14	; select bank14
 27004     1E87  140F               	bsf	15,0	;volatile
 27005     1E88                     l1965:
 27006     1E88  0008               	return
 27007     1E89                     __end_of_I2C1_MasterSetIrq:
 27008                           
 27009                           	psect	text135
 27010     1EF2                     __ptext135:	
 27011 ;; *************** function _I2C1_MasterIsNack *****************
 27012 ;; Defined at:
 27013 ;;		line 598 in file "mcc_generated_files/i2c1_master.c"
 27014 ;; Parameters:    Size  Location     Type
 27015 ;;		None
 27016 ;; Auto vars:     Size  Location     Type
 27017 ;;		None
 27018 ;; Return value:  Size  Location     Type
 27019 ;;                  1    wreg      _Bool 
 27020 ;; Registers used:
 27021 ;;		wreg, status,2, status,0
 27022 ;; Tracked objects:
 27023 ;;		On entry : 0/0
 27024 ;;		On exit  : 0/0
 27025 ;;		Unchanged: 0/0
 27026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27031 ;;Total ram usage:        0 bytes
 27032 ;; Hardware stack levels used: 1
 27033 ;; Hardware stack levels required when called: 4
 27034 ;; This function calls:
 27035 ;;		Nothing
 27036 ;; This function is called by:
 27037 ;;		_I2C1_MasterFsm
 27038 ;;		_I2C1_DO_TX
 27039 ;; This function uses a non-reentrant model
 27040 ;;
 27041                           
 27042     1EF2                     _I2C1_MasterIsNack:	
 27043                           ;psect for function _I2C1_MasterIsNack
 27044                           
 27045     1EF2                     l12601:	
 27046                           ;incstack = 0
 27047                           ; Regs used in _I2C1_MasterIsNack: [wreg+status,2+status,0]
 27048                           
 27049                           
 27050                           ;mcc_generated_files/i2c1_master.c: 600:     return SSP1CON2bits.ACKSTAT;
 27051     1EF2  0143               	movlb	3	; select bank3
 27052     1EF3  0E11               	swapf	17,w	;volatile
 27053     1EF4  0C89               	rrf	9,f
 27054     1EF5  0C89               	rrf	9,f
 27055     1EF6  3901               	andlw	1
 27056     1EF7                     l1938:
 27057     1EF7  0008               	return
 27058     1EF8                     __end_of_I2C1_MasterIsNack:
 27059                           
 27060                           	psect	text136
 27061     1EAC                     __ptext136:	
 27062 ;; *************** function _I2C1_MasterSendTxData *****************
 27063 ;; Defined at:
 27064 ;;		line 568 in file "mcc_generated_files/i2c1_master.c"
 27065 ;; Parameters:    Size  Location     Type
 27066 ;;  data            1    wreg     unsigned char 
 27067 ;; Auto vars:     Size  Location     Type
 27068 ;;  data            1    1[COMMON] unsigned char 
 27069 ;; Return value:  Size  Location     Type
 27070 ;;                  1    wreg      void 
 27071 ;; Registers used:
 27072 ;;		wreg
 27073 ;; Tracked objects:
 27074 ;;		On entry : 0/0
 27075 ;;		On exit  : 0/0
 27076 ;;		Unchanged: 0/0
 27077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27079 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27081 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27082 ;;Total ram usage:        1 bytes
 27083 ;; Hardware stack levels used: 1
 27084 ;; Hardware stack levels required when called: 4
 27085 ;; This function calls:
 27086 ;;		Nothing
 27087 ;; This function is called by:
 27088 ;;		_I2C1_DO_SEND_ADR_READ
 27089 ;;		_I2C1_DO_SEND_ADR_WRITE
 27090 ;;		_I2C1_DO_TX
 27091 ;; This function uses a non-reentrant model
 27092 ;;
 27093                           
 27094     1EAC                     _I2C1_MasterSendTxData:	
 27095                           ;psect for function _I2C1_MasterSendTxData
 27096                           
 27097                           
 27098                           ;incstack = 0
 27099                           ; Regs used in _I2C1_MasterSendTxData: [wreg]
 27100                           ;I2C1_MasterSendTxData@data stored from wreg
 27101     1EAC  00F1               	movwf	I2C1_MasterSendTxData@data
 27102     1EAD                     l12605:
 27103                           
 27104                           ;mcc_generated_files/i2c1_master.c: 568: static __attribute__((inline)) void I2C1_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c1_master.c: 569: {;mcc_generated_files/i
      +                          2c1_master.c: 570:     SSP1BUF = data;
 27105     1EAD  0871               	movf	I2C1_MasterSendTxData@data,w
 27106     1EAE  0143               	movlb	3	; select bank3
 27107     1EAF  008C               	movwf	12	;volatile
 27108     1EB0                     l1920:
 27109     1EB0  0008               	return
 27110     1EB1                     __end_of_I2C1_MasterSendTxData:
 27111                           
 27112                           	psect	text137
 27113     1EA0                     __ptext137:	
 27114 ;; *************** function _I2C1_MasterSendAck *****************
 27115 ;; Defined at:
 27116 ;;		line 603 in file "mcc_generated_files/i2c1_master.c"
 27117 ;; Parameters:    Size  Location     Type
 27118 ;;		None
 27119 ;; Auto vars:     Size  Location     Type
 27120 ;;		None
 27121 ;; Return value:  Size  Location     Type
 27122 ;;                  1    wreg      void 
 27123 ;; Registers used:
 27124 ;;		None
 27125 ;; Tracked objects:
 27126 ;;		On entry : 0/0
 27127 ;;		On exit  : 0/0
 27128 ;;		Unchanged: 0/0
 27129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27134 ;;Total ram usage:        0 bytes
 27135 ;; Hardware stack levels used: 1
 27136 ;; Hardware stack levels required when called: 4
 27137 ;; This function calls:
 27138 ;;		Nothing
 27139 ;; This function is called by:
 27140 ;;		_I2C1_DO_RX
 27141 ;;		_I2C1_DO_RX_ACK
 27142 ;; This function uses a non-reentrant model
 27143 ;;
 27144                           
 27145     1EA0                     _I2C1_MasterSendAck:	
 27146                           ;psect for function _I2C1_MasterSendAck
 27147                           
 27148     1EA0                     l12629:	
 27149                           ;incstack = 0
 27150                           ; Regs used in _I2C1_MasterSendAck: []
 27151                           
 27152                           
 27153                           ;mcc_generated_files/i2c1_master.c: 605:     SSP1CON2bits.ACKDT = 0;
 27154     1EA0  0143               	movlb	3	; select bank3
 27155     1EA1  1291               	bcf	17,5	;volatile
 27156                           
 27157                           ;mcc_generated_files/i2c1_master.c: 606:     SSP1CON2bits.ACKEN = 1;
 27158     1EA2  1611               	bsf	17,4	;volatile
 27159     1EA3                     l1941:
 27160     1EA3  0008               	return
 27161     1EA4                     __end_of_I2C1_MasterSendAck:
 27162                           
 27163                           	psect	text138
 27164     1E83                     __ptext138:	
 27165 ;; *************** function _I2C1_MasterGetRxData *****************
 27166 ;; Defined at:
 27167 ;;		line 563 in file "mcc_generated_files/i2c1_master.c"
 27168 ;; Parameters:    Size  Location     Type
 27169 ;;		None
 27170 ;; Auto vars:     Size  Location     Type
 27171 ;;		None
 27172 ;; Return value:  Size  Location     Type
 27173 ;;                  1    wreg      unsigned char 
 27174 ;; Registers used:
 27175 ;;		wreg
 27176 ;; Tracked objects:
 27177 ;;		On entry : 0/0
 27178 ;;		On exit  : 0/0
 27179 ;;		Unchanged: 0/0
 27180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27185 ;;Total ram usage:        0 bytes
 27186 ;; Hardware stack levels used: 1
 27187 ;; Hardware stack levels required when called: 4
 27188 ;; This function calls:
 27189 ;;		Nothing
 27190 ;; This function is called by:
 27191 ;;		_I2C1_DO_RX
 27192 ;; This function uses a non-reentrant model
 27193 ;;
 27194                           
 27195     1E83                     _I2C1_MasterGetRxData:	
 27196                           ;psect for function _I2C1_MasterGetRxData
 27197                           
 27198     1E83                     l12625:	
 27199                           ;incstack = 0
 27200                           ; Regs used in _I2C1_MasterGetRxData: [wreg]
 27201                           
 27202                           
 27203                           ;mcc_generated_files/i2c1_master.c: 565:     return SSP1BUF;
 27204     1E83  0143               	movlb	3	; select bank3
 27205     1E84  080C               	movf	12,w	;volatile
 27206     1E85                     l1917:
 27207     1E85  0008               	return
 27208     1E86                     __end_of_I2C1_MasterGetRxData:
 27209                           
 27210                           	psect	text139
 27211     1E9C                     __ptext139:	
 27212 ;; *************** function _I2C1_MasterSendNack *****************
 27213 ;; Defined at:
 27214 ;;		line 609 in file "mcc_generated_files/i2c1_master.c"
 27215 ;; Parameters:    Size  Location     Type
 27216 ;;		None
 27217 ;; Auto vars:     Size  Location     Type
 27218 ;;		None
 27219 ;; Return value:  Size  Location     Type
 27220 ;;                  1    wreg      void 
 27221 ;; Registers used:
 27222 ;;		None
 27223 ;; Tracked objects:
 27224 ;;		On entry : 0/0
 27225 ;;		On exit  : 0/0
 27226 ;;		Unchanged: 0/0
 27227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27232 ;;Total ram usage:        0 bytes
 27233 ;; Hardware stack levels used: 1
 27234 ;; Hardware stack levels required when called: 4
 27235 ;; This function calls:
 27236 ;;		Nothing
 27237 ;; This function is called by:
 27238 ;;		_I2C1_DO_RX_NACK_STOP
 27239 ;;		_I2C1_DO_RX_NACK_RESTART
 27240 ;; This function uses a non-reentrant model
 27241 ;;
 27242                           
 27243     1E9C                     _I2C1_MasterSendNack:	
 27244                           ;psect for function _I2C1_MasterSendNack
 27245                           
 27246     1E9C                     l12523:	
 27247                           ;incstack = 0
 27248                           ; Regs used in _I2C1_MasterSendNack: []
 27249                           
 27250                           
 27251                           ;mcc_generated_files/i2c1_master.c: 611:     SSP1CON2bits.ACKDT = 1;
 27252     1E9C  0143               	movlb	3	; select bank3
 27253     1E9D  1691               	bsf	17,5	;volatile
 27254                           
 27255                           ;mcc_generated_files/i2c1_master.c: 612:     SSP1CON2bits.ACKEN = 1;
 27256     1E9E  1611               	bsf	17,4	;volatile
 27257     1E9F                     l1944:
 27258     1E9F  0008               	return
 27259     1EA0                     __end_of_I2C1_MasterSendNack:
 27260                           
 27261                           	psect	text140
 27262     1E80                     __ptext140:	
 27263 ;; *************** function _I2C1_MasterStartRx *****************
 27264 ;; Defined at:
 27265 ;;		line 583 in file "mcc_generated_files/i2c1_master.c"
 27266 ;; Parameters:    Size  Location     Type
 27267 ;;		None
 27268 ;; Auto vars:     Size  Location     Type
 27269 ;;		None
 27270 ;; Return value:  Size  Location     Type
 27271 ;;                  1    wreg      void 
 27272 ;; Registers used:
 27273 ;;		None
 27274 ;; Tracked objects:
 27275 ;;		On entry : 0/0
 27276 ;;		On exit  : 0/0
 27277 ;;		Unchanged: 0/0
 27278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27283 ;;Total ram usage:        0 bytes
 27284 ;; Hardware stack levels used: 1
 27285 ;; Hardware stack levels required when called: 4
 27286 ;; This function calls:
 27287 ;;		Nothing
 27288 ;; This function is called by:
 27289 ;;		_I2C1_DO_RCEN
 27290 ;; This function uses a non-reentrant model
 27291 ;;
 27292                           
 27293     1E80                     _I2C1_MasterStartRx:	
 27294                           ;psect for function _I2C1_MasterStartRx
 27295                           
 27296     1E80                     l12643:	
 27297                           ;incstack = 0
 27298                           ; Regs used in _I2C1_MasterStartRx: []
 27299                           
 27300                           
 27301                           ;mcc_generated_files/i2c1_master.c: 585:     SSP1CON2bits.RCEN = 1;
 27302     1E80  0143               	movlb	3	; select bank3
 27303     1E81  1591               	bsf	17,3	;volatile
 27304     1E82                     l1929:
 27305     1E82  0008               	return
 27306     1E83                     __end_of_I2C1_MasterStartRx:
 27307                           
 27308                           	psect	text141
 27309     1E6C                     __ptext141:	
 27310 ;; *************** function _I2C1_CallbackReturnReset *****************
 27311 ;; Defined at:
 27312 ;;		line 525 in file "mcc_generated_files/i2c1_master.c"
 27313 ;; Parameters:    Size  Location     Type
 27314 ;;  funPtr          1    8[COMMON] PTR void 
 27315 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27316 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27317 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27318 ;; Auto vars:     Size  Location     Type
 27319 ;;		None
 27320 ;; Return value:  Size  Location     Type
 27321 ;;                  1    wreg      enum E363
 27322 ;; Registers used:
 27323 ;;		wreg
 27324 ;; Tracked objects:
 27325 ;;		On entry : 0/0
 27326 ;;		On exit  : 0/0
 27327 ;;		Unchanged: 0/0
 27328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27329 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27332 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27333 ;;Total ram usage:        1 bytes
 27334 ;; Hardware stack levels used: 1
 27335 ;; Hardware stack levels required when called: 4
 27336 ;; This function calls:
 27337 ;;		Nothing
 27338 ;; This function is called by:
 27339 ;;		_I2C1_Open
 27340 ;;		_I2C1_DO_TX
 27341 ;;		_I2C1_DO_RX
 27342 ;;		_I2C1_DO_TX_EMPTY
 27343 ;;		_I2C1_DO_ADDRESS_NACK
 27344 ;;		_I2C1_DO_RX_EMPTY
 27345 ;; This function uses a non-reentrant model
 27346 ;;
 27347                           
 27348     1E6C                     _I2C1_CallbackReturnReset:	
 27349                           ;psect for function _I2C1_CallbackReturnReset
 27350                           
 27351     1E6C                     l12657:	
 27352                           ;incstack = 0
 27353                           ; Regs used in _I2C1_CallbackReturnReset: [wreg]
 27354                           
 27355                           
 27356                           ;mcc_generated_files/i2c1_master.c: 525: i2c1_operations_t I2C1_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c1_master.c: 526: {;mcc_generated_files/i2c1_master.c: 5
      +                          27:     return I2C1_RESET_LINK;
 27357     1E6C  3005               	movlw	5
 27358     1E6D                     l1901:
 27359     1E6D  0008               	return
 27360     1E6E                     __end_of_I2C1_CallbackReturnReset:
 27361                           
 27362                           	psect	text142
 27363     1E6A                     __ptext142:	
 27364 ;; *************** function _I2C1_CallbackReturnStop *****************
 27365 ;; Defined at:
 27366 ;;		line 520 in file "mcc_generated_files/i2c1_master.c"
 27367 ;; Parameters:    Size  Location     Type
 27368 ;;  funPtr          1    8[COMMON] PTR void 
 27369 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27370 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27371 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27372 ;; Auto vars:     Size  Location     Type
 27373 ;;		None
 27374 ;; Return value:  Size  Location     Type
 27375 ;;                  1    wreg      enum E363
 27376 ;; Registers used:
 27377 ;;		wreg
 27378 ;; Tracked objects:
 27379 ;;		On entry : 0/0
 27380 ;;		On exit  : 0/0
 27381 ;;		Unchanged: 0/0
 27382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27383 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27386 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27387 ;;Total ram usage:        1 bytes
 27388 ;; Hardware stack levels used: 1
 27389 ;; Hardware stack levels required when called: 4
 27390 ;; This function calls:
 27391 ;;		Nothing
 27392 ;; This function is called by:
 27393 ;;		_I2C1_Open
 27394 ;;		_I2C1_SetCallback
 27395 ;;		_I2C1_DO_TX
 27396 ;;		_I2C1_DO_RX
 27397 ;;		_I2C1_DO_TX_EMPTY
 27398 ;;		_I2C1_DO_ADDRESS_NACK
 27399 ;;		_I2C1_DO_RX_EMPTY
 27400 ;; This function uses a non-reentrant model
 27401 ;;
 27402                           
 27403     1E6A                     _I2C1_CallbackReturnStop:	
 27404                           ;psect for function _I2C1_CallbackReturnStop
 27405                           
 27406     1E6A                     l12653:	
 27407                           ;incstack = 0
 27408                           ; Regs used in _I2C1_CallbackReturnStop: [wreg]
 27409                           
 27410                           
 27411                           ;mcc_generated_files/i2c1_master.c: 520: i2c1_operations_t I2C1_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c1_master.c: 521: {;mcc_generated_files/i2c1_master.c: 52
      +                          2:     return I2C1_STOP;
 27412     1E6A  3001               	movlw	1
 27413     1E6B                     l1898:
 27414     1E6B  0008               	return
 27415     1E6C                     __end_of_I2C1_CallbackReturnStop:
 27416                           
 27417                           	psect	text143
 27418     1261                     __ptext143:	
 27419 ;; *************** function _rdBlkRegCompleteHandler@i2c1_master_example$F1273 *****************
 27420 ;; Defined at:
 27421 ;;		line 170 in file "mcc_generated_files/examples/i2c1_master_example.c"
 27422 ;; Parameters:    Size  Location     Type
 27423 ;;  ptr             1    8[COMMON] PTR void 
 27424 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27425 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27426 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27427 ;; Auto vars:     Size  Location     Type
 27428 ;;		None
 27429 ;; Return value:  Size  Location     Type
 27430 ;;                  1    wreg      enum E363
 27431 ;; Registers used:
 27432 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27433 ;; Tracked objects:
 27434 ;;		On entry : 0/0
 27435 ;;		On exit  : 0/0
 27436 ;;		Unchanged: 0/0
 27437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27438 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27441 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27442 ;;Total ram usage:        1 bytes
 27443 ;; Hardware stack levels used: 1
 27444 ;; Hardware stack levels required when called: 6
 27445 ;; This function calls:
 27446 ;;		_I2C1_SetBuffer
 27447 ;;		_I2C1_SetDataCompleteCallback
 27448 ;; This function is called by:
 27449 ;;		_I2C1_ReadDataBlock
 27450 ;;		_I2C1_DO_TX
 27451 ;;		_I2C1_DO_RX
 27452 ;;		_I2C1_DO_TX_EMPTY
 27453 ;;		_I2C1_DO_ADDRESS_NACK
 27454 ;;		_I2C1_DO_RX_EMPTY
 27455 ;; This function uses a non-reentrant model
 27456 ;;
 27457                           
 27458     1261                     _rdBlkRegCompleteHandler@i2c1_master_example$F1273:	
 27459                           ;psect for function _rdBlkRegCompleteHandler@i2c1_master_example$F1273
 27460                           
 27461     1261                     l12595:	
 27462                           ;incstack = 0
 27463                           ; Regs used in _rdBlkRegCompleteHandler@i2c1_master_example$F1273: [wreg+fsr1l+fsr1h+sta
      +                          tus,2+status,0+pclath+cstack]
 27464                           
 27465                           
 27466                           ;mcc_generated_files/examples/i2c1_master_example.c: 170: static i2c1_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 171: {
      +                          ;mcc_generated_files/examples/i2c1_master_example.c: 172:     I2C1_SetBuffer(((i2c1_buff
      +                          er_t *)ptr)->data,((i2c1_buffer_t*)ptr)->len);
 27467     1261  0878               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F1273@ptr,w
 27468     1262  0086               	movwf	6
 27469     1263  0187               	clrf	7
 27470     1264  3F40               	moviw [0]fsr1
 27471     1265  00F1               	movwf	I2C1_SetBuffer@bufferSize
 27472     1266  3F41               	moviw [1]fsr1
 27473     1267  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 27474     1268  0878               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F1273@ptr,w
 27475     1269  3E02               	addlw	2
 27476     126A  0086               	movwf	6
 27477     126B  0187               	clrf	7
 27478     126C  0801               	movf	1,w
 27479     126D  3190  205E  3192   	fcall	_I2C1_SetBuffer
 27480                           
 27481                           ;mcc_generated_files/examples/i2c1_master_example.c: 173:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 27482     1270  3000               	movlw	0
 27483     1271  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27484     1272  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27485     1273  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27486     1274  319F  27D4  3192   	fcall	_I2C1_SetDataCompleteCallback
 27487     1277                     l12597:
 27488                           
 27489                           ;mcc_generated_files/examples/i2c1_master_example.c: 174:     return I2C1_RESTART_READ;
 27490     1277  3002               	movlw	2
 27491     1278                     l742:
 27492     1278  0008               	return
 27493     1279                     __end_of_rdBlkRegCompleteHandler@i2c1_master_example$F1273:
 27494                           
 27495                           	psect	text144
 27496     112D                     __ptext144:	
 27497 ;; *************** function _wr1RegCompleteHandler@i2c1_master_example$F1256 *****************
 27498 ;; Defined at:
 27499 ;;		line 156 in file "mcc_generated_files/examples/i2c1_master_example.c"
 27500 ;; Parameters:    Size  Location     Type
 27501 ;;  ptr             1    8[COMMON] PTR void 
 27502 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27503 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27504 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27505 ;; Auto vars:     Size  Location     Type
 27506 ;;		None
 27507 ;; Return value:  Size  Location     Type
 27508 ;;                  1    wreg      enum E363
 27509 ;; Registers used:
 27510 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27511 ;; Tracked objects:
 27512 ;;		On entry : 0/0
 27513 ;;		On exit  : 0/0
 27514 ;;		Unchanged: 0/0
 27515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27516 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27519 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27520 ;;Total ram usage:        1 bytes
 27521 ;; Hardware stack levels used: 1
 27522 ;; Hardware stack levels required when called: 6
 27523 ;; This function calls:
 27524 ;;		_I2C1_SetBuffer
 27525 ;;		_I2C1_SetDataCompleteCallback
 27526 ;; This function is called by:
 27527 ;;		_I2C1_Write1ByteRegister
 27528 ;;		_I2C1_DO_TX
 27529 ;;		_I2C1_DO_RX
 27530 ;;		_I2C1_DO_TX_EMPTY
 27531 ;;		_I2C1_DO_ADDRESS_NACK
 27532 ;;		_I2C1_DO_RX_EMPTY
 27533 ;; This function uses a non-reentrant model
 27534 ;;
 27535                           
 27536     112D                     _wr1RegCompleteHandler@i2c1_master_example$F1256:	
 27537                           ;psect for function _wr1RegCompleteHandler@i2c1_master_example$F1256
 27538                           
 27539     112D                     l12579:	
 27540                           ;incstack = 0
 27541                           ; Regs used in _wr1RegCompleteHandler@i2c1_master_example$F1256: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 27542                           
 27543                           
 27544                           ;mcc_generated_files/examples/i2c1_master_example.c: 156: static i2c1_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 157: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 158:     I2C1_SetBuffer(ptr,1);
 27545     112D  3001               	movlw	1
 27546     112E  00F1               	movwf	I2C1_SetBuffer@bufferSize
 27547     112F  3000               	movlw	0
 27548     1130  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 27549     1131  0878               	movf	wr1RegCompleteHandler@i2c1_master_example$F1256@ptr,w
 27550     1132  3190  205E  3191   	fcall	_I2C1_SetBuffer
 27551     1135                     l12581:
 27552                           
 27553                           ;mcc_generated_files/examples/i2c1_master_example.c: 159:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 27554     1135  3000               	movlw	0
 27555     1136  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27556     1137  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27557     1138  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27558     1139  319F  27D4  3191   	fcall	_I2C1_SetDataCompleteCallback
 27559     113C                     l12583:
 27560                           
 27561                           ;mcc_generated_files/examples/i2c1_master_example.c: 160:     return I2C1_CONTINUE;
 27562     113C  3004               	movlw	4
 27563     113D                     l736:
 27564     113D  0008               	return
 27565     113E                     __end_of_wr1RegCompleteHandler@i2c1_master_example$F1256:
 27566                           
 27567                           	psect	text145
 27568     111C                     __ptext145:	
 27569 ;; *************** function _rd2RegCompleteHandler@i2c1_master_example$F1250 *****************
 27570 ;; Defined at:
 27571 ;;		line 149 in file "mcc_generated_files/examples/i2c1_master_example.c"
 27572 ;; Parameters:    Size  Location     Type
 27573 ;;  ptr             1    8[COMMON] PTR void 
 27574 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27575 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27576 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27577 ;; Auto vars:     Size  Location     Type
 27578 ;;		None
 27579 ;; Return value:  Size  Location     Type
 27580 ;;                  1    wreg      enum E363
 27581 ;; Registers used:
 27582 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27583 ;; Tracked objects:
 27584 ;;		On entry : 0/0
 27585 ;;		On exit  : 0/0
 27586 ;;		Unchanged: 0/0
 27587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27588 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27591 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27592 ;;Total ram usage:        1 bytes
 27593 ;; Hardware stack levels used: 1
 27594 ;; Hardware stack levels required when called: 6
 27595 ;; This function calls:
 27596 ;;		_I2C1_SetBuffer
 27597 ;;		_I2C1_SetDataCompleteCallback
 27598 ;; This function is called by:
 27599 ;;		_I2C1_Read2ByteRegister
 27600 ;;		_I2C1_DO_TX
 27601 ;;		_I2C1_DO_RX
 27602 ;;		_I2C1_DO_TX_EMPTY
 27603 ;;		_I2C1_DO_ADDRESS_NACK
 27604 ;;		_I2C1_DO_RX_EMPTY
 27605 ;; This function uses a non-reentrant model
 27606 ;;
 27607                           
 27608     111C                     _rd2RegCompleteHandler@i2c1_master_example$F1250:	
 27609                           ;psect for function _rd2RegCompleteHandler@i2c1_master_example$F1250
 27610                           
 27611     111C                     l12571:	
 27612                           ;incstack = 0
 27613                           ; Regs used in _rd2RegCompleteHandler@i2c1_master_example$F1250: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 27614                           
 27615                           
 27616                           ;mcc_generated_files/examples/i2c1_master_example.c: 149: static i2c1_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 150: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 151:     I2C1_SetBuffer(ptr,2);
 27617     111C  3002               	movlw	2
 27618     111D  00F1               	movwf	I2C1_SetBuffer@bufferSize
 27619     111E  3000               	movlw	0
 27620     111F  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 27621     1120  0878               	movf	rd2RegCompleteHandler@i2c1_master_example$F1250@ptr,w
 27622     1121  3190  205E  3191   	fcall	_I2C1_SetBuffer
 27623     1124                     l12573:
 27624                           
 27625                           ;mcc_generated_files/examples/i2c1_master_example.c: 152:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 27626     1124  3000               	movlw	0
 27627     1125  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27628     1126  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27629     1127  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27630     1128  319F  27D4  3191   	fcall	_I2C1_SetDataCompleteCallback
 27631     112B                     l12575:
 27632                           
 27633                           ;mcc_generated_files/examples/i2c1_master_example.c: 153:     return I2C1_RESTART_READ;
 27634     112B  3002               	movlw	2
 27635     112C                     l733:
 27636     112C  0008               	return
 27637     112D                     __end_of_rd2RegCompleteHandler@i2c1_master_example$F1250:
 27638                           
 27639                           	psect	text146
 27640     110B                     __ptext146:	
 27641 ;; *************** function _rd1RegCompleteHandler@i2c1_master_example$F1239 *****************
 27642 ;; Defined at:
 27643 ;;		line 142 in file "mcc_generated_files/examples/i2c1_master_example.c"
 27644 ;; Parameters:    Size  Location     Type
 27645 ;;  ptr             1    8[COMMON] PTR void 
 27646 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27647 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27648 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27649 ;; Auto vars:     Size  Location     Type
 27650 ;;		None
 27651 ;; Return value:  Size  Location     Type
 27652 ;;                  1    wreg      enum E363
 27653 ;; Registers used:
 27654 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27655 ;; Tracked objects:
 27656 ;;		On entry : 0/0
 27657 ;;		On exit  : 0/0
 27658 ;;		Unchanged: 0/0
 27659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27660 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27663 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27664 ;;Total ram usage:        1 bytes
 27665 ;; Hardware stack levels used: 1
 27666 ;; Hardware stack levels required when called: 6
 27667 ;; This function calls:
 27668 ;;		_I2C1_SetBuffer
 27669 ;;		_I2C1_SetDataCompleteCallback
 27670 ;; This function is called by:
 27671 ;;		_I2C1_Read1ByteRegister
 27672 ;;		_I2C1_DO_TX
 27673 ;;		_I2C1_DO_RX
 27674 ;;		_I2C1_DO_TX_EMPTY
 27675 ;;		_I2C1_DO_ADDRESS_NACK
 27676 ;;		_I2C1_DO_RX_EMPTY
 27677 ;; This function uses a non-reentrant model
 27678 ;;
 27679                           
 27680     110B                     _rd1RegCompleteHandler@i2c1_master_example$F1239:	
 27681                           ;psect for function _rd1RegCompleteHandler@i2c1_master_example$F1239
 27682                           
 27683     110B                     l12563:	
 27684                           ;incstack = 0
 27685                           ; Regs used in _rd1RegCompleteHandler@i2c1_master_example$F1239: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 27686                           
 27687                           
 27688                           ;mcc_generated_files/examples/i2c1_master_example.c: 142: static i2c1_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 143: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 144:     I2C1_SetBuffer(ptr,1);
 27689     110B  3001               	movlw	1
 27690     110C  00F1               	movwf	I2C1_SetBuffer@bufferSize
 27691     110D  3000               	movlw	0
 27692     110E  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 27693     110F  0878               	movf	rd1RegCompleteHandler@i2c1_master_example$F1239@ptr,w
 27694     1110  3190  205E  3191   	fcall	_I2C1_SetBuffer
 27695     1113                     l12565:
 27696                           
 27697                           ;mcc_generated_files/examples/i2c1_master_example.c: 145:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 27698     1113  3000               	movlw	0
 27699     1114  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27700     1115  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27701     1116  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27702     1117  319F  27D4  3191   	fcall	_I2C1_SetDataCompleteCallback
 27703     111A                     l12567:
 27704                           
 27705                           ;mcc_generated_files/examples/i2c1_master_example.c: 146:     return I2C1_RESTART_READ;
 27706     111A  3002               	movlw	2
 27707     111B                     l730:
 27708     111B  0008               	return
 27709     111C                     __end_of_rd1RegCompleteHandler@i2c1_master_example$F1239:
 27710                           
 27711                           	psect	text147
 27712     1249                     __ptext147:	
 27713 ;; *************** function _rdBlkRegCompleteHandler *****************
 27714 ;; Defined at:
 27715 ;;		line 185 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 27716 ;; Parameters:    Size  Location     Type
 27717 ;;  p               1    8[COMMON] PTR void 
 27718 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27719 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27720 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27721 ;; Auto vars:     Size  Location     Type
 27722 ;;		None
 27723 ;; Return value:  Size  Location     Type
 27724 ;;                  1    wreg      enum E363
 27725 ;; Registers used:
 27726 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27727 ;; Tracked objects:
 27728 ;;		On entry : 0/0
 27729 ;;		On exit  : 0/0
 27730 ;;		Unchanged: 0/0
 27731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27732 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27735 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27736 ;;Total ram usage:        1 bytes
 27737 ;; Hardware stack levels used: 1
 27738 ;; Hardware stack levels required when called: 6
 27739 ;; This function calls:
 27740 ;;		_I2C1_SetBuffer
 27741 ;;		_I2C1_SetDataCompleteCallback
 27742 ;; This function is called by:
 27743 ;;		_i2c_readDataBlock
 27744 ;;		_I2C1_DO_TX
 27745 ;;		_I2C1_DO_RX
 27746 ;;		_I2C1_DO_TX_EMPTY
 27747 ;;		_I2C1_DO_ADDRESS_NACK
 27748 ;;		_I2C1_DO_RX_EMPTY
 27749 ;; This function uses a non-reentrant model
 27750 ;;
 27751                           
 27752     1249                     _rdBlkRegCompleteHandler:	
 27753                           ;psect for function _rdBlkRegCompleteHandler
 27754                           
 27755     1249                     l12557:	
 27756                           ;incstack = 0
 27757                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 27758                           
 27759                           
 27760                           ;mcc_generated_files/drivers/i2c_simple_master.c: 185: static i2c1_operations_t rdBlkReg
      +                          CompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 186: {;mcc_gen
      +                          erated_files/drivers/i2c_simple_master.c: 187:     I2C1_SetBuffer(((buf_t *)p)->data,((b
      +                          uf_t*)p)->len);
 27761     1249  0878               	movf	rdBlkRegCompleteHandler@p,w
 27762     124A  0086               	movwf	6
 27763     124B  0187               	clrf	7
 27764     124C  3F40               	moviw [0]fsr1
 27765     124D  00F1               	movwf	I2C1_SetBuffer@bufferSize
 27766     124E  3F41               	moviw [1]fsr1
 27767     124F  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 27768     1250  0878               	movf	rdBlkRegCompleteHandler@p,w
 27769     1251  3E02               	addlw	2
 27770     1252  0086               	movwf	6
 27771     1253  0187               	clrf	7
 27772     1254  0801               	movf	1,w
 27773     1255  3190  205E  3192   	fcall	_I2C1_SetBuffer
 27774                           
 27775                           ;mcc_generated_files/drivers/i2c_simple_master.c: 188:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 27776     1258  3000               	movlw	0
 27777     1259  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27778     125A  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27779     125B  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27780     125C  319F  27D4  3192   	fcall	_I2C1_SetDataCompleteCallback
 27781     125F                     l12559:
 27782                           
 27783                           ;mcc_generated_files/drivers/i2c_simple_master.c: 189:     return I2C1_RESTART_READ;
 27784     125F  3002               	movlw	2
 27785     1260                     l561:
 27786     1260  0008               	return
 27787     1261                     __end_of_rdBlkRegCompleteHandler:
 27788                           
 27789                           	psect	text148
 27790     10FA                     __ptext148:	
 27791 ;; *************** function _wr2RegCompleteHandler *****************
 27792 ;; Defined at:
 27793 ;;		line 151 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 27794 ;; Parameters:    Size  Location     Type
 27795 ;;  p               1    8[COMMON] PTR void 
 27796 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27797 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27798 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27799 ;; Auto vars:     Size  Location     Type
 27800 ;;		None
 27801 ;; Return value:  Size  Location     Type
 27802 ;;                  1    wreg      enum E363
 27803 ;; Registers used:
 27804 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27805 ;; Tracked objects:
 27806 ;;		On entry : 0/0
 27807 ;;		On exit  : 0/0
 27808 ;;		Unchanged: 0/0
 27809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27810 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27813 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27814 ;;Total ram usage:        1 bytes
 27815 ;; Hardware stack levels used: 1
 27816 ;; Hardware stack levels required when called: 6
 27817 ;; This function calls:
 27818 ;;		_I2C1_SetBuffer
 27819 ;;		_I2C1_SetDataCompleteCallback
 27820 ;; This function is called by:
 27821 ;;		_i2c_write2ByteRegister
 27822 ;;		_I2C1_DO_TX
 27823 ;;		_I2C1_DO_RX
 27824 ;;		_I2C1_DO_TX_EMPTY
 27825 ;;		_I2C1_DO_ADDRESS_NACK
 27826 ;;		_I2C1_DO_RX_EMPTY
 27827 ;; This function uses a non-reentrant model
 27828 ;;
 27829                           
 27830     10FA                     _wr2RegCompleteHandler:	
 27831                           ;psect for function _wr2RegCompleteHandler
 27832                           
 27833     10FA                     l12549:	
 27834                           ;incstack = 0
 27835                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 27836                           
 27837                           
 27838                           ;mcc_generated_files/drivers/i2c_simple_master.c: 151: static i2c1_operations_t wr2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 152: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 153:     I2C1_SetBuffer(p,2);
 27839     10FA  3002               	movlw	2
 27840     10FB  00F1               	movwf	I2C1_SetBuffer@bufferSize
 27841     10FC  3000               	movlw	0
 27842     10FD  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 27843     10FE  0878               	movf	wr2RegCompleteHandler@p,w
 27844     10FF  3190  205E  3190   	fcall	_I2C1_SetBuffer
 27845     1102                     l12551:
 27846                           
 27847                           ;mcc_generated_files/drivers/i2c_simple_master.c: 154:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 27848     1102  3000               	movlw	0
 27849     1103  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27850     1104  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27851     1105  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27852     1106  319F  27D4  3190   	fcall	_I2C1_SetDataCompleteCallback
 27853     1109                     l12553:
 27854                           
 27855                           ;mcc_generated_files/drivers/i2c_simple_master.c: 155:     return I2C1_CONTINUE;
 27856     1109  3004               	movlw	4
 27857     110A                     l549:
 27858     110A  0008               	return
 27859     110B                     __end_of_wr2RegCompleteHandler:
 27860                           
 27861                           	psect	text149
 27862     10E9                     __ptext149:	
 27863 ;; *************** function _rd2RegCompleteHandler *****************
 27864 ;; Defined at:
 27865 ;;		line 119 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 27866 ;; Parameters:    Size  Location     Type
 27867 ;;  p               1    8[COMMON] PTR void 
 27868 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27869 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27870 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27871 ;; Auto vars:     Size  Location     Type
 27872 ;;		None
 27873 ;; Return value:  Size  Location     Type
 27874 ;;                  1    wreg      enum E363
 27875 ;; Registers used:
 27876 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27877 ;; Tracked objects:
 27878 ;;		On entry : 0/0
 27879 ;;		On exit  : 0/0
 27880 ;;		Unchanged: 0/0
 27881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27882 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27885 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27886 ;;Total ram usage:        1 bytes
 27887 ;; Hardware stack levels used: 1
 27888 ;; Hardware stack levels required when called: 6
 27889 ;; This function calls:
 27890 ;;		_I2C1_SetBuffer
 27891 ;;		_I2C1_SetDataCompleteCallback
 27892 ;; This function is called by:
 27893 ;;		_i2c_read2ByteRegister
 27894 ;;		_I2C1_DO_TX
 27895 ;;		_I2C1_DO_RX
 27896 ;;		_I2C1_DO_TX_EMPTY
 27897 ;;		_I2C1_DO_ADDRESS_NACK
 27898 ;;		_I2C1_DO_RX_EMPTY
 27899 ;; This function uses a non-reentrant model
 27900 ;;
 27901                           
 27902     10E9                     _rd2RegCompleteHandler:	
 27903                           ;psect for function _rd2RegCompleteHandler
 27904                           
 27905     10E9                     l12541:	
 27906                           ;incstack = 0
 27907                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 27908                           
 27909                           
 27910                           ;mcc_generated_files/drivers/i2c_simple_master.c: 119: static i2c1_operations_t rd2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 120: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 121:     I2C1_SetBuffer(p,2);
 27911     10E9  3002               	movlw	2
 27912     10EA  00F1               	movwf	I2C1_SetBuffer@bufferSize
 27913     10EB  3000               	movlw	0
 27914     10EC  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 27915     10ED  0878               	movf	rd2RegCompleteHandler@p,w
 27916     10EE  3190  205E  3190   	fcall	_I2C1_SetBuffer
 27917     10F1                     l12543:
 27918                           
 27919                           ;mcc_generated_files/drivers/i2c_simple_master.c: 122:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 27920     10F1  3000               	movlw	0
 27921     10F2  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27922     10F3  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27923     10F4  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27924     10F5  319F  27D4  3190   	fcall	_I2C1_SetDataCompleteCallback
 27925     10F8                     l12545:
 27926                           
 27927                           ;mcc_generated_files/drivers/i2c_simple_master.c: 123:     return I2C1_RESTART_READ;
 27928     10F8  3002               	movlw	2
 27929     10F9                     l537:
 27930     10F9  0008               	return
 27931     10FA                     __end_of_rd2RegCompleteHandler:
 27932                           
 27933                           	psect	text150
 27934     10D8                     __ptext150:	
 27935 ;; *************** function _rd1RegCompleteHandler *****************
 27936 ;; Defined at:
 27937 ;;		line 81 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 27938 ;; Parameters:    Size  Location     Type
 27939 ;;  p               1    8[COMMON] PTR void 
 27940 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27941 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27942 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27943 ;; Auto vars:     Size  Location     Type
 27944 ;;		None
 27945 ;; Return value:  Size  Location     Type
 27946 ;;                  1    wreg      enum E363
 27947 ;; Registers used:
 27948 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27949 ;; Tracked objects:
 27950 ;;		On entry : 0/0
 27951 ;;		On exit  : 0/0
 27952 ;;		Unchanged: 0/0
 27953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27954 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27957 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27958 ;;Total ram usage:        1 bytes
 27959 ;; Hardware stack levels used: 1
 27960 ;; Hardware stack levels required when called: 6
 27961 ;; This function calls:
 27962 ;;		_I2C1_SetBuffer
 27963 ;;		_I2C1_SetDataCompleteCallback
 27964 ;; This function is called by:
 27965 ;;		_i2c_read1ByteRegister
 27966 ;;		_I2C1_DO_TX
 27967 ;;		_I2C1_DO_RX
 27968 ;;		_I2C1_DO_TX_EMPTY
 27969 ;;		_I2C1_DO_ADDRESS_NACK
 27970 ;;		_I2C1_DO_RX_EMPTY
 27971 ;; This function uses a non-reentrant model
 27972 ;;
 27973                           
 27974     10D8                     _rd1RegCompleteHandler:	
 27975                           ;psect for function _rd1RegCompleteHandler
 27976                           
 27977     10D8                     l12533:	
 27978                           ;incstack = 0
 27979                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 27980                           
 27981                           
 27982                           ;mcc_generated_files/drivers/i2c_simple_master.c: 81: static i2c1_operations_t rd1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 82: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 83:     I2C1_SetBuffer(p,1);
 27983     10D8  3001               	movlw	1
 27984     10D9  00F1               	movwf	I2C1_SetBuffer@bufferSize
 27985     10DA  3000               	movlw	0
 27986     10DB  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 27987     10DC  0878               	movf	rd1RegCompleteHandler@p,w
 27988     10DD  3190  205E  3190   	fcall	_I2C1_SetBuffer
 27989     10E0                     l12535:
 27990                           
 27991                           ;mcc_generated_files/drivers/i2c_simple_master.c: 84:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 27992     10E0  3000               	movlw	0
 27993     10E1  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27994     10E2  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27995     10E3  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27996     10E4  319F  27D4  3190   	fcall	_I2C1_SetDataCompleteCallback
 27997     10E7                     l12537:
 27998                           
 27999                           ;mcc_generated_files/drivers/i2c_simple_master.c: 85:     return I2C1_RESTART_READ;
 28000     10E7  3002               	movlw	2
 28001     10E8                     l522:
 28002     10E8  0008               	return
 28003     10E9                     __end_of_rd1RegCompleteHandler:
 28004                           
 28005                           	psect	text151
 28006     10C7                     __ptext151:	
 28007 ;; *************** function _wr1RegCompleteHandler *****************
 28008 ;; Defined at:
 28009 ;;		line 34 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 28010 ;; Parameters:    Size  Location     Type
 28011 ;;  p               1    8[COMMON] PTR void 
 28012 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 28013 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 28014 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 28015 ;; Auto vars:     Size  Location     Type
 28016 ;;		None
 28017 ;; Return value:  Size  Location     Type
 28018 ;;                  1    wreg      enum E363
 28019 ;; Registers used:
 28020 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 28021 ;; Tracked objects:
 28022 ;;		On entry : 0/0
 28023 ;;		On exit  : 0/0
 28024 ;;		Unchanged: 0/0
 28025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28026 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28029 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28030 ;;Total ram usage:        1 bytes
 28031 ;; Hardware stack levels used: 1
 28032 ;; Hardware stack levels required when called: 6
 28033 ;; This function calls:
 28034 ;;		_I2C1_SetBuffer
 28035 ;;		_I2C1_SetDataCompleteCallback
 28036 ;; This function is called by:
 28037 ;;		_i2c_write1ByteRegister
 28038 ;;		_I2C1_DO_TX
 28039 ;;		_I2C1_DO_RX
 28040 ;;		_I2C1_DO_TX_EMPTY
 28041 ;;		_I2C1_DO_ADDRESS_NACK
 28042 ;;		_I2C1_DO_RX_EMPTY
 28043 ;; This function uses a non-reentrant model
 28044 ;;
 28045                           
 28046     10C7                     _wr1RegCompleteHandler:	
 28047                           ;psect for function _wr1RegCompleteHandler
 28048                           
 28049     10C7                     l12525:	
 28050                           ;incstack = 0
 28051                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 28052                           
 28053                           
 28054                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34: static i2c1_operations_t wr1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 35: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 36:     I2C1_SetBuffer(p,1);
 28055     10C7  3001               	movlw	1
 28056     10C8  00F1               	movwf	I2C1_SetBuffer@bufferSize
 28057     10C9  3000               	movlw	0
 28058     10CA  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 28059     10CB  0878               	movf	wr1RegCompleteHandler@p,w
 28060     10CC  3190  205E  3190   	fcall	_I2C1_SetBuffer
 28061     10CF                     l12527:
 28062                           
 28063                           ;mcc_generated_files/drivers/i2c_simple_master.c: 37:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 28064     10CF  3000               	movlw	0
 28065     10D0  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 28066     10D1  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 28067     10D2  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 28068     10D3  319F  27D4  3190   	fcall	_I2C1_SetDataCompleteCallback
 28069     10D6                     l12529:
 28070                           
 28071                           ;mcc_generated_files/drivers/i2c_simple_master.c: 38:     return I2C1_CONTINUE;
 28072     10D6  3004               	movlw	4
 28073     10D7                     l501:
 28074     10D7  0008               	return
 28075     10D8                     __end_of_wr1RegCompleteHandler:
 28076                           
 28077                           	psect	text152
 28078     10B6                     __ptext152:	
 28079 ;; *************** function _wr2RegCompleteHandler@i2c1_master_example$F1262 *****************
 28080 ;; Defined at:
 28081 ;;		line 163 in file "mcc_generated_files/examples/i2c1_master_example.c"
 28082 ;; Parameters:    Size  Location     Type
 28083 ;;  ptr             1    8[COMMON] PTR void 
 28084 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 28085 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 28086 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 28087 ;; Auto vars:     Size  Location     Type
 28088 ;;		None
 28089 ;; Return value:  Size  Location     Type
 28090 ;;                  1    wreg      enum E363
 28091 ;; Registers used:
 28092 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 28093 ;; Tracked objects:
 28094 ;;		On entry : 0/0
 28095 ;;		On exit  : 0/0
 28096 ;;		Unchanged: 0/0
 28097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28098 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28101 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28102 ;;Total ram usage:        1 bytes
 28103 ;; Hardware stack levels used: 1
 28104 ;; Hardware stack levels required when called: 6
 28105 ;; This function calls:
 28106 ;;		_I2C1_SetBuffer
 28107 ;;		_I2C1_SetDataCompleteCallback
 28108 ;; This function is called by:
 28109 ;;		_I2C1_Write2ByteRegister
 28110 ;;		_I2C1_DO_TX
 28111 ;;		_I2C1_DO_RX
 28112 ;;		_I2C1_DO_TX_EMPTY
 28113 ;;		_I2C1_DO_ADDRESS_NACK
 28114 ;;		_I2C1_DO_RX_EMPTY
 28115 ;; This function uses a non-reentrant model
 28116 ;;
 28117                           
 28118     10B6                     _wr2RegCompleteHandler@i2c1_master_example$F1262:	
 28119                           ;psect for function _wr2RegCompleteHandler@i2c1_master_example$F1262
 28120                           
 28121     10B6                     l12587:	
 28122                           ;incstack = 0
 28123                           ; Regs used in _wr2RegCompleteHandler@i2c1_master_example$F1262: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 28124                           
 28125                           
 28126                           ;mcc_generated_files/examples/i2c1_master_example.c: 163: static i2c1_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 164: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 165:     I2C1_SetBuffer(ptr,2);
 28127     10B6  3002               	movlw	2
 28128     10B7  00F1               	movwf	I2C1_SetBuffer@bufferSize
 28129     10B8  3000               	movlw	0
 28130     10B9  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 28131     10BA  0878               	movf	wr2RegCompleteHandler@i2c1_master_example$F1262@ptr,w
 28132     10BB  3190  205E  3190   	fcall	_I2C1_SetBuffer
 28133     10BE                     l12589:
 28134                           
 28135                           ;mcc_generated_files/examples/i2c1_master_example.c: 166:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 28136     10BE  3000               	movlw	0
 28137     10BF  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 28138     10C0  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 28139     10C1  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 28140     10C2  319F  27D4  3190   	fcall	_I2C1_SetDataCompleteCallback
 28141     10C5                     l12591:
 28142                           
 28143                           ;mcc_generated_files/examples/i2c1_master_example.c: 167:     return I2C1_CONTINUE;
 28144     10C5  3004               	movlw	4
 28145     10C6                     l739:
 28146     10C6  0008               	return
 28147     10C7                     __end_of_wr2RegCompleteHandler@i2c1_master_example$F1262:
 28148                           
 28149                           	psect	text153
 28150     1FD4                     __ptext153:	
 28151 ;; *************** function _I2C1_SetDataCompleteCallback *****************
 28152 ;; Defined at:
 28153 ;;		line 273 in file "mcc_generated_files/i2c1_master.c"
 28154 ;; Parameters:    Size  Location     Type
 28155 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 28156 ;;		 -> rdBlkRegCompleteHandler@i2c1_master_example$F1273(1), wr2RegCompleteHandler@i2c1_master_example$F1262(1), wr1Reg
      +CompleteHandler@i2c1_master_example$F1256(1), rd2RegCompleteHandler@i2c1_master_example$F1250(1), 
 28157 ;;		 -> rd1RegCompleteHandler@i2c1_master_example$F1239(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2Reg
      +CompleteHandler(1), 
 28158 ;;		 -> rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), NULL(1), 
 28159 ;;  ptr             1    7[COMMON] PTR void 
 28160 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 28161 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 28162 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 28163 ;; Auto vars:     Size  Location     Type
 28164 ;;		None
 28165 ;; Return value:  Size  Location     Type
 28166 ;;                  1    wreg      void 
 28167 ;; Registers used:
 28168 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 28169 ;; Tracked objects:
 28170 ;;		On entry : 0/0
 28171 ;;		On exit  : 0/0
 28172 ;;		Unchanged: 0/0
 28173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28174 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28177 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28178 ;;Total ram usage:        3 bytes
 28179 ;; Hardware stack levels used: 1
 28180 ;; Hardware stack levels required when called: 5
 28181 ;; This function calls:
 28182 ;;		_I2C1_SetCallback
 28183 ;; This function is called by:
 28184 ;;		_wr1RegCompleteHandler
 28185 ;;		_i2c_write1ByteRegister
 28186 ;;		_rd1RegCompleteHandler
 28187 ;;		_i2c_read1ByteRegister
 28188 ;;		_rd2RegCompleteHandler
 28189 ;;		_i2c_read2ByteRegister
 28190 ;;		_wr2RegCompleteHandler
 28191 ;;		_rdBlkRegCompleteHandler
 28192 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1239
 28193 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1250
 28194 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1256
 28195 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1262
 28196 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1273
 28197 ;;		_i2c_write2ByteRegister
 28198 ;;		_i2c_readDataBlock
 28199 ;;		_I2C1_Read1ByteRegister
 28200 ;;		_I2C1_Read2ByteRegister
 28201 ;;		_I2C1_Write1ByteRegister
 28202 ;;		_I2C1_Write2ByteRegister
 28203 ;;		_I2C1_ReadDataBlock
 28204 ;; This function uses a non-reentrant model
 28205 ;;
 28206                           
 28207     1FD4                     _I2C1_SetDataCompleteCallback:	
 28208                           ;psect for function _I2C1_SetDataCompleteCallback
 28209                           
 28210     1FD4                     l12517:	
 28211                           ;incstack = 0
 28212                           ; Regs used in _I2C1_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 28213                           
 28214                           
 28215                           ;mcc_generated_files/i2c1_master.c: 273: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 274: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 275:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 28216     1FD4  0876               	movf	I2C1_SetDataCompleteCallback@cb+1,w
 28217     1FD5  00F2               	movwf	I2C1_SetCallback@cb+1
 28218     1FD6  0875               	movf	I2C1_SetDataCompleteCallback@cb,w
 28219     1FD7  00F1               	movwf	I2C1_SetCallback@cb
 28220     1FD8  0877               	movf	I2C1_SetDataCompleteCallback@ptr,w
 28221     1FD9  00F3               	movwf	I2C1_SetCallback@ptr
 28222     1FDA  3000               	movlw	0
 28223     1FDB  3194  2445  319F   	fcall	_I2C1_SetCallback
 28224     1FDE                     l1772:
 28225     1FDE  0008               	return
 28226     1FDF                     __end_of_I2C1_SetDataCompleteCallback:
 28227                           
 28228                           	psect	text154
 28229     1445                     __ptext154:	
 28230 ;; *************** function _I2C1_SetCallback *****************
 28231 ;; Defined at:
 28232 ;;		line 298 in file "mcc_generated_files/i2c1_master.c"
 28233 ;; Parameters:    Size  Location     Type
 28234 ;;  idx             1    wreg     enum E12583
 28235 ;;  cb              2    1[COMMON] PTR FTN(PTR void ,)enum 
 28236 ;;		 -> rdBlkRegCompleteHandler@i2c1_master_example$F1273(1), wr2RegCompleteHandler@i2c1_master_example$F1262(1), wr1Reg
      +CompleteHandler@i2c1_master_example$F1256(1), rd2RegCompleteHandler@i2c1_master_example$F1250(1), 
 28237 ;;		 -> rd1RegCompleteHandler@i2c1_master_example$F1239(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2Reg
      +CompleteHandler(1), 
 28238 ;;		 -> rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), NULL(1), 
 28239 ;;  ptr             1    3[COMMON] PTR void 
 28240 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 28241 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 28242 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 28243 ;; Auto vars:     Size  Location     Type
 28244 ;;  idx             1    4[COMMON] enum E12583
 28245 ;; Return value:  Size  Location     Type
 28246 ;;                  1    wreg      void 
 28247 ;; Registers used:
 28248 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 28249 ;; Tracked objects:
 28250 ;;		On entry : 0/0
 28251 ;;		On exit  : 0/0
 28252 ;;		Unchanged: 0/0
 28253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28254 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28255 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28257 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28258 ;;Total ram usage:        4 bytes
 28259 ;; Hardware stack levels used: 1
 28260 ;; Hardware stack levels required when called: 4
 28261 ;; This function calls:
 28262 ;;		Nothing
 28263 ;; This function is called by:
 28264 ;;		_I2C1_SetDataCompleteCallback
 28265 ;;		_I2C1_SetAddressNackCallback
 28266 ;;		_I2C1_SetWriteCollisionCallback
 28267 ;;		_I2C1_SetDataNackCallback
 28268 ;;		_I2C1_SetTimeoutCallback
 28269 ;; This function uses a non-reentrant model
 28270 ;;
 28271                           
 28272     1445                     _I2C1_SetCallback:	
 28273                           ;psect for function _I2C1_SetCallback
 28274                           
 28275                           
 28276                           ;incstack = 0
 28277                           ; Regs used in _I2C1_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
 28278                           ;I2C1_SetCallback@idx stored from wreg
 28279     1445  00F4               	movwf	I2C1_SetCallback@idx
 28280     1446                     l12505:
 28281                           
 28282                           ;mcc_generated_files/i2c1_master.c: 298: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 299: {;mcc_gen
      +                          erated_files/i2c1_master.c: 300:     if(cb)
 28283     1446  0871               	movf	I2C1_SetCallback@cb,w
 28284     1447  0472               	iorwf	I2C1_SetCallback@cb+1,w
 28285     1448  1903               	btfsc	3,2
 28286     1449  2C4B               	goto	u9581
 28287     144A  2C4C               	goto	u9580
 28288     144B                     u9581:
 28289     144B  2C5B               	goto	l12509
 28290     144C                     u9580:
 28291     144C                     l12507:
 28292                           
 28293                           ;mcc_generated_files/i2c1_master.c: 301:     {;mcc_generated_files/i2c1_master.c: 302:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 28294     144C  3574               	lslf	I2C1_SetCallback@idx,w
 28295     144D  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 28296     144E  0086               	movwf	6
 28297     144F  0187               	clrf	7
 28298     1450  0871               	movf	I2C1_SetCallback@cb,w
 28299     1451  3FC0               	movwi [0]fsr1
 28300     1452  0872               	movf	I2C1_SetCallback@cb+1,w
 28301     1453  3FC1               	movwi [1]fsr1
 28302                           
 28303                           ;mcc_generated_files/i2c1_master.c: 303:         I2C1_Status.callbackPayload[idx] = ptr;
 28304     1454  0874               	movf	I2C1_SetCallback@idx,w
 28305     1455  3EAC               	addlw	(low ((_I2C1_Status| 0+12)))& (0+255)
 28306     1456  0086               	movwf	6
 28307     1457  0187               	clrf	7
 28308     1458  0873               	movf	I2C1_SetCallback@ptr,w
 28309     1459  0081               	movwf	1
 28310                           
 28311                           ;mcc_generated_files/i2c1_master.c: 304:     }
 28312     145A  2C68               	goto	l1789
 28313     145B                     l12509:
 28314                           
 28315                           ;mcc_generated_files/i2c1_master.c: 306:     {;mcc_generated_files/i2c1_master.c: 307:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 28316     145B  3574               	lslf	I2C1_SetCallback@idx,w
 28317     145C  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 28318     145D  0086               	movwf	6
 28319     145E  0187               	clrf	7
 28320     145F  306A               	movlw	low _I2C1_CallbackReturnStop
 28321     1460  3FC0               	movwi [0]fsr1
 28322     1461  301E               	movlw	high _I2C1_CallbackReturnStop
 28323     1462  3FC1               	movwi [1]fsr1
 28324                           
 28325                           ;mcc_generated_files/i2c1_master.c: 308:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 28326     1463  0874               	movf	I2C1_SetCallback@idx,w
 28327     1464  3EAC               	addlw	(low ((_I2C1_Status| 0+12)))& (0+255)
 28328     1465  0086               	movwf	6
 28329     1466  0187               	clrf	7
 28330     1467  0181               	clrf	1
 28331     1468                     l1789:
 28332     1468  0008               	return
 28333     1469                     __end_of_I2C1_SetCallback:
 28334                           
 28335                           	psect	text155
 28336     105E                     __ptext155:	
 28337 ;; *************** function _I2C1_SetBuffer *****************
 28338 ;; Defined at:
 28339 ;;		line 263 in file "mcc_generated_files/i2c1_master.c"
 28340 ;; Parameters:    Size  Location     Type
 28341 ;;  buffer          1    wreg     PTR void 
 28342 ;;		 -> i2c_write1ByteRegister@data$data(2), i2c_read1ByteRegister@d2$data(2), i2c_read2ByteRegister@result$data(2), i2c
      +_write2ByteRegister@data$data(2), 
 28343 ;;		 -> I2C1_Read1ByteRegister@returnValue$data(2), I2C1_Read2ByteRegister@returnValue$data(2), I2C1_Write1ByteRegister@
      +data$data(2), I2C1_Write2ByteRegister@data$data(2), 
 28344 ;;		 -> readRegisters@dataBuffer(1), I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(4), bufferBlock$data(2), 
 28345 ;;		 -> I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@reg(1), I2C1_Write1Byte
      +Register@data(1), 
 28346 ;;		 -> I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRegister@returnValue(2), I2C1_Read1ByteRegister@reg(1), I2C1_Read1B
      +yteRegister@returnValue(1), 
 28347 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(4), d$data(2), i2c_write2ByteRegister@reg(1), 
 28348 ;;		 -> i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegi
      +ster@reg(1), 
 28349 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 28350 ;;  bufferSize      2    1[COMMON] unsigned int 
 28351 ;; Auto vars:     Size  Location     Type
 28352 ;;  buffer          1    3[COMMON] PTR void 
 28353 ;;		 -> i2c_write1ByteRegister@data$data(2), i2c_read1ByteRegister@d2$data(2), i2c_read2ByteRegister@result$data(2), i2c
      +_write2ByteRegister@data$data(2), 
 28354 ;;		 -> I2C1_Read1ByteRegister@returnValue$data(2), I2C1_Read2ByteRegister@returnValue$data(2), I2C1_Write1ByteRegister@
      +data$data(2), I2C1_Write2ByteRegister@data$data(2), 
 28355 ;;		 -> readRegisters@dataBuffer(1), I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(4), bufferBlock$data(2), 
 28356 ;;		 -> I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@reg(1), I2C1_Write1Byte
      +Register@data(1), 
 28357 ;;		 -> I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRegister@returnValue(2), I2C1_Read1ByteRegister@reg(1), I2C1_Read1B
      +yteRegister@returnValue(1), 
 28358 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(4), d$data(2), i2c_write2ByteRegister@reg(1), 
 28359 ;;		 -> i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegi
      +ster@reg(1), 
 28360 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 28361 ;; Return value:  Size  Location     Type
 28362 ;;                  1    wreg      void 
 28363 ;; Registers used:
 28364 ;;		wreg
 28365 ;; Tracked objects:
 28366 ;;		On entry : 0/0
 28367 ;;		On exit  : 0/0
 28368 ;;		Unchanged: 0/0
 28369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28370 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28371 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28373 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28374 ;;Total ram usage:        3 bytes
 28375 ;; Hardware stack levels used: 1
 28376 ;; Hardware stack levels required when called: 4
 28377 ;; This function calls:
 28378 ;;		Nothing
 28379 ;; This function is called by:
 28380 ;;		_wr1RegCompleteHandler
 28381 ;;		_i2c_write1ByteRegister
 28382 ;;		_rd1RegCompleteHandler
 28383 ;;		_i2c_read1ByteRegister
 28384 ;;		_rd2RegCompleteHandler
 28385 ;;		_i2c_read2ByteRegister
 28386 ;;		_wr2RegCompleteHandler
 28387 ;;		_rdBlkRegCompleteHandler
 28388 ;;		_i2c_readNBytes
 28389 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1239
 28390 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1250
 28391 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1256
 28392 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1262
 28393 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1273
 28394 ;;		_i2c_writeNBytes
 28395 ;;		_i2c_write2ByteRegister
 28396 ;;		_i2c_readDataBlock
 28397 ;;		_I2C1_Read1ByteRegister
 28398 ;;		_I2C1_Read2ByteRegister
 28399 ;;		_I2C1_Write1ByteRegister
 28400 ;;		_I2C1_Write2ByteRegister
 28401 ;;		_I2C1_WriteNBytes
 28402 ;;		_I2C1_ReadNBytes
 28403 ;;		_I2C1_ReadDataBlock
 28404 ;; This function uses a non-reentrant model
 28405 ;;
 28406                           
 28407     105E                     _I2C1_SetBuffer:	
 28408                           ;psect for function _I2C1_SetBuffer
 28409                           
 28410                           
 28411                           ;incstack = 0
 28412                           ; Regs used in _I2C1_SetBuffer: [wreg]
 28413                           ;I2C1_SetBuffer@buffer stored from wreg
 28414     105E  00F3               	movwf	I2C1_SetBuffer@buffer
 28415     105F                     l12511:
 28416                           
 28417                           ;mcc_generated_files/i2c1_master.c: 263: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 264: {;mcc_generated_files/i2c1_master.c: 265: 
      +                              if(I2C1_Status.bufferFree)
 28418     105F  0141               	movlb	1	; select bank1
 28419     1060  1DBC               	btfss	(_I2C1_Status^(0+128)+28),3
 28420     1061  2863               	goto	u9591
 28421     1062  2864               	goto	u9590
 28422     1063                     u9591:
 28423     1063  286B               	goto	l1769
 28424     1064                     u9590:
 28425     1064                     l12513:
 28426                           
 28427                           ;mcc_generated_files/i2c1_master.c: 266:     {;mcc_generated_files/i2c1_master.c: 267:  
      +                                 I2C1_Status.data_ptr = buffer;
 28428     1064  0873               	movf	I2C1_SetBuffer@buffer,w
 28429     1065  00B7               	movwf	(low ((_I2C1_Status| 0+23)))^(0+128)
 28430                           
 28431                           ;mcc_generated_files/i2c1_master.c: 268:         I2C1_Status.data_length = bufferSize;
 28432     1066  0872               	movf	I2C1_SetBuffer@bufferSize+1,w
 28433     1067  00B9               	movwf	((_I2C1_Status+1)^(0+128)+24)
 28434     1068  0871               	movf	I2C1_SetBuffer@bufferSize,w
 28435     1069  00B8               	movwf	(_I2C1_Status^(0+128)+24)
 28436     106A                     l12515:
 28437                           
 28438                           ;mcc_generated_files/i2c1_master.c: 269:         I2C1_Status.bufferFree = 0;
 28439     106A  11BC               	bcf	(_I2C1_Status^(0+128)+28),3
 28440     106B                     l1769:
 28441     106B  0008               	return
 28442     106C                     __end_of_I2C1_SetBuffer:
 28443                           
 28444                           	psect	text156
 28445     1E7D                     __ptext156:	
 28446 ;; *************** function _I2C1_MasterStop *****************
 28447 ;; Defined at:
 28448 ;;		line 593 in file "mcc_generated_files/i2c1_master.c"
 28449 ;; Parameters:    Size  Location     Type
 28450 ;;		None
 28451 ;; Auto vars:     Size  Location     Type
 28452 ;;		None
 28453 ;; Return value:  Size  Location     Type
 28454 ;;                  1    wreg      void 
 28455 ;; Registers used:
 28456 ;;		None
 28457 ;; Tracked objects:
 28458 ;;		On entry : 0/0
 28459 ;;		On exit  : 0/0
 28460 ;;		Unchanged: 0/0
 28461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28466 ;;Total ram usage:        0 bytes
 28467 ;; Hardware stack levels used: 1
 28468 ;; Hardware stack levels required when called: 4
 28469 ;; This function calls:
 28470 ;;		Nothing
 28471 ;; This function is called by:
 28472 ;;		_I2C1_DO_SEND_STOP
 28473 ;; This function uses a non-reentrant model
 28474 ;;
 28475                           
 28476     1E7D                     _I2C1_MasterStop:	
 28477                           ;psect for function _I2C1_MasterStop
 28478                           
 28479     1E7D                     l12521:	
 28480                           ;incstack = 0
 28481                           ; Regs used in _I2C1_MasterStop: []
 28482                           
 28483                           
 28484                           ;mcc_generated_files/i2c1_master.c: 595:     SSP1CON2bits.PEN = 1;
 28485     1E7D  0143               	movlb	3	; select bank3
 28486     1E7E  1511               	bsf	17,2	;volatile
 28487     1E7F                     l1935:
 28488     1E7F  0008               	return
 28489     1E80                     __end_of_I2C1_MasterStop:
 28490                           
 28491                           	psect	text157
 28492     1E7A                     __ptext157:	
 28493 ;; *************** function _I2C1_MasterEnableRestart *****************
 28494 ;; Defined at:
 28495 ;;		line 573 in file "mcc_generated_files/i2c1_master.c"
 28496 ;; Parameters:    Size  Location     Type
 28497 ;;		None
 28498 ;; Auto vars:     Size  Location     Type
 28499 ;;		None
 28500 ;; Return value:  Size  Location     Type
 28501 ;;                  1    wreg      void 
 28502 ;; Registers used:
 28503 ;;		None
 28504 ;; Tracked objects:
 28505 ;;		On entry : 0/0
 28506 ;;		On exit  : 0/0
 28507 ;;		Unchanged: 0/0
 28508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28513 ;;Total ram usage:        0 bytes
 28514 ;; Hardware stack levels used: 1
 28515 ;; Hardware stack levels required when called: 4
 28516 ;; This function calls:
 28517 ;;		Nothing
 28518 ;; This function is called by:
 28519 ;;		_I2C1_DO_SEND_RESTART_READ
 28520 ;;		_I2C1_DO_SEND_RESTART_WRITE
 28521 ;;		_I2C1_DO_SEND_RESTART
 28522 ;;		_I2C1_DO_RX_EMPTY
 28523 ;; This function uses a non-reentrant model
 28524 ;;
 28525                           
 28526     1E7A                     _I2C1_MasterEnableRestart:	
 28527                           ;psect for function _I2C1_MasterEnableRestart
 28528                           
 28529     1E7A                     l12519:	
 28530                           ;incstack = 0
 28531                           ; Regs used in _I2C1_MasterEnableRestart: []
 28532                           
 28533                           
 28534                           ;mcc_generated_files/i2c1_master.c: 575:     SSP1CON2bits.RSEN = 1;
 28535     1E7A  0143               	movlb	3	; select bank3
 28536     1E7B  1491               	bsf	17,1	;volatile
 28537     1E7C                     l1923:
 28538     1E7C  0008               	return
 28539     1E7D                     __end_of_I2C1_MasterEnableRestart:
 28540                           
 28541                           	psect	text158
 28542     1E77                     __ptext158:	
 28543 ;; *************** function _I2C1_MasterStart *****************
 28544 ;; Defined at:
 28545 ;;		line 588 in file "mcc_generated_files/i2c1_master.c"
 28546 ;; Parameters:    Size  Location     Type
 28547 ;;		None
 28548 ;; Auto vars:     Size  Location     Type
 28549 ;;		None
 28550 ;; Return value:  Size  Location     Type
 28551 ;;                  1    wreg      void 
 28552 ;; Registers used:
 28553 ;;		None
 28554 ;; Tracked objects:
 28555 ;;		On entry : 0/0
 28556 ;;		On exit  : 0/0
 28557 ;;		Unchanged: 0/0
 28558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28563 ;;Total ram usage:        0 bytes
 28564 ;; Hardware stack levels used: 1
 28565 ;; Hardware stack levels required when called: 4
 28566 ;; This function calls:
 28567 ;;		Nothing
 28568 ;; This function is called by:
 28569 ;;		_I2C1_MasterOperation
 28570 ;; This function uses a non-reentrant model
 28571 ;;
 28572                           
 28573     1E77                     _I2C1_MasterStart:	
 28574                           ;psect for function _I2C1_MasterStart
 28575                           
 28576     1E77                     l12835:	
 28577                           ;incstack = 0
 28578                           ; Regs used in _I2C1_MasterStart: []
 28579                           
 28580                           
 28581                           ;mcc_generated_files/i2c1_master.c: 590:     SSP1CON2bits.SEN = 1;
 28582     1E77  0143               	movlb	3	; select bank3
 28583     1E78  1411               	bsf	17,0	;volatile
 28584     1E79                     l1932:
 28585     1E79  0008               	return
 28586     1E7A                     __end_of_I2C1_MasterStart:
 28587                           
 28588                           	psect	text159
 28589     1231                     __ptext159:	
 28590 ;; *************** function _I2C1_Close *****************
 28591 ;; Defined at:
 28592 ;;		line 209 in file "mcc_generated_files/i2c1_master.c"
 28593 ;; Parameters:    Size  Location     Type
 28594 ;;		None
 28595 ;; Auto vars:     Size  Location     Type
 28596 ;;  returnValue     1    1[COMMON] enum E358
 28597 ;; Return value:  Size  Location     Type
 28598 ;;                  1    wreg      enum E358
 28599 ;; Registers used:
 28600 ;;		wreg, status,2, status,0, pclath, cstack
 28601 ;; Tracked objects:
 28602 ;;		On entry : 0/0
 28603 ;;		On exit  : 0/0
 28604 ;;		Unchanged: 0/0
 28605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28607 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28609 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28610 ;;Total ram usage:        1 bytes
 28611 ;; Hardware stack levels used: 1
 28612 ;; Hardware stack levels required when called: 5
 28613 ;; This function calls:
 28614 ;;		_I2C1_MasterClearIrq
 28615 ;;		_I2C1_MasterClose
 28616 ;;		_I2C1_MasterDisableIrq
 28617 ;; This function is called by:
 28618 ;;		_i2c_write1ByteRegister
 28619 ;;		_i2c_read1ByteRegister
 28620 ;;		_i2c_read2ByteRegister
 28621 ;;		_i2c_readNBytes
 28622 ;;		_i2c_writeNBytes
 28623 ;;		_i2c_write2ByteRegister
 28624 ;;		_i2c_readDataBlock
 28625 ;;		_I2C1_Read1ByteRegister
 28626 ;;		_I2C1_Read2ByteRegister
 28627 ;;		_I2C1_Write1ByteRegister
 28628 ;;		_I2C1_Write2ByteRegister
 28629 ;;		_I2C1_WriteNBytes
 28630 ;;		_I2C1_ReadNBytes
 28631 ;;		_I2C1_ReadDataBlock
 28632 ;; This function uses a non-reentrant model
 28633 ;;
 28634                           
 28635     1231                     _I2C1_Close:	
 28636                           ;psect for function _I2C1_Close
 28637                           
 28638     1231                     l12913:	
 28639                           ;incstack = 0
 28640                           ; Regs used in _I2C1_Close: [wreg+status,2+status,0+pclath+cstack]
 28641                           
 28642                           
 28643                           ;mcc_generated_files/i2c1_master.c: 211:     i2c1_error_t returnValue = I2C1_BUSY;
 28644     1231  01F1               	clrf	I2C1_Close@returnValue
 28645     1232  0AF1               	incf	I2C1_Close@returnValue,f
 28646                           
 28647                           ;mcc_generated_files/i2c1_master.c: 212:     if(!I2C1_Status.busy)
 28648     1233  0141               	movlb	1	; select bank1
 28649     1234  18BC               	btfsc	(_I2C1_Status^(0+128)+28),1
 28650     1235  2A37               	goto	u9711
 28651     1236  2A38               	goto	u9710
 28652     1237                     u9711:
 28653     1237  2A47               	goto	l12927
 28654     1238                     u9710:
 28655     1238                     l12915:
 28656                           
 28657                           ;mcc_generated_files/i2c1_master.c: 213:     {;mcc_generated_files/i2c1_master.c: 214:  
      +                                 I2C1_Status.inUse = 0;
 28658     1238  113C               	bcf	(_I2C1_Status^(0+128)+28),2
 28659     1239                     l12917:
 28660                           
 28661                           ;mcc_generated_files/i2c1_master.c: 215:         I2C1_Status.address = 0xff;
 28662     1239  30FF               	movlw	255
 28663     123A  00B6               	movwf	(_I2C1_Status^(0+128)+22)
 28664     123B                     l12919:
 28665                           
 28666                           ;mcc_generated_files/i2c1_master.c: 216:         I2C1_MasterClearIrq();
 28667     123B  319E  266E  3192   	fcall	_I2C1_MasterClearIrq
 28668     123E                     l12921:
 28669                           
 28670                           ;mcc_generated_files/i2c1_master.c: 217:         I2C1_MasterDisableIrq();
 28671     123E  319E  2674  3192   	fcall	_I2C1_MasterDisableIrq
 28672     1241                     l12923:
 28673                           
 28674                           ;mcc_generated_files/i2c1_master.c: 218:         I2C1_MasterClose();
 28675     1241  319E  2671  3192   	fcall	_I2C1_MasterClose
 28676     1244                     l12925:
 28677                           
 28678                           ;mcc_generated_files/i2c1_master.c: 219:         returnValue = I2C1_Status.error;
 28679     1244  0141               	movlb	1	; select bank1
 28680     1245  083B               	movf	(_I2C1_Status^(0+128)+27),w
 28681     1246  00F1               	movwf	I2C1_Close@returnValue
 28682     1247                     l12927:
 28683                           
 28684                           ;mcc_generated_files/i2c1_master.c: 221:     return returnValue;
 28685     1247  0871               	movf	I2C1_Close@returnValue,w
 28686     1248                     l1750:
 28687     1248  0008               	return
 28688     1249                     __end_of_I2C1_Close:
 28689                           
 28690                           	psect	text160
 28691     1E74                     __ptext160:	
 28692 ;; *************** function _I2C1_MasterDisableIrq *****************
 28693 ;; Defined at:
 28694 ;;		line 635 in file "mcc_generated_files/i2c1_master.c"
 28695 ;; Parameters:    Size  Location     Type
 28696 ;;		None
 28697 ;; Auto vars:     Size  Location     Type
 28698 ;;		None
 28699 ;; Return value:  Size  Location     Type
 28700 ;;                  1    wreg      void 
 28701 ;; Registers used:
 28702 ;;		None
 28703 ;; Tracked objects:
 28704 ;;		On entry : 0/0
 28705 ;;		On exit  : 0/0
 28706 ;;		Unchanged: 0/0
 28707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28712 ;;Total ram usage:        0 bytes
 28713 ;; Hardware stack levels used: 1
 28714 ;; Hardware stack levels required when called: 4
 28715 ;; This function calls:
 28716 ;;		Nothing
 28717 ;; This function is called by:
 28718 ;;		_I2C1_Close
 28719 ;;		_I2C1_SetTimeOut
 28720 ;; This function uses a non-reentrant model
 28721 ;;
 28722                           
 28723     1E74                     _I2C1_MasterDisableIrq:	
 28724                           ;psect for function _I2C1_MasterDisableIrq
 28725                           
 28726     1E74                     l12857:	
 28727                           ;incstack = 0
 28728                           ; Regs used in _I2C1_MasterDisableIrq: []
 28729                           
 28730                           
 28731                           ;mcc_generated_files/i2c1_master.c: 637:     PIE3bits.SSP1IE = 0;
 28732     1E74  014E               	movlb	14	; select bank14
 28733     1E75  1019               	bcf	25,0	;volatile
 28734     1E76                     l1959:
 28735     1E76  0008               	return
 28736     1E77                     __end_of_I2C1_MasterDisableIrq:
 28737                           
 28738                           	psect	text161
 28739     1E71                     __ptext161:	
 28740 ;; *************** function _I2C1_MasterClose *****************
 28741 ;; Defined at:
 28742 ;;		line 557 in file "mcc_generated_files/i2c1_master.c"
 28743 ;; Parameters:    Size  Location     Type
 28744 ;;		None
 28745 ;; Auto vars:     Size  Location     Type
 28746 ;;		None
 28747 ;; Return value:  Size  Location     Type
 28748 ;;                  1    wreg      void 
 28749 ;; Registers used:
 28750 ;;		None
 28751 ;; Tracked objects:
 28752 ;;		On entry : 0/0
 28753 ;;		On exit  : 0/0
 28754 ;;		Unchanged: 0/0
 28755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28760 ;;Total ram usage:        0 bytes
 28761 ;; Hardware stack levels used: 1
 28762 ;; Hardware stack levels required when called: 4
 28763 ;; This function calls:
 28764 ;;		Nothing
 28765 ;; This function is called by:
 28766 ;;		_I2C1_Close
 28767 ;; This function uses a non-reentrant model
 28768 ;;
 28769                           
 28770     1E71                     _I2C1_MasterClose:	
 28771                           ;psect for function _I2C1_MasterClose
 28772                           
 28773     1E71                     l12859:	
 28774                           ;incstack = 0
 28775                           ; Regs used in _I2C1_MasterClose: []
 28776                           
 28777                           
 28778                           ;mcc_generated_files/i2c1_master.c: 560:     SSP1CON1bits.SSPEN = 0;
 28779     1E71  0143               	movlb	3	; select bank3
 28780     1E72  1290               	bcf	16,5	;volatile
 28781     1E73                     l1914:
 28782     1E73  0008               	return
 28783     1E74                     __end_of_I2C1_MasterClose:
 28784                           
 28785                           	psect	text162
 28786     1E6E                     __ptext162:	
 28787 ;; *************** function _I2C1_MasterClearIrq *****************
 28788 ;; Defined at:
 28789 ;;		line 640 in file "mcc_generated_files/i2c1_master.c"
 28790 ;; Parameters:    Size  Location     Type
 28791 ;;		None
 28792 ;; Auto vars:     Size  Location     Type
 28793 ;;		None
 28794 ;; Return value:  Size  Location     Type
 28795 ;;                  1    wreg      void 
 28796 ;; Registers used:
 28797 ;;		None
 28798 ;; Tracked objects:
 28799 ;;		On entry : 0/0
 28800 ;;		On exit  : 0/0
 28801 ;;		Unchanged: 0/0
 28802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28807 ;;Total ram usage:        0 bytes
 28808 ;; Hardware stack levels used: 1
 28809 ;; Hardware stack levels required when called: 4
 28810 ;; This function calls:
 28811 ;;		Nothing
 28812 ;; This function is called by:
 28813 ;;		_I2C1_Open
 28814 ;;		_I2C1_Close
 28815 ;;		_I2C1_MasterFsm
 28816 ;; This function uses a non-reentrant model
 28817 ;;
 28818                           
 28819     1E6E                     _I2C1_MasterClearIrq:	
 28820                           ;psect for function _I2C1_MasterClearIrq
 28821                           
 28822     1E6E                     l12661:	
 28823                           ;incstack = 0
 28824                           ; Regs used in _I2C1_MasterClearIrq: []
 28825                           
 28826                           
 28827                           ;mcc_generated_files/i2c1_master.c: 642:     PIR3bits.SSP1IF = 0;
 28828     1E6E  014E               	movlb	14	; select bank14
 28829     1E6F  100F               	bcf	15,0	;volatile
 28830     1E70                     l1962:
 28831     1E70  0008               	return
 28832     1E71                     __end_of_I2C1_MasterClearIrq:
 28833                           
 28834                           	psect	intentry
 28835     0004                     __pintentry:	
 28836 ;; *************** function _INTERRUPT_InterruptManager *****************
 28837 ;; Defined at:
 28838 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 28839 ;; Parameters:    Size  Location     Type
 28840 ;;		None
 28841 ;; Auto vars:     Size  Location     Type
 28842 ;;		None
 28843 ;; Return value:  Size  Location     Type
 28844 ;;                  1    wreg      void 
 28845 ;; Registers used:
 28846 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 28847 ;; Tracked objects:
 28848 ;;		On entry : 0/0
 28849 ;;		On exit  : 0/0
 28850 ;;		Unchanged: 0/0
 28851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28856 ;;Total ram usage:        0 bytes
 28857 ;; Hardware stack levels used: 1
 28858 ;; Hardware stack levels required when called: 3
 28859 ;; This function calls:
 28860 ;;		NULL
 28861 ;;		_EUSART1_Receive_ISR
 28862 ;;		_EUSART1_Transmit_ISR
 28863 ;;		_EUSART2_Receive_ISR
 28864 ;;		_EUSART2_Transmit_ISR
 28865 ;;		_PIN_MANAGER_IOC
 28866 ;; This function is called by:
 28867 ;;		Interrupt level 1
 28868 ;; This function uses a non-reentrant model
 28869 ;;
 28870                           
 28871     0004                     _INTERRUPT_InterruptManager:
 28872                           
 28873                           ;incstack = 0
 28874 ;; hardware stack exceeded
 28875     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 28876                           
 28877                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 28878     0005  3180               	pagesel	$
 28879     0006                     i1l14933:
 28880                           
 28881                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.IOCIE == 1 && PIR0bits.IOC
      +                          IF == 1)
 28882     0006  014E               	movlb	14	; select bank14
 28883     0007  1E16               	btfss	22,4	;volatile
 28884     0008  280A               	goto	u1214_21
 28885     0009  280B               	goto	u1214_20
 28886     000A                     u1214_21:
 28887     000A  2813               	goto	i1l1295
 28888     000B                     u1214_20:
 28889     000B                     i1l14935:
 28890     000B  1E0C               	btfss	12,4	;volatile
 28891     000C  280E               	goto	u1215_21
 28892     000D  280F               	goto	u1215_20
 28893     000E                     u1215_21:
 28894     000E  2813               	goto	i1l1295
 28895     000F                     u1215_20:
 28896     000F                     i1l14937:
 28897                           
 28898                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
 28899     000F  319F  2775  3180   	fcall	_PIN_MANAGER_IOC
 28900                           
 28901                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 28902     0012  2853               	goto	i1l1307
 28903     0013                     i1l1295:	
 28904                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 28905                           
 28906     0013  1F0B               	btfss	11,6	;volatile
 28907     0014  2816               	goto	u1216_21
 28908     0015  2817               	goto	u1216_20
 28909     0016                     u1216_21:
 28910     0016  2853               	goto	i1l1307
 28911     0017                     u1216_20:
 28912     0017                     i1l14939:
 28913                           
 28914                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 28915     0017  1F19               	btfss	25,6	;volatile
 28916     0018  281A               	goto	u1217_21
 28917     0019  281B               	goto	u1217_20
 28918     001A                     u1217_21:
 28919     001A  2826               	goto	i1l1298
 28920     001B                     u1217_20:
 28921     001B                     i1l14941:
 28922     001B  1F0F               	btfss	15,6	;volatile
 28923     001C  281E               	goto	u1218_21
 28924     001D  281F               	goto	u1218_20
 28925     001E                     u1218_21:
 28926     001E  2826               	goto	i1l1298
 28927     001F                     u1218_20:
 28928     001F                     i1l14943:
 28929                           
 28930                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART2_TxDefaultInterruptHandler();
 28931     001F  0141               	movlb	1	; select bank1
 28932     0020  086E               	movf	(_EUSART2_TxDefaultInterruptHandler+1)^(0+128),w
 28933     0021  008A               	movwf	10
 28934     0022  086D               	movf	_EUSART2_TxDefaultInterruptHandler^(0+128),w
 28935     0023  000A               	callw
 28936     0024  3180               	pagesel	$
 28937                           
 28938                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 28939     0025  2853               	goto	i1l1307
 28940     0026                     i1l1298:	
 28941                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.RC2IE == 1 && PIR
      +                          3bits.RC2IF == 1)
 28942                           
 28943     0026  1F99               	btfss	25,7	;volatile
 28944     0027  2829               	goto	u1219_21
 28945     0028  282A               	goto	u1219_20
 28946     0029                     u1219_21:
 28947     0029  2835               	goto	i1l1300
 28948     002A                     u1219_20:
 28949     002A                     i1l14945:
 28950     002A  1F8F               	btfss	15,7	;volatile
 28951     002B  282D               	goto	u1220_21
 28952     002C  282E               	goto	u1220_20
 28953     002D                     u1220_21:
 28954     002D  2835               	goto	i1l1300
 28955     002E                     u1220_20:
 28956     002E                     i1l14947:
 28957                           
 28958                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             EUSART2_RxDefaultInterruptHandler();
 28959     002E  0141               	movlb	1	; select bank1
 28960     002F  086C               	movf	(_EUSART2_RxDefaultInterruptHandler+1)^(0+128),w
 28961     0030  008A               	movwf	10
 28962     0031  086B               	movf	_EUSART2_RxDefaultInterruptHandler^(0+128),w
 28963     0032  000A               	callw
 28964     0033  3180               	pagesel	$
 28965                           
 28966                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 28967     0034  2853               	goto	i1l1307
 28968     0035                     i1l1300:	
 28969                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.TX1IE == 1 && PIR
      +                          3bits.TX1IF == 1)
 28970                           
 28971     0035  1E19               	btfss	25,4	;volatile
 28972     0036  2838               	goto	u1221_21
 28973     0037  2839               	goto	u1221_20
 28974     0038                     u1221_21:
 28975     0038  2844               	goto	i1l1302
 28976     0039                     u1221_20:
 28977     0039                     i1l14949:
 28978     0039  1E0F               	btfss	15,4	;volatile
 28979     003A  283C               	goto	u1222_21
 28980     003B  283D               	goto	u1222_20
 28981     003C                     u1222_21:
 28982     003C  2844               	goto	i1l1302
 28983     003D                     u1222_20:
 28984     003D                     i1l14951:
 28985                           
 28986                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             EUSART1_TxDefaultInterruptHandler();
 28987     003D  0142               	movlb	2	; select bank2
 28988     003E  0866               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+256),w
 28989     003F  008A               	movwf	10
 28990     0040  0865               	movf	_EUSART1_TxDefaultInterruptHandler^(0+256),w
 28991     0041  000A               	callw
 28992     0042  3180               	pagesel	$
 28993                           
 28994                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 28995     0043  2853               	goto	i1l1307
 28996     0044                     i1l1302:	
 28997                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 28998                           
 28999     0044  1E99               	btfss	25,5	;volatile
 29000     0045  2847               	goto	u1223_21
 29001     0046  2848               	goto	u1223_20
 29002     0047                     u1223_21:
 29003     0047  2853               	goto	i1l1301
 29004     0048                     u1223_20:
 29005     0048                     i1l14953:
 29006     0048  1E8F               	btfss	15,5	;volatile
 29007     0049  284B               	goto	u1224_21
 29008     004A  284C               	goto	u1224_20
 29009     004B                     u1224_21:
 29010     004B  2853               	goto	i1l1301
 29011     004C                     u1224_20:
 29012     004C                     i1l14955:
 29013                           
 29014                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART1_RxDefaultInterruptHandler();
 29015     004C  0142               	movlb	2	; select bank2
 29016     004D  0864               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256),w
 29017     004E  008A               	movwf	10
 29018     004F  0863               	movf	_EUSART1_RxDefaultInterruptHandler^(0+256),w
 29019     0050  000A               	callw
 29020     0051  3180               	pagesel	$
 29021                           
 29022                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 29023     0052  2853               	goto	i1l1307
 29024     0053                     i1l1301:
 29025     0053                     i1l1307:
 29026     0053  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 29027     0054  0009               	retfie
 29028     0055                     __end_of_INTERRUPT_InterruptManager:
 29029                           
 29030                           	psect	text164
 29031     1F75                     __ptext164:	
 29032 ;; *************** function _PIN_MANAGER_IOC *****************
 29033 ;; Defined at:
 29034 ;;		line 142 in file "mcc_generated_files/pin_manager.c"
 29035 ;; Parameters:    Size  Location     Type
 29036 ;;		None
 29037 ;; Auto vars:     Size  Location     Type
 29038 ;;		None
 29039 ;; Return value:  Size  Location     Type
 29040 ;;                  1    wreg      void 
 29041 ;; Registers used:
 29042 ;;		wreg, status,2, status,0, pclath, cstack
 29043 ;; Tracked objects:
 29044 ;;		On entry : 0/0
 29045 ;;		On exit  : 0/0
 29046 ;;		Unchanged: 0/0
 29047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29052 ;;Total ram usage:        0 bytes
 29053 ;; Hardware stack levels used: 1
 29054 ;; Hardware stack levels required when called: 2
 29055 ;; This function calls:
 29056 ;;		_IOCAF6_ISR
 29057 ;; This function is called by:
 29058 ;;		_INTERRUPT_InterruptManager
 29059 ;; This function uses a non-reentrant model
 29060 ;;
 29061                           
 29062     1F75                     _PIN_MANAGER_IOC:	
 29063                           ;psect for function _PIN_MANAGER_IOC
 29064                           
 29065     1F75                     i1l10249:	
 29066                           ;incstack = 0
 29067 ;; hardware stack exceeded
 29068                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
 29069                           
 29070                           
 29071                           ;mcc_generated_files/pin_manager.c: 145:     if(IOCAFbits.IOCAF6 == 1)
 29072     1F75  017E               	movlb	62	; select bank62
 29073     1F76  1F3F               	btfss	63,6	;volatile
 29074     1F77  2F79               	goto	u706_21
 29075     1F78  2F7A               	goto	u706_20
 29076     1F79                     u706_21:
 29077     1F79  2F7D               	goto	i1l1447
 29078     1F7A                     u706_20:
 29079     1F7A                     i1l10251:
 29080                           
 29081                           ;mcc_generated_files/pin_manager.c: 146:     {;mcc_generated_files/pin_manager.c: 147:  
      +                                 IOCAF6_ISR();
 29082     1F7A  3190  2088  319F   	fcall	_IOCAF6_ISR
 29083     1F7D                     i1l1447:
 29084     1F7D  0008               	return
 29085     1F7E                     __end_of_PIN_MANAGER_IOC:
 29086                           
 29087                           	psect	text165
 29088     1088                     __ptext165:	
 29089 ;; *************** function _IOCAF6_ISR *****************
 29090 ;; Defined at:
 29091 ;;		line 154 in file "mcc_generated_files/pin_manager.c"
 29092 ;; Parameters:    Size  Location     Type
 29093 ;;		None
 29094 ;; Auto vars:     Size  Location     Type
 29095 ;;		None
 29096 ;; Return value:  Size  Location     Type
 29097 ;;                  1    wreg      void 
 29098 ;; Registers used:
 29099 ;;		wreg, status,2, status,0, pclath, cstack
 29100 ;; Tracked objects:
 29101 ;;		On entry : 0/0
 29102 ;;		On exit  : 0/0
 29103 ;;		Unchanged: 0/0
 29104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29109 ;;Total ram usage:        0 bytes
 29110 ;; Hardware stack levels used: 1
 29111 ;; Hardware stack levels required when called: 1
 29112 ;; This function calls:
 29113 ;;		NULL
 29114 ;;		_IOCAF6_DefaultInterruptHandler
 29115 ;; This function is called by:
 29116 ;;		_PIN_MANAGER_IOC
 29117 ;; This function uses a non-reentrant model
 29118 ;;
 29119                           
 29120     1088                     _IOCAF6_ISR:	
 29121                           ;psect for function _IOCAF6_ISR
 29122                           
 29123     1088                     i1l9325:	
 29124                           ;incstack = 0
 29125 ;; hardware stack exceeded
 29126                           ; Regs used in _IOCAF6_ISR: [wreg+status,2+status,0+pclath+cstack]
 29127                           
 29128                           
 29129                           ;mcc_generated_files/pin_manager.c: 159:     if(IOCAF6_InterruptHandler)
 29130     1088  0141               	movlb	1	; select bank1
 29131     1089  0869               	movf	_IOCAF6_InterruptHandler^(0+128),w
 29132     108A  046A               	iorwf	(_IOCAF6_InterruptHandler+1)^(0+128),w
 29133     108B  1903               	btfsc	3,2
 29134     108C  288E               	goto	u586_21
 29135     108D  288F               	goto	u586_20
 29136     108E                     u586_21:
 29137     108E  2894               	goto	i1l9329
 29138     108F                     u586_20:
 29139     108F                     i1l9327:
 29140                           
 29141                           ;mcc_generated_files/pin_manager.c: 160:     {;mcc_generated_files/pin_manager.c: 161:  
      +                                 IOCAF6_InterruptHandler();
 29142     108F  086A               	movf	(_IOCAF6_InterruptHandler+1)^(0+128),w
 29143     1090  008A               	movwf	10
 29144     1091  0869               	movf	_IOCAF6_InterruptHandler^(0+128),w
 29145     1092  000A               	callw
 29146     1093  3190               	pagesel	$
 29147     1094                     i1l9329:
 29148                           
 29149                           ;mcc_generated_files/pin_manager.c: 163:     IOCAFbits.IOCAF6 = 0;
 29150     1094  017E               	movlb	62	; select bank62
 29151     1095  133F               	bcf	63,6	;volatile
 29152     1096                     i1l1451:
 29153     1096  0008               	return
 29154     1097                     __end_of_IOCAF6_ISR:
 29155                           
 29156                           	psect	text166
 29157     07FF                     __ptext166:	
 29158 ;; *************** function _IOCAF6_DefaultInterruptHandler *****************
 29159 ;; Defined at:
 29160 ;;		line 176 in file "mcc_generated_files/pin_manager.c"
 29161 ;; Parameters:    Size  Location     Type
 29162 ;;		None
 29163 ;; Auto vars:     Size  Location     Type
 29164 ;;		None
 29165 ;; Return value:  Size  Location     Type
 29166 ;;                  1    wreg      void 
 29167 ;; Registers used:
 29168 ;;		None
 29169 ;; Tracked objects:
 29170 ;;		On entry : 0/0
 29171 ;;		On exit  : 0/0
 29172 ;;		Unchanged: 0/0
 29173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29178 ;;Total ram usage:        0 bytes
 29179 ;; Hardware stack levels used: 1
 29180 ;; This function calls:
 29181 ;;		Nothing
 29182 ;; This function is called by:
 29183 ;;		_PIN_MANAGER_Initialize
 29184 ;;		_IOCAF6_ISR
 29185 ;; This function uses a non-reentrant model
 29186 ;;
 29187                           
 29188     07FF                     _IOCAF6_DefaultInterruptHandler:	
 29189                           ;psect for function _IOCAF6_DefaultInterruptHandler
 29190                           
 29191     07FF                     i1l1457:	
 29192                           ;incstack = 0
 29193 ;; hardware stack exceeded
 29194                           ; Regs used in _IOCAF6_DefaultInterruptHandler: []
 29195                           
 29196     07FF  0008               	return
 29197     0800                     __end_of_IOCAF6_DefaultInterruptHandler:
 29198                           
 29199                           	psect	text167
 29200     1400                     __ptext167:	
 29201 ;; *************** function _EUSART1_Transmit_ISR *****************
 29202 ;; Defined at:
 29203 ;;		line 206 in file "mcc_generated_files/eusart1.c"
 29204 ;; Parameters:    Size  Location     Type
 29205 ;;		None
 29206 ;; Auto vars:     Size  Location     Type
 29207 ;;		None
 29208 ;; Return value:  Size  Location     Type
 29209 ;;                  1    wreg      void 
 29210 ;; Registers used:
 29211 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 29212 ;; Tracked objects:
 29213 ;;		On entry : 0/0
 29214 ;;		On exit  : 0/0
 29215 ;;		Unchanged: 0/0
 29216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29219 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29220 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29221 ;;Total ram usage:        1 bytes
 29222 ;; Hardware stack levels used: 1
 29223 ;; This function calls:
 29224 ;;		Nothing
 29225 ;; This function is called by:
 29226 ;;		_EUSART1_Initialize
 29227 ;;		_INTERRUPT_InterruptManager
 29228 ;; This function uses a non-reentrant model
 29229 ;;
 29230                           
 29231     1400                     _EUSART1_Transmit_ISR:	
 29232                           ;psect for function _EUSART1_Transmit_ISR
 29233                           
 29234     1400                     i1l10217:	
 29235                           ;incstack = 0
 29236 ;; hardware stack exceeded
 29237                           ; Regs used in _EUSART1_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 29238                           
 29239                           
 29240                           ;mcc_generated_files/eusart1.c: 210:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 29241     1400  3008               	movlw	8
 29242     1401  0140               	movlb	0	; select bank0
 29243     1402  025B               	subwf	_eusart1TxBufferRemaining,w	;volatile
 29244     1403  1803               	skipnc
 29245     1404  2C06               	goto	u701_21
 29246     1405  2C07               	goto	u701_20
 29247     1406                     u701_21:
 29248     1406  2C1F               	goto	i1l1232
 29249     1407                     u701_20:
 29250     1407                     i1l10219:
 29251                           
 29252                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 29253     1407  085C               	movf	_eusart1TxTail,w
 29254     1408  3EC5               	addlw	(low (_eusart1TxBuffer| 0))& (0+255)
 29255     1409  0086               	movwf	6
 29256     140A  0187               	clrf	7
 29257     140B  0801               	movf	1,w
 29258     140C  0142               	movlb	2	; select bank2
 29259     140D  009A               	movwf	26	;volatile
 29260     140E                     i1l10221:
 29261     140E  3001               	movlw	1
 29262     140F  00F0               	movwf	??_EUSART1_Transmit_ISR
 29263     1410  0870               	movf	??_EUSART1_Transmit_ISR,w
 29264     1411  0140               	movlb	0	; select bank0
 29265     1412  07DC               	addwf	_eusart1TxTail,f	;volatile
 29266     1413                     i1l10223:
 29267                           
 29268                           ;mcc_generated_files/eusart1.c: 213:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 29269     1413  3008               	movlw	8
 29270     1414  025C               	subwf	_eusart1TxTail,w	;volatile
 29271     1415  1C03               	skipc
 29272     1416  2C18               	goto	u702_21
 29273     1417  2C19               	goto	u702_20
 29274     1418                     u702_21:
 29275     1418  2C1A               	goto	i1l10227
 29276     1419                     u702_20:
 29277     1419                     i1l10225:
 29278                           
 29279                           ;mcc_generated_files/eusart1.c: 214:         {;mcc_generated_files/eusart1.c: 215:      
      +                                 eusart1TxTail = 0;
 29280     1419  01DC               	clrf	_eusart1TxTail	;volatile
 29281     141A                     i1l10227:
 29282                           
 29283                           ;mcc_generated_files/eusart1.c: 217:         eusart1TxBufferRemaining++;
 29284     141A  3001               	movlw	1
 29285     141B  00F0               	movwf	??_EUSART1_Transmit_ISR
 29286     141C  0870               	movf	??_EUSART1_Transmit_ISR,w
 29287     141D  07DB               	addwf	_eusart1TxBufferRemaining,f	;volatile
 29288                           
 29289                           ;mcc_generated_files/eusart1.c: 218:     }
 29290     141E  2C21               	goto	i1l1235
 29291     141F                     i1l1232:	
 29292                           ;mcc_generated_files/eusart1.c: 219:     else
 29293                           
 29294                           
 29295                           ;mcc_generated_files/eusart1.c: 220:     {;mcc_generated_files/eusart1.c: 221:         P
      +                          IE3bits.TX1IE = 0;
 29296     141F  014E               	movlb	14	; select bank14
 29297     1420  1219               	bcf	25,4	;volatile
 29298     1421                     i1l1235:
 29299     1421  0008               	return
 29300     1422                     __end_of_EUSART1_Transmit_ISR:
 29301                           
 29302                           	psect	text168
 29303     13DE                     __ptext168:	
 29304 ;; *************** function _EUSART2_Transmit_ISR *****************
 29305 ;; Defined at:
 29306 ;;		line 197 in file "mcc_generated_files/eusart2.c"
 29307 ;; Parameters:    Size  Location     Type
 29308 ;;		None
 29309 ;; Auto vars:     Size  Location     Type
 29310 ;;		None
 29311 ;; Return value:  Size  Location     Type
 29312 ;;                  1    wreg      void 
 29313 ;; Registers used:
 29314 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 29315 ;; Tracked objects:
 29316 ;;		On entry : 0/0
 29317 ;;		On exit  : 0/0
 29318 ;;		Unchanged: 0/0
 29319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29322 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29323 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29324 ;;Total ram usage:        1 bytes
 29325 ;; Hardware stack levels used: 1
 29326 ;; This function calls:
 29327 ;;		Nothing
 29328 ;; This function is called by:
 29329 ;;		_EUSART2_Initialize
 29330 ;;		_INTERRUPT_InterruptManager
 29331 ;; This function uses a non-reentrant model
 29332 ;;
 29333                           
 29334     13DE                     _EUSART2_Transmit_ISR:	
 29335                           ;psect for function _EUSART2_Transmit_ISR
 29336                           
 29337     13DE                     i1l10185:	
 29338                           ;incstack = 0
 29339 ;; hardware stack exceeded
 29340                           ; Regs used in _EUSART2_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 29341                           
 29342                           
 29343                           ;mcc_generated_files/eusart2.c: 201:     if(sizeof(eusart2TxBuffer) > eusart2TxBufferRem
      +                          aining)
 29344     13DE  3008               	movlw	8
 29345     13DF  0140               	movlb	0	; select bank0
 29346     13E0  0261               	subwf	_eusart2TxBufferRemaining,w	;volatile
 29347     13E1  1803               	skipnc
 29348     13E2  2BE4               	goto	u696_21
 29349     13E3  2BE5               	goto	u696_20
 29350     13E4                     u696_21:
 29351     13E4  2BFD               	goto	i1l1082
 29352     13E5                     u696_20:
 29353     13E5                     i1l10187:
 29354                           
 29355                           ;mcc_generated_files/eusart2.c: 202:     {;mcc_generated_files/eusart2.c: 203:         T
      +                          X2REG = eusart2TxBuffer[eusart2TxTail++];
 29356     13E5  0862               	movf	_eusart2TxTail,w
 29357     13E6  3EDD               	addlw	(low (_eusart2TxBuffer| 0))& (0+255)
 29358     13E7  0086               	movwf	6
 29359     13E8  0187               	clrf	7
 29360     13E9  0801               	movf	1,w
 29361     13EA  0154               	movlb	20	; select bank20
 29362     13EB  009A               	movwf	26	;volatile
 29363     13EC                     i1l10189:
 29364     13EC  3001               	movlw	1
 29365     13ED  00F0               	movwf	??_EUSART2_Transmit_ISR
 29366     13EE  0870               	movf	??_EUSART2_Transmit_ISR,w
 29367     13EF  0140               	movlb	0	; select bank0
 29368     13F0  07E2               	addwf	_eusart2TxTail,f	;volatile
 29369     13F1                     i1l10191:
 29370                           
 29371                           ;mcc_generated_files/eusart2.c: 204:         if(sizeof(eusart2TxBuffer) <= eusart2TxTail
      +                          )
 29372     13F1  3008               	movlw	8
 29373     13F2  0262               	subwf	_eusart2TxTail,w	;volatile
 29374     13F3  1C03               	skipc
 29375     13F4  2BF6               	goto	u697_21
 29376     13F5  2BF7               	goto	u697_20
 29377     13F6                     u697_21:
 29378     13F6  2BF8               	goto	i1l10195
 29379     13F7                     u697_20:
 29380     13F7                     i1l10193:
 29381                           
 29382                           ;mcc_generated_files/eusart2.c: 205:         {;mcc_generated_files/eusart2.c: 206:      
      +                                 eusart2TxTail = 0;
 29383     13F7  01E2               	clrf	_eusart2TxTail	;volatile
 29384     13F8                     i1l10195:
 29385                           
 29386                           ;mcc_generated_files/eusart2.c: 208:         eusart2TxBufferRemaining++;
 29387     13F8  3001               	movlw	1
 29388     13F9  00F0               	movwf	??_EUSART2_Transmit_ISR
 29389     13FA  0870               	movf	??_EUSART2_Transmit_ISR,w
 29390     13FB  07E1               	addwf	_eusart2TxBufferRemaining,f	;volatile
 29391                           
 29392                           ;mcc_generated_files/eusart2.c: 209:     }
 29393     13FC  2BFF               	goto	i1l1085
 29394     13FD                     i1l1082:	
 29395                           ;mcc_generated_files/eusart2.c: 210:     else
 29396                           
 29397                           
 29398                           ;mcc_generated_files/eusart2.c: 211:     {;mcc_generated_files/eusart2.c: 212:         P
      +                          IE3bits.TX2IE = 0;
 29399     13FD  014E               	movlb	14	; select bank14
 29400     13FE  1319               	bcf	25,6	;volatile
 29401     13FF                     i1l1085:
 29402     13FF  0008               	return
 29403     1400                     __end_of_EUSART2_Transmit_ISR:
 29404                           
 29405                           	psect	text169
 29406     0887                     __ptext169:	
 29407 ;; *************** function _EUSART1_Receive_ISR *****************
 29408 ;; Defined at:
 29409 ;;		line 225 in file "mcc_generated_files/eusart1.c"
 29410 ;; Parameters:    Size  Location     Type
 29411 ;;		None
 29412 ;; Auto vars:     Size  Location     Type
 29413 ;;		None
 29414 ;; Return value:  Size  Location     Type
 29415 ;;                  1    wreg      void 
 29416 ;; Registers used:
 29417 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 29418 ;; Tracked objects:
 29419 ;;		On entry : 0/0
 29420 ;;		On exit  : 0/0
 29421 ;;		Unchanged: 0/0
 29422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29427 ;;Total ram usage:        0 bytes
 29428 ;; Hardware stack levels used: 1
 29429 ;; Hardware stack levels required when called: 2
 29430 ;; This function calls:
 29431 ;;		NULL
 29432 ;;		_EUSART1_DefaultErrorHandler
 29433 ;;		_EUSART1_DefaultFramingErrorHandler
 29434 ;;		_EUSART1_DefaultOverrunErrorHandler
 29435 ;;		_EUSART1_RxDataHandler
 29436 ;; This function is called by:
 29437 ;;		_EUSART1_Initialize
 29438 ;;		_INTERRUPT_InterruptManager
 29439 ;; This function uses a non-reentrant model
 29440 ;;
 29441                           
 29442     0887                     _EUSART1_Receive_ISR:	
 29443                           ;psect for function _EUSART1_Receive_ISR
 29444                           
 29445     0887                     i1l10229:	
 29446                           ;incstack = 0
 29447 ;; hardware stack exceeded
 29448                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 29449                           
 29450                           
 29451                           ;mcc_generated_files/eusart1.c: 228:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 29452     0887  0140               	movlb	0	; select bank0
 29453     0888  085A               	movf	_eusart1RxHead,w	;volatile
 29454     0889  3EBD               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 29455     088A  0086               	movwf	6
 29456     088B  0187               	clrf	7
 29457     088C  0181               	clrf	1
 29458     088D                     i1l10231:
 29459                           
 29460                           ;mcc_generated_files/eusart1.c: 230:     if(RC1STAbits.FERR){
 29461     088D  0142               	movlb	2	; select bank2
 29462     088E  1D1D               	btfss	29,2	;volatile
 29463     088F  2891               	goto	u703_21
 29464     0890  2892               	goto	u703_20
 29465     0891                     u703_21:
 29466     0891  289E               	goto	i1l10237
 29467     0892                     u703_20:
 29468     0892                     i1l10233:
 29469                           
 29470                           ;mcc_generated_files/eusart1.c: 231:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 29471     0892  0140               	movlb	0	; select bank0
 29472     0893  085A               	movf	_eusart1RxHead,w	;volatile
 29473     0894  3EBD               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 29474     0895  0086               	movwf	6
 29475     0896  0187               	clrf	7
 29476     0897  1481               	bsf	1,1
 29477     0898                     i1l10235:
 29478                           
 29479                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_FramingErrorHandler();
 29480     0898  0142               	movlb	2	; select bank2
 29481     0899  0862               	movf	(_EUSART1_FramingErrorHandler+1)^(0+256),w
 29482     089A  008A               	movwf	10
 29483     089B  0861               	movf	_EUSART1_FramingErrorHandler^(0+256),w
 29484     089C  000A               	callw
 29485     089D  3188               	pagesel	$
 29486     089E                     i1l10237:
 29487                           
 29488                           ;mcc_generated_files/eusart1.c: 235:     if(RC1STAbits.OERR){
 29489     089E  0142               	movlb	2	; select bank2
 29490     089F  1C9D               	btfss	29,1	;volatile
 29491     08A0  28A2               	goto	u704_21
 29492     08A1  28A3               	goto	u704_20
 29493     08A2                     u704_21:
 29494     08A2  28AF               	goto	i1l10243
 29495     08A3                     u704_20:
 29496     08A3                     i1l10239:
 29497                           
 29498                           ;mcc_generated_files/eusart1.c: 236:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 29499     08A3  0140               	movlb	0	; select bank0
 29500     08A4  085A               	movf	_eusart1RxHead,w	;volatile
 29501     08A5  3EBD               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 29502     08A6  0086               	movwf	6
 29503     08A7  0187               	clrf	7
 29504     08A8  1501               	bsf	1,2
 29505     08A9                     i1l10241:
 29506                           
 29507                           ;mcc_generated_files/eusart1.c: 237:         EUSART1_OverrunErrorHandler();
 29508     08A9  0142               	movlb	2	; select bank2
 29509     08AA  0860               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+256),w
 29510     08AB  008A               	movwf	10
 29511     08AC  085F               	movf	_EUSART1_OverrunErrorHandler^(0+256),w
 29512     08AD  000A               	callw
 29513     08AE  3188               	pagesel	$
 29514     08AF                     i1l10243:
 29515                           
 29516                           ;mcc_generated_files/eusart1.c: 240:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 29517     08AF  0140               	movlb	0	; select bank0
 29518     08B0  085A               	movf	_eusart1RxHead,w	;volatile
 29519     08B1  3EBD               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 29520     08B2  0086               	movwf	6
 29521     08B3  0187               	clrf	7
 29522     08B4  0801               	movf	1,w
 29523     08B5  1903               	btfsc	3,2
 29524     08B6  28B8               	goto	u705_21
 29525     08B7  28B9               	goto	u705_20
 29526     08B8                     u705_21:
 29527     08B8  28C0               	goto	i1l10247
 29528     08B9                     u705_20:
 29529     08B9                     i1l10245:
 29530                           
 29531                           ;mcc_generated_files/eusart1.c: 241:         EUSART1_ErrorHandler();
 29532     08B9  0142               	movlb	2	; select bank2
 29533     08BA  085E               	movf	(_EUSART1_ErrorHandler+1)^(0+256),w
 29534     08BB  008A               	movwf	10
 29535     08BC  085D               	movf	_EUSART1_ErrorHandler^(0+256),w
 29536     08BD  000A               	callw
 29537     08BE  3188               	pagesel	$
 29538                           
 29539                           ;mcc_generated_files/eusart1.c: 242:     } else {
 29540     08BF  28C3               	goto	i1l1242
 29541     08C0                     i1l10247:
 29542                           
 29543                           ;mcc_generated_files/eusart1.c: 243:         EUSART1_RxDataHandler();
 29544     08C0  3192  22DC  3188   	fcall	_EUSART1_RxDataHandler
 29545     08C3                     i1l1242:
 29546     08C3  0008               	return
 29547     08C4                     __end_of_EUSART1_Receive_ISR:
 29548                           
 29549                           	psect	text170
 29550     084E                     __ptext170:	
 29551 ;; *************** function _EUSART2_Receive_ISR *****************
 29552 ;; Defined at:
 29553 ;;		line 216 in file "mcc_generated_files/eusart2.c"
 29554 ;; Parameters:    Size  Location     Type
 29555 ;;		None
 29556 ;; Auto vars:     Size  Location     Type
 29557 ;;		None
 29558 ;; Return value:  Size  Location     Type
 29559 ;;                  1    wreg      void 
 29560 ;; Registers used:
 29561 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 29562 ;; Tracked objects:
 29563 ;;		On entry : 0/0
 29564 ;;		On exit  : 0/0
 29565 ;;		Unchanged: 0/0
 29566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29571 ;;Total ram usage:        0 bytes
 29572 ;; Hardware stack levels used: 1
 29573 ;; Hardware stack levels required when called: 2
 29574 ;; This function calls:
 29575 ;;		NULL
 29576 ;;		_EUSART2_DefaultErrorHandler
 29577 ;;		_EUSART2_DefaultFramingErrorHandler
 29578 ;;		_EUSART2_DefaultOverrunErrorHandler
 29579 ;;		_EUSART2_RxDataHandler
 29580 ;; This function is called by:
 29581 ;;		_EUSART2_Initialize
 29582 ;;		_INTERRUPT_InterruptManager
 29583 ;; This function uses a non-reentrant model
 29584 ;;
 29585                           
 29586     084E                     _EUSART2_Receive_ISR:	
 29587                           ;psect for function _EUSART2_Receive_ISR
 29588                           
 29589     084E                     i1l14483:	
 29590                           ;incstack = 0
 29591 ;; hardware stack exceeded
 29592                           ; Regs used in _EUSART2_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 29593                           
 29594                           
 29595                           ;mcc_generated_files/eusart2.c: 219:     eusart2RxStatusBuffer[eusart2RxHead].status = 0
      +                          ;
 29596     084E  087C               	movf	_eusart2RxHead,w	;volatile
 29597     084F  3ECD               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 29598     0850  0086               	movwf	6
 29599     0851  0187               	clrf	7
 29600     0852  0181               	clrf	1
 29601     0853                     i1l14485:
 29602                           
 29603                           ;mcc_generated_files/eusart2.c: 221:     if(RC2STAbits.FERR){
 29604     0853  0154               	movlb	20	; select bank20
 29605     0854  1D1D               	btfss	29,2	;volatile
 29606     0855  2857               	goto	u1165_21
 29607     0856  2858               	goto	u1165_20
 29608     0857                     u1165_21:
 29609     0857  2863               	goto	i1l14491
 29610     0858                     u1165_20:
 29611     0858                     i1l14487:
 29612                           
 29613                           ;mcc_generated_files/eusart2.c: 222:         eusart2RxStatusBuffer[eusart2RxHead].ferr =
      +                           1;
 29614     0858  087C               	movf	_eusart2RxHead,w	;volatile
 29615     0859  3ECD               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 29616     085A  0086               	movwf	6
 29617     085B  0187               	clrf	7
 29618     085C  1481               	bsf	1,1
 29619     085D                     i1l14489:
 29620                           
 29621                           ;mcc_generated_files/eusart2.c: 223:         EUSART2_FramingErrorHandler();
 29622     085D  0142               	movlb	2	; select bank2
 29623     085E  086C               	movf	(_EUSART2_FramingErrorHandler+1)^(0+256),w
 29624     085F  008A               	movwf	10
 29625     0860  086B               	movf	_EUSART2_FramingErrorHandler^(0+256),w
 29626     0861  000A               	callw
 29627     0862  3188               	pagesel	$
 29628     0863                     i1l14491:
 29629                           
 29630                           ;mcc_generated_files/eusart2.c: 226:     if(RC2STAbits.OERR){
 29631     0863  0154               	movlb	20	; select bank20
 29632     0864  1C9D               	btfss	29,1	;volatile
 29633     0865  2867               	goto	u1166_21
 29634     0866  2868               	goto	u1166_20
 29635     0867                     u1166_21:
 29636     0867  2873               	goto	i1l14497
 29637     0868                     u1166_20:
 29638     0868                     i1l14493:
 29639                           
 29640                           ;mcc_generated_files/eusart2.c: 227:         eusart2RxStatusBuffer[eusart2RxHead].oerr =
      +                           1;
 29641     0868  087C               	movf	_eusart2RxHead,w	;volatile
 29642     0869  3ECD               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 29643     086A  0086               	movwf	6
 29644     086B  0187               	clrf	7
 29645     086C  1501               	bsf	1,2
 29646     086D                     i1l14495:
 29647                           
 29648                           ;mcc_generated_files/eusart2.c: 228:         EUSART2_OverrunErrorHandler();
 29649     086D  0142               	movlb	2	; select bank2
 29650     086E  086A               	movf	(_EUSART2_OverrunErrorHandler+1)^(0+256),w
 29651     086F  008A               	movwf	10
 29652     0870  0869               	movf	_EUSART2_OverrunErrorHandler^(0+256),w
 29653     0871  000A               	callw
 29654     0872  3188               	pagesel	$
 29655     0873                     i1l14497:
 29656                           
 29657                           ;mcc_generated_files/eusart2.c: 231:     if(eusart2RxStatusBuffer[eusart2RxHead].status)
      +                          {
 29658     0873  087C               	movf	_eusart2RxHead,w	;volatile
 29659     0874  3ECD               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 29660     0875  0086               	movwf	6
 29661     0876  0187               	clrf	7
 29662     0877  0801               	movf	1,w
 29663     0878  1903               	btfsc	3,2
 29664     0879  287B               	goto	u1167_21
 29665     087A  287C               	goto	u1167_20
 29666     087B                     u1167_21:
 29667     087B  2883               	goto	i1l14501
 29668     087C                     u1167_20:
 29669     087C                     i1l14499:
 29670                           
 29671                           ;mcc_generated_files/eusart2.c: 232:         EUSART2_ErrorHandler();
 29672     087C  0142               	movlb	2	; select bank2
 29673     087D  0868               	movf	(_EUSART2_ErrorHandler+1)^(0+256),w
 29674     087E  008A               	movwf	10
 29675     087F  0867               	movf	_EUSART2_ErrorHandler^(0+256),w
 29676     0880  000A               	callw
 29677     0881  3188               	pagesel	$
 29678                           
 29679                           ;mcc_generated_files/eusart2.c: 233:     } else {
 29680     0882  2886               	goto	i1l1092
 29681     0883                     i1l14501:
 29682                           
 29683                           ;mcc_generated_files/eusart2.c: 234:         EUSART2_RxDataHandler();
 29684     0883  3192  2219  3188   	fcall	_EUSART2_RxDataHandler
 29685     0886                     i1l1092:
 29686     0886  0008               	return
 29687     0887                     __end_of_EUSART2_Receive_ISR:
 29688                           
 29689                           	psect	text171
 29690     1E98                     __ptext171:	
 29691 ;; *************** function _EUSART2_DefaultOverrunErrorHandler *****************
 29692 ;; Defined at:
 29693 ;;		line 252 in file "mcc_generated_files/eusart2.c"
 29694 ;; Parameters:    Size  Location     Type
 29695 ;;		None
 29696 ;; Auto vars:     Size  Location     Type
 29697 ;;		None
 29698 ;; Return value:  Size  Location     Type
 29699 ;;                  1    wreg      void 
 29700 ;; Registers used:
 29701 ;;		None
 29702 ;; Tracked objects:
 29703 ;;		On entry : 0/0
 29704 ;;		On exit  : 0/0
 29705 ;;		Unchanged: 0/0
 29706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29711 ;;Total ram usage:        0 bytes
 29712 ;; Hardware stack levels used: 1
 29713 ;; This function calls:
 29714 ;;		Nothing
 29715 ;; This function is called by:
 29716 ;;		_EUSART2_Initialize
 29717 ;;		_EUSART2_Receive_ISR
 29718 ;; This function uses a non-reentrant model
 29719 ;;
 29720                           
 29721     1E98                     _EUSART2_DefaultOverrunErrorHandler:	
 29722                           ;psect for function _EUSART2_DefaultOverrunErrorHandler
 29723                           
 29724     1E98                     i1l13685:	
 29725                           ;incstack = 0
 29726 ;; hardware stack exceeded
 29727                           ; Regs used in _EUSART2_DefaultOverrunErrorHandler: []
 29728                           
 29729                           
 29730                           ;mcc_generated_files/eusart2.c: 255:     RC2STAbits.CREN = 0;
 29731     1E98  0154               	movlb	20	; select bank20
 29732     1E99  121D               	bcf	29,4	;volatile
 29733                           
 29734                           ;mcc_generated_files/eusart2.c: 256:     RC2STAbits.CREN = 1;
 29735     1E9A  161D               	bsf	29,4	;volatile
 29736     1E9B                     i1l1102:
 29737     1E9B  0008               	return
 29738     1E9C                     __end_of_EUSART2_DefaultOverrunErrorHandler:
 29739                           
 29740                           	psect	text172
 29741     1E69                     __ptext172:	
 29742 ;; *************** function _EUSART2_DefaultFramingErrorHandler *****************
 29743 ;; Defined at:
 29744 ;;		line 250 in file "mcc_generated_files/eusart2.c"
 29745 ;; Parameters:    Size  Location     Type
 29746 ;;		None
 29747 ;; Auto vars:     Size  Location     Type
 29748 ;;		None
 29749 ;; Return value:  Size  Location     Type
 29750 ;;                  1    wreg      void 
 29751 ;; Registers used:
 29752 ;;		None
 29753 ;; Tracked objects:
 29754 ;;		On entry : 0/0
 29755 ;;		On exit  : 0/0
 29756 ;;		Unchanged: 0/0
 29757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29762 ;;Total ram usage:        0 bytes
 29763 ;; Hardware stack levels used: 1
 29764 ;; This function calls:
 29765 ;;		Nothing
 29766 ;; This function is called by:
 29767 ;;		_EUSART2_Initialize
 29768 ;;		_EUSART2_Receive_ISR
 29769 ;; This function uses a non-reentrant model
 29770 ;;
 29771                           
 29772     1E69                     _EUSART2_DefaultFramingErrorHandler:	
 29773                           ;psect for function _EUSART2_DefaultFramingErrorHandler
 29774                           
 29775     1E69                     i1l1099:	
 29776                           ;incstack = 0
 29777 ;; hardware stack exceeded
 29778                           ; Regs used in _EUSART2_DefaultFramingErrorHandler: []
 29779                           
 29780     1E69  0008               	return
 29781     1E6A                     __end_of_EUSART2_DefaultFramingErrorHandler:
 29782                           
 29783                           	psect	text173
 29784     1E94                     __ptext173:	
 29785 ;; *************** function _EUSART2_DefaultErrorHandler *****************
 29786 ;; Defined at:
 29787 ;;		line 260 in file "mcc_generated_files/eusart2.c"
 29788 ;; Parameters:    Size  Location     Type
 29789 ;;		None
 29790 ;; Auto vars:     Size  Location     Type
 29791 ;;		None
 29792 ;; Return value:  Size  Location     Type
 29793 ;;                  1    wreg      void 
 29794 ;; Registers used:
 29795 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 29796 ;; Tracked objects:
 29797 ;;		On entry : 0/0
 29798 ;;		On exit  : 0/0
 29799 ;;		Unchanged: 0/0
 29800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29805 ;;Total ram usage:        0 bytes
 29806 ;; Hardware stack levels used: 1
 29807 ;; Hardware stack levels required when called: 1
 29808 ;; This function calls:
 29809 ;;		_EUSART2_RxDataHandler
 29810 ;; This function is called by:
 29811 ;;		_EUSART2_Initialize
 29812 ;;		_EUSART2_Receive_ISR
 29813 ;; This function uses a non-reentrant model
 29814 ;;
 29815                           
 29816     1E94                     _EUSART2_DefaultErrorHandler:	
 29817                           ;psect for function _EUSART2_DefaultErrorHandler
 29818                           
 29819     1E94                     i1l13687:	
 29820                           ;incstack = 0
 29821 ;; hardware stack exceeded
 29822                           ; Regs used in _EUSART2_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 29823                           
 29824                           
 29825                           ;mcc_generated_files/eusart2.c: 261:     EUSART2_RxDataHandler();
 29826     1E94  3192  2219  319E   	fcall	_EUSART2_RxDataHandler
 29827     1E97                     i1l1105:
 29828     1E97  0008               	return
 29829     1E98                     __end_of_EUSART2_DefaultErrorHandler:
 29830                           
 29831                           	psect	text174
 29832     1219                     __ptext174:	
 29833 ;; *************** function _EUSART2_RxDataHandler *****************
 29834 ;; Defined at:
 29835 ;;		line 240 in file "mcc_generated_files/eusart2.c"
 29836 ;; Parameters:    Size  Location     Type
 29837 ;;		None
 29838 ;; Auto vars:     Size  Location     Type
 29839 ;;		None
 29840 ;; Return value:  Size  Location     Type
 29841 ;;                  1    wreg      void 
 29842 ;; Registers used:
 29843 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 29844 ;; Tracked objects:
 29845 ;;		On entry : 0/0
 29846 ;;		On exit  : 0/0
 29847 ;;		Unchanged: 0/0
 29848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29851 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29852 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29853 ;;Total ram usage:        1 bytes
 29854 ;; Hardware stack levels used: 1
 29855 ;; This function calls:
 29856 ;;		Nothing
 29857 ;; This function is called by:
 29858 ;;		_EUSART2_Receive_ISR
 29859 ;;		_EUSART2_DefaultErrorHandler
 29860 ;; This function uses a non-reentrant model
 29861 ;;
 29862                           
 29863     1219                     _EUSART2_RxDataHandler:	
 29864                           ;psect for function _EUSART2_RxDataHandler
 29865                           
 29866     1219                     i1l13483:	
 29867                           ;incstack = 0
 29868 ;; hardware stack exceeded
 29869                           ; Regs used in _EUSART2_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 29870                           
 29871                           
 29872                           ;mcc_generated_files/eusart2.c: 242:     eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 29873     1219  087C               	movf	_eusart2RxHead,w
 29874     121A  3ED5               	addlw	(low (_eusart2RxBuffer| 0))& (0+255)
 29875     121B  0086               	movwf	6
 29876     121C  0187               	clrf	7
 29877     121D  0154               	movlb	20	; select bank20
 29878     121E  0819               	movf	25,w	;volatile
 29879     121F  0081               	movwf	1
 29880     1220                     i1l13485:
 29881     1220  3001               	movlw	1
 29882     1221  00F0               	movwf	??_EUSART2_RxDataHandler
 29883     1222  0870               	movf	??_EUSART2_RxDataHandler,w
 29884     1223  07FC               	addwf	_eusart2RxHead,f	;volatile
 29885     1224                     i1l13487:
 29886                           
 29887                           ;mcc_generated_files/eusart2.c: 243:     if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 29888     1224  3008               	movlw	8
 29889     1225  027C               	subwf	_eusart2RxHead,w	;volatile
 29890     1226  1C03               	skipc
 29891     1227  2A29               	goto	u1041_21
 29892     1228  2A2A               	goto	u1041_20
 29893     1229                     u1041_21:
 29894     1229  2A2B               	goto	i1l13491
 29895     122A                     u1041_20:
 29896     122A                     i1l13489:
 29897                           
 29898                           ;mcc_generated_files/eusart2.c: 244:     {;mcc_generated_files/eusart2.c: 245:         e
      +                          usart2RxHead = 0;
 29899     122A  01FC               	clrf	_eusart2RxHead	;volatile
 29900     122B                     i1l13491:
 29901                           
 29902                           ;mcc_generated_files/eusart2.c: 247:     eusart2RxCount++;
 29903     122B  3001               	movlw	1
 29904     122C  00F0               	movwf	??_EUSART2_RxDataHandler
 29905     122D  0870               	movf	??_EUSART2_RxDataHandler,w
 29906     122E  0140               	movlb	0	; select bank0
 29907     122F  07DF               	addwf	_eusart2RxCount,f	;volatile
 29908     1230                     i1l1096:
 29909     1230  0008               	return
 29910     1231                     __end_of_EUSART2_RxDataHandler:
 29911                           
 29912                           	psect	text175
 29913     1E90                     __ptext175:	
 29914 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 29915 ;; Defined at:
 29916 ;;		line 261 in file "mcc_generated_files/eusart1.c"
 29917 ;; Parameters:    Size  Location     Type
 29918 ;;		None
 29919 ;; Auto vars:     Size  Location     Type
 29920 ;;		None
 29921 ;; Return value:  Size  Location     Type
 29922 ;;                  1    wreg      void 
 29923 ;; Registers used:
 29924 ;;		None
 29925 ;; Tracked objects:
 29926 ;;		On entry : 0/0
 29927 ;;		On exit  : 0/0
 29928 ;;		Unchanged: 0/0
 29929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29934 ;;Total ram usage:        0 bytes
 29935 ;; Hardware stack levels used: 1
 29936 ;; This function calls:
 29937 ;;		Nothing
 29938 ;; This function is called by:
 29939 ;;		_EUSART1_Initialize
 29940 ;;		_EUSART1_Receive_ISR
 29941 ;; This function uses a non-reentrant model
 29942 ;;
 29943                           
 29944     1E90                     _EUSART1_DefaultOverrunErrorHandler:	
 29945                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 29946                           
 29947     1E90                     i1l9231:	
 29948                           ;incstack = 0
 29949 ;; hardware stack exceeded
 29950                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 29951                           
 29952                           
 29953                           ;mcc_generated_files/eusart1.c: 264:     RC1STAbits.CREN = 0;
 29954     1E90  0142               	movlb	2	; select bank2
 29955     1E91  121D               	bcf	29,4	;volatile
 29956                           
 29957                           ;mcc_generated_files/eusart1.c: 265:     RC1STAbits.CREN = 1;
 29958     1E92  161D               	bsf	29,4	;volatile
 29959     1E93                     i1l1252:
 29960     1E93  0008               	return
 29961     1E94                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 29962                           
 29963                           	psect	text176
 29964     1E68                     __ptext176:	
 29965 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 29966 ;; Defined at:
 29967 ;;		line 259 in file "mcc_generated_files/eusart1.c"
 29968 ;; Parameters:    Size  Location     Type
 29969 ;;		None
 29970 ;; Auto vars:     Size  Location     Type
 29971 ;;		None
 29972 ;; Return value:  Size  Location     Type
 29973 ;;                  1    wreg      void 
 29974 ;; Registers used:
 29975 ;;		None
 29976 ;; Tracked objects:
 29977 ;;		On entry : 0/0
 29978 ;;		On exit  : 0/0
 29979 ;;		Unchanged: 0/0
 29980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29985 ;;Total ram usage:        0 bytes
 29986 ;; Hardware stack levels used: 1
 29987 ;; This function calls:
 29988 ;;		Nothing
 29989 ;; This function is called by:
 29990 ;;		_EUSART1_Initialize
 29991 ;;		_EUSART1_Receive_ISR
 29992 ;; This function uses a non-reentrant model
 29993 ;;
 29994                           
 29995     1E68                     _EUSART1_DefaultFramingErrorHandler:	
 29996                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 29997                           
 29998     1E68                     i1l1249:	
 29999                           ;incstack = 0
 30000 ;; hardware stack exceeded
 30001                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 30002                           
 30003     1E68  0008               	return
 30004     1E69                     __end_of_EUSART1_DefaultFramingErrorHandler:
 30005                           
 30006                           	psect	text177
 30007     1E8C                     __ptext177:	
 30008 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 30009 ;; Defined at:
 30010 ;;		line 269 in file "mcc_generated_files/eusart1.c"
 30011 ;; Parameters:    Size  Location     Type
 30012 ;;		None
 30013 ;; Auto vars:     Size  Location     Type
 30014 ;;		None
 30015 ;; Return value:  Size  Location     Type
 30016 ;;                  1    wreg      void 
 30017 ;; Registers used:
 30018 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 30019 ;; Tracked objects:
 30020 ;;		On entry : 0/0
 30021 ;;		On exit  : 0/0
 30022 ;;		Unchanged: 0/0
 30023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 30024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30028 ;;Total ram usage:        0 bytes
 30029 ;; Hardware stack levels used: 1
 30030 ;; Hardware stack levels required when called: 1
 30031 ;; This function calls:
 30032 ;;		_EUSART1_RxDataHandler
 30033 ;; This function is called by:
 30034 ;;		_EUSART1_Initialize
 30035 ;;		_EUSART1_Receive_ISR
 30036 ;; This function uses a non-reentrant model
 30037 ;;
 30038                           
 30039     1E8C                     _EUSART1_DefaultErrorHandler:	
 30040                           ;psect for function _EUSART1_DefaultErrorHandler
 30041                           
 30042     1E8C                     i1l9233:	
 30043                           ;incstack = 0
 30044 ;; hardware stack exceeded
 30045                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 30046                           
 30047                           
 30048                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_RxDataHandler();
 30049     1E8C  3192  22DC  319E   	fcall	_EUSART1_RxDataHandler
 30050     1E8F                     i1l1255:
 30051     1E8F  0008               	return
 30052     1E90                     __end_of_EUSART1_DefaultErrorHandler:
 30053                           
 30054                           	psect	text178
 30055     12DC                     __ptext178:	
 30056 ;; *************** function _EUSART1_RxDataHandler *****************
 30057 ;; Defined at:
 30058 ;;		line 249 in file "mcc_generated_files/eusart1.c"
 30059 ;; Parameters:    Size  Location     Type
 30060 ;;		None
 30061 ;; Auto vars:     Size  Location     Type
 30062 ;;		None
 30063 ;; Return value:  Size  Location     Type
 30064 ;;                  1    wreg      void 
 30065 ;; Registers used:
 30066 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 30067 ;; Tracked objects:
 30068 ;;		On entry : 0/0
 30069 ;;		On exit  : 0/0
 30070 ;;		Unchanged: 0/0
 30071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 30072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30074 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30075 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 30076 ;;Total ram usage:        1 bytes
 30077 ;; Hardware stack levels used: 1
 30078 ;; This function calls:
 30079 ;;		Nothing
 30080 ;; This function is called by:
 30081 ;;		_EUSART1_Receive_ISR
 30082 ;;		_EUSART1_DefaultErrorHandler
 30083 ;; This function uses a non-reentrant model
 30084 ;;
 30085                           
 30086     12DC                     _EUSART1_RxDataHandler:	
 30087                           ;psect for function _EUSART1_RxDataHandler
 30088                           
 30089     12DC                     i1l8967:	
 30090                           ;incstack = 0
 30091 ;; hardware stack exceeded
 30092                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 30093                           
 30094                           
 30095                           ;mcc_generated_files/eusart1.c: 251:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 30096     12DC  0140               	movlb	0	; select bank0
 30097     12DD  085A               	movf	_eusart1RxHead,w
 30098     12DE  3E44               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 30099     12DF  0086               	movwf	6
 30100     12E0  3001               	movlw	1	; select bank2/3
 30101     12E1  0087               	movwf	7
 30102     12E2  0142               	movlb	2	; select bank2
 30103     12E3  0819               	movf	25,w	;volatile
 30104     12E4  0081               	movwf	1
 30105     12E5                     i1l8969:
 30106     12E5  3001               	movlw	1
 30107     12E6  00F0               	movwf	??_EUSART1_RxDataHandler
 30108     12E7  0870               	movf	??_EUSART1_RxDataHandler,w
 30109     12E8  0140               	movlb	0	; select bank0
 30110     12E9  07DA               	addwf	_eusart1RxHead,f	;volatile
 30111     12EA                     i1l8971:
 30112                           
 30113                           ;mcc_generated_files/eusart1.c: 252:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 30114     12EA  3008               	movlw	8
 30115     12EB  025A               	subwf	_eusart1RxHead,w	;volatile
 30116     12EC  1C03               	skipc
 30117     12ED  2AEF               	goto	u565_21
 30118     12EE  2AF0               	goto	u565_20
 30119     12EF                     u565_21:
 30120     12EF  2AF1               	goto	i1l8975
 30121     12F0                     u565_20:
 30122     12F0                     i1l8973:
 30123                           
 30124                           ;mcc_generated_files/eusart1.c: 253:     {;mcc_generated_files/eusart1.c: 254:         e
      +                          usart1RxHead = 0;
 30125     12F0  01DA               	clrf	_eusart1RxHead	;volatile
 30126     12F1                     i1l8975:
 30127                           
 30128                           ;mcc_generated_files/eusart1.c: 256:     eusart1RxCount++;
 30129     12F1  3001               	movlw	1
 30130     12F2  00F0               	movwf	??_EUSART1_RxDataHandler
 30131     12F3  0870               	movf	??_EUSART1_RxDataHandler,w
 30132     12F4  07D8               	addwf	_eusart1RxCount,f	;volatile
 30133     12F5                     i1l1246:
 30134     12F5  0008               	return
 30135     12F6                     __end_of_EUSART1_RxDataHandler:
 30136     007E                     btemp	set	126	;btemp
 30137     007E                     int$flags	set	126
 30138     007E                     wtemp0	set	126
 30139                           
 30140                           	psect	idloc
 30141                           
 30142                           ;Config register IDLOC0 @ 0x8000
 30143                           ;	unspecified, using default values
 30144     8000                     	org	32768
 30145     8000  3FFF               	dw	16383
 30146                           
 30147                           ;Config register IDLOC1 @ 0x8001
 30148                           ;	unspecified, using default values
 30149     8001                     	org	32769
 30150     8001  3FFF               	dw	16383
 30151                           
 30152                           ;Config register IDLOC2 @ 0x8002
 30153                           ;	unspecified, using default values
 30154     8002                     	org	32770
 30155     8002  3FFF               	dw	16383
 30156                           
 30157                           ;Config register IDLOC3 @ 0x8003
 30158                           ;	unspecified, using default values
 30159     8003                     	org	32771
 30160     8003  3FFF               	dw	16383
 30161                           
 30162                           	psect	config
 30163                           
 30164                           ;Config register CONFIG1 @ 0x8007
 30165                           ;	External Oscillator mode selection bits
 30166                           ;	FEXTOSC = OFF, Oscillator not enabled
 30167                           ;	Power-up default value for COSC bits
 30168                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 30169                           ;	Clock Out Enable bit
 30170                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 30171                           ;	Clock Switch Enable bit
 30172                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 30173                           ;	Fail-Safe Clock Monitor Enable bit
 30174                           ;	FCMEN = ON, FSCM timer enabled
 30175     8007                     	org	32775
 30176     8007  3FEC               	dw	16364
 30177                           
 30178                           ;Config register CONFIG2 @ 0x8008
 30179                           ;	Master Clear Enable bit
 30180                           ;	MCLRE = ON, MCLR pin is Master Clear function
 30181                           ;	Power-up Timer Enable bit
 30182                           ;	PWRTS = OFF, PWRT disabled
 30183                           ;	Low-Power BOR enable bit
 30184                           ;	LPBOREN = OFF, ULPBOR disabled
 30185                           ;	Brown-out reset enable bits
 30186                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 30187                           ;	Brown-out Reset Voltage Selection
 30188                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
 30189                           ;	Zero-cross detect disable
 30190                           ;	ZCDDIS = OFF, Zero-cross detect circuit is disabled at POR.
 30191                           ;	Peripheral Pin Select one-way control
 30192                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 30193                           ;	Stack Overflow/Underflow Reset Enable bit
 30194                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 30195     8008                     	org	32776
 30196     8008  3FFF               	dw	16383
 30197                           
 30198                           ;Config register CONFIG3 @ 0x8009
 30199                           ;	WDT Period Select bits
 30200                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 30201                           ;	WDT operating mode
 30202                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 30203                           ;	WDT Window Select bits
 30204                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 30205                           ;	WDT input clock selector
 30206                           ;	WDTCCS = SC, Software Control
 30207     8009                     	org	32777
 30208     8009  3F9F               	dw	16287
 30209                           
 30210                           ;Config register CONFIG4 @ 0x800A
 30211                           ;	Boot Block Size Selection bits
 30212                           ;	BBSIZE = BB512, 512 words boot block size
 30213                           ;	Boot Block Enable bit
 30214                           ;	BBEN = OFF, Boot Block disabled
 30215                           ;	SAF Enable bit
 30216                           ;	SAFEN = OFF, SAF disabled
 30217                           ;	Application Block Write Protection bit
 30218                           ;	WRTAPP = OFF, Application Block not write protected
 30219                           ;	Boot Block Write Protection bit
 30220                           ;	WRTB = OFF, Boot Block not write protected
 30221                           ;	Configuration Register Write Protection bit
 30222                           ;	WRTC = OFF, Configuration Register not write protected
 30223                           ;	Data EEPROM write protection bit
 30224                           ;	WRTD = OFF, Data EEPROM NOT write protected
 30225                           ;	Storage Area Flash Write Protection bit
 30226                           ;	WRTSAF = OFF, SAF not write protected
 30227                           ;	Low Voltage Programming Enable bit
 30228                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 30229     800A                     	org	32778
 30230     800A  3FFF               	dw	16383
 30231                           
 30232                           ;Config register CONFIG5 @ 0x800B
 30233                           ;	UserNVM Program memory code protection bit
 30234                           ;	CP = OFF, UserNVM code protection disabled
 30235     800B                     	org	32779
 30236     800B  3FFF               	dw	16383

Data Sizes:
    Strings     29
    Constant    147
    Data        19
    BSS         458
    Persistent  54
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     42      80
    BANK1            80      1      80
    BANK2            80      0      77
    BANK3            80      0      64
    BANK4            80      0      80
    BANK5            80      0      80
    BANK6            80      0      80
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    asyncBuffer	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), NULL(NULL[0]), 

    bitWrite@reg	PTR unsigned short  size(2) Largest target is 8192
		 -> begin@testReg(BANK0[2]), RAM(DATA[8192]), 

    BMA253_GetAccelDataXYZ@accelData	PTR struct . size(1) Largest target is 6
		 -> LIGHTBLUE_AccelSensor@accelData(BANK0[6]), 

    BMA253_GetAccelDataY@yAccelData	PTR short  size(1) Largest target is 2
		 -> BMA253_GetAccelDataXYZ@sensorValue(BANK0[2]), 

    BMA253_GetAccelDataZ@zAccelData	PTR short  size(1) Largest target is 2
		 -> BMA253_GetAccelDataXYZ@sensorValue(BANK0[2]), 

    bufferBlock$data	PTR unsigned char  size(2) Largest target is 0

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    d$data	PTR unsigned char  size(2) Largest target is 0

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), NULL(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), NULL(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), NULL(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), NULL(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), NULL(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), NULL(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), NULL(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), NULL(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), NULL(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), NULL(), 

    fsmStateTable	const PTR FTN()enum E12652[16] size(2) Largest target is 1
		 -> do_I2C_DO_ACK(), do_I2C_DO_ADDRESS_NACK(), do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), 
		 -> do_I2C_IDLE(), do_I2C_RCEN(), do_I2C_RESET(), do_I2C_RX(), 
		 -> do_I2C_SEND_ADR_READ(), do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_RESTART(), do_I2C_SEND_RESTART_READ(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_STOP(), do_I2C_TX(), do_I2C_TX_EMPTY(), 

    I2C1_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_DO_TX$5432	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1239(), 
		 -> rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1250(), rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1273(), 
		 -> wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1256(), wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1262(), 
		 -> NULL(), 

    I2C1_DO_TX$5432$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_DO_TX$5437	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_busCollisionISR(), NULL(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_ISR(), NULL(), 

    i2c1_fsmStateTable	const PTR FTN()enum E12565[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_IDLE(), I2C1_DO_RCEN(), I2C1_DO_RESET(), 
		 -> I2C1_DO_RX(), I2C1_DO_RX_ACK(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_SEND_ADR_READ(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_READ(), 
		 -> I2C1_DO_SEND_RESTART_WRITE(), I2C1_DO_SEND_STOP(), I2C1_DO_TX(), I2C1_DO_TX_EMPTY(), 

    I2C1_MasterFsm$5431	const PTR FTN()enum E12565 size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_IDLE(), I2C1_DO_RCEN(), I2C1_DO_RESET(), 
		 -> I2C1_DO_RX(), I2C1_DO_RX_ACK(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_SEND_ADR_READ(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_READ(), 
		 -> I2C1_DO_SEND_RESTART_WRITE(), I2C1_DO_SEND_STOP(), I2C1_DO_TX(), I2C1_DO_TX_EMPTY(), 

    I2C1_Read1ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_Read2ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), 

    I2C1_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_SetBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> bufferBlock$data(COMMON[2]), d$data(COMMON[2]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 
		 -> I2C1_Read1ByteRegister@returnValue$data(COMMON[2]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read2ByteRegister@returnValue$data(COMMON[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@data$data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@data$data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_read1ByteRegister@d2$data(COMMON[2]), i2c_read1ByteRegister@reg(BANK0[1]), i2c_read2ByteRegister@reg(BANK0[1]), 
		 -> i2c_read2ByteRegister@result(BANK0[2]), i2c_read2ByteRegister@result$data(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), i2c_readDataBlock@reg(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write1ByteRegister@data$data(COMMON[2]), i2c_write1ByteRegister@reg(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_write2ByteRegister@data$data(COMMON[2]), i2c_write2ByteRegister@reg(COMMON[1]), readRegisters@dataBuffer(BANK0[1]), NULL(NULL[0]), 

    I2C1_SetCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1239(), rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1250(), 
		 -> rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1273(), wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1256(), 
		 -> wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1262(), NULL(), 

    I2C1_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1239(), rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1250(), 
		 -> rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1273(), wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1256(), 
		 -> wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1262(), NULL(), 

    I2C1_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_Status$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_Status$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1239(), 
		 -> rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1250(), rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1273(), 
		 -> wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1256(), wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1262(), 
		 -> NULL(), 

    I2C1_Status$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> bufferBlock$data(COMMON[2]), d$data(COMMON[2]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 
		 -> I2C1_Read1ByteRegister@returnValue$data(COMMON[2]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read2ByteRegister@returnValue$data(COMMON[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@data$data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@data$data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_read1ByteRegister@d2$data(COMMON[2]), i2c_read1ByteRegister@reg(BANK0[1]), i2c_read2ByteRegister@reg(BANK0[1]), 
		 -> i2c_read2ByteRegister@result(BANK0[2]), i2c_read2ByteRegister@result$data(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), i2c_readDataBlock@reg(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write1ByteRegister@data$data(COMMON[2]), i2c_write1ByteRegister@reg(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_write2ByteRegister@data$data(COMMON[2]), i2c_write2ByteRegister@reg(COMMON[1]), readRegisters@dataBuffer(BANK0[1]), NULL(NULL[0]), 

    I2C1_Write1ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_Write2ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    i2c_read1ByteRegister@d2$data	PTR unsigned char  size(2) Largest target is 0

    i2c_read2ByteRegister@result$data	PTR unsigned char  size(2) Largest target is 0

    i2c_readNBytes@data	PTR void  size(1) Largest target is 1
		 -> readRegisters@dataBuffer(BANK0[1]), 

    i2c_status$callbackPayload	PTR void [6] size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c_status$callbackTable	PTR FTN(PTR void ,)enum E12498[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    i2c_status$data_ptr	PTR unsigned char  size(2) Largest target is 0

    i2c_write1ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    i2c_write2ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    IOCAF6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF6_DefaultInterruptHandler(), NULL(), 

    IOCAF6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF6_DefaultInterruptHandler(), 

    LIGHTBLUE_SendPacket@payload	PTR unsigned char  size(1) Largest target is 19
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_LedState@payload(BANK0[3]), LIGHTBLUE_PushButton@payload(BANK0[3]), LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), 
		 -> LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), 

    LIGHTBLUE_SendSerialData@serialData	PTR unsigned char  size(1) Largest target is 80
		 -> lightBlueSerial(BANK4[80]), 

    LIGHTBLUE_SplitByte@payload	PTR unsigned char  size(1) Largest target is 19
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_LedState@payload(BANK0[3]), LIGHTBLUE_PushButton@payload(BANK0[3]), LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), 
		 -> LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), 

    LIGHTBLUE_SplitWord@payload	PTR unsigned char  size(1) Largest target is 13
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), 

    NULL$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    pHead	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), NULL(NULL[0]), 

    protocol_version_number	const PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    rd1RegCompleteHandler@i2c1_master_example$F1239@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rd2RegCompleteHandler@i2c1_master_example$F1250@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@i2c1_master_example$F1273@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@i2c1_master_example$F1273@ptr$data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@p$data	PTR unsigned char  size(2) Largest target is 0

    readRegisters@dataBuffer	PTR unsigned char  size(1) Largest target is 8
		 -> getManufacturerID@databuffer(COMMON[2]), getTemp@databuffer(COMMON[2]), readRegister@regVal(BANK0[1]), readWakeUpAndSleepData@wakeupRegisterRead(COMMON[8]), 

    RN487X$AsyncHandler	PTR FTN(PTR unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_MessageHandler(), 

    RN487X$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_rx_ready(), 

    RN487X$DelayMs	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> RN487X_Delay(), 

    RN487X$IndicateRx	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_IndicateRx(), 

    RN487X$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> RN487X_Read@rn487x_interface$F1381(), 

    RN487X$ResetModule	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_Reset(), 

    RN487X$SetSystemMode	PTR FTN(enum E271,)void  size(2) Largest target is 1
		 -> RN487X_SetSystemMode(), 

    RN487X$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_tx_done(), 

    RN487X$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_Write(), 

    rn487x_driver_version	const PTR const unsigned char  size(2) Largest target is 6
		 -> STR_6(CODE[6]), 

    RN487X_MessageHandler@message	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), NULL(NULL[0]), 

    rn487x_PrintMessage@passedMessage	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), NULL(NULL[0]), 

    RN487X_ReadMsg@expectedMsg	PTR const unsigned char  size(2) Largest target is 11
		 -> RN487X_EnterCmdMode@cmdPrompt(CODE[5]), RN487X_EnterDataMode@cmdPrompt(CODE[5]), RN487X_GetInputsValues@ioValue(COMMON[2]), RN487X_RebootCmd@reboot(CODE[11]), 

    RN487X_SendCmd@cmd	PTR const unsigned char  size(1) Largest target is 64
		 -> cmdBuf(BANK3[64]), 

    RN487X_SetAsyncMessageHandler@pBuffer	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), 

    S1020$data	PTR unsigned char  size(2) Largest target is 0

    S231$8$0	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), NULL(NULL[0]), 

    S231$AsyncHandler	PTR FTN(PTR unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_MessageHandler(), 

    S231$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_rx_ready(), 

    S231$DelayMs	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> RN487X_Delay(), 

    S231$IndicateRx	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_IndicateRx(), 

    S231$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> RN487X_Read@rn487x_interface$F1381(), 

    S231$ResetModule	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_Reset(), 

    S231$SetSystemMode	PTR FTN(enum E271,)void  size(2) Largest target is 1
		 -> RN487X_SetSystemMode(), 

    S231$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_tx_done(), 

    S231$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_Write(), 

    S3148$0$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    S3148$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    S3148$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1239(), 
		 -> rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1250(), rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1273(), 
		 -> wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1256(), wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1262(), 
		 -> NULL(), 

    S3148$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read1ByteRegister@reg(BANK0[1]), 
		 -> i2c_read2ByteRegister@reg(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), i2c_readDataBlock@reg(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write1ByteRegister@reg(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), i2c_write2ByteRegister@reg(COMMON[1]), 
		 -> readRegisters@dataBuffer(BANK0[1]), NULL(NULL[0]), 

    S360$4$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    S360$6$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    S360$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_rx_ready(), EUSART2_is_rx_ready(), 

    S360$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Initialize(), EUSART2_Initialize(), 

    S360$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_Read(), EUSART2_Read(), 

    S360$RxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    S360$SetRxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetRxInterruptHandler(), EUSART2_SetRxInterruptHandler(), 

    S360$SetTxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetTxInterruptHandler(), EUSART2_SetTxInterruptHandler(), 

    S360$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_done(), EUSART2_is_tx_done(), 

    S360$TransmitReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_ready(), EUSART2_is_tx_ready(), 

    S360$TxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    S360$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART1_Write(), EUSART2_Write(), 

    S674$11$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S674$callbackPayload	PTR void [6] size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S674$callbackTable	PTR FTN(PTR void ,)enum E12498[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    S674$data_ptr	PTR unsigned char  size(2) Largest target is 0

    sp__strchr	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 32
		 -> rn487x_PrintMessage@printCharacter(BANK0[32]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), NULL(NULL[0]), 

    strchr@s	PTR const unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), NULL(NULL[0]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 32
		 -> rn487x_PrintMessage@printCharacter(BANK0[32]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 32
		 -> rn487x_PrintMessage@printCharacter(BANK0[32]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), NULL(NULL[0]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_LedState@payload(BANK0[3]), LIGHTBLUE_PushButton@payload(BANK0[3]), LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), 
		 -> LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), lightBlueSerial(BANK4[80]), statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), 
		 -> STR_1(CODE[6]), STR_3(CODE[11]), STR_5(CODE[12]), NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_LedState@payload(BANK0[3]), LIGHTBLUE_PushButton@payload(BANK0[3]), LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), 
		 -> LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), lightBlueSerial(BANK4[80]), statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), 
		 -> STR_1(CODE[6]), STR_3(CODE[11]), STR_5(CODE[12]), NULL(NULL[0]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), NULL(NULL[0]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[11]), STR_5(CODE[12]), 

    strstr@h	PTR const unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3783(BANK6[80]), NULL(NULL[0]), 

    strstr@n	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[11]), STR_5(CODE[12]), 

    TMAG5273_GetTemperatureValue@temperature	PTR short  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    uart$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_rx_ready(), EUSART2_is_rx_ready(), 

    uart$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Initialize(), EUSART2_Initialize(), 

    uart$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_Read(), EUSART2_Read(), 

    uart$RxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    uart$SetRxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetRxInterruptHandler(), EUSART2_SetRxInterruptHandler(), 

    uart$SetTxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetTxInterruptHandler(), EUSART2_SetTxInterruptHandler(), 

    uart$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_done(), EUSART2_is_tx_done(), 

    uart$TransmitReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_ready(), EUSART2_is_tx_ready(), 

    uart$TxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    uart$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART1_Write(), EUSART2_Write(), 

    wr1RegCompleteHandler@i2c1_master_example$F1256@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    wr2RegCompleteHandler@i2c1_master_example$F1262@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    _writeRegister->_i2c_write1ByteRegister
    _PIN_MANAGER_Initialize->_IOCAF6_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _RN487X_MessageHandler->_strstr
    _strstr->_strncmp
    _rn487x_PrintMessageStart->_EUSART1_Write
    _rn487x_PrintMessageStart->_EUSART2_Write
    _rn487x_PrintMessageEnd->_EUSART1_Write
    _rn487x_PrintMessageEnd->_EUSART2_Write
    _rn487x_PrintMessage->_strcpy
    _rn487x_PrintIndicatorCharacters->_EUSART1_Write
    _rn487x_PrintIndicatorCharacters->_EUSART2_Write
    _RN487X_Init->_RN487X_Delay
    _LIGHTBLUE_TemperatureSensor->_LIGHTBLUE_SplitWord
    _LIGHTBLUE_SendSerialData->_RN487X_Write
    _LIGHTBLUE_SendProtocolVersion->_LIGHTBLUE_SendPacket
    _LIGHTBLUE_PushButton->_LIGHTBLUE_SendPacket
    _LIGHTBLUE_PerformAction->_LIGHTBLUE_SetErrorLedValue
    _RN487X_SetOutputs->_RN487X_SendCmd
    _RN487X_EnterDataMode->_RN487X_SendCmd
    _RN487X_EnterCmdMode->_RN487X_SendCmd
    _RN487X_SendCmd->_RN487X_Write
    _RN487X_Read@rn487x_interface$F1381->_EUSART1_Read
    _RN487X_Read@rn487x_interface$F1381->_EUSART2_Read
    _RN487X_Delay->_DELAY_milliseconds
    _LIGHTBLUE_LedState->_LIGHTBLUE_SendPacket
    _LIGHTBLUE_AccelSensor->_LIGHTBLUE_SplitWord
    _LIGHTBLUE_SplitWord->_LIGHTBLUE_SplitByte
    _LIGHTBLUE_SplitByte->_strlen
    _LIGHTBLUE_SendPacket->_RN487X_Write
    _RN487X_Write->_strlen
    _BMA253_GetAccelDataXYZ->_BMA253_NewAccelDataRdyY
    _BMA253_GetAccelDataXYZ->_BMA253_NewAccelDataRdyZ
    _readRegisters->_i2c_readNBytes
    _BMA253_GetAccelDataZ->_BMA253_NewAccelDataRdyZ
    _BMA253_GetAccelDataY->_BMA253_NewAccelDataRdyY
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_MasterFsm->_I2C1_DO_ADDRESS_NACK
    _I2C1_MasterFsm->_I2C1_DO_RX
    _I2C1_MasterFsm->_I2C1_DO_TX
    _I2C1_MasterFsm->_I2C1_DO_TX_EMPTY
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnReset
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnStop
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler@i2c1_master_example$F1239
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler@i2c1_master_example$F1250
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler@i2c1_master_example$F1273
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler@i2c1_master_example$F1256
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler@i2c1_master_example$F1262
    _I2C1_DO_TX->_I2C1_CallbackReturnReset
    _I2C1_DO_TX->_I2C1_CallbackReturnStop
    _I2C1_DO_TX->_rd1RegCompleteHandler
    _I2C1_DO_TX->_rd1RegCompleteHandler@i2c1_master_example$F1239
    _I2C1_DO_TX->_rd2RegCompleteHandler
    _I2C1_DO_TX->_rd2RegCompleteHandler@i2c1_master_example$F1250
    _I2C1_DO_TX->_rdBlkRegCompleteHandler
    _I2C1_DO_TX->_rdBlkRegCompleteHandler@i2c1_master_example$F1273
    _I2C1_DO_TX->_wr1RegCompleteHandler
    _I2C1_DO_TX->_wr1RegCompleteHandler@i2c1_master_example$F1256
    _I2C1_DO_TX->_wr2RegCompleteHandler
    _I2C1_DO_TX->_wr2RegCompleteHandler@i2c1_master_example$F1262
    _I2C1_DO_SEND_ADR_WRITE->_I2C1_MasterSendTxData
    _I2C1_DO_RX->_I2C1_CallbackReturnReset
    _I2C1_DO_RX->_I2C1_CallbackReturnStop
    _I2C1_DO_RX->_rd1RegCompleteHandler
    _I2C1_DO_RX->_rd1RegCompleteHandler@i2c1_master_example$F1239
    _I2C1_DO_RX->_rd2RegCompleteHandler
    _I2C1_DO_RX->_rd2RegCompleteHandler@i2c1_master_example$F1250
    _I2C1_DO_RX->_rdBlkRegCompleteHandler
    _I2C1_DO_RX->_rdBlkRegCompleteHandler@i2c1_master_example$F1273
    _I2C1_DO_RX->_wr1RegCompleteHandler
    _I2C1_DO_RX->_wr1RegCompleteHandler@i2c1_master_example$F1256
    _I2C1_DO_RX->_wr2RegCompleteHandler
    _I2C1_DO_RX->_wr2RegCompleteHandler@i2c1_master_example$F1262
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnReset
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnStop
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler@i2c1_master_example$F1239
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler@i2c1_master_example$F1250
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler@i2c1_master_example$F1273
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler@i2c1_master_example$F1256
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler@i2c1_master_example$F1262
    _wr2RegCompleteHandler@i2c1_master_example$F1262->_I2C1_SetDataCompleteCallback
    _wr2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler@i2c1_master_example$F1256->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler@i2c1_master_example$F1273->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler@i2c1_master_example$F1250->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler@i2c1_master_example$F1239->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _I2C1_SetDataCompleteCallback->_I2C1_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART1_Transmit_ISR
    _INTERRUPT_InterruptManager->_EUSART2_Transmit_ISR
    _EUSART2_Receive_ISR->_EUSART2_RxDataHandler
    _EUSART2_DefaultErrorHandler->_EUSART2_RxDataHandler
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _main->_LIGHTBLUE_AccelSensor
    _begin->_setMagneticChannel
    _begin->_setOperatingMode
    _begin->_setTemperatureEn
    _begin->_setXYAxisRange
    _begin->_setZAxisRange
    _setZAxisRange->_getError
    _setXYAxisRange->_getError
    _setTemperatureEn->_getError
    _setOperatingMode->_getError
    _setMagneticChannel->_getError
    _writeRegister->_i2c_write1ByteRegister
    _getError->_getDeviceStatus
    _getDeviceStatus->_readRegister
    _isConnected->_TMAG5273_GetManufacture
    _TMAG5273_GetManufacture->_i2c_read2ByteRegister
    _getTemperatureEN->_readRegister
    _getOperatingMode->_readRegister
    _getMagneticChannel->_readRegister
    _getLowPower->_readRegister
    _getAngleEn->_readRegister
    _RN487X_DataReady->_RN487X_FilterData
    _RN487X_FilterData->_RN487X_MessageHandler
    _RN487X_MessageHandler->_rn487x_PrintMessage
    _LIGHTBLUE_TemperatureSensor->_TMAG5273_GetTemperatureValue
    _TMAG5273_GetTemperatureValue->_TMAG5273_CalcTemperature
    _TMAG5273_CalcTemperature->_i2c_read2ByteRegister
    _LIGHTBLUE_ParseIncomingPacket->_LIGHTBLUE_PerformAction
    _LIGHTBLUE_PerformAction->_LIGHTBLUE_SetErrorLedValue
    _LIGHTBLUE_UpdateErrorLed->_RN487X_SetOutputs
    _LIGHTBLUE_AccelSensor->_BMA253_GetAccelDataXYZ
    _BMA253_GetAccelDataXYZ->_BMA253_GetAccelDataY
    _BMA253_GetAccelDataXYZ->_BMA253_GetAccelDataZ
    _readRegister->_readRegisters
    _readRegisters->_i2c_readNBytes
    _I2C1_MasterRead->_I2C1_MasterOperation
    _BMA253_GetAccelDataZ->_i2c_read1ByteRegister
    _BMA253_NewAccelDataRdyZ->_i2c_read1ByteRegister
    _BMA253_GetAccelDataY->_i2c_read1ByteRegister
    _BMA253_NewAccelDataRdyY->_i2c_read1ByteRegister
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _I2C1_Poller->_I2C1_MasterFsm

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0 11727299
                                             41 BANK0      1     1      0
                                              0 BANK1      1     1      0
                       _EUSART1_Read *
                      _EUSART1_Write *
                _EUSART1_is_rx_ready *
                       _EUSART2_Read *
                      _EUSART2_Write *
                _EUSART2_is_rx_ready *
              _LIGHTBLUE_AccelSensor
               _LIGHTBLUE_Initialize
                 _LIGHTBLUE_LedState
      _LIGHTBLUE_ParseIncomingPacket
               _LIGHTBLUE_PushButton
      _LIGHTBLUE_SendProtocolVersion
           _LIGHTBLUE_SendSerialData
        _LIGHTBLUE_TemperatureSensor
                   _RN487X_DataReady
                        _RN487X_Init
                 _RN487X_IsConnected
                        _RN487X_Read
      _RN487X_SetAsyncMessageHandler
                       _RN487X_Write *
                  _SYSTEM_Initialize
            _TMR0_HasOverflowOccured
                              _begin
 ---------------------------------------------------------------------------------
 (1) _begin                                                2     2      0 8636024
                                             27 BANK0      2     2      0
                           _bitWrite
                         _getAngleEn
                           _getError
                        _getLowPower
                 _getMagneticChannel
                   _getOperatingMode
                   _getTemperatureEN
                        _isConnected
                 _setMagneticChannel
                   _setOperatingMode
                   _setTemperatureEn
                     _setXYAxisRange
                      _setZAxisRange
 ---------------------------------------------------------------------------------
 (2) _setZAxisRange                                        5     5      0 1186944
                                             22 BANK0      5     5      0
                           _bitWrite
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (2) _setXYAxisRange                                       5     5      0 1186944
                                             22 BANK0      5     5      0
                           _bitWrite
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (2) _setTemperatureEn                                     5     5      0 1186944
                                             22 BANK0      5     5      0
                           _bitWrite
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (2) _setOperatingMode                                     5     5      0 1187254
                                             22 BANK0      5     5      0
                           _bitWrite
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (2) _setMagneticChannel                                   5     5      0 1188990
                                             22 BANK0      5     5      0
                           _bitWrite
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (3) _writeRegister                                        2     1      1  384762
                                              6 BANK0      2     1      1
             _i2c_write1ByteRegister
 ---------------------------------------------------------------------------------
 (4) _i2c_write1ByteRegister                               3     1      2  375957
                                             11 COMMON     1     1      0
                                              4 BANK0      2     0      2
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _getError                                             7     7      0  377382
                                             15 BANK0      7     7      0
                            _bitRead
                    _getDeviceStatus
 ---------------------------------------------------------------------------------
 (4) _getDeviceStatus                                      1     1      0  367073
                                             14 BANK0      1     1      0
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _bitWrite                                            10     6      4   57569
                                              1 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 (2) _isConnected                                          0     0      0  376113
            _TMAG5273_GetManufacture
 ---------------------------------------------------------------------------------
 (3) _TMAG5273_GetManufacture                              4     2      2  376113
                                             13 BANK0      4     2      2
              _i2c_read2ByteRegister
                               _swap
 ---------------------------------------------------------------------------------
 (4) _swap                                                 9     7      2     268
                                              1 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) _getTemperatureEN                                     4     4      0  377156
                                             14 BANK0      4     4      0
                            _bitRead
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _getOperatingMode                                     5     5      0  377407
                                             14 BANK0      5     5      0
                            _bitRead
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _getMagneticChannel                                   7     7      0  378715
                                             14 BANK0      7     7      0
                            _bitRead
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _getLowPower                                          4     4      0  377156
                                             14 BANK0      4     4      0
                            _bitRead
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _getAngleEn                                           5     5      0  377407
                                             14 BANK0      5     5      0
                            _bitRead
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) _bitRead                                              9     6      3   10046
                                              1 COMMON     9     6      3
 ---------------------------------------------------------------------------------
 (1) _TMR0_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1485
                 _EUSART1_Initialize
                 _EUSART2_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     135
         _IOCAF6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCAF6_SetInterruptHandler                           2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     675
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     675
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _RN487X_SetAsyncMessageHandler                        3     0      3     418
                                              1 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (1) _RN487X_Read                                          0     0      0   10887
                   _RN487X_DataReady
 ---------------------------------------------------------------------------------
 (2) _RN487X_DataReady                                     0     0      0   10887
                  _RN487X_FilterData
                 _RN487X_is_rx_ready *
 ---------------------------------------------------------------------------------
 (3) _RN487X_FilterData                                    5     5      0   10887
                                             36 BANK0      5     5      0
              _RN487X_MessageHandler *
 _RN487X_Read@rn487x_interface$F1381 *
 ---------------------------------------------------------------------------------
 (4) _RN487X_MessageHandler                                3     1      2   10686
                                             33 BANK0      3     1      2
    _rn487x_PrintIndicatorCharacters
                _rn487x_PrintMessage
             _rn487x_PrintMessageEnd
           _rn487x_PrintMessageStart
                             _strstr
 ---------------------------------------------------------------------------------
 (5) _strstr                                               8     4      4    2291
                                              8 COMMON     4     0      4
                                              0 BANK0      4     4      0
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (6) _strncmp                                              7     1      6     519
                                              1 COMMON     7     1      6
 ---------------------------------------------------------------------------------
 (6) _strchr                                               6     2      4     282
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintMessageStart                             0     0      0    1691
                      _EUSART1_Write *
                      _EUSART2_Write *
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintMessageEnd                               0     0      0    1691
                      _EUSART1_Write *
                      _EUSART2_Write *
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintMessage                                 37    35      2    3050
                                              7 COMMON     4     2      2
                                              0 BANK0     33    33      0
                      _EUSART1_Write *
                      _EUSART2_Write *
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               6     4      2     246
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintIndicatorCharacters                      1     1      0    1753
                                              3 COMMON     1     1      0
                      _EUSART1_Write *
                      _EUSART2_Write *
 ---------------------------------------------------------------------------------
 (1) _RN487X_IsConnected                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RN487X_Init                                          0     0      0     872
                       _RN487X_Delay *
                  _RN487X_IndicateRx *
 _RN487X_Read@rn487x_interface$F1381 *
                       _RN487X_Reset *
               _RN487X_SetSystemMode *
                 _RN487X_is_rx_ready *
 ---------------------------------------------------------------------------------
 (3) _RN487X_is_rx_ready                                   0     0      0       0
                _EUSART1_is_rx_ready *
                _EUSART2_is_rx_ready *
 ---------------------------------------------------------------------------------
 (4) _EUSART2_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RN487X_SetSystemMode                                 1     0      1     108
                                              1 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (2) _RN487X_Reset                                         1     0      1     185
                                              1 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (2) _RN487X_IndicateRx                                    1     0      1     108
                                              1 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_TemperatureSensor                          7     7      0  383668
                                             23 BANK0      7     7      0
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitWord
       _TMAG5273_GetTemperatureValue
 ---------------------------------------------------------------------------------
 (2) _TMAG5273_GetTemperatureValue                         2     0      2  376082
                                             21 BANK0      2     0      2
           _TMAG5273_CalcTemperature
 ---------------------------------------------------------------------------------
 (3) _TMAG5273_CalcTemperature                             9     7      2  375947
                                             13 BANK0      8     6      2
              _i2c_read2ByteRegister
 ---------------------------------------------------------------------------------
 (4) _i2c_read2ByteRegister                                9     7      2  375811
                                              4 BANK0      9     7      2
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_SendSerialData                             3     3      0    4274
                                              7 COMMON     3     3      0
                       _RN487X_Write *
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_SendProtocolVersion                       23    23      0    7788
                                              0 BANK0     23    23      0
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitByte
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_PushButton                                 4     4      0    6862
                                              0 BANK0      4     4      0
           _LIGHTBLUE_GetButtonValue
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitByte
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_GetButtonValue                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_ParseIncomingPacket                        9     9      0   18822
                                             11 BANK0      9     9      0
            _LIGHTBLUE_PerformAction
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_PerformAction                              4     3      1   18277
                                              7 BANK0      4     3      1
                      _EUSART1_Write *
                      _EUSART2_Write *
         _LIGHTBLUE_SetErrorLedValue
 ---------------------------------------------------------------------------------
 (3) _LIGHTBLUE_SetErrorLedValue                           2     2      0   16293
                                             11 COMMON     1     1      0
                                              6 BANK0      1     1      0
           _LIGHTBLUE_UpdateErrorLed
 ---------------------------------------------------------------------------------
 (4) _LIGHTBLUE_UpdateErrorLed                             0     0      0   16262
                       _RN487X_Delay *
                _RN487X_EnterCmdMode
               _RN487X_EnterDataMode
                  _RN487X_SetOutputs
 ---------------------------------------------------------------------------------
 (5) _RN487X_SetOutputs                                    6     4      2    5093
                                              0 BANK0      6     4      2
         _RN487X_ReadDefaultResponse
                     _RN487X_SendCmd
 ---------------------------------------------------------------------------------
 (6) _RN487X_ReadDefaultResponse                           4     4      0     389
                                              3 COMMON     4     4      0
 _RN487X_Read@rn487x_interface$F1381 *
 ---------------------------------------------------------------------------------
 (5) _RN487X_EnterDataMode                                 0     0      0    5386
                     _RN487X_ReadMsg
                     _RN487X_SendCmd
 ---------------------------------------------------------------------------------
 (5) _RN487X_EnterCmdMode                                  0     0      0    5386
                     _RN487X_ReadMsg
                     _RN487X_SendCmd
 ---------------------------------------------------------------------------------
 (6) _RN487X_SendCmd                                       4     3      1    4316
                                              7 COMMON     4     3      1
                       _RN487X_Write *
                  _RN487X_is_tx_done *
 ---------------------------------------------------------------------------------
 (7) _RN487X_is_tx_done                                    0     0      0       0
                 _EUSART1_is_tx_done *
                 _EUSART2_is_tx_done *
 ---------------------------------------------------------------------------------
 (8) _EUSART2_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RN487X_ReadMsg                                       7     4      3    1070
                                              3 COMMON     7     4      3
 _RN487X_Read@rn487x_interface$F1381 *
 ---------------------------------------------------------------------------------
 (4) _RN487X_Read@rn487x_interface$F1381                   0     0      0      74
                       _EUSART1_Read *
                       _EUSART2_Read *
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Read                                         2     2      0      37
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Read                                         2     2      0      37
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _RN487X_Delay                                         2     0      2     397
                                              4 COMMON     2     0      2
                 _DELAY_milliseconds
 ---------------------------------------------------------------------------------
 (3) _DELAY_milliseconds                                   3     1      2     135
                                              1 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_LedState                                   4     4      0    6961
                                              0 BANK0      4     4      0
          _LIGHTBLUE_GetDataLedValue
         _LIGHTBLUE_GetErrorLedValue
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitByte
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_GetErrorLedValue                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_GetDataLedValue                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_AccelSensor                               19    19      0 2633367
                                             22 BANK0     19    19      0
             _BMA253_GetAccelDataXYZ
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitWord
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_SplitWord                                  3     1      2    2607
                                              9 COMMON     3     1      2
                _LIGHTBLUE_SplitByte
 ---------------------------------------------------------------------------------
 (3) _LIGHTBLUE_SplitByte                                  3     2      1    1911
                                              6 COMMON     3     2      1
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_SendPacket                                 4     3      1    4825
                                              7 COMMON     4     3      1
                       _RN487X_Write *
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     858
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _RN487X_Write                                         1     0      1    3185
                                              6 COMMON     1     0      1
                       _EUSART1_Read (ARG) *
                      _EUSART1_Write *
                       _EUSART2_Read (ARG) *
                      _EUSART2_Write *
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Write                                        2     1      1    1525
                                              1 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        2     1      1     166
                                              1 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (2) _BMA253_GetAccelDataXYZ                               6     6      0 2625633
                                             16 BANK0      6     6      0
               _BMA253_GetAccelDataY
               _BMA253_GetAccelDataZ
            _BMA253_NewAccelDataRdyY
            _BMA253_NewAccelDataRdyZ
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _readRegister                                         2     2      0  367039
                                             12 BANK0      2     2      0
                      _readRegisters
 ---------------------------------------------------------------------------------
 (4) _readRegisters                                        5     3      2  366943
                                              7 BANK0      5     3      2
                     _i2c_readNBytes
 ---------------------------------------------------------------------------------
 (5) _i2c_readNBytes                                       4     1      3  366009
                                             11 COMMON     1     1      0
                                              4 BANK0      3     0      3
                         _I2C1_Close
                    _I2C1_MasterRead
                          _I2C1_Open
                     _I2C1_SetBuffer
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterRead                                      0     0      0  362109
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (3) _BMA253_GetAccelDataZ                                 6     6      0  752774
                                             10 BANK0      6     6      0
            _BMA253_NewAccelDataRdyZ
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_NewAccelDataRdyZ                              1     1      0  376335
                                             11 COMMON     1     1      0
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_GetAccelDataY                                 6     6      0  752774
                                             10 BANK0      6     6      0
            _BMA253_NewAccelDataRdyY
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_NewAccelDataRdyY                              1     1      0  376335
                                             11 COMMON     1     1      0
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (4) _i2c_read1ByteRegister                                6     5      1  376301
                                              4 BANK0      6     5      1
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetAddressNackCallback                          4     0      4    3815
                                              5 COMMON     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (5) _I2C1_Open                                            2     2      0      68
                                              1 COMMON     2     2      0
                _I2C1_MasterClearIrq
                    _I2C1_MasterOpen
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterWrite                                     0     0      0  362109
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterOperation                                 2     2      0  362109
                                              2 BANK0      2     2      0
                   _I2C1_MasterStart
                        _I2C1_Poller
 ---------------------------------------------------------------------------------
 (7) _I2C1_Poller                                          0     0      0  362041
                     _I2C1_MasterFsm
            _I2C1_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterWaitForEvent                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterFsm                                       2     2      0  362041
                                              0 BANK0      2     2      0
               _I2C1_DO_ADDRESS_NACK *
                       _I2C1_DO_IDLE *
                       _I2C1_DO_RCEN *
                      _I2C1_DO_RESET *
                         _I2C1_DO_RX *
                     _I2C1_DO_RX_ACK *
            _I2C1_DO_RX_NACK_RESTART *
               _I2C1_DO_RX_NACK_STOP *
              _I2C1_DO_SEND_ADR_READ *
             _I2C1_DO_SEND_ADR_WRITE *
               _I2C1_DO_SEND_RESTART *
          _I2C1_DO_SEND_RESTART_READ *
         _I2C1_DO_SEND_RESTART_WRITE *
                  _I2C1_DO_SEND_STOP *
                         _I2C1_DO_TX *
                   _I2C1_DO_TX_EMPTY *
                _I2C1_MasterClearIrq
                  _I2C1_MasterIsNack
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_TX_EMPTY                                     2     2      0   90487
                                              9 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterSetIrq
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSetIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_TX                                           2     2      0   90518
                                              9 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterIsNack                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART_WRITE                          0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART_READ                           0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_SEND_ADR_WRITE                               0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_SEND_ADR_READ                                0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendTxData                               1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_ACK                                       0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX                                           2     2      0   90487
                                              9 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
            _I2C1_DO_RX_NACK_RESTART
               _I2C1_DO_RX_NACK_STOP
               _I2C1_MasterGetRxData
                 _I2C1_MasterSendAck
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendAck                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterGetRxData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_NACK_STOP                                 0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_NACK_RESTART                              0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendNack                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RESET                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RCEN                                         0     0      0       0
                 _I2C1_MasterStartRx
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterStartRx                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_IDLE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_ADDRESS_NACK                                 2     2      0   90487
                                              9 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _wr2RegCompleteHandler@i2c1_master_example$F1262     1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr2RegCompleteHandler                               1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr1RegCompleteHandler@i2c1_master_example$F1256     1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr1RegCompleteHandler                               1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rdBlkRegCompleteHandler@i2c1_master_example$F1273   1     0      1    9035
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rdBlkRegCompleteHandler                             1     0      1    9035
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd2RegCompleteHandler@i2c1_master_example$F1250     1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd2RegCompleteHandler                               1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd1RegCompleteHandler@i2c1_master_example$F1239     1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd1RegCompleteHandler                               1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetDataCompleteCallback                         3     0      3    5479
                                              5 COMMON     3     0      3
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetCallback                                     4     1      3    1257
                                              1 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetBuffer                                       3     1      2    3494
                                              1 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_STOP                                   0     0      0       0
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterStop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART                                0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterEnableRestart                            0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_CallbackReturnStop                             1     0      1       0
                                              8 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (10) _I2C1_CallbackReturnReset                            1     0      1     385
                                              8 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (19) NULL(Fake)                                           1     0      1       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_Close                                           1     1      0      37
                                              1 COMMON     1     1      0
                _I2C1_MasterClearIrq
                   _I2C1_MasterClose
              _I2C1_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _INTERRUPT_InterruptManager                          0     0      0       0
                                NULL *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (17) _PIN_MANAGER_IOC                                     0     0      0       0
                         _IOCAF6_ISR
 ---------------------------------------------------------------------------------
 (18) _IOCAF6_ISR                                          0     0      0       0
                                NULL *
     _IOCAF6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _IOCAF6_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART2_Transmit_ISR                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (17) _EUSART2_Receive_ISR                                 0     0      0       0
                                NULL *
        _EUSART2_DefaultErrorHandler *
 _EUSART2_DefaultFramingErrorHandler *
 _EUSART2_DefaultOverrunErrorHandler *
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (18) _EUSART2_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _EUSART2_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _EUSART2_DefaultErrorHandler                         0     0      0       0
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (18) _EUSART2_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (17) _EUSART1_Transmit_ISR                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (17) _EUSART1_Receive_ISR                                 0     0      0       0
                                NULL *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (18) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (18) _EUSART1_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (19) NULL(Fake)                                           1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read *
   _EUSART1_Write *
   _EUSART1_is_rx_ready *
   _EUSART2_Read *
   _EUSART2_Write *
   _EUSART2_is_rx_ready *
   _LIGHTBLUE_AccelSensor *
     _BMA253_GetAccelDataXYZ
       _BMA253_GetAccelDataY
         _BMA253_NewAccelDataRdyY
           _i2c_read1ByteRegister
             _I2C1_Close
               _I2C1_MasterClearIrq
               _I2C1_MasterClose
               _I2C1_MasterDisableIrq
             _I2C1_MasterWrite
               _I2C1_MasterOperation
                 _I2C1_MasterStart
                 _I2C1_Poller
                   _I2C1_MasterFsm
                     _I2C1_DO_ADDRESS_NACK *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_SEND_RESTART *
                         _I2C1_MasterEnableRestart
                       _I2C1_DO_SEND_STOP *
                         _I2C1_MasterStop
                       _rd1RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                           _I2C1_SetCallback
                       _rd1RegCompleteHandler@i2c1_master_example$F1239 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rd2RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rd2RegCompleteHandler@i2c1_master_example$F1250 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rdBlkRegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1273 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr1RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr1RegCompleteHandler@i2c1_master_example$F1256 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr2RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr2RegCompleteHandler@i2c1_master_example$F1262 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                     _I2C1_DO_IDLE *
                     _I2C1_DO_RCEN *
                       _I2C1_MasterStartRx
                     _I2C1_DO_RESET *
                     _I2C1_DO_RX *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_RX_NACK_RESTART *
                         _I2C1_MasterSendNack
                       _I2C1_DO_RX_NACK_STOP *
                         _I2C1_MasterSendNack
                       _I2C1_MasterGetRxData *
                       _I2C1_MasterSendAck *
                       _rd1RegCompleteHandler *
                       _rd1RegCompleteHandler@i2c1_master_example$F1239 *
                       _rd2RegCompleteHandler *
                       _rd2RegCompleteHandler@i2c1_master_example$F1250 *
                       _rdBlkRegCompleteHandler *
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1273 *
                       _wr1RegCompleteHandler *
                       _wr1RegCompleteHandler@i2c1_master_example$F1256 *
                       _wr2RegCompleteHandler *
                       _wr2RegCompleteHandler@i2c1_master_example$F1262 *
                     _I2C1_DO_RX_ACK *
                       _I2C1_MasterSendAck
                     _I2C1_DO_RX_NACK_RESTART *
                     _I2C1_DO_RX_NACK_STOP *
                     _I2C1_DO_SEND_ADR_READ *
                       _I2C1_MasterSendTxData
                     _I2C1_DO_SEND_ADR_WRITE *
                       _I2C1_MasterSendTxData
                     _I2C1_DO_SEND_RESTART *
                     _I2C1_DO_SEND_RESTART_READ *
                       _I2C1_MasterEnableRestart
                     _I2C1_DO_SEND_RESTART_WRITE *
                       _I2C1_MasterEnableRestart
                     _I2C1_DO_SEND_STOP *
                     _I2C1_DO_TX *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_SEND_RESTART_READ *
                       _I2C1_DO_SEND_RESTART_WRITE *
                       _I2C1_DO_SEND_STOP *
                       _I2C1_MasterIsNack *
                       _I2C1_MasterSendTxData *
                       _rd1RegCompleteHandler *
                       _rd1RegCompleteHandler@i2c1_master_example$F1239 *
                       _rd2RegCompleteHandler *
                       _rd2RegCompleteHandler@i2c1_master_example$F1250 *
                       _rdBlkRegCompleteHandler *
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1273 *
                       _wr1RegCompleteHandler *
                       _wr1RegCompleteHandler@i2c1_master_example$F1256 *
                       _wr2RegCompleteHandler *
                       _wr2RegCompleteHandler@i2c1_master_example$F1262 *
                     _I2C1_DO_TX_EMPTY *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_SEND_RESTART *
                       _I2C1_DO_SEND_STOP *
                       _I2C1_MasterSetIrq *
                       _rd1RegCompleteHandler *
                       _rd1RegCompleteHandler@i2c1_master_example$F1239 *
                       _rd2RegCompleteHandler *
                       _rd2RegCompleteHandler@i2c1_master_example$F1250 *
                       _rdBlkRegCompleteHandler *
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1273 *
                       _wr1RegCompleteHandler *
                       _wr1RegCompleteHandler@i2c1_master_example$F1256 *
                       _wr2RegCompleteHandler *
                       _wr2RegCompleteHandler@i2c1_master_example$F1262 *
                     _I2C1_MasterClearIrq *
                     _I2C1_MasterIsNack *
                   _I2C1_MasterWaitForEvent
             _I2C1_Open
               _I2C1_MasterClearIrq
               _I2C1_MasterOpen
             _I2C1_SetAddressNackCallback
               _I2C1_SetCallback
             _I2C1_SetBuffer
             _I2C1_SetDataCompleteCallback
         _i2c_read1ByteRegister
       _BMA253_GetAccelDataZ
         _BMA253_NewAccelDataRdyZ
           _i2c_read1ByteRegister
         _i2c_read1ByteRegister
       _BMA253_NewAccelDataRdyY
       _BMA253_NewAccelDataRdyZ
       _readRegister
         _readRegisters
           _i2c_readNBytes
             _I2C1_Close
             _I2C1_MasterRead
               _I2C1_MasterOperation
             _I2C1_Open
             _I2C1_SetBuffer
     _LIGHTBLUE_SendPacket
       _RN487X_Write *
         _EUSART1_Read (ARG) *
         _EUSART1_Write (ARG) *
         _EUSART2_Read (ARG) *
         _EUSART2_Write (ARG) *
         _strlen (ARG) *
       _strlen *
     _LIGHTBLUE_SplitWord
       _LIGHTBLUE_SplitByte
         _strlen
   _LIGHTBLUE_Initialize *
   _LIGHTBLUE_LedState *
     _LIGHTBLUE_GetDataLedValue
     _LIGHTBLUE_GetErrorLedValue
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitByte
   _LIGHTBLUE_ParseIncomingPacket *
     _LIGHTBLUE_PerformAction
       _EUSART1_Write *
       _EUSART2_Write *
       _LIGHTBLUE_SetErrorLedValue *
         _LIGHTBLUE_UpdateErrorLed
           _RN487X_Delay *
             _DELAY_milliseconds
           _RN487X_EnterCmdMode *
             _RN487X_ReadMsg
               _RN487X_Read@rn487x_interface$F1381 *
                 _EUSART1_Read *
                 _EUSART2_Read *
             _RN487X_SendCmd
               _RN487X_Write *
               _RN487X_is_tx_done *
                 _EUSART1_is_tx_done *
                 _EUSART2_is_tx_done *
           _RN487X_EnterDataMode *
             _RN487X_ReadMsg
             _RN487X_SendCmd
           _RN487X_SetOutputs *
             _RN487X_ReadDefaultResponse
               _RN487X_Read@rn487x_interface$F1381 *
             _RN487X_SendCmd
   _LIGHTBLUE_PushButton *
     _LIGHTBLUE_GetButtonValue
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitByte
   _LIGHTBLUE_SendProtocolVersion *
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitByte
     _strlen
   _LIGHTBLUE_SendSerialData *
     _RN487X_Write *
     _strlen *
   _LIGHTBLUE_TemperatureSensor *
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitWord
     _TMAG5273_GetTemperatureValue
       _TMAG5273_CalcTemperature
         _i2c_read2ByteRegister
           _I2C1_Close
           _I2C1_MasterWrite
           _I2C1_Open
           _I2C1_SetAddressNackCallback
           _I2C1_SetBuffer
           _I2C1_SetDataCompleteCallback
   _RN487X_DataReady *
     _RN487X_FilterData
       _RN487X_MessageHandler *
         _rn487x_PrintIndicatorCharacters
           _EUSART1_Write *
           _EUSART2_Write *
         _rn487x_PrintMessage
           _EUSART1_Write *
           _EUSART2_Write *
           _strcpy *
           _strlen *
         _rn487x_PrintMessageEnd
           _EUSART1_Write *
           _EUSART2_Write *
         _rn487x_PrintMessageStart
           _EUSART1_Write *
           _EUSART2_Write *
         _strstr
           _strchr
           _strlen
           _strncmp
       _RN487X_Read@rn487x_interface$F1381 *
     _RN487X_is_rx_ready *
       _EUSART1_is_rx_ready *
       _EUSART2_is_rx_ready *
   _RN487X_Init *
     _RN487X_Delay *
     _RN487X_IndicateRx *
     _RN487X_Read@rn487x_interface$F1381 *
     _RN487X_Reset *
     _RN487X_SetSystemMode *
     _RN487X_is_rx_ready *
   _RN487X_IsConnected *
   _RN487X_Read *
     _RN487X_DataReady
   _RN487X_SetAsyncMessageHandler *
   _RN487X_Write *
   _SYSTEM_Initialize *
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCAF6_SetInterruptHandler
     _PMD_Initialize
     _TMR0_Initialize
   _TMR0_HasOverflowOccured *
   _begin *
     _bitWrite
     _getAngleEn
       _bitRead
       _readRegister
     _getError
       _bitRead
       _getDeviceStatus
         _readRegister
     _getLowPower
       _bitRead
       _readRegister
     _getMagneticChannel
       _bitRead
       _readRegister
     _getOperatingMode
       _bitRead
       _readRegister
     _getTemperatureEN
       _bitRead
       _readRegister
     _isConnected
       _TMAG5273_GetManufacture
         _i2c_read2ByteRegister
         _swap
     _setMagneticChannel
       _bitWrite
       _getError
       _readRegister
       _writeRegister
         _i2c_write1ByteRegister
           _I2C1_Close
           _I2C1_MasterWrite
           _I2C1_Open
           _I2C1_SetAddressNackCallback
           _I2C1_SetBuffer
           _I2C1_SetDataCompleteCallback
     _setOperatingMode
       _bitWrite
       _getError
       _readRegister
       _writeRegister
     _setTemperatureEn
       _bitWrite
       _getError
       _readRegister
       _writeRegister
     _setXYAxisRange
       _bitWrite
       _getError
       _readRegister
       _writeRegister
     _setZAxisRange
       _bitWrite
       _getError
       _readRegister
       _writeRegister

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART1_Receive_ISR *
     NULL(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _EUSART2_Receive_ISR *
     NULL(Fake) *
     _EUSART2_DefaultErrorHandler *
       _EUSART2_RxDataHandler
     _EUSART2_DefaultFramingErrorHandler *
     _EUSART2_DefaultOverrunErrorHandler *
     _EUSART2_RxDataHandler *
   _EUSART2_Transmit_ISR *
   _PIN_MANAGER_IOC *
     _IOCAF6_ISR
       NULL(Fake) *
       _IOCAF6_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2A      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     22A       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      1      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      4D      10       96.2%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      40      12       80.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      50      14      100.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      50      16      100.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0      50      18      100.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              50      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BANK23              50      0       0      52        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BANK24              50      0       0      54        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BANK25              20      0       0      56        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     22A      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Dec 20 15:01:47 2024

                                 _eusart1TxBufferRemaining 005B  
                                   ?_EUSART2_RxDataHandler 0070  
                          __end_of_TMR0_HasOverflowOccured 1EF2  
                                                       l35 16A3  
                                                       l44 0C3C  
                                                       l53 114E  
                                                       l29 1675  
                                                       l56 115F  
                                      _do_I2C_SEND_RESTART 0000  
                                         ?_getDeviceStatus 0070  
                                  getLowPower@lowPowerMode 0031  
                                                      l121 1F03  
                                                      l202 1F0F  
                                                      l130 1183  
                                                      l211 10A5  
                                                      l124 12C2  
                                                      l205 1F09  
                                                      l133 14D6  
                                                      l221 082B  
                                                      l214 1346  
                                                      l230 084D  
                                                      l127 16D1  
                                                      l208 1EEC  
                                                      l224 082D  
                                                      l145 0705  
                                                      l139 1794  
                                                      l164 05B1  
                                                      l501 10D7  
                                                      l510 172F  
                                                      l193 0FFF  
                                                      l522 10E8  
                                                      l187 065B  
                                                      l196 1087  
                                                      l534 0B9E  
                                                      l199 1760  
                                                      l537 10F9  
                                                      l561 1260  
                                                      l730 111B  
                                                      l546 0A7E  
                                                      l802 1FFA  
                                                      l811 1FEF  
                                                      l549 110A  
                                                      l733 112C  
                                                      l805 1FFD  
                                                      l742 1278  
                                                      l814 1FF2  
                                                      l822 1026  
                                                      l807 1FFF  
                                                      l736 113D  
                                                      l816 1FF4  
                                                      l832 1647  
                                                      l921 1218  
                                                      l825 1028  
                                                      l842 1444  
                                                      l739 10C6  
                                                      l579 13BC  
                                                      l827 1029  
                                                      l819 101F  
                                                      l835 0BEC  
                                                      l908 0F73  
                                                      l933 0B0A  
                                                      l829 102A  
                                                      l926 132A  
                                                      l783 1E8B  
                                                      l855 0AC2  
                                                      l792 1FB5  
                                                      l848 17C9  
                                                      l952 1290  
                                                      l786 101E  
                                                      l795 1FBF  
                                                      l964 1036  
                                                      l789 1FAB  
                                                      l973 0E8B  
                                                      l957 1362  
                                                      l798 1F74  
                                                      l886 16FF  
                                                      l974 0E87  
                                                      l879 0EEB  
                                                      l976 0E8D  
                                                      l897 15ED  
                                             ?_RN487X_Init 0070  
                                             ?_RN487X_Read 0070  
                               __end_of_DELAY_milliseconds 11EC  
                             LIGHTBLUE_SendPacket@packetID 007A  
                                    ?_I2C1_MasterOperation 0070  
                   __end_of_EUSART2_SetFramingErrorHandler 1F3A  
                           _EUSART2_SetFramingErrorHandler 1F34  
                               __end_of_getMagneticChannel 04BD  
                               __end_of_setMagneticChannel 0377  
                                                      wreg 0009  
                                   ?_I2C1_MasterSendTxData 0070  
                                     _I2C1_DO_RX_NACK_STOP 1ECF  
                                ?_I2C1_MasterEnableRestart 0070  
                          BMA253_NewAccelDataRdyY@yNewData 007B  
                                     I2C1_SetBuffer@buffer 0073  
                                                     l1111 1F3F  
                                                     l1120 1F45  
                                                     l1201 1F98  
                                                     l1114 1F33  
                                                     l1051 09B9  
                                                     l1220 1533  
                                                     l1060 1EA7  
                                                     l1204 1EAB  
                                                     l1108 1F39  
                                  ??_rd2RegCompleteHandler 0079  
                                                     l1117 1F4B  
                                                     l1070 14FC  
                                                     l1214 1571  
                                                     l1223 154A  
                                                     l1057 1F8F  
                                                     l2130 10B5  
                                                     l1075 1503  
                                                     l1219 152A  
                                                     l1076 150C  
                                                     l2220 07A0  
                                                     l1261 1F21  
                                                     l2117 07FE  
                                                     l1270 1F27  
                                                     l2046 04FC  
                                                     l1079 1523  
                                                     l2127 11D5  
                                            ?_RN487X_Delay 0074  
                                                     l2136 1079  
                                                     l1264 1F15  
                                                     l1352 1201  
                                                     l2240 0373  
                                                     l2216 079D  
                                                     l2057 0563  
                                                     l1258 1F1B  
                                                     l1267 1F2D  
                                                     l1195 097B  
                                                     l1355 1FC9  
                                                     l1443 0B53  
                                                     l2139 1012  
                                                     l2332 093D  
                                                     l3310 12A9  
                                                     l1454 1F51  
                                                     l1358 1FD3  
                                                     l2246 0376  
                                                     l2350 0900  
                                                     l2326 09F8  
                                                     l3304 130F  
                                                     l1802 1EB5  
                                                     l1474 1197  
                                                     l2442 0815  
                                                     l1811 0CC5  
                                                     l3331 139D  
                                                     l3323 0E31  
                                                     l1492 1EF1  
                                                     l2452 0D34  
                                                     l1901 1E6D  
                                                     l1805 1F86  
                                                     l1750 1248  
                                                     l1814 0CE1  
                                                     l1742 1FA1  
                                                     l2550 0D87  
                                                     l2462 04BC  
                                                     l1911 1050  
                                                     l2455 0D33  
                                                     l1920 1EB0  
                                                     l1808 1F6C  
                                                     l3336 0C8E  
                                                     l2640 0DDC  
                                                     l1745 17FE  
                                                     l3329 1380  
                                                     l1914 1E73  
                                                     l1762 1EE2  
                                                     l1746 17FF  
                                                     l1923 1E7C  
                                                     l1827 0A15  
                                                     l2547 0D88  
                                                     l1932 1E79  
                                                     l1772 1FDE  
                                                     l1828 0A3B  
                                                     l1756 13DD  
                                                     l2580 11C0  
                                                     l2636 1007  
                                                     l1917 1E85  
                                                     l1941 1EA3  
                                                     l1845 161A  
                                                     l1935 1E7F  
                                                     l1839 1F64  
                                                     l1863 1EBA  
                                                     l1759 1EE7  
                                                     l1944 1E9F  
                                                     l1872 1EC9  
                                                     l2672 148C  
                                                     l1769 106B  
                                                     l1929 1E82  
                                                     l1881 1ED8  
                                                     l2681 11AB  
                                                     l1962 1E70  
                                                     l1938 1EF7  
                                                     l1866 1EBF  
                                                     l1890 1599  
                                                     l1778 1FE9  
                                                     l2690 137F  
                                                     l1875 1ECE  
                                                     l1795 1043  
                                                     l2675 14B0  
                                                     l1884 1EDD  
                                                     l1972 1EFD  
                                                     l1980 11EB  
                                                     l1789 1468  
                                                     l1965 1E88  
                                                     l1869 1EC4  
                                                     l1878 1ED3  
                                                     l2678 12DB  
                                                     l1959 1E76  
                                                     l1799 15C2  
                                                     l2687 105D  
                                                     l1968 1EF8  
                                                     l1898 1E6B  
                          BMA253_NewAccelDataRdyZ@zNewData 007B  
                                                     STR_1 2000  
                                                     STR_2 1891  
                                                     STR_3 1891  
                                                     STR_4 187A  
                                                     STR_5 187A  
                                                     STR_6 2000  
                                                     _LATA 0018  
                                                     _LATB 0019  
                                                     _LATC 001A  
                                                     _LATE 001C  
                               LIGHTBLUE_PushButton@button 0020  
                                                     _PMD0 0796  
                                                     _PMD1 0797  
                                                     _PMD2 0798  
                                                     _PMD3 0799  
                                                     _PMD4 079A  
                                                     _PMD5 079B  
                                                     _PMD6 079C  
                                                     _PMD7 079D  
                                                     u9600 0C97  
                                                     u9601 0C96  
                                                     u9610 0CDE  
                                                     u9611 0CDD  
                                                     u9620 0A10  
                                                     u9700 17D2  
                                                     u9621 0A0F  
                                                     u9701 17D1  
                                                     u9710 1238  
                                                     u9630 1EFD  
                                                     u9711 1237  
                                                     u9631 1EFC  
                                                     u9640 15A2  
                                                     u9800 152F  
                                                     u9720 14DD  
                                                     u9641 15A1  
                                                     u9801 152E  
                                                     u9721 14DC  
                                                     u9650 15AA  
                                                     u9810 1545  
                                                     u9730 14F3  
                                                     u9651 15A9  
                                                     u9811 1544  
                                                     u9731 14F2  
                                                     u9580 144C  
                                                     u9660 1043  
                                                     u9820 13A8  
                                                     u9740 1503  
                                                     u9900 15EC  
                                                     u9581 144B  
                                                     u9661 1042  
                                                     u9821 13A7  
                                                     u9741 1502  
                                                     u9901 15EB  
                                                     u9590 1064  
                                                     u9670 1049  
                                                     u9830 13BC  
                                                     u9750 1508  
                                                     u9910 0F12  
                                                     u9591 1063  
                                                     u9671 1048  
                                                     u9831 13BB  
                                                     u9751 1507  
                                                     u9911 0F11  
                                                     u9680 13C6  
                                                     u9760 151E  
                                                     u9840 12A3  
                                                     u9920 0F18  
                                                     u9681 13C5  
                                                     u9761 151D  
                                                     u9841 12A2  
                                                     u9921 0F17  
                                                     u9690 13CE  
                                                     u9850 11EB  
                                                     u9770 1551  
                                                     u9930 0F21  
                                                     u9691 13CD  
                                                     u9851 11EA  
                                                     u9771 1550  
                                                     u9931 0F20  
                                                     u9780 1568  
                                                     u9940 0F27  
                                                     u9860 130F  
                                                     u9781 1567  
                                                     u9941 0F26  
                                                     u9861 130E  
                                                     u9790 152A  
                                                     u9870 16E3  
                                                     u9950 0C49  
                                                     u9791 1529  
                                                     u9871 16E2  
                                                     u9951 0C48  
                                                     u9880 16FF  
                                                     u9960 0C61  
                                                     u9881 16FE  
                                                     u9961 0C60  
                                                     u9890 15E0  
                                                     u9970 0C6A  
                                                     u9891 15DF  
                                                     u9971 0C69  
                                                     u9980 0C70  
                                                     u9981 0C6F  
                                                     u9990 0C80  
                                                     u9991 0C7F  
                                            ?_RN487X_Reset 0071  
                          BMA253_GetAccelDataXYZ@accelData 0033  
                                                     _WPUA 1F39  
                                                     _WPUB 1F44  
                                                     _WPUC 1F4F  
                                                     _WPUE 1F65  
                                    ??_EUSART2_Receive_ISR 0071  
                                  ??_wr2RegCompleteHandler 0079  
                                         ??_I2C1_MasterFsm 0020  
                                            _EUSART1_Write 1524  
                                            ?_RN487X_Write 0076  
                                            _EUSART2_Write 14FD  
                                ??_I2C1_CallbackReturnStop 0079  
                                BMA253_GetAccelDataXYZ@lSB 0031  
                                BMA253_GetAccelDataXYZ@mSB 0032  
                                                     __hex 014C  
                                                     _main 04BD  
                                                     _peek 0066  
                                            ?_EUSART1_Read 0070  
                                                     _uart 1800  
                                            ?_EUSART2_Read 0070  
                                           _RN487X_ReadMsg 15C3  
                                                     fsr0h 0005  
                                                     fsr1h 0007  
                                                     indf0 0000  
                                                     fsr0l 0004  
                                                     indf1 0001  
                                                     fsr1l 0006  
                                                     _swap 1198  
                                                     btemp 007E  
                            ??_LIGHTBLUE_TemperatureSensor 007C  
                                           _RN487X_SendCmd 16D2  
                         RN487X_SetOutputs@stateHighNibble 0025  
                                                     start 0055  
                                           _setXYAxisRange 09BA  
                                         ??_I2C1_SetBuffer 0073  
                             __end_of_EUSART2_Transmit_ISR 1400  
                              __end_of_RN487X_EnterCmdMode 1219  
                                             _statusBuffer 02A0  
                                         _setTemperatureEn 08C4  
                                        ?_getTemperatureEN 0070  
                                  ??_LIGHTBLUE_AccelSensor 007C  
                            I2C1_CallbackReturnStop@funPtr 0078  
                                    __end_of_setZAxisRange 093E  
                    __end_of_LIGHTBLUE_ParseIncomingPacket 065C  
                            _LIGHTBLUE_ParseIncomingPacket 0590  
                                  __end_of_TMR0_Initialize 1198  
                                             _do_I2C_RESET 0000  
                                       ??_getTemperatureEN 002E  
                                   _i2c_write1ByteRegister 1700  
                                         bitWrite@position 0073  
                            __end_of_OSCILLATOR_Initialize 1FCA  
                                                    l13001 1570  
                                                    l13011 1534  
                                                    l13013 153B  
                                                    l13021 1548  
                                                    l13005 1524  
                                                    l13101 0EF7  
                                                    l13031 13B4  
                                                    l13023 139F  
                                                    l13015 153F  
                                                    l13007 1524  
                                                    l13111 0F1B  
                                                    l13103 0F01  
                                                    l13025 139F  
                                                    l13017 1545  
                                                    l13009 152F  
                                                    l13033 1013  
                                                    l13113 0F21  
                                                    l13105 0F0C  
                                                    l14001 0814  
                                                    l13027 13A8  
                                                    l13131 10A8  
                                                    l13019 1546  
                                                    l13043 1291  
                                                    l13035 1FA2  
                                                    l13203 1202  
                                                    l13115 0F27  
                                                    l13107 0F12  
                                                    l13123 0F2B  
                                                    l13211 0AC3  
                                                    l14011 0CF5  
                                                    l13053 1FDF  
                                                    l13029 13B1  
                                                    l13045 1296  
                                                    l13061 11D7  
                                                    l13205 1209  
                                                    l13117 0F29  
                                                    l13109 0F18  
                                                    l13125 0F33  
                                                    l13221 0AD7  
                                                    l13213 0ACA  
                                                    l13141 0C4C  
                                                    l13301 0E26  
                                                    l14101 03F0  
                                                    l14013 0D03  
                                                    l14005 0CE2  
                                                    l12511 105F  
                                                    l13055 1EDE  
                                                    l13047 129A  
                                                    l13063 11DF  
                                                    l13039 1FAC  
                                                    l13071 16D5  
                                                    l13207 120F  
                                                    l13127 0F72  
                                                    l13231 0AE7  
                                                    l13223 0ADB  
                                                    l13215 0ACE  
                                                    l13151 0C80  
                                                    l13143 0C58  
                                                    l13135 0C3D  
                                                    l13303 0E2F  
                                                    l14111 03FC  
                                                    l14103 03F5  
                                                    l14015 0D08  
                                                    l14023 0D0F  
                                                    l14007 0CE2  
                                                    l13311 170A  
                                                    l12521 1E7D  
                                                    l12513 1064  
                                                    l12505 1446  
                                                    l12601 1EF2  
                                                    l13321 113E  
                                                    l13049 12A3  
                                                    l13081 15C5  
                                                    l13073 16E3  
                                                    l13241 0AF5  
                                                    l13233 0AE9  
                                                    l13225 0ADE  
                                                    l13217 0AD1  
                                                    l13065 12F7  
                                                    l13161 139B  
                                                    l13145 0C61  
                                                    l13137 0C49  
                                                    l14201 048F  
                                                    l14113 0401  
                                                    l14025 0D14  
                                                    l14033 0D1B  
                                                    l14017 0D0D  
                                                    l14009 0CE8  
                                                    l13401 119A  
                                                    l13313 1713  
                                                    l15001 04CB  
                                                    l12515 106A  
                                                    l12507 144C  
                                                    l12523 1E9C  
                                                    l13171 0B5C  
                                                    l13323 114D  
                                                    l13411 164A  
                                                    l13059 11D6  
                                                    l13083 15CF  
                                                    l13091 15E6  
                                                    l13075 16F5  
                                                    l13251 0B07  
                                                    l13243 0AF9  
                                                    l13235 0AEB  
                                                    l13227 0AE0  
                                                    l13219 0AD3  
                                                    l13067 12F9  
                                                    l13155 1380  
                                                    l13147 0C6A  
                                                    l14211 049B  
                                                    l14131 0421  
                                                    l14115 0406  
                                                    l14123 040D  
                                                    l14035 0D20  
                                                    l14043 0D27  
                                                    l14027 0D19  
                                                    l13403 119C  
                                                    l13315 171B  
                                                    l13307 1701  
                                                    l15011 04E6  
                                                    l15003 04CE  
                                                    l12509 145B  
                                                    l12517 1FD4  
                                                    l12525 10C7  
                                                    l12533 10D8  
                                                    l12541 10E9  
                                                    l12605 1EAD  
                                                    l12613 1EBB  
                                                    l12621 1EC8  
                                                    l13181 0B83  
                                                    l13173 0B66  
                                                    l13165 0B56  
                                                    l13413 1652  
                                                    l13421 1680  
                                                    l13093 15EC  
                                                    l13085 15E0  
                                                    l13077 16F9  
                                                    l13069 16D3  
                                                    l13245 0AFD  
                                                    l13237 0AEF  
                                                    l13229 0AE4  
                                                    l13341 0A59  
                                                    l13333 0A3E  
                                                    l14301 12AA  
                                                    l13157 138A  
                                                    l13149 0C70  
                                                    l13501 1F10  
                                                    l14213 04A0  
                                                    l14221 04A7  
                                                    l14141 042D  
                                                    l14125 0412  
                                                    l14117 040B  
                                                    l14109 03F7  
                                                    l14061 038B  
                                                    l14045 0D2C  
                                                    l14037 0D25  
                                                    l13405 11AB  
                                                    l13317 1724  
                                                    l13309 1701  
                                                    l15021 052D  
                                                    l15013 04F6  
                                                    l15005 04D4  
                                                    l12519 1E7A  
                                                    l12527 10CF  
                                                    l12535 10E0  
                                                    l12543 10F1  
                                                    l12551 1102  
                                                    l12711 0CDE  
                                                    l12607 1EB6  
                                                    l12615 1EBE  
                                                    l12631 1ED4  
                                                    l13191 0B9D  
                                                    l13183 0B8D  
                                                    l13175 0B6F  
                                                    l13415 1663  
                                                    l13327 114F  
                                                    l13423 1691  
                                                    l13431 174D  
                                                    l14311 16A6  
                                                    l13263 1F6D  
                                                    l13079 15C3  
                                                    l13255 1310  
                                                    l13247 0AFF  
                                                    l13239 0AF3  
                                                    l13351 132B  
                                                    l13343 0A62  
                                                    l13335 0A3E  
                                                    l14303 12AC  
                                                    l13271 1423  
                                                    l13159 138B  
                                                    l13503 1F4C  
                                                    l14223 04AC  
                                                    l14215 04A5  
                                                    l14207 0491  
                                                    l14143 0432  
                                                    l14151 0439  
                                                    l14127 0417  
                                                    l14071 03BF  
                                                    l14063 0399  
                                                    l14055 0377  
                                                    l14047 0D31  
                                                    l13511 0D89  
                                                    l13319 1727  
                                                    l15023 0533  
                                                    l15015 0505  
                                                    l15031 0544  
                                                    l15007 04DC  
                                                    l12529 10D6  
                                                    l12537 10E7  
                                                    l12545 10F8  
                                                    l12553 1109  
                                                    l12625 1E83  
                                                    l12713 0CE0  
                                                    l12705 0CA4  
                                                    l12721 09F9  
                                                    l12609 1EB9  
                                                    l12633 1ED7  
                                                    l12801 1572  
                                                    l13177 0B77  
                                                    l13409 164A  
                                                    l13329 115E  
                                                    l13417 1678  
                                                    l13601 0FEC  
                                                    l13433 1758  
                                                    l13425 1731  
                                                    l14313 16AA  
                                                    l13089 15E2  
                                                    l13257 131B  
                                                    l13097 0EEC  
                                                    l13249 0B01  
                                                    l13353 132E  
                                                    l14401 05DF  
                                                    l14321 1171  
                                                    l13345 0A65  
                                                    l13337 0A48  
                                                    l14305 12B3  
                                                    l13441 1FB6  
                                                    l13273 1428  
                                                    l13281 179D  
                                                    l13361 0A94  
                                                    l14225 04B1  
                                                    l14209 0496  
                                                    l14153 043E  
                                                    l14145 0437  
                                                    l14129 041C  
                                                    l14137 0423  
                                                    l14073 03C4  
                                                    l14081 03CB  
                                                    l14065 03A7  
                                                    l14057 0377  
                                                    l14241 11AC  
                                                    l13505 148D  
                                                    l13521 0DC5  
                                                    l13513 0D8E  
                                                    l15033 0553  
                                                    l15025 0539  
                                                    l15017 0517  
                                                    l15009 04E4  
                                                    l12563 110B  
                                                    l12571 111C  
                                                    l12643 1E80  
                                                    l12651 1E86  
                                                    l12707 0CC7  
                                                    l12723 0A01  
                                                    l12619 1EC5  
                                                    l12803 1574  
                                                    l13187 0B93  
                                                    l13179 0B80  
                                                    l13419 1678  
                                                    l13195 106E  
                                                    l13603 0FF4  
                                                    l13435 175C  
                                                    l13427 173B  
                                                    l14315 16B5  
                                                    l14331 14B6  
                                                    l13259 1321  
                                                    l13099 0EED  
                                                    l13355 133B  
                                                    l14411 05F8  
                                                    l14403 05E8  
                                                    l14323 1176  
                                                    l13347 0A6D  
                                                    l13339 0A51  
                                                    l14307 12BC  
                                                    l13275 1434  
                                                    l13283 17A0  
                                                    l13267 161B  
                                                    l13291 0DE3  
                                                    l13371 0ABA  
                                                    l13363 0A98  
                                                    l13451 0E48  
                                                    l14251 0D35  
                                                    l14227 04B6  
                                                    l14171 045E  
                                                    l14155 0443  
                                                    l14139 0428  
                                                    l14083 03D0  
                                                    l14075 03C9  
                                                    l14067 03B5  
                                                    l14059 037D  
                                                    l14243 11B2  
                                                    l13507 148D  
                                                    l13523 0DCA  
                                                    l13515 0D9B  
                                                    l15035 056C  
                                                    l15027 053D  
                                                    l15019 0522  
                                                    l12661 1E6E  
                                                    l12549 10FA  
                                                    l12557 1249  
                                                    l12565 1113  
                                                    l12573 1124  
                                                    l12581 1135  
                                                    l12653 1E6A  
                                                    l12629 1EA0  
                                                    l12709 0CD3  
                                                    l12725 0A06  
                                                    l12645 1EC0  
                                                    l12637 1ECF  
                                                    l12805 1577  
                                                    l12901 17F1  
                                                    l13189 0B97  
                                                    l13197 106F  
                                                    l13429 1749  
                                                    l14317 16C0  
                                                    l14309 16A4  
                                                    l13613 1EE8  
                                                    l14341 14D0  
                                                    l14333 14B7  
                                                    l13357 1343  
                                                    l13437 1099  
                                                    l13621 0827  
                                                    l14421 0624  
                                                    l14413 05FB  
                                                    l14405 05EF  
                                                    l13605 1F0A  
                                                    l14325 1177  
                                                    l13277 1439  
                                                    l13285 17AF  
                                                    l13269 0B9F  
                                                    l13293 0DF0  
                                                    l13373 0ABD  
                                                    l13365 0AAA  
                                                    l13461 0E75  
                                                    l13453 0E49  
                                                    l13445 0E32  
                                                    l13701 0957  
                                                    l14261 0D61  
                                                    l14253 0D3B  
                                                    l14229 04BB  
                                                    l14181 046A  
                                                    l14173 0463  
                                                    l14157 0448  
                                                    l14165 044F  
                                                    l14085 03D5  
                                                    l14069 03BA  
                                                    l14245 11BF  
                                                    l13541 12CF  
                                                    l13509 149A  
                                                    l13525 0DCF  
                                                    l13517 0DA9  
                                                    l15037 057F  
                                                    l15029 0540  
                                                    l12591 10C5  
                                                    l12559 125F  
                                                    l12567 111A  
                                                    l12575 112B  
                                                    l12583 113C  
                                                    l12663 1EB1  
                                                    l12671 1F7E  
                                                    l12735 0A17  
                                                    l12727 0A10  
                                                    l12647 1EC3  
                                                    l12639 1ED2  
                                                    l12815 157F  
                                                    l12831 15AA  
                                                    l12903 17F2  
                                                    l13199 1077  
                                                    l14319 16CB  
                                                    l14335 14BD  
                                                    l13439 10A2  
                                                    l13623 082F  
                                                    l14431 0633  
                                                    l14423 062A  
                                                    l14415 0601  
                                                    l14407 05F1  
                                                    l14327 117D  
                                                    l14351 1779  
                                                    l14343 1761  
                                                    l13551 136F  
                                                    l13375 1F87  
                                                    l13287 17B4  
                                                    l13279 1795  
                                                    l13295 0E06  
                                                    l13367 0AB0  
                                                    l13359 0A7F  
                                                    l13455 0E4E  
                                                    l13463 0E7A  
                                                    l13447 0E3D  
                                                    l13631 1347  
                                                    l13711 0970  
                                                    l13703 0959  
                                                    l14511 11F8  
                                                    l14503 11EC  
                                                    l13383 1469  
                                                    l14271 0D6D  
                                                    l14255 0D49  
                                                    l14183 046F  
                                                    l14167 0454  
                                                    l14159 044D  
                                                    l14087 03DA  
                                                    l14095 03E1  
                                                    l14239 11AC  
                                                    l13527 0DD4  
                                                    l13535 0DDB  
                                                    l13519 0DB7  
                                                    l12921 123E  
                                                    l12913 1231  
                                                    l12657 1E6C  
                                                    l12761 15EE  
                                                    l12665 1EB3  
                                                    l12673 1F80  
                                                    l12681 1F67  
                                                    l12745 0A1F  
                                                    l12729 0A13  
                                                    l12753 1F5E  
                                                    l12809 157B  
                                                    l12833 15AD  
                                                    l12825 159A  
                                                    l12841 103B  
                                                    l12905 17F7  
                                                    l13561 0BEF  
                                                    l13609 1F04  
                                                    l14337 14C3  
                                                    l14329 14B1  
                                                    l13625 0839  
                                                    l13617 0818  
                                                    l14433 0639  
                                                    l14425 062D  
                                                    l14417 060A  
                                                    l14409 05F6  
                                                    l14353 178E  
                                                    l14345 1765  
                                                    l14361 0684  
                                                    l13553 136F  
                                                    l13297 0E07  
                                                    l13289 0DDD  
                                                    l13369 0AB3  
                                                    l13465 0E80  
                                                    l13457 0E5C  
                                                    l13449 0E42  
                                                    l13633 134D  
                                                    l13713 0972  
                                                    l13705 095B  
                                                    l13481 1F2E  
                                                    l13473 1F40  
                                                    l13801 1FC4  
                                                    l13721 1FCA  
                                                    l14513 11FB  
                                                    l14505 11EF  
                                                    l13385 1489  
                                                    l14281 0D79  
                                                    l14257 0D57  
                                                    l14249 0D35  
                                                    l14185 0474  
                                                    l14193 047B  
                                                    l14169 0459  
                                                    l14097 03E6  
                                                    l14089 03DF  
                                                    l13393 1000  
                                                    l13529 0DD9  
                                                    l13545 100A  
                                                    l14521 07A1  
                                                    l12923 1241  
                                                    l12915 1238  
                                                    l12835 1E77  
                                                    l12587 10B6  
                                                    l12579 112D  
                                                    l12595 1261  
                                                    l12763 15F1  
                                                    l12667 1EB4  
                                                    l12675 1F85  
                                                    l12683 1F6B  
                                                    l12691 0C98  
                                                    l12739 0A1B  
                                                    l12755 1F60  
                                                    l12827 159D  
                                                    l12843 103E  
                                                    l12851 104C  
                                                    l12907 17FA  
                                                    l12931 1EE3  
                                                    l13571 0C12  
                                                    l13563 0BF0  
                                                    l14339 14CA  
                                                    l13619 0819  
                                                    l14419 0611  
                                                    l14347 176E  
                                                    l14371 06ED  
                                                    l14363 0689  
                                                    l14355 065D  
                                                    l13555 1371  
                                                    l13651 1021  
                                                    l13379 1F90  
                                                    l13299 0E20  
                                                    l13467 0E82  
                                                    l13459 0E6F  
                                                    l13643 1361  
                                                    l14451 128A  
                                                    l13715 0973  
                                                    l13707 0962  
                                                    l13475 1F46  
                                                    l13723 1F99  
                                                    l13803 1FC7  
                                                    l13731 0B0B  
                                                    l14515 11FE  
                                                    l14507 11F2  
                                                    l14291 0D85  
                                                    l14259 0D5C  
                                                    l14267 0D63  
                                                    l14195 0480  
                                                    l14187 0479  
                                                    l14179 0465  
                                                    l14099 03EB  
                                                    l13539 12C3  
                                                    l13811 11C1  
                                                    l13395 1006  
                                                    l14523 07A6  
                                                    l12925 1244  
                                                    l12917 1239  
                                                    l12589 10BE  
                                                    l12597 1277  
                                                    l12773 15FA  
                                                    l12757 1F63  
                                                    l12829 15A2  
                                                    l12837 1037  
                                                    l12861 13BF  
                                                    l12853 104F  
                                                    l12845 1044  
                                                    l12909 17FD  
                                                    l13581 0C33  
                                                    l13573 0C1A  
                                                    l13565 0BF6  
                                                    l12941 14D7  
                                                    l13629 0845  
                                                    l14381 0596  
                                                    l14437 063C  
                                                    l14349 1774  
                                                    l14373 06F1  
                                                    l14365 0694  
                                                    l14357 0667  
                                                    l13557 137B  
                                                    l13549 1363  
                     __end_of_TMAG5273_GetTemperatureValue 105E  
                                                    l13469 0E89  
                                                    l13637 134F  
                                                    l14453 128D  
                                                    l14445 1279  
                                                    l13493 1F22  
                                                    l13717 0974  
                                                    l13709 0969  
                                                    l13477 1F34  
                                                    l13661 0991  
                                                    l13653 097C  
                                                    l13725 1F9B  
                                                    l13805 1FC8  
                                                    l13741 0B1E  
                                                    l13733 0B0D  
                                                    l14509 11F5  
                                                    l14517 1EED  
                                                    l13389 148B  
                                                    l14269 0D68  
                                                    l14277 0D6F  
                                                    l14197 0485  
                                                    l13813 11C9  
                                                    l14541 07E9  
                                                    l14533 07D7  
                                                    l14525 07B1  
                             _TMAG5273_GetTemperatureValue 1051  
                                                    l12919 123B  
                                                    l12927 1247  
                                                    l12767 15F5  
                                                    l12679 1F65  
                                                    l12695 0C9C  
                                                    l12687 0C8F  
                                                    l12839 1038  
                                                    l12871 13D2  
                                                    l12863 13C6  
                                                    l12847 1049  
                                                    l13575 0C1E  
                                                    l13567 0BFC  
                                                    l13591 0F97  
                                                    l12951 14F4  
                                                    l12943 14DD  
                                                    l12935 1EA4  
                                                    l14391 05BC  
                                                    l14383 059B  
                                                    l14375 06FA  
                                                    l14367 06AB  
                                                    l14359 0672  
                                                    l13583 1051  
                                                    l13647 1FF5  
                                                    l14463 1E89  
                                                    l13639 135D  
                                                    l14471 1033  
                                                    l14447 127F  
                                                    l13495 1F28  
                                                    l13719 0979  
                                                    l13479 1F3A  
                                                    l13671 09A0  
                                                    l13663 0993  
                                                    l13655 097E  
                                                    l13727 1F9D  
                                                    l13751 0B24  
                                                    l13743 0B20  
                                                    l13735 0B0F  
                                                    l13807 1184  
                                                    l14279 0D74  
                                                    l14287 0D7B  
                                                    l14199 048A  
                                                    l13399 1198  
                                                    l13815 11D2  
                                                    l13831 00E5  
                                                    l13823 00AA  
                                                    l13911 08DF  
                                                    l13903 08C6  
                                                    l12857 1E74  
                                                    l12769 15F8  
                                                    l12793 1ED9  
                                                    l12873 13D5  
                                                    l12865 13C7  
                                                    l12849 104A  
                                                    l12881 17CB  
                                                    l13577 0C27  
                                                    l13569 0C0B  
                                                    l12961 14FD  
                                                    l13593 0FA2  
                                                    l13585 107B  
                                                    l12953 14F6  
                                                    l12945 14E9  
                                                    l14393 05C5  
                                                    l14385 05A1  
                                                    l14377 0592  
                                                    l14369 06BD  
                                                    l13649 1FEA  
                                                    l14481 0EDD  
                                                    l14473 1035  
                                                    l14449 1285  
                                                    l13497 1F16  
                                                    l13681 09B2  
                                                    l13673 09A7  
                                                    l13665 0995  
                                                    l13657 0985  
                                                    l13729 1FA0  
                                                    l13761 0B2A  
                                                    l13753 0B25  
                                                    l13745 0B21  
                                                    l13737 0B1A  
                                                    l13809 1192  
                                                    l14289 0D80  
                                                    l13841 012C  
                                                    l13833 00ED  
                                                    l13825 00AA  
                                                    l13913 08E7  
                                                    l13905 08C6  
                                                    l14545 07F2  
                                                    l14537 07E0  
                                                    l14529 07BA  
                                                    l12859 1E71  
                                                    l12779 15FE  
                                                    l12699 0CA0  
                                                    l12787 1ECA  
                                                    l12795 1EDB  
                                                    l12875 13D8  
                                                    l12867 13C9  
                                                    l12891 17DD  
                                                    l12883 17D2  
                                                    l13579 0C2F  
                                                    l12971 1518  
                                                    l12963 14FD  
                                                    l13595 0FC2  
                                                    l13587 0F75  
                                                    l14299 1EFE  
                                                    l12955 14F9  
                                                    l12947 14ED  
                                                    l12939 14D7  
                                                    l14395 05CC  
                                                    l14387 05AA  
                                                    l14379 0593  
                                                    l14467 102B  
                                                    l14459 128F  
                                                    l13499 1F1C  
                                                    l13691 0940  
                                                    l13683 09B7  
                                                    l13675 09AE  
                                                    l13667 0997  
                                                    l13659 098E  
                                                    l13771 0B34  
                                                    l13763 0B2C  
                                                    l13755 0B26  
                                                    l13747 0B22  
                                                    l13739 0B1C  
                                                    l13819 11D4  
                                                    l13851 019B  
                                                    l13843 0158  
                                                    l13835 00F2  
                                                    l13827 00B5  
                                                    l13931 072C  
                                                    l13923 0708  
                                                    l13915 08EC  
                                                    l13907 08D1  
                                                    l12789 1ECD  
                                                    l12797 1EDC  
                                                    l12869 13CE  
                                                    l12877 13DB  
                                                    l12893 17E2  
                                                    l12885 17D4  
                                                    l12973 151E  
                                                    l12965 1508  
                                                    l13597 0FDA  
                                                    l13589 0F92  
                                                    l12957 14FB  
                                                    l12949 14F3  
                                                    l14397 05D6  
                                                    l14389 05B6  
                                                    l14477 0E8E  
                                                    l14469 102B  
                                                    l13693 0947  
                                                    l13677 09B0  
                                                    l13669 0999  
                                                    l13781 0B40  
                                                    l13773 0B35  
                                                    l13765 0B2E  
                                                    l13757 0B27  
                                                    l13749 0B23  
                                                    l13861 0208  
                                                    l13853 01A1  
                                                    l13845 0160  
                                                    l13837 011E  
                                                    l13829 00BA  
                                                    l13941 075C  
                                                    l13933 0734  
                                                    l13925 0708  
                                                    l13917 08F6  
                                                    l13909 08D6  
                                                    l14549 07FB  
                                                    l12895 17E3  
                                                    l12887 17D5  
                                                    l12975 151F  
                                                    l12967 150D  
                                                    l13599 0FE8  
                                                    l12991 1562  
                                                    l12983 154B  
                                                    l14399 05D9  
                                                    l14479 0ED4  
                                                    l13695 0950  
                                                    l13679 09B1  
                                                    l13791 0B4C  
                                                    l13783 0B43  
                                                    l13775 0B36  
                                                    l13767 0B30  
                                                    l13759 0B28  
                                                    l13871 0251  
                                                    l13863 0210  
                                                    l13855 01CD  
                                                    l13847 0166  
                                                    l13839 0126  
                                                    l13943 0771  
                                                    l13935 0739  
                                                    l13951 079D  
                                                    l13927 0713  
                                                    l13919 08FD  
                                                    l12897 17E8  
                                                    l12889 17D6  
                                                    l12969 1514  
                                                    l12977 1521  
                                                    l12993 1568  
                                                    l12985 154B  
                                                    l13697 0953  
                                                    l13689 093E  
                                                    l13793 0B4F  
                                                    l13785 0B46  
                                                    l13777 0B37  
                                                    l13769 0B32  
                                                    l13881 02C1  
                                                    l13873 027F  
                                                    l13865 0216  
                                                    l13857 01D5  
                                                    l13849 0193  
                                                    l13945 0779  
                                                    l13937 074E  
                                                    l13929 0718  
                                                    l13961 09CC  
                                                    l12899 17EC  
                                                    l12995 1569  
                                                    l12987 1551  
                                                    l12979 1EA8  
                                                    l16611 0644  
                                                    l13699 0955  
                                                    l13795 0B51  
                                                    l13787 0B48  
                                                    l13779 0B3E  
                                                    l13891 032F  
                                                    l13883 02C7  
                                                    l13875 0287  
                                                    l13867 0243  
                                                    l13859 01DB  
                                                    l13947 077F  
                                                    l13939 0756  
                                                    l13971 09F5  
                                                    l13963 09D6  
                                                    l13955 09BC  
                                                    l16613 1591  
                                                    l12997 156B  
                                                    l12989 155E  
                                                    l13797 1FC0  
                                                    l13789 0B4A  
                                                    l13893 0337  
                                                    l13885 02F4  
                                                    l13877 028D  
                                                    l13869 024B  
                                                    l13949 0795  
                                                    l13965 09DE  
                                                    l13957 09BC  
                                                    l13981 0913  
                                                    l16615 0A2D  
                                                    l12999 156E  
                                                    l13799 1FC3  
                                                    l13895 033D  
                                                    l13887 02FC  
                                                    l13879 02B9  
                                                    l13967 09E3  
                                                    l13959 09C7  
                                                    l13991 093A  
                                                    l13983 091C  
                                                    l13975 0903  
                                                    l16617 0CB7  
                                                    l13897 036B  
                                                    l13889 0302  
                                                    l13969 09EE  
                                                    l13985 0924  
                                                    l13977 0903  
                                                    l16619 160C  
                                                    l13995 0800  
                                                    l13899 0373  
                                                    l13987 0929  
                                                    l13979 090E  
                                                    l13997 0800  
                                                    l13989 0933  
                                                    l13999 0806  
                                                    l14995 04BD  
                                                    l14997 04C9  
                                                    l14999 04CA  
                                    _eusart1RxStatusBuffer 00BD  
                                        __end_of_I2C1_Open 1800  
                                                    ?_main 0070  
                                           _i2c_readNBytes 139E  
                           ?_RN487X_SetAsyncMessageHandler 0071  
                                                    ?_swap 0071  
                                                    u10000 138A  
                                                    u10001 1389  
                                                    u10010 139B  
                                                    u10011 139A  
                                                    u10020 0B66  
                                                    u10100 17C9  
                                                    u10021 0B65  
                                                    u10101 17C8  
                                                    u10030 0B8D  
                                                    u10110 0DE3  
                                                    u10031 0B8C  
                                                    u10111 0DE2  
                                                    u10040 0B92  
                                                    u10200 115D  
                                                    u10120 0E06  
                                                    u11000 03DF  
                                                    u10041 0B91  
                                                    u10105 17C5  
                                                    u10121 0E05  
                                                    u11001 03DE  
                                                    u10050 0B9D  
                                                    u10210 0A48  
                                                    u10130 0E26  
                                                    u11010 03E6  
                                                    u10051 0B9C  
                                                    u10211 0A47  
                                                    u10131 0E25  
                                                    u11011 03E5  
                                                    u10060 0ACE  
                                                    u10220 0A6D  
                                                    u10140 0E2F  
                                                    u10300 147A  
                                                    u11100 0417  
                                                    u11020 03EB  
                                                    u10061 0ACD  
                                                    u10221 0A6C  
                                                    u10141 0E2E  
                                                    u10301 1478  
                                                    u11101 0416  
                                                    u11021 03EA  
                                                    u10070 0ADB  
                                                    u10230 0A94  
                                                    u10310 147B  
                                                    u11110 041C  
                                                    u11030 03F0  
                                                    u10150 170A  
                                                    u10071 0ADA  
                                                    u10231 0A93  
                                                    u11111 041B  
                                                    u11031 03EF  
                                                    u10151 1709  
                                                    u10080 1428  
                                                    u10240 0AAA  
                                                    u10400 0E80  
                                                    u10320 1489  
                                                    u11200 044D  
                                                    u11120 0421  
                                                    u11040 03F5  
                                                    u10160 172F  
                                                    u10081 1427  
                                                    u10241 0AA9  
                                                    u10401 0E7F  
                                                    u10321 1488  
                                                    u11201 044C  
                                                    u11121 0420  
                                                    u11041 03F4  
                                                    u10161 172E  
                                                    u10170 114B  
                                                    u10330 1652  
                                                    u10250 1F8E  
                                                    u10090 1439  
                                                    u11210 0454  
                                                    u11130 0428  
                                                    u11050 03FC  
                                                    u10171 1149  
                                                    u10331 1651  
                                                    u10251 1F8C  
                                                    u10091 1438  
                                                    u11211 0453  
                                                    u11131 0427  
                                                    u11051 03FB  
                                                    u10180 114C  
                                                    u10260 1F8F  
                                                    u11300 0485  
                                                    u11220 0459  
                                                    u11140 042D  
                                                    u11060 0401  
                                                    u11301 0484  
                                                    u11221 0458  
                                                    u11141 042C  
                                                    u11061 0400  
                                                    u10190 115C  
                                                    u10350 1680  
                                                    u10510 0FF4  
                                                    u10270 1F97  
                                                    u11310 048A  
                                                    u11230 045E  
                                                    u11150 0432  
                                                    u11070 0406  
                                                    u10430 0DCA  
                                                    u10191 115A  
                                                    u10351 167F  
                                                    u10511 0FF3  
                                                    u10271 1F95  
                                                    u11311 0489  
                                                    u11231 045D  
                                                    u11151 0431  
                                                    u11071 0405  
                                                    u10431 0DC9  
                                                    u10600 1FEF  
                                                    u10280 1F98  
                                                    u11400 04BB  
                                                    u11320 048F  
                                                    u11240 0463  
                                                    u11160 0437  
                                                    u11080 040B  
                                                    u10424 1494  
                                                    u10440 0DCF  
                                                    u10345 1669  
                                                    u10505 0FAD  
                                                    u10601 1FEE  
                                                    u11401 04BA  
                                                    u11321 048E  
                                                    u11241 0462  
                                                    u11161 0436  
                                                    u11081 040A  
                                                    u10425 1492  
                                                    u10441 0DCE  
                                                    u10530 0827  
                                                    u10610 1026  
                                                    u10370 0E42  
                                                    u11410 0D5C  
                                                    u11330 0496  
                                                    u11250 046A  
                                                    u11170 043E  
                                                    u11090 0412  
                                                    u10450 0DD4  
                                                    u10531 0826  
                                                    u10611 1025  
                                                    u10371 0E41  
                                                    u11411 0D5B  
                                                    u11331 0495  
                                                    u11251 0469  
                                                    u11171 043D  
                                                    u11091 0411  
                                                    u10451 0DD3  
                                                    u10540 082B  
                                                    u10380 0E48  
                                                    u11420 0D61  
                                                    u11340 049B  
                                                    u11260 046F  
                                                    u11180 0443  
                                                    u10620 11D2  
                                                    u10460 0DD9  
                                                    u10700 0251  
                                                    u12300 052D  
                                                    u10365 1697  
                                                    u10541 082A  
                                                    u10525 081C  
                                                    u10381 0E47  
                                                    u11421 0D60  
                                                    u11341 049A  
                                                    u11261 046E  
                                                    u11181 0442  
                                                    u10621 11D1  
                                                    u10461 0DD8  
                                                    u10701 0250  
                                                    u12301 052C  
                                                    u10550 0834  
                                                    u10390 0E6F  
                                                    u10294 1471  
                                                    u11430 0D68  
                                                    u11350 04A0  
                                                    u11270 0474  
                                                    u11190 0448  
                                                    u10710 028D  
                                                    u10630 00BA  
                                                    u12310 0533  
                                                    u10551 0832  
                                                    u10391 0E6E  
                                                    u10295 146F  
                                                    u11431 0D67  
                                                    u11351 049F  
                                                    u11271 0473  
                                                    u11191 0447  
                                                    u10711 028C  
                                                    u10631 00B9  
                                                    u12311 0532  
                                                    u10480 0C1A  
                                                    u10560 0835  
                                                    u11600 0639  
                                                    u11520 06FA  
                                                    u11440 0D6D  
                                                    u11360 04A5  
                                                    u11280 0479  
                                                    u10720 02C7  
                                                    u10640 00F2  
                                                    u10800 077F  
                                                    u12320 0552  
                                                    u10481 0C19  
                                                    u11601 0638  
                                                    u11521 06F9  
                                                    u11505 0697  
                                                    u11441 0D6C  
                                                    u11361 04A4  
                                                    u11281 0478  
                                                    u10721 02C6  
                                                    u10641 00F1  
                                                    u10801 077E  
                                                    u12321 0551  
                                                    u10490 0C2F  
                                                    u11530 05A1  
                                                    u10570 134D  
                                                    u11610 127F  
                                                    u11450 0D74  
                                                    u11370 04AC  
                                                    u11290 0480  
                                                    u10730 0302  
                                                    u10650 012C  
                                                    u10810 09CC  
                                                    u12330 056B  
                                                    u10491 0C2E  
                                                    u10475 0BFF  
                                                    u11531 05A0  
                                                    u11515 06C4  
                                                    u10395 0E6B  
                                                    u10571 134C  
                                                    u11611 127E  
                                                    u11451 0D73  
                                                    u11371 04AB  
                                                    u11291 047F  
                                                    u10731 0301  
                                                    u10651 012B  
                                                    u10811 09CB  
                                                    u12331 056A  
                                                    u11540 05BC  
                                                    u10580 135D  
                                                    u11620 1285  
                                                    u11460 0D79  
                                                    u11380 04B1  
                                                    u10900 0D25  
                                                    u10740 033D  
                                                    u10660 0166  
                                                    u10820 09E3  
                                                    u11700 07DF  
                                                    u12340 058D  
                                                    u12260 04DC  
                                                    u11541 05BB  
                                                    u10581 135C  
                                                    u11621 1284  
                                                    u11461 0D78  
                                                    u11381 04B0  
                                                    u10901 0D24  
                                                    u10741 033C  
                                                    u10661 0165  
                                                    u10821 09E2  
                                                    u11701 07DE  
                                                    u12341 058C  
                                                    u12261 04DB  
                                                    u10590 1FFA  
                                                    u11630 1033  
                                                    u11470 0D80  
                                                    u11390 04B6  
                                                    u10910 0D2C  
                                                    u10670 01A1  
                                                    u10750 08D6  
                                                    u10830 0913  
                                                    u11710 07E8  
                                                    u12270 04E4  
                                                    u10591 1FF9  
                                                    u11631 1032  
                                                    u11471 0D7F  
                                                    u11391 04B5  
                                                    u10911 0D2B  
                                                    u10671 01A0  
                                                    u10751 08D5  
                                                    u10831 0912  
                                                    u11711 07E7  
                                                    u12271 04E3  
                                                    u11560 05DF  
                                                    u11640 0EEB  
                                                    u11480 0D85  
                                                    u10920 0D31  
                                                    u10680 01DB  
                                                    u10760 08EC  
                                                    u10840 0929  
                                                    u11720 07F1  
                                                    u12280 0504  
                                                    u11561 05DE  
                                                    u11641 0EEA  
                                                    u11481 0D84  
                                                    u10921 0D30  
                                                    u10681 01DA  
                                                    u10761 08EB  
                                                    u10841 0928  
                                                    u11721 07F0  
                                                    u12281 0503  
                                                    u11570 05F6  
                                                    u11490 178E  
                                                    u10930 03BA  
                                                    u10850 0D08  
                                                    u10690 0216  
                                                    u10770 0718  
                                                    u11730 07FA  
                                                    u12290 0522  
                                                    u14107 11DA  
                                                    u11571 05F5  
                                                    u11555 05CF  
                                                    u11491 178D  
                                                    u10931 03B9  
                                                    u10851 0D07  
                                                    u10691 0215  
                                                    u10771 0717  
                                                    u11731 07F9  
                                                    u12291 0521  
                                                    u11580 0601  
                                                    u10940 03BF  
                                                    u10860 0D0D  
                                                    u10780 0739  
                                                    u11581 0600  
                                                    u10941 03BE  
                                                    u10861 0D0C  
                                                    u10781 0738  
                                                    u11590 0632  
                                                    u10950 03C4  
                                                    u10870 0D14  
                                                    u10790 075C  
                                                    u11591 0631  
                                                    u11495 178A  
                                                    u10951 03C3  
                                                    u10871 0D13  
                                                    u10791 075B  
                                                    u10960 03C9  
                                                    u10880 0D19  
                                                    u11680 07B9  
                                                    u10961 03C8  
                                                    u10881 0D18  
                                                    u11681 07B8  
                                                    u10970 03D0  
                                                    u10890 0D20  
                                                    u11690 07D6  
                                                    u10971 03CF  
                                                    u10891 0D1F  
                                                    u11691 07D5  
                                                    u10980 03D5  
                                                    u10981 03D4  
                                                    u10990 03DA  
                                                    u10991 03D9  
                            __end_of_rn487x_driver_version 2012  
                               __end_of_i2c1_fsmStateTable 1848  
                                                    _OSCEN 0891  
                                                    _TMR0H 059D  
                                                    _TMR0L 059C  
                                                    _TRISA 0012  
                                                    _TRISB 0013  
                                                    _TRISC 0014  
                                                    _TRISE 0016  
                                   ??_I2C1_MasterGetRxData 0071  
                              LIGHTBLUE_PushButton@payload 0021  
                                          __end_of_bitRead 148D  
                                    ?_I2C1_DO_RX_NACK_STOP 0070  
                                        ??_I2C1_MasterRead 007B  
                               ??_I2C1_CallbackReturnReset 0079  
                                        ??_I2C1_MasterOpen 0071  
                                     _EUSART1_Transmit_ISR 1400  
                                        ??_I2C1_MasterStop 0071  
                                        ??_I2C1_Initialize 0071  
                                                    _pHead 004E  
                                                    _begin 07A1  
                                  __end_of_PIN_MANAGER_IOC 1F7E  
                                           ??_RN487X_Delay 0076  
                           BMA253_GetAccelDataY@yAccelData 002D  
                                           ??_RN487X_Reset 0072  
                                    _i2c_read1ByteRegister 0B54  
                                           ?_EUSART1_Write 0071  
                                           ??_RN487X_Write 0077  
                                           ?_EUSART2_Write 0071  
                                   __end_of_RN487X_ReadMsg 15EE  
                                                    pclath 000A  
                                i2c_write1ByteRegister@reg 0024  
                                   __end_of_RN487X_SendCmd 1700  
                                           ??_EUSART1_Read 0071  
                                LIGHTBLUE_PerformAction@id 0029  
                                           ??_EUSART2_Read 0071  
                                                    status 0003  
                                   __end_of_setXYAxisRange 09F9  
                                                    wtemp0 007E  
                                             ??_I2C1_DO_RX 0079  
                                             ??_I2C1_DO_TX 0079  
                                          __end_of_strncmp 0C8F  
                                   ??_RN487X_SetSystemMode 0072  
               __end_of_EUSART1_DefaultFramingErrorHandler 1E69  
                     ??_EUSART1_DefaultFramingErrorHandler 0070  
                      ?_EUSART1_DefaultFramingErrorHandler 0070  
                       _EUSART1_DefaultFramingErrorHandler 1E68  
                                   ??_I2C1_DO_ADDRESS_NACK 0079  
                             __end_of_RN487X_EnterDataMode 132B  
                                             ??_I2C1_Close 0071  
                    __end_of_EUSART2_SetTxInterruptHandler 1F4C  
                            _EUSART2_SetTxInterruptHandler 1F46  
                                            _fsmStateTable 1848  
                                          __initialization 0057  
                                   _rn487x_PrintMessageEnd 0B9F  
                                               _i2c_status 0120  
                               __end_of_EUSART1_Initialize 097C  
                                             __end_of_main 0590  
                                             __end_of_uart 1828  
                              ?_LIGHTBLUE_GetErrorLedValue 0070  
                                             __end_of_swap 11AC  
                                 _LIGHTBLUE_UpdateErrorLed 132B  
                                   __end_of_i2c_readNBytes 13BD  
                               __end_of_RN487X_is_rx_ready 1FC0  
                              ?_INTERRUPT_InterruptManager 0070  
                               ?_LIGHTBLUE_GetDataLedValue 0070  
                           BMA253_GetAccelDataZ@zAccelData 002D  
                                            _do_I2C_DO_ACK 0000  
                                   ??_I2C1_MasterOperation 007B  
                                                   ??_main 0049  
                                                   ??_swap 0073  
                                ?_rn487x_PrintMessageStart 0070  
                            ?_TMAG5273_GetTemperatureValue 0035  
                      __end_of_EUSART2_DefaultErrorHandler 1E98  
                              _EUSART2_DefaultErrorHandler 1E94  
                                  _LIGHTBLUE_PerformAction 0816  
                         RN487X_MessageHandler@messageType 0043  
                         __end_of_LIGHTBLUE_SendSerialData 0706  
                                    ?_EUSART1_Transmit_ISR 0070  
                                       __end_of_I2C1_DO_RX 0A3C  
                                       __end_of_I2C1_DO_TX 0CE2  
                                         _RN487X_DataReady 1347  
                                       __end_of_I2C1_Close 1249  
                                            ?_readRegister 0070  
                                                   ?_begin 0070  
                               __end_of_EUSART2_Initialize 09BA  
                             ??_IOCAF6_SetInterruptHandler 0073  
                                 _eusart2TxBufferRemaining 0061  
                                                   _ANSELA 1F38  
                                                   _ANSELB 1F43  
                                                   _ANSELC 1F4E  
                             ??_LIGHTBLUE_SetErrorLedValue 007B  
                                                   _T0CON0 059E  
                                                   _T0CON1 059F  
                                    _i2c_read2ByteRegister 0A3C  
                                                   _RC1REG 0119  
                                                   _RC2REG 0A19  
                                                   _RB1PPS 1F19  
                                                   _RB2PPS 1F1A  
                                                   _RC1STA 011D  
                                                   _RB4PPS 1F1C  
                                                   _RC2STA 0A1D  
                                                   i1l1102 1E9B  
                                                   i1l1105 1E97  
                                                   _RC4PPS 1F24  
                                                   i1l1300 0035  
                                                   i1l1301 0053  
                                                   i1l1302 0044  
                                                   i1l1232 141F  
                                                   i1l1242 08C3  
                                                   i1l1082 13FD  
                                                   i1l1235 1421  
                                                   i1l1307 0053  
                                                   i1l1252 1E93  
                                                   i1l1092 0886  
                                                   i1l1085 13FF  
                                                   i1l1246 12F5  
                                                   i1l1255 1E8F  
                                                   i1l1096 1230  
                                                   i1l1249 1E68  
                                                   _ODCONA 1F3A  
                                                   _ODCONB 1F45  
                                                   i1l1099 1E69  
                                                   i1l1451 1096  
                                                   _ODCONC 1F50  
                                                   _ODCONE 1F66  
                                                   i1l1447 1F7D  
                                                   i1l1295 0013  
                                                   i1l1457 07FF  
                                                   i1l1298 0026  
                                                   _RN487X 1868  
                                          ?_RN487X_ReadMsg 0073  
                                                   i1l9231 1E90  
                                                   i1l9233 1E8C  
                                                   i1l9325 1088  
                                                   i1l9327 108F  
                                                   i1l9329 1094  
                                                   _INLVLA 1F3C  
                                                   _INLVLB 1F47  
                                                   _INLVLC 1F52  
                                                   i1l8971 12EA  
                                                   i1l8973 12F0  
                                                   i1l8975 12F1  
                                                   i1l8967 12DC  
                                                   i1l8969 12E5  
                                                   u701_20 1407  
                                                   u701_21 1406  
                                                   u702_20 1419  
                                                   u702_21 1418  
                                                   u703_20 0892  
                                                   u703_21 0891  
                                                   u704_20 08A3  
                                                   u704_21 08A2  
                                                   u705_20 08B9  
                                                   u705_21 08B8  
                       __end_of_RN487X_ReadDefaultResponse 0F74  
                               _RN487X_ReadDefaultResponse 0EEC  
                                                   u706_20 1F7A  
                                                   u706_21 1F79  
                                                   _OSCFRQ 0893  
                                                   u565_20 12F0  
                                                   u565_21 12EF  
                                          ?_RN487X_SendCmd 0077  
                                                   u586_20 108F  
                                                   u586_21 108E  
                                                   u696_20 13E5  
                                                   u696_21 13E4  
                                                   u697_20 13F7  
                                                   u697_21 13F6  
                                                   _TX1REG 011A  
                                                   _TX2REG 0A1A  
                                                   _TX1STA 011E  
                                                   _TX2STA 0A1E  
                                        ?_I2C1_MasterClose 0070  
                                 rdBlkRegCompleteHandler@p 0078  
                                          ?_setXYAxisRange 0070  
                                  ??_I2C1_MasterDisableIrq 0071  
                                        ?_I2C1_MasterStart 0070  
                                        ?_I2C1_MasterWrite 0070  
                                 ?_I2C1_MasterWaitForEvent 0070  
                                       ??_I2C1_MasterClose 0071  
                                         _I2C1_DO_TX_EMPTY 15EE  
                                         __end_of_bitWrite 14B1  
                                setXYAxisRange@xyAxisRange 0038  
                                         __end_of_getError 0DDD  
                    __end_ofRN487X_EnterDataMode@cmdPrompt 200B  
                            RN487X_EnterDataMode@cmdPrompt 2006  
                                       ??_I2C1_MasterStart 0071  
                              BMA253_GetAccelDataY@lsbData 002E  
                        BMA253_GetAccelDataXYZ@sensorValue 0034  
                                       ??_I2C1_MasterWrite 007B  
                              BMA253_GetAccelDataY@msbData 002F  
                   LIGHTBLUE_TemperatureSensor@temperature 003C  
                              BMA253_GetAccelDataZ@lsbData 002E  
                                 __end_of_setOperatingMode 07A1  
                              BMA253_GetAccelDataZ@msbData 002F  
                                                   _cmdBuf 01A0  
                                                   _bitMap 0054  
                             __end_of_BMA253_GetAccelDataY 1676  
                             __end_of_BMA253_GetAccelDataZ 16A4  
                                RN487X_FilterData@readChar 0048  
                                 ?_EUSART1_SetErrorHandler 0071  
                                          ?_i2c_readNBytes 0024  
                                         ?_TMR0_Initialize 0070  
                                                ??_bitRead 0074  
                              _EUSART2_FramingErrorHandler 016B  
                         ??_EUSART1_SetOverrunErrorHandler 0073  
                          ?_EUSART1_SetOverrunErrorHandler 0071  
                        __end_of_LIGHTBLUE_GetDataLedValue 1F0A  
                                                   _strchr 1380  
                                 ??_I2C1_DO_SEND_ADR_WRITE 0072  
                                                   _strcpy 12F6  
                                                   _strlen 1291  
                                                   _strstr 0DDD  
                                        ?_I2C1_SetCallback 0071  
                                   ??_I2C1_DO_RX_NACK_STOP 0071  
                              LIGHTBLUE_SendPacket@payload 0077  
                                    _I2C1_DO_SEND_ADR_READ 1F7E  
                                           _PMD_Initialize 1FCA  
                                  _BMA253_NewAccelDataRdyY 113E  
                                  _BMA253_NewAccelDataRdyZ 114F  
                            ?_I2C1_SetDataCompleteCallback 0075  
                               i2c_write1ByteRegister@data 0025  
                                       ??_I2C1_SetCallback 0074  
                                           ??_readRegister 007C  
                                     _EUSART2_Transmit_ISR 13DE  
                               LIGHTBLUE_PerformAction@led 002A  
                           __end_ofRN487X_RebootCmd@reboot 1891  
                                   ?_i2c_read1ByteRegister 0024  
                                          ??_EUSART1_Write 0072  
                                          ??_EUSART2_Write 0072  
               IOCAF6_SetInterruptHandler@InterruptHandler 0071  
                                         ?_PIN_MANAGER_IOC 0070  
                                          _eusart1RxBuffer 0144  
                                                ??_strncmp 0077  
                                            _manufactureId 004A  
                                  _I2C1_DO_RX_NACK_RESTART 1ED4  
                                             ??_IOCAF6_ISR 0070  
                                    _RN487X_MessageHandler 0A7F  
                                        RN487X_SendCmd@cmd 007A  
                                          _eusart2RxBuffer 00D5  
                                          _eusart1TxBuffer 00C5  
                                 ?_TMAG5273_GetManufacture 002D  
                                        _SYSTEM_Initialize 11EC  
                           I2C1_SetDataCompleteCallback@cb 0075  
                                          _eusart2TxBuffer 00DD  
                                  __end_of__initialization 00A4  
                                  _protocol_version_number 2012  
                                         _do_I2C_SEND_STOP 0000  
                                   getOperatingMode@opMode 0030  
                          I2C1_MasterOperation@returnValue 0023  
                                       ?_SYSTEM_Initialize 0070  
                                            ??_I2C1_Poller 007B  
                                  ??_EUSART2_RxDataHandler 0070  
                     __end_ofRN487X_EnterCmdMode@cmdPrompt 2010  
                             RN487X_EnterCmdMode@cmdPrompt 200B  
                            __end_of_EUSART1_RxDataHandler 12F6  
                                  _rdBlkRegCompleteHandler 1249  
                                           __pcstackCOMMON 0070  
                                             __pidataBANK0 0002  
                                             __pidataBANK2 1160  
                                      ??_SYSTEM_Initialize 0073  
                         __end_of_I2C1_MasterEnableRestart 1E7D  
                                            __end_of_begin 07FF  
                                     __end_of_RN487X_Delay 1F75  
                                            _readRegisters 10A6  
                                            swap@lowerByte 0079  
                           ?_EUSART2_SetTxInterruptHandler 0071  
                                 ??_BMA253_GetAccelDataXYZ 0030  
                                     __end_of_RN487X_Reset 2000  
                                   setOperatingMode@opMode 0038  
                                     __end_of_RN487X_Write 101F  
                                ??_LIGHTBLUE_PerformAction 0028  
                                   __end_of_PMD_Initialize 1FD4  
                             ??_I2C1_DO_SEND_RESTART_WRITE 0071  
                           ?_LIGHTBLUE_SendProtocolVersion 0070  
                                  ??_I2C1_MasterSendTxData 0071  
                                       __end_of_IOCAF6_ISR 1097  
                                     __end_of_EUSART1_Read 1572  
                                     __end_of_EUSART2_Read 14FD  
                                      _LIGHTBLUE_SplitByte 1730  
                                        RN487X_Reset@value 0071  
                                   ??_EUSART1_Transmit_ISR 0070  
                                      _LIGHTBLUE_SplitWord 107A  
                                ?_LIGHTBLUE_GetButtonValue 0070  
                                 ?_EUSART2_SetErrorHandler 0071  
                                     _RN487X_EnterDataMode 1310  
                                    ?_EUSART2_Transmit_ISR 0070  
                              __end_of_EUSART1_Receive_ISR 08C4  
                                    __end_of_I2C1_DO_RESET 1EDE  
                                       readRegister@regVal 002D  
                                 __end_of_setTemperatureEn 0901  
                                                  ??_begin 007C  
                                   ?_i2c_read2ByteRegister 0024  
                           ??_TMAG5273_GetTemperatureValue 007B  
                                   _do_I2C_DO_NACK_RESTART 0000  
                                __end_of_SYSTEM_Initialize 1202  
                                 _LIGHTBLUE_SendSerialData 065C  
                                  writeRegister@regAddress 0027  
                                            _eusart1RxHead 005A  
                                            swap@upperByte 0078  
                                            _eusart1TxHead 005D  
                                            _eusart2RxHead 007C  
                                            _eusart1RxTail 0059  
                                            _eusart2TxHead 0063  
                                               __pbssBANK0 004A  
                                               __pbssBANK1 00A0  
                                               __pbssBANK2 0120  
                                               __pbssBANK3 01A0  
                                               __pbssBANK4 0220  
                                               __pbssBANK5 02A0  
                                               __pbssBANK6 0320  
                                            _eusart2RxTail 0060  
                                            _eusart1TxTail 005C  
                          __end_of_I2C1_MasterWaitForEvent 1EFE  
                        _EUSART1_TxDefaultInterruptHandler 0165  
                                            _eusart2TxTail 0062  
                          ??_EUSART1_SetRxInterruptHandler 0073  
                               __end_of_LIGHTBLUE_LedState 14D7  
                            __end_of_rd2RegCompleteHandler 10FA  
                                       _DELAY_milliseconds 11D6  
                             __end_of_LIGHTBLUE_Initialize 1F04  
                                     I2C1_Open@returnValue 0072  
                         ??_EUSART2_SetFramingErrorHandler 0073  
                          ?_EUSART2_SetFramingErrorHandler 0071  
                                     ?_LIGHTBLUE_SplitByte 0076  
                                       _getMagneticChannel 0377  
                                       _setMagneticChannel 00A8  
                                     ?_LIGHTBLUE_SplitWord 0079  
                            __end_of_wr2RegCompleteHandler 110B  
                        TMAG5273_CalcTemperature@lowerByte 0032  
                                    _rd1RegCompleteHandler 10D8  
                                    EUSART2_Read@readValue 0072  
                                        _I2C1_DO_SEND_STOP 1EC5  
                                    _wr1RegCompleteHandler 10C7  
                          __end_of_EUSART1_SetErrorHandler 1F16  
                                      ?_DELAY_milliseconds 0071  
                                               __pmaintext 04BD  
                                               _getAngleEn 0D35  
                                  ?_i2c_write1ByteRegister 0024  
                           LIGHTBLUE_SendSerialData@length 0078  
                                    i2c_readNBytes@address 007B  
                                      ?_getMagneticChannel 0070  
                                      ?_setMagneticChannel 0070  
                                       ?_I2C1_DO_SEND_STOP 0070  
                                       getAngleEn@angleReg 0030  
                         rn487x_PrintMessage@passedMessage 0077  
                          rn487x_PrintMessage@messageIndex 0040  
                                           ?_readRegisters 0027  
                                          _I2C1_MasterRead 1EE3  
                                          _I2C1_MasterOpen 1044  
                                               __pintentry 0004  
                                          _I2C1_MasterStop 1E7D  
                                          _I2C1_Initialize 1F99  
                             __end_of_LIGHTBLUE_SendPacket 1000  
                                      __end_of_I2C1_Poller 1044  
                            __end_of_LIGHTBLUE_AccelSensor 16D2  
                                ??_BMA253_NewAccelDataRdyY 007B  
                                ??_BMA253_NewAccelDataRdyZ 007B  
                                          ?_PMD_Initialize 0070  
                                   ?_I2C1_DO_SEND_ADR_READ 0070  
                                                  ?_strchr 0071  
                                      ??_I2C1_DO_SEND_STOP 0071  
                                                  ?_strcpy 0071  
                                                  ?_strlen 0071  
                   __end_of_EUSART1_SetFramingErrorHandler 1F1C  
                           _EUSART1_SetFramingErrorHandler 1F16  
                                                  ?_strstr 0078  
                                                  u1041_20 122A  
                                                  u1041_21 1229  
                                                  u1220_20 002E  
                                                  u1220_21 002D  
                                                  u1221_20 0039  
                                                  u1221_21 0038  
                                                  u1222_20 003D  
                                                  u1214_20 000B  
                                                  u1222_21 003C  
                                                  u1214_21 000A  
                                    _eusart2RxStatusBuffer 00CD  
                                                  u1223_20 0048  
                                                  u1215_20 000F  
                                                  u1223_21 0047  
                                                  u1215_21 000E  
                                                  u1224_20 004C  
                                                  u1216_20 0017  
                                                  u1224_21 004B  
                                                  u1216_21 0016  
                                                  u1217_20 001B  
                                                  u1217_21 001A  
                                                  u1218_20 001F  
                                                  u1218_21 001E  
                                                  u1219_20 002A  
                                                  u1219_21 0029  
                                                  u1165_20 0858  
                                                  u1165_21 0857  
                                                  u1166_20 0868  
                                                  u1166_21 0867  
                                                  u1167_20 087C  
                                                  u1167_21 087B  
                                                  i1l10221 140E  
                                                  i1l10231 088D  
                                                  i1l10223 1413  
                                                  i1l10241 08A9  
                                                  i1l10233 0892  
                                                  i1l10225 1419  
                                                  i1l10217 1400  
                                                  i1l10243 08AF  
                                                  i1l10235 0898  
                                                  i1l10227 141A  
                                                  i1l10219 1407  
                                                  i1l10251 1F7A  
                                                  i1l10245 08B9  
                                                  i1l10237 089E  
                                                  i1l10229 0887  
                                                  i1l10247 08C0  
                                                  i1l10239 08A3  
                                                  i1l10191 13F1  
                                                  i1l10193 13F7  
                                                  i1l10185 13DE  
                                                  i1l10249 1F75  
                                                  i1l10195 13F8  
                                                  i1l10187 13E5  
                                                  i1l10189 13EC  
                                                  i1l14501 0883  
                                                  i1l13491 122B  
                                                  i1l13483 1219  
                                                  i1l13485 1220  
                                                  i1l13487 1224  
                                                  i1l13489 122A  
                                                  i1l14491 0863  
                                                  i1l14483 084E  
                                                  i1l13685 1E98  
                                                  i1l14493 0868  
                                                  i1l14485 0853  
                                                  i1l13687 1E94  
                                                  i1l14495 086D  
                                                  i1l14487 0858  
                                                  i1l14497 0873  
                                                  i1l14489 085D  
                                                  i1l14499 087C  
                                                  i1l14941 001B  
                                                  i1l14933 0006  
                                                  i1l14951 003D  
                                                  i1l14943 001F  
                                                  i1l14935 000B  
                                                  i1l14953 0048  
                                                  i1l14945 002A  
                                                  i1l14937 000F  
                                                  i1l14955 004C  
                                                  i1l14947 002E  
                                                  i1l14939 0017  
                                                  i1l14949 0039  
                             getMagneticChannel@magChannel 0030  
                                    ?_RN487X_EnterDataMode 0070  
                                ?_TMAG5273_CalcTemperature 002D  
                                            _writeRegister 1008  
                             ?_EUSART1_DefaultErrorHandler 0070  
                                        _I2C1_MasterIsNack 1EF2  
                                                  _SP1BRGH 011C  
                                                  _SP1BRGL 011B  
                                                  _SP2BRGH 0A1C  
                                                  _SP2BRGL 0A1B  
                                     ??_DELAY_milliseconds 0073  
                                                  _OSCCON1 088D  
                                                  _OSCCON3 088F  
                                                _I2C1_Open 17CA  
  __end_of_rd2RegCompleteHandler@i2c1_master_example$F1250 112D  
          _rd2RegCompleteHandler@i2c1_master_example$F1250 111C  
  __end_of_wr2RegCompleteHandler@i2c1_master_example$F1262 10C7  
          _wr2RegCompleteHandler@i2c1_master_example$F1262 10B6  
  __end_of_rd1RegCompleteHandler@i2c1_master_example$F1239 111C  
          _rd1RegCompleteHandler@i2c1_master_example$F1239 110B  
  __end_of_wr1RegCompleteHandler@i2c1_master_example$F1256 113E  
          _wr1RegCompleteHandler@i2c1_master_example$F1256 112D  
__end_of_rdBlkRegCompleteHandler@i2c1_master_example$F1273 1279  
        _rdBlkRegCompleteHandler@i2c1_master_example$F1273 1261  
                              __end_of_EUSART2_Receive_ISR 0887  
                       __end_of_IOCAF6_SetInterruptHandler 1F52  
                               _IOCAF6_SetInterruptHandler 1F4C  
                                ??_I2C1_DO_RX_NACK_RESTART 0071  
                          __end_of_TMAG5273_GetManufacture 12DC  
                                                ?_bitWrite 0071  
                                                  _OSCSTAT 0890  
                                                  _OSCTUNE 0892  
                                        _I2C1_MasterSetIrq 1E86  
                                     ??_getMagneticChannel 002E  
                                                ?_getError 0070  
                                                  _SSP1ADD 018D  
                                     ??_setMagneticChannel 0036  
                                                  _SLRCONA 1F3B  
                                                  _SLRCONB 1F46  
                                                  _SLRCONC 1F51  
                                                  _SSP1BUF 018C  
                                                  _SSP1MSK 018E  
                       __end_of_LIGHTBLUE_SetErrorLedValue 10A6  
                               _LIGHTBLUE_SetErrorLedValue 1097  
                                       ?_I2C1_MasterIsNack 0070  
                               ?_I2C1_DO_SEND_RESTART_READ 0070  
                                   ?_RN487X_MessageHandler 0041  
                            i2c_write1ByteRegister@address 007B  
                           ??_I2C1_SetDataCompleteCallback 0078  
                                       ?_I2C1_MasterSetIrq 0070  
                                     _BMA253_GetAccelDataY 1648  
                                     _BMA253_GetAccelDataZ 1676  
                                       RN487X_ReadMsg@resp 0078  
                                  _TMR0_HasOverflowOccured 1EED  
                                          _asyncBufferSize 0067  
                                    ??_LIGHTBLUE_SplitByte 0077  
                                       _i2c1_fsmStateTable 1828  
                                       _i2c1_driver_i2cISR 00E5  
                                    ??_LIGHTBLUE_SplitWord 007B  
                                      ??_I2C1_MasterIsNack 0071  
                                                  _i2c_ISR 0000  
                                __end_of_I2C1_DO_SEND_STOP 1ECA  
                                ??_rdBlkRegCompleteHandler 0079  
                               ??_LIGHTBLUE_UpdateErrorLed 007B  
                                       I2C1_SetCallback@cb 0071  
                                  ?_rn487x_PrintMessageEnd 0070  
                                      _rn487x_PrintMessage 1795  
                                      ??_I2C1_MasterSetIrq 0071  
                         RN487X_SetAsyncMessageHandler@len 0073  
                           __end_of_i2c_write1ByteRegister 1730  
                                        _RN487X_FilterData 0E32  
                                 __end_of_RN487X_DataReady 1363  
                             __end_of_LIGHTBLUE_PushButton 1184  
                                     __end_of_readRegister 107A  
                                       ?_RN487X_FilterData 0070  
                                      _EUSART1_is_rx_ready 1F90  
                                                  _bitRead 1469  
                               __end_of_EUSART1_is_tx_done 1EAC  
                          __end_of_EUSART2_SetErrorHandler 1F34  
                                            ?_I2C1_DO_IDLE 0070  
                                            ?_I2C1_DO_RCEN 0070  
                LIGHTBLUE_ParseIncomingPacket@receivedByte 0033  
                                       i2c_readNBytes@data 0024  
                                      _EUSART1_is_tx_ready 0000  
                                        _RN487X_IndicateRx 1FEA  
                              ??_LIGHTBLUE_GetDataLedValue 0071  
                                                  __ptext1 07A1  
                                                  __ptext2 0901  
                                                  __ptext3 09BA  
                                                  __ptext4 08C4  
                                                  __ptext5 0706  
                                                  __ptext6 00A8  
                                                  __ptext7 1008  
                                                  __ptext8 1700  
                                                  __ptext9 0D89  
                                               bitRead@reg 0071  
                                 _I2C1_MasterEnableRestart 1E7A  
                                __end_of_I2C1_MasterIsNack 1EF8  
                             ?_I2C1_SetAddressNackCallback 0075  
                                      ??_RN487X_FilterData 0044  
                                           ?_writeRegister 0026  
                                     ?_rn487x_PrintMessage 0077  
               __end_of_EUSART2_DefaultOverrunErrorHandler 1E9C  
                     ??_EUSART2_DefaultOverrunErrorHandler 0070  
                      ?_EUSART2_DefaultOverrunErrorHandler 0070  
                       _EUSART2_DefaultOverrunErrorHandler 1E98  
                                    _OSCILLATOR_Initialize 1FC0  
                                   ??_EUSART2_Transmit_ISR 0070  
                                       ?_RN487X_IndicateRx 0071  
                                __end_of_I2C1_MasterSetIrq 1E89  
                                 __end_of_I2C1_DO_TX_EMPTY 161B  
                                       _EUSART1_Initialize 093E  
                                 ??_PIN_MANAGER_Initialize 0073  
                                                _IOCAFbits 1F3F  
                                    _rn487x_driver_version 2010  
                                               ?_I2C1_Open 0070  
                                         ??_RN487X_ReadMsg 0076  
                                                _IOCANbits 1F3E  
                                               ??_bitWrite 0075  
                                                _IOCAPbits 1F3D  
                                          bitRead@position 0073  
                                               ??_getError 002F  
                                         ??_RN487X_SendCmd 0078  
                            ??_EUSART1_DefaultErrorHandler 0071  
                                 ?_I2C1_CallbackReturnStop 0078  
                                       _RN487X_is_rx_ready 1FB6  
                                         ??_setXYAxisRange 0036  
                  TMAG5273_GetTemperatureValue@temperature 0035  
                                 _do_I2C_SEND_RESTART_READ 0000  
                                  i2c_read1ByteRegister@d2 0029  
                                                  clrloop0 1F53  
                                      ??_RN487X_IndicateRx 0072  
                                    ?_BMA253_GetAccelDataY 0070  
                                    ?_BMA253_GetAccelDataZ 0070  
                                                  _strncmp 0C3D  
                        rn487x_PrintMessage@printCharacter 0020  
                        __end_of_I2C1_DO_SEND_RESTART_READ 1EBB  
                                     end_of_initialization 00A4  
                               __end_of_I2C1_MasterSendAck 1EA4  
               __end_of_RN487X_Read@rn487x_interface$F1381 1FAC  
                       _RN487X_Read@rn487x_interface$F1381 1FA2  
                      ?_RN487X_Read@rn487x_interface$F1382 0070  
                     ??_RN487X_Read@rn487x_interface$F1384 0073  
                                     ?_EUSART1_is_rx_ready 0070  
                      __end_of_LIGHTBLUE_TemperatureSensor 12C3  
                              _LIGHTBLUE_TemperatureSensor 12AA  
                                      _I2C1_MasterClearIrq 1E6E  
                                      ?_EUSART1_Initialize 0070  
                               __end_of_EUSART2_is_tx_done 1EA8  
                           __end_of_rn487x_PrintMessageEnd 0BED  
                              ?_RN487X_ReadDefaultResponse 0070  
                                                  init_ram 1F58  
                               __end_of_I2C1_MasterStartRx 1E83  
                              _EUSART1_OverrunErrorHandler 015F  
                                   ?_rd1RegCompleteHandler 0078  
                                                  initloop 1F59  
                                   _I2C1_DO_SEND_ADR_WRITE 1F65  
                                      ?_RN487X_is_rx_ready 0070  
                                        getError@statusReg 0035  
                                __end_of_RN487X_FilterData 0E8E  
                             __end_of_I2C1_DO_SEND_RESTART 1EC5  
                                  __end_of_I2C1_MasterRead 1EE8  
                                  __end_of_I2C1_MasterOpen 1051  
                                   ?_wr1RegCompleteHandler 0078  
                                  __end_of_I2C1_MasterStop 1E80  
                                  __end_of_I2C1_Initialize 1FA2  
                    __end_of_EUSART1_SetRxInterruptHandler 1F28  
                            _EUSART1_SetRxInterruptHandler 1F22  
                                              _I2C1_Poller 1037  
                                ?_I2C1_CallbackReturnReset 0078  
                                       _EUSART2_Initialize 097C  
                            __end_of_I2C1_MasterDisableIrq 1E77  
                                         ??_i2c_readNBytes 007B  
                                              _I2C1_Status 00A0  
                                          ??_readRegisters 0029  
                                              ?_getAngleEn 0070  
                              LIGHTBLUE_PerformAction@data 0027  
                                         _getOperatingMode 0CE2  
                                                  swap@reg 0071  
                                        ?_setOperatingMode 0070  
                          __end_of_protocol_version_number 2014  
                               __end_of_RN487X_IsConnected 1E8C  
                                _do_I2C_SEND_RESTART_WRITE 0000  
                                      _I2C1_MasterSendNack 1E9C  
                      __end_of_I2C1_SetAddressNackCallback 1FEA  
                              _I2C1_SetAddressNackCallback 1FDF  
                                __end_of_RN487X_IndicateRx 1FF5  
                                     ?_I2C1_MasterClearIrq 0070  
                                           ??_I2C1_DO_IDLE 0071  
                                     ??_EUSART1_Initialize 0073  
                                                  strchr@c 0073  
                                                  strchr@s 0071  
                                           ??_I2C1_DO_RCEN 0071  
                               LIGHTBLUE_SplitByte@payload 0078  
                       __end_of_I2C1_DO_SEND_RESTART_WRITE 1EC0  
                               _I2C1_DO_SEND_RESTART_WRITE 1EBB  
                                      ?_EUSART2_Initialize 0070  
                                                  strcpy@d 0075  
                                                  strlen@a 0074  
                                       ??_setOperatingMode 0036  
                                      _EUSART2_is_rx_ready 1F87  
                                                  strlen@s 0071  
                                           __deviceAddress 006D  
                                               _returnStop 0000  
                                                  strstr@h 0078  
                                                  strstr@n 007A  
                                      _EUSART2_is_tx_ready 0000  
                                                _PORTAbits 000C  
                                     ??_RN487X_is_rx_ready 0071  
                                        _RN487X_SetOutputs 0AC3  
                          __end_of_rdBlkRegCompleteHandler 1261  
                                    ??_rn487x_PrintMessage 0079  
                                   ??_RN487X_EnterDataMode 007B  
                                     _LIGHTBLUE_Initialize 1EFE  
                                  _statusBuffer@main$F3783 0320  
                                  ??_i2c_read1ByteRegister 007B  
                                            ??_getLowPower 002E  
                                       ?_RN487X_SetOutputs 0020  
                                  _IOCAF6_InterruptHandler 00E9  
                            ??_I2C1_SetAddressNackCallback 0079  
                                   RN487X_Delay@delayCount 0074  
                                                _TRISAbits 0012  
                          I2C1_SetDataCompleteCallback@ptr 0077  
                           getDeviceStatus@deviceStatusReg 002E  
                                ??_TMR0_HasOverflowOccured 0071  
                           I2C1_CallbackReturnReset@funPtr 0078  
                                     ?_I2C1_MasterSendNack 0070  
                                      EUSART1_Write@txData 0071  
                                    ??_EUSART1_is_rx_ready 0071  
                                      ??_RN487X_SetOutputs 007B  
                                             _RN487X_Delay 1F6D  
                                            ??_isConnected 007B  
                                  getOperatingMode@opMode0 0031  
                                  getOperatingMode@opMode1 0032  
                                     RN487X_ReadMsg@msgLen 0075  
                                     ??_EUSART2_Initialize 0073  
                                     ?_EUSART2_is_rx_ready 0070  
                                   _BMA253_GetAccelDataXYZ 0BED  
                                     _LIGHTBLUE_SendPacket 0F74  
                                             _RN487X_Reset 1FF5  
                                _LIGHTBLUE_GetDataLedValue 1F04  
                                             _RN487X_Write 1013  
                                        ??_getDeviceStatus 007C  
                                           __end_of_RN487X 187A  
                                             begin@testReg 003B  
                                             _EUSART1_Read 154B  
                                             _EUSART2_Read 14D7  
                         __end_of_LIGHTBLUE_GetButtonValue 1F10  
                            RN487X_SetOutputs@ioHighNibble 0024  
                                     _timer0ReloadVal16bit 004C  
                            __end_of_EUSART2_RxDataHandler 1231  
                                              _do_I2C_IDLE 0000  
                                              _do_I2C_RCEN 0000  
                                    ??_I2C1_MasterClearIrq 0071  
                                 _rn487x_PrintMessageStart 161B  
                                __end_of_RN487X_SetOutputs 0B0B  
                                            _setZAxisRange 0901  
                                           _I2C1_DO_RX_ACK 1ECA  
                                          ??_writeRegister 007C  
                                   ?_OSCILLATOR_Initialize 0070  
                                    ?_LIGHTBLUE_Initialize 0070  
                                            ??_RN487X_Init 0076  
                                            ??_RN487X_Read 007C  
                               ??_LIGHTBLUE_SendSerialData 0077  
                          RN487X_FilterData@asyncBuffering 0064  
                          __end_of_I2C1_CallbackReturnStop 1E6C  
                                  readRegisters@dataBuffer 0027  
                            __end_of_I2C1_MasterSendTxData 1EB1  
                                           __end_of_strchr 139E  
                                  ??_i2c_read2ByteRegister 0026  
                                           __end_of_strcpy 1310  
                                           __end_of_strlen 12AA  
                                           __end_of_strstr 0E32  
                                      start_initialization 0057  
                             LIGHTBLUE_AccelSensor@payload 0036  
                                              ??_I2C1_Open 0071  
                            setMagneticChannel@channelMode 0038  
                                      _i2c_busCollisionISR 0000  
                                         _getTemperatureEN 11AC  
                          RN487X_SetOutputs@stateLowNibble 0023  
                   LIGHTBLUE_SendProtocolVersion@dataIndex 0036  
                                   ??_BMA253_GetAccelDataY 002A  
                                   ??_BMA253_GetAccelDataZ 002A  
                                    ??_I2C1_MasterSendNack 0071  
                                     setOperatingMode@mode 0039  
                                        ?_setTemperatureEn 0070  
            EUSART1_SetRxInterruptHandler@interruptHandler 0071  
            EUSART1_SetTxInterruptHandler@interruptHandler 0071  
            EUSART2_SetRxInterruptHandler@interruptHandler 0071  
            EUSART2_SetTxInterruptHandler@interruptHandler 0071  
                                     _LIGHTBLUE_PushButton 1171  
                                 LIGHTBLUE_SplitByte@value 0076  
                                    ??_EUSART2_is_rx_ready 0071  
                                   setMagneticChannel@mode 0039  
                                    __end_of_EUSART1_Write 154B  
                                    __end_of_EUSART2_Write 1524  
                                    ?_LIGHTBLUE_SendPacket 0077  
                                      __end_of_getLowPower 0816  
                                       ??_setTemperatureEn 0036  
                          ??_LIGHTBLUE_SendProtocolVersion 0020  
                                   rd1RegCompleteHandler@p 0078  
                               getMagneticChannel@magMode4 0031  
                               getMagneticChannel@magMode5 0032  
                               getMagneticChannel@magMode6 0033  
                               getMagneticChannel@magMode7 0034  
                                 I2C1_SetBuffer@bufferSize 0071  
                                         ?_I2C1_MasterRead 0070  
                                         ?_I2C1_MasterOpen 0070  
                   __end_of_EUSART2_SetOverrunErrorHandler 1F40  
                           _EUSART2_SetOverrunErrorHandler 1F3A  
                                         ?_I2C1_MasterStop 0070  
                                         ?_I2C1_Initialize 0070  
                                      getError@intPinError 0033  
                                      __end_of_isConnected 11D6  
                  TMAG5273_CalcTemperature@temperatureData 0033  
                                getTemperatureEN@tempENreg 0031  
                         __end_of_TMAG5273_CalcTemperature 1380  
                                         ??_PMD_Initialize 0071  
                             i2c_read1ByteRegister@address 0025  
                                       setXYAxisRange@mode 0039  
                                   __end_of_I2C1_DO_RX_ACK 1ECF  
                                   wr1RegCompleteHandler@p 0078  
                                    _EUSART1_RxDataHandler 12DC  
                                  ??_I2C1_DO_SEND_ADR_READ 0071  
                                           ?_setZAxisRange 0070  
                           ?_EUSART1_SetRxInterruptHandler 0071  
                                       _LIGHTBLUE_LedState 14B1  
                                              __pdataBANK0 006E  
                                              __pdataBANK2 014C  
                                                 ??_strchr 0075  
                                                 ??_strcpy 0073  
                                                 ??_strlen 0073  
                                         I2C1_Open@address 0071  
                                           _eusart1RxCount 0058  
                                                 ??_strstr 0020  
                                           _eusart2RxCount 005F  
                                      ?_LIGHTBLUE_LedState 0070  
                                  ??_RN487X_MessageHandler 007C  
                                              __pbssCOMMON 007C  
                                     _I2C1_DO_SEND_RESTART 1EC0  
                        _EUSART1_RxDefaultInterruptHandler 0163  
                                                ___latbits 0003  
                                            __pcstackBANK0 0020  
                                            __pcstackBANK1 00EF  
                           ?_LIGHTBLUE_ParseIncomingPacket 0070  
                                            bitWrite@value 0074  
                              ?_IOCAF6_SetInterruptHandler 0071  
                                                _do_I2C_RX 0000  
                                                _do_I2C_TX 0000  
                                    ?_LIGHTBLUE_PushButton 0070  
                                             _readRegister 106C  
                                      __end_of_RN487X_Init 0EEC  
                                      __end_of_RN487X_Read 1037  
                              ?_LIGHTBLUE_SetErrorLedValue 0070  
                              ??_I2C1_DO_SEND_RESTART_READ 0071  
                                      EUSART2_Write@txData 0071  
                          ??_EUSART1_SetTxInterruptHandler 0073  
                                  readRegisters@regAddress 002B  
                                      _RN487X_EnterCmdMode 1202  
                                     __end_of_I2C1_DO_IDLE 1EB6  
                         ??_EUSART1_SetFramingErrorHandler 0073  
                          ?_EUSART1_SetFramingErrorHandler 0071  
                          ??_EUSART2_SetRxInterruptHandler 0073  
                                     __end_of_I2C1_DO_RCEN 1F65  
                            I2C1_SetAddressNackCallback@cb 0075  
                                                _dataReady 0065  
                                          _do_I2C_TX_EMPTY 0000  
                                     ??_LIGHTBLUE_LedState 007B  
                                                __pnvBANK1 00E9  
                                                __pnvBANK2 015D  
                                    _rd2RegCompleteHandler 10E9  
                                    __end_of_fsmStateTable 1868  
                                                _main$5438 00EF  
                                   _PIN_MANAGER_Initialize 0B0B  
                                    _wr2RegCompleteHandler 10FA  
                         ??_IOCAF6_DefaultInterruptHandler 0070  
                          ?_IOCAF6_DefaultInterruptHandler 0070  
                               ??_I2C1_MasterEnableRestart 0071  
                                 ?_LIGHTBLUE_PerformAction 0027  
                                           _I2C1_MasterFsm 159A  
                                        ?_RN487X_DataReady 0070  
                                          ?_I2C1_DO_RX_ACK 0070  
                                                __ptext100 0BED  
                                                __ptext101 106C  
                                                __ptext110 1FDF  
                                                __ptext102 10A6  
                                                __ptext111 17CA  
                                                __ptext103 139E  
                                                __ptext120 1ED4  
                                                __ptext112 1044  
                                                __ptext104 1EE3  
                                                __ptext121 1ECF  
                                                __ptext113 1EDE  
                                                __ptext105 1676  
                                                __ptext130 1F65  
                                                __ptext122 1ECA  
                                                __ptext114 13BD  
                                                __ptext106 114F  
                                                __ptext131 1F7E  
                                                __ptext123 1EC5  
                                                __ptext115 1037  
                                                __ptext107 1648  
                                                __ptext140 1E80  
                                                __ptext132 1EB1  
                                                __ptext124 1EC0  
                                                __ptext116 1EF8  
                                                __ptext108 113E  
                                                __ptext141 1E6C  
                                                __ptext133 15EE  
                                                __ptext125 1EBB  
                                                __ptext117 159A  
                                                __ptext109 0B54  
                                                __ptext150 10D8  
                                                __ptext142 1E6A  
                                                __ptext134 1E86  
                                                __ptext126 1EB6  
                                                __ptext118 1572  
                                                __ptext151 10C7  
                                                __ptext143 1261  
                                                __ptext135 1EF2  
                                                __ptext127 1F5E  
                                                __ptext119 1ED9  
                                                __ptext160 1E74  
                                                __ptext152 10B6  
                                                __ptext144 112D  
                                                __ptext136 1EAC  
                                                __ptext128 09F9  
                                                __ptext161 1E71  
                                                __ptext153 1FD4  
                                                __ptext145 111C  
                                                __ptext137 1EA0  
                                                __ptext129 0C8F  
                                                __ptext170 084E  
                                                __ptext162 1E6E  
                                                __ptext154 1445  
                                                __ptext146 110B  
                                                __ptext138 1E83  
                                                __ptext171 1E98  
                                                __ptext155 105E  
                                                __ptext147 1249  
                                                __ptext139 1E9C  
                                                __ptext172 1E69  
                                                __ptext164 1F75  
                                                __ptext156 1E7D  
                                                __ptext148 10FA  
                                                __ptext173 1E94  
                                                __ptext165 1088  
                                                __ptext157 1E7A  
                                                __ptext149 10E9  
                                                __ptext174 1219  
                                                __ptext166 07FF  
                                                __ptext158 1E77  
                                                __ptext175 1E90  
                                                __ptext167 1400  
                                                __ptext159 1231  
                                                __ptext176 1E68  
                                                __ptext168 13DE  
                                                __ptext177 1E8C  
                                                __ptext169 0887  
                                                __ptext178 12DC  
                                      getAngleEn@angleDir2 0031  
                                      getAngleEn@angleDir3 0032  
                             ??_LIGHTBLUE_GetErrorLedValue 0071  
                              _i2c1_driver_busCollisionISR 00E7  
                                    readRegisters@numBytes 0028  
                                 _LIGHTBLUE_GetButtonValue 1F0A  
                        _EUSART2_TxDefaultInterruptHandler 00ED  
                                       ??_RN487X_DataReady 007C  
                       LIGHTBLUE_SendProtocolVersion@value 0035  
                                     ?_RN487X_EnterCmdMode 0070  
                                   ??_LIGHTBLUE_Initialize 0071  
                                                 ?_bitRead 0071  
                                  _I2C1_MasterWaitForEvent 1EF8  
                                         _I2C1_MasterClose 1E71  
                                  getError@oscillatorError 0034  
                                           _I2C1_SetBuffer 105E  
                             ??_INTERRUPT_InterruptManager 0071  
                                           _sequenceNumber 006C  
                              i2c_read2ByteRegister@result 002B  
                                         _I2C1_MasterStart 1E77  
                                                _connected 0068  
                                         _I2C1_MasterWrite 1EDE  
                                    _LIGHTBLUE_AccelSensor 16A4  
                                                 _BAUD1CON 011F  
                                                 _BAUD2CON 0A1F  
                     ?_rd1RegCompleteHandler@strncmp$F4860 0078  
                    ??_rd1RegCompleteHandler@strncmp$F4862 0079  
                     ?_wr1RegCompleteHandler@strncmp$F4854 0078  
                     ?_rd2RegCompleteHandler@strncmp$F4863 0078  
                    ??_wr1RegCompleteHandler@strncmp$F4856 0079  
                   ?_rdBlkRegCompleteHandler@strncmp$F4872 0078  
                    ??_rd2RegCompleteHandler@strncmp$F4865 0079  
                  ??_rdBlkRegCompleteHandler@strncmp$F4874 0079  
                     ?_wr2RegCompleteHandler@strncmp$F4866 0078  
                    ??_wr2RegCompleteHandler@strncmp$F4868 0079  
               __end_of_EUSART1_DefaultOverrunErrorHandler 1E94  
                     ??_EUSART1_DefaultOverrunErrorHandler 0070  
                      ?_EUSART1_DefaultOverrunErrorHandler 0070  
                       _EUSART1_DefaultOverrunErrorHandler 1E90  
                                    ?_I2C1_DO_SEND_RESTART 0070  
                                     _EUSART1_ErrorHandler 015D  
                             ?_EUSART2_DefaultErrorHandler 0070  
                                              _getLowPower 0800  
                                        ?_I2C1_DO_TX_EMPTY 0070  
                                  _EUSART1_SetErrorHandler 1F10  
                              __end_of_LIGHTBLUE_SplitByte 1761  
                                 __end_of_getOperatingMode 0D35  
                         __end_of_I2C1_CallbackReturnReset 1E6E  
                              __end_of_LIGHTBLUE_SplitWord 1088  
                                 LIGHTBLUE_SplitWord@value 0079  
                                       ??_I2C1_DO_TX_EMPTY 0079  
                                   ??_LIGHTBLUE_SendPacket 0078  
                                      getError@otpCrcError 0032  
                                       _EUSART1_is_tx_done 1EA8  
                                  ??_rd1RegCompleteHandler 0079  
                                                 ?_strncmp 0071  
                                        i2c_readNBytes@len 0025  
                                  ?_I2C1_DO_SEND_ADR_WRITE 0070  
                                I2C1_MasterSendTxData@data 0071  
                                              _isConnected 11C1  
                                  ??_wr1RegCompleteHandler 0079  
                     LIGHTBLUE_SendProtocolVersion@payload 0022  
                                        ??_TMR0_Initialize 0071  
                                         _I2C1_SetCallback 1445  
                                        _RN487X_is_tx_done 1FAC  
                                   i2c_read1ByteRegister@e 0026  
                                                 _LATAbits 0018  
                  EUSART1_SetErrorHandler@interruptHandler 0071  
                  EUSART2_SetErrorHandler@interruptHandler 0071  
                                   i2c_read1ByteRegister@x 0027  
                                                 _LATCbits 001A  
                                               _I2C1_DO_RX 09F9  
                                               _I2C1_DO_TX 0C8F  
                                      ?_EUSART1_is_tx_done 0070  
                                                clear_ram0 1F52  
                                                 _PIE0bits 0716  
                                                 _PIE3bits 0719  
                 LIGHTBLUE_ParseIncomingPacket@parserState 006B  
                                               _I2C1_Close 1231  
                    __end_of_LIGHTBLUE_SendProtocolVersion 1795  
                            _LIGHTBLUE_SendProtocolVersion 1761  
                                       ?_RN487X_is_tx_done 0070  
                                             ?_I2C1_Poller 0070  
                                   __end_of_I2C1_MasterFsm 15C3  
                             __end_of_I2C1_MasterGetRxData 1E86  
                                                 _PIR0bits 070C  
                                             ??_getAngleEn 002E  
                                                 _PIR3bits 070F  
                                                 _RX1DTPPS 1ECB  
                                          ??_setZAxisRange 0036  
                                                 _RX2DTPPS 1ECD  
                                   ?_EUSART1_RxDataHandler 0070  
                                  _TMAG5273_GetManufacture 12C3  
                                       _I2C1_MasterSendAck 1EA0  
                           DELAY_milliseconds@milliseconds 0071  
                                 ?_BMA253_NewAccelDataRdyY 0070  
                                 ?_BMA253_NewAccelDataRdyZ 0070  
                  __end_of_rn487x_PrintIndicatorCharacters 1445  
                        ??_rn487x_PrintIndicatorCharacters 0073  
                         ?_rn487x_PrintIndicatorCharacters 0070  
                          _rn487x_PrintIndicatorCharacters 1422  
                                _I2C1_DO_SEND_RESTART_READ 1EB6  
                                                 _SSP1CON1 0190  
                                                 _SSP1CON2 0191  
                                     setTemperatureEn@mode 0039  
                                       _EUSART2_is_tx_done 1EA4  
                                   __end_of_I2C1_SetBuffer 106C  
                                                 _SSP1STAT 018F  
                                        ??_PIN_MANAGER_IOC 0070  
                                      ??_RN487X_is_tx_done 0071  
                                    ??_RN487X_EnterCmdMode 007B  
                     __end_of_I2C1_SetDataCompleteCallback 1FDF  
                             _I2C1_SetDataCompleteCallback 1FD4  
                                       _I2C1_MasterStartRx 1E80  
                              ?_I2C1_DO_SEND_RESTART_WRITE 0070  
                                 _TMAG5273_CalcTemperature 1363  
                                      ?_I2C1_MasterSendAck 0070  
                           LIGHTBLUE_AccelSensor@accelData 0043  
                                 ?_I2C1_DO_RX_NACK_RESTART 0070  
                                ?_LIGHTBLUE_UpdateErrorLed 0070  
                                      RN487X_ReadMsg@index 0079  
               rn487x_PrintIndicatorCharacters@messageType 0073  
                                     ??_EUSART1_is_tx_done 0071  
                                              _RN487X_Init 0E8E  
                                              _RN487X_Read 102B  
                                      ?_EUSART2_is_tx_done 0070  
                                getError@undervoltageError 0031  
                             __end_of_RN487X_SetSystemMode 102B  
                                      ?_I2C1_MasterStartRx 0070  
                                          _getDeviceStatus 1000  
                             __end_of_I2C1_DO_ADDRESS_NACK 159A  
                                   ??_LIGHTBLUE_PushButton 007B  
                                       _RN487X_IsConnected 1E89  
                            __end_of_i2c_read1ByteRegister 0B9F  
                                  ?_BMA253_GetAccelDataXYZ 0070  
                           __end_of_I2C1_DO_SEND_ADR_WRITE 1F6D  
                            ??_EUSART2_DefaultErrorHandler 0071  
                                            _I2C1_DO_RESET 1ED9  
                                              _asyncBuffer 0050  
                                       __end_of_getAngleEn 0D89  
                                    I2C1_Close@returnValue 0071  
                                 ?_rdBlkRegCompleteHandler 0078  
                                        setZAxisRange@mode 0039  
                                __end_of_RN487X_is_tx_done 1FB6  
                                      I2C1_SetCallback@idx 0074  
                                      I2C1_SetCallback@ptr 0073  
                                      ?_RN487X_IsConnected 0070  
                                LIGHTBLUE_LedState@payload 0020  
                                  _EUSART2_SetErrorHandler 1F2E  
                                     ??_I2C1_MasterSendAck 0071  
                    LIGHTBLUE_ParseIncomingPacket@packetID 0069  
                                    EUSART1_Read@readValue 0072  
                                   ?_rd2RegCompleteHandler 0078  
                              _EUSART2_OverrunErrorHandler 0169  
                                      _do_I2C_DO_NACK_STOP 0000  
                                     ??_EUSART2_is_tx_done 0071  
                        setTemperatureEn@temperatureEnable 0038  
                             __end_of_I2C1_MasterOperation 13DE  
                               ??_rn487x_PrintMessageStart 0073  
                          __end_of_LIGHTBLUE_PerformAction 084E  
                          ??_RN487X_SetAsyncMessageHandler 0074  
                                   ?_wr2RegCompleteHandler 0078  
                                     ??_I2C1_MasterStartRx 0071  
                       LIGHTBLUE_SendSerialData@serialData 0079  
                    __end_of_EUSART1_SetTxInterruptHandler 1F2E  
                            _EUSART1_SetTxInterruptHandler 1F28  
                                          ?_I2C1_MasterFsm 0070  
                    __end_of_EUSART2_SetRxInterruptHandler 1F46  
                            _EUSART2_SetRxInterruptHandler 1F40  
                      LIGHTBLUE_ParseIncomingPacket@length 006A  
                                 __end_of_getTemperatureEN 11C1  
       rd2RegCompleteHandler@i2c1_master_example$F1250@ptr 0078  
       wr2RegCompleteHandler@i2c1_master_example$F1262@ptr 0078  
       rd1RegCompleteHandler@i2c1_master_example$F1239@ptr 0078  
                                  setZAxisRange@zAxisRange 0038  
       wr1RegCompleteHandler@i2c1_master_example$F1256@ptr 0078  
     rdBlkRegCompleteHandler@i2c1_master_example$F1273@ptr 0078  
                                ??_I2C1_MasterWaitForEvent 0071  
                             RN487X_SetOutputs@ioLowNibble 0022  
                                    __end_of_readRegisters 10B6  
                              __end_of_rn487x_PrintMessage 17CA  
                                    _I2C1_MasterDisableIrq 1E74  
                                  ??_OSCILLATOR_Initialize 0071  
                                          ?_I2C1_SetBuffer 0071  
                                   readRegister@regAddress 002C  
                                     ??_RN487X_IsConnected 0071  
                                             bitWrite@mask 0079  
                                   ?_LIGHTBLUE_AccelSensor 0070  
                                   ??_I2C1_DO_SEND_RESTART 0071  
                                ??_EUSART1_SetErrorHandler 0073  
                      __end_of_EUSART1_DefaultErrorHandler 1E90  
                              _EUSART1_DefaultErrorHandler 1E8C  
                                  RN487X_SetOutputs@bitMap 0020  
                              __end_of_EUSART1_is_rx_ready 1F99  
                                               _T0CON0bits 059E  
                           __end_of_BMA253_GetAccelDataXYZ 0C3D  
                                     _EUSART2_ErrorHandler 0167  
                                           ?_I2C1_DO_RESET 0070  
                                                 _bitWrite 148D  
                       LIGHTBLUE_TemperatureSensor@payload 0037  
                            __end_of_i2c_read2ByteRegister 0A7F  
                                                 _getError 0D89  
                                                 __ptext10 1000  
                                                 __ptext11 148D  
                                                 __ptext20 1469  
                                                 __ptext12 11C1  
                                                 __ptext21 1EED  
                                                 __ptext13 12C3  
                                                 __ptext30 1F46  
                                                 __ptext22 11EC  
                                                 __ptext14 1198  
                                                 __ptext31 1F40  
                                                 __ptext23 1184  
                                                 __ptext15 11AC  
                                                 __ptext40 1F10  
                                                 __ptext32 1F3A  
                                                 __ptext24 1FCA  
                                                 __ptext16 0CE2  
                                                 __ptext41 1279  
                                                 __ptext33 1F34  
                                                 __ptext25 0B0B  
                                                 __ptext17 0377  
                                                 __ptext50 0B9F  
                                                 __ptext42 102B  
                                                 __ptext34 1F2E  
                                                 __ptext26 1F4C  
                                                 __ptext18 0800  
                                                 __ptext51 1795  
                                                 __ptext43 1347  
                                                 __ptext35 093E  
                                                 __ptext27 1FC0  
                                                 __ptext19 0D35  
                                                 __ptext60 1FF5  
                                                 __ptext52 12F6  
                                                 __ptext44 0E32  
                                                 __ptext36 1F28  
                                                 __ptext28 1F99  
                                                 __ptext61 1FEA  
                                                 __ptext53 1422  
                                                 __ptext45 0A7F  
                                                 __ptext37 1F22  
                                                 __ptext29 097C  
                                                 __ptext70 0590  
                                                 __ptext62 12AA  
                                                 __ptext54 1E89  
                                                 __ptext46 0DDD  
                                                 __ptext38 1F1C  
                                                 __ptext71 0816  
                                                 __ptext63 1051  
                                                 __ptext55 0E8E  
                                                 __ptext47 0C3D  
                                                 __ptext39 1F16  
                                                 __ptext80 1EA8  
                                                 __ptext72 1097  
                                                 __ptext64 1363  
                                                 __ptext56 1FB6  
                                                 __ptext48 1380  
                                                 __ptext81 1EA4  
                                                 __ptext73 132B  
                                                 __ptext65 0A3C  
                                                 __ptext57 1F90  
                                                 __ptext49 161B  
                                                 __ptext90 1F04  
                                                 __ptext82 15C3  
                                                 __ptext74 0AC3  
                                                 __ptext66 065C  
                                                 __ptext58 1F87  
                                                 __ptext91 1EFE  
                                                 __ptext83 1FA2  
                                                 __ptext75 0EEC  
                                                 __ptext67 1761  
                                                 __ptext59 101F  
                                                 __ptext92 16A4  
                                                 __ptext84 154B  
                                                 __ptext76 1310  
                                                 __ptext68 1171  
                                                 __ptext93 107A  
                                                 __ptext85 14D7  
                                                 __ptext77 1202  
                                                 __ptext69 1F0A  
                                                 __ptext94 1730  
                                                 __ptext86 1F6D  
                                                 __ptext78 16D2  
                                                 __ptext95 0F74  
                                                 __ptext87 11D6  
                                                 __ptext79 1FAC  
                                                 __ptext96 1291  
                                                 __ptext88 14B1  
                                                 __ptext97 1013  
                                                 __ptext89 1EE8  
                                                 __ptext98 1524  
                                                 __ptext99 14FD  
                                             _SSP1CON1bits 0190  
                                             _SSP1CON2bits 0191  
                                               _IOCAF6_ISR 1088  
                                 ??_i2c_write1ByteRegister 007B  
                                               strcpy@dest 0076  
                                 _I2C1_CallbackReturnReset 1E6C  
                                              ?_I2C1_DO_RX 0070  
                                              ?_I2C1_DO_TX 0070  
               __end_of_EUSART2_DefaultFramingErrorHandler 1E6A  
                     ??_EUSART2_DefaultFramingErrorHandler 0070  
                      ?_EUSART2_DefaultFramingErrorHandler 0070  
                       _EUSART2_DefaultFramingErrorHandler 1E69  
                          __end_of_BMA253_NewAccelDataRdyY 114F  
                          __end_of_BMA253_NewAccelDataRdyZ 1160  
                                          _lightBlueSerial 0220  
                                ??_TMAG5273_GetManufacture 007B  
                              __end_of_I2C1_MasterClearIrq 1E71  
                             __end_of_I2C1_DO_RX_NACK_STOP 1ED4  
                                              ?_I2C1_Close 0070  
                                        writeRegister@data 0026  
                                               _RC1STAbits 011D  
                                               _RC2STAbits 0A1D  
           EUSART1_SetOverrunErrorHandler@interruptHandler 0071  
           EUSART2_SetOverrunErrorHandler@interruptHandler 0071  
                     RN487X_SetAsyncMessageHandler@pBuffer 0071  
                       __end_of_LIGHTBLUE_GetErrorLedValue 1EED  
                               _LIGHTBLUE_GetErrorLedValue 1EE8  
                                                 int$flags 007E  
                          __end_of_I2C1_DO_RX_NACK_RESTART 1ED9  
                             RN487X_GetInputsValues@F12901 006E  
                                   getTemperatureEN@tempEN 0030  
                                 I2C1_MasterOperation@read 0022  
                       __end_of_INTERRUPT_InterruptManager 0055  
                               _INTERRUPT_InterruptManager 0004  
                                    _EUSART2_RxDataHandler 1219  
                                  __end_of_getDeviceStatus 1008  
                                             _SSP1STATbits 018F  
                                 i2c_read1ByteRegister@reg 0024  
                            __end_of_I2C1_DO_SEND_ADR_READ 1F87  
                              _EUSART1_FramingErrorHandler 0161  
                                             _I2C1_DO_IDLE 1EB1  
                                      _EUSART1_Receive_ISR 0887  
                                             _I2C1_DO_RCEN 1F5E  
                                    LIGHTBLUE_LedState@led 0023  
                              __end_of_I2C1_MasterSendNack 1EA0  
                         ??_EUSART2_SetOverrunErrorHandler 0073  
                          ?_EUSART2_SetOverrunErrorHandler 0071  
                                 ?_TMR0_HasOverflowOccured 0070  
                                    __end_of_writeRegister 1013  
                                               _INTCONbits 000B  
                              __end_of_EUSART2_is_rx_ready 1F90  
                           I2C1_SetAddressNackCallback@ptr 0077  
                                 ??_rn487x_PrintMessageEnd 0073  
                               getLowPower@lowPowerModeBit 0030  
                                           __pstringtext10 187A  
                                           __pstringtext11 1891  
                                           __pstringtext12 2000  
                                           __pstringtext13 0000  
                                     _I2C1_MasterGetRxData 1E83  
                                    _I2C1_MasterSendTxData 1EAC  
                            __end_of_RN487X_MessageHandler 0AC3  
                              TMAG5273_GetManufacture@read 002F  
                                ??_EUSART2_SetErrorHandler 0073  
                                              bitWrite@reg 0071  
                                   _do_I2C_DO_ADDRESS_NACK 0000  
                                                 intlevel1 0000  
                             RN487X_MessageHandler@message 0041  
                                       RN487X_Write@txData 0076  
                                 __end_of_I2C1_MasterClose 1E74  
                                     ?_EUSART1_Receive_ISR 0070  
                                   rd2RegCompleteHandler@p 0078  
                                  ?_PIN_MANAGER_Initialize 0070  
                                 __end_of_I2C1_MasterStart 1E7A  
                                ?_LIGHTBLUE_SendSerialData 0070  
                                 __end_of_I2C1_MasterWrite 1EE3  
                                   RN487X_RebootCmd@reboot 1886  
                   __end_of_EUSART1_SetOverrunErrorHandler 1F22  
                           _EUSART1_SetOverrunErrorHandler 1F1C  
                                                strcpy@src 0071  
                                         ??_I2C1_DO_RX_ACK 0071  
                               ??_LIGHTBLUE_GetButtonValue 0071  
                                  _I2C1_CallbackReturnStop 1E6A  
                             __end_of_EUSART1_Transmit_ISR 1422  
                          ??_LIGHTBLUE_ParseIncomingPacket 002B  
                                              _serialIndex 0056  
                                     _RN487X_SetSystemMode 101F  
                                     _I2C1_DO_ADDRESS_NACK 1572  
                                   ?_I2C1_MasterDisableIrq 0070  
                             i2c_read2ByteRegister@address 002A  
                    __end_of_RN487X_SetAsyncMessageHandler 1291  
                            _RN487X_SetAsyncMessageHandler 1279  
                                   wr2RegCompleteHandler@p 0078  
           EUSART1_SetFramingErrorHandler@interruptHandler 0071  
           EUSART2_SetFramingErrorHandler@interruptHandler 0071  
                           ?_EUSART1_SetTxInterruptHandler 0071  
                                 RN487X_SetSystemMode@mode 0071  
                           ?_EUSART2_SetRxInterruptHandler 0071  
                        LIGHTBLUE_ParseIncomingPacket@data 0052  
                                       _eusart1RxLastError 0057  
                           RN487X_ReadDefaultResponse@resp 0073  
                                            __pstringtext1 1800  
                                            __pstringtext2 1828  
                                            __pstringtext3 1848  
                                            __pstringtext4 1868  
                                            __pstringtext5 2010  
                                            __pstringtext6 2012  
                                            __pstringtext7 1886  
                                            __pstringtext8 2006  
                                            __pstringtext9 200B  
                                      _EUSART2_Receive_ISR 084E  
                          LIGHTBLUE_SetErrorLedValue@value 0026  
                                 __end_of_I2C1_SetCallback 1469  
                                               _SSP1DATPPS 1EC6  
                                               _SSP1CLKPPS 1EC5  
                                          ??_I2C1_DO_RESET 0071  
                   __end_of_IOCAF6_DefaultInterruptHandler 0800  
                           _IOCAF6_DefaultInterruptHandler 07FF  
                                     _I2C1_MasterOperation 13BD  
                                          _TMR0_Initialize 1184  
                                             ?_getLowPower 0070  
                                     RN487X_SendCmd@cmdLen 0077  
                                                 strncmp@l 0071  
                                                 strncmp@n 0075  
                                                 strncmp@r 0073  
                        _LIGHTBLUE_ParseIncomingPacket$463 002D  
                        _LIGHTBLUE_ParseIncomingPacket$464 002F  
                        _LIGHTBLUE_ParseIncomingPacket$465 0031  
                                    ?_I2C1_MasterGetRxData 0070  
                                 i2c_read2ByteRegister@reg 0024  
                                              _returnReset 0000  
                                         _setOperatingMode 0706  
                                                 strstr@nl 0022  
                                               _TX1STAbits 011E  
                                        ?_getOperatingMode 0070  
                                RN487X_ReadMsg@expectedMsg 0073  
                                               _TX2STAbits 0A1E  
                                              ?_IOCAF6_ISR 0070  
                                             ?_isConnected 0070  
                                    ??_EUSART1_Receive_ISR 0071  
                           __end_of_PIN_MANAGER_Initialize 0B54  
                                       ??_getOperatingMode 002E  
                             ?_LIGHTBLUE_TemperatureSensor 0070  
                          ??_EUSART2_SetTxInterruptHandler 0073  
                            __end_of_rd1RegCompleteHandler 10E9  
                                     ?_EUSART2_Receive_ISR 0070  
                                       _eusart2RxLastError 005E  
                                      RN487X_SendCmd@index 0079  
                         __end_of_rn487x_PrintMessageStart 1648  
                                          _PIN_MANAGER_IOC 1F75  
                         RN487X_ReadDefaultResponse@status 0076  
                             ??_RN487X_ReadDefaultResponse 0073  
                            __end_of_wr1RegCompleteHandler 10D8  
                                    _do_I2C_SEND_ADR_WRITE 0000  
                                  ??_EUSART1_RxDataHandler 0070  
                                     _do_I2C_SEND_ADR_READ 0000  
                         __end_of_LIGHTBLUE_UpdateErrorLed 1347  
                               ??_TMAG5273_CalcTemperature 002F  
                                    ?_RN487X_SetSystemMode 0071  
                        _EUSART2_RxDefaultInterruptHandler 00EB  
                                    ?_I2C1_DO_ADDRESS_NACK 0070  
                               LIGHTBLUE_SplitWord@payload 007B  
                                   RN487X_IndicateRx@value 0071  
