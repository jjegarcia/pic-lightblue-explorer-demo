

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Dec 23 18:21:54 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16LF18456
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    15                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
    17                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    21                           	psect	cinit,global,class=CODE,merge=1,delta=2
    22                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    23                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    25                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    26                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    27                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    28                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    29                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    30                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,noexec
    31                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,noexec
    32                           	psect	inittext,global,class=CODE,delta=2
    33                           	psect	clrtext,global,class=CODE,delta=2
    34                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    35                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    36                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    37                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    38                           	psect	text1,local,class=CODE,merge=1,delta=2
    39                           	psect	text2,local,class=CODE,merge=1,delta=2
    40                           	psect	text3,local,class=CODE,merge=1,delta=2
    41                           	psect	text4,local,class=CODE,merge=1,delta=2
    42                           	psect	text5,local,class=CODE,merge=1,delta=2
    43                           	psect	text6,local,class=CODE,merge=1,delta=2
    44                           	psect	text7,local,class=CODE,merge=1,delta=2
    45                           	psect	text8,local,class=CODE,merge=1,delta=2
    46                           	psect	text9,local,class=CODE,merge=1,delta=2
    47                           	psect	text10,local,class=CODE,merge=1,delta=2
    48                           	psect	text11,local,class=CODE,merge=1,delta=2
    49                           	psect	text12,local,class=CODE,merge=1,delta=2
    50                           	psect	text13,local,class=CODE,merge=1,delta=2
    51                           	psect	text14,local,class=CODE,merge=1,delta=2
    52                           	psect	text15,local,class=CODE,merge=1,delta=2
    53                           	psect	text16,local,class=CODE,merge=1,delta=2
    54                           	psect	text17,local,class=CODE,merge=1,delta=2
    55                           	psect	text18,local,class=CODE,merge=1,delta=2
    56                           	psect	text19,local,class=CODE,merge=1,delta=2
    57                           	psect	text20,local,class=CODE,merge=1,delta=2
    58                           	psect	text21,local,class=CODE,merge=1,delta=2
    59                           	psect	text22,local,class=CODE,merge=1,delta=2
    60                           	psect	text23,local,class=CODE,merge=1,delta=2
    61                           	psect	text24,local,class=CODE,merge=1,delta=2
    62                           	psect	text25,local,class=CODE,merge=1,delta=2
    63                           	psect	text26,local,class=CODE,merge=1,delta=2
    64                           	psect	text27,local,class=CODE,merge=1,delta=2
    65                           	psect	text28,local,class=CODE,merge=1,delta=2
    66                           	psect	text29,local,class=CODE,merge=1,delta=2
    67                           	psect	text30,local,class=CODE,merge=1,delta=2
    68                           	psect	text31,local,class=CODE,merge=1,delta=2
    69                           	psect	text32,local,class=CODE,merge=1,delta=2
    70                           	psect	text33,local,class=CODE,merge=1,delta=2
    71                           	psect	text34,local,class=CODE,merge=1,delta=2
    72                           	psect	text35,local,class=CODE,merge=1,delta=2
    73                           	psect	text36,local,class=CODE,merge=1,delta=2
    74                           	psect	text37,local,class=CODE,merge=1,delta=2
    75                           	psect	text38,local,class=CODE,merge=1,delta=2
    76                           	psect	text39,local,class=CODE,merge=1,delta=2
    77                           	psect	text40,local,class=CODE,merge=1,delta=2
    78                           	psect	text41,local,class=CODE,merge=1,delta=2
    79                           	psect	text42,local,class=CODE,merge=1,delta=2
    80                           	psect	text43,local,class=CODE,merge=1,delta=2
    81                           	psect	text44,local,class=CODE,merge=1,delta=2
    82                           	psect	text45,local,class=CODE,merge=1,delta=2
    83                           	psect	text46,local,class=CODE,merge=1,delta=2
    84                           	psect	text47,local,class=CODE,merge=1,delta=2,group=2
    85                           	psect	text48,local,class=CODE,merge=1,delta=2,group=2
    86                           	psect	text49,local,class=CODE,merge=1,delta=2,group=2
    87                           	psect	text50,local,class=CODE,merge=1,inline,delta=2
    88                           	psect	text51,local,class=CODE,merge=1,inline,delta=2
    89                           	psect	text52,local,class=CODE,merge=1,inline,delta=2
    90                           	psect	text53,local,class=CODE,merge=1,delta=2,group=2
    91                           	psect	text54,local,class=CODE,merge=1,inline,delta=2
    92                           	psect	text55,local,class=CODE,merge=1,delta=2
    93                           	psect	text56,local,class=CODE,merge=1,delta=2
    94                           	psect	text57,local,class=CODE,merge=1,inline,delta=2
    95                           	psect	text58,local,class=CODE,merge=1,delta=2
    96                           	psect	text59,local,class=CODE,merge=1,delta=2
    97                           	psect	text60,local,class=CODE,merge=1,delta=2
    98                           	psect	text61,local,class=CODE,merge=1,delta=2
    99                           	psect	text62,local,class=CODE,merge=1,delta=2
   100                           	psect	text63,local,class=CODE,merge=1,delta=2
   101                           	psect	text64,local,class=CODE,merge=1,delta=2
   102                           	psect	text65,local,class=CODE,merge=1,delta=2
   103                           	psect	text66,local,class=CODE,merge=1,delta=2
   104                           	psect	text67,local,class=CODE,merge=1,delta=2
   105                           	psect	text68,local,class=CODE,merge=1,delta=2
   106                           	psect	text69,local,class=CODE,merge=1,delta=2
   107                           	psect	text70,local,class=CODE,merge=1,delta=2
   108                           	psect	text71,local,class=CODE,merge=1,delta=2
   109                           	psect	text72,local,class=CODE,merge=1,delta=2
   110                           	psect	text73,local,class=CODE,merge=1,delta=2
   111                           	psect	text74,local,class=CODE,merge=1,delta=2
   112                           	psect	text75,local,class=CODE,merge=1,delta=2
   113                           	psect	text76,local,class=CODE,merge=1,delta=2
   114                           	psect	text77,local,class=CODE,merge=1,inline,delta=2
   115                           	psect	text78,local,class=CODE,merge=1,delta=2
   116                           	psect	text79,local,class=CODE,merge=1,delta=2
   117                           	psect	text80,local,class=CODE,merge=1,delta=2
   118                           	psect	text81,local,class=CODE,merge=1,inline,delta=2
   119                           	psect	text82,local,class=CODE,merge=1,delta=2
   120                           	psect	text83,local,class=CODE,merge=1,delta=2
   121                           	psect	text84,local,class=CODE,merge=1,inline,delta=2
   122                           	psect	text85,local,class=CODE,merge=1,delta=2
   123                           	psect	text86,local,class=CODE,merge=1,delta=2
   124                           	psect	text87,local,class=CODE,merge=1,delta=2
   125                           	psect	text88,local,class=CODE,merge=1,delta=2
   126                           	psect	text89,local,class=CODE,merge=1,delta=2
   127                           	psect	text90,local,class=CODE,merge=1,delta=2
   128                           	psect	text91,local,class=CODE,merge=1,delta=2
   129                           	psect	text92,local,class=CODE,merge=1,delta=2
   130                           	psect	text93,local,class=CODE,merge=1,delta=2
   131                           	psect	text94,local,class=CODE,merge=1,delta=2,group=2
   132                           	psect	text95,local,class=CODE,merge=1,inline,delta=2
   133                           	psect	text96,local,class=CODE,merge=1,delta=2
   134                           	psect	text97,local,class=CODE,merge=1,delta=2
   135                           	psect	text98,local,class=CODE,merge=1,delta=2
   136                           	psect	text99,local,class=CODE,merge=1,delta=2
   137                           	psect	text100,local,class=CODE,merge=1,delta=2
   138                           	psect	text101,local,class=CODE,merge=1,delta=2
   139                           	psect	text102,local,class=CODE,merge=1,delta=2
   140                           	psect	text103,local,class=CODE,merge=1,delta=2
   141                           	psect	text104,local,class=CODE,merge=1,delta=2
   142                           	psect	text105,local,class=CODE,merge=1,delta=2
   143                           	psect	text106,local,class=CODE,merge=1,delta=2
   144                           	psect	text107,local,class=CODE,merge=1,inline,delta=2
   145                           	psect	text108,local,class=CODE,merge=1,delta=2
   146                           	psect	text109,local,class=CODE,merge=1,delta=2
   147                           	psect	text110,local,class=CODE,merge=1,delta=2
   148                           	psect	text111,local,class=CODE,merge=1,inline,delta=2
   149                           	psect	text112,local,class=CODE,merge=1,inline,delta=2
   150                           	psect	text113,local,class=CODE,merge=1,delta=2
   151                           	psect	text114,local,class=CODE,merge=1,delta=2
   152                           	psect	text115,local,class=CODE,merge=1,delta=2
   153                           	psect	text116,local,class=CODE,merge=1,delta=2
   154                           	psect	text117,local,class=CODE,merge=1,delta=2
   155                           	psect	text118,local,class=CODE,merge=1,delta=2
   156                           	psect	text119,local,class=CODE,merge=1,delta=2
   157                           	psect	text120,local,class=CODE,merge=1,delta=2
   158                           	psect	text121,local,class=CODE,merge=1,delta=2
   159                           	psect	text122,local,class=CODE,merge=1,delta=2
   160                           	psect	text123,local,class=CODE,merge=1,delta=2
   161                           	psect	text124,local,class=CODE,merge=1,delta=2
   162                           	psect	text125,local,class=CODE,merge=1,delta=2
   163                           	psect	text126,local,class=CODE,merge=1,delta=2
   164                           	psect	text127,local,class=CODE,merge=1,delta=2
   165                           	psect	text128,local,class=CODE,merge=1,delta=2
   166                           	psect	text129,local,class=CODE,merge=1,inline,delta=2
   167                           	psect	text130,local,class=CODE,merge=1,inline,delta=2
   168                           	psect	text131,local,class=CODE,merge=1,inline,delta=2
   169                           	psect	text132,local,class=CODE,merge=1,inline,delta=2
   170                           	psect	text133,local,class=CODE,merge=1,inline,delta=2
   171                           	psect	text134,local,class=CODE,merge=1,inline,delta=2
   172                           	psect	text135,local,class=CODE,merge=1,inline,delta=2
   173                           	psect	text136,local,class=CODE,merge=1,delta=2
   174                           	psect	text137,local,class=CODE,merge=1,delta=2
   175                           	psect	text138,local,class=CODE,merge=1,delta=2
   176                           	psect	text139,local,class=CODE,merge=1,delta=2
   177                           	psect	text140,local,class=CODE,merge=1,delta=2
   178                           	psect	text141,local,class=CODE,merge=1,delta=2
   179                           	psect	text142,local,class=CODE,merge=1,delta=2
   180                           	psect	text143,local,class=CODE,merge=1,delta=2
   181                           	psect	text144,local,class=CODE,merge=1,delta=2
   182                           	psect	text145,local,class=CODE,merge=1,delta=2
   183                           	psect	text146,local,class=CODE,merge=1,delta=2
   184                           	psect	text147,local,class=CODE,merge=1,delta=2
   185                           	psect	text148,local,class=CODE,merge=1,delta=2
   186                           	psect	text149,local,class=CODE,merge=1,delta=2
   187                           	psect	text150,local,class=CODE,merge=1,delta=2
   188                           	psect	text151,local,class=CODE,merge=1,inline,delta=2
   189                           	psect	text152,local,class=CODE,merge=1,inline,delta=2
   190                           	psect	text153,local,class=CODE,merge=1,inline,delta=2
   191                           	psect	text154,local,class=CODE,merge=1,delta=2
   192                           	psect	text155,local,class=CODE,merge=1,inline,delta=2
   193                           	psect	text156,local,class=CODE,merge=1,inline,delta=2
   194                           	psect	text157,local,class=CODE,merge=1,inline,delta=2
   195                           	psect	intentry,global,class=CODE,delta=2
   196                           	psect	text159,local,class=CODE,merge=1,delta=2
   197                           	psect	text160,local,class=CODE,merge=1,delta=2
   198                           	psect	text161,local,class=CODE,merge=1,delta=2
   199                           	psect	text162,local,class=CODE,merge=1,delta=2
   200                           	psect	text163,local,class=CODE,merge=1,delta=2
   201                           	psect	text164,local,class=CODE,merge=1,delta=2
   202                           	psect	text165,local,class=CODE,merge=1,delta=2
   203                           	psect	text166,local,class=CODE,merge=1,delta=2
   204                           	psect	text167,local,class=CODE,merge=1,delta=2
   205                           	psect	text168,local,class=CODE,merge=1,delta=2
   206                           	psect	text169,local,class=CODE,merge=1,delta=2
   207                           	psect	text170,local,class=CODE,merge=1,delta=2
   208                           	psect	text171,local,class=CODE,merge=1,delta=2
   209                           	psect	text172,local,class=CODE,merge=1,delta=2
   210                           	psect	text173,local,class=CODE,merge=1,delta=2
   211                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
   212                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   213                           	dabs	1,0x7E,2
   214     0000                     
   215                           ; Version 2.35
   216                           ; Generated 01/06/2021 GMT
   217                           ; 
   218                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   219                           ; All rights reserved.
   220                           ; 
   221                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   222                           ; 
   223                           ; Redistribution and use in source and binary forms, with or without modification, are
   224                           ; permitted provided that the following conditions are met:
   225                           ; 
   226                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   227                           ;        conditions and the following disclaimer.
   228                           ; 
   229                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   230                           ;        of conditions and the following disclaimer in the documentation and/or other
   231                           ;        materials provided with the distribution. Publication is not required when
   232                           ;        this file is used in an embedded application.
   233                           ; 
   234                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   235                           ;        software without specific prior written permission.
   236                           ; 
   237                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   238                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   239                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   240                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   241                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   242                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   243                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   244                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   245                           ; 
   246                           ; 
   247                           ; Code-generator required, PIC16LF18456 Definitions
   248                           ; 
   249                           ; SFR Addresses
   250     0000                     	;# 
   251     0001                     	;# 
   252     0002                     	;# 
   253     0003                     	;# 
   254     0004                     	;# 
   255     0005                     	;# 
   256     0006                     	;# 
   257     0007                     	;# 
   258     0008                     	;# 
   259     0009                     	;# 
   260     000A                     	;# 
   261     000B                     	;# 
   262     000C                     	;# 
   263     000D                     	;# 
   264     000E                     	;# 
   265     0010                     	;# 
   266     0012                     	;# 
   267     0013                     	;# 
   268     0014                     	;# 
   269     0016                     	;# 
   270     0018                     	;# 
   271     0019                     	;# 
   272     001A                     	;# 
   273     001C                     	;# 
   274     008C                     	;# 
   275     008C                     	;# 
   276     008D                     	;# 
   277     008E                     	;# 
   278     008E                     	;# 
   279     008F                     	;# 
   280     0090                     	;# 
   281     0090                     	;# 
   282     0091                     	;# 
   283     0092                     	;# 
   284     0092                     	;# 
   285     0093                     	;# 
   286     0094                     	;# 
   287     0094                     	;# 
   288     0095                     	;# 
   289     0096                     	;# 
   290     0096                     	;# 
   291     0097                     	;# 
   292     0098                     	;# 
   293     0099                     	;# 
   294     009A                     	;# 
   295     009B                     	;# 
   296     009B                     	;# 
   297     009C                     	;# 
   298     009D                     	;# 
   299     009D                     	;# 
   300     009E                     	;# 
   301     009F                     	;# 
   302     010C                     	;# 
   303     010C                     	;# 
   304     010D                     	;# 
   305     010E                     	;# 
   306     010F                     	;# 
   307     010F                     	;# 
   308     0110                     	;# 
   309     0111                     	;# 
   310     0112                     	;# 
   311     0113                     	;# 
   312     0114                     	;# 
   313     0115                     	;# 
   314     0116                     	;# 
   315     0117                     	;# 
   316     0118                     	;# 
   317     0119                     	;# 
   318     0119                     	;# 
   319     0119                     	;# 
   320     011A                     	;# 
   321     011A                     	;# 
   322     011A                     	;# 
   323     011B                     	;# 
   324     011B                     	;# 
   325     011B                     	;# 
   326     011B                     	;# 
   327     011B                     	;# 
   328     011C                     	;# 
   329     011C                     	;# 
   330     011C                     	;# 
   331     011D                     	;# 
   332     011D                     	;# 
   333     011D                     	;# 
   334     011E                     	;# 
   335     011E                     	;# 
   336     011E                     	;# 
   337     011F                     	;# 
   338     011F                     	;# 
   339     011F                     	;# 
   340     011F                     	;# 
   341     011F                     	;# 
   342     018C                     	;# 
   343     018D                     	;# 
   344     018E                     	;# 
   345     018F                     	;# 
   346     0190                     	;# 
   347     0191                     	;# 
   348     0192                     	;# 
   349     0196                     	;# 
   350     0197                     	;# 
   351     0198                     	;# 
   352     0199                     	;# 
   353     019A                     	;# 
   354     019B                     	;# 
   355     019C                     	;# 
   356     020C                     	;# 
   357     020D                     	;# 
   358     020E                     	;# 
   359     020E                     	;# 
   360     020F                     	;# 
   361     020F                     	;# 
   362     0210                     	;# 
   363     0210                     	;# 
   364     0211                     	;# 
   365     0211                     	;# 
   366     0212                     	;# 
   367     0213                     	;# 
   368     0214                     	;# 
   369     0214                     	;# 
   370     0215                     	;# 
   371     0215                     	;# 
   372     0216                     	;# 
   373     0216                     	;# 
   374     0217                     	;# 
   375     0217                     	;# 
   376     0218                     	;# 
   377     0219                     	;# 
   378     021A                     	;# 
   379     021A                     	;# 
   380     021B                     	;# 
   381     021B                     	;# 
   382     021C                     	;# 
   383     021C                     	;# 
   384     021D                     	;# 
   385     021D                     	;# 
   386     021E                     	;# 
   387     021F                     	;# 
   388     028C                     	;# 
   389     028C                     	;# 
   390     028D                     	;# 
   391     028D                     	;# 
   392     028E                     	;# 
   393     028F                     	;# 
   394     0290                     	;# 
   395     0291                     	;# 
   396     0292                     	;# 
   397     0292                     	;# 
   398     0293                     	;# 
   399     0293                     	;# 
   400     0294                     	;# 
   401     0295                     	;# 
   402     0296                     	;# 
   403     0297                     	;# 
   404     0298                     	;# 
   405     0298                     	;# 
   406     0299                     	;# 
   407     0299                     	;# 
   408     029A                     	;# 
   409     029B                     	;# 
   410     029C                     	;# 
   411     029D                     	;# 
   412     029F                     	;# 
   413     030C                     	;# 
   414     030C                     	;# 
   415     030D                     	;# 
   416     030E                     	;# 
   417     030F                     	;# 
   418     0310                     	;# 
   419     0310                     	;# 
   420     0311                     	;# 
   421     0312                     	;# 
   422     0313                     	;# 
   423     0314                     	;# 
   424     0314                     	;# 
   425     0315                     	;# 
   426     0316                     	;# 
   427     0317                     	;# 
   428     0318                     	;# 
   429     0318                     	;# 
   430     0319                     	;# 
   431     031A                     	;# 
   432     031B                     	;# 
   433     031C                     	;# 
   434     031C                     	;# 
   435     031D                     	;# 
   436     031E                     	;# 
   437     031F                     	;# 
   438     038C                     	;# 
   439     038C                     	;# 
   440     038D                     	;# 
   441     038E                     	;# 
   442     0390                     	;# 
   443     0390                     	;# 
   444     0391                     	;# 
   445     0392                     	;# 
   446     048C                     	;# 
   447     048C                     	;# 
   448     048D                     	;# 
   449     048E                     	;# 
   450     048F                     	;# 
   451     048F                     	;# 
   452     0490                     	;# 
   453     0491                     	;# 
   454     0492                     	;# 
   455     0492                     	;# 
   456     0493                     	;# 
   457     0494                     	;# 
   458     0495                     	;# 
   459     0495                     	;# 
   460     0496                     	;# 
   461     0497                     	;# 
   462     0498                     	;# 
   463     0499                     	;# 
   464     049A                     	;# 
   465     049B                     	;# 
   466     049C                     	;# 
   467     049D                     	;# 
   468     050C                     	;# 
   469     050C                     	;# 
   470     050D                     	;# 
   471     050E                     	;# 
   472     050F                     	;# 
   473     050F                     	;# 
   474     0510                     	;# 
   475     0511                     	;# 
   476     0512                     	;# 
   477     0512                     	;# 
   478     0513                     	;# 
   479     0514                     	;# 
   480     0515                     	;# 
   481     0515                     	;# 
   482     0516                     	;# 
   483     0517                     	;# 
   484     0518                     	;# 
   485     0519                     	;# 
   486     051A                     	;# 
   487     051B                     	;# 
   488     051C                     	;# 
   489     051D                     	;# 
   490     058C                     	;# 
   491     058C                     	;# 
   492     058D                     	;# 
   493     058E                     	;# 
   494     058F                     	;# 
   495     058F                     	;# 
   496     0590                     	;# 
   497     0591                     	;# 
   498     0592                     	;# 
   499     0593                     	;# 
   500     059C                     	;# 
   501     059C                     	;# 
   502     059D                     	;# 
   503     059D                     	;# 
   504     059E                     	;# 
   505     059F                     	;# 
   506     060C                     	;# 
   507     060C                     	;# 
   508     060D                     	;# 
   509     060D                     	;# 
   510     060E                     	;# 
   511     060F                     	;# 
   512     0610                     	;# 
   513     0611                     	;# 
   514     0612                     	;# 
   515     0613                     	;# 
   516     0614                     	;# 
   517     0616                     	;# 
   518     0616                     	;# 
   519     0617                     	;# 
   520     0617                     	;# 
   521     0618                     	;# 
   522     0619                     	;# 
   523     061A                     	;# 
   524     061B                     	;# 
   525     061C                     	;# 
   526     061D                     	;# 
   527     061E                     	;# 
   528     068C                     	;# 
   529     068D                     	;# 
   530     068E                     	;# 
   531     068F                     	;# 
   532     0690                     	;# 
   533     0691                     	;# 
   534     0692                     	;# 
   535     0693                     	;# 
   536     0694                     	;# 
   537     070C                     	;# 
   538     070D                     	;# 
   539     070E                     	;# 
   540     070F                     	;# 
   541     0710                     	;# 
   542     0711                     	;# 
   543     0712                     	;# 
   544     0713                     	;# 
   545     0714                     	;# 
   546     0716                     	;# 
   547     0717                     	;# 
   548     0718                     	;# 
   549     0719                     	;# 
   550     071A                     	;# 
   551     071B                     	;# 
   552     071C                     	;# 
   553     071D                     	;# 
   554     071E                     	;# 
   555     0796                     	;# 
   556     0797                     	;# 
   557     0798                     	;# 
   558     0799                     	;# 
   559     079A                     	;# 
   560     079B                     	;# 
   561     079C                     	;# 
   562     079D                     	;# 
   563     080C                     	;# 
   564     080D                     	;# 
   565     080E                     	;# 
   566     080F                     	;# 
   567     0810                     	;# 
   568     0811                     	;# 
   569     0813                     	;# 
   570     0814                     	;# 
   571     081A                     	;# 
   572     081A                     	;# 
   573     081B                     	;# 
   574     081C                     	;# 
   575     081C                     	;# 
   576     081D                     	;# 
   577     081E                     	;# 
   578     081F                     	;# 
   579     088C                     	;# 
   580     088D                     	;# 
   581     088E                     	;# 
   582     088F                     	;# 
   583     0890                     	;# 
   584     0891                     	;# 
   585     0892                     	;# 
   586     0893                     	;# 
   587     0895                     	;# 
   588     0896                     	;# 
   589     0897                     	;# 
   590     0898                     	;# 
   591     0899                     	;# 
   592     089A                     	;# 
   593     089B                     	;# 
   594     090C                     	;# 
   595     090E                     	;# 
   596     090F                     	;# 
   597     091F                     	;# 
   598     098F                     	;# 
   599     098F                     	;# 
   600     0990                     	;# 
   601     0991                     	;# 
   602     0992                     	;# 
   603     0993                     	;# 
   604     0994                     	;# 
   605     0995                     	;# 
   606     0996                     	;# 
   607     0997                     	;# 
   608     0A19                     	;# 
   609     0A19                     	;# 
   610     0A1A                     	;# 
   611     0A1A                     	;# 
   612     0A1B                     	;# 
   613     0A1B                     	;# 
   614     0A1B                     	;# 
   615     0A1C                     	;# 
   616     0A1C                     	;# 
   617     0A1D                     	;# 
   618     0A1D                     	;# 
   619     0A1E                     	;# 
   620     0A1E                     	;# 
   621     0A1F                     	;# 
   622     0A1F                     	;# 
   623     0A1F                     	;# 
   624     1E0F                     	;# 
   625     1E10                     	;# 
   626     1E11                     	;# 
   627     1E12                     	;# 
   628     1E13                     	;# 
   629     1E14                     	;# 
   630     1E15                     	;# 
   631     1E16                     	;# 
   632     1E17                     	;# 
   633     1E18                     	;# 
   634     1E19                     	;# 
   635     1E1A                     	;# 
   636     1E1B                     	;# 
   637     1E1C                     	;# 
   638     1E1D                     	;# 
   639     1E1E                     	;# 
   640     1E1F                     	;# 
   641     1E20                     	;# 
   642     1E21                     	;# 
   643     1E22                     	;# 
   644     1E23                     	;# 
   645     1E24                     	;# 
   646     1E25                     	;# 
   647     1E26                     	;# 
   648     1E27                     	;# 
   649     1E28                     	;# 
   650     1E29                     	;# 
   651     1E2A                     	;# 
   652     1E2B                     	;# 
   653     1E2C                     	;# 
   654     1E2D                     	;# 
   655     1E2E                     	;# 
   656     1E2F                     	;# 
   657     1E30                     	;# 
   658     1E31                     	;# 
   659     1E32                     	;# 
   660     1E33                     	;# 
   661     1E34                     	;# 
   662     1E35                     	;# 
   663     1E36                     	;# 
   664     1E37                     	;# 
   665     1E8F                     	;# 
   666     1E90                     	;# 
   667     1E91                     	;# 
   668     1E92                     	;# 
   669     1E93                     	;# 
   670     1E94                     	;# 
   671     1E95                     	;# 
   672     1E96                     	;# 
   673     1E97                     	;# 
   674     1E9C                     	;# 
   675     1E9D                     	;# 
   676     1E9E                     	;# 
   677     1EA1                     	;# 
   678     1EA2                     	;# 
   679     1EA3                     	;# 
   680     1EA4                     	;# 
   681     1EA5                     	;# 
   682     1EA9                     	;# 
   683     1EAA                     	;# 
   684     1EAB                     	;# 
   685     1EAC                     	;# 
   686     1EB1                     	;# 
   687     1EB2                     	;# 
   688     1EB3                     	;# 
   689     1EB8                     	;# 
   690     1EB9                     	;# 
   691     1EBA                     	;# 
   692     1EBB                     	;# 
   693     1EBC                     	;# 
   694     1EBD                     	;# 
   695     1EBE                     	;# 
   696     1EC3                     	;# 
   697     1EC5                     	;# 
   698     1EC6                     	;# 
   699     1EC7                     	;# 
   700     1EC8                     	;# 
   701     1EC9                     	;# 
   702     1ECA                     	;# 
   703     1ECB                     	;# 
   704     1ECC                     	;# 
   705     1ECD                     	;# 
   706     1ECE                     	;# 
   707     1F10                     	;# 
   708     1F11                     	;# 
   709     1F12                     	;# 
   710     1F13                     	;# 
   711     1F14                     	;# 
   712     1F15                     	;# 
   713     1F16                     	;# 
   714     1F17                     	;# 
   715     1F18                     	;# 
   716     1F19                     	;# 
   717     1F1A                     	;# 
   718     1F1B                     	;# 
   719     1F1C                     	;# 
   720     1F1D                     	;# 
   721     1F1E                     	;# 
   722     1F1F                     	;# 
   723     1F20                     	;# 
   724     1F21                     	;# 
   725     1F22                     	;# 
   726     1F23                     	;# 
   727     1F24                     	;# 
   728     1F25                     	;# 
   729     1F26                     	;# 
   730     1F27                     	;# 
   731     1F38                     	;# 
   732     1F39                     	;# 
   733     1F3A                     	;# 
   734     1F3B                     	;# 
   735     1F3C                     	;# 
   736     1F3D                     	;# 
   737     1F3E                     	;# 
   738     1F3F                     	;# 
   739     1F43                     	;# 
   740     1F44                     	;# 
   741     1F45                     	;# 
   742     1F46                     	;# 
   743     1F47                     	;# 
   744     1F48                     	;# 
   745     1F49                     	;# 
   746     1F4A                     	;# 
   747     1F4E                     	;# 
   748     1F4F                     	;# 
   749     1F50                     	;# 
   750     1F51                     	;# 
   751     1F52                     	;# 
   752     1F53                     	;# 
   753     1F54                     	;# 
   754     1F55                     	;# 
   755     1F65                     	;# 
   756     1F66                     	;# 
   757     1F67                     	;# 
   758     1F68                     	;# 
   759     1F69                     	;# 
   760     1F6A                     	;# 
   761     1F6B                     	;# 
   762     1FE4                     	;# 
   763     1FE5                     	;# 
   764     1FE6                     	;# 
   765     1FE7                     	;# 
   766     1FE8                     	;# 
   767     1FE8                     	;# 
   768     1FE9                     	;# 
   769     1FEA                     	;# 
   770     1FEB                     	;# 
   771     1FED                     	;# 
   772     1FEE                     	;# 
   773     1FEF                     	;# 
   774     0000                     	;# 
   775     0001                     	;# 
   776     0002                     	;# 
   777     0003                     	;# 
   778     0004                     	;# 
   779     0005                     	;# 
   780     0006                     	;# 
   781     0007                     	;# 
   782     0008                     	;# 
   783     0009                     	;# 
   784     000A                     	;# 
   785     000B                     	;# 
   786     000C                     	;# 
   787     000D                     	;# 
   788     000E                     	;# 
   789     0010                     	;# 
   790     0012                     	;# 
   791     0013                     	;# 
   792     0014                     	;# 
   793     0016                     	;# 
   794     0018                     	;# 
   795     0019                     	;# 
   796     001A                     	;# 
   797     001C                     	;# 
   798     008C                     	;# 
   799     008C                     	;# 
   800     008D                     	;# 
   801     008E                     	;# 
   802     008E                     	;# 
   803     008F                     	;# 
   804     0090                     	;# 
   805     0090                     	;# 
   806     0091                     	;# 
   807     0092                     	;# 
   808     0092                     	;# 
   809     0093                     	;# 
   810     0094                     	;# 
   811     0094                     	;# 
   812     0095                     	;# 
   813     0096                     	;# 
   814     0096                     	;# 
   815     0097                     	;# 
   816     0098                     	;# 
   817     0099                     	;# 
   818     009A                     	;# 
   819     009B                     	;# 
   820     009B                     	;# 
   821     009C                     	;# 
   822     009D                     	;# 
   823     009D                     	;# 
   824     009E                     	;# 
   825     009F                     	;# 
   826     010C                     	;# 
   827     010C                     	;# 
   828     010D                     	;# 
   829     010E                     	;# 
   830     010F                     	;# 
   831     010F                     	;# 
   832     0110                     	;# 
   833     0111                     	;# 
   834     0112                     	;# 
   835     0113                     	;# 
   836     0114                     	;# 
   837     0115                     	;# 
   838     0116                     	;# 
   839     0117                     	;# 
   840     0118                     	;# 
   841     0119                     	;# 
   842     0119                     	;# 
   843     0119                     	;# 
   844     011A                     	;# 
   845     011A                     	;# 
   846     011A                     	;# 
   847     011B                     	;# 
   848     011B                     	;# 
   849     011B                     	;# 
   850     011B                     	;# 
   851     011B                     	;# 
   852     011C                     	;# 
   853     011C                     	;# 
   854     011C                     	;# 
   855     011D                     	;# 
   856     011D                     	;# 
   857     011D                     	;# 
   858     011E                     	;# 
   859     011E                     	;# 
   860     011E                     	;# 
   861     011F                     	;# 
   862     011F                     	;# 
   863     011F                     	;# 
   864     011F                     	;# 
   865     011F                     	;# 
   866     018C                     	;# 
   867     018D                     	;# 
   868     018E                     	;# 
   869     018F                     	;# 
   870     0190                     	;# 
   871     0191                     	;# 
   872     0192                     	;# 
   873     0196                     	;# 
   874     0197                     	;# 
   875     0198                     	;# 
   876     0199                     	;# 
   877     019A                     	;# 
   878     019B                     	;# 
   879     019C                     	;# 
   880     020C                     	;# 
   881     020D                     	;# 
   882     020E                     	;# 
   883     020E                     	;# 
   884     020F                     	;# 
   885     020F                     	;# 
   886     0210                     	;# 
   887     0210                     	;# 
   888     0211                     	;# 
   889     0211                     	;# 
   890     0212                     	;# 
   891     0213                     	;# 
   892     0214                     	;# 
   893     0214                     	;# 
   894     0215                     	;# 
   895     0215                     	;# 
   896     0216                     	;# 
   897     0216                     	;# 
   898     0217                     	;# 
   899     0217                     	;# 
   900     0218                     	;# 
   901     0219                     	;# 
   902     021A                     	;# 
   903     021A                     	;# 
   904     021B                     	;# 
   905     021B                     	;# 
   906     021C                     	;# 
   907     021C                     	;# 
   908     021D                     	;# 
   909     021D                     	;# 
   910     021E                     	;# 
   911     021F                     	;# 
   912     028C                     	;# 
   913     028C                     	;# 
   914     028D                     	;# 
   915     028D                     	;# 
   916     028E                     	;# 
   917     028F                     	;# 
   918     0290                     	;# 
   919     0291                     	;# 
   920     0292                     	;# 
   921     0292                     	;# 
   922     0293                     	;# 
   923     0293                     	;# 
   924     0294                     	;# 
   925     0295                     	;# 
   926     0296                     	;# 
   927     0297                     	;# 
   928     0298                     	;# 
   929     0298                     	;# 
   930     0299                     	;# 
   931     0299                     	;# 
   932     029A                     	;# 
   933     029B                     	;# 
   934     029C                     	;# 
   935     029D                     	;# 
   936     029F                     	;# 
   937     030C                     	;# 
   938     030C                     	;# 
   939     030D                     	;# 
   940     030E                     	;# 
   941     030F                     	;# 
   942     0310                     	;# 
   943     0310                     	;# 
   944     0311                     	;# 
   945     0312                     	;# 
   946     0313                     	;# 
   947     0314                     	;# 
   948     0314                     	;# 
   949     0315                     	;# 
   950     0316                     	;# 
   951     0317                     	;# 
   952     0318                     	;# 
   953     0318                     	;# 
   954     0319                     	;# 
   955     031A                     	;# 
   956     031B                     	;# 
   957     031C                     	;# 
   958     031C                     	;# 
   959     031D                     	;# 
   960     031E                     	;# 
   961     031F                     	;# 
   962     038C                     	;# 
   963     038C                     	;# 
   964     038D                     	;# 
   965     038E                     	;# 
   966     0390                     	;# 
   967     0390                     	;# 
   968     0391                     	;# 
   969     0392                     	;# 
   970     048C                     	;# 
   971     048C                     	;# 
   972     048D                     	;# 
   973     048E                     	;# 
   974     048F                     	;# 
   975     048F                     	;# 
   976     0490                     	;# 
   977     0491                     	;# 
   978     0492                     	;# 
   979     0492                     	;# 
   980     0493                     	;# 
   981     0494                     	;# 
   982     0495                     	;# 
   983     0495                     	;# 
   984     0496                     	;# 
   985     0497                     	;# 
   986     0498                     	;# 
   987     0499                     	;# 
   988     049A                     	;# 
   989     049B                     	;# 
   990     049C                     	;# 
   991     049D                     	;# 
   992     050C                     	;# 
   993     050C                     	;# 
   994     050D                     	;# 
   995     050E                     	;# 
   996     050F                     	;# 
   997     050F                     	;# 
   998     0510                     	;# 
   999     0511                     	;# 
  1000     0512                     	;# 
  1001     0512                     	;# 
  1002     0513                     	;# 
  1003     0514                     	;# 
  1004     0515                     	;# 
  1005     0515                     	;# 
  1006     0516                     	;# 
  1007     0517                     	;# 
  1008     0518                     	;# 
  1009     0519                     	;# 
  1010     051A                     	;# 
  1011     051B                     	;# 
  1012     051C                     	;# 
  1013     051D                     	;# 
  1014     058C                     	;# 
  1015     058C                     	;# 
  1016     058D                     	;# 
  1017     058E                     	;# 
  1018     058F                     	;# 
  1019     058F                     	;# 
  1020     0590                     	;# 
  1021     0591                     	;# 
  1022     0592                     	;# 
  1023     0593                     	;# 
  1024     059C                     	;# 
  1025     059C                     	;# 
  1026     059D                     	;# 
  1027     059D                     	;# 
  1028     059E                     	;# 
  1029     059F                     	;# 
  1030     060C                     	;# 
  1031     060C                     	;# 
  1032     060D                     	;# 
  1033     060D                     	;# 
  1034     060E                     	;# 
  1035     060F                     	;# 
  1036     0610                     	;# 
  1037     0611                     	;# 
  1038     0612                     	;# 
  1039     0613                     	;# 
  1040     0614                     	;# 
  1041     0616                     	;# 
  1042     0616                     	;# 
  1043     0617                     	;# 
  1044     0617                     	;# 
  1045     0618                     	;# 
  1046     0619                     	;# 
  1047     061A                     	;# 
  1048     061B                     	;# 
  1049     061C                     	;# 
  1050     061D                     	;# 
  1051     061E                     	;# 
  1052     068C                     	;# 
  1053     068D                     	;# 
  1054     068E                     	;# 
  1055     068F                     	;# 
  1056     0690                     	;# 
  1057     0691                     	;# 
  1058     0692                     	;# 
  1059     0693                     	;# 
  1060     0694                     	;# 
  1061     070C                     	;# 
  1062     070D                     	;# 
  1063     070E                     	;# 
  1064     070F                     	;# 
  1065     0710                     	;# 
  1066     0711                     	;# 
  1067     0712                     	;# 
  1068     0713                     	;# 
  1069     0714                     	;# 
  1070     0716                     	;# 
  1071     0717                     	;# 
  1072     0718                     	;# 
  1073     0719                     	;# 
  1074     071A                     	;# 
  1075     071B                     	;# 
  1076     071C                     	;# 
  1077     071D                     	;# 
  1078     071E                     	;# 
  1079     0796                     	;# 
  1080     0797                     	;# 
  1081     0798                     	;# 
  1082     0799                     	;# 
  1083     079A                     	;# 
  1084     079B                     	;# 
  1085     079C                     	;# 
  1086     079D                     	;# 
  1087     080C                     	;# 
  1088     080D                     	;# 
  1089     080E                     	;# 
  1090     080F                     	;# 
  1091     0810                     	;# 
  1092     0811                     	;# 
  1093     0813                     	;# 
  1094     0814                     	;# 
  1095     081A                     	;# 
  1096     081A                     	;# 
  1097     081B                     	;# 
  1098     081C                     	;# 
  1099     081C                     	;# 
  1100     081D                     	;# 
  1101     081E                     	;# 
  1102     081F                     	;# 
  1103     088C                     	;# 
  1104     088D                     	;# 
  1105     088E                     	;# 
  1106     088F                     	;# 
  1107     0890                     	;# 
  1108     0891                     	;# 
  1109     0892                     	;# 
  1110     0893                     	;# 
  1111     0895                     	;# 
  1112     0896                     	;# 
  1113     0897                     	;# 
  1114     0898                     	;# 
  1115     0899                     	;# 
  1116     089A                     	;# 
  1117     089B                     	;# 
  1118     090C                     	;# 
  1119     090E                     	;# 
  1120     090F                     	;# 
  1121     091F                     	;# 
  1122     098F                     	;# 
  1123     098F                     	;# 
  1124     0990                     	;# 
  1125     0991                     	;# 
  1126     0992                     	;# 
  1127     0993                     	;# 
  1128     0994                     	;# 
  1129     0995                     	;# 
  1130     0996                     	;# 
  1131     0997                     	;# 
  1132     0A19                     	;# 
  1133     0A19                     	;# 
  1134     0A1A                     	;# 
  1135     0A1A                     	;# 
  1136     0A1B                     	;# 
  1137     0A1B                     	;# 
  1138     0A1B                     	;# 
  1139     0A1C                     	;# 
  1140     0A1C                     	;# 
  1141     0A1D                     	;# 
  1142     0A1D                     	;# 
  1143     0A1E                     	;# 
  1144     0A1E                     	;# 
  1145     0A1F                     	;# 
  1146     0A1F                     	;# 
  1147     0A1F                     	;# 
  1148     1E0F                     	;# 
  1149     1E10                     	;# 
  1150     1E11                     	;# 
  1151     1E12                     	;# 
  1152     1E13                     	;# 
  1153     1E14                     	;# 
  1154     1E15                     	;# 
  1155     1E16                     	;# 
  1156     1E17                     	;# 
  1157     1E18                     	;# 
  1158     1E19                     	;# 
  1159     1E1A                     	;# 
  1160     1E1B                     	;# 
  1161     1E1C                     	;# 
  1162     1E1D                     	;# 
  1163     1E1E                     	;# 
  1164     1E1F                     	;# 
  1165     1E20                     	;# 
  1166     1E21                     	;# 
  1167     1E22                     	;# 
  1168     1E23                     	;# 
  1169     1E24                     	;# 
  1170     1E25                     	;# 
  1171     1E26                     	;# 
  1172     1E27                     	;# 
  1173     1E28                     	;# 
  1174     1E29                     	;# 
  1175     1E2A                     	;# 
  1176     1E2B                     	;# 
  1177     1E2C                     	;# 
  1178     1E2D                     	;# 
  1179     1E2E                     	;# 
  1180     1E2F                     	;# 
  1181     1E30                     	;# 
  1182     1E31                     	;# 
  1183     1E32                     	;# 
  1184     1E33                     	;# 
  1185     1E34                     	;# 
  1186     1E35                     	;# 
  1187     1E36                     	;# 
  1188     1E37                     	;# 
  1189     1E8F                     	;# 
  1190     1E90                     	;# 
  1191     1E91                     	;# 
  1192     1E92                     	;# 
  1193     1E93                     	;# 
  1194     1E94                     	;# 
  1195     1E95                     	;# 
  1196     1E96                     	;# 
  1197     1E97                     	;# 
  1198     1E9C                     	;# 
  1199     1E9D                     	;# 
  1200     1E9E                     	;# 
  1201     1EA1                     	;# 
  1202     1EA2                     	;# 
  1203     1EA3                     	;# 
  1204     1EA4                     	;# 
  1205     1EA5                     	;# 
  1206     1EA9                     	;# 
  1207     1EAA                     	;# 
  1208     1EAB                     	;# 
  1209     1EAC                     	;# 
  1210     1EB1                     	;# 
  1211     1EB2                     	;# 
  1212     1EB3                     	;# 
  1213     1EB8                     	;# 
  1214     1EB9                     	;# 
  1215     1EBA                     	;# 
  1216     1EBB                     	;# 
  1217     1EBC                     	;# 
  1218     1EBD                     	;# 
  1219     1EBE                     	;# 
  1220     1EC3                     	;# 
  1221     1EC5                     	;# 
  1222     1EC6                     	;# 
  1223     1EC7                     	;# 
  1224     1EC8                     	;# 
  1225     1EC9                     	;# 
  1226     1ECA                     	;# 
  1227     1ECB                     	;# 
  1228     1ECC                     	;# 
  1229     1ECD                     	;# 
  1230     1ECE                     	;# 
  1231     1F10                     	;# 
  1232     1F11                     	;# 
  1233     1F12                     	;# 
  1234     1F13                     	;# 
  1235     1F14                     	;# 
  1236     1F15                     	;# 
  1237     1F16                     	;# 
  1238     1F17                     	;# 
  1239     1F18                     	;# 
  1240     1F19                     	;# 
  1241     1F1A                     	;# 
  1242     1F1B                     	;# 
  1243     1F1C                     	;# 
  1244     1F1D                     	;# 
  1245     1F1E                     	;# 
  1246     1F1F                     	;# 
  1247     1F20                     	;# 
  1248     1F21                     	;# 
  1249     1F22                     	;# 
  1250     1F23                     	;# 
  1251     1F24                     	;# 
  1252     1F25                     	;# 
  1253     1F26                     	;# 
  1254     1F27                     	;# 
  1255     1F38                     	;# 
  1256     1F39                     	;# 
  1257     1F3A                     	;# 
  1258     1F3B                     	;# 
  1259     1F3C                     	;# 
  1260     1F3D                     	;# 
  1261     1F3E                     	;# 
  1262     1F3F                     	;# 
  1263     1F43                     	;# 
  1264     1F44                     	;# 
  1265     1F45                     	;# 
  1266     1F46                     	;# 
  1267     1F47                     	;# 
  1268     1F48                     	;# 
  1269     1F49                     	;# 
  1270     1F4A                     	;# 
  1271     1F4E                     	;# 
  1272     1F4F                     	;# 
  1273     1F50                     	;# 
  1274     1F51                     	;# 
  1275     1F52                     	;# 
  1276     1F53                     	;# 
  1277     1F54                     	;# 
  1278     1F55                     	;# 
  1279     1F65                     	;# 
  1280     1F66                     	;# 
  1281     1F67                     	;# 
  1282     1F68                     	;# 
  1283     1F69                     	;# 
  1284     1F6A                     	;# 
  1285     1F6B                     	;# 
  1286     1FE4                     	;# 
  1287     1FE5                     	;# 
  1288     1FE6                     	;# 
  1289     1FE7                     	;# 
  1290     1FE8                     	;# 
  1291     1FE8                     	;# 
  1292     1FE9                     	;# 
  1293     1FEA                     	;# 
  1294     1FEB                     	;# 
  1295     1FED                     	;# 
  1296     1FEE                     	;# 
  1297     1FEF                     	;# 
  1298     0000                     	;# 
  1299     0001                     	;# 
  1300     0002                     	;# 
  1301     0003                     	;# 
  1302     0004                     	;# 
  1303     0005                     	;# 
  1304     0006                     	;# 
  1305     0007                     	;# 
  1306     0008                     	;# 
  1307     0009                     	;# 
  1308     000A                     	;# 
  1309     000B                     	;# 
  1310     000C                     	;# 
  1311     000D                     	;# 
  1312     000E                     	;# 
  1313     0010                     	;# 
  1314     0012                     	;# 
  1315     0013                     	;# 
  1316     0014                     	;# 
  1317     0016                     	;# 
  1318     0018                     	;# 
  1319     0019                     	;# 
  1320     001A                     	;# 
  1321     001C                     	;# 
  1322     008C                     	;# 
  1323     008C                     	;# 
  1324     008D                     	;# 
  1325     008E                     	;# 
  1326     008E                     	;# 
  1327     008F                     	;# 
  1328     0090                     	;# 
  1329     0090                     	;# 
  1330     0091                     	;# 
  1331     0092                     	;# 
  1332     0092                     	;# 
  1333     0093                     	;# 
  1334     0094                     	;# 
  1335     0094                     	;# 
  1336     0095                     	;# 
  1337     0096                     	;# 
  1338     0096                     	;# 
  1339     0097                     	;# 
  1340     0098                     	;# 
  1341     0099                     	;# 
  1342     009A                     	;# 
  1343     009B                     	;# 
  1344     009B                     	;# 
  1345     009C                     	;# 
  1346     009D                     	;# 
  1347     009D                     	;# 
  1348     009E                     	;# 
  1349     009F                     	;# 
  1350     010C                     	;# 
  1351     010C                     	;# 
  1352     010D                     	;# 
  1353     010E                     	;# 
  1354     010F                     	;# 
  1355     010F                     	;# 
  1356     0110                     	;# 
  1357     0111                     	;# 
  1358     0112                     	;# 
  1359     0113                     	;# 
  1360     0114                     	;# 
  1361     0115                     	;# 
  1362     0116                     	;# 
  1363     0117                     	;# 
  1364     0118                     	;# 
  1365     0119                     	;# 
  1366     0119                     	;# 
  1367     0119                     	;# 
  1368     011A                     	;# 
  1369     011A                     	;# 
  1370     011A                     	;# 
  1371     011B                     	;# 
  1372     011B                     	;# 
  1373     011B                     	;# 
  1374     011B                     	;# 
  1375     011B                     	;# 
  1376     011C                     	;# 
  1377     011C                     	;# 
  1378     011C                     	;# 
  1379     011D                     	;# 
  1380     011D                     	;# 
  1381     011D                     	;# 
  1382     011E                     	;# 
  1383     011E                     	;# 
  1384     011E                     	;# 
  1385     011F                     	;# 
  1386     011F                     	;# 
  1387     011F                     	;# 
  1388     011F                     	;# 
  1389     011F                     	;# 
  1390     018C                     	;# 
  1391     018D                     	;# 
  1392     018E                     	;# 
  1393     018F                     	;# 
  1394     0190                     	;# 
  1395     0191                     	;# 
  1396     0192                     	;# 
  1397     0196                     	;# 
  1398     0197                     	;# 
  1399     0198                     	;# 
  1400     0199                     	;# 
  1401     019A                     	;# 
  1402     019B                     	;# 
  1403     019C                     	;# 
  1404     020C                     	;# 
  1405     020D                     	;# 
  1406     020E                     	;# 
  1407     020E                     	;# 
  1408     020F                     	;# 
  1409     020F                     	;# 
  1410     0210                     	;# 
  1411     0210                     	;# 
  1412     0211                     	;# 
  1413     0211                     	;# 
  1414     0212                     	;# 
  1415     0213                     	;# 
  1416     0214                     	;# 
  1417     0214                     	;# 
  1418     0215                     	;# 
  1419     0215                     	;# 
  1420     0216                     	;# 
  1421     0216                     	;# 
  1422     0217                     	;# 
  1423     0217                     	;# 
  1424     0218                     	;# 
  1425     0219                     	;# 
  1426     021A                     	;# 
  1427     021A                     	;# 
  1428     021B                     	;# 
  1429     021B                     	;# 
  1430     021C                     	;# 
  1431     021C                     	;# 
  1432     021D                     	;# 
  1433     021D                     	;# 
  1434     021E                     	;# 
  1435     021F                     	;# 
  1436     028C                     	;# 
  1437     028C                     	;# 
  1438     028D                     	;# 
  1439     028D                     	;# 
  1440     028E                     	;# 
  1441     028F                     	;# 
  1442     0290                     	;# 
  1443     0291                     	;# 
  1444     0292                     	;# 
  1445     0292                     	;# 
  1446     0293                     	;# 
  1447     0293                     	;# 
  1448     0294                     	;# 
  1449     0295                     	;# 
  1450     0296                     	;# 
  1451     0297                     	;# 
  1452     0298                     	;# 
  1453     0298                     	;# 
  1454     0299                     	;# 
  1455     0299                     	;# 
  1456     029A                     	;# 
  1457     029B                     	;# 
  1458     029C                     	;# 
  1459     029D                     	;# 
  1460     029F                     	;# 
  1461     030C                     	;# 
  1462     030C                     	;# 
  1463     030D                     	;# 
  1464     030E                     	;# 
  1465     030F                     	;# 
  1466     0310                     	;# 
  1467     0310                     	;# 
  1468     0311                     	;# 
  1469     0312                     	;# 
  1470     0313                     	;# 
  1471     0314                     	;# 
  1472     0314                     	;# 
  1473     0315                     	;# 
  1474     0316                     	;# 
  1475     0317                     	;# 
  1476     0318                     	;# 
  1477     0318                     	;# 
  1478     0319                     	;# 
  1479     031A                     	;# 
  1480     031B                     	;# 
  1481     031C                     	;# 
  1482     031C                     	;# 
  1483     031D                     	;# 
  1484     031E                     	;# 
  1485     031F                     	;# 
  1486     038C                     	;# 
  1487     038C                     	;# 
  1488     038D                     	;# 
  1489     038E                     	;# 
  1490     0390                     	;# 
  1491     0390                     	;# 
  1492     0391                     	;# 
  1493     0392                     	;# 
  1494     048C                     	;# 
  1495     048C                     	;# 
  1496     048D                     	;# 
  1497     048E                     	;# 
  1498     048F                     	;# 
  1499     048F                     	;# 
  1500     0490                     	;# 
  1501     0491                     	;# 
  1502     0492                     	;# 
  1503     0492                     	;# 
  1504     0493                     	;# 
  1505     0494                     	;# 
  1506     0495                     	;# 
  1507     0495                     	;# 
  1508     0496                     	;# 
  1509     0497                     	;# 
  1510     0498                     	;# 
  1511     0499                     	;# 
  1512     049A                     	;# 
  1513     049B                     	;# 
  1514     049C                     	;# 
  1515     049D                     	;# 
  1516     050C                     	;# 
  1517     050C                     	;# 
  1518     050D                     	;# 
  1519     050E                     	;# 
  1520     050F                     	;# 
  1521     050F                     	;# 
  1522     0510                     	;# 
  1523     0511                     	;# 
  1524     0512                     	;# 
  1525     0512                     	;# 
  1526     0513                     	;# 
  1527     0514                     	;# 
  1528     0515                     	;# 
  1529     0515                     	;# 
  1530     0516                     	;# 
  1531     0517                     	;# 
  1532     0518                     	;# 
  1533     0519                     	;# 
  1534     051A                     	;# 
  1535     051B                     	;# 
  1536     051C                     	;# 
  1537     051D                     	;# 
  1538     058C                     	;# 
  1539     058C                     	;# 
  1540     058D                     	;# 
  1541     058E                     	;# 
  1542     058F                     	;# 
  1543     058F                     	;# 
  1544     0590                     	;# 
  1545     0591                     	;# 
  1546     0592                     	;# 
  1547     0593                     	;# 
  1548     059C                     	;# 
  1549     059C                     	;# 
  1550     059D                     	;# 
  1551     059D                     	;# 
  1552     059E                     	;# 
  1553     059F                     	;# 
  1554     060C                     	;# 
  1555     060C                     	;# 
  1556     060D                     	;# 
  1557     060D                     	;# 
  1558     060E                     	;# 
  1559     060F                     	;# 
  1560     0610                     	;# 
  1561     0611                     	;# 
  1562     0612                     	;# 
  1563     0613                     	;# 
  1564     0614                     	;# 
  1565     0616                     	;# 
  1566     0616                     	;# 
  1567     0617                     	;# 
  1568     0617                     	;# 
  1569     0618                     	;# 
  1570     0619                     	;# 
  1571     061A                     	;# 
  1572     061B                     	;# 
  1573     061C                     	;# 
  1574     061D                     	;# 
  1575     061E                     	;# 
  1576     068C                     	;# 
  1577     068D                     	;# 
  1578     068E                     	;# 
  1579     068F                     	;# 
  1580     0690                     	;# 
  1581     0691                     	;# 
  1582     0692                     	;# 
  1583     0693                     	;# 
  1584     0694                     	;# 
  1585     070C                     	;# 
  1586     070D                     	;# 
  1587     070E                     	;# 
  1588     070F                     	;# 
  1589     0710                     	;# 
  1590     0711                     	;# 
  1591     0712                     	;# 
  1592     0713                     	;# 
  1593     0714                     	;# 
  1594     0716                     	;# 
  1595     0717                     	;# 
  1596     0718                     	;# 
  1597     0719                     	;# 
  1598     071A                     	;# 
  1599     071B                     	;# 
  1600     071C                     	;# 
  1601     071D                     	;# 
  1602     071E                     	;# 
  1603     0796                     	;# 
  1604     0797                     	;# 
  1605     0798                     	;# 
  1606     0799                     	;# 
  1607     079A                     	;# 
  1608     079B                     	;# 
  1609     079C                     	;# 
  1610     079D                     	;# 
  1611     080C                     	;# 
  1612     080D                     	;# 
  1613     080E                     	;# 
  1614     080F                     	;# 
  1615     0810                     	;# 
  1616     0811                     	;# 
  1617     0813                     	;# 
  1618     0814                     	;# 
  1619     081A                     	;# 
  1620     081A                     	;# 
  1621     081B                     	;# 
  1622     081C                     	;# 
  1623     081C                     	;# 
  1624     081D                     	;# 
  1625     081E                     	;# 
  1626     081F                     	;# 
  1627     088C                     	;# 
  1628     088D                     	;# 
  1629     088E                     	;# 
  1630     088F                     	;# 
  1631     0890                     	;# 
  1632     0891                     	;# 
  1633     0892                     	;# 
  1634     0893                     	;# 
  1635     0895                     	;# 
  1636     0896                     	;# 
  1637     0897                     	;# 
  1638     0898                     	;# 
  1639     0899                     	;# 
  1640     089A                     	;# 
  1641     089B                     	;# 
  1642     090C                     	;# 
  1643     090E                     	;# 
  1644     090F                     	;# 
  1645     091F                     	;# 
  1646     098F                     	;# 
  1647     098F                     	;# 
  1648     0990                     	;# 
  1649     0991                     	;# 
  1650     0992                     	;# 
  1651     0993                     	;# 
  1652     0994                     	;# 
  1653     0995                     	;# 
  1654     0996                     	;# 
  1655     0997                     	;# 
  1656     0A19                     	;# 
  1657     0A19                     	;# 
  1658     0A1A                     	;# 
  1659     0A1A                     	;# 
  1660     0A1B                     	;# 
  1661     0A1B                     	;# 
  1662     0A1B                     	;# 
  1663     0A1C                     	;# 
  1664     0A1C                     	;# 
  1665     0A1D                     	;# 
  1666     0A1D                     	;# 
  1667     0A1E                     	;# 
  1668     0A1E                     	;# 
  1669     0A1F                     	;# 
  1670     0A1F                     	;# 
  1671     0A1F                     	;# 
  1672     1E0F                     	;# 
  1673     1E10                     	;# 
  1674     1E11                     	;# 
  1675     1E12                     	;# 
  1676     1E13                     	;# 
  1677     1E14                     	;# 
  1678     1E15                     	;# 
  1679     1E16                     	;# 
  1680     1E17                     	;# 
  1681     1E18                     	;# 
  1682     1E19                     	;# 
  1683     1E1A                     	;# 
  1684     1E1B                     	;# 
  1685     1E1C                     	;# 
  1686     1E1D                     	;# 
  1687     1E1E                     	;# 
  1688     1E1F                     	;# 
  1689     1E20                     	;# 
  1690     1E21                     	;# 
  1691     1E22                     	;# 
  1692     1E23                     	;# 
  1693     1E24                     	;# 
  1694     1E25                     	;# 
  1695     1E26                     	;# 
  1696     1E27                     	;# 
  1697     1E28                     	;# 
  1698     1E29                     	;# 
  1699     1E2A                     	;# 
  1700     1E2B                     	;# 
  1701     1E2C                     	;# 
  1702     1E2D                     	;# 
  1703     1E2E                     	;# 
  1704     1E2F                     	;# 
  1705     1E30                     	;# 
  1706     1E31                     	;# 
  1707     1E32                     	;# 
  1708     1E33                     	;# 
  1709     1E34                     	;# 
  1710     1E35                     	;# 
  1711     1E36                     	;# 
  1712     1E37                     	;# 
  1713     1E8F                     	;# 
  1714     1E90                     	;# 
  1715     1E91                     	;# 
  1716     1E92                     	;# 
  1717     1E93                     	;# 
  1718     1E94                     	;# 
  1719     1E95                     	;# 
  1720     1E96                     	;# 
  1721     1E97                     	;# 
  1722     1E9C                     	;# 
  1723     1E9D                     	;# 
  1724     1E9E                     	;# 
  1725     1EA1                     	;# 
  1726     1EA2                     	;# 
  1727     1EA3                     	;# 
  1728     1EA4                     	;# 
  1729     1EA5                     	;# 
  1730     1EA9                     	;# 
  1731     1EAA                     	;# 
  1732     1EAB                     	;# 
  1733     1EAC                     	;# 
  1734     1EB1                     	;# 
  1735     1EB2                     	;# 
  1736     1EB3                     	;# 
  1737     1EB8                     	;# 
  1738     1EB9                     	;# 
  1739     1EBA                     	;# 
  1740     1EBB                     	;# 
  1741     1EBC                     	;# 
  1742     1EBD                     	;# 
  1743     1EBE                     	;# 
  1744     1EC3                     	;# 
  1745     1EC5                     	;# 
  1746     1EC6                     	;# 
  1747     1EC7                     	;# 
  1748     1EC8                     	;# 
  1749     1EC9                     	;# 
  1750     1ECA                     	;# 
  1751     1ECB                     	;# 
  1752     1ECC                     	;# 
  1753     1ECD                     	;# 
  1754     1ECE                     	;# 
  1755     1F10                     	;# 
  1756     1F11                     	;# 
  1757     1F12                     	;# 
  1758     1F13                     	;# 
  1759     1F14                     	;# 
  1760     1F15                     	;# 
  1761     1F16                     	;# 
  1762     1F17                     	;# 
  1763     1F18                     	;# 
  1764     1F19                     	;# 
  1765     1F1A                     	;# 
  1766     1F1B                     	;# 
  1767     1F1C                     	;# 
  1768     1F1D                     	;# 
  1769     1F1E                     	;# 
  1770     1F1F                     	;# 
  1771     1F20                     	;# 
  1772     1F21                     	;# 
  1773     1F22                     	;# 
  1774     1F23                     	;# 
  1775     1F24                     	;# 
  1776     1F25                     	;# 
  1777     1F26                     	;# 
  1778     1F27                     	;# 
  1779     1F38                     	;# 
  1780     1F39                     	;# 
  1781     1F3A                     	;# 
  1782     1F3B                     	;# 
  1783     1F3C                     	;# 
  1784     1F3D                     	;# 
  1785     1F3E                     	;# 
  1786     1F3F                     	;# 
  1787     1F43                     	;# 
  1788     1F44                     	;# 
  1789     1F45                     	;# 
  1790     1F46                     	;# 
  1791     1F47                     	;# 
  1792     1F48                     	;# 
  1793     1F49                     	;# 
  1794     1F4A                     	;# 
  1795     1F4E                     	;# 
  1796     1F4F                     	;# 
  1797     1F50                     	;# 
  1798     1F51                     	;# 
  1799     1F52                     	;# 
  1800     1F53                     	;# 
  1801     1F54                     	;# 
  1802     1F55                     	;# 
  1803     1F65                     	;# 
  1804     1F66                     	;# 
  1805     1F67                     	;# 
  1806     1F68                     	;# 
  1807     1F69                     	;# 
  1808     1F6A                     	;# 
  1809     1F6B                     	;# 
  1810     1FE4                     	;# 
  1811     1FE5                     	;# 
  1812     1FE6                     	;# 
  1813     1FE7                     	;# 
  1814     1FE8                     	;# 
  1815     1FE8                     	;# 
  1816     1FE9                     	;# 
  1817     1FEA                     	;# 
  1818     1FEB                     	;# 
  1819     1FED                     	;# 
  1820     1FEE                     	;# 
  1821     1FEF                     	;# 
  1822     0000                     	;# 
  1823     0001                     	;# 
  1824     0002                     	;# 
  1825     0003                     	;# 
  1826     0004                     	;# 
  1827     0005                     	;# 
  1828     0006                     	;# 
  1829     0007                     	;# 
  1830     0008                     	;# 
  1831     0009                     	;# 
  1832     000A                     	;# 
  1833     000B                     	;# 
  1834     000C                     	;# 
  1835     000D                     	;# 
  1836     000E                     	;# 
  1837     0010                     	;# 
  1838     0012                     	;# 
  1839     0013                     	;# 
  1840     0014                     	;# 
  1841     0016                     	;# 
  1842     0018                     	;# 
  1843     0019                     	;# 
  1844     001A                     	;# 
  1845     001C                     	;# 
  1846     008C                     	;# 
  1847     008C                     	;# 
  1848     008D                     	;# 
  1849     008E                     	;# 
  1850     008E                     	;# 
  1851     008F                     	;# 
  1852     0090                     	;# 
  1853     0090                     	;# 
  1854     0091                     	;# 
  1855     0092                     	;# 
  1856     0092                     	;# 
  1857     0093                     	;# 
  1858     0094                     	;# 
  1859     0094                     	;# 
  1860     0095                     	;# 
  1861     0096                     	;# 
  1862     0096                     	;# 
  1863     0097                     	;# 
  1864     0098                     	;# 
  1865     0099                     	;# 
  1866     009A                     	;# 
  1867     009B                     	;# 
  1868     009B                     	;# 
  1869     009C                     	;# 
  1870     009D                     	;# 
  1871     009D                     	;# 
  1872     009E                     	;# 
  1873     009F                     	;# 
  1874     010C                     	;# 
  1875     010C                     	;# 
  1876     010D                     	;# 
  1877     010E                     	;# 
  1878     010F                     	;# 
  1879     010F                     	;# 
  1880     0110                     	;# 
  1881     0111                     	;# 
  1882     0112                     	;# 
  1883     0113                     	;# 
  1884     0114                     	;# 
  1885     0115                     	;# 
  1886     0116                     	;# 
  1887     0117                     	;# 
  1888     0118                     	;# 
  1889     0119                     	;# 
  1890     0119                     	;# 
  1891     0119                     	;# 
  1892     011A                     	;# 
  1893     011A                     	;# 
  1894     011A                     	;# 
  1895     011B                     	;# 
  1896     011B                     	;# 
  1897     011B                     	;# 
  1898     011B                     	;# 
  1899     011B                     	;# 
  1900     011C                     	;# 
  1901     011C                     	;# 
  1902     011C                     	;# 
  1903     011D                     	;# 
  1904     011D                     	;# 
  1905     011D                     	;# 
  1906     011E                     	;# 
  1907     011E                     	;# 
  1908     011E                     	;# 
  1909     011F                     	;# 
  1910     011F                     	;# 
  1911     011F                     	;# 
  1912     011F                     	;# 
  1913     011F                     	;# 
  1914     018C                     	;# 
  1915     018D                     	;# 
  1916     018E                     	;# 
  1917     018F                     	;# 
  1918     0190                     	;# 
  1919     0191                     	;# 
  1920     0192                     	;# 
  1921     0196                     	;# 
  1922     0197                     	;# 
  1923     0198                     	;# 
  1924     0199                     	;# 
  1925     019A                     	;# 
  1926     019B                     	;# 
  1927     019C                     	;# 
  1928     020C                     	;# 
  1929     020D                     	;# 
  1930     020E                     	;# 
  1931     020E                     	;# 
  1932     020F                     	;# 
  1933     020F                     	;# 
  1934     0210                     	;# 
  1935     0210                     	;# 
  1936     0211                     	;# 
  1937     0211                     	;# 
  1938     0212                     	;# 
  1939     0213                     	;# 
  1940     0214                     	;# 
  1941     0214                     	;# 
  1942     0215                     	;# 
  1943     0215                     	;# 
  1944     0216                     	;# 
  1945     0216                     	;# 
  1946     0217                     	;# 
  1947     0217                     	;# 
  1948     0218                     	;# 
  1949     0219                     	;# 
  1950     021A                     	;# 
  1951     021A                     	;# 
  1952     021B                     	;# 
  1953     021B                     	;# 
  1954     021C                     	;# 
  1955     021C                     	;# 
  1956     021D                     	;# 
  1957     021D                     	;# 
  1958     021E                     	;# 
  1959     021F                     	;# 
  1960     028C                     	;# 
  1961     028C                     	;# 
  1962     028D                     	;# 
  1963     028D                     	;# 
  1964     028E                     	;# 
  1965     028F                     	;# 
  1966     0290                     	;# 
  1967     0291                     	;# 
  1968     0292                     	;# 
  1969     0292                     	;# 
  1970     0293                     	;# 
  1971     0293                     	;# 
  1972     0294                     	;# 
  1973     0295                     	;# 
  1974     0296                     	;# 
  1975     0297                     	;# 
  1976     0298                     	;# 
  1977     0298                     	;# 
  1978     0299                     	;# 
  1979     0299                     	;# 
  1980     029A                     	;# 
  1981     029B                     	;# 
  1982     029C                     	;# 
  1983     029D                     	;# 
  1984     029F                     	;# 
  1985     030C                     	;# 
  1986     030C                     	;# 
  1987     030D                     	;# 
  1988     030E                     	;# 
  1989     030F                     	;# 
  1990     0310                     	;# 
  1991     0310                     	;# 
  1992     0311                     	;# 
  1993     0312                     	;# 
  1994     0313                     	;# 
  1995     0314                     	;# 
  1996     0314                     	;# 
  1997     0315                     	;# 
  1998     0316                     	;# 
  1999     0317                     	;# 
  2000     0318                     	;# 
  2001     0318                     	;# 
  2002     0319                     	;# 
  2003     031A                     	;# 
  2004     031B                     	;# 
  2005     031C                     	;# 
  2006     031C                     	;# 
  2007     031D                     	;# 
  2008     031E                     	;# 
  2009     031F                     	;# 
  2010     038C                     	;# 
  2011     038C                     	;# 
  2012     038D                     	;# 
  2013     038E                     	;# 
  2014     0390                     	;# 
  2015     0390                     	;# 
  2016     0391                     	;# 
  2017     0392                     	;# 
  2018     048C                     	;# 
  2019     048C                     	;# 
  2020     048D                     	;# 
  2021     048E                     	;# 
  2022     048F                     	;# 
  2023     048F                     	;# 
  2024     0490                     	;# 
  2025     0491                     	;# 
  2026     0492                     	;# 
  2027     0492                     	;# 
  2028     0493                     	;# 
  2029     0494                     	;# 
  2030     0495                     	;# 
  2031     0495                     	;# 
  2032     0496                     	;# 
  2033     0497                     	;# 
  2034     0498                     	;# 
  2035     0499                     	;# 
  2036     049A                     	;# 
  2037     049B                     	;# 
  2038     049C                     	;# 
  2039     049D                     	;# 
  2040     050C                     	;# 
  2041     050C                     	;# 
  2042     050D                     	;# 
  2043     050E                     	;# 
  2044     050F                     	;# 
  2045     050F                     	;# 
  2046     0510                     	;# 
  2047     0511                     	;# 
  2048     0512                     	;# 
  2049     0512                     	;# 
  2050     0513                     	;# 
  2051     0514                     	;# 
  2052     0515                     	;# 
  2053     0515                     	;# 
  2054     0516                     	;# 
  2055     0517                     	;# 
  2056     0518                     	;# 
  2057     0519                     	;# 
  2058     051A                     	;# 
  2059     051B                     	;# 
  2060     051C                     	;# 
  2061     051D                     	;# 
  2062     058C                     	;# 
  2063     058C                     	;# 
  2064     058D                     	;# 
  2065     058E                     	;# 
  2066     058F                     	;# 
  2067     058F                     	;# 
  2068     0590                     	;# 
  2069     0591                     	;# 
  2070     0592                     	;# 
  2071     0593                     	;# 
  2072     059C                     	;# 
  2073     059C                     	;# 
  2074     059D                     	;# 
  2075     059D                     	;# 
  2076     059E                     	;# 
  2077     059F                     	;# 
  2078     060C                     	;# 
  2079     060C                     	;# 
  2080     060D                     	;# 
  2081     060D                     	;# 
  2082     060E                     	;# 
  2083     060F                     	;# 
  2084     0610                     	;# 
  2085     0611                     	;# 
  2086     0612                     	;# 
  2087     0613                     	;# 
  2088     0614                     	;# 
  2089     0616                     	;# 
  2090     0616                     	;# 
  2091     0617                     	;# 
  2092     0617                     	;# 
  2093     0618                     	;# 
  2094     0619                     	;# 
  2095     061A                     	;# 
  2096     061B                     	;# 
  2097     061C                     	;# 
  2098     061D                     	;# 
  2099     061E                     	;# 
  2100     068C                     	;# 
  2101     068D                     	;# 
  2102     068E                     	;# 
  2103     068F                     	;# 
  2104     0690                     	;# 
  2105     0691                     	;# 
  2106     0692                     	;# 
  2107     0693                     	;# 
  2108     0694                     	;# 
  2109     070C                     	;# 
  2110     070D                     	;# 
  2111     070E                     	;# 
  2112     070F                     	;# 
  2113     0710                     	;# 
  2114     0711                     	;# 
  2115     0712                     	;# 
  2116     0713                     	;# 
  2117     0714                     	;# 
  2118     0716                     	;# 
  2119     0717                     	;# 
  2120     0718                     	;# 
  2121     0719                     	;# 
  2122     071A                     	;# 
  2123     071B                     	;# 
  2124     071C                     	;# 
  2125     071D                     	;# 
  2126     071E                     	;# 
  2127     0796                     	;# 
  2128     0797                     	;# 
  2129     0798                     	;# 
  2130     0799                     	;# 
  2131     079A                     	;# 
  2132     079B                     	;# 
  2133     079C                     	;# 
  2134     079D                     	;# 
  2135     080C                     	;# 
  2136     080D                     	;# 
  2137     080E                     	;# 
  2138     080F                     	;# 
  2139     0810                     	;# 
  2140     0811                     	;# 
  2141     0813                     	;# 
  2142     0814                     	;# 
  2143     081A                     	;# 
  2144     081A                     	;# 
  2145     081B                     	;# 
  2146     081C                     	;# 
  2147     081C                     	;# 
  2148     081D                     	;# 
  2149     081E                     	;# 
  2150     081F                     	;# 
  2151     088C                     	;# 
  2152     088D                     	;# 
  2153     088E                     	;# 
  2154     088F                     	;# 
  2155     0890                     	;# 
  2156     0891                     	;# 
  2157     0892                     	;# 
  2158     0893                     	;# 
  2159     0895                     	;# 
  2160     0896                     	;# 
  2161     0897                     	;# 
  2162     0898                     	;# 
  2163     0899                     	;# 
  2164     089A                     	;# 
  2165     089B                     	;# 
  2166     090C                     	;# 
  2167     090E                     	;# 
  2168     090F                     	;# 
  2169     091F                     	;# 
  2170     098F                     	;# 
  2171     098F                     	;# 
  2172     0990                     	;# 
  2173     0991                     	;# 
  2174     0992                     	;# 
  2175     0993                     	;# 
  2176     0994                     	;# 
  2177     0995                     	;# 
  2178     0996                     	;# 
  2179     0997                     	;# 
  2180     0A19                     	;# 
  2181     0A19                     	;# 
  2182     0A1A                     	;# 
  2183     0A1A                     	;# 
  2184     0A1B                     	;# 
  2185     0A1B                     	;# 
  2186     0A1B                     	;# 
  2187     0A1C                     	;# 
  2188     0A1C                     	;# 
  2189     0A1D                     	;# 
  2190     0A1D                     	;# 
  2191     0A1E                     	;# 
  2192     0A1E                     	;# 
  2193     0A1F                     	;# 
  2194     0A1F                     	;# 
  2195     0A1F                     	;# 
  2196     1E0F                     	;# 
  2197     1E10                     	;# 
  2198     1E11                     	;# 
  2199     1E12                     	;# 
  2200     1E13                     	;# 
  2201     1E14                     	;# 
  2202     1E15                     	;# 
  2203     1E16                     	;# 
  2204     1E17                     	;# 
  2205     1E18                     	;# 
  2206     1E19                     	;# 
  2207     1E1A                     	;# 
  2208     1E1B                     	;# 
  2209     1E1C                     	;# 
  2210     1E1D                     	;# 
  2211     1E1E                     	;# 
  2212     1E1F                     	;# 
  2213     1E20                     	;# 
  2214     1E21                     	;# 
  2215     1E22                     	;# 
  2216     1E23                     	;# 
  2217     1E24                     	;# 
  2218     1E25                     	;# 
  2219     1E26                     	;# 
  2220     1E27                     	;# 
  2221     1E28                     	;# 
  2222     1E29                     	;# 
  2223     1E2A                     	;# 
  2224     1E2B                     	;# 
  2225     1E2C                     	;# 
  2226     1E2D                     	;# 
  2227     1E2E                     	;# 
  2228     1E2F                     	;# 
  2229     1E30                     	;# 
  2230     1E31                     	;# 
  2231     1E32                     	;# 
  2232     1E33                     	;# 
  2233     1E34                     	;# 
  2234     1E35                     	;# 
  2235     1E36                     	;# 
  2236     1E37                     	;# 
  2237     1E8F                     	;# 
  2238     1E90                     	;# 
  2239     1E91                     	;# 
  2240     1E92                     	;# 
  2241     1E93                     	;# 
  2242     1E94                     	;# 
  2243     1E95                     	;# 
  2244     1E96                     	;# 
  2245     1E97                     	;# 
  2246     1E9C                     	;# 
  2247     1E9D                     	;# 
  2248     1E9E                     	;# 
  2249     1EA1                     	;# 
  2250     1EA2                     	;# 
  2251     1EA3                     	;# 
  2252     1EA4                     	;# 
  2253     1EA5                     	;# 
  2254     1EA9                     	;# 
  2255     1EAA                     	;# 
  2256     1EAB                     	;# 
  2257     1EAC                     	;# 
  2258     1EB1                     	;# 
  2259     1EB2                     	;# 
  2260     1EB3                     	;# 
  2261     1EB8                     	;# 
  2262     1EB9                     	;# 
  2263     1EBA                     	;# 
  2264     1EBB                     	;# 
  2265     1EBC                     	;# 
  2266     1EBD                     	;# 
  2267     1EBE                     	;# 
  2268     1EC3                     	;# 
  2269     1EC5                     	;# 
  2270     1EC6                     	;# 
  2271     1EC7                     	;# 
  2272     1EC8                     	;# 
  2273     1EC9                     	;# 
  2274     1ECA                     	;# 
  2275     1ECB                     	;# 
  2276     1ECC                     	;# 
  2277     1ECD                     	;# 
  2278     1ECE                     	;# 
  2279     1F10                     	;# 
  2280     1F11                     	;# 
  2281     1F12                     	;# 
  2282     1F13                     	;# 
  2283     1F14                     	;# 
  2284     1F15                     	;# 
  2285     1F16                     	;# 
  2286     1F17                     	;# 
  2287     1F18                     	;# 
  2288     1F19                     	;# 
  2289     1F1A                     	;# 
  2290     1F1B                     	;# 
  2291     1F1C                     	;# 
  2292     1F1D                     	;# 
  2293     1F1E                     	;# 
  2294     1F1F                     	;# 
  2295     1F20                     	;# 
  2296     1F21                     	;# 
  2297     1F22                     	;# 
  2298     1F23                     	;# 
  2299     1F24                     	;# 
  2300     1F25                     	;# 
  2301     1F26                     	;# 
  2302     1F27                     	;# 
  2303     1F38                     	;# 
  2304     1F39                     	;# 
  2305     1F3A                     	;# 
  2306     1F3B                     	;# 
  2307     1F3C                     	;# 
  2308     1F3D                     	;# 
  2309     1F3E                     	;# 
  2310     1F3F                     	;# 
  2311     1F43                     	;# 
  2312     1F44                     	;# 
  2313     1F45                     	;# 
  2314     1F46                     	;# 
  2315     1F47                     	;# 
  2316     1F48                     	;# 
  2317     1F49                     	;# 
  2318     1F4A                     	;# 
  2319     1F4E                     	;# 
  2320     1F4F                     	;# 
  2321     1F50                     	;# 
  2322     1F51                     	;# 
  2323     1F52                     	;# 
  2324     1F53                     	;# 
  2325     1F54                     	;# 
  2326     1F55                     	;# 
  2327     1F65                     	;# 
  2328     1F66                     	;# 
  2329     1F67                     	;# 
  2330     1F68                     	;# 
  2331     1F69                     	;# 
  2332     1F6A                     	;# 
  2333     1F6B                     	;# 
  2334     1FE4                     	;# 
  2335     1FE5                     	;# 
  2336     1FE6                     	;# 
  2337     1FE7                     	;# 
  2338     1FE8                     	;# 
  2339     1FE8                     	;# 
  2340     1FE9                     	;# 
  2341     1FEA                     	;# 
  2342     1FEB                     	;# 
  2343     1FED                     	;# 
  2344     1FEE                     	;# 
  2345     1FEF                     	;# 
  2346     0000                     	;# 
  2347     0001                     	;# 
  2348     0002                     	;# 
  2349     0003                     	;# 
  2350     0004                     	;# 
  2351     0005                     	;# 
  2352     0006                     	;# 
  2353     0007                     	;# 
  2354     0008                     	;# 
  2355     0009                     	;# 
  2356     000A                     	;# 
  2357     000B                     	;# 
  2358     000C                     	;# 
  2359     000D                     	;# 
  2360     000E                     	;# 
  2361     0010                     	;# 
  2362     0012                     	;# 
  2363     0013                     	;# 
  2364     0014                     	;# 
  2365     0016                     	;# 
  2366     0018                     	;# 
  2367     0019                     	;# 
  2368     001A                     	;# 
  2369     001C                     	;# 
  2370     008C                     	;# 
  2371     008C                     	;# 
  2372     008D                     	;# 
  2373     008E                     	;# 
  2374     008E                     	;# 
  2375     008F                     	;# 
  2376     0090                     	;# 
  2377     0090                     	;# 
  2378     0091                     	;# 
  2379     0092                     	;# 
  2380     0092                     	;# 
  2381     0093                     	;# 
  2382     0094                     	;# 
  2383     0094                     	;# 
  2384     0095                     	;# 
  2385     0096                     	;# 
  2386     0096                     	;# 
  2387     0097                     	;# 
  2388     0098                     	;# 
  2389     0099                     	;# 
  2390     009A                     	;# 
  2391     009B                     	;# 
  2392     009B                     	;# 
  2393     009C                     	;# 
  2394     009D                     	;# 
  2395     009D                     	;# 
  2396     009E                     	;# 
  2397     009F                     	;# 
  2398     010C                     	;# 
  2399     010C                     	;# 
  2400     010D                     	;# 
  2401     010E                     	;# 
  2402     010F                     	;# 
  2403     010F                     	;# 
  2404     0110                     	;# 
  2405     0111                     	;# 
  2406     0112                     	;# 
  2407     0113                     	;# 
  2408     0114                     	;# 
  2409     0115                     	;# 
  2410     0116                     	;# 
  2411     0117                     	;# 
  2412     0118                     	;# 
  2413     0119                     	;# 
  2414     0119                     	;# 
  2415     0119                     	;# 
  2416     011A                     	;# 
  2417     011A                     	;# 
  2418     011A                     	;# 
  2419     011B                     	;# 
  2420     011B                     	;# 
  2421     011B                     	;# 
  2422     011B                     	;# 
  2423     011B                     	;# 
  2424     011C                     	;# 
  2425     011C                     	;# 
  2426     011C                     	;# 
  2427     011D                     	;# 
  2428     011D                     	;# 
  2429     011D                     	;# 
  2430     011E                     	;# 
  2431     011E                     	;# 
  2432     011E                     	;# 
  2433     011F                     	;# 
  2434     011F                     	;# 
  2435     011F                     	;# 
  2436     011F                     	;# 
  2437     011F                     	;# 
  2438     018C                     	;# 
  2439     018D                     	;# 
  2440     018E                     	;# 
  2441     018F                     	;# 
  2442     0190                     	;# 
  2443     0191                     	;# 
  2444     0192                     	;# 
  2445     0196                     	;# 
  2446     0197                     	;# 
  2447     0198                     	;# 
  2448     0199                     	;# 
  2449     019A                     	;# 
  2450     019B                     	;# 
  2451     019C                     	;# 
  2452     020C                     	;# 
  2453     020D                     	;# 
  2454     020E                     	;# 
  2455     020E                     	;# 
  2456     020F                     	;# 
  2457     020F                     	;# 
  2458     0210                     	;# 
  2459     0210                     	;# 
  2460     0211                     	;# 
  2461     0211                     	;# 
  2462     0212                     	;# 
  2463     0213                     	;# 
  2464     0214                     	;# 
  2465     0214                     	;# 
  2466     0215                     	;# 
  2467     0215                     	;# 
  2468     0216                     	;# 
  2469     0216                     	;# 
  2470     0217                     	;# 
  2471     0217                     	;# 
  2472     0218                     	;# 
  2473     0219                     	;# 
  2474     021A                     	;# 
  2475     021A                     	;# 
  2476     021B                     	;# 
  2477     021B                     	;# 
  2478     021C                     	;# 
  2479     021C                     	;# 
  2480     021D                     	;# 
  2481     021D                     	;# 
  2482     021E                     	;# 
  2483     021F                     	;# 
  2484     028C                     	;# 
  2485     028C                     	;# 
  2486     028D                     	;# 
  2487     028D                     	;# 
  2488     028E                     	;# 
  2489     028F                     	;# 
  2490     0290                     	;# 
  2491     0291                     	;# 
  2492     0292                     	;# 
  2493     0292                     	;# 
  2494     0293                     	;# 
  2495     0293                     	;# 
  2496     0294                     	;# 
  2497     0295                     	;# 
  2498     0296                     	;# 
  2499     0297                     	;# 
  2500     0298                     	;# 
  2501     0298                     	;# 
  2502     0299                     	;# 
  2503     0299                     	;# 
  2504     029A                     	;# 
  2505     029B                     	;# 
  2506     029C                     	;# 
  2507     029D                     	;# 
  2508     029F                     	;# 
  2509     030C                     	;# 
  2510     030C                     	;# 
  2511     030D                     	;# 
  2512     030E                     	;# 
  2513     030F                     	;# 
  2514     0310                     	;# 
  2515     0310                     	;# 
  2516     0311                     	;# 
  2517     0312                     	;# 
  2518     0313                     	;# 
  2519     0314                     	;# 
  2520     0314                     	;# 
  2521     0315                     	;# 
  2522     0316                     	;# 
  2523     0317                     	;# 
  2524     0318                     	;# 
  2525     0318                     	;# 
  2526     0319                     	;# 
  2527     031A                     	;# 
  2528     031B                     	;# 
  2529     031C                     	;# 
  2530     031C                     	;# 
  2531     031D                     	;# 
  2532     031E                     	;# 
  2533     031F                     	;# 
  2534     038C                     	;# 
  2535     038C                     	;# 
  2536     038D                     	;# 
  2537     038E                     	;# 
  2538     0390                     	;# 
  2539     0390                     	;# 
  2540     0391                     	;# 
  2541     0392                     	;# 
  2542     048C                     	;# 
  2543     048C                     	;# 
  2544     048D                     	;# 
  2545     048E                     	;# 
  2546     048F                     	;# 
  2547     048F                     	;# 
  2548     0490                     	;# 
  2549     0491                     	;# 
  2550     0492                     	;# 
  2551     0492                     	;# 
  2552     0493                     	;# 
  2553     0494                     	;# 
  2554     0495                     	;# 
  2555     0495                     	;# 
  2556     0496                     	;# 
  2557     0497                     	;# 
  2558     0498                     	;# 
  2559     0499                     	;# 
  2560     049A                     	;# 
  2561     049B                     	;# 
  2562     049C                     	;# 
  2563     049D                     	;# 
  2564     050C                     	;# 
  2565     050C                     	;# 
  2566     050D                     	;# 
  2567     050E                     	;# 
  2568     050F                     	;# 
  2569     050F                     	;# 
  2570     0510                     	;# 
  2571     0511                     	;# 
  2572     0512                     	;# 
  2573     0512                     	;# 
  2574     0513                     	;# 
  2575     0514                     	;# 
  2576     0515                     	;# 
  2577     0515                     	;# 
  2578     0516                     	;# 
  2579     0517                     	;# 
  2580     0518                     	;# 
  2581     0519                     	;# 
  2582     051A                     	;# 
  2583     051B                     	;# 
  2584     051C                     	;# 
  2585     051D                     	;# 
  2586     058C                     	;# 
  2587     058C                     	;# 
  2588     058D                     	;# 
  2589     058E                     	;# 
  2590     058F                     	;# 
  2591     058F                     	;# 
  2592     0590                     	;# 
  2593     0591                     	;# 
  2594     0592                     	;# 
  2595     0593                     	;# 
  2596     059C                     	;# 
  2597     059C                     	;# 
  2598     059D                     	;# 
  2599     059D                     	;# 
  2600     059E                     	;# 
  2601     059F                     	;# 
  2602     060C                     	;# 
  2603     060C                     	;# 
  2604     060D                     	;# 
  2605     060D                     	;# 
  2606     060E                     	;# 
  2607     060F                     	;# 
  2608     0610                     	;# 
  2609     0611                     	;# 
  2610     0612                     	;# 
  2611     0613                     	;# 
  2612     0614                     	;# 
  2613     0616                     	;# 
  2614     0616                     	;# 
  2615     0617                     	;# 
  2616     0617                     	;# 
  2617     0618                     	;# 
  2618     0619                     	;# 
  2619     061A                     	;# 
  2620     061B                     	;# 
  2621     061C                     	;# 
  2622     061D                     	;# 
  2623     061E                     	;# 
  2624     068C                     	;# 
  2625     068D                     	;# 
  2626     068E                     	;# 
  2627     068F                     	;# 
  2628     0690                     	;# 
  2629     0691                     	;# 
  2630     0692                     	;# 
  2631     0693                     	;# 
  2632     0694                     	;# 
  2633     070C                     	;# 
  2634     070D                     	;# 
  2635     070E                     	;# 
  2636     070F                     	;# 
  2637     0710                     	;# 
  2638     0711                     	;# 
  2639     0712                     	;# 
  2640     0713                     	;# 
  2641     0714                     	;# 
  2642     0716                     	;# 
  2643     0717                     	;# 
  2644     0718                     	;# 
  2645     0719                     	;# 
  2646     071A                     	;# 
  2647     071B                     	;# 
  2648     071C                     	;# 
  2649     071D                     	;# 
  2650     071E                     	;# 
  2651     0796                     	;# 
  2652     0797                     	;# 
  2653     0798                     	;# 
  2654     0799                     	;# 
  2655     079A                     	;# 
  2656     079B                     	;# 
  2657     079C                     	;# 
  2658     079D                     	;# 
  2659     080C                     	;# 
  2660     080D                     	;# 
  2661     080E                     	;# 
  2662     080F                     	;# 
  2663     0810                     	;# 
  2664     0811                     	;# 
  2665     0813                     	;# 
  2666     0814                     	;# 
  2667     081A                     	;# 
  2668     081A                     	;# 
  2669     081B                     	;# 
  2670     081C                     	;# 
  2671     081C                     	;# 
  2672     081D                     	;# 
  2673     081E                     	;# 
  2674     081F                     	;# 
  2675     088C                     	;# 
  2676     088D                     	;# 
  2677     088E                     	;# 
  2678     088F                     	;# 
  2679     0890                     	;# 
  2680     0891                     	;# 
  2681     0892                     	;# 
  2682     0893                     	;# 
  2683     0895                     	;# 
  2684     0896                     	;# 
  2685     0897                     	;# 
  2686     0898                     	;# 
  2687     0899                     	;# 
  2688     089A                     	;# 
  2689     089B                     	;# 
  2690     090C                     	;# 
  2691     090E                     	;# 
  2692     090F                     	;# 
  2693     091F                     	;# 
  2694     098F                     	;# 
  2695     098F                     	;# 
  2696     0990                     	;# 
  2697     0991                     	;# 
  2698     0992                     	;# 
  2699     0993                     	;# 
  2700     0994                     	;# 
  2701     0995                     	;# 
  2702     0996                     	;# 
  2703     0997                     	;# 
  2704     0A19                     	;# 
  2705     0A19                     	;# 
  2706     0A1A                     	;# 
  2707     0A1A                     	;# 
  2708     0A1B                     	;# 
  2709     0A1B                     	;# 
  2710     0A1B                     	;# 
  2711     0A1C                     	;# 
  2712     0A1C                     	;# 
  2713     0A1D                     	;# 
  2714     0A1D                     	;# 
  2715     0A1E                     	;# 
  2716     0A1E                     	;# 
  2717     0A1F                     	;# 
  2718     0A1F                     	;# 
  2719     0A1F                     	;# 
  2720     1E0F                     	;# 
  2721     1E10                     	;# 
  2722     1E11                     	;# 
  2723     1E12                     	;# 
  2724     1E13                     	;# 
  2725     1E14                     	;# 
  2726     1E15                     	;# 
  2727     1E16                     	;# 
  2728     1E17                     	;# 
  2729     1E18                     	;# 
  2730     1E19                     	;# 
  2731     1E1A                     	;# 
  2732     1E1B                     	;# 
  2733     1E1C                     	;# 
  2734     1E1D                     	;# 
  2735     1E1E                     	;# 
  2736     1E1F                     	;# 
  2737     1E20                     	;# 
  2738     1E21                     	;# 
  2739     1E22                     	;# 
  2740     1E23                     	;# 
  2741     1E24                     	;# 
  2742     1E25                     	;# 
  2743     1E26                     	;# 
  2744     1E27                     	;# 
  2745     1E28                     	;# 
  2746     1E29                     	;# 
  2747     1E2A                     	;# 
  2748     1E2B                     	;# 
  2749     1E2C                     	;# 
  2750     1E2D                     	;# 
  2751     1E2E                     	;# 
  2752     1E2F                     	;# 
  2753     1E30                     	;# 
  2754     1E31                     	;# 
  2755     1E32                     	;# 
  2756     1E33                     	;# 
  2757     1E34                     	;# 
  2758     1E35                     	;# 
  2759     1E36                     	;# 
  2760     1E37                     	;# 
  2761     1E8F                     	;# 
  2762     1E90                     	;# 
  2763     1E91                     	;# 
  2764     1E92                     	;# 
  2765     1E93                     	;# 
  2766     1E94                     	;# 
  2767     1E95                     	;# 
  2768     1E96                     	;# 
  2769     1E97                     	;# 
  2770     1E9C                     	;# 
  2771     1E9D                     	;# 
  2772     1E9E                     	;# 
  2773     1EA1                     	;# 
  2774     1EA2                     	;# 
  2775     1EA3                     	;# 
  2776     1EA4                     	;# 
  2777     1EA5                     	;# 
  2778     1EA9                     	;# 
  2779     1EAA                     	;# 
  2780     1EAB                     	;# 
  2781     1EAC                     	;# 
  2782     1EB1                     	;# 
  2783     1EB2                     	;# 
  2784     1EB3                     	;# 
  2785     1EB8                     	;# 
  2786     1EB9                     	;# 
  2787     1EBA                     	;# 
  2788     1EBB                     	;# 
  2789     1EBC                     	;# 
  2790     1EBD                     	;# 
  2791     1EBE                     	;# 
  2792     1EC3                     	;# 
  2793     1EC5                     	;# 
  2794     1EC6                     	;# 
  2795     1EC7                     	;# 
  2796     1EC8                     	;# 
  2797     1EC9                     	;# 
  2798     1ECA                     	;# 
  2799     1ECB                     	;# 
  2800     1ECC                     	;# 
  2801     1ECD                     	;# 
  2802     1ECE                     	;# 
  2803     1F10                     	;# 
  2804     1F11                     	;# 
  2805     1F12                     	;# 
  2806     1F13                     	;# 
  2807     1F14                     	;# 
  2808     1F15                     	;# 
  2809     1F16                     	;# 
  2810     1F17                     	;# 
  2811     1F18                     	;# 
  2812     1F19                     	;# 
  2813     1F1A                     	;# 
  2814     1F1B                     	;# 
  2815     1F1C                     	;# 
  2816     1F1D                     	;# 
  2817     1F1E                     	;# 
  2818     1F1F                     	;# 
  2819     1F20                     	;# 
  2820     1F21                     	;# 
  2821     1F22                     	;# 
  2822     1F23                     	;# 
  2823     1F24                     	;# 
  2824     1F25                     	;# 
  2825     1F26                     	;# 
  2826     1F27                     	;# 
  2827     1F38                     	;# 
  2828     1F39                     	;# 
  2829     1F3A                     	;# 
  2830     1F3B                     	;# 
  2831     1F3C                     	;# 
  2832     1F3D                     	;# 
  2833     1F3E                     	;# 
  2834     1F3F                     	;# 
  2835     1F43                     	;# 
  2836     1F44                     	;# 
  2837     1F45                     	;# 
  2838     1F46                     	;# 
  2839     1F47                     	;# 
  2840     1F48                     	;# 
  2841     1F49                     	;# 
  2842     1F4A                     	;# 
  2843     1F4E                     	;# 
  2844     1F4F                     	;# 
  2845     1F50                     	;# 
  2846     1F51                     	;# 
  2847     1F52                     	;# 
  2848     1F53                     	;# 
  2849     1F54                     	;# 
  2850     1F55                     	;# 
  2851     1F65                     	;# 
  2852     1F66                     	;# 
  2853     1F67                     	;# 
  2854     1F68                     	;# 
  2855     1F69                     	;# 
  2856     1F6A                     	;# 
  2857     1F6B                     	;# 
  2858     1FE4                     	;# 
  2859     1FE5                     	;# 
  2860     1FE6                     	;# 
  2861     1FE7                     	;# 
  2862     1FE8                     	;# 
  2863     1FE8                     	;# 
  2864     1FE9                     	;# 
  2865     1FEA                     	;# 
  2866     1FEB                     	;# 
  2867     1FED                     	;# 
  2868     1FEE                     	;# 
  2869     1FEF                     	;# 
  2870     0000                     	;# 
  2871     0001                     	;# 
  2872     0002                     	;# 
  2873     0003                     	;# 
  2874     0004                     	;# 
  2875     0005                     	;# 
  2876     0006                     	;# 
  2877     0007                     	;# 
  2878     0008                     	;# 
  2879     0009                     	;# 
  2880     000A                     	;# 
  2881     000B                     	;# 
  2882     000C                     	;# 
  2883     000D                     	;# 
  2884     000E                     	;# 
  2885     0010                     	;# 
  2886     0012                     	;# 
  2887     0013                     	;# 
  2888     0014                     	;# 
  2889     0016                     	;# 
  2890     0018                     	;# 
  2891     0019                     	;# 
  2892     001A                     	;# 
  2893     001C                     	;# 
  2894     008C                     	;# 
  2895     008C                     	;# 
  2896     008D                     	;# 
  2897     008E                     	;# 
  2898     008E                     	;# 
  2899     008F                     	;# 
  2900     0090                     	;# 
  2901     0090                     	;# 
  2902     0091                     	;# 
  2903     0092                     	;# 
  2904     0092                     	;# 
  2905     0093                     	;# 
  2906     0094                     	;# 
  2907     0094                     	;# 
  2908     0095                     	;# 
  2909     0096                     	;# 
  2910     0096                     	;# 
  2911     0097                     	;# 
  2912     0098                     	;# 
  2913     0099                     	;# 
  2914     009A                     	;# 
  2915     009B                     	;# 
  2916     009B                     	;# 
  2917     009C                     	;# 
  2918     009D                     	;# 
  2919     009D                     	;# 
  2920     009E                     	;# 
  2921     009F                     	;# 
  2922     010C                     	;# 
  2923     010C                     	;# 
  2924     010D                     	;# 
  2925     010E                     	;# 
  2926     010F                     	;# 
  2927     010F                     	;# 
  2928     0110                     	;# 
  2929     0111                     	;# 
  2930     0112                     	;# 
  2931     0113                     	;# 
  2932     0114                     	;# 
  2933     0115                     	;# 
  2934     0116                     	;# 
  2935     0117                     	;# 
  2936     0118                     	;# 
  2937     0119                     	;# 
  2938     0119                     	;# 
  2939     0119                     	;# 
  2940     011A                     	;# 
  2941     011A                     	;# 
  2942     011A                     	;# 
  2943     011B                     	;# 
  2944     011B                     	;# 
  2945     011B                     	;# 
  2946     011B                     	;# 
  2947     011B                     	;# 
  2948     011C                     	;# 
  2949     011C                     	;# 
  2950     011C                     	;# 
  2951     011D                     	;# 
  2952     011D                     	;# 
  2953     011D                     	;# 
  2954     011E                     	;# 
  2955     011E                     	;# 
  2956     011E                     	;# 
  2957     011F                     	;# 
  2958     011F                     	;# 
  2959     011F                     	;# 
  2960     011F                     	;# 
  2961     011F                     	;# 
  2962     018C                     	;# 
  2963     018D                     	;# 
  2964     018E                     	;# 
  2965     018F                     	;# 
  2966     0190                     	;# 
  2967     0191                     	;# 
  2968     0192                     	;# 
  2969     0196                     	;# 
  2970     0197                     	;# 
  2971     0198                     	;# 
  2972     0199                     	;# 
  2973     019A                     	;# 
  2974     019B                     	;# 
  2975     019C                     	;# 
  2976     020C                     	;# 
  2977     020D                     	;# 
  2978     020E                     	;# 
  2979     020E                     	;# 
  2980     020F                     	;# 
  2981     020F                     	;# 
  2982     0210                     	;# 
  2983     0210                     	;# 
  2984     0211                     	;# 
  2985     0211                     	;# 
  2986     0212                     	;# 
  2987     0213                     	;# 
  2988     0214                     	;# 
  2989     0214                     	;# 
  2990     0215                     	;# 
  2991     0215                     	;# 
  2992     0216                     	;# 
  2993     0216                     	;# 
  2994     0217                     	;# 
  2995     0217                     	;# 
  2996     0218                     	;# 
  2997     0219                     	;# 
  2998     021A                     	;# 
  2999     021A                     	;# 
  3000     021B                     	;# 
  3001     021B                     	;# 
  3002     021C                     	;# 
  3003     021C                     	;# 
  3004     021D                     	;# 
  3005     021D                     	;# 
  3006     021E                     	;# 
  3007     021F                     	;# 
  3008     028C                     	;# 
  3009     028C                     	;# 
  3010     028D                     	;# 
  3011     028D                     	;# 
  3012     028E                     	;# 
  3013     028F                     	;# 
  3014     0290                     	;# 
  3015     0291                     	;# 
  3016     0292                     	;# 
  3017     0292                     	;# 
  3018     0293                     	;# 
  3019     0293                     	;# 
  3020     0294                     	;# 
  3021     0295                     	;# 
  3022     0296                     	;# 
  3023     0297                     	;# 
  3024     0298                     	;# 
  3025     0298                     	;# 
  3026     0299                     	;# 
  3027     0299                     	;# 
  3028     029A                     	;# 
  3029     029B                     	;# 
  3030     029C                     	;# 
  3031     029D                     	;# 
  3032     029F                     	;# 
  3033     030C                     	;# 
  3034     030C                     	;# 
  3035     030D                     	;# 
  3036     030E                     	;# 
  3037     030F                     	;# 
  3038     0310                     	;# 
  3039     0310                     	;# 
  3040     0311                     	;# 
  3041     0312                     	;# 
  3042     0313                     	;# 
  3043     0314                     	;# 
  3044     0314                     	;# 
  3045     0315                     	;# 
  3046     0316                     	;# 
  3047     0317                     	;# 
  3048     0318                     	;# 
  3049     0318                     	;# 
  3050     0319                     	;# 
  3051     031A                     	;# 
  3052     031B                     	;# 
  3053     031C                     	;# 
  3054     031C                     	;# 
  3055     031D                     	;# 
  3056     031E                     	;# 
  3057     031F                     	;# 
  3058     038C                     	;# 
  3059     038C                     	;# 
  3060     038D                     	;# 
  3061     038E                     	;# 
  3062     0390                     	;# 
  3063     0390                     	;# 
  3064     0391                     	;# 
  3065     0392                     	;# 
  3066     048C                     	;# 
  3067     048C                     	;# 
  3068     048D                     	;# 
  3069     048E                     	;# 
  3070     048F                     	;# 
  3071     048F                     	;# 
  3072     0490                     	;# 
  3073     0491                     	;# 
  3074     0492                     	;# 
  3075     0492                     	;# 
  3076     0493                     	;# 
  3077     0494                     	;# 
  3078     0495                     	;# 
  3079     0495                     	;# 
  3080     0496                     	;# 
  3081     0497                     	;# 
  3082     0498                     	;# 
  3083     0499                     	;# 
  3084     049A                     	;# 
  3085     049B                     	;# 
  3086     049C                     	;# 
  3087     049D                     	;# 
  3088     050C                     	;# 
  3089     050C                     	;# 
  3090     050D                     	;# 
  3091     050E                     	;# 
  3092     050F                     	;# 
  3093     050F                     	;# 
  3094     0510                     	;# 
  3095     0511                     	;# 
  3096     0512                     	;# 
  3097     0512                     	;# 
  3098     0513                     	;# 
  3099     0514                     	;# 
  3100     0515                     	;# 
  3101     0515                     	;# 
  3102     0516                     	;# 
  3103     0517                     	;# 
  3104     0518                     	;# 
  3105     0519                     	;# 
  3106     051A                     	;# 
  3107     051B                     	;# 
  3108     051C                     	;# 
  3109     051D                     	;# 
  3110     058C                     	;# 
  3111     058C                     	;# 
  3112     058D                     	;# 
  3113     058E                     	;# 
  3114     058F                     	;# 
  3115     058F                     	;# 
  3116     0590                     	;# 
  3117     0591                     	;# 
  3118     0592                     	;# 
  3119     0593                     	;# 
  3120     059C                     	;# 
  3121     059C                     	;# 
  3122     059D                     	;# 
  3123     059D                     	;# 
  3124     059E                     	;# 
  3125     059F                     	;# 
  3126     060C                     	;# 
  3127     060C                     	;# 
  3128     060D                     	;# 
  3129     060D                     	;# 
  3130     060E                     	;# 
  3131     060F                     	;# 
  3132     0610                     	;# 
  3133     0611                     	;# 
  3134     0612                     	;# 
  3135     0613                     	;# 
  3136     0614                     	;# 
  3137     0616                     	;# 
  3138     0616                     	;# 
  3139     0617                     	;# 
  3140     0617                     	;# 
  3141     0618                     	;# 
  3142     0619                     	;# 
  3143     061A                     	;# 
  3144     061B                     	;# 
  3145     061C                     	;# 
  3146     061D                     	;# 
  3147     061E                     	;# 
  3148     068C                     	;# 
  3149     068D                     	;# 
  3150     068E                     	;# 
  3151     068F                     	;# 
  3152     0690                     	;# 
  3153     0691                     	;# 
  3154     0692                     	;# 
  3155     0693                     	;# 
  3156     0694                     	;# 
  3157     070C                     	;# 
  3158     070D                     	;# 
  3159     070E                     	;# 
  3160     070F                     	;# 
  3161     0710                     	;# 
  3162     0711                     	;# 
  3163     0712                     	;# 
  3164     0713                     	;# 
  3165     0714                     	;# 
  3166     0716                     	;# 
  3167     0717                     	;# 
  3168     0718                     	;# 
  3169     0719                     	;# 
  3170     071A                     	;# 
  3171     071B                     	;# 
  3172     071C                     	;# 
  3173     071D                     	;# 
  3174     071E                     	;# 
  3175     0796                     	;# 
  3176     0797                     	;# 
  3177     0798                     	;# 
  3178     0799                     	;# 
  3179     079A                     	;# 
  3180     079B                     	;# 
  3181     079C                     	;# 
  3182     079D                     	;# 
  3183     080C                     	;# 
  3184     080D                     	;# 
  3185     080E                     	;# 
  3186     080F                     	;# 
  3187     0810                     	;# 
  3188     0811                     	;# 
  3189     0813                     	;# 
  3190     0814                     	;# 
  3191     081A                     	;# 
  3192     081A                     	;# 
  3193     081B                     	;# 
  3194     081C                     	;# 
  3195     081C                     	;# 
  3196     081D                     	;# 
  3197     081E                     	;# 
  3198     081F                     	;# 
  3199     088C                     	;# 
  3200     088D                     	;# 
  3201     088E                     	;# 
  3202     088F                     	;# 
  3203     0890                     	;# 
  3204     0891                     	;# 
  3205     0892                     	;# 
  3206     0893                     	;# 
  3207     0895                     	;# 
  3208     0896                     	;# 
  3209     0897                     	;# 
  3210     0898                     	;# 
  3211     0899                     	;# 
  3212     089A                     	;# 
  3213     089B                     	;# 
  3214     090C                     	;# 
  3215     090E                     	;# 
  3216     090F                     	;# 
  3217     091F                     	;# 
  3218     098F                     	;# 
  3219     098F                     	;# 
  3220     0990                     	;# 
  3221     0991                     	;# 
  3222     0992                     	;# 
  3223     0993                     	;# 
  3224     0994                     	;# 
  3225     0995                     	;# 
  3226     0996                     	;# 
  3227     0997                     	;# 
  3228     0A19                     	;# 
  3229     0A19                     	;# 
  3230     0A1A                     	;# 
  3231     0A1A                     	;# 
  3232     0A1B                     	;# 
  3233     0A1B                     	;# 
  3234     0A1B                     	;# 
  3235     0A1C                     	;# 
  3236     0A1C                     	;# 
  3237     0A1D                     	;# 
  3238     0A1D                     	;# 
  3239     0A1E                     	;# 
  3240     0A1E                     	;# 
  3241     0A1F                     	;# 
  3242     0A1F                     	;# 
  3243     0A1F                     	;# 
  3244     1E0F                     	;# 
  3245     1E10                     	;# 
  3246     1E11                     	;# 
  3247     1E12                     	;# 
  3248     1E13                     	;# 
  3249     1E14                     	;# 
  3250     1E15                     	;# 
  3251     1E16                     	;# 
  3252     1E17                     	;# 
  3253     1E18                     	;# 
  3254     1E19                     	;# 
  3255     1E1A                     	;# 
  3256     1E1B                     	;# 
  3257     1E1C                     	;# 
  3258     1E1D                     	;# 
  3259     1E1E                     	;# 
  3260     1E1F                     	;# 
  3261     1E20                     	;# 
  3262     1E21                     	;# 
  3263     1E22                     	;# 
  3264     1E23                     	;# 
  3265     1E24                     	;# 
  3266     1E25                     	;# 
  3267     1E26                     	;# 
  3268     1E27                     	;# 
  3269     1E28                     	;# 
  3270     1E29                     	;# 
  3271     1E2A                     	;# 
  3272     1E2B                     	;# 
  3273     1E2C                     	;# 
  3274     1E2D                     	;# 
  3275     1E2E                     	;# 
  3276     1E2F                     	;# 
  3277     1E30                     	;# 
  3278     1E31                     	;# 
  3279     1E32                     	;# 
  3280     1E33                     	;# 
  3281     1E34                     	;# 
  3282     1E35                     	;# 
  3283     1E36                     	;# 
  3284     1E37                     	;# 
  3285     1E8F                     	;# 
  3286     1E90                     	;# 
  3287     1E91                     	;# 
  3288     1E92                     	;# 
  3289     1E93                     	;# 
  3290     1E94                     	;# 
  3291     1E95                     	;# 
  3292     1E96                     	;# 
  3293     1E97                     	;# 
  3294     1E9C                     	;# 
  3295     1E9D                     	;# 
  3296     1E9E                     	;# 
  3297     1EA1                     	;# 
  3298     1EA2                     	;# 
  3299     1EA3                     	;# 
  3300     1EA4                     	;# 
  3301     1EA5                     	;# 
  3302     1EA9                     	;# 
  3303     1EAA                     	;# 
  3304     1EAB                     	;# 
  3305     1EAC                     	;# 
  3306     1EB1                     	;# 
  3307     1EB2                     	;# 
  3308     1EB3                     	;# 
  3309     1EB8                     	;# 
  3310     1EB9                     	;# 
  3311     1EBA                     	;# 
  3312     1EBB                     	;# 
  3313     1EBC                     	;# 
  3314     1EBD                     	;# 
  3315     1EBE                     	;# 
  3316     1EC3                     	;# 
  3317     1EC5                     	;# 
  3318     1EC6                     	;# 
  3319     1EC7                     	;# 
  3320     1EC8                     	;# 
  3321     1EC9                     	;# 
  3322     1ECA                     	;# 
  3323     1ECB                     	;# 
  3324     1ECC                     	;# 
  3325     1ECD                     	;# 
  3326     1ECE                     	;# 
  3327     1F10                     	;# 
  3328     1F11                     	;# 
  3329     1F12                     	;# 
  3330     1F13                     	;# 
  3331     1F14                     	;# 
  3332     1F15                     	;# 
  3333     1F16                     	;# 
  3334     1F17                     	;# 
  3335     1F18                     	;# 
  3336     1F19                     	;# 
  3337     1F1A                     	;# 
  3338     1F1B                     	;# 
  3339     1F1C                     	;# 
  3340     1F1D                     	;# 
  3341     1F1E                     	;# 
  3342     1F1F                     	;# 
  3343     1F20                     	;# 
  3344     1F21                     	;# 
  3345     1F22                     	;# 
  3346     1F23                     	;# 
  3347     1F24                     	;# 
  3348     1F25                     	;# 
  3349     1F26                     	;# 
  3350     1F27                     	;# 
  3351     1F38                     	;# 
  3352     1F39                     	;# 
  3353     1F3A                     	;# 
  3354     1F3B                     	;# 
  3355     1F3C                     	;# 
  3356     1F3D                     	;# 
  3357     1F3E                     	;# 
  3358     1F3F                     	;# 
  3359     1F43                     	;# 
  3360     1F44                     	;# 
  3361     1F45                     	;# 
  3362     1F46                     	;# 
  3363     1F47                     	;# 
  3364     1F48                     	;# 
  3365     1F49                     	;# 
  3366     1F4A                     	;# 
  3367     1F4E                     	;# 
  3368     1F4F                     	;# 
  3369     1F50                     	;# 
  3370     1F51                     	;# 
  3371     1F52                     	;# 
  3372     1F53                     	;# 
  3373     1F54                     	;# 
  3374     1F55                     	;# 
  3375     1F65                     	;# 
  3376     1F66                     	;# 
  3377     1F67                     	;# 
  3378     1F68                     	;# 
  3379     1F69                     	;# 
  3380     1F6A                     	;# 
  3381     1F6B                     	;# 
  3382     1FE4                     	;# 
  3383     1FE5                     	;# 
  3384     1FE6                     	;# 
  3385     1FE7                     	;# 
  3386     1FE8                     	;# 
  3387     1FE8                     	;# 
  3388     1FE9                     	;# 
  3389     1FEA                     	;# 
  3390     1FEB                     	;# 
  3391     1FED                     	;# 
  3392     1FEE                     	;# 
  3393     1FEF                     	;# 
  3394     0000                     	;# 
  3395     0001                     	;# 
  3396     0002                     	;# 
  3397     0003                     	;# 
  3398     0004                     	;# 
  3399     0005                     	;# 
  3400     0006                     	;# 
  3401     0007                     	;# 
  3402     0008                     	;# 
  3403     0009                     	;# 
  3404     000A                     	;# 
  3405     000B                     	;# 
  3406     000C                     	;# 
  3407     000D                     	;# 
  3408     000E                     	;# 
  3409     0010                     	;# 
  3410     0012                     	;# 
  3411     0013                     	;# 
  3412     0014                     	;# 
  3413     0016                     	;# 
  3414     0018                     	;# 
  3415     0019                     	;# 
  3416     001A                     	;# 
  3417     001C                     	;# 
  3418     008C                     	;# 
  3419     008C                     	;# 
  3420     008D                     	;# 
  3421     008E                     	;# 
  3422     008E                     	;# 
  3423     008F                     	;# 
  3424     0090                     	;# 
  3425     0090                     	;# 
  3426     0091                     	;# 
  3427     0092                     	;# 
  3428     0092                     	;# 
  3429     0093                     	;# 
  3430     0094                     	;# 
  3431     0094                     	;# 
  3432     0095                     	;# 
  3433     0096                     	;# 
  3434     0096                     	;# 
  3435     0097                     	;# 
  3436     0098                     	;# 
  3437     0099                     	;# 
  3438     009A                     	;# 
  3439     009B                     	;# 
  3440     009B                     	;# 
  3441     009C                     	;# 
  3442     009D                     	;# 
  3443     009D                     	;# 
  3444     009E                     	;# 
  3445     009F                     	;# 
  3446     010C                     	;# 
  3447     010C                     	;# 
  3448     010D                     	;# 
  3449     010E                     	;# 
  3450     010F                     	;# 
  3451     010F                     	;# 
  3452     0110                     	;# 
  3453     0111                     	;# 
  3454     0112                     	;# 
  3455     0113                     	;# 
  3456     0114                     	;# 
  3457     0115                     	;# 
  3458     0116                     	;# 
  3459     0117                     	;# 
  3460     0118                     	;# 
  3461     0119                     	;# 
  3462     0119                     	;# 
  3463     0119                     	;# 
  3464     011A                     	;# 
  3465     011A                     	;# 
  3466     011A                     	;# 
  3467     011B                     	;# 
  3468     011B                     	;# 
  3469     011B                     	;# 
  3470     011B                     	;# 
  3471     011B                     	;# 
  3472     011C                     	;# 
  3473     011C                     	;# 
  3474     011C                     	;# 
  3475     011D                     	;# 
  3476     011D                     	;# 
  3477     011D                     	;# 
  3478     011E                     	;# 
  3479     011E                     	;# 
  3480     011E                     	;# 
  3481     011F                     	;# 
  3482     011F                     	;# 
  3483     011F                     	;# 
  3484     011F                     	;# 
  3485     011F                     	;# 
  3486     018C                     	;# 
  3487     018D                     	;# 
  3488     018E                     	;# 
  3489     018F                     	;# 
  3490     0190                     	;# 
  3491     0191                     	;# 
  3492     0192                     	;# 
  3493     0196                     	;# 
  3494     0197                     	;# 
  3495     0198                     	;# 
  3496     0199                     	;# 
  3497     019A                     	;# 
  3498     019B                     	;# 
  3499     019C                     	;# 
  3500     020C                     	;# 
  3501     020D                     	;# 
  3502     020E                     	;# 
  3503     020E                     	;# 
  3504     020F                     	;# 
  3505     020F                     	;# 
  3506     0210                     	;# 
  3507     0210                     	;# 
  3508     0211                     	;# 
  3509     0211                     	;# 
  3510     0212                     	;# 
  3511     0213                     	;# 
  3512     0214                     	;# 
  3513     0214                     	;# 
  3514     0215                     	;# 
  3515     0215                     	;# 
  3516     0216                     	;# 
  3517     0216                     	;# 
  3518     0217                     	;# 
  3519     0217                     	;# 
  3520     0218                     	;# 
  3521     0219                     	;# 
  3522     021A                     	;# 
  3523     021A                     	;# 
  3524     021B                     	;# 
  3525     021B                     	;# 
  3526     021C                     	;# 
  3527     021C                     	;# 
  3528     021D                     	;# 
  3529     021D                     	;# 
  3530     021E                     	;# 
  3531     021F                     	;# 
  3532     028C                     	;# 
  3533     028C                     	;# 
  3534     028D                     	;# 
  3535     028D                     	;# 
  3536     028E                     	;# 
  3537     028F                     	;# 
  3538     0290                     	;# 
  3539     0291                     	;# 
  3540     0292                     	;# 
  3541     0292                     	;# 
  3542     0293                     	;# 
  3543     0293                     	;# 
  3544     0294                     	;# 
  3545     0295                     	;# 
  3546     0296                     	;# 
  3547     0297                     	;# 
  3548     0298                     	;# 
  3549     0298                     	;# 
  3550     0299                     	;# 
  3551     0299                     	;# 
  3552     029A                     	;# 
  3553     029B                     	;# 
  3554     029C                     	;# 
  3555     029D                     	;# 
  3556     029F                     	;# 
  3557     030C                     	;# 
  3558     030C                     	;# 
  3559     030D                     	;# 
  3560     030E                     	;# 
  3561     030F                     	;# 
  3562     0310                     	;# 
  3563     0310                     	;# 
  3564     0311                     	;# 
  3565     0312                     	;# 
  3566     0313                     	;# 
  3567     0314                     	;# 
  3568     0314                     	;# 
  3569     0315                     	;# 
  3570     0316                     	;# 
  3571     0317                     	;# 
  3572     0318                     	;# 
  3573     0318                     	;# 
  3574     0319                     	;# 
  3575     031A                     	;# 
  3576     031B                     	;# 
  3577     031C                     	;# 
  3578     031C                     	;# 
  3579     031D                     	;# 
  3580     031E                     	;# 
  3581     031F                     	;# 
  3582     038C                     	;# 
  3583     038C                     	;# 
  3584     038D                     	;# 
  3585     038E                     	;# 
  3586     0390                     	;# 
  3587     0390                     	;# 
  3588     0391                     	;# 
  3589     0392                     	;# 
  3590     048C                     	;# 
  3591     048C                     	;# 
  3592     048D                     	;# 
  3593     048E                     	;# 
  3594     048F                     	;# 
  3595     048F                     	;# 
  3596     0490                     	;# 
  3597     0491                     	;# 
  3598     0492                     	;# 
  3599     0492                     	;# 
  3600     0493                     	;# 
  3601     0494                     	;# 
  3602     0495                     	;# 
  3603     0495                     	;# 
  3604     0496                     	;# 
  3605     0497                     	;# 
  3606     0498                     	;# 
  3607     0499                     	;# 
  3608     049A                     	;# 
  3609     049B                     	;# 
  3610     049C                     	;# 
  3611     049D                     	;# 
  3612     050C                     	;# 
  3613     050C                     	;# 
  3614     050D                     	;# 
  3615     050E                     	;# 
  3616     050F                     	;# 
  3617     050F                     	;# 
  3618     0510                     	;# 
  3619     0511                     	;# 
  3620     0512                     	;# 
  3621     0512                     	;# 
  3622     0513                     	;# 
  3623     0514                     	;# 
  3624     0515                     	;# 
  3625     0515                     	;# 
  3626     0516                     	;# 
  3627     0517                     	;# 
  3628     0518                     	;# 
  3629     0519                     	;# 
  3630     051A                     	;# 
  3631     051B                     	;# 
  3632     051C                     	;# 
  3633     051D                     	;# 
  3634     058C                     	;# 
  3635     058C                     	;# 
  3636     058D                     	;# 
  3637     058E                     	;# 
  3638     058F                     	;# 
  3639     058F                     	;# 
  3640     0590                     	;# 
  3641     0591                     	;# 
  3642     0592                     	;# 
  3643     0593                     	;# 
  3644     059C                     	;# 
  3645     059C                     	;# 
  3646     059D                     	;# 
  3647     059D                     	;# 
  3648     059E                     	;# 
  3649     059F                     	;# 
  3650     060C                     	;# 
  3651     060C                     	;# 
  3652     060D                     	;# 
  3653     060D                     	;# 
  3654     060E                     	;# 
  3655     060F                     	;# 
  3656     0610                     	;# 
  3657     0611                     	;# 
  3658     0612                     	;# 
  3659     0613                     	;# 
  3660     0614                     	;# 
  3661     0616                     	;# 
  3662     0616                     	;# 
  3663     0617                     	;# 
  3664     0617                     	;# 
  3665     0618                     	;# 
  3666     0619                     	;# 
  3667     061A                     	;# 
  3668     061B                     	;# 
  3669     061C                     	;# 
  3670     061D                     	;# 
  3671     061E                     	;# 
  3672     068C                     	;# 
  3673     068D                     	;# 
  3674     068E                     	;# 
  3675     068F                     	;# 
  3676     0690                     	;# 
  3677     0691                     	;# 
  3678     0692                     	;# 
  3679     0693                     	;# 
  3680     0694                     	;# 
  3681     070C                     	;# 
  3682     070D                     	;# 
  3683     070E                     	;# 
  3684     070F                     	;# 
  3685     0710                     	;# 
  3686     0711                     	;# 
  3687     0712                     	;# 
  3688     0713                     	;# 
  3689     0714                     	;# 
  3690     0716                     	;# 
  3691     0717                     	;# 
  3692     0718                     	;# 
  3693     0719                     	;# 
  3694     071A                     	;# 
  3695     071B                     	;# 
  3696     071C                     	;# 
  3697     071D                     	;# 
  3698     071E                     	;# 
  3699     0796                     	;# 
  3700     0797                     	;# 
  3701     0798                     	;# 
  3702     0799                     	;# 
  3703     079A                     	;# 
  3704     079B                     	;# 
  3705     079C                     	;# 
  3706     079D                     	;# 
  3707     080C                     	;# 
  3708     080D                     	;# 
  3709     080E                     	;# 
  3710     080F                     	;# 
  3711     0810                     	;# 
  3712     0811                     	;# 
  3713     0813                     	;# 
  3714     0814                     	;# 
  3715     081A                     	;# 
  3716     081A                     	;# 
  3717     081B                     	;# 
  3718     081C                     	;# 
  3719     081C                     	;# 
  3720     081D                     	;# 
  3721     081E                     	;# 
  3722     081F                     	;# 
  3723     088C                     	;# 
  3724     088D                     	;# 
  3725     088E                     	;# 
  3726     088F                     	;# 
  3727     0890                     	;# 
  3728     0891                     	;# 
  3729     0892                     	;# 
  3730     0893                     	;# 
  3731     0895                     	;# 
  3732     0896                     	;# 
  3733     0897                     	;# 
  3734     0898                     	;# 
  3735     0899                     	;# 
  3736     089A                     	;# 
  3737     089B                     	;# 
  3738     090C                     	;# 
  3739     090E                     	;# 
  3740     090F                     	;# 
  3741     091F                     	;# 
  3742     098F                     	;# 
  3743     098F                     	;# 
  3744     0990                     	;# 
  3745     0991                     	;# 
  3746     0992                     	;# 
  3747     0993                     	;# 
  3748     0994                     	;# 
  3749     0995                     	;# 
  3750     0996                     	;# 
  3751     0997                     	;# 
  3752     0A19                     	;# 
  3753     0A19                     	;# 
  3754     0A1A                     	;# 
  3755     0A1A                     	;# 
  3756     0A1B                     	;# 
  3757     0A1B                     	;# 
  3758     0A1B                     	;# 
  3759     0A1C                     	;# 
  3760     0A1C                     	;# 
  3761     0A1D                     	;# 
  3762     0A1D                     	;# 
  3763     0A1E                     	;# 
  3764     0A1E                     	;# 
  3765     0A1F                     	;# 
  3766     0A1F                     	;# 
  3767     0A1F                     	;# 
  3768     1E0F                     	;# 
  3769     1E10                     	;# 
  3770     1E11                     	;# 
  3771     1E12                     	;# 
  3772     1E13                     	;# 
  3773     1E14                     	;# 
  3774     1E15                     	;# 
  3775     1E16                     	;# 
  3776     1E17                     	;# 
  3777     1E18                     	;# 
  3778     1E19                     	;# 
  3779     1E1A                     	;# 
  3780     1E1B                     	;# 
  3781     1E1C                     	;# 
  3782     1E1D                     	;# 
  3783     1E1E                     	;# 
  3784     1E1F                     	;# 
  3785     1E20                     	;# 
  3786     1E21                     	;# 
  3787     1E22                     	;# 
  3788     1E23                     	;# 
  3789     1E24                     	;# 
  3790     1E25                     	;# 
  3791     1E26                     	;# 
  3792     1E27                     	;# 
  3793     1E28                     	;# 
  3794     1E29                     	;# 
  3795     1E2A                     	;# 
  3796     1E2B                     	;# 
  3797     1E2C                     	;# 
  3798     1E2D                     	;# 
  3799     1E2E                     	;# 
  3800     1E2F                     	;# 
  3801     1E30                     	;# 
  3802     1E31                     	;# 
  3803     1E32                     	;# 
  3804     1E33                     	;# 
  3805     1E34                     	;# 
  3806     1E35                     	;# 
  3807     1E36                     	;# 
  3808     1E37                     	;# 
  3809     1E8F                     	;# 
  3810     1E90                     	;# 
  3811     1E91                     	;# 
  3812     1E92                     	;# 
  3813     1E93                     	;# 
  3814     1E94                     	;# 
  3815     1E95                     	;# 
  3816     1E96                     	;# 
  3817     1E97                     	;# 
  3818     1E9C                     	;# 
  3819     1E9D                     	;# 
  3820     1E9E                     	;# 
  3821     1EA1                     	;# 
  3822     1EA2                     	;# 
  3823     1EA3                     	;# 
  3824     1EA4                     	;# 
  3825     1EA5                     	;# 
  3826     1EA9                     	;# 
  3827     1EAA                     	;# 
  3828     1EAB                     	;# 
  3829     1EAC                     	;# 
  3830     1EB1                     	;# 
  3831     1EB2                     	;# 
  3832     1EB3                     	;# 
  3833     1EB8                     	;# 
  3834     1EB9                     	;# 
  3835     1EBA                     	;# 
  3836     1EBB                     	;# 
  3837     1EBC                     	;# 
  3838     1EBD                     	;# 
  3839     1EBE                     	;# 
  3840     1EC3                     	;# 
  3841     1EC5                     	;# 
  3842     1EC6                     	;# 
  3843     1EC7                     	;# 
  3844     1EC8                     	;# 
  3845     1EC9                     	;# 
  3846     1ECA                     	;# 
  3847     1ECB                     	;# 
  3848     1ECC                     	;# 
  3849     1ECD                     	;# 
  3850     1ECE                     	;# 
  3851     1F10                     	;# 
  3852     1F11                     	;# 
  3853     1F12                     	;# 
  3854     1F13                     	;# 
  3855     1F14                     	;# 
  3856     1F15                     	;# 
  3857     1F16                     	;# 
  3858     1F17                     	;# 
  3859     1F18                     	;# 
  3860     1F19                     	;# 
  3861     1F1A                     	;# 
  3862     1F1B                     	;# 
  3863     1F1C                     	;# 
  3864     1F1D                     	;# 
  3865     1F1E                     	;# 
  3866     1F1F                     	;# 
  3867     1F20                     	;# 
  3868     1F21                     	;# 
  3869     1F22                     	;# 
  3870     1F23                     	;# 
  3871     1F24                     	;# 
  3872     1F25                     	;# 
  3873     1F26                     	;# 
  3874     1F27                     	;# 
  3875     1F38                     	;# 
  3876     1F39                     	;# 
  3877     1F3A                     	;# 
  3878     1F3B                     	;# 
  3879     1F3C                     	;# 
  3880     1F3D                     	;# 
  3881     1F3E                     	;# 
  3882     1F3F                     	;# 
  3883     1F43                     	;# 
  3884     1F44                     	;# 
  3885     1F45                     	;# 
  3886     1F46                     	;# 
  3887     1F47                     	;# 
  3888     1F48                     	;# 
  3889     1F49                     	;# 
  3890     1F4A                     	;# 
  3891     1F4E                     	;# 
  3892     1F4F                     	;# 
  3893     1F50                     	;# 
  3894     1F51                     	;# 
  3895     1F52                     	;# 
  3896     1F53                     	;# 
  3897     1F54                     	;# 
  3898     1F55                     	;# 
  3899     1F65                     	;# 
  3900     1F66                     	;# 
  3901     1F67                     	;# 
  3902     1F68                     	;# 
  3903     1F69                     	;# 
  3904     1F6A                     	;# 
  3905     1F6B                     	;# 
  3906     1FE4                     	;# 
  3907     1FE5                     	;# 
  3908     1FE6                     	;# 
  3909     1FE7                     	;# 
  3910     1FE8                     	;# 
  3911     1FE8                     	;# 
  3912     1FE9                     	;# 
  3913     1FEA                     	;# 
  3914     1FEB                     	;# 
  3915     1FED                     	;# 
  3916     1FEE                     	;# 
  3917     1FEF                     	;# 
  3918     0000                     	;# 
  3919     0001                     	;# 
  3920     0002                     	;# 
  3921     0003                     	;# 
  3922     0004                     	;# 
  3923     0005                     	;# 
  3924     0006                     	;# 
  3925     0007                     	;# 
  3926     0008                     	;# 
  3927     0009                     	;# 
  3928     000A                     	;# 
  3929     000B                     	;# 
  3930     000C                     	;# 
  3931     000D                     	;# 
  3932     000E                     	;# 
  3933     0010                     	;# 
  3934     0012                     	;# 
  3935     0013                     	;# 
  3936     0014                     	;# 
  3937     0016                     	;# 
  3938     0018                     	;# 
  3939     0019                     	;# 
  3940     001A                     	;# 
  3941     001C                     	;# 
  3942     008C                     	;# 
  3943     008C                     	;# 
  3944     008D                     	;# 
  3945     008E                     	;# 
  3946     008E                     	;# 
  3947     008F                     	;# 
  3948     0090                     	;# 
  3949     0090                     	;# 
  3950     0091                     	;# 
  3951     0092                     	;# 
  3952     0092                     	;# 
  3953     0093                     	;# 
  3954     0094                     	;# 
  3955     0094                     	;# 
  3956     0095                     	;# 
  3957     0096                     	;# 
  3958     0096                     	;# 
  3959     0097                     	;# 
  3960     0098                     	;# 
  3961     0099                     	;# 
  3962     009A                     	;# 
  3963     009B                     	;# 
  3964     009B                     	;# 
  3965     009C                     	;# 
  3966     009D                     	;# 
  3967     009D                     	;# 
  3968     009E                     	;# 
  3969     009F                     	;# 
  3970     010C                     	;# 
  3971     010C                     	;# 
  3972     010D                     	;# 
  3973     010E                     	;# 
  3974     010F                     	;# 
  3975     010F                     	;# 
  3976     0110                     	;# 
  3977     0111                     	;# 
  3978     0112                     	;# 
  3979     0113                     	;# 
  3980     0114                     	;# 
  3981     0115                     	;# 
  3982     0116                     	;# 
  3983     0117                     	;# 
  3984     0118                     	;# 
  3985     0119                     	;# 
  3986     0119                     	;# 
  3987     0119                     	;# 
  3988     011A                     	;# 
  3989     011A                     	;# 
  3990     011A                     	;# 
  3991     011B                     	;# 
  3992     011B                     	;# 
  3993     011B                     	;# 
  3994     011B                     	;# 
  3995     011B                     	;# 
  3996     011C                     	;# 
  3997     011C                     	;# 
  3998     011C                     	;# 
  3999     011D                     	;# 
  4000     011D                     	;# 
  4001     011D                     	;# 
  4002     011E                     	;# 
  4003     011E                     	;# 
  4004     011E                     	;# 
  4005     011F                     	;# 
  4006     011F                     	;# 
  4007     011F                     	;# 
  4008     011F                     	;# 
  4009     011F                     	;# 
  4010     018C                     	;# 
  4011     018D                     	;# 
  4012     018E                     	;# 
  4013     018F                     	;# 
  4014     0190                     	;# 
  4015     0191                     	;# 
  4016     0192                     	;# 
  4017     0196                     	;# 
  4018     0197                     	;# 
  4019     0198                     	;# 
  4020     0199                     	;# 
  4021     019A                     	;# 
  4022     019B                     	;# 
  4023     019C                     	;# 
  4024     020C                     	;# 
  4025     020D                     	;# 
  4026     020E                     	;# 
  4027     020E                     	;# 
  4028     020F                     	;# 
  4029     020F                     	;# 
  4030     0210                     	;# 
  4031     0210                     	;# 
  4032     0211                     	;# 
  4033     0211                     	;# 
  4034     0212                     	;# 
  4035     0213                     	;# 
  4036     0214                     	;# 
  4037     0214                     	;# 
  4038     0215                     	;# 
  4039     0215                     	;# 
  4040     0216                     	;# 
  4041     0216                     	;# 
  4042     0217                     	;# 
  4043     0217                     	;# 
  4044     0218                     	;# 
  4045     0219                     	;# 
  4046     021A                     	;# 
  4047     021A                     	;# 
  4048     021B                     	;# 
  4049     021B                     	;# 
  4050     021C                     	;# 
  4051     021C                     	;# 
  4052     021D                     	;# 
  4053     021D                     	;# 
  4054     021E                     	;# 
  4055     021F                     	;# 
  4056     028C                     	;# 
  4057     028C                     	;# 
  4058     028D                     	;# 
  4059     028D                     	;# 
  4060     028E                     	;# 
  4061     028F                     	;# 
  4062     0290                     	;# 
  4063     0291                     	;# 
  4064     0292                     	;# 
  4065     0292                     	;# 
  4066     0293                     	;# 
  4067     0293                     	;# 
  4068     0294                     	;# 
  4069     0295                     	;# 
  4070     0296                     	;# 
  4071     0297                     	;# 
  4072     0298                     	;# 
  4073     0298                     	;# 
  4074     0299                     	;# 
  4075     0299                     	;# 
  4076     029A                     	;# 
  4077     029B                     	;# 
  4078     029C                     	;# 
  4079     029D                     	;# 
  4080     029F                     	;# 
  4081     030C                     	;# 
  4082     030C                     	;# 
  4083     030D                     	;# 
  4084     030E                     	;# 
  4085     030F                     	;# 
  4086     0310                     	;# 
  4087     0310                     	;# 
  4088     0311                     	;# 
  4089     0312                     	;# 
  4090     0313                     	;# 
  4091     0314                     	;# 
  4092     0314                     	;# 
  4093     0315                     	;# 
  4094     0316                     	;# 
  4095     0317                     	;# 
  4096     0318                     	;# 
  4097     0318                     	;# 
  4098     0319                     	;# 
  4099     031A                     	;# 
  4100     031B                     	;# 
  4101     031C                     	;# 
  4102     031C                     	;# 
  4103     031D                     	;# 
  4104     031E                     	;# 
  4105     031F                     	;# 
  4106     038C                     	;# 
  4107     038C                     	;# 
  4108     038D                     	;# 
  4109     038E                     	;# 
  4110     0390                     	;# 
  4111     0390                     	;# 
  4112     0391                     	;# 
  4113     0392                     	;# 
  4114     048C                     	;# 
  4115     048C                     	;# 
  4116     048D                     	;# 
  4117     048E                     	;# 
  4118     048F                     	;# 
  4119     048F                     	;# 
  4120     0490                     	;# 
  4121     0491                     	;# 
  4122     0492                     	;# 
  4123     0492                     	;# 
  4124     0493                     	;# 
  4125     0494                     	;# 
  4126     0495                     	;# 
  4127     0495                     	;# 
  4128     0496                     	;# 
  4129     0497                     	;# 
  4130     0498                     	;# 
  4131     0499                     	;# 
  4132     049A                     	;# 
  4133     049B                     	;# 
  4134     049C                     	;# 
  4135     049D                     	;# 
  4136     050C                     	;# 
  4137     050C                     	;# 
  4138     050D                     	;# 
  4139     050E                     	;# 
  4140     050F                     	;# 
  4141     050F                     	;# 
  4142     0510                     	;# 
  4143     0511                     	;# 
  4144     0512                     	;# 
  4145     0512                     	;# 
  4146     0513                     	;# 
  4147     0514                     	;# 
  4148     0515                     	;# 
  4149     0515                     	;# 
  4150     0516                     	;# 
  4151     0517                     	;# 
  4152     0518                     	;# 
  4153     0519                     	;# 
  4154     051A                     	;# 
  4155     051B                     	;# 
  4156     051C                     	;# 
  4157     051D                     	;# 
  4158     058C                     	;# 
  4159     058C                     	;# 
  4160     058D                     	;# 
  4161     058E                     	;# 
  4162     058F                     	;# 
  4163     058F                     	;# 
  4164     0590                     	;# 
  4165     0591                     	;# 
  4166     0592                     	;# 
  4167     0593                     	;# 
  4168     059C                     	;# 
  4169     059C                     	;# 
  4170     059D                     	;# 
  4171     059D                     	;# 
  4172     059E                     	;# 
  4173     059F                     	;# 
  4174     060C                     	;# 
  4175     060C                     	;# 
  4176     060D                     	;# 
  4177     060D                     	;# 
  4178     060E                     	;# 
  4179     060F                     	;# 
  4180     0610                     	;# 
  4181     0611                     	;# 
  4182     0612                     	;# 
  4183     0613                     	;# 
  4184     0614                     	;# 
  4185     0616                     	;# 
  4186     0616                     	;# 
  4187     0617                     	;# 
  4188     0617                     	;# 
  4189     0618                     	;# 
  4190     0619                     	;# 
  4191     061A                     	;# 
  4192     061B                     	;# 
  4193     061C                     	;# 
  4194     061D                     	;# 
  4195     061E                     	;# 
  4196     068C                     	;# 
  4197     068D                     	;# 
  4198     068E                     	;# 
  4199     068F                     	;# 
  4200     0690                     	;# 
  4201     0691                     	;# 
  4202     0692                     	;# 
  4203     0693                     	;# 
  4204     0694                     	;# 
  4205     070C                     	;# 
  4206     070D                     	;# 
  4207     070E                     	;# 
  4208     070F                     	;# 
  4209     0710                     	;# 
  4210     0711                     	;# 
  4211     0712                     	;# 
  4212     0713                     	;# 
  4213     0714                     	;# 
  4214     0716                     	;# 
  4215     0717                     	;# 
  4216     0718                     	;# 
  4217     0719                     	;# 
  4218     071A                     	;# 
  4219     071B                     	;# 
  4220     071C                     	;# 
  4221     071D                     	;# 
  4222     071E                     	;# 
  4223     0796                     	;# 
  4224     0797                     	;# 
  4225     0798                     	;# 
  4226     0799                     	;# 
  4227     079A                     	;# 
  4228     079B                     	;# 
  4229     079C                     	;# 
  4230     079D                     	;# 
  4231     080C                     	;# 
  4232     080D                     	;# 
  4233     080E                     	;# 
  4234     080F                     	;# 
  4235     0810                     	;# 
  4236     0811                     	;# 
  4237     0813                     	;# 
  4238     0814                     	;# 
  4239     081A                     	;# 
  4240     081A                     	;# 
  4241     081B                     	;# 
  4242     081C                     	;# 
  4243     081C                     	;# 
  4244     081D                     	;# 
  4245     081E                     	;# 
  4246     081F                     	;# 
  4247     088C                     	;# 
  4248     088D                     	;# 
  4249     088E                     	;# 
  4250     088F                     	;# 
  4251     0890                     	;# 
  4252     0891                     	;# 
  4253     0892                     	;# 
  4254     0893                     	;# 
  4255     0895                     	;# 
  4256     0896                     	;# 
  4257     0897                     	;# 
  4258     0898                     	;# 
  4259     0899                     	;# 
  4260     089A                     	;# 
  4261     089B                     	;# 
  4262     090C                     	;# 
  4263     090E                     	;# 
  4264     090F                     	;# 
  4265     091F                     	;# 
  4266     098F                     	;# 
  4267     098F                     	;# 
  4268     0990                     	;# 
  4269     0991                     	;# 
  4270     0992                     	;# 
  4271     0993                     	;# 
  4272     0994                     	;# 
  4273     0995                     	;# 
  4274     0996                     	;# 
  4275     0997                     	;# 
  4276     0A19                     	;# 
  4277     0A19                     	;# 
  4278     0A1A                     	;# 
  4279     0A1A                     	;# 
  4280     0A1B                     	;# 
  4281     0A1B                     	;# 
  4282     0A1B                     	;# 
  4283     0A1C                     	;# 
  4284     0A1C                     	;# 
  4285     0A1D                     	;# 
  4286     0A1D                     	;# 
  4287     0A1E                     	;# 
  4288     0A1E                     	;# 
  4289     0A1F                     	;# 
  4290     0A1F                     	;# 
  4291     0A1F                     	;# 
  4292     1E0F                     	;# 
  4293     1E10                     	;# 
  4294     1E11                     	;# 
  4295     1E12                     	;# 
  4296     1E13                     	;# 
  4297     1E14                     	;# 
  4298     1E15                     	;# 
  4299     1E16                     	;# 
  4300     1E17                     	;# 
  4301     1E18                     	;# 
  4302     1E19                     	;# 
  4303     1E1A                     	;# 
  4304     1E1B                     	;# 
  4305     1E1C                     	;# 
  4306     1E1D                     	;# 
  4307     1E1E                     	;# 
  4308     1E1F                     	;# 
  4309     1E20                     	;# 
  4310     1E21                     	;# 
  4311     1E22                     	;# 
  4312     1E23                     	;# 
  4313     1E24                     	;# 
  4314     1E25                     	;# 
  4315     1E26                     	;# 
  4316     1E27                     	;# 
  4317     1E28                     	;# 
  4318     1E29                     	;# 
  4319     1E2A                     	;# 
  4320     1E2B                     	;# 
  4321     1E2C                     	;# 
  4322     1E2D                     	;# 
  4323     1E2E                     	;# 
  4324     1E2F                     	;# 
  4325     1E30                     	;# 
  4326     1E31                     	;# 
  4327     1E32                     	;# 
  4328     1E33                     	;# 
  4329     1E34                     	;# 
  4330     1E35                     	;# 
  4331     1E36                     	;# 
  4332     1E37                     	;# 
  4333     1E8F                     	;# 
  4334     1E90                     	;# 
  4335     1E91                     	;# 
  4336     1E92                     	;# 
  4337     1E93                     	;# 
  4338     1E94                     	;# 
  4339     1E95                     	;# 
  4340     1E96                     	;# 
  4341     1E97                     	;# 
  4342     1E9C                     	;# 
  4343     1E9D                     	;# 
  4344     1E9E                     	;# 
  4345     1EA1                     	;# 
  4346     1EA2                     	;# 
  4347     1EA3                     	;# 
  4348     1EA4                     	;# 
  4349     1EA5                     	;# 
  4350     1EA9                     	;# 
  4351     1EAA                     	;# 
  4352     1EAB                     	;# 
  4353     1EAC                     	;# 
  4354     1EB1                     	;# 
  4355     1EB2                     	;# 
  4356     1EB3                     	;# 
  4357     1EB8                     	;# 
  4358     1EB9                     	;# 
  4359     1EBA                     	;# 
  4360     1EBB                     	;# 
  4361     1EBC                     	;# 
  4362     1EBD                     	;# 
  4363     1EBE                     	;# 
  4364     1EC3                     	;# 
  4365     1EC5                     	;# 
  4366     1EC6                     	;# 
  4367     1EC7                     	;# 
  4368     1EC8                     	;# 
  4369     1EC9                     	;# 
  4370     1ECA                     	;# 
  4371     1ECB                     	;# 
  4372     1ECC                     	;# 
  4373     1ECD                     	;# 
  4374     1ECE                     	;# 
  4375     1F10                     	;# 
  4376     1F11                     	;# 
  4377     1F12                     	;# 
  4378     1F13                     	;# 
  4379     1F14                     	;# 
  4380     1F15                     	;# 
  4381     1F16                     	;# 
  4382     1F17                     	;# 
  4383     1F18                     	;# 
  4384     1F19                     	;# 
  4385     1F1A                     	;# 
  4386     1F1B                     	;# 
  4387     1F1C                     	;# 
  4388     1F1D                     	;# 
  4389     1F1E                     	;# 
  4390     1F1F                     	;# 
  4391     1F20                     	;# 
  4392     1F21                     	;# 
  4393     1F22                     	;# 
  4394     1F23                     	;# 
  4395     1F24                     	;# 
  4396     1F25                     	;# 
  4397     1F26                     	;# 
  4398     1F27                     	;# 
  4399     1F38                     	;# 
  4400     1F39                     	;# 
  4401     1F3A                     	;# 
  4402     1F3B                     	;# 
  4403     1F3C                     	;# 
  4404     1F3D                     	;# 
  4405     1F3E                     	;# 
  4406     1F3F                     	;# 
  4407     1F43                     	;# 
  4408     1F44                     	;# 
  4409     1F45                     	;# 
  4410     1F46                     	;# 
  4411     1F47                     	;# 
  4412     1F48                     	;# 
  4413     1F49                     	;# 
  4414     1F4A                     	;# 
  4415     1F4E                     	;# 
  4416     1F4F                     	;# 
  4417     1F50                     	;# 
  4418     1F51                     	;# 
  4419     1F52                     	;# 
  4420     1F53                     	;# 
  4421     1F54                     	;# 
  4422     1F55                     	;# 
  4423     1F65                     	;# 
  4424     1F66                     	;# 
  4425     1F67                     	;# 
  4426     1F68                     	;# 
  4427     1F69                     	;# 
  4428     1F6A                     	;# 
  4429     1F6B                     	;# 
  4430     1FE4                     	;# 
  4431     1FE5                     	;# 
  4432     1FE6                     	;# 
  4433     1FE7                     	;# 
  4434     1FE8                     	;# 
  4435     1FE8                     	;# 
  4436     1FE9                     	;# 
  4437     1FEA                     	;# 
  4438     1FEB                     	;# 
  4439     1FED                     	;# 
  4440     1FEE                     	;# 
  4441     1FEF                     	;# 
  4442     0000                     	;# 
  4443     0001                     	;# 
  4444     0002                     	;# 
  4445     0003                     	;# 
  4446     0004                     	;# 
  4447     0005                     	;# 
  4448     0006                     	;# 
  4449     0007                     	;# 
  4450     0008                     	;# 
  4451     0009                     	;# 
  4452     000A                     	;# 
  4453     000B                     	;# 
  4454     000C                     	;# 
  4455     000D                     	;# 
  4456     000E                     	;# 
  4457     0010                     	;# 
  4458     0012                     	;# 
  4459     0013                     	;# 
  4460     0014                     	;# 
  4461     0016                     	;# 
  4462     0018                     	;# 
  4463     0019                     	;# 
  4464     001A                     	;# 
  4465     001C                     	;# 
  4466     008C                     	;# 
  4467     008C                     	;# 
  4468     008D                     	;# 
  4469     008E                     	;# 
  4470     008E                     	;# 
  4471     008F                     	;# 
  4472     0090                     	;# 
  4473     0090                     	;# 
  4474     0091                     	;# 
  4475     0092                     	;# 
  4476     0092                     	;# 
  4477     0093                     	;# 
  4478     0094                     	;# 
  4479     0094                     	;# 
  4480     0095                     	;# 
  4481     0096                     	;# 
  4482     0096                     	;# 
  4483     0097                     	;# 
  4484     0098                     	;# 
  4485     0099                     	;# 
  4486     009A                     	;# 
  4487     009B                     	;# 
  4488     009B                     	;# 
  4489     009C                     	;# 
  4490     009D                     	;# 
  4491     009D                     	;# 
  4492     009E                     	;# 
  4493     009F                     	;# 
  4494     010C                     	;# 
  4495     010C                     	;# 
  4496     010D                     	;# 
  4497     010E                     	;# 
  4498     010F                     	;# 
  4499     010F                     	;# 
  4500     0110                     	;# 
  4501     0111                     	;# 
  4502     0112                     	;# 
  4503     0113                     	;# 
  4504     0114                     	;# 
  4505     0115                     	;# 
  4506     0116                     	;# 
  4507     0117                     	;# 
  4508     0118                     	;# 
  4509     0119                     	;# 
  4510     0119                     	;# 
  4511     0119                     	;# 
  4512     011A                     	;# 
  4513     011A                     	;# 
  4514     011A                     	;# 
  4515     011B                     	;# 
  4516     011B                     	;# 
  4517     011B                     	;# 
  4518     011B                     	;# 
  4519     011B                     	;# 
  4520     011C                     	;# 
  4521     011C                     	;# 
  4522     011C                     	;# 
  4523     011D                     	;# 
  4524     011D                     	;# 
  4525     011D                     	;# 
  4526     011E                     	;# 
  4527     011E                     	;# 
  4528     011E                     	;# 
  4529     011F                     	;# 
  4530     011F                     	;# 
  4531     011F                     	;# 
  4532     011F                     	;# 
  4533     011F                     	;# 
  4534     018C                     	;# 
  4535     018D                     	;# 
  4536     018E                     	;# 
  4537     018F                     	;# 
  4538     0190                     	;# 
  4539     0191                     	;# 
  4540     0192                     	;# 
  4541     0196                     	;# 
  4542     0197                     	;# 
  4543     0198                     	;# 
  4544     0199                     	;# 
  4545     019A                     	;# 
  4546     019B                     	;# 
  4547     019C                     	;# 
  4548     020C                     	;# 
  4549     020D                     	;# 
  4550     020E                     	;# 
  4551     020E                     	;# 
  4552     020F                     	;# 
  4553     020F                     	;# 
  4554     0210                     	;# 
  4555     0210                     	;# 
  4556     0211                     	;# 
  4557     0211                     	;# 
  4558     0212                     	;# 
  4559     0213                     	;# 
  4560     0214                     	;# 
  4561     0214                     	;# 
  4562     0215                     	;# 
  4563     0215                     	;# 
  4564     0216                     	;# 
  4565     0216                     	;# 
  4566     0217                     	;# 
  4567     0217                     	;# 
  4568     0218                     	;# 
  4569     0219                     	;# 
  4570     021A                     	;# 
  4571     021A                     	;# 
  4572     021B                     	;# 
  4573     021B                     	;# 
  4574     021C                     	;# 
  4575     021C                     	;# 
  4576     021D                     	;# 
  4577     021D                     	;# 
  4578     021E                     	;# 
  4579     021F                     	;# 
  4580     028C                     	;# 
  4581     028C                     	;# 
  4582     028D                     	;# 
  4583     028D                     	;# 
  4584     028E                     	;# 
  4585     028F                     	;# 
  4586     0290                     	;# 
  4587     0291                     	;# 
  4588     0292                     	;# 
  4589     0292                     	;# 
  4590     0293                     	;# 
  4591     0293                     	;# 
  4592     0294                     	;# 
  4593     0295                     	;# 
  4594     0296                     	;# 
  4595     0297                     	;# 
  4596     0298                     	;# 
  4597     0298                     	;# 
  4598     0299                     	;# 
  4599     0299                     	;# 
  4600     029A                     	;# 
  4601     029B                     	;# 
  4602     029C                     	;# 
  4603     029D                     	;# 
  4604     029F                     	;# 
  4605     030C                     	;# 
  4606     030C                     	;# 
  4607     030D                     	;# 
  4608     030E                     	;# 
  4609     030F                     	;# 
  4610     0310                     	;# 
  4611     0310                     	;# 
  4612     0311                     	;# 
  4613     0312                     	;# 
  4614     0313                     	;# 
  4615     0314                     	;# 
  4616     0314                     	;# 
  4617     0315                     	;# 
  4618     0316                     	;# 
  4619     0317                     	;# 
  4620     0318                     	;# 
  4621     0318                     	;# 
  4622     0319                     	;# 
  4623     031A                     	;# 
  4624     031B                     	;# 
  4625     031C                     	;# 
  4626     031C                     	;# 
  4627     031D                     	;# 
  4628     031E                     	;# 
  4629     031F                     	;# 
  4630     038C                     	;# 
  4631     038C                     	;# 
  4632     038D                     	;# 
  4633     038E                     	;# 
  4634     0390                     	;# 
  4635     0390                     	;# 
  4636     0391                     	;# 
  4637     0392                     	;# 
  4638     048C                     	;# 
  4639     048C                     	;# 
  4640     048D                     	;# 
  4641     048E                     	;# 
  4642     048F                     	;# 
  4643     048F                     	;# 
  4644     0490                     	;# 
  4645     0491                     	;# 
  4646     0492                     	;# 
  4647     0492                     	;# 
  4648     0493                     	;# 
  4649     0494                     	;# 
  4650     0495                     	;# 
  4651     0495                     	;# 
  4652     0496                     	;# 
  4653     0497                     	;# 
  4654     0498                     	;# 
  4655     0499                     	;# 
  4656     049A                     	;# 
  4657     049B                     	;# 
  4658     049C                     	;# 
  4659     049D                     	;# 
  4660     050C                     	;# 
  4661     050C                     	;# 
  4662     050D                     	;# 
  4663     050E                     	;# 
  4664     050F                     	;# 
  4665     050F                     	;# 
  4666     0510                     	;# 
  4667     0511                     	;# 
  4668     0512                     	;# 
  4669     0512                     	;# 
  4670     0513                     	;# 
  4671     0514                     	;# 
  4672     0515                     	;# 
  4673     0515                     	;# 
  4674     0516                     	;# 
  4675     0517                     	;# 
  4676     0518                     	;# 
  4677     0519                     	;# 
  4678     051A                     	;# 
  4679     051B                     	;# 
  4680     051C                     	;# 
  4681     051D                     	;# 
  4682     058C                     	;# 
  4683     058C                     	;# 
  4684     058D                     	;# 
  4685     058E                     	;# 
  4686     058F                     	;# 
  4687     058F                     	;# 
  4688     0590                     	;# 
  4689     0591                     	;# 
  4690     0592                     	;# 
  4691     0593                     	;# 
  4692     059C                     	;# 
  4693     059C                     	;# 
  4694     059D                     	;# 
  4695     059D                     	;# 
  4696     059E                     	;# 
  4697     059F                     	;# 
  4698     060C                     	;# 
  4699     060C                     	;# 
  4700     060D                     	;# 
  4701     060D                     	;# 
  4702     060E                     	;# 
  4703     060F                     	;# 
  4704     0610                     	;# 
  4705     0611                     	;# 
  4706     0612                     	;# 
  4707     0613                     	;# 
  4708     0614                     	;# 
  4709     0616                     	;# 
  4710     0616                     	;# 
  4711     0617                     	;# 
  4712     0617                     	;# 
  4713     0618                     	;# 
  4714     0619                     	;# 
  4715     061A                     	;# 
  4716     061B                     	;# 
  4717     061C                     	;# 
  4718     061D                     	;# 
  4719     061E                     	;# 
  4720     068C                     	;# 
  4721     068D                     	;# 
  4722     068E                     	;# 
  4723     068F                     	;# 
  4724     0690                     	;# 
  4725     0691                     	;# 
  4726     0692                     	;# 
  4727     0693                     	;# 
  4728     0694                     	;# 
  4729     070C                     	;# 
  4730     070D                     	;# 
  4731     070E                     	;# 
  4732     070F                     	;# 
  4733     0710                     	;# 
  4734     0711                     	;# 
  4735     0712                     	;# 
  4736     0713                     	;# 
  4737     0714                     	;# 
  4738     0716                     	;# 
  4739     0717                     	;# 
  4740     0718                     	;# 
  4741     0719                     	;# 
  4742     071A                     	;# 
  4743     071B                     	;# 
  4744     071C                     	;# 
  4745     071D                     	;# 
  4746     071E                     	;# 
  4747     0796                     	;# 
  4748     0797                     	;# 
  4749     0798                     	;# 
  4750     0799                     	;# 
  4751     079A                     	;# 
  4752     079B                     	;# 
  4753     079C                     	;# 
  4754     079D                     	;# 
  4755     080C                     	;# 
  4756     080D                     	;# 
  4757     080E                     	;# 
  4758     080F                     	;# 
  4759     0810                     	;# 
  4760     0811                     	;# 
  4761     0813                     	;# 
  4762     0814                     	;# 
  4763     081A                     	;# 
  4764     081A                     	;# 
  4765     081B                     	;# 
  4766     081C                     	;# 
  4767     081C                     	;# 
  4768     081D                     	;# 
  4769     081E                     	;# 
  4770     081F                     	;# 
  4771     088C                     	;# 
  4772     088D                     	;# 
  4773     088E                     	;# 
  4774     088F                     	;# 
  4775     0890                     	;# 
  4776     0891                     	;# 
  4777     0892                     	;# 
  4778     0893                     	;# 
  4779     0895                     	;# 
  4780     0896                     	;# 
  4781     0897                     	;# 
  4782     0898                     	;# 
  4783     0899                     	;# 
  4784     089A                     	;# 
  4785     089B                     	;# 
  4786     090C                     	;# 
  4787     090E                     	;# 
  4788     090F                     	;# 
  4789     091F                     	;# 
  4790     098F                     	;# 
  4791     098F                     	;# 
  4792     0990                     	;# 
  4793     0991                     	;# 
  4794     0992                     	;# 
  4795     0993                     	;# 
  4796     0994                     	;# 
  4797     0995                     	;# 
  4798     0996                     	;# 
  4799     0997                     	;# 
  4800     0A19                     	;# 
  4801     0A19                     	;# 
  4802     0A1A                     	;# 
  4803     0A1A                     	;# 
  4804     0A1B                     	;# 
  4805     0A1B                     	;# 
  4806     0A1B                     	;# 
  4807     0A1C                     	;# 
  4808     0A1C                     	;# 
  4809     0A1D                     	;# 
  4810     0A1D                     	;# 
  4811     0A1E                     	;# 
  4812     0A1E                     	;# 
  4813     0A1F                     	;# 
  4814     0A1F                     	;# 
  4815     0A1F                     	;# 
  4816     1E0F                     	;# 
  4817     1E10                     	;# 
  4818     1E11                     	;# 
  4819     1E12                     	;# 
  4820     1E13                     	;# 
  4821     1E14                     	;# 
  4822     1E15                     	;# 
  4823     1E16                     	;# 
  4824     1E17                     	;# 
  4825     1E18                     	;# 
  4826     1E19                     	;# 
  4827     1E1A                     	;# 
  4828     1E1B                     	;# 
  4829     1E1C                     	;# 
  4830     1E1D                     	;# 
  4831     1E1E                     	;# 
  4832     1E1F                     	;# 
  4833     1E20                     	;# 
  4834     1E21                     	;# 
  4835     1E22                     	;# 
  4836     1E23                     	;# 
  4837     1E24                     	;# 
  4838     1E25                     	;# 
  4839     1E26                     	;# 
  4840     1E27                     	;# 
  4841     1E28                     	;# 
  4842     1E29                     	;# 
  4843     1E2A                     	;# 
  4844     1E2B                     	;# 
  4845     1E2C                     	;# 
  4846     1E2D                     	;# 
  4847     1E2E                     	;# 
  4848     1E2F                     	;# 
  4849     1E30                     	;# 
  4850     1E31                     	;# 
  4851     1E32                     	;# 
  4852     1E33                     	;# 
  4853     1E34                     	;# 
  4854     1E35                     	;# 
  4855     1E36                     	;# 
  4856     1E37                     	;# 
  4857     1E8F                     	;# 
  4858     1E90                     	;# 
  4859     1E91                     	;# 
  4860     1E92                     	;# 
  4861     1E93                     	;# 
  4862     1E94                     	;# 
  4863     1E95                     	;# 
  4864     1E96                     	;# 
  4865     1E97                     	;# 
  4866     1E9C                     	;# 
  4867     1E9D                     	;# 
  4868     1E9E                     	;# 
  4869     1EA1                     	;# 
  4870     1EA2                     	;# 
  4871     1EA3                     	;# 
  4872     1EA4                     	;# 
  4873     1EA5                     	;# 
  4874     1EA9                     	;# 
  4875     1EAA                     	;# 
  4876     1EAB                     	;# 
  4877     1EAC                     	;# 
  4878     1EB1                     	;# 
  4879     1EB2                     	;# 
  4880     1EB3                     	;# 
  4881     1EB8                     	;# 
  4882     1EB9                     	;# 
  4883     1EBA                     	;# 
  4884     1EBB                     	;# 
  4885     1EBC                     	;# 
  4886     1EBD                     	;# 
  4887     1EBE                     	;# 
  4888     1EC3                     	;# 
  4889     1EC5                     	;# 
  4890     1EC6                     	;# 
  4891     1EC7                     	;# 
  4892     1EC8                     	;# 
  4893     1EC9                     	;# 
  4894     1ECA                     	;# 
  4895     1ECB                     	;# 
  4896     1ECC                     	;# 
  4897     1ECD                     	;# 
  4898     1ECE                     	;# 
  4899     1F10                     	;# 
  4900     1F11                     	;# 
  4901     1F12                     	;# 
  4902     1F13                     	;# 
  4903     1F14                     	;# 
  4904     1F15                     	;# 
  4905     1F16                     	;# 
  4906     1F17                     	;# 
  4907     1F18                     	;# 
  4908     1F19                     	;# 
  4909     1F1A                     	;# 
  4910     1F1B                     	;# 
  4911     1F1C                     	;# 
  4912     1F1D                     	;# 
  4913     1F1E                     	;# 
  4914     1F1F                     	;# 
  4915     1F20                     	;# 
  4916     1F21                     	;# 
  4917     1F22                     	;# 
  4918     1F23                     	;# 
  4919     1F24                     	;# 
  4920     1F25                     	;# 
  4921     1F26                     	;# 
  4922     1F27                     	;# 
  4923     1F38                     	;# 
  4924     1F39                     	;# 
  4925     1F3A                     	;# 
  4926     1F3B                     	;# 
  4927     1F3C                     	;# 
  4928     1F3D                     	;# 
  4929     1F3E                     	;# 
  4930     1F3F                     	;# 
  4931     1F43                     	;# 
  4932     1F44                     	;# 
  4933     1F45                     	;# 
  4934     1F46                     	;# 
  4935     1F47                     	;# 
  4936     1F48                     	;# 
  4937     1F49                     	;# 
  4938     1F4A                     	;# 
  4939     1F4E                     	;# 
  4940     1F4F                     	;# 
  4941     1F50                     	;# 
  4942     1F51                     	;# 
  4943     1F52                     	;# 
  4944     1F53                     	;# 
  4945     1F54                     	;# 
  4946     1F55                     	;# 
  4947     1F65                     	;# 
  4948     1F66                     	;# 
  4949     1F67                     	;# 
  4950     1F68                     	;# 
  4951     1F69                     	;# 
  4952     1F6A                     	;# 
  4953     1F6B                     	;# 
  4954     1FE4                     	;# 
  4955     1FE5                     	;# 
  4956     1FE6                     	;# 
  4957     1FE7                     	;# 
  4958     1FE8                     	;# 
  4959     1FE8                     	;# 
  4960     1FE9                     	;# 
  4961     1FEA                     	;# 
  4962     1FEB                     	;# 
  4963     1FED                     	;# 
  4964     1FEE                     	;# 
  4965     1FEF                     	;# 
  4966     0000                     	;# 
  4967     0001                     	;# 
  4968     0002                     	;# 
  4969     0003                     	;# 
  4970     0004                     	;# 
  4971     0005                     	;# 
  4972     0006                     	;# 
  4973     0007                     	;# 
  4974     0008                     	;# 
  4975     0009                     	;# 
  4976     000A                     	;# 
  4977     000B                     	;# 
  4978     000C                     	;# 
  4979     000D                     	;# 
  4980     000E                     	;# 
  4981     0010                     	;# 
  4982     0012                     	;# 
  4983     0013                     	;# 
  4984     0014                     	;# 
  4985     0016                     	;# 
  4986     0018                     	;# 
  4987     0019                     	;# 
  4988     001A                     	;# 
  4989     001C                     	;# 
  4990     008C                     	;# 
  4991     008C                     	;# 
  4992     008D                     	;# 
  4993     008E                     	;# 
  4994     008E                     	;# 
  4995     008F                     	;# 
  4996     0090                     	;# 
  4997     0090                     	;# 
  4998     0091                     	;# 
  4999     0092                     	;# 
  5000     0092                     	;# 
  5001     0093                     	;# 
  5002     0094                     	;# 
  5003     0094                     	;# 
  5004     0095                     	;# 
  5005     0096                     	;# 
  5006     0096                     	;# 
  5007     0097                     	;# 
  5008     0098                     	;# 
  5009     0099                     	;# 
  5010     009A                     	;# 
  5011     009B                     	;# 
  5012     009B                     	;# 
  5013     009C                     	;# 
  5014     009D                     	;# 
  5015     009D                     	;# 
  5016     009E                     	;# 
  5017     009F                     	;# 
  5018     010C                     	;# 
  5019     010C                     	;# 
  5020     010D                     	;# 
  5021     010E                     	;# 
  5022     010F                     	;# 
  5023     010F                     	;# 
  5024     0110                     	;# 
  5025     0111                     	;# 
  5026     0112                     	;# 
  5027     0113                     	;# 
  5028     0114                     	;# 
  5029     0115                     	;# 
  5030     0116                     	;# 
  5031     0117                     	;# 
  5032     0118                     	;# 
  5033     0119                     	;# 
  5034     0119                     	;# 
  5035     0119                     	;# 
  5036     011A                     	;# 
  5037     011A                     	;# 
  5038     011A                     	;# 
  5039     011B                     	;# 
  5040     011B                     	;# 
  5041     011B                     	;# 
  5042     011B                     	;# 
  5043     011B                     	;# 
  5044     011C                     	;# 
  5045     011C                     	;# 
  5046     011C                     	;# 
  5047     011D                     	;# 
  5048     011D                     	;# 
  5049     011D                     	;# 
  5050     011E                     	;# 
  5051     011E                     	;# 
  5052     011E                     	;# 
  5053     011F                     	;# 
  5054     011F                     	;# 
  5055     011F                     	;# 
  5056     011F                     	;# 
  5057     011F                     	;# 
  5058     018C                     	;# 
  5059     018D                     	;# 
  5060     018E                     	;# 
  5061     018F                     	;# 
  5062     0190                     	;# 
  5063     0191                     	;# 
  5064     0192                     	;# 
  5065     0196                     	;# 
  5066     0197                     	;# 
  5067     0198                     	;# 
  5068     0199                     	;# 
  5069     019A                     	;# 
  5070     019B                     	;# 
  5071     019C                     	;# 
  5072     020C                     	;# 
  5073     020D                     	;# 
  5074     020E                     	;# 
  5075     020E                     	;# 
  5076     020F                     	;# 
  5077     020F                     	;# 
  5078     0210                     	;# 
  5079     0210                     	;# 
  5080     0211                     	;# 
  5081     0211                     	;# 
  5082     0212                     	;# 
  5083     0213                     	;# 
  5084     0214                     	;# 
  5085     0214                     	;# 
  5086     0215                     	;# 
  5087     0215                     	;# 
  5088     0216                     	;# 
  5089     0216                     	;# 
  5090     0217                     	;# 
  5091     0217                     	;# 
  5092     0218                     	;# 
  5093     0219                     	;# 
  5094     021A                     	;# 
  5095     021A                     	;# 
  5096     021B                     	;# 
  5097     021B                     	;# 
  5098     021C                     	;# 
  5099     021C                     	;# 
  5100     021D                     	;# 
  5101     021D                     	;# 
  5102     021E                     	;# 
  5103     021F                     	;# 
  5104     028C                     	;# 
  5105     028C                     	;# 
  5106     028D                     	;# 
  5107     028D                     	;# 
  5108     028E                     	;# 
  5109     028F                     	;# 
  5110     0290                     	;# 
  5111     0291                     	;# 
  5112     0292                     	;# 
  5113     0292                     	;# 
  5114     0293                     	;# 
  5115     0293                     	;# 
  5116     0294                     	;# 
  5117     0295                     	;# 
  5118     0296                     	;# 
  5119     0297                     	;# 
  5120     0298                     	;# 
  5121     0298                     	;# 
  5122     0299                     	;# 
  5123     0299                     	;# 
  5124     029A                     	;# 
  5125     029B                     	;# 
  5126     029C                     	;# 
  5127     029D                     	;# 
  5128     029F                     	;# 
  5129     030C                     	;# 
  5130     030C                     	;# 
  5131     030D                     	;# 
  5132     030E                     	;# 
  5133     030F                     	;# 
  5134     0310                     	;# 
  5135     0310                     	;# 
  5136     0311                     	;# 
  5137     0312                     	;# 
  5138     0313                     	;# 
  5139     0314                     	;# 
  5140     0314                     	;# 
  5141     0315                     	;# 
  5142     0316                     	;# 
  5143     0317                     	;# 
  5144     0318                     	;# 
  5145     0318                     	;# 
  5146     0319                     	;# 
  5147     031A                     	;# 
  5148     031B                     	;# 
  5149     031C                     	;# 
  5150     031C                     	;# 
  5151     031D                     	;# 
  5152     031E                     	;# 
  5153     031F                     	;# 
  5154     038C                     	;# 
  5155     038C                     	;# 
  5156     038D                     	;# 
  5157     038E                     	;# 
  5158     0390                     	;# 
  5159     0390                     	;# 
  5160     0391                     	;# 
  5161     0392                     	;# 
  5162     048C                     	;# 
  5163     048C                     	;# 
  5164     048D                     	;# 
  5165     048E                     	;# 
  5166     048F                     	;# 
  5167     048F                     	;# 
  5168     0490                     	;# 
  5169     0491                     	;# 
  5170     0492                     	;# 
  5171     0492                     	;# 
  5172     0493                     	;# 
  5173     0494                     	;# 
  5174     0495                     	;# 
  5175     0495                     	;# 
  5176     0496                     	;# 
  5177     0497                     	;# 
  5178     0498                     	;# 
  5179     0499                     	;# 
  5180     049A                     	;# 
  5181     049B                     	;# 
  5182     049C                     	;# 
  5183     049D                     	;# 
  5184     050C                     	;# 
  5185     050C                     	;# 
  5186     050D                     	;# 
  5187     050E                     	;# 
  5188     050F                     	;# 
  5189     050F                     	;# 
  5190     0510                     	;# 
  5191     0511                     	;# 
  5192     0512                     	;# 
  5193     0512                     	;# 
  5194     0513                     	;# 
  5195     0514                     	;# 
  5196     0515                     	;# 
  5197     0515                     	;# 
  5198     0516                     	;# 
  5199     0517                     	;# 
  5200     0518                     	;# 
  5201     0519                     	;# 
  5202     051A                     	;# 
  5203     051B                     	;# 
  5204     051C                     	;# 
  5205     051D                     	;# 
  5206     058C                     	;# 
  5207     058C                     	;# 
  5208     058D                     	;# 
  5209     058E                     	;# 
  5210     058F                     	;# 
  5211     058F                     	;# 
  5212     0590                     	;# 
  5213     0591                     	;# 
  5214     0592                     	;# 
  5215     0593                     	;# 
  5216     059C                     	;# 
  5217     059C                     	;# 
  5218     059D                     	;# 
  5219     059D                     	;# 
  5220     059E                     	;# 
  5221     059F                     	;# 
  5222     060C                     	;# 
  5223     060C                     	;# 
  5224     060D                     	;# 
  5225     060D                     	;# 
  5226     060E                     	;# 
  5227     060F                     	;# 
  5228     0610                     	;# 
  5229     0611                     	;# 
  5230     0612                     	;# 
  5231     0613                     	;# 
  5232     0614                     	;# 
  5233     0616                     	;# 
  5234     0616                     	;# 
  5235     0617                     	;# 
  5236     0617                     	;# 
  5237     0618                     	;# 
  5238     0619                     	;# 
  5239     061A                     	;# 
  5240     061B                     	;# 
  5241     061C                     	;# 
  5242     061D                     	;# 
  5243     061E                     	;# 
  5244     068C                     	;# 
  5245     068D                     	;# 
  5246     068E                     	;# 
  5247     068F                     	;# 
  5248     0690                     	;# 
  5249     0691                     	;# 
  5250     0692                     	;# 
  5251     0693                     	;# 
  5252     0694                     	;# 
  5253     070C                     	;# 
  5254     070D                     	;# 
  5255     070E                     	;# 
  5256     070F                     	;# 
  5257     0710                     	;# 
  5258     0711                     	;# 
  5259     0712                     	;# 
  5260     0713                     	;# 
  5261     0714                     	;# 
  5262     0716                     	;# 
  5263     0717                     	;# 
  5264     0718                     	;# 
  5265     0719                     	;# 
  5266     071A                     	;# 
  5267     071B                     	;# 
  5268     071C                     	;# 
  5269     071D                     	;# 
  5270     071E                     	;# 
  5271     0796                     	;# 
  5272     0797                     	;# 
  5273     0798                     	;# 
  5274     0799                     	;# 
  5275     079A                     	;# 
  5276     079B                     	;# 
  5277     079C                     	;# 
  5278     079D                     	;# 
  5279     080C                     	;# 
  5280     080D                     	;# 
  5281     080E                     	;# 
  5282     080F                     	;# 
  5283     0810                     	;# 
  5284     0811                     	;# 
  5285     0813                     	;# 
  5286     0814                     	;# 
  5287     081A                     	;# 
  5288     081A                     	;# 
  5289     081B                     	;# 
  5290     081C                     	;# 
  5291     081C                     	;# 
  5292     081D                     	;# 
  5293     081E                     	;# 
  5294     081F                     	;# 
  5295     088C                     	;# 
  5296     088D                     	;# 
  5297     088E                     	;# 
  5298     088F                     	;# 
  5299     0890                     	;# 
  5300     0891                     	;# 
  5301     0892                     	;# 
  5302     0893                     	;# 
  5303     0895                     	;# 
  5304     0896                     	;# 
  5305     0897                     	;# 
  5306     0898                     	;# 
  5307     0899                     	;# 
  5308     089A                     	;# 
  5309     089B                     	;# 
  5310     090C                     	;# 
  5311     090E                     	;# 
  5312     090F                     	;# 
  5313     091F                     	;# 
  5314     098F                     	;# 
  5315     098F                     	;# 
  5316     0990                     	;# 
  5317     0991                     	;# 
  5318     0992                     	;# 
  5319     0993                     	;# 
  5320     0994                     	;# 
  5321     0995                     	;# 
  5322     0996                     	;# 
  5323     0997                     	;# 
  5324     0A19                     	;# 
  5325     0A19                     	;# 
  5326     0A1A                     	;# 
  5327     0A1A                     	;# 
  5328     0A1B                     	;# 
  5329     0A1B                     	;# 
  5330     0A1B                     	;# 
  5331     0A1C                     	;# 
  5332     0A1C                     	;# 
  5333     0A1D                     	;# 
  5334     0A1D                     	;# 
  5335     0A1E                     	;# 
  5336     0A1E                     	;# 
  5337     0A1F                     	;# 
  5338     0A1F                     	;# 
  5339     0A1F                     	;# 
  5340     1E0F                     	;# 
  5341     1E10                     	;# 
  5342     1E11                     	;# 
  5343     1E12                     	;# 
  5344     1E13                     	;# 
  5345     1E14                     	;# 
  5346     1E15                     	;# 
  5347     1E16                     	;# 
  5348     1E17                     	;# 
  5349     1E18                     	;# 
  5350     1E19                     	;# 
  5351     1E1A                     	;# 
  5352     1E1B                     	;# 
  5353     1E1C                     	;# 
  5354     1E1D                     	;# 
  5355     1E1E                     	;# 
  5356     1E1F                     	;# 
  5357     1E20                     	;# 
  5358     1E21                     	;# 
  5359     1E22                     	;# 
  5360     1E23                     	;# 
  5361     1E24                     	;# 
  5362     1E25                     	;# 
  5363     1E26                     	;# 
  5364     1E27                     	;# 
  5365     1E28                     	;# 
  5366     1E29                     	;# 
  5367     1E2A                     	;# 
  5368     1E2B                     	;# 
  5369     1E2C                     	;# 
  5370     1E2D                     	;# 
  5371     1E2E                     	;# 
  5372     1E2F                     	;# 
  5373     1E30                     	;# 
  5374     1E31                     	;# 
  5375     1E32                     	;# 
  5376     1E33                     	;# 
  5377     1E34                     	;# 
  5378     1E35                     	;# 
  5379     1E36                     	;# 
  5380     1E37                     	;# 
  5381     1E8F                     	;# 
  5382     1E90                     	;# 
  5383     1E91                     	;# 
  5384     1E92                     	;# 
  5385     1E93                     	;# 
  5386     1E94                     	;# 
  5387     1E95                     	;# 
  5388     1E96                     	;# 
  5389     1E97                     	;# 
  5390     1E9C                     	;# 
  5391     1E9D                     	;# 
  5392     1E9E                     	;# 
  5393     1EA1                     	;# 
  5394     1EA2                     	;# 
  5395     1EA3                     	;# 
  5396     1EA4                     	;# 
  5397     1EA5                     	;# 
  5398     1EA9                     	;# 
  5399     1EAA                     	;# 
  5400     1EAB                     	;# 
  5401     1EAC                     	;# 
  5402     1EB1                     	;# 
  5403     1EB2                     	;# 
  5404     1EB3                     	;# 
  5405     1EB8                     	;# 
  5406     1EB9                     	;# 
  5407     1EBA                     	;# 
  5408     1EBB                     	;# 
  5409     1EBC                     	;# 
  5410     1EBD                     	;# 
  5411     1EBE                     	;# 
  5412     1EC3                     	;# 
  5413     1EC5                     	;# 
  5414     1EC6                     	;# 
  5415     1EC7                     	;# 
  5416     1EC8                     	;# 
  5417     1EC9                     	;# 
  5418     1ECA                     	;# 
  5419     1ECB                     	;# 
  5420     1ECC                     	;# 
  5421     1ECD                     	;# 
  5422     1ECE                     	;# 
  5423     1F10                     	;# 
  5424     1F11                     	;# 
  5425     1F12                     	;# 
  5426     1F13                     	;# 
  5427     1F14                     	;# 
  5428     1F15                     	;# 
  5429     1F16                     	;# 
  5430     1F17                     	;# 
  5431     1F18                     	;# 
  5432     1F19                     	;# 
  5433     1F1A                     	;# 
  5434     1F1B                     	;# 
  5435     1F1C                     	;# 
  5436     1F1D                     	;# 
  5437     1F1E                     	;# 
  5438     1F1F                     	;# 
  5439     1F20                     	;# 
  5440     1F21                     	;# 
  5441     1F22                     	;# 
  5442     1F23                     	;# 
  5443     1F24                     	;# 
  5444     1F25                     	;# 
  5445     1F26                     	;# 
  5446     1F27                     	;# 
  5447     1F38                     	;# 
  5448     1F39                     	;# 
  5449     1F3A                     	;# 
  5450     1F3B                     	;# 
  5451     1F3C                     	;# 
  5452     1F3D                     	;# 
  5453     1F3E                     	;# 
  5454     1F3F                     	;# 
  5455     1F43                     	;# 
  5456     1F44                     	;# 
  5457     1F45                     	;# 
  5458     1F46                     	;# 
  5459     1F47                     	;# 
  5460     1F48                     	;# 
  5461     1F49                     	;# 
  5462     1F4A                     	;# 
  5463     1F4E                     	;# 
  5464     1F4F                     	;# 
  5465     1F50                     	;# 
  5466     1F51                     	;# 
  5467     1F52                     	;# 
  5468     1F53                     	;# 
  5469     1F54                     	;# 
  5470     1F55                     	;# 
  5471     1F65                     	;# 
  5472     1F66                     	;# 
  5473     1F67                     	;# 
  5474     1F68                     	;# 
  5475     1F69                     	;# 
  5476     1F6A                     	;# 
  5477     1F6B                     	;# 
  5478     1FE4                     	;# 
  5479     1FE5                     	;# 
  5480     1FE6                     	;# 
  5481     1FE7                     	;# 
  5482     1FE8                     	;# 
  5483     1FE8                     	;# 
  5484     1FE9                     	;# 
  5485     1FEA                     	;# 
  5486     1FEB                     	;# 
  5487     1FED                     	;# 
  5488     1FEE                     	;# 
  5489     1FEF                     	;# 
  5490     0000                     	;# 
  5491     0001                     	;# 
  5492     0002                     	;# 
  5493     0003                     	;# 
  5494     0004                     	;# 
  5495     0005                     	;# 
  5496     0006                     	;# 
  5497     0007                     	;# 
  5498     0008                     	;# 
  5499     0009                     	;# 
  5500     000A                     	;# 
  5501     000B                     	;# 
  5502     000C                     	;# 
  5503     000D                     	;# 
  5504     000E                     	;# 
  5505     0010                     	;# 
  5506     0012                     	;# 
  5507     0013                     	;# 
  5508     0014                     	;# 
  5509     0016                     	;# 
  5510     0018                     	;# 
  5511     0019                     	;# 
  5512     001A                     	;# 
  5513     001C                     	;# 
  5514     008C                     	;# 
  5515     008C                     	;# 
  5516     008D                     	;# 
  5517     008E                     	;# 
  5518     008E                     	;# 
  5519     008F                     	;# 
  5520     0090                     	;# 
  5521     0090                     	;# 
  5522     0091                     	;# 
  5523     0092                     	;# 
  5524     0092                     	;# 
  5525     0093                     	;# 
  5526     0094                     	;# 
  5527     0094                     	;# 
  5528     0095                     	;# 
  5529     0096                     	;# 
  5530     0096                     	;# 
  5531     0097                     	;# 
  5532     0098                     	;# 
  5533     0099                     	;# 
  5534     009A                     	;# 
  5535     009B                     	;# 
  5536     009B                     	;# 
  5537     009C                     	;# 
  5538     009D                     	;# 
  5539     009D                     	;# 
  5540     009E                     	;# 
  5541     009F                     	;# 
  5542     010C                     	;# 
  5543     010C                     	;# 
  5544     010D                     	;# 
  5545     010E                     	;# 
  5546     010F                     	;# 
  5547     010F                     	;# 
  5548     0110                     	;# 
  5549     0111                     	;# 
  5550     0112                     	;# 
  5551     0113                     	;# 
  5552     0114                     	;# 
  5553     0115                     	;# 
  5554     0116                     	;# 
  5555     0117                     	;# 
  5556     0118                     	;# 
  5557     0119                     	;# 
  5558     0119                     	;# 
  5559     0119                     	;# 
  5560     011A                     	;# 
  5561     011A                     	;# 
  5562     011A                     	;# 
  5563     011B                     	;# 
  5564     011B                     	;# 
  5565     011B                     	;# 
  5566     011B                     	;# 
  5567     011B                     	;# 
  5568     011C                     	;# 
  5569     011C                     	;# 
  5570     011C                     	;# 
  5571     011D                     	;# 
  5572     011D                     	;# 
  5573     011D                     	;# 
  5574     011E                     	;# 
  5575     011E                     	;# 
  5576     011E                     	;# 
  5577     011F                     	;# 
  5578     011F                     	;# 
  5579     011F                     	;# 
  5580     011F                     	;# 
  5581     011F                     	;# 
  5582     018C                     	;# 
  5583     018D                     	;# 
  5584     018E                     	;# 
  5585     018F                     	;# 
  5586     0190                     	;# 
  5587     0191                     	;# 
  5588     0192                     	;# 
  5589     0196                     	;# 
  5590     0197                     	;# 
  5591     0198                     	;# 
  5592     0199                     	;# 
  5593     019A                     	;# 
  5594     019B                     	;# 
  5595     019C                     	;# 
  5596     020C                     	;# 
  5597     020D                     	;# 
  5598     020E                     	;# 
  5599     020E                     	;# 
  5600     020F                     	;# 
  5601     020F                     	;# 
  5602     0210                     	;# 
  5603     0210                     	;# 
  5604     0211                     	;# 
  5605     0211                     	;# 
  5606     0212                     	;# 
  5607     0213                     	;# 
  5608     0214                     	;# 
  5609     0214                     	;# 
  5610     0215                     	;# 
  5611     0215                     	;# 
  5612     0216                     	;# 
  5613     0216                     	;# 
  5614     0217                     	;# 
  5615     0217                     	;# 
  5616     0218                     	;# 
  5617     0219                     	;# 
  5618     021A                     	;# 
  5619     021A                     	;# 
  5620     021B                     	;# 
  5621     021B                     	;# 
  5622     021C                     	;# 
  5623     021C                     	;# 
  5624     021D                     	;# 
  5625     021D                     	;# 
  5626     021E                     	;# 
  5627     021F                     	;# 
  5628     028C                     	;# 
  5629     028C                     	;# 
  5630     028D                     	;# 
  5631     028D                     	;# 
  5632     028E                     	;# 
  5633     028F                     	;# 
  5634     0290                     	;# 
  5635     0291                     	;# 
  5636     0292                     	;# 
  5637     0292                     	;# 
  5638     0293                     	;# 
  5639     0293                     	;# 
  5640     0294                     	;# 
  5641     0295                     	;# 
  5642     0296                     	;# 
  5643     0297                     	;# 
  5644     0298                     	;# 
  5645     0298                     	;# 
  5646     0299                     	;# 
  5647     0299                     	;# 
  5648     029A                     	;# 
  5649     029B                     	;# 
  5650     029C                     	;# 
  5651     029D                     	;# 
  5652     029F                     	;# 
  5653     030C                     	;# 
  5654     030C                     	;# 
  5655     030D                     	;# 
  5656     030E                     	;# 
  5657     030F                     	;# 
  5658     0310                     	;# 
  5659     0310                     	;# 
  5660     0311                     	;# 
  5661     0312                     	;# 
  5662     0313                     	;# 
  5663     0314                     	;# 
  5664     0314                     	;# 
  5665     0315                     	;# 
  5666     0316                     	;# 
  5667     0317                     	;# 
  5668     0318                     	;# 
  5669     0318                     	;# 
  5670     0319                     	;# 
  5671     031A                     	;# 
  5672     031B                     	;# 
  5673     031C                     	;# 
  5674     031C                     	;# 
  5675     031D                     	;# 
  5676     031E                     	;# 
  5677     031F                     	;# 
  5678     038C                     	;# 
  5679     038C                     	;# 
  5680     038D                     	;# 
  5681     038E                     	;# 
  5682     0390                     	;# 
  5683     0390                     	;# 
  5684     0391                     	;# 
  5685     0392                     	;# 
  5686     048C                     	;# 
  5687     048C                     	;# 
  5688     048D                     	;# 
  5689     048E                     	;# 
  5690     048F                     	;# 
  5691     048F                     	;# 
  5692     0490                     	;# 
  5693     0491                     	;# 
  5694     0492                     	;# 
  5695     0492                     	;# 
  5696     0493                     	;# 
  5697     0494                     	;# 
  5698     0495                     	;# 
  5699     0495                     	;# 
  5700     0496                     	;# 
  5701     0497                     	;# 
  5702     0498                     	;# 
  5703     0499                     	;# 
  5704     049A                     	;# 
  5705     049B                     	;# 
  5706     049C                     	;# 
  5707     049D                     	;# 
  5708     050C                     	;# 
  5709     050C                     	;# 
  5710     050D                     	;# 
  5711     050E                     	;# 
  5712     050F                     	;# 
  5713     050F                     	;# 
  5714     0510                     	;# 
  5715     0511                     	;# 
  5716     0512                     	;# 
  5717     0512                     	;# 
  5718     0513                     	;# 
  5719     0514                     	;# 
  5720     0515                     	;# 
  5721     0515                     	;# 
  5722     0516                     	;# 
  5723     0517                     	;# 
  5724     0518                     	;# 
  5725     0519                     	;# 
  5726     051A                     	;# 
  5727     051B                     	;# 
  5728     051C                     	;# 
  5729     051D                     	;# 
  5730     058C                     	;# 
  5731     058C                     	;# 
  5732     058D                     	;# 
  5733     058E                     	;# 
  5734     058F                     	;# 
  5735     058F                     	;# 
  5736     0590                     	;# 
  5737     0591                     	;# 
  5738     0592                     	;# 
  5739     0593                     	;# 
  5740     059C                     	;# 
  5741     059C                     	;# 
  5742     059D                     	;# 
  5743     059D                     	;# 
  5744     059E                     	;# 
  5745     059F                     	;# 
  5746     060C                     	;# 
  5747     060C                     	;# 
  5748     060D                     	;# 
  5749     060D                     	;# 
  5750     060E                     	;# 
  5751     060F                     	;# 
  5752     0610                     	;# 
  5753     0611                     	;# 
  5754     0612                     	;# 
  5755     0613                     	;# 
  5756     0614                     	;# 
  5757     0616                     	;# 
  5758     0616                     	;# 
  5759     0617                     	;# 
  5760     0617                     	;# 
  5761     0618                     	;# 
  5762     0619                     	;# 
  5763     061A                     	;# 
  5764     061B                     	;# 
  5765     061C                     	;# 
  5766     061D                     	;# 
  5767     061E                     	;# 
  5768     068C                     	;# 
  5769     068D                     	;# 
  5770     068E                     	;# 
  5771     068F                     	;# 
  5772     0690                     	;# 
  5773     0691                     	;# 
  5774     0692                     	;# 
  5775     0693                     	;# 
  5776     0694                     	;# 
  5777     070C                     	;# 
  5778     070D                     	;# 
  5779     070E                     	;# 
  5780     070F                     	;# 
  5781     0710                     	;# 
  5782     0711                     	;# 
  5783     0712                     	;# 
  5784     0713                     	;# 
  5785     0714                     	;# 
  5786     0716                     	;# 
  5787     0717                     	;# 
  5788     0718                     	;# 
  5789     0719                     	;# 
  5790     071A                     	;# 
  5791     071B                     	;# 
  5792     071C                     	;# 
  5793     071D                     	;# 
  5794     071E                     	;# 
  5795     0796                     	;# 
  5796     0797                     	;# 
  5797     0798                     	;# 
  5798     0799                     	;# 
  5799     079A                     	;# 
  5800     079B                     	;# 
  5801     079C                     	;# 
  5802     079D                     	;# 
  5803     080C                     	;# 
  5804     080D                     	;# 
  5805     080E                     	;# 
  5806     080F                     	;# 
  5807     0810                     	;# 
  5808     0811                     	;# 
  5809     0813                     	;# 
  5810     0814                     	;# 
  5811     081A                     	;# 
  5812     081A                     	;# 
  5813     081B                     	;# 
  5814     081C                     	;# 
  5815     081C                     	;# 
  5816     081D                     	;# 
  5817     081E                     	;# 
  5818     081F                     	;# 
  5819     088C                     	;# 
  5820     088D                     	;# 
  5821     088E                     	;# 
  5822     088F                     	;# 
  5823     0890                     	;# 
  5824     0891                     	;# 
  5825     0892                     	;# 
  5826     0893                     	;# 
  5827     0895                     	;# 
  5828     0896                     	;# 
  5829     0897                     	;# 
  5830     0898                     	;# 
  5831     0899                     	;# 
  5832     089A                     	;# 
  5833     089B                     	;# 
  5834     090C                     	;# 
  5835     090E                     	;# 
  5836     090F                     	;# 
  5837     091F                     	;# 
  5838     098F                     	;# 
  5839     098F                     	;# 
  5840     0990                     	;# 
  5841     0991                     	;# 
  5842     0992                     	;# 
  5843     0993                     	;# 
  5844     0994                     	;# 
  5845     0995                     	;# 
  5846     0996                     	;# 
  5847     0997                     	;# 
  5848     0A19                     	;# 
  5849     0A19                     	;# 
  5850     0A1A                     	;# 
  5851     0A1A                     	;# 
  5852     0A1B                     	;# 
  5853     0A1B                     	;# 
  5854     0A1B                     	;# 
  5855     0A1C                     	;# 
  5856     0A1C                     	;# 
  5857     0A1D                     	;# 
  5858     0A1D                     	;# 
  5859     0A1E                     	;# 
  5860     0A1E                     	;# 
  5861     0A1F                     	;# 
  5862     0A1F                     	;# 
  5863     0A1F                     	;# 
  5864     1E0F                     	;# 
  5865     1E10                     	;# 
  5866     1E11                     	;# 
  5867     1E12                     	;# 
  5868     1E13                     	;# 
  5869     1E14                     	;# 
  5870     1E15                     	;# 
  5871     1E16                     	;# 
  5872     1E17                     	;# 
  5873     1E18                     	;# 
  5874     1E19                     	;# 
  5875     1E1A                     	;# 
  5876     1E1B                     	;# 
  5877     1E1C                     	;# 
  5878     1E1D                     	;# 
  5879     1E1E                     	;# 
  5880     1E1F                     	;# 
  5881     1E20                     	;# 
  5882     1E21                     	;# 
  5883     1E22                     	;# 
  5884     1E23                     	;# 
  5885     1E24                     	;# 
  5886     1E25                     	;# 
  5887     1E26                     	;# 
  5888     1E27                     	;# 
  5889     1E28                     	;# 
  5890     1E29                     	;# 
  5891     1E2A                     	;# 
  5892     1E2B                     	;# 
  5893     1E2C                     	;# 
  5894     1E2D                     	;# 
  5895     1E2E                     	;# 
  5896     1E2F                     	;# 
  5897     1E30                     	;# 
  5898     1E31                     	;# 
  5899     1E32                     	;# 
  5900     1E33                     	;# 
  5901     1E34                     	;# 
  5902     1E35                     	;# 
  5903     1E36                     	;# 
  5904     1E37                     	;# 
  5905     1E8F                     	;# 
  5906     1E90                     	;# 
  5907     1E91                     	;# 
  5908     1E92                     	;# 
  5909     1E93                     	;# 
  5910     1E94                     	;# 
  5911     1E95                     	;# 
  5912     1E96                     	;# 
  5913     1E97                     	;# 
  5914     1E9C                     	;# 
  5915     1E9D                     	;# 
  5916     1E9E                     	;# 
  5917     1EA1                     	;# 
  5918     1EA2                     	;# 
  5919     1EA3                     	;# 
  5920     1EA4                     	;# 
  5921     1EA5                     	;# 
  5922     1EA9                     	;# 
  5923     1EAA                     	;# 
  5924     1EAB                     	;# 
  5925     1EAC                     	;# 
  5926     1EB1                     	;# 
  5927     1EB2                     	;# 
  5928     1EB3                     	;# 
  5929     1EB8                     	;# 
  5930     1EB9                     	;# 
  5931     1EBA                     	;# 
  5932     1EBB                     	;# 
  5933     1EBC                     	;# 
  5934     1EBD                     	;# 
  5935     1EBE                     	;# 
  5936     1EC3                     	;# 
  5937     1EC5                     	;# 
  5938     1EC6                     	;# 
  5939     1EC7                     	;# 
  5940     1EC8                     	;# 
  5941     1EC9                     	;# 
  5942     1ECA                     	;# 
  5943     1ECB                     	;# 
  5944     1ECC                     	;# 
  5945     1ECD                     	;# 
  5946     1ECE                     	;# 
  5947     1F10                     	;# 
  5948     1F11                     	;# 
  5949     1F12                     	;# 
  5950     1F13                     	;# 
  5951     1F14                     	;# 
  5952     1F15                     	;# 
  5953     1F16                     	;# 
  5954     1F17                     	;# 
  5955     1F18                     	;# 
  5956     1F19                     	;# 
  5957     1F1A                     	;# 
  5958     1F1B                     	;# 
  5959     1F1C                     	;# 
  5960     1F1D                     	;# 
  5961     1F1E                     	;# 
  5962     1F1F                     	;# 
  5963     1F20                     	;# 
  5964     1F21                     	;# 
  5965     1F22                     	;# 
  5966     1F23                     	;# 
  5967     1F24                     	;# 
  5968     1F25                     	;# 
  5969     1F26                     	;# 
  5970     1F27                     	;# 
  5971     1F38                     	;# 
  5972     1F39                     	;# 
  5973     1F3A                     	;# 
  5974     1F3B                     	;# 
  5975     1F3C                     	;# 
  5976     1F3D                     	;# 
  5977     1F3E                     	;# 
  5978     1F3F                     	;# 
  5979     1F43                     	;# 
  5980     1F44                     	;# 
  5981     1F45                     	;# 
  5982     1F46                     	;# 
  5983     1F47                     	;# 
  5984     1F48                     	;# 
  5985     1F49                     	;# 
  5986     1F4A                     	;# 
  5987     1F4E                     	;# 
  5988     1F4F                     	;# 
  5989     1F50                     	;# 
  5990     1F51                     	;# 
  5991     1F52                     	;# 
  5992     1F53                     	;# 
  5993     1F54                     	;# 
  5994     1F55                     	;# 
  5995     1F65                     	;# 
  5996     1F66                     	;# 
  5997     1F67                     	;# 
  5998     1F68                     	;# 
  5999     1F69                     	;# 
  6000     1F6A                     	;# 
  6001     1F6B                     	;# 
  6002     1FE4                     	;# 
  6003     1FE5                     	;# 
  6004     1FE6                     	;# 
  6005     1FE7                     	;# 
  6006     1FE8                     	;# 
  6007     1FE8                     	;# 
  6008     1FE9                     	;# 
  6009     1FEA                     	;# 
  6010     1FEB                     	;# 
  6011     1FED                     	;# 
  6012     1FEE                     	;# 
  6013     1FEF                     	;# 
  6014     0000                     	;# 
  6015     0001                     	;# 
  6016     0002                     	;# 
  6017     0003                     	;# 
  6018     0004                     	;# 
  6019     0005                     	;# 
  6020     0006                     	;# 
  6021     0007                     	;# 
  6022     0008                     	;# 
  6023     0009                     	;# 
  6024     000A                     	;# 
  6025     000B                     	;# 
  6026     000C                     	;# 
  6027     000D                     	;# 
  6028     000E                     	;# 
  6029     0010                     	;# 
  6030     0012                     	;# 
  6031     0013                     	;# 
  6032     0014                     	;# 
  6033     0016                     	;# 
  6034     0018                     	;# 
  6035     0019                     	;# 
  6036     001A                     	;# 
  6037     001C                     	;# 
  6038     008C                     	;# 
  6039     008C                     	;# 
  6040     008D                     	;# 
  6041     008E                     	;# 
  6042     008E                     	;# 
  6043     008F                     	;# 
  6044     0090                     	;# 
  6045     0090                     	;# 
  6046     0091                     	;# 
  6047     0092                     	;# 
  6048     0092                     	;# 
  6049     0093                     	;# 
  6050     0094                     	;# 
  6051     0094                     	;# 
  6052     0095                     	;# 
  6053     0096                     	;# 
  6054     0096                     	;# 
  6055     0097                     	;# 
  6056     0098                     	;# 
  6057     0099                     	;# 
  6058     009A                     	;# 
  6059     009B                     	;# 
  6060     009B                     	;# 
  6061     009C                     	;# 
  6062     009D                     	;# 
  6063     009D                     	;# 
  6064     009E                     	;# 
  6065     009F                     	;# 
  6066     010C                     	;# 
  6067     010C                     	;# 
  6068     010D                     	;# 
  6069     010E                     	;# 
  6070     010F                     	;# 
  6071     010F                     	;# 
  6072     0110                     	;# 
  6073     0111                     	;# 
  6074     0112                     	;# 
  6075     0113                     	;# 
  6076     0114                     	;# 
  6077     0115                     	;# 
  6078     0116                     	;# 
  6079     0117                     	;# 
  6080     0118                     	;# 
  6081     0119                     	;# 
  6082     0119                     	;# 
  6083     0119                     	;# 
  6084     011A                     	;# 
  6085     011A                     	;# 
  6086     011A                     	;# 
  6087     011B                     	;# 
  6088     011B                     	;# 
  6089     011B                     	;# 
  6090     011B                     	;# 
  6091     011B                     	;# 
  6092     011C                     	;# 
  6093     011C                     	;# 
  6094     011C                     	;# 
  6095     011D                     	;# 
  6096     011D                     	;# 
  6097     011D                     	;# 
  6098     011E                     	;# 
  6099     011E                     	;# 
  6100     011E                     	;# 
  6101     011F                     	;# 
  6102     011F                     	;# 
  6103     011F                     	;# 
  6104     011F                     	;# 
  6105     011F                     	;# 
  6106     018C                     	;# 
  6107     018D                     	;# 
  6108     018E                     	;# 
  6109     018F                     	;# 
  6110     0190                     	;# 
  6111     0191                     	;# 
  6112     0192                     	;# 
  6113     0196                     	;# 
  6114     0197                     	;# 
  6115     0198                     	;# 
  6116     0199                     	;# 
  6117     019A                     	;# 
  6118     019B                     	;# 
  6119     019C                     	;# 
  6120     020C                     	;# 
  6121     020D                     	;# 
  6122     020E                     	;# 
  6123     020E                     	;# 
  6124     020F                     	;# 
  6125     020F                     	;# 
  6126     0210                     	;# 
  6127     0210                     	;# 
  6128     0211                     	;# 
  6129     0211                     	;# 
  6130     0212                     	;# 
  6131     0213                     	;# 
  6132     0214                     	;# 
  6133     0214                     	;# 
  6134     0215                     	;# 
  6135     0215                     	;# 
  6136     0216                     	;# 
  6137     0216                     	;# 
  6138     0217                     	;# 
  6139     0217                     	;# 
  6140     0218                     	;# 
  6141     0219                     	;# 
  6142     021A                     	;# 
  6143     021A                     	;# 
  6144     021B                     	;# 
  6145     021B                     	;# 
  6146     021C                     	;# 
  6147     021C                     	;# 
  6148     021D                     	;# 
  6149     021D                     	;# 
  6150     021E                     	;# 
  6151     021F                     	;# 
  6152     028C                     	;# 
  6153     028C                     	;# 
  6154     028D                     	;# 
  6155     028D                     	;# 
  6156     028E                     	;# 
  6157     028F                     	;# 
  6158     0290                     	;# 
  6159     0291                     	;# 
  6160     0292                     	;# 
  6161     0292                     	;# 
  6162     0293                     	;# 
  6163     0293                     	;# 
  6164     0294                     	;# 
  6165     0295                     	;# 
  6166     0296                     	;# 
  6167     0297                     	;# 
  6168     0298                     	;# 
  6169     0298                     	;# 
  6170     0299                     	;# 
  6171     0299                     	;# 
  6172     029A                     	;# 
  6173     029B                     	;# 
  6174     029C                     	;# 
  6175     029D                     	;# 
  6176     029F                     	;# 
  6177     030C                     	;# 
  6178     030C                     	;# 
  6179     030D                     	;# 
  6180     030E                     	;# 
  6181     030F                     	;# 
  6182     0310                     	;# 
  6183     0310                     	;# 
  6184     0311                     	;# 
  6185     0312                     	;# 
  6186     0313                     	;# 
  6187     0314                     	;# 
  6188     0314                     	;# 
  6189     0315                     	;# 
  6190     0316                     	;# 
  6191     0317                     	;# 
  6192     0318                     	;# 
  6193     0318                     	;# 
  6194     0319                     	;# 
  6195     031A                     	;# 
  6196     031B                     	;# 
  6197     031C                     	;# 
  6198     031C                     	;# 
  6199     031D                     	;# 
  6200     031E                     	;# 
  6201     031F                     	;# 
  6202     038C                     	;# 
  6203     038C                     	;# 
  6204     038D                     	;# 
  6205     038E                     	;# 
  6206     0390                     	;# 
  6207     0390                     	;# 
  6208     0391                     	;# 
  6209     0392                     	;# 
  6210     048C                     	;# 
  6211     048C                     	;# 
  6212     048D                     	;# 
  6213     048E                     	;# 
  6214     048F                     	;# 
  6215     048F                     	;# 
  6216     0490                     	;# 
  6217     0491                     	;# 
  6218     0492                     	;# 
  6219     0492                     	;# 
  6220     0493                     	;# 
  6221     0494                     	;# 
  6222     0495                     	;# 
  6223     0495                     	;# 
  6224     0496                     	;# 
  6225     0497                     	;# 
  6226     0498                     	;# 
  6227     0499                     	;# 
  6228     049A                     	;# 
  6229     049B                     	;# 
  6230     049C                     	;# 
  6231     049D                     	;# 
  6232     050C                     	;# 
  6233     050C                     	;# 
  6234     050D                     	;# 
  6235     050E                     	;# 
  6236     050F                     	;# 
  6237     050F                     	;# 
  6238     0510                     	;# 
  6239     0511                     	;# 
  6240     0512                     	;# 
  6241     0512                     	;# 
  6242     0513                     	;# 
  6243     0514                     	;# 
  6244     0515                     	;# 
  6245     0515                     	;# 
  6246     0516                     	;# 
  6247     0517                     	;# 
  6248     0518                     	;# 
  6249     0519                     	;# 
  6250     051A                     	;# 
  6251     051B                     	;# 
  6252     051C                     	;# 
  6253     051D                     	;# 
  6254     058C                     	;# 
  6255     058C                     	;# 
  6256     058D                     	;# 
  6257     058E                     	;# 
  6258     058F                     	;# 
  6259     058F                     	;# 
  6260     0590                     	;# 
  6261     0591                     	;# 
  6262     0592                     	;# 
  6263     0593                     	;# 
  6264     059C                     	;# 
  6265     059C                     	;# 
  6266     059D                     	;# 
  6267     059D                     	;# 
  6268     059E                     	;# 
  6269     059F                     	;# 
  6270     060C                     	;# 
  6271     060C                     	;# 
  6272     060D                     	;# 
  6273     060D                     	;# 
  6274     060E                     	;# 
  6275     060F                     	;# 
  6276     0610                     	;# 
  6277     0611                     	;# 
  6278     0612                     	;# 
  6279     0613                     	;# 
  6280     0614                     	;# 
  6281     0616                     	;# 
  6282     0616                     	;# 
  6283     0617                     	;# 
  6284     0617                     	;# 
  6285     0618                     	;# 
  6286     0619                     	;# 
  6287     061A                     	;# 
  6288     061B                     	;# 
  6289     061C                     	;# 
  6290     061D                     	;# 
  6291     061E                     	;# 
  6292     068C                     	;# 
  6293     068D                     	;# 
  6294     068E                     	;# 
  6295     068F                     	;# 
  6296     0690                     	;# 
  6297     0691                     	;# 
  6298     0692                     	;# 
  6299     0693                     	;# 
  6300     0694                     	;# 
  6301     070C                     	;# 
  6302     070D                     	;# 
  6303     070E                     	;# 
  6304     070F                     	;# 
  6305     0710                     	;# 
  6306     0711                     	;# 
  6307     0712                     	;# 
  6308     0713                     	;# 
  6309     0714                     	;# 
  6310     0716                     	;# 
  6311     0717                     	;# 
  6312     0718                     	;# 
  6313     0719                     	;# 
  6314     071A                     	;# 
  6315     071B                     	;# 
  6316     071C                     	;# 
  6317     071D                     	;# 
  6318     071E                     	;# 
  6319     0796                     	;# 
  6320     0797                     	;# 
  6321     0798                     	;# 
  6322     0799                     	;# 
  6323     079A                     	;# 
  6324     079B                     	;# 
  6325     079C                     	;# 
  6326     079D                     	;# 
  6327     080C                     	;# 
  6328     080D                     	;# 
  6329     080E                     	;# 
  6330     080F                     	;# 
  6331     0810                     	;# 
  6332     0811                     	;# 
  6333     0813                     	;# 
  6334     0814                     	;# 
  6335     081A                     	;# 
  6336     081A                     	;# 
  6337     081B                     	;# 
  6338     081C                     	;# 
  6339     081C                     	;# 
  6340     081D                     	;# 
  6341     081E                     	;# 
  6342     081F                     	;# 
  6343     088C                     	;# 
  6344     088D                     	;# 
  6345     088E                     	;# 
  6346     088F                     	;# 
  6347     0890                     	;# 
  6348     0891                     	;# 
  6349     0892                     	;# 
  6350     0893                     	;# 
  6351     0895                     	;# 
  6352     0896                     	;# 
  6353     0897                     	;# 
  6354     0898                     	;# 
  6355     0899                     	;# 
  6356     089A                     	;# 
  6357     089B                     	;# 
  6358     090C                     	;# 
  6359     090E                     	;# 
  6360     090F                     	;# 
  6361     091F                     	;# 
  6362     098F                     	;# 
  6363     098F                     	;# 
  6364     0990                     	;# 
  6365     0991                     	;# 
  6366     0992                     	;# 
  6367     0993                     	;# 
  6368     0994                     	;# 
  6369     0995                     	;# 
  6370     0996                     	;# 
  6371     0997                     	;# 
  6372     0A19                     	;# 
  6373     0A19                     	;# 
  6374     0A1A                     	;# 
  6375     0A1A                     	;# 
  6376     0A1B                     	;# 
  6377     0A1B                     	;# 
  6378     0A1B                     	;# 
  6379     0A1C                     	;# 
  6380     0A1C                     	;# 
  6381     0A1D                     	;# 
  6382     0A1D                     	;# 
  6383     0A1E                     	;# 
  6384     0A1E                     	;# 
  6385     0A1F                     	;# 
  6386     0A1F                     	;# 
  6387     0A1F                     	;# 
  6388     1E0F                     	;# 
  6389     1E10                     	;# 
  6390     1E11                     	;# 
  6391     1E12                     	;# 
  6392     1E13                     	;# 
  6393     1E14                     	;# 
  6394     1E15                     	;# 
  6395     1E16                     	;# 
  6396     1E17                     	;# 
  6397     1E18                     	;# 
  6398     1E19                     	;# 
  6399     1E1A                     	;# 
  6400     1E1B                     	;# 
  6401     1E1C                     	;# 
  6402     1E1D                     	;# 
  6403     1E1E                     	;# 
  6404     1E1F                     	;# 
  6405     1E20                     	;# 
  6406     1E21                     	;# 
  6407     1E22                     	;# 
  6408     1E23                     	;# 
  6409     1E24                     	;# 
  6410     1E25                     	;# 
  6411     1E26                     	;# 
  6412     1E27                     	;# 
  6413     1E28                     	;# 
  6414     1E29                     	;# 
  6415     1E2A                     	;# 
  6416     1E2B                     	;# 
  6417     1E2C                     	;# 
  6418     1E2D                     	;# 
  6419     1E2E                     	;# 
  6420     1E2F                     	;# 
  6421     1E30                     	;# 
  6422     1E31                     	;# 
  6423     1E32                     	;# 
  6424     1E33                     	;# 
  6425     1E34                     	;# 
  6426     1E35                     	;# 
  6427     1E36                     	;# 
  6428     1E37                     	;# 
  6429     1E8F                     	;# 
  6430     1E90                     	;# 
  6431     1E91                     	;# 
  6432     1E92                     	;# 
  6433     1E93                     	;# 
  6434     1E94                     	;# 
  6435     1E95                     	;# 
  6436     1E96                     	;# 
  6437     1E97                     	;# 
  6438     1E9C                     	;# 
  6439     1E9D                     	;# 
  6440     1E9E                     	;# 
  6441     1EA1                     	;# 
  6442     1EA2                     	;# 
  6443     1EA3                     	;# 
  6444     1EA4                     	;# 
  6445     1EA5                     	;# 
  6446     1EA9                     	;# 
  6447     1EAA                     	;# 
  6448     1EAB                     	;# 
  6449     1EAC                     	;# 
  6450     1EB1                     	;# 
  6451     1EB2                     	;# 
  6452     1EB3                     	;# 
  6453     1EB8                     	;# 
  6454     1EB9                     	;# 
  6455     1EBA                     	;# 
  6456     1EBB                     	;# 
  6457     1EBC                     	;# 
  6458     1EBD                     	;# 
  6459     1EBE                     	;# 
  6460     1EC3                     	;# 
  6461     1EC5                     	;# 
  6462     1EC6                     	;# 
  6463     1EC7                     	;# 
  6464     1EC8                     	;# 
  6465     1EC9                     	;# 
  6466     1ECA                     	;# 
  6467     1ECB                     	;# 
  6468     1ECC                     	;# 
  6469     1ECD                     	;# 
  6470     1ECE                     	;# 
  6471     1F10                     	;# 
  6472     1F11                     	;# 
  6473     1F12                     	;# 
  6474     1F13                     	;# 
  6475     1F14                     	;# 
  6476     1F15                     	;# 
  6477     1F16                     	;# 
  6478     1F17                     	;# 
  6479     1F18                     	;# 
  6480     1F19                     	;# 
  6481     1F1A                     	;# 
  6482     1F1B                     	;# 
  6483     1F1C                     	;# 
  6484     1F1D                     	;# 
  6485     1F1E                     	;# 
  6486     1F1F                     	;# 
  6487     1F20                     	;# 
  6488     1F21                     	;# 
  6489     1F22                     	;# 
  6490     1F23                     	;# 
  6491     1F24                     	;# 
  6492     1F25                     	;# 
  6493     1F26                     	;# 
  6494     1F27                     	;# 
  6495     1F38                     	;# 
  6496     1F39                     	;# 
  6497     1F3A                     	;# 
  6498     1F3B                     	;# 
  6499     1F3C                     	;# 
  6500     1F3D                     	;# 
  6501     1F3E                     	;# 
  6502     1F3F                     	;# 
  6503     1F43                     	;# 
  6504     1F44                     	;# 
  6505     1F45                     	;# 
  6506     1F46                     	;# 
  6507     1F47                     	;# 
  6508     1F48                     	;# 
  6509     1F49                     	;# 
  6510     1F4A                     	;# 
  6511     1F4E                     	;# 
  6512     1F4F                     	;# 
  6513     1F50                     	;# 
  6514     1F51                     	;# 
  6515     1F52                     	;# 
  6516     1F53                     	;# 
  6517     1F54                     	;# 
  6518     1F55                     	;# 
  6519     1F65                     	;# 
  6520     1F66                     	;# 
  6521     1F67                     	;# 
  6522     1F68                     	;# 
  6523     1F69                     	;# 
  6524     1F6A                     	;# 
  6525     1F6B                     	;# 
  6526     1FE4                     	;# 
  6527     1FE5                     	;# 
  6528     1FE6                     	;# 
  6529     1FE7                     	;# 
  6530     1FE8                     	;# 
  6531     1FE8                     	;# 
  6532     1FE9                     	;# 
  6533     1FEA                     	;# 
  6534     1FEB                     	;# 
  6535     1FED                     	;# 
  6536     1FEE                     	;# 
  6537     1FEF                     	;# 
  6538     0000                     	;# 
  6539     0001                     	;# 
  6540     0002                     	;# 
  6541     0003                     	;# 
  6542     0004                     	;# 
  6543     0005                     	;# 
  6544     0006                     	;# 
  6545     0007                     	;# 
  6546     0008                     	;# 
  6547     0009                     	;# 
  6548     000A                     	;# 
  6549     000B                     	;# 
  6550     000C                     	;# 
  6551     000D                     	;# 
  6552     000E                     	;# 
  6553     0010                     	;# 
  6554     0012                     	;# 
  6555     0013                     	;# 
  6556     0014                     	;# 
  6557     0016                     	;# 
  6558     0018                     	;# 
  6559     0019                     	;# 
  6560     001A                     	;# 
  6561     001C                     	;# 
  6562     008C                     	;# 
  6563     008C                     	;# 
  6564     008D                     	;# 
  6565     008E                     	;# 
  6566     008E                     	;# 
  6567     008F                     	;# 
  6568     0090                     	;# 
  6569     0090                     	;# 
  6570     0091                     	;# 
  6571     0092                     	;# 
  6572     0092                     	;# 
  6573     0093                     	;# 
  6574     0094                     	;# 
  6575     0094                     	;# 
  6576     0095                     	;# 
  6577     0096                     	;# 
  6578     0096                     	;# 
  6579     0097                     	;# 
  6580     0098                     	;# 
  6581     0099                     	;# 
  6582     009A                     	;# 
  6583     009B                     	;# 
  6584     009B                     	;# 
  6585     009C                     	;# 
  6586     009D                     	;# 
  6587     009D                     	;# 
  6588     009E                     	;# 
  6589     009F                     	;# 
  6590     010C                     	;# 
  6591     010C                     	;# 
  6592     010D                     	;# 
  6593     010E                     	;# 
  6594     010F                     	;# 
  6595     010F                     	;# 
  6596     0110                     	;# 
  6597     0111                     	;# 
  6598     0112                     	;# 
  6599     0113                     	;# 
  6600     0114                     	;# 
  6601     0115                     	;# 
  6602     0116                     	;# 
  6603     0117                     	;# 
  6604     0118                     	;# 
  6605     0119                     	;# 
  6606     0119                     	;# 
  6607     0119                     	;# 
  6608     011A                     	;# 
  6609     011A                     	;# 
  6610     011A                     	;# 
  6611     011B                     	;# 
  6612     011B                     	;# 
  6613     011B                     	;# 
  6614     011B                     	;# 
  6615     011B                     	;# 
  6616     011C                     	;# 
  6617     011C                     	;# 
  6618     011C                     	;# 
  6619     011D                     	;# 
  6620     011D                     	;# 
  6621     011D                     	;# 
  6622     011E                     	;# 
  6623     011E                     	;# 
  6624     011E                     	;# 
  6625     011F                     	;# 
  6626     011F                     	;# 
  6627     011F                     	;# 
  6628     011F                     	;# 
  6629     011F                     	;# 
  6630     018C                     	;# 
  6631     018D                     	;# 
  6632     018E                     	;# 
  6633     018F                     	;# 
  6634     0190                     	;# 
  6635     0191                     	;# 
  6636     0192                     	;# 
  6637     0196                     	;# 
  6638     0197                     	;# 
  6639     0198                     	;# 
  6640     0199                     	;# 
  6641     019A                     	;# 
  6642     019B                     	;# 
  6643     019C                     	;# 
  6644     020C                     	;# 
  6645     020D                     	;# 
  6646     020E                     	;# 
  6647     020E                     	;# 
  6648     020F                     	;# 
  6649     020F                     	;# 
  6650     0210                     	;# 
  6651     0210                     	;# 
  6652     0211                     	;# 
  6653     0211                     	;# 
  6654     0212                     	;# 
  6655     0213                     	;# 
  6656     0214                     	;# 
  6657     0214                     	;# 
  6658     0215                     	;# 
  6659     0215                     	;# 
  6660     0216                     	;# 
  6661     0216                     	;# 
  6662     0217                     	;# 
  6663     0217                     	;# 
  6664     0218                     	;# 
  6665     0219                     	;# 
  6666     021A                     	;# 
  6667     021A                     	;# 
  6668     021B                     	;# 
  6669     021B                     	;# 
  6670     021C                     	;# 
  6671     021C                     	;# 
  6672     021D                     	;# 
  6673     021D                     	;# 
  6674     021E                     	;# 
  6675     021F                     	;# 
  6676     028C                     	;# 
  6677     028C                     	;# 
  6678     028D                     	;# 
  6679     028D                     	;# 
  6680     028E                     	;# 
  6681     028F                     	;# 
  6682     0290                     	;# 
  6683     0291                     	;# 
  6684     0292                     	;# 
  6685     0292                     	;# 
  6686     0293                     	;# 
  6687     0293                     	;# 
  6688     0294                     	;# 
  6689     0295                     	;# 
  6690     0296                     	;# 
  6691     0297                     	;# 
  6692     0298                     	;# 
  6693     0298                     	;# 
  6694     0299                     	;# 
  6695     0299                     	;# 
  6696     029A                     	;# 
  6697     029B                     	;# 
  6698     029C                     	;# 
  6699     029D                     	;# 
  6700     029F                     	;# 
  6701     030C                     	;# 
  6702     030C                     	;# 
  6703     030D                     	;# 
  6704     030E                     	;# 
  6705     030F                     	;# 
  6706     0310                     	;# 
  6707     0310                     	;# 
  6708     0311                     	;# 
  6709     0312                     	;# 
  6710     0313                     	;# 
  6711     0314                     	;# 
  6712     0314                     	;# 
  6713     0315                     	;# 
  6714     0316                     	;# 
  6715     0317                     	;# 
  6716     0318                     	;# 
  6717     0318                     	;# 
  6718     0319                     	;# 
  6719     031A                     	;# 
  6720     031B                     	;# 
  6721     031C                     	;# 
  6722     031C                     	;# 
  6723     031D                     	;# 
  6724     031E                     	;# 
  6725     031F                     	;# 
  6726     038C                     	;# 
  6727     038C                     	;# 
  6728     038D                     	;# 
  6729     038E                     	;# 
  6730     0390                     	;# 
  6731     0390                     	;# 
  6732     0391                     	;# 
  6733     0392                     	;# 
  6734     048C                     	;# 
  6735     048C                     	;# 
  6736     048D                     	;# 
  6737     048E                     	;# 
  6738     048F                     	;# 
  6739     048F                     	;# 
  6740     0490                     	;# 
  6741     0491                     	;# 
  6742     0492                     	;# 
  6743     0492                     	;# 
  6744     0493                     	;# 
  6745     0494                     	;# 
  6746     0495                     	;# 
  6747     0495                     	;# 
  6748     0496                     	;# 
  6749     0497                     	;# 
  6750     0498                     	;# 
  6751     0499                     	;# 
  6752     049A                     	;# 
  6753     049B                     	;# 
  6754     049C                     	;# 
  6755     049D                     	;# 
  6756     050C                     	;# 
  6757     050C                     	;# 
  6758     050D                     	;# 
  6759     050E                     	;# 
  6760     050F                     	;# 
  6761     050F                     	;# 
  6762     0510                     	;# 
  6763     0511                     	;# 
  6764     0512                     	;# 
  6765     0512                     	;# 
  6766     0513                     	;# 
  6767     0514                     	;# 
  6768     0515                     	;# 
  6769     0515                     	;# 
  6770     0516                     	;# 
  6771     0517                     	;# 
  6772     0518                     	;# 
  6773     0519                     	;# 
  6774     051A                     	;# 
  6775     051B                     	;# 
  6776     051C                     	;# 
  6777     051D                     	;# 
  6778     058C                     	;# 
  6779     058C                     	;# 
  6780     058D                     	;# 
  6781     058E                     	;# 
  6782     058F                     	;# 
  6783     058F                     	;# 
  6784     0590                     	;# 
  6785     0591                     	;# 
  6786     0592                     	;# 
  6787     0593                     	;# 
  6788     059C                     	;# 
  6789     059C                     	;# 
  6790     059D                     	;# 
  6791     059D                     	;# 
  6792     059E                     	;# 
  6793     059F                     	;# 
  6794     060C                     	;# 
  6795     060C                     	;# 
  6796     060D                     	;# 
  6797     060D                     	;# 
  6798     060E                     	;# 
  6799     060F                     	;# 
  6800     0610                     	;# 
  6801     0611                     	;# 
  6802     0612                     	;# 
  6803     0613                     	;# 
  6804     0614                     	;# 
  6805     0616                     	;# 
  6806     0616                     	;# 
  6807     0617                     	;# 
  6808     0617                     	;# 
  6809     0618                     	;# 
  6810     0619                     	;# 
  6811     061A                     	;# 
  6812     061B                     	;# 
  6813     061C                     	;# 
  6814     061D                     	;# 
  6815     061E                     	;# 
  6816     068C                     	;# 
  6817     068D                     	;# 
  6818     068E                     	;# 
  6819     068F                     	;# 
  6820     0690                     	;# 
  6821     0691                     	;# 
  6822     0692                     	;# 
  6823     0693                     	;# 
  6824     0694                     	;# 
  6825     070C                     	;# 
  6826     070D                     	;# 
  6827     070E                     	;# 
  6828     070F                     	;# 
  6829     0710                     	;# 
  6830     0711                     	;# 
  6831     0712                     	;# 
  6832     0713                     	;# 
  6833     0714                     	;# 
  6834     0716                     	;# 
  6835     0717                     	;# 
  6836     0718                     	;# 
  6837     0719                     	;# 
  6838     071A                     	;# 
  6839     071B                     	;# 
  6840     071C                     	;# 
  6841     071D                     	;# 
  6842     071E                     	;# 
  6843     0796                     	;# 
  6844     0797                     	;# 
  6845     0798                     	;# 
  6846     0799                     	;# 
  6847     079A                     	;# 
  6848     079B                     	;# 
  6849     079C                     	;# 
  6850     079D                     	;# 
  6851     080C                     	;# 
  6852     080D                     	;# 
  6853     080E                     	;# 
  6854     080F                     	;# 
  6855     0810                     	;# 
  6856     0811                     	;# 
  6857     0813                     	;# 
  6858     0814                     	;# 
  6859     081A                     	;# 
  6860     081A                     	;# 
  6861     081B                     	;# 
  6862     081C                     	;# 
  6863     081C                     	;# 
  6864     081D                     	;# 
  6865     081E                     	;# 
  6866     081F                     	;# 
  6867     088C                     	;# 
  6868     088D                     	;# 
  6869     088E                     	;# 
  6870     088F                     	;# 
  6871     0890                     	;# 
  6872     0891                     	;# 
  6873     0892                     	;# 
  6874     0893                     	;# 
  6875     0895                     	;# 
  6876     0896                     	;# 
  6877     0897                     	;# 
  6878     0898                     	;# 
  6879     0899                     	;# 
  6880     089A                     	;# 
  6881     089B                     	;# 
  6882     090C                     	;# 
  6883     090E                     	;# 
  6884     090F                     	;# 
  6885     091F                     	;# 
  6886     098F                     	;# 
  6887     098F                     	;# 
  6888     0990                     	;# 
  6889     0991                     	;# 
  6890     0992                     	;# 
  6891     0993                     	;# 
  6892     0994                     	;# 
  6893     0995                     	;# 
  6894     0996                     	;# 
  6895     0997                     	;# 
  6896     0A19                     	;# 
  6897     0A19                     	;# 
  6898     0A1A                     	;# 
  6899     0A1A                     	;# 
  6900     0A1B                     	;# 
  6901     0A1B                     	;# 
  6902     0A1B                     	;# 
  6903     0A1C                     	;# 
  6904     0A1C                     	;# 
  6905     0A1D                     	;# 
  6906     0A1D                     	;# 
  6907     0A1E                     	;# 
  6908     0A1E                     	;# 
  6909     0A1F                     	;# 
  6910     0A1F                     	;# 
  6911     0A1F                     	;# 
  6912     1E0F                     	;# 
  6913     1E10                     	;# 
  6914     1E11                     	;# 
  6915     1E12                     	;# 
  6916     1E13                     	;# 
  6917     1E14                     	;# 
  6918     1E15                     	;# 
  6919     1E16                     	;# 
  6920     1E17                     	;# 
  6921     1E18                     	;# 
  6922     1E19                     	;# 
  6923     1E1A                     	;# 
  6924     1E1B                     	;# 
  6925     1E1C                     	;# 
  6926     1E1D                     	;# 
  6927     1E1E                     	;# 
  6928     1E1F                     	;# 
  6929     1E20                     	;# 
  6930     1E21                     	;# 
  6931     1E22                     	;# 
  6932     1E23                     	;# 
  6933     1E24                     	;# 
  6934     1E25                     	;# 
  6935     1E26                     	;# 
  6936     1E27                     	;# 
  6937     1E28                     	;# 
  6938     1E29                     	;# 
  6939     1E2A                     	;# 
  6940     1E2B                     	;# 
  6941     1E2C                     	;# 
  6942     1E2D                     	;# 
  6943     1E2E                     	;# 
  6944     1E2F                     	;# 
  6945     1E30                     	;# 
  6946     1E31                     	;# 
  6947     1E32                     	;# 
  6948     1E33                     	;# 
  6949     1E34                     	;# 
  6950     1E35                     	;# 
  6951     1E36                     	;# 
  6952     1E37                     	;# 
  6953     1E8F                     	;# 
  6954     1E90                     	;# 
  6955     1E91                     	;# 
  6956     1E92                     	;# 
  6957     1E93                     	;# 
  6958     1E94                     	;# 
  6959     1E95                     	;# 
  6960     1E96                     	;# 
  6961     1E97                     	;# 
  6962     1E9C                     	;# 
  6963     1E9D                     	;# 
  6964     1E9E                     	;# 
  6965     1EA1                     	;# 
  6966     1EA2                     	;# 
  6967     1EA3                     	;# 
  6968     1EA4                     	;# 
  6969     1EA5                     	;# 
  6970     1EA9                     	;# 
  6971     1EAA                     	;# 
  6972     1EAB                     	;# 
  6973     1EAC                     	;# 
  6974     1EB1                     	;# 
  6975     1EB2                     	;# 
  6976     1EB3                     	;# 
  6977     1EB8                     	;# 
  6978     1EB9                     	;# 
  6979     1EBA                     	;# 
  6980     1EBB                     	;# 
  6981     1EBC                     	;# 
  6982     1EBD                     	;# 
  6983     1EBE                     	;# 
  6984     1EC3                     	;# 
  6985     1EC5                     	;# 
  6986     1EC6                     	;# 
  6987     1EC7                     	;# 
  6988     1EC8                     	;# 
  6989     1EC9                     	;# 
  6990     1ECA                     	;# 
  6991     1ECB                     	;# 
  6992     1ECC                     	;# 
  6993     1ECD                     	;# 
  6994     1ECE                     	;# 
  6995     1F10                     	;# 
  6996     1F11                     	;# 
  6997     1F12                     	;# 
  6998     1F13                     	;# 
  6999     1F14                     	;# 
  7000     1F15                     	;# 
  7001     1F16                     	;# 
  7002     1F17                     	;# 
  7003     1F18                     	;# 
  7004     1F19                     	;# 
  7005     1F1A                     	;# 
  7006     1F1B                     	;# 
  7007     1F1C                     	;# 
  7008     1F1D                     	;# 
  7009     1F1E                     	;# 
  7010     1F1F                     	;# 
  7011     1F20                     	;# 
  7012     1F21                     	;# 
  7013     1F22                     	;# 
  7014     1F23                     	;# 
  7015     1F24                     	;# 
  7016     1F25                     	;# 
  7017     1F26                     	;# 
  7018     1F27                     	;# 
  7019     1F38                     	;# 
  7020     1F39                     	;# 
  7021     1F3A                     	;# 
  7022     1F3B                     	;# 
  7023     1F3C                     	;# 
  7024     1F3D                     	;# 
  7025     1F3E                     	;# 
  7026     1F3F                     	;# 
  7027     1F43                     	;# 
  7028     1F44                     	;# 
  7029     1F45                     	;# 
  7030     1F46                     	;# 
  7031     1F47                     	;# 
  7032     1F48                     	;# 
  7033     1F49                     	;# 
  7034     1F4A                     	;# 
  7035     1F4E                     	;# 
  7036     1F4F                     	;# 
  7037     1F50                     	;# 
  7038     1F51                     	;# 
  7039     1F52                     	;# 
  7040     1F53                     	;# 
  7041     1F54                     	;# 
  7042     1F55                     	;# 
  7043     1F65                     	;# 
  7044     1F66                     	;# 
  7045     1F67                     	;# 
  7046     1F68                     	;# 
  7047     1F69                     	;# 
  7048     1F6A                     	;# 
  7049     1F6B                     	;# 
  7050     1FE4                     	;# 
  7051     1FE5                     	;# 
  7052     1FE6                     	;# 
  7053     1FE7                     	;# 
  7054     1FE8                     	;# 
  7055     1FE8                     	;# 
  7056     1FE9                     	;# 
  7057     1FEA                     	;# 
  7058     1FEB                     	;# 
  7059     1FED                     	;# 
  7060     1FEE                     	;# 
  7061     1FEF                     	;# 
  7062     0000                     	;# 
  7063     0001                     	;# 
  7064     0002                     	;# 
  7065     0003                     	;# 
  7066     0004                     	;# 
  7067     0005                     	;# 
  7068     0006                     	;# 
  7069     0007                     	;# 
  7070     0008                     	;# 
  7071     0009                     	;# 
  7072     000A                     	;# 
  7073     000B                     	;# 
  7074     000C                     	;# 
  7075     000D                     	;# 
  7076     000E                     	;# 
  7077     0010                     	;# 
  7078     0012                     	;# 
  7079     0013                     	;# 
  7080     0014                     	;# 
  7081     0016                     	;# 
  7082     0018                     	;# 
  7083     0019                     	;# 
  7084     001A                     	;# 
  7085     001C                     	;# 
  7086     008C                     	;# 
  7087     008C                     	;# 
  7088     008D                     	;# 
  7089     008E                     	;# 
  7090     008E                     	;# 
  7091     008F                     	;# 
  7092     0090                     	;# 
  7093     0090                     	;# 
  7094     0091                     	;# 
  7095     0092                     	;# 
  7096     0092                     	;# 
  7097     0093                     	;# 
  7098     0094                     	;# 
  7099     0094                     	;# 
  7100     0095                     	;# 
  7101     0096                     	;# 
  7102     0096                     	;# 
  7103     0097                     	;# 
  7104     0098                     	;# 
  7105     0099                     	;# 
  7106     009A                     	;# 
  7107     009B                     	;# 
  7108     009B                     	;# 
  7109     009C                     	;# 
  7110     009D                     	;# 
  7111     009D                     	;# 
  7112     009E                     	;# 
  7113     009F                     	;# 
  7114     010C                     	;# 
  7115     010C                     	;# 
  7116     010D                     	;# 
  7117     010E                     	;# 
  7118     010F                     	;# 
  7119     010F                     	;# 
  7120     0110                     	;# 
  7121     0111                     	;# 
  7122     0112                     	;# 
  7123     0113                     	;# 
  7124     0114                     	;# 
  7125     0115                     	;# 
  7126     0116                     	;# 
  7127     0117                     	;# 
  7128     0118                     	;# 
  7129     0119                     	;# 
  7130     0119                     	;# 
  7131     0119                     	;# 
  7132     011A                     	;# 
  7133     011A                     	;# 
  7134     011A                     	;# 
  7135     011B                     	;# 
  7136     011B                     	;# 
  7137     011B                     	;# 
  7138     011B                     	;# 
  7139     011B                     	;# 
  7140     011C                     	;# 
  7141     011C                     	;# 
  7142     011C                     	;# 
  7143     011D                     	;# 
  7144     011D                     	;# 
  7145     011D                     	;# 
  7146     011E                     	;# 
  7147     011E                     	;# 
  7148     011E                     	;# 
  7149     011F                     	;# 
  7150     011F                     	;# 
  7151     011F                     	;# 
  7152     011F                     	;# 
  7153     011F                     	;# 
  7154     018C                     	;# 
  7155     018D                     	;# 
  7156     018E                     	;# 
  7157     018F                     	;# 
  7158     0190                     	;# 
  7159     0191                     	;# 
  7160     0192                     	;# 
  7161     0196                     	;# 
  7162     0197                     	;# 
  7163     0198                     	;# 
  7164     0199                     	;# 
  7165     019A                     	;# 
  7166     019B                     	;# 
  7167     019C                     	;# 
  7168     020C                     	;# 
  7169     020D                     	;# 
  7170     020E                     	;# 
  7171     020E                     	;# 
  7172     020F                     	;# 
  7173     020F                     	;# 
  7174     0210                     	;# 
  7175     0210                     	;# 
  7176     0211                     	;# 
  7177     0211                     	;# 
  7178     0212                     	;# 
  7179     0213                     	;# 
  7180     0214                     	;# 
  7181     0214                     	;# 
  7182     0215                     	;# 
  7183     0215                     	;# 
  7184     0216                     	;# 
  7185     0216                     	;# 
  7186     0217                     	;# 
  7187     0217                     	;# 
  7188     0218                     	;# 
  7189     0219                     	;# 
  7190     021A                     	;# 
  7191     021A                     	;# 
  7192     021B                     	;# 
  7193     021B                     	;# 
  7194     021C                     	;# 
  7195     021C                     	;# 
  7196     021D                     	;# 
  7197     021D                     	;# 
  7198     021E                     	;# 
  7199     021F                     	;# 
  7200     028C                     	;# 
  7201     028C                     	;# 
  7202     028D                     	;# 
  7203     028D                     	;# 
  7204     028E                     	;# 
  7205     028F                     	;# 
  7206     0290                     	;# 
  7207     0291                     	;# 
  7208     0292                     	;# 
  7209     0292                     	;# 
  7210     0293                     	;# 
  7211     0293                     	;# 
  7212     0294                     	;# 
  7213     0295                     	;# 
  7214     0296                     	;# 
  7215     0297                     	;# 
  7216     0298                     	;# 
  7217     0298                     	;# 
  7218     0299                     	;# 
  7219     0299                     	;# 
  7220     029A                     	;# 
  7221     029B                     	;# 
  7222     029C                     	;# 
  7223     029D                     	;# 
  7224     029F                     	;# 
  7225     030C                     	;# 
  7226     030C                     	;# 
  7227     030D                     	;# 
  7228     030E                     	;# 
  7229     030F                     	;# 
  7230     0310                     	;# 
  7231     0310                     	;# 
  7232     0311                     	;# 
  7233     0312                     	;# 
  7234     0313                     	;# 
  7235     0314                     	;# 
  7236     0314                     	;# 
  7237     0315                     	;# 
  7238     0316                     	;# 
  7239     0317                     	;# 
  7240     0318                     	;# 
  7241     0318                     	;# 
  7242     0319                     	;# 
  7243     031A                     	;# 
  7244     031B                     	;# 
  7245     031C                     	;# 
  7246     031C                     	;# 
  7247     031D                     	;# 
  7248     031E                     	;# 
  7249     031F                     	;# 
  7250     038C                     	;# 
  7251     038C                     	;# 
  7252     038D                     	;# 
  7253     038E                     	;# 
  7254     0390                     	;# 
  7255     0390                     	;# 
  7256     0391                     	;# 
  7257     0392                     	;# 
  7258     048C                     	;# 
  7259     048C                     	;# 
  7260     048D                     	;# 
  7261     048E                     	;# 
  7262     048F                     	;# 
  7263     048F                     	;# 
  7264     0490                     	;# 
  7265     0491                     	;# 
  7266     0492                     	;# 
  7267     0492                     	;# 
  7268     0493                     	;# 
  7269     0494                     	;# 
  7270     0495                     	;# 
  7271     0495                     	;# 
  7272     0496                     	;# 
  7273     0497                     	;# 
  7274     0498                     	;# 
  7275     0499                     	;# 
  7276     049A                     	;# 
  7277     049B                     	;# 
  7278     049C                     	;# 
  7279     049D                     	;# 
  7280     050C                     	;# 
  7281     050C                     	;# 
  7282     050D                     	;# 
  7283     050E                     	;# 
  7284     050F                     	;# 
  7285     050F                     	;# 
  7286     0510                     	;# 
  7287     0511                     	;# 
  7288     0512                     	;# 
  7289     0512                     	;# 
  7290     0513                     	;# 
  7291     0514                     	;# 
  7292     0515                     	;# 
  7293     0515                     	;# 
  7294     0516                     	;# 
  7295     0517                     	;# 
  7296     0518                     	;# 
  7297     0519                     	;# 
  7298     051A                     	;# 
  7299     051B                     	;# 
  7300     051C                     	;# 
  7301     051D                     	;# 
  7302     058C                     	;# 
  7303     058C                     	;# 
  7304     058D                     	;# 
  7305     058E                     	;# 
  7306     058F                     	;# 
  7307     058F                     	;# 
  7308     0590                     	;# 
  7309     0591                     	;# 
  7310     0592                     	;# 
  7311     0593                     	;# 
  7312     059C                     	;# 
  7313     059C                     	;# 
  7314     059D                     	;# 
  7315     059D                     	;# 
  7316     059E                     	;# 
  7317     059F                     	;# 
  7318     060C                     	;# 
  7319     060C                     	;# 
  7320     060D                     	;# 
  7321     060D                     	;# 
  7322     060E                     	;# 
  7323     060F                     	;# 
  7324     0610                     	;# 
  7325     0611                     	;# 
  7326     0612                     	;# 
  7327     0613                     	;# 
  7328     0614                     	;# 
  7329     0616                     	;# 
  7330     0616                     	;# 
  7331     0617                     	;# 
  7332     0617                     	;# 
  7333     0618                     	;# 
  7334     0619                     	;# 
  7335     061A                     	;# 
  7336     061B                     	;# 
  7337     061C                     	;# 
  7338     061D                     	;# 
  7339     061E                     	;# 
  7340     068C                     	;# 
  7341     068D                     	;# 
  7342     068E                     	;# 
  7343     068F                     	;# 
  7344     0690                     	;# 
  7345     0691                     	;# 
  7346     0692                     	;# 
  7347     0693                     	;# 
  7348     0694                     	;# 
  7349     070C                     	;# 
  7350     070D                     	;# 
  7351     070E                     	;# 
  7352     070F                     	;# 
  7353     0710                     	;# 
  7354     0711                     	;# 
  7355     0712                     	;# 
  7356     0713                     	;# 
  7357     0714                     	;# 
  7358     0716                     	;# 
  7359     0717                     	;# 
  7360     0718                     	;# 
  7361     0719                     	;# 
  7362     071A                     	;# 
  7363     071B                     	;# 
  7364     071C                     	;# 
  7365     071D                     	;# 
  7366     071E                     	;# 
  7367     0796                     	;# 
  7368     0797                     	;# 
  7369     0798                     	;# 
  7370     0799                     	;# 
  7371     079A                     	;# 
  7372     079B                     	;# 
  7373     079C                     	;# 
  7374     079D                     	;# 
  7375     080C                     	;# 
  7376     080D                     	;# 
  7377     080E                     	;# 
  7378     080F                     	;# 
  7379     0810                     	;# 
  7380     0811                     	;# 
  7381     0813                     	;# 
  7382     0814                     	;# 
  7383     081A                     	;# 
  7384     081A                     	;# 
  7385     081B                     	;# 
  7386     081C                     	;# 
  7387     081C                     	;# 
  7388     081D                     	;# 
  7389     081E                     	;# 
  7390     081F                     	;# 
  7391     088C                     	;# 
  7392     088D                     	;# 
  7393     088E                     	;# 
  7394     088F                     	;# 
  7395     0890                     	;# 
  7396     0891                     	;# 
  7397     0892                     	;# 
  7398     0893                     	;# 
  7399     0895                     	;# 
  7400     0896                     	;# 
  7401     0897                     	;# 
  7402     0898                     	;# 
  7403     0899                     	;# 
  7404     089A                     	;# 
  7405     089B                     	;# 
  7406     090C                     	;# 
  7407     090E                     	;# 
  7408     090F                     	;# 
  7409     091F                     	;# 
  7410     098F                     	;# 
  7411     098F                     	;# 
  7412     0990                     	;# 
  7413     0991                     	;# 
  7414     0992                     	;# 
  7415     0993                     	;# 
  7416     0994                     	;# 
  7417     0995                     	;# 
  7418     0996                     	;# 
  7419     0997                     	;# 
  7420     0A19                     	;# 
  7421     0A19                     	;# 
  7422     0A1A                     	;# 
  7423     0A1A                     	;# 
  7424     0A1B                     	;# 
  7425     0A1B                     	;# 
  7426     0A1B                     	;# 
  7427     0A1C                     	;# 
  7428     0A1C                     	;# 
  7429     0A1D                     	;# 
  7430     0A1D                     	;# 
  7431     0A1E                     	;# 
  7432     0A1E                     	;# 
  7433     0A1F                     	;# 
  7434     0A1F                     	;# 
  7435     0A1F                     	;# 
  7436     1E0F                     	;# 
  7437     1E10                     	;# 
  7438     1E11                     	;# 
  7439     1E12                     	;# 
  7440     1E13                     	;# 
  7441     1E14                     	;# 
  7442     1E15                     	;# 
  7443     1E16                     	;# 
  7444     1E17                     	;# 
  7445     1E18                     	;# 
  7446     1E19                     	;# 
  7447     1E1A                     	;# 
  7448     1E1B                     	;# 
  7449     1E1C                     	;# 
  7450     1E1D                     	;# 
  7451     1E1E                     	;# 
  7452     1E1F                     	;# 
  7453     1E20                     	;# 
  7454     1E21                     	;# 
  7455     1E22                     	;# 
  7456     1E23                     	;# 
  7457     1E24                     	;# 
  7458     1E25                     	;# 
  7459     1E26                     	;# 
  7460     1E27                     	;# 
  7461     1E28                     	;# 
  7462     1E29                     	;# 
  7463     1E2A                     	;# 
  7464     1E2B                     	;# 
  7465     1E2C                     	;# 
  7466     1E2D                     	;# 
  7467     1E2E                     	;# 
  7468     1E2F                     	;# 
  7469     1E30                     	;# 
  7470     1E31                     	;# 
  7471     1E32                     	;# 
  7472     1E33                     	;# 
  7473     1E34                     	;# 
  7474     1E35                     	;# 
  7475     1E36                     	;# 
  7476     1E37                     	;# 
  7477     1E8F                     	;# 
  7478     1E90                     	;# 
  7479     1E91                     	;# 
  7480     1E92                     	;# 
  7481     1E93                     	;# 
  7482     1E94                     	;# 
  7483     1E95                     	;# 
  7484     1E96                     	;# 
  7485     1E97                     	;# 
  7486     1E9C                     	;# 
  7487     1E9D                     	;# 
  7488     1E9E                     	;# 
  7489     1EA1                     	;# 
  7490     1EA2                     	;# 
  7491     1EA3                     	;# 
  7492     1EA4                     	;# 
  7493     1EA5                     	;# 
  7494     1EA9                     	;# 
  7495     1EAA                     	;# 
  7496     1EAB                     	;# 
  7497     1EAC                     	;# 
  7498     1EB1                     	;# 
  7499     1EB2                     	;# 
  7500     1EB3                     	;# 
  7501     1EB8                     	;# 
  7502     1EB9                     	;# 
  7503     1EBA                     	;# 
  7504     1EBB                     	;# 
  7505     1EBC                     	;# 
  7506     1EBD                     	;# 
  7507     1EBE                     	;# 
  7508     1EC3                     	;# 
  7509     1EC5                     	;# 
  7510     1EC6                     	;# 
  7511     1EC7                     	;# 
  7512     1EC8                     	;# 
  7513     1EC9                     	;# 
  7514     1ECA                     	;# 
  7515     1ECB                     	;# 
  7516     1ECC                     	;# 
  7517     1ECD                     	;# 
  7518     1ECE                     	;# 
  7519     1F10                     	;# 
  7520     1F11                     	;# 
  7521     1F12                     	;# 
  7522     1F13                     	;# 
  7523     1F14                     	;# 
  7524     1F15                     	;# 
  7525     1F16                     	;# 
  7526     1F17                     	;# 
  7527     1F18                     	;# 
  7528     1F19                     	;# 
  7529     1F1A                     	;# 
  7530     1F1B                     	;# 
  7531     1F1C                     	;# 
  7532     1F1D                     	;# 
  7533     1F1E                     	;# 
  7534     1F1F                     	;# 
  7535     1F20                     	;# 
  7536     1F21                     	;# 
  7537     1F22                     	;# 
  7538     1F23                     	;# 
  7539     1F24                     	;# 
  7540     1F25                     	;# 
  7541     1F26                     	;# 
  7542     1F27                     	;# 
  7543     1F38                     	;# 
  7544     1F39                     	;# 
  7545     1F3A                     	;# 
  7546     1F3B                     	;# 
  7547     1F3C                     	;# 
  7548     1F3D                     	;# 
  7549     1F3E                     	;# 
  7550     1F3F                     	;# 
  7551     1F43                     	;# 
  7552     1F44                     	;# 
  7553     1F45                     	;# 
  7554     1F46                     	;# 
  7555     1F47                     	;# 
  7556     1F48                     	;# 
  7557     1F49                     	;# 
  7558     1F4A                     	;# 
  7559     1F4E                     	;# 
  7560     1F4F                     	;# 
  7561     1F50                     	;# 
  7562     1F51                     	;# 
  7563     1F52                     	;# 
  7564     1F53                     	;# 
  7565     1F54                     	;# 
  7566     1F55                     	;# 
  7567     1F65                     	;# 
  7568     1F66                     	;# 
  7569     1F67                     	;# 
  7570     1F68                     	;# 
  7571     1F69                     	;# 
  7572     1F6A                     	;# 
  7573     1F6B                     	;# 
  7574     1FE4                     	;# 
  7575     1FE5                     	;# 
  7576     1FE6                     	;# 
  7577     1FE7                     	;# 
  7578     1FE8                     	;# 
  7579     1FE8                     	;# 
  7580     1FE9                     	;# 
  7581     1FEA                     	;# 
  7582     1FEB                     	;# 
  7583     1FED                     	;# 
  7584     1FEE                     	;# 
  7585     1FEF                     	;# 
  7586     0000                     	;# 
  7587     0001                     	;# 
  7588     0002                     	;# 
  7589     0003                     	;# 
  7590     0004                     	;# 
  7591     0005                     	;# 
  7592     0006                     	;# 
  7593     0007                     	;# 
  7594     0008                     	;# 
  7595     0009                     	;# 
  7596     000A                     	;# 
  7597     000B                     	;# 
  7598     000C                     	;# 
  7599     000D                     	;# 
  7600     000E                     	;# 
  7601     0010                     	;# 
  7602     0012                     	;# 
  7603     0013                     	;# 
  7604     0014                     	;# 
  7605     0016                     	;# 
  7606     0018                     	;# 
  7607     0019                     	;# 
  7608     001A                     	;# 
  7609     001C                     	;# 
  7610     008C                     	;# 
  7611     008C                     	;# 
  7612     008D                     	;# 
  7613     008E                     	;# 
  7614     008E                     	;# 
  7615     008F                     	;# 
  7616     0090                     	;# 
  7617     0090                     	;# 
  7618     0091                     	;# 
  7619     0092                     	;# 
  7620     0092                     	;# 
  7621     0093                     	;# 
  7622     0094                     	;# 
  7623     0094                     	;# 
  7624     0095                     	;# 
  7625     0096                     	;# 
  7626     0096                     	;# 
  7627     0097                     	;# 
  7628     0098                     	;# 
  7629     0099                     	;# 
  7630     009A                     	;# 
  7631     009B                     	;# 
  7632     009B                     	;# 
  7633     009C                     	;# 
  7634     009D                     	;# 
  7635     009D                     	;# 
  7636     009E                     	;# 
  7637     009F                     	;# 
  7638     010C                     	;# 
  7639     010C                     	;# 
  7640     010D                     	;# 
  7641     010E                     	;# 
  7642     010F                     	;# 
  7643     010F                     	;# 
  7644     0110                     	;# 
  7645     0111                     	;# 
  7646     0112                     	;# 
  7647     0113                     	;# 
  7648     0114                     	;# 
  7649     0115                     	;# 
  7650     0116                     	;# 
  7651     0117                     	;# 
  7652     0118                     	;# 
  7653     0119                     	;# 
  7654     0119                     	;# 
  7655     0119                     	;# 
  7656     011A                     	;# 
  7657     011A                     	;# 
  7658     011A                     	;# 
  7659     011B                     	;# 
  7660     011B                     	;# 
  7661     011B                     	;# 
  7662     011B                     	;# 
  7663     011B                     	;# 
  7664     011C                     	;# 
  7665     011C                     	;# 
  7666     011C                     	;# 
  7667     011D                     	;# 
  7668     011D                     	;# 
  7669     011D                     	;# 
  7670     011E                     	;# 
  7671     011E                     	;# 
  7672     011E                     	;# 
  7673     011F                     	;# 
  7674     011F                     	;# 
  7675     011F                     	;# 
  7676     011F                     	;# 
  7677     011F                     	;# 
  7678     018C                     	;# 
  7679     018D                     	;# 
  7680     018E                     	;# 
  7681     018F                     	;# 
  7682     0190                     	;# 
  7683     0191                     	;# 
  7684     0192                     	;# 
  7685     0196                     	;# 
  7686     0197                     	;# 
  7687     0198                     	;# 
  7688     0199                     	;# 
  7689     019A                     	;# 
  7690     019B                     	;# 
  7691     019C                     	;# 
  7692     020C                     	;# 
  7693     020D                     	;# 
  7694     020E                     	;# 
  7695     020E                     	;# 
  7696     020F                     	;# 
  7697     020F                     	;# 
  7698     0210                     	;# 
  7699     0210                     	;# 
  7700     0211                     	;# 
  7701     0211                     	;# 
  7702     0212                     	;# 
  7703     0213                     	;# 
  7704     0214                     	;# 
  7705     0214                     	;# 
  7706     0215                     	;# 
  7707     0215                     	;# 
  7708     0216                     	;# 
  7709     0216                     	;# 
  7710     0217                     	;# 
  7711     0217                     	;# 
  7712     0218                     	;# 
  7713     0219                     	;# 
  7714     021A                     	;# 
  7715     021A                     	;# 
  7716     021B                     	;# 
  7717     021B                     	;# 
  7718     021C                     	;# 
  7719     021C                     	;# 
  7720     021D                     	;# 
  7721     021D                     	;# 
  7722     021E                     	;# 
  7723     021F                     	;# 
  7724     028C                     	;# 
  7725     028C                     	;# 
  7726     028D                     	;# 
  7727     028D                     	;# 
  7728     028E                     	;# 
  7729     028F                     	;# 
  7730     0290                     	;# 
  7731     0291                     	;# 
  7732     0292                     	;# 
  7733     0292                     	;# 
  7734     0293                     	;# 
  7735     0293                     	;# 
  7736     0294                     	;# 
  7737     0295                     	;# 
  7738     0296                     	;# 
  7739     0297                     	;# 
  7740     0298                     	;# 
  7741     0298                     	;# 
  7742     0299                     	;# 
  7743     0299                     	;# 
  7744     029A                     	;# 
  7745     029B                     	;# 
  7746     029C                     	;# 
  7747     029D                     	;# 
  7748     029F                     	;# 
  7749     030C                     	;# 
  7750     030C                     	;# 
  7751     030D                     	;# 
  7752     030E                     	;# 
  7753     030F                     	;# 
  7754     0310                     	;# 
  7755     0310                     	;# 
  7756     0311                     	;# 
  7757     0312                     	;# 
  7758     0313                     	;# 
  7759     0314                     	;# 
  7760     0314                     	;# 
  7761     0315                     	;# 
  7762     0316                     	;# 
  7763     0317                     	;# 
  7764     0318                     	;# 
  7765     0318                     	;# 
  7766     0319                     	;# 
  7767     031A                     	;# 
  7768     031B                     	;# 
  7769     031C                     	;# 
  7770     031C                     	;# 
  7771     031D                     	;# 
  7772     031E                     	;# 
  7773     031F                     	;# 
  7774     038C                     	;# 
  7775     038C                     	;# 
  7776     038D                     	;# 
  7777     038E                     	;# 
  7778     0390                     	;# 
  7779     0390                     	;# 
  7780     0391                     	;# 
  7781     0392                     	;# 
  7782     048C                     	;# 
  7783     048C                     	;# 
  7784     048D                     	;# 
  7785     048E                     	;# 
  7786     048F                     	;# 
  7787     048F                     	;# 
  7788     0490                     	;# 
  7789     0491                     	;# 
  7790     0492                     	;# 
  7791     0492                     	;# 
  7792     0493                     	;# 
  7793     0494                     	;# 
  7794     0495                     	;# 
  7795     0495                     	;# 
  7796     0496                     	;# 
  7797     0497                     	;# 
  7798     0498                     	;# 
  7799     0499                     	;# 
  7800     049A                     	;# 
  7801     049B                     	;# 
  7802     049C                     	;# 
  7803     049D                     	;# 
  7804     050C                     	;# 
  7805     050C                     	;# 
  7806     050D                     	;# 
  7807     050E                     	;# 
  7808     050F                     	;# 
  7809     050F                     	;# 
  7810     0510                     	;# 
  7811     0511                     	;# 
  7812     0512                     	;# 
  7813     0512                     	;# 
  7814     0513                     	;# 
  7815     0514                     	;# 
  7816     0515                     	;# 
  7817     0515                     	;# 
  7818     0516                     	;# 
  7819     0517                     	;# 
  7820     0518                     	;# 
  7821     0519                     	;# 
  7822     051A                     	;# 
  7823     051B                     	;# 
  7824     051C                     	;# 
  7825     051D                     	;# 
  7826     058C                     	;# 
  7827     058C                     	;# 
  7828     058D                     	;# 
  7829     058E                     	;# 
  7830     058F                     	;# 
  7831     058F                     	;# 
  7832     0590                     	;# 
  7833     0591                     	;# 
  7834     0592                     	;# 
  7835     0593                     	;# 
  7836     059C                     	;# 
  7837     059C                     	;# 
  7838     059D                     	;# 
  7839     059D                     	;# 
  7840     059E                     	;# 
  7841     059F                     	;# 
  7842     060C                     	;# 
  7843     060C                     	;# 
  7844     060D                     	;# 
  7845     060D                     	;# 
  7846     060E                     	;# 
  7847     060F                     	;# 
  7848     0610                     	;# 
  7849     0611                     	;# 
  7850     0612                     	;# 
  7851     0613                     	;# 
  7852     0614                     	;# 
  7853     0616                     	;# 
  7854     0616                     	;# 
  7855     0617                     	;# 
  7856     0617                     	;# 
  7857     0618                     	;# 
  7858     0619                     	;# 
  7859     061A                     	;# 
  7860     061B                     	;# 
  7861     061C                     	;# 
  7862     061D                     	;# 
  7863     061E                     	;# 
  7864     068C                     	;# 
  7865     068D                     	;# 
  7866     068E                     	;# 
  7867     068F                     	;# 
  7868     0690                     	;# 
  7869     0691                     	;# 
  7870     0692                     	;# 
  7871     0693                     	;# 
  7872     0694                     	;# 
  7873     070C                     	;# 
  7874     070D                     	;# 
  7875     070E                     	;# 
  7876     070F                     	;# 
  7877     0710                     	;# 
  7878     0711                     	;# 
  7879     0712                     	;# 
  7880     0713                     	;# 
  7881     0714                     	;# 
  7882     0716                     	;# 
  7883     0717                     	;# 
  7884     0718                     	;# 
  7885     0719                     	;# 
  7886     071A                     	;# 
  7887     071B                     	;# 
  7888     071C                     	;# 
  7889     071D                     	;# 
  7890     071E                     	;# 
  7891     0796                     	;# 
  7892     0797                     	;# 
  7893     0798                     	;# 
  7894     0799                     	;# 
  7895     079A                     	;# 
  7896     079B                     	;# 
  7897     079C                     	;# 
  7898     079D                     	;# 
  7899     080C                     	;# 
  7900     080D                     	;# 
  7901     080E                     	;# 
  7902     080F                     	;# 
  7903     0810                     	;# 
  7904     0811                     	;# 
  7905     0813                     	;# 
  7906     0814                     	;# 
  7907     081A                     	;# 
  7908     081A                     	;# 
  7909     081B                     	;# 
  7910     081C                     	;# 
  7911     081C                     	;# 
  7912     081D                     	;# 
  7913     081E                     	;# 
  7914     081F                     	;# 
  7915     088C                     	;# 
  7916     088D                     	;# 
  7917     088E                     	;# 
  7918     088F                     	;# 
  7919     0890                     	;# 
  7920     0891                     	;# 
  7921     0892                     	;# 
  7922     0893                     	;# 
  7923     0895                     	;# 
  7924     0896                     	;# 
  7925     0897                     	;# 
  7926     0898                     	;# 
  7927     0899                     	;# 
  7928     089A                     	;# 
  7929     089B                     	;# 
  7930     090C                     	;# 
  7931     090E                     	;# 
  7932     090F                     	;# 
  7933     091F                     	;# 
  7934     098F                     	;# 
  7935     098F                     	;# 
  7936     0990                     	;# 
  7937     0991                     	;# 
  7938     0992                     	;# 
  7939     0993                     	;# 
  7940     0994                     	;# 
  7941     0995                     	;# 
  7942     0996                     	;# 
  7943     0997                     	;# 
  7944     0A19                     	;# 
  7945     0A19                     	;# 
  7946     0A1A                     	;# 
  7947     0A1A                     	;# 
  7948     0A1B                     	;# 
  7949     0A1B                     	;# 
  7950     0A1B                     	;# 
  7951     0A1C                     	;# 
  7952     0A1C                     	;# 
  7953     0A1D                     	;# 
  7954     0A1D                     	;# 
  7955     0A1E                     	;# 
  7956     0A1E                     	;# 
  7957     0A1F                     	;# 
  7958     0A1F                     	;# 
  7959     0A1F                     	;# 
  7960     1E0F                     	;# 
  7961     1E10                     	;# 
  7962     1E11                     	;# 
  7963     1E12                     	;# 
  7964     1E13                     	;# 
  7965     1E14                     	;# 
  7966     1E15                     	;# 
  7967     1E16                     	;# 
  7968     1E17                     	;# 
  7969     1E18                     	;# 
  7970     1E19                     	;# 
  7971     1E1A                     	;# 
  7972     1E1B                     	;# 
  7973     1E1C                     	;# 
  7974     1E1D                     	;# 
  7975     1E1E                     	;# 
  7976     1E1F                     	;# 
  7977     1E20                     	;# 
  7978     1E21                     	;# 
  7979     1E22                     	;# 
  7980     1E23                     	;# 
  7981     1E24                     	;# 
  7982     1E25                     	;# 
  7983     1E26                     	;# 
  7984     1E27                     	;# 
  7985     1E28                     	;# 
  7986     1E29                     	;# 
  7987     1E2A                     	;# 
  7988     1E2B                     	;# 
  7989     1E2C                     	;# 
  7990     1E2D                     	;# 
  7991     1E2E                     	;# 
  7992     1E2F                     	;# 
  7993     1E30                     	;# 
  7994     1E31                     	;# 
  7995     1E32                     	;# 
  7996     1E33                     	;# 
  7997     1E34                     	;# 
  7998     1E35                     	;# 
  7999     1E36                     	;# 
  8000     1E37                     	;# 
  8001     1E8F                     	;# 
  8002     1E90                     	;# 
  8003     1E91                     	;# 
  8004     1E92                     	;# 
  8005     1E93                     	;# 
  8006     1E94                     	;# 
  8007     1E95                     	;# 
  8008     1E96                     	;# 
  8009     1E97                     	;# 
  8010     1E9C                     	;# 
  8011     1E9D                     	;# 
  8012     1E9E                     	;# 
  8013     1EA1                     	;# 
  8014     1EA2                     	;# 
  8015     1EA3                     	;# 
  8016     1EA4                     	;# 
  8017     1EA5                     	;# 
  8018     1EA9                     	;# 
  8019     1EAA                     	;# 
  8020     1EAB                     	;# 
  8021     1EAC                     	;# 
  8022     1EB1                     	;# 
  8023     1EB2                     	;# 
  8024     1EB3                     	;# 
  8025     1EB8                     	;# 
  8026     1EB9                     	;# 
  8027     1EBA                     	;# 
  8028     1EBB                     	;# 
  8029     1EBC                     	;# 
  8030     1EBD                     	;# 
  8031     1EBE                     	;# 
  8032     1EC3                     	;# 
  8033     1EC5                     	;# 
  8034     1EC6                     	;# 
  8035     1EC7                     	;# 
  8036     1EC8                     	;# 
  8037     1EC9                     	;# 
  8038     1ECA                     	;# 
  8039     1ECB                     	;# 
  8040     1ECC                     	;# 
  8041     1ECD                     	;# 
  8042     1ECE                     	;# 
  8043     1F10                     	;# 
  8044     1F11                     	;# 
  8045     1F12                     	;# 
  8046     1F13                     	;# 
  8047     1F14                     	;# 
  8048     1F15                     	;# 
  8049     1F16                     	;# 
  8050     1F17                     	;# 
  8051     1F18                     	;# 
  8052     1F19                     	;# 
  8053     1F1A                     	;# 
  8054     1F1B                     	;# 
  8055     1F1C                     	;# 
  8056     1F1D                     	;# 
  8057     1F1E                     	;# 
  8058     1F1F                     	;# 
  8059     1F20                     	;# 
  8060     1F21                     	;# 
  8061     1F22                     	;# 
  8062     1F23                     	;# 
  8063     1F24                     	;# 
  8064     1F25                     	;# 
  8065     1F26                     	;# 
  8066     1F27                     	;# 
  8067     1F38                     	;# 
  8068     1F39                     	;# 
  8069     1F3A                     	;# 
  8070     1F3B                     	;# 
  8071     1F3C                     	;# 
  8072     1F3D                     	;# 
  8073     1F3E                     	;# 
  8074     1F3F                     	;# 
  8075     1F43                     	;# 
  8076     1F44                     	;# 
  8077     1F45                     	;# 
  8078     1F46                     	;# 
  8079     1F47                     	;# 
  8080     1F48                     	;# 
  8081     1F49                     	;# 
  8082     1F4A                     	;# 
  8083     1F4E                     	;# 
  8084     1F4F                     	;# 
  8085     1F50                     	;# 
  8086     1F51                     	;# 
  8087     1F52                     	;# 
  8088     1F53                     	;# 
  8089     1F54                     	;# 
  8090     1F55                     	;# 
  8091     1F65                     	;# 
  8092     1F66                     	;# 
  8093     1F67                     	;# 
  8094     1F68                     	;# 
  8095     1F69                     	;# 
  8096     1F6A                     	;# 
  8097     1F6B                     	;# 
  8098     1FE4                     	;# 
  8099     1FE5                     	;# 
  8100     1FE6                     	;# 
  8101     1FE7                     	;# 
  8102     1FE8                     	;# 
  8103     1FE8                     	;# 
  8104     1FE9                     	;# 
  8105     1FEA                     	;# 
  8106     1FEB                     	;# 
  8107     1FED                     	;# 
  8108     1FEE                     	;# 
  8109     1FEF                     	;# 
  8110     0000                     	;# 
  8111     0001                     	;# 
  8112     0002                     	;# 
  8113     0003                     	;# 
  8114     0004                     	;# 
  8115     0005                     	;# 
  8116     0006                     	;# 
  8117     0007                     	;# 
  8118     0008                     	;# 
  8119     0009                     	;# 
  8120     000A                     	;# 
  8121     000B                     	;# 
  8122     000C                     	;# 
  8123     000D                     	;# 
  8124     000E                     	;# 
  8125     0010                     	;# 
  8126     0012                     	;# 
  8127     0013                     	;# 
  8128     0014                     	;# 
  8129     0016                     	;# 
  8130     0018                     	;# 
  8131     0019                     	;# 
  8132     001A                     	;# 
  8133     001C                     	;# 
  8134     008C                     	;# 
  8135     008C                     	;# 
  8136     008D                     	;# 
  8137     008E                     	;# 
  8138     008E                     	;# 
  8139     008F                     	;# 
  8140     0090                     	;# 
  8141     0090                     	;# 
  8142     0091                     	;# 
  8143     0092                     	;# 
  8144     0092                     	;# 
  8145     0093                     	;# 
  8146     0094                     	;# 
  8147     0094                     	;# 
  8148     0095                     	;# 
  8149     0096                     	;# 
  8150     0096                     	;# 
  8151     0097                     	;# 
  8152     0098                     	;# 
  8153     0099                     	;# 
  8154     009A                     	;# 
  8155     009B                     	;# 
  8156     009B                     	;# 
  8157     009C                     	;# 
  8158     009D                     	;# 
  8159     009D                     	;# 
  8160     009E                     	;# 
  8161     009F                     	;# 
  8162     010C                     	;# 
  8163     010C                     	;# 
  8164     010D                     	;# 
  8165     010E                     	;# 
  8166     010F                     	;# 
  8167     010F                     	;# 
  8168     0110                     	;# 
  8169     0111                     	;# 
  8170     0112                     	;# 
  8171     0113                     	;# 
  8172     0114                     	;# 
  8173     0115                     	;# 
  8174     0116                     	;# 
  8175     0117                     	;# 
  8176     0118                     	;# 
  8177     0119                     	;# 
  8178     0119                     	;# 
  8179     0119                     	;# 
  8180     011A                     	;# 
  8181     011A                     	;# 
  8182     011A                     	;# 
  8183     011B                     	;# 
  8184     011B                     	;# 
  8185     011B                     	;# 
  8186     011B                     	;# 
  8187     011B                     	;# 
  8188     011C                     	;# 
  8189     011C                     	;# 
  8190     011C                     	;# 
  8191     011D                     	;# 
  8192     011D                     	;# 
  8193     011D                     	;# 
  8194     011E                     	;# 
  8195     011E                     	;# 
  8196     011E                     	;# 
  8197     011F                     	;# 
  8198     011F                     	;# 
  8199     011F                     	;# 
  8200     011F                     	;# 
  8201     011F                     	;# 
  8202     018C                     	;# 
  8203     018D                     	;# 
  8204     018E                     	;# 
  8205     018F                     	;# 
  8206     0190                     	;# 
  8207     0191                     	;# 
  8208     0192                     	;# 
  8209     0196                     	;# 
  8210     0197                     	;# 
  8211     0198                     	;# 
  8212     0199                     	;# 
  8213     019A                     	;# 
  8214     019B                     	;# 
  8215     019C                     	;# 
  8216     020C                     	;# 
  8217     020D                     	;# 
  8218     020E                     	;# 
  8219     020E                     	;# 
  8220     020F                     	;# 
  8221     020F                     	;# 
  8222     0210                     	;# 
  8223     0210                     	;# 
  8224     0211                     	;# 
  8225     0211                     	;# 
  8226     0212                     	;# 
  8227     0213                     	;# 
  8228     0214                     	;# 
  8229     0214                     	;# 
  8230     0215                     	;# 
  8231     0215                     	;# 
  8232     0216                     	;# 
  8233     0216                     	;# 
  8234     0217                     	;# 
  8235     0217                     	;# 
  8236     0218                     	;# 
  8237     0219                     	;# 
  8238     021A                     	;# 
  8239     021A                     	;# 
  8240     021B                     	;# 
  8241     021B                     	;# 
  8242     021C                     	;# 
  8243     021C                     	;# 
  8244     021D                     	;# 
  8245     021D                     	;# 
  8246     021E                     	;# 
  8247     021F                     	;# 
  8248     028C                     	;# 
  8249     028C                     	;# 
  8250     028D                     	;# 
  8251     028D                     	;# 
  8252     028E                     	;# 
  8253     028F                     	;# 
  8254     0290                     	;# 
  8255     0291                     	;# 
  8256     0292                     	;# 
  8257     0292                     	;# 
  8258     0293                     	;# 
  8259     0293                     	;# 
  8260     0294                     	;# 
  8261     0295                     	;# 
  8262     0296                     	;# 
  8263     0297                     	;# 
  8264     0298                     	;# 
  8265     0298                     	;# 
  8266     0299                     	;# 
  8267     0299                     	;# 
  8268     029A                     	;# 
  8269     029B                     	;# 
  8270     029C                     	;# 
  8271     029D                     	;# 
  8272     029F                     	;# 
  8273     030C                     	;# 
  8274     030C                     	;# 
  8275     030D                     	;# 
  8276     030E                     	;# 
  8277     030F                     	;# 
  8278     0310                     	;# 
  8279     0310                     	;# 
  8280     0311                     	;# 
  8281     0312                     	;# 
  8282     0313                     	;# 
  8283     0314                     	;# 
  8284     0314                     	;# 
  8285     0315                     	;# 
  8286     0316                     	;# 
  8287     0317                     	;# 
  8288     0318                     	;# 
  8289     0318                     	;# 
  8290     0319                     	;# 
  8291     031A                     	;# 
  8292     031B                     	;# 
  8293     031C                     	;# 
  8294     031C                     	;# 
  8295     031D                     	;# 
  8296     031E                     	;# 
  8297     031F                     	;# 
  8298     038C                     	;# 
  8299     038C                     	;# 
  8300     038D                     	;# 
  8301     038E                     	;# 
  8302     0390                     	;# 
  8303     0390                     	;# 
  8304     0391                     	;# 
  8305     0392                     	;# 
  8306     048C                     	;# 
  8307     048C                     	;# 
  8308     048D                     	;# 
  8309     048E                     	;# 
  8310     048F                     	;# 
  8311     048F                     	;# 
  8312     0490                     	;# 
  8313     0491                     	;# 
  8314     0492                     	;# 
  8315     0492                     	;# 
  8316     0493                     	;# 
  8317     0494                     	;# 
  8318     0495                     	;# 
  8319     0495                     	;# 
  8320     0496                     	;# 
  8321     0497                     	;# 
  8322     0498                     	;# 
  8323     0499                     	;# 
  8324     049A                     	;# 
  8325     049B                     	;# 
  8326     049C                     	;# 
  8327     049D                     	;# 
  8328     050C                     	;# 
  8329     050C                     	;# 
  8330     050D                     	;# 
  8331     050E                     	;# 
  8332     050F                     	;# 
  8333     050F                     	;# 
  8334     0510                     	;# 
  8335     0511                     	;# 
  8336     0512                     	;# 
  8337     0512                     	;# 
  8338     0513                     	;# 
  8339     0514                     	;# 
  8340     0515                     	;# 
  8341     0515                     	;# 
  8342     0516                     	;# 
  8343     0517                     	;# 
  8344     0518                     	;# 
  8345     0519                     	;# 
  8346     051A                     	;# 
  8347     051B                     	;# 
  8348     051C                     	;# 
  8349     051D                     	;# 
  8350     058C                     	;# 
  8351     058C                     	;# 
  8352     058D                     	;# 
  8353     058E                     	;# 
  8354     058F                     	;# 
  8355     058F                     	;# 
  8356     0590                     	;# 
  8357     0591                     	;# 
  8358     0592                     	;# 
  8359     0593                     	;# 
  8360     059C                     	;# 
  8361     059C                     	;# 
  8362     059D                     	;# 
  8363     059D                     	;# 
  8364     059E                     	;# 
  8365     059F                     	;# 
  8366     060C                     	;# 
  8367     060C                     	;# 
  8368     060D                     	;# 
  8369     060D                     	;# 
  8370     060E                     	;# 
  8371     060F                     	;# 
  8372     0610                     	;# 
  8373     0611                     	;# 
  8374     0612                     	;# 
  8375     0613                     	;# 
  8376     0614                     	;# 
  8377     0616                     	;# 
  8378     0616                     	;# 
  8379     0617                     	;# 
  8380     0617                     	;# 
  8381     0618                     	;# 
  8382     0619                     	;# 
  8383     061A                     	;# 
  8384     061B                     	;# 
  8385     061C                     	;# 
  8386     061D                     	;# 
  8387     061E                     	;# 
  8388     068C                     	;# 
  8389     068D                     	;# 
  8390     068E                     	;# 
  8391     068F                     	;# 
  8392     0690                     	;# 
  8393     0691                     	;# 
  8394     0692                     	;# 
  8395     0693                     	;# 
  8396     0694                     	;# 
  8397     070C                     	;# 
  8398     070D                     	;# 
  8399     070E                     	;# 
  8400     070F                     	;# 
  8401     0710                     	;# 
  8402     0711                     	;# 
  8403     0712                     	;# 
  8404     0713                     	;# 
  8405     0714                     	;# 
  8406     0716                     	;# 
  8407     0717                     	;# 
  8408     0718                     	;# 
  8409     0719                     	;# 
  8410     071A                     	;# 
  8411     071B                     	;# 
  8412     071C                     	;# 
  8413     071D                     	;# 
  8414     071E                     	;# 
  8415     0796                     	;# 
  8416     0797                     	;# 
  8417     0798                     	;# 
  8418     0799                     	;# 
  8419     079A                     	;# 
  8420     079B                     	;# 
  8421     079C                     	;# 
  8422     079D                     	;# 
  8423     080C                     	;# 
  8424     080D                     	;# 
  8425     080E                     	;# 
  8426     080F                     	;# 
  8427     0810                     	;# 
  8428     0811                     	;# 
  8429     0813                     	;# 
  8430     0814                     	;# 
  8431     081A                     	;# 
  8432     081A                     	;# 
  8433     081B                     	;# 
  8434     081C                     	;# 
  8435     081C                     	;# 
  8436     081D                     	;# 
  8437     081E                     	;# 
  8438     081F                     	;# 
  8439     088C                     	;# 
  8440     088D                     	;# 
  8441     088E                     	;# 
  8442     088F                     	;# 
  8443     0890                     	;# 
  8444     0891                     	;# 
  8445     0892                     	;# 
  8446     0893                     	;# 
  8447     0895                     	;# 
  8448     0896                     	;# 
  8449     0897                     	;# 
  8450     0898                     	;# 
  8451     0899                     	;# 
  8452     089A                     	;# 
  8453     089B                     	;# 
  8454     090C                     	;# 
  8455     090E                     	;# 
  8456     090F                     	;# 
  8457     091F                     	;# 
  8458     098F                     	;# 
  8459     098F                     	;# 
  8460     0990                     	;# 
  8461     0991                     	;# 
  8462     0992                     	;# 
  8463     0993                     	;# 
  8464     0994                     	;# 
  8465     0995                     	;# 
  8466     0996                     	;# 
  8467     0997                     	;# 
  8468     0A19                     	;# 
  8469     0A19                     	;# 
  8470     0A1A                     	;# 
  8471     0A1A                     	;# 
  8472     0A1B                     	;# 
  8473     0A1B                     	;# 
  8474     0A1B                     	;# 
  8475     0A1C                     	;# 
  8476     0A1C                     	;# 
  8477     0A1D                     	;# 
  8478     0A1D                     	;# 
  8479     0A1E                     	;# 
  8480     0A1E                     	;# 
  8481     0A1F                     	;# 
  8482     0A1F                     	;# 
  8483     0A1F                     	;# 
  8484     1E0F                     	;# 
  8485     1E10                     	;# 
  8486     1E11                     	;# 
  8487     1E12                     	;# 
  8488     1E13                     	;# 
  8489     1E14                     	;# 
  8490     1E15                     	;# 
  8491     1E16                     	;# 
  8492     1E17                     	;# 
  8493     1E18                     	;# 
  8494     1E19                     	;# 
  8495     1E1A                     	;# 
  8496     1E1B                     	;# 
  8497     1E1C                     	;# 
  8498     1E1D                     	;# 
  8499     1E1E                     	;# 
  8500     1E1F                     	;# 
  8501     1E20                     	;# 
  8502     1E21                     	;# 
  8503     1E22                     	;# 
  8504     1E23                     	;# 
  8505     1E24                     	;# 
  8506     1E25                     	;# 
  8507     1E26                     	;# 
  8508     1E27                     	;# 
  8509     1E28                     	;# 
  8510     1E29                     	;# 
  8511     1E2A                     	;# 
  8512     1E2B                     	;# 
  8513     1E2C                     	;# 
  8514     1E2D                     	;# 
  8515     1E2E                     	;# 
  8516     1E2F                     	;# 
  8517     1E30                     	;# 
  8518     1E31                     	;# 
  8519     1E32                     	;# 
  8520     1E33                     	;# 
  8521     1E34                     	;# 
  8522     1E35                     	;# 
  8523     1E36                     	;# 
  8524     1E37                     	;# 
  8525     1E8F                     	;# 
  8526     1E90                     	;# 
  8527     1E91                     	;# 
  8528     1E92                     	;# 
  8529     1E93                     	;# 
  8530     1E94                     	;# 
  8531     1E95                     	;# 
  8532     1E96                     	;# 
  8533     1E97                     	;# 
  8534     1E9C                     	;# 
  8535     1E9D                     	;# 
  8536     1E9E                     	;# 
  8537     1EA1                     	;# 
  8538     1EA2                     	;# 
  8539     1EA3                     	;# 
  8540     1EA4                     	;# 
  8541     1EA5                     	;# 
  8542     1EA9                     	;# 
  8543     1EAA                     	;# 
  8544     1EAB                     	;# 
  8545     1EAC                     	;# 
  8546     1EB1                     	;# 
  8547     1EB2                     	;# 
  8548     1EB3                     	;# 
  8549     1EB8                     	;# 
  8550     1EB9                     	;# 
  8551     1EBA                     	;# 
  8552     1EBB                     	;# 
  8553     1EBC                     	;# 
  8554     1EBD                     	;# 
  8555     1EBE                     	;# 
  8556     1EC3                     	;# 
  8557     1EC5                     	;# 
  8558     1EC6                     	;# 
  8559     1EC7                     	;# 
  8560     1EC8                     	;# 
  8561     1EC9                     	;# 
  8562     1ECA                     	;# 
  8563     1ECB                     	;# 
  8564     1ECC                     	;# 
  8565     1ECD                     	;# 
  8566     1ECE                     	;# 
  8567     1F10                     	;# 
  8568     1F11                     	;# 
  8569     1F12                     	;# 
  8570     1F13                     	;# 
  8571     1F14                     	;# 
  8572     1F15                     	;# 
  8573     1F16                     	;# 
  8574     1F17                     	;# 
  8575     1F18                     	;# 
  8576     1F19                     	;# 
  8577     1F1A                     	;# 
  8578     1F1B                     	;# 
  8579     1F1C                     	;# 
  8580     1F1D                     	;# 
  8581     1F1E                     	;# 
  8582     1F1F                     	;# 
  8583     1F20                     	;# 
  8584     1F21                     	;# 
  8585     1F22                     	;# 
  8586     1F23                     	;# 
  8587     1F24                     	;# 
  8588     1F25                     	;# 
  8589     1F26                     	;# 
  8590     1F27                     	;# 
  8591     1F38                     	;# 
  8592     1F39                     	;# 
  8593     1F3A                     	;# 
  8594     1F3B                     	;# 
  8595     1F3C                     	;# 
  8596     1F3D                     	;# 
  8597     1F3E                     	;# 
  8598     1F3F                     	;# 
  8599     1F43                     	;# 
  8600     1F44                     	;# 
  8601     1F45                     	;# 
  8602     1F46                     	;# 
  8603     1F47                     	;# 
  8604     1F48                     	;# 
  8605     1F49                     	;# 
  8606     1F4A                     	;# 
  8607     1F4E                     	;# 
  8608     1F4F                     	;# 
  8609     1F50                     	;# 
  8610     1F51                     	;# 
  8611     1F52                     	;# 
  8612     1F53                     	;# 
  8613     1F54                     	;# 
  8614     1F55                     	;# 
  8615     1F65                     	;# 
  8616     1F66                     	;# 
  8617     1F67                     	;# 
  8618     1F68                     	;# 
  8619     1F69                     	;# 
  8620     1F6A                     	;# 
  8621     1F6B                     	;# 
  8622     1FE4                     	;# 
  8623     1FE5                     	;# 
  8624     1FE6                     	;# 
  8625     1FE7                     	;# 
  8626     1FE8                     	;# 
  8627     1FE8                     	;# 
  8628     1FE9                     	;# 
  8629     1FEA                     	;# 
  8630     1FEB                     	;# 
  8631     1FED                     	;# 
  8632     1FEE                     	;# 
  8633     1FEF                     	;# 
  8634     0000                     	;# 
  8635     0001                     	;# 
  8636     0002                     	;# 
  8637     0003                     	;# 
  8638     0004                     	;# 
  8639     0005                     	;# 
  8640     0006                     	;# 
  8641     0007                     	;# 
  8642     0008                     	;# 
  8643     0009                     	;# 
  8644     000A                     	;# 
  8645     000B                     	;# 
  8646     000C                     	;# 
  8647     000D                     	;# 
  8648     000E                     	;# 
  8649     0010                     	;# 
  8650     0012                     	;# 
  8651     0013                     	;# 
  8652     0014                     	;# 
  8653     0016                     	;# 
  8654     0018                     	;# 
  8655     0019                     	;# 
  8656     001A                     	;# 
  8657     001C                     	;# 
  8658     008C                     	;# 
  8659     008C                     	;# 
  8660     008D                     	;# 
  8661     008E                     	;# 
  8662     008E                     	;# 
  8663     008F                     	;# 
  8664     0090                     	;# 
  8665     0090                     	;# 
  8666     0091                     	;# 
  8667     0092                     	;# 
  8668     0092                     	;# 
  8669     0093                     	;# 
  8670     0094                     	;# 
  8671     0094                     	;# 
  8672     0095                     	;# 
  8673     0096                     	;# 
  8674     0096                     	;# 
  8675     0097                     	;# 
  8676     0098                     	;# 
  8677     0099                     	;# 
  8678     009A                     	;# 
  8679     009B                     	;# 
  8680     009B                     	;# 
  8681     009C                     	;# 
  8682     009D                     	;# 
  8683     009D                     	;# 
  8684     009E                     	;# 
  8685     009F                     	;# 
  8686     010C                     	;# 
  8687     010C                     	;# 
  8688     010D                     	;# 
  8689     010E                     	;# 
  8690     010F                     	;# 
  8691     010F                     	;# 
  8692     0110                     	;# 
  8693     0111                     	;# 
  8694     0112                     	;# 
  8695     0113                     	;# 
  8696     0114                     	;# 
  8697     0115                     	;# 
  8698     0116                     	;# 
  8699     0117                     	;# 
  8700     0118                     	;# 
  8701     0119                     	;# 
  8702     0119                     	;# 
  8703     0119                     	;# 
  8704     011A                     	;# 
  8705     011A                     	;# 
  8706     011A                     	;# 
  8707     011B                     	;# 
  8708     011B                     	;# 
  8709     011B                     	;# 
  8710     011B                     	;# 
  8711     011B                     	;# 
  8712     011C                     	;# 
  8713     011C                     	;# 
  8714     011C                     	;# 
  8715     011D                     	;# 
  8716     011D                     	;# 
  8717     011D                     	;# 
  8718     011E                     	;# 
  8719     011E                     	;# 
  8720     011E                     	;# 
  8721     011F                     	;# 
  8722     011F                     	;# 
  8723     011F                     	;# 
  8724     011F                     	;# 
  8725     011F                     	;# 
  8726     018C                     	;# 
  8727     018D                     	;# 
  8728     018E                     	;# 
  8729     018F                     	;# 
  8730     0190                     	;# 
  8731     0191                     	;# 
  8732     0192                     	;# 
  8733     0196                     	;# 
  8734     0197                     	;# 
  8735     0198                     	;# 
  8736     0199                     	;# 
  8737     019A                     	;# 
  8738     019B                     	;# 
  8739     019C                     	;# 
  8740     020C                     	;# 
  8741     020D                     	;# 
  8742     020E                     	;# 
  8743     020E                     	;# 
  8744     020F                     	;# 
  8745     020F                     	;# 
  8746     0210                     	;# 
  8747     0210                     	;# 
  8748     0211                     	;# 
  8749     0211                     	;# 
  8750     0212                     	;# 
  8751     0213                     	;# 
  8752     0214                     	;# 
  8753     0214                     	;# 
  8754     0215                     	;# 
  8755     0215                     	;# 
  8756     0216                     	;# 
  8757     0216                     	;# 
  8758     0217                     	;# 
  8759     0217                     	;# 
  8760     0218                     	;# 
  8761     0219                     	;# 
  8762     021A                     	;# 
  8763     021A                     	;# 
  8764     021B                     	;# 
  8765     021B                     	;# 
  8766     021C                     	;# 
  8767     021C                     	;# 
  8768     021D                     	;# 
  8769     021D                     	;# 
  8770     021E                     	;# 
  8771     021F                     	;# 
  8772     028C                     	;# 
  8773     028C                     	;# 
  8774     028D                     	;# 
  8775     028D                     	;# 
  8776     028E                     	;# 
  8777     028F                     	;# 
  8778     0290                     	;# 
  8779     0291                     	;# 
  8780     0292                     	;# 
  8781     0292                     	;# 
  8782     0293                     	;# 
  8783     0293                     	;# 
  8784     0294                     	;# 
  8785     0295                     	;# 
  8786     0296                     	;# 
  8787     0297                     	;# 
  8788     0298                     	;# 
  8789     0298                     	;# 
  8790     0299                     	;# 
  8791     0299                     	;# 
  8792     029A                     	;# 
  8793     029B                     	;# 
  8794     029C                     	;# 
  8795     029D                     	;# 
  8796     029F                     	;# 
  8797     030C                     	;# 
  8798     030C                     	;# 
  8799     030D                     	;# 
  8800     030E                     	;# 
  8801     030F                     	;# 
  8802     0310                     	;# 
  8803     0310                     	;# 
  8804     0311                     	;# 
  8805     0312                     	;# 
  8806     0313                     	;# 
  8807     0314                     	;# 
  8808     0314                     	;# 
  8809     0315                     	;# 
  8810     0316                     	;# 
  8811     0317                     	;# 
  8812     0318                     	;# 
  8813     0318                     	;# 
  8814     0319                     	;# 
  8815     031A                     	;# 
  8816     031B                     	;# 
  8817     031C                     	;# 
  8818     031C                     	;# 
  8819     031D                     	;# 
  8820     031E                     	;# 
  8821     031F                     	;# 
  8822     038C                     	;# 
  8823     038C                     	;# 
  8824     038D                     	;# 
  8825     038E                     	;# 
  8826     0390                     	;# 
  8827     0390                     	;# 
  8828     0391                     	;# 
  8829     0392                     	;# 
  8830     048C                     	;# 
  8831     048C                     	;# 
  8832     048D                     	;# 
  8833     048E                     	;# 
  8834     048F                     	;# 
  8835     048F                     	;# 
  8836     0490                     	;# 
  8837     0491                     	;# 
  8838     0492                     	;# 
  8839     0492                     	;# 
  8840     0493                     	;# 
  8841     0494                     	;# 
  8842     0495                     	;# 
  8843     0495                     	;# 
  8844     0496                     	;# 
  8845     0497                     	;# 
  8846     0498                     	;# 
  8847     0499                     	;# 
  8848     049A                     	;# 
  8849     049B                     	;# 
  8850     049C                     	;# 
  8851     049D                     	;# 
  8852     050C                     	;# 
  8853     050C                     	;# 
  8854     050D                     	;# 
  8855     050E                     	;# 
  8856     050F                     	;# 
  8857     050F                     	;# 
  8858     0510                     	;# 
  8859     0511                     	;# 
  8860     0512                     	;# 
  8861     0512                     	;# 
  8862     0513                     	;# 
  8863     0514                     	;# 
  8864     0515                     	;# 
  8865     0515                     	;# 
  8866     0516                     	;# 
  8867     0517                     	;# 
  8868     0518                     	;# 
  8869     0519                     	;# 
  8870     051A                     	;# 
  8871     051B                     	;# 
  8872     051C                     	;# 
  8873     051D                     	;# 
  8874     058C                     	;# 
  8875     058C                     	;# 
  8876     058D                     	;# 
  8877     058E                     	;# 
  8878     058F                     	;# 
  8879     058F                     	;# 
  8880     0590                     	;# 
  8881     0591                     	;# 
  8882     0592                     	;# 
  8883     0593                     	;# 
  8884     059C                     	;# 
  8885     059C                     	;# 
  8886     059D                     	;# 
  8887     059D                     	;# 
  8888     059E                     	;# 
  8889     059F                     	;# 
  8890     060C                     	;# 
  8891     060C                     	;# 
  8892     060D                     	;# 
  8893     060D                     	;# 
  8894     060E                     	;# 
  8895     060F                     	;# 
  8896     0610                     	;# 
  8897     0611                     	;# 
  8898     0612                     	;# 
  8899     0613                     	;# 
  8900     0614                     	;# 
  8901     0616                     	;# 
  8902     0616                     	;# 
  8903     0617                     	;# 
  8904     0617                     	;# 
  8905     0618                     	;# 
  8906     0619                     	;# 
  8907     061A                     	;# 
  8908     061B                     	;# 
  8909     061C                     	;# 
  8910     061D                     	;# 
  8911     061E                     	;# 
  8912     068C                     	;# 
  8913     068D                     	;# 
  8914     068E                     	;# 
  8915     068F                     	;# 
  8916     0690                     	;# 
  8917     0691                     	;# 
  8918     0692                     	;# 
  8919     0693                     	;# 
  8920     0694                     	;# 
  8921     070C                     	;# 
  8922     070D                     	;# 
  8923     070E                     	;# 
  8924     070F                     	;# 
  8925     0710                     	;# 
  8926     0711                     	;# 
  8927     0712                     	;# 
  8928     0713                     	;# 
  8929     0714                     	;# 
  8930     0716                     	;# 
  8931     0717                     	;# 
  8932     0718                     	;# 
  8933     0719                     	;# 
  8934     071A                     	;# 
  8935     071B                     	;# 
  8936     071C                     	;# 
  8937     071D                     	;# 
  8938     071E                     	;# 
  8939     0796                     	;# 
  8940     0797                     	;# 
  8941     0798                     	;# 
  8942     0799                     	;# 
  8943     079A                     	;# 
  8944     079B                     	;# 
  8945     079C                     	;# 
  8946     079D                     	;# 
  8947     080C                     	;# 
  8948     080D                     	;# 
  8949     080E                     	;# 
  8950     080F                     	;# 
  8951     0810                     	;# 
  8952     0811                     	;# 
  8953     0813                     	;# 
  8954     0814                     	;# 
  8955     081A                     	;# 
  8956     081A                     	;# 
  8957     081B                     	;# 
  8958     081C                     	;# 
  8959     081C                     	;# 
  8960     081D                     	;# 
  8961     081E                     	;# 
  8962     081F                     	;# 
  8963     088C                     	;# 
  8964     088D                     	;# 
  8965     088E                     	;# 
  8966     088F                     	;# 
  8967     0890                     	;# 
  8968     0891                     	;# 
  8969     0892                     	;# 
  8970     0893                     	;# 
  8971     0895                     	;# 
  8972     0896                     	;# 
  8973     0897                     	;# 
  8974     0898                     	;# 
  8975     0899                     	;# 
  8976     089A                     	;# 
  8977     089B                     	;# 
  8978     090C                     	;# 
  8979     090E                     	;# 
  8980     090F                     	;# 
  8981     091F                     	;# 
  8982     098F                     	;# 
  8983     098F                     	;# 
  8984     0990                     	;# 
  8985     0991                     	;# 
  8986     0992                     	;# 
  8987     0993                     	;# 
  8988     0994                     	;# 
  8989     0995                     	;# 
  8990     0996                     	;# 
  8991     0997                     	;# 
  8992     0A19                     	;# 
  8993     0A19                     	;# 
  8994     0A1A                     	;# 
  8995     0A1A                     	;# 
  8996     0A1B                     	;# 
  8997     0A1B                     	;# 
  8998     0A1B                     	;# 
  8999     0A1C                     	;# 
  9000     0A1C                     	;# 
  9001     0A1D                     	;# 
  9002     0A1D                     	;# 
  9003     0A1E                     	;# 
  9004     0A1E                     	;# 
  9005     0A1F                     	;# 
  9006     0A1F                     	;# 
  9007     0A1F                     	;# 
  9008     1E0F                     	;# 
  9009     1E10                     	;# 
  9010     1E11                     	;# 
  9011     1E12                     	;# 
  9012     1E13                     	;# 
  9013     1E14                     	;# 
  9014     1E15                     	;# 
  9015     1E16                     	;# 
  9016     1E17                     	;# 
  9017     1E18                     	;# 
  9018     1E19                     	;# 
  9019     1E1A                     	;# 
  9020     1E1B                     	;# 
  9021     1E1C                     	;# 
  9022     1E1D                     	;# 
  9023     1E1E                     	;# 
  9024     1E1F                     	;# 
  9025     1E20                     	;# 
  9026     1E21                     	;# 
  9027     1E22                     	;# 
  9028     1E23                     	;# 
  9029     1E24                     	;# 
  9030     1E25                     	;# 
  9031     1E26                     	;# 
  9032     1E27                     	;# 
  9033     1E28                     	;# 
  9034     1E29                     	;# 
  9035     1E2A                     	;# 
  9036     1E2B                     	;# 
  9037     1E2C                     	;# 
  9038     1E2D                     	;# 
  9039     1E2E                     	;# 
  9040     1E2F                     	;# 
  9041     1E30                     	;# 
  9042     1E31                     	;# 
  9043     1E32                     	;# 
  9044     1E33                     	;# 
  9045     1E34                     	;# 
  9046     1E35                     	;# 
  9047     1E36                     	;# 
  9048     1E37                     	;# 
  9049     1E8F                     	;# 
  9050     1E90                     	;# 
  9051     1E91                     	;# 
  9052     1E92                     	;# 
  9053     1E93                     	;# 
  9054     1E94                     	;# 
  9055     1E95                     	;# 
  9056     1E96                     	;# 
  9057     1E97                     	;# 
  9058     1E9C                     	;# 
  9059     1E9D                     	;# 
  9060     1E9E                     	;# 
  9061     1EA1                     	;# 
  9062     1EA2                     	;# 
  9063     1EA3                     	;# 
  9064     1EA4                     	;# 
  9065     1EA5                     	;# 
  9066     1EA9                     	;# 
  9067     1EAA                     	;# 
  9068     1EAB                     	;# 
  9069     1EAC                     	;# 
  9070     1EB1                     	;# 
  9071     1EB2                     	;# 
  9072     1EB3                     	;# 
  9073     1EB8                     	;# 
  9074     1EB9                     	;# 
  9075     1EBA                     	;# 
  9076     1EBB                     	;# 
  9077     1EBC                     	;# 
  9078     1EBD                     	;# 
  9079     1EBE                     	;# 
  9080     1EC3                     	;# 
  9081     1EC5                     	;# 
  9082     1EC6                     	;# 
  9083     1EC7                     	;# 
  9084     1EC8                     	;# 
  9085     1EC9                     	;# 
  9086     1ECA                     	;# 
  9087     1ECB                     	;# 
  9088     1ECC                     	;# 
  9089     1ECD                     	;# 
  9090     1ECE                     	;# 
  9091     1F10                     	;# 
  9092     1F11                     	;# 
  9093     1F12                     	;# 
  9094     1F13                     	;# 
  9095     1F14                     	;# 
  9096     1F15                     	;# 
  9097     1F16                     	;# 
  9098     1F17                     	;# 
  9099     1F18                     	;# 
  9100     1F19                     	;# 
  9101     1F1A                     	;# 
  9102     1F1B                     	;# 
  9103     1F1C                     	;# 
  9104     1F1D                     	;# 
  9105     1F1E                     	;# 
  9106     1F1F                     	;# 
  9107     1F20                     	;# 
  9108     1F21                     	;# 
  9109     1F22                     	;# 
  9110     1F23                     	;# 
  9111     1F24                     	;# 
  9112     1F25                     	;# 
  9113     1F26                     	;# 
  9114     1F27                     	;# 
  9115     1F38                     	;# 
  9116     1F39                     	;# 
  9117     1F3A                     	;# 
  9118     1F3B                     	;# 
  9119     1F3C                     	;# 
  9120     1F3D                     	;# 
  9121     1F3E                     	;# 
  9122     1F3F                     	;# 
  9123     1F43                     	;# 
  9124     1F44                     	;# 
  9125     1F45                     	;# 
  9126     1F46                     	;# 
  9127     1F47                     	;# 
  9128     1F48                     	;# 
  9129     1F49                     	;# 
  9130     1F4A                     	;# 
  9131     1F4E                     	;# 
  9132     1F4F                     	;# 
  9133     1F50                     	;# 
  9134     1F51                     	;# 
  9135     1F52                     	;# 
  9136     1F53                     	;# 
  9137     1F54                     	;# 
  9138     1F55                     	;# 
  9139     1F65                     	;# 
  9140     1F66                     	;# 
  9141     1F67                     	;# 
  9142     1F68                     	;# 
  9143     1F69                     	;# 
  9144     1F6A                     	;# 
  9145     1F6B                     	;# 
  9146     1FE4                     	;# 
  9147     1FE5                     	;# 
  9148     1FE6                     	;# 
  9149     1FE7                     	;# 
  9150     1FE8                     	;# 
  9151     1FE8                     	;# 
  9152     1FE9                     	;# 
  9153     1FEA                     	;# 
  9154     1FEB                     	;# 
  9155     1FED                     	;# 
  9156     1FEE                     	;# 
  9157     1FEF                     	;# 
  9158     0000                     	;# 
  9159     0001                     	;# 
  9160     0002                     	;# 
  9161     0003                     	;# 
  9162     0004                     	;# 
  9163     0005                     	;# 
  9164     0006                     	;# 
  9165     0007                     	;# 
  9166     0008                     	;# 
  9167     0009                     	;# 
  9168     000A                     	;# 
  9169     000B                     	;# 
  9170     000C                     	;# 
  9171     000D                     	;# 
  9172     000E                     	;# 
  9173     0010                     	;# 
  9174     0012                     	;# 
  9175     0013                     	;# 
  9176     0014                     	;# 
  9177     0016                     	;# 
  9178     0018                     	;# 
  9179     0019                     	;# 
  9180     001A                     	;# 
  9181     001C                     	;# 
  9182     008C                     	;# 
  9183     008C                     	;# 
  9184     008D                     	;# 
  9185     008E                     	;# 
  9186     008E                     	;# 
  9187     008F                     	;# 
  9188     0090                     	;# 
  9189     0090                     	;# 
  9190     0091                     	;# 
  9191     0092                     	;# 
  9192     0092                     	;# 
  9193     0093                     	;# 
  9194     0094                     	;# 
  9195     0094                     	;# 
  9196     0095                     	;# 
  9197     0096                     	;# 
  9198     0096                     	;# 
  9199     0097                     	;# 
  9200     0098                     	;# 
  9201     0099                     	;# 
  9202     009A                     	;# 
  9203     009B                     	;# 
  9204     009B                     	;# 
  9205     009C                     	;# 
  9206     009D                     	;# 
  9207     009D                     	;# 
  9208     009E                     	;# 
  9209     009F                     	;# 
  9210     010C                     	;# 
  9211     010C                     	;# 
  9212     010D                     	;# 
  9213     010E                     	;# 
  9214     010F                     	;# 
  9215     010F                     	;# 
  9216     0110                     	;# 
  9217     0111                     	;# 
  9218     0112                     	;# 
  9219     0113                     	;# 
  9220     0114                     	;# 
  9221     0115                     	;# 
  9222     0116                     	;# 
  9223     0117                     	;# 
  9224     0118                     	;# 
  9225     0119                     	;# 
  9226     0119                     	;# 
  9227     0119                     	;# 
  9228     011A                     	;# 
  9229     011A                     	;# 
  9230     011A                     	;# 
  9231     011B                     	;# 
  9232     011B                     	;# 
  9233     011B                     	;# 
  9234     011B                     	;# 
  9235     011B                     	;# 
  9236     011C                     	;# 
  9237     011C                     	;# 
  9238     011C                     	;# 
  9239     011D                     	;# 
  9240     011D                     	;# 
  9241     011D                     	;# 
  9242     011E                     	;# 
  9243     011E                     	;# 
  9244     011E                     	;# 
  9245     011F                     	;# 
  9246     011F                     	;# 
  9247     011F                     	;# 
  9248     011F                     	;# 
  9249     011F                     	;# 
  9250     018C                     	;# 
  9251     018D                     	;# 
  9252     018E                     	;# 
  9253     018F                     	;# 
  9254     0190                     	;# 
  9255     0191                     	;# 
  9256     0192                     	;# 
  9257     0196                     	;# 
  9258     0197                     	;# 
  9259     0198                     	;# 
  9260     0199                     	;# 
  9261     019A                     	;# 
  9262     019B                     	;# 
  9263     019C                     	;# 
  9264     020C                     	;# 
  9265     020D                     	;# 
  9266     020E                     	;# 
  9267     020E                     	;# 
  9268     020F                     	;# 
  9269     020F                     	;# 
  9270     0210                     	;# 
  9271     0210                     	;# 
  9272     0211                     	;# 
  9273     0211                     	;# 
  9274     0212                     	;# 
  9275     0213                     	;# 
  9276     0214                     	;# 
  9277     0214                     	;# 
  9278     0215                     	;# 
  9279     0215                     	;# 
  9280     0216                     	;# 
  9281     0216                     	;# 
  9282     0217                     	;# 
  9283     0217                     	;# 
  9284     0218                     	;# 
  9285     0219                     	;# 
  9286     021A                     	;# 
  9287     021A                     	;# 
  9288     021B                     	;# 
  9289     021B                     	;# 
  9290     021C                     	;# 
  9291     021C                     	;# 
  9292     021D                     	;# 
  9293     021D                     	;# 
  9294     021E                     	;# 
  9295     021F                     	;# 
  9296     028C                     	;# 
  9297     028C                     	;# 
  9298     028D                     	;# 
  9299     028D                     	;# 
  9300     028E                     	;# 
  9301     028F                     	;# 
  9302     0290                     	;# 
  9303     0291                     	;# 
  9304     0292                     	;# 
  9305     0292                     	;# 
  9306     0293                     	;# 
  9307     0293                     	;# 
  9308     0294                     	;# 
  9309     0295                     	;# 
  9310     0296                     	;# 
  9311     0297                     	;# 
  9312     0298                     	;# 
  9313     0298                     	;# 
  9314     0299                     	;# 
  9315     0299                     	;# 
  9316     029A                     	;# 
  9317     029B                     	;# 
  9318     029C                     	;# 
  9319     029D                     	;# 
  9320     029F                     	;# 
  9321     030C                     	;# 
  9322     030C                     	;# 
  9323     030D                     	;# 
  9324     030E                     	;# 
  9325     030F                     	;# 
  9326     0310                     	;# 
  9327     0310                     	;# 
  9328     0311                     	;# 
  9329     0312                     	;# 
  9330     0313                     	;# 
  9331     0314                     	;# 
  9332     0314                     	;# 
  9333     0315                     	;# 
  9334     0316                     	;# 
  9335     0317                     	;# 
  9336     0318                     	;# 
  9337     0318                     	;# 
  9338     0319                     	;# 
  9339     031A                     	;# 
  9340     031B                     	;# 
  9341     031C                     	;# 
  9342     031C                     	;# 
  9343     031D                     	;# 
  9344     031E                     	;# 
  9345     031F                     	;# 
  9346     038C                     	;# 
  9347     038C                     	;# 
  9348     038D                     	;# 
  9349     038E                     	;# 
  9350     0390                     	;# 
  9351     0390                     	;# 
  9352     0391                     	;# 
  9353     0392                     	;# 
  9354     048C                     	;# 
  9355     048C                     	;# 
  9356     048D                     	;# 
  9357     048E                     	;# 
  9358     048F                     	;# 
  9359     048F                     	;# 
  9360     0490                     	;# 
  9361     0491                     	;# 
  9362     0492                     	;# 
  9363     0492                     	;# 
  9364     0493                     	;# 
  9365     0494                     	;# 
  9366     0495                     	;# 
  9367     0495                     	;# 
  9368     0496                     	;# 
  9369     0497                     	;# 
  9370     0498                     	;# 
  9371     0499                     	;# 
  9372     049A                     	;# 
  9373     049B                     	;# 
  9374     049C                     	;# 
  9375     049D                     	;# 
  9376     050C                     	;# 
  9377     050C                     	;# 
  9378     050D                     	;# 
  9379     050E                     	;# 
  9380     050F                     	;# 
  9381     050F                     	;# 
  9382     0510                     	;# 
  9383     0511                     	;# 
  9384     0512                     	;# 
  9385     0512                     	;# 
  9386     0513                     	;# 
  9387     0514                     	;# 
  9388     0515                     	;# 
  9389     0515                     	;# 
  9390     0516                     	;# 
  9391     0517                     	;# 
  9392     0518                     	;# 
  9393     0519                     	;# 
  9394     051A                     	;# 
  9395     051B                     	;# 
  9396     051C                     	;# 
  9397     051D                     	;# 
  9398     058C                     	;# 
  9399     058C                     	;# 
  9400     058D                     	;# 
  9401     058E                     	;# 
  9402     058F                     	;# 
  9403     058F                     	;# 
  9404     0590                     	;# 
  9405     0591                     	;# 
  9406     0592                     	;# 
  9407     0593                     	;# 
  9408     059C                     	;# 
  9409     059C                     	;# 
  9410     059D                     	;# 
  9411     059D                     	;# 
  9412     059E                     	;# 
  9413     059F                     	;# 
  9414     060C                     	;# 
  9415     060C                     	;# 
  9416     060D                     	;# 
  9417     060D                     	;# 
  9418     060E                     	;# 
  9419     060F                     	;# 
  9420     0610                     	;# 
  9421     0611                     	;# 
  9422     0612                     	;# 
  9423     0613                     	;# 
  9424     0614                     	;# 
  9425     0616                     	;# 
  9426     0616                     	;# 
  9427     0617                     	;# 
  9428     0617                     	;# 
  9429     0618                     	;# 
  9430     0619                     	;# 
  9431     061A                     	;# 
  9432     061B                     	;# 
  9433     061C                     	;# 
  9434     061D                     	;# 
  9435     061E                     	;# 
  9436     068C                     	;# 
  9437     068D                     	;# 
  9438     068E                     	;# 
  9439     068F                     	;# 
  9440     0690                     	;# 
  9441     0691                     	;# 
  9442     0692                     	;# 
  9443     0693                     	;# 
  9444     0694                     	;# 
  9445     070C                     	;# 
  9446     070D                     	;# 
  9447     070E                     	;# 
  9448     070F                     	;# 
  9449     0710                     	;# 
  9450     0711                     	;# 
  9451     0712                     	;# 
  9452     0713                     	;# 
  9453     0714                     	;# 
  9454     0716                     	;# 
  9455     0717                     	;# 
  9456     0718                     	;# 
  9457     0719                     	;# 
  9458     071A                     	;# 
  9459     071B                     	;# 
  9460     071C                     	;# 
  9461     071D                     	;# 
  9462     071E                     	;# 
  9463     0796                     	;# 
  9464     0797                     	;# 
  9465     0798                     	;# 
  9466     0799                     	;# 
  9467     079A                     	;# 
  9468     079B                     	;# 
  9469     079C                     	;# 
  9470     079D                     	;# 
  9471     080C                     	;# 
  9472     080D                     	;# 
  9473     080E                     	;# 
  9474     080F                     	;# 
  9475     0810                     	;# 
  9476     0811                     	;# 
  9477     0813                     	;# 
  9478     0814                     	;# 
  9479     081A                     	;# 
  9480     081A                     	;# 
  9481     081B                     	;# 
  9482     081C                     	;# 
  9483     081C                     	;# 
  9484     081D                     	;# 
  9485     081E                     	;# 
  9486     081F                     	;# 
  9487     088C                     	;# 
  9488     088D                     	;# 
  9489     088E                     	;# 
  9490     088F                     	;# 
  9491     0890                     	;# 
  9492     0891                     	;# 
  9493     0892                     	;# 
  9494     0893                     	;# 
  9495     0895                     	;# 
  9496     0896                     	;# 
  9497     0897                     	;# 
  9498     0898                     	;# 
  9499     0899                     	;# 
  9500     089A                     	;# 
  9501     089B                     	;# 
  9502     090C                     	;# 
  9503     090E                     	;# 
  9504     090F                     	;# 
  9505     091F                     	;# 
  9506     098F                     	;# 
  9507     098F                     	;# 
  9508     0990                     	;# 
  9509     0991                     	;# 
  9510     0992                     	;# 
  9511     0993                     	;# 
  9512     0994                     	;# 
  9513     0995                     	;# 
  9514     0996                     	;# 
  9515     0997                     	;# 
  9516     0A19                     	;# 
  9517     0A19                     	;# 
  9518     0A1A                     	;# 
  9519     0A1A                     	;# 
  9520     0A1B                     	;# 
  9521     0A1B                     	;# 
  9522     0A1B                     	;# 
  9523     0A1C                     	;# 
  9524     0A1C                     	;# 
  9525     0A1D                     	;# 
  9526     0A1D                     	;# 
  9527     0A1E                     	;# 
  9528     0A1E                     	;# 
  9529     0A1F                     	;# 
  9530     0A1F                     	;# 
  9531     0A1F                     	;# 
  9532     1E0F                     	;# 
  9533     1E10                     	;# 
  9534     1E11                     	;# 
  9535     1E12                     	;# 
  9536     1E13                     	;# 
  9537     1E14                     	;# 
  9538     1E15                     	;# 
  9539     1E16                     	;# 
  9540     1E17                     	;# 
  9541     1E18                     	;# 
  9542     1E19                     	;# 
  9543     1E1A                     	;# 
  9544     1E1B                     	;# 
  9545     1E1C                     	;# 
  9546     1E1D                     	;# 
  9547     1E1E                     	;# 
  9548     1E1F                     	;# 
  9549     1E20                     	;# 
  9550     1E21                     	;# 
  9551     1E22                     	;# 
  9552     1E23                     	;# 
  9553     1E24                     	;# 
  9554     1E25                     	;# 
  9555     1E26                     	;# 
  9556     1E27                     	;# 
  9557     1E28                     	;# 
  9558     1E29                     	;# 
  9559     1E2A                     	;# 
  9560     1E2B                     	;# 
  9561     1E2C                     	;# 
  9562     1E2D                     	;# 
  9563     1E2E                     	;# 
  9564     1E2F                     	;# 
  9565     1E30                     	;# 
  9566     1E31                     	;# 
  9567     1E32                     	;# 
  9568     1E33                     	;# 
  9569     1E34                     	;# 
  9570     1E35                     	;# 
  9571     1E36                     	;# 
  9572     1E37                     	;# 
  9573     1E8F                     	;# 
  9574     1E90                     	;# 
  9575     1E91                     	;# 
  9576     1E92                     	;# 
  9577     1E93                     	;# 
  9578     1E94                     	;# 
  9579     1E95                     	;# 
  9580     1E96                     	;# 
  9581     1E97                     	;# 
  9582     1E9C                     	;# 
  9583     1E9D                     	;# 
  9584     1E9E                     	;# 
  9585     1EA1                     	;# 
  9586     1EA2                     	;# 
  9587     1EA3                     	;# 
  9588     1EA4                     	;# 
  9589     1EA5                     	;# 
  9590     1EA9                     	;# 
  9591     1EAA                     	;# 
  9592     1EAB                     	;# 
  9593     1EAC                     	;# 
  9594     1EB1                     	;# 
  9595     1EB2                     	;# 
  9596     1EB3                     	;# 
  9597     1EB8                     	;# 
  9598     1EB9                     	;# 
  9599     1EBA                     	;# 
  9600     1EBB                     	;# 
  9601     1EBC                     	;# 
  9602     1EBD                     	;# 
  9603     1EBE                     	;# 
  9604     1EC3                     	;# 
  9605     1EC5                     	;# 
  9606     1EC6                     	;# 
  9607     1EC7                     	;# 
  9608     1EC8                     	;# 
  9609     1EC9                     	;# 
  9610     1ECA                     	;# 
  9611     1ECB                     	;# 
  9612     1ECC                     	;# 
  9613     1ECD                     	;# 
  9614     1ECE                     	;# 
  9615     1F10                     	;# 
  9616     1F11                     	;# 
  9617     1F12                     	;# 
  9618     1F13                     	;# 
  9619     1F14                     	;# 
  9620     1F15                     	;# 
  9621     1F16                     	;# 
  9622     1F17                     	;# 
  9623     1F18                     	;# 
  9624     1F19                     	;# 
  9625     1F1A                     	;# 
  9626     1F1B                     	;# 
  9627     1F1C                     	;# 
  9628     1F1D                     	;# 
  9629     1F1E                     	;# 
  9630     1F1F                     	;# 
  9631     1F20                     	;# 
  9632     1F21                     	;# 
  9633     1F22                     	;# 
  9634     1F23                     	;# 
  9635     1F24                     	;# 
  9636     1F25                     	;# 
  9637     1F26                     	;# 
  9638     1F27                     	;# 
  9639     1F38                     	;# 
  9640     1F39                     	;# 
  9641     1F3A                     	;# 
  9642     1F3B                     	;# 
  9643     1F3C                     	;# 
  9644     1F3D                     	;# 
  9645     1F3E                     	;# 
  9646     1F3F                     	;# 
  9647     1F43                     	;# 
  9648     1F44                     	;# 
  9649     1F45                     	;# 
  9650     1F46                     	;# 
  9651     1F47                     	;# 
  9652     1F48                     	;# 
  9653     1F49                     	;# 
  9654     1F4A                     	;# 
  9655     1F4E                     	;# 
  9656     1F4F                     	;# 
  9657     1F50                     	;# 
  9658     1F51                     	;# 
  9659     1F52                     	;# 
  9660     1F53                     	;# 
  9661     1F54                     	;# 
  9662     1F55                     	;# 
  9663     1F65                     	;# 
  9664     1F66                     	;# 
  9665     1F67                     	;# 
  9666     1F68                     	;# 
  9667     1F69                     	;# 
  9668     1F6A                     	;# 
  9669     1F6B                     	;# 
  9670     1FE4                     	;# 
  9671     1FE5                     	;# 
  9672     1FE6                     	;# 
  9673     1FE7                     	;# 
  9674     1FE8                     	;# 
  9675     1FE8                     	;# 
  9676     1FE9                     	;# 
  9677     1FEA                     	;# 
  9678     1FEB                     	;# 
  9679     1FED                     	;# 
  9680     1FEE                     	;# 
  9681     1FEF                     	;# 
  9682     0000                     	;# 
  9683     0001                     	;# 
  9684     0002                     	;# 
  9685     0003                     	;# 
  9686     0004                     	;# 
  9687     0005                     	;# 
  9688     0006                     	;# 
  9689     0007                     	;# 
  9690     0008                     	;# 
  9691     0009                     	;# 
  9692     000A                     	;# 
  9693     000B                     	;# 
  9694     000C                     	;# 
  9695     000D                     	;# 
  9696     000E                     	;# 
  9697     0010                     	;# 
  9698     0012                     	;# 
  9699     0013                     	;# 
  9700     0014                     	;# 
  9701     0016                     	;# 
  9702     0018                     	;# 
  9703     0019                     	;# 
  9704     001A                     	;# 
  9705     001C                     	;# 
  9706     008C                     	;# 
  9707     008C                     	;# 
  9708     008D                     	;# 
  9709     008E                     	;# 
  9710     008E                     	;# 
  9711     008F                     	;# 
  9712     0090                     	;# 
  9713     0090                     	;# 
  9714     0091                     	;# 
  9715     0092                     	;# 
  9716     0092                     	;# 
  9717     0093                     	;# 
  9718     0094                     	;# 
  9719     0094                     	;# 
  9720     0095                     	;# 
  9721     0096                     	;# 
  9722     0096                     	;# 
  9723     0097                     	;# 
  9724     0098                     	;# 
  9725     0099                     	;# 
  9726     009A                     	;# 
  9727     009B                     	;# 
  9728     009B                     	;# 
  9729     009C                     	;# 
  9730     009D                     	;# 
  9731     009D                     	;# 
  9732     009E                     	;# 
  9733     009F                     	;# 
  9734     010C                     	;# 
  9735     010C                     	;# 
  9736     010D                     	;# 
  9737     010E                     	;# 
  9738     010F                     	;# 
  9739     010F                     	;# 
  9740     0110                     	;# 
  9741     0111                     	;# 
  9742     0112                     	;# 
  9743     0113                     	;# 
  9744     0114                     	;# 
  9745     0115                     	;# 
  9746     0116                     	;# 
  9747     0117                     	;# 
  9748     0118                     	;# 
  9749     0119                     	;# 
  9750     0119                     	;# 
  9751     0119                     	;# 
  9752     011A                     	;# 
  9753     011A                     	;# 
  9754     011A                     	;# 
  9755     011B                     	;# 
  9756     011B                     	;# 
  9757     011B                     	;# 
  9758     011B                     	;# 
  9759     011B                     	;# 
  9760     011C                     	;# 
  9761     011C                     	;# 
  9762     011C                     	;# 
  9763     011D                     	;# 
  9764     011D                     	;# 
  9765     011D                     	;# 
  9766     011E                     	;# 
  9767     011E                     	;# 
  9768     011E                     	;# 
  9769     011F                     	;# 
  9770     011F                     	;# 
  9771     011F                     	;# 
  9772     011F                     	;# 
  9773     011F                     	;# 
  9774     018C                     	;# 
  9775     018D                     	;# 
  9776     018E                     	;# 
  9777     018F                     	;# 
  9778     0190                     	;# 
  9779     0191                     	;# 
  9780     0192                     	;# 
  9781     0196                     	;# 
  9782     0197                     	;# 
  9783     0198                     	;# 
  9784     0199                     	;# 
  9785     019A                     	;# 
  9786     019B                     	;# 
  9787     019C                     	;# 
  9788     020C                     	;# 
  9789     020D                     	;# 
  9790     020E                     	;# 
  9791     020E                     	;# 
  9792     020F                     	;# 
  9793     020F                     	;# 
  9794     0210                     	;# 
  9795     0210                     	;# 
  9796     0211                     	;# 
  9797     0211                     	;# 
  9798     0212                     	;# 
  9799     0213                     	;# 
  9800     0214                     	;# 
  9801     0214                     	;# 
  9802     0215                     	;# 
  9803     0215                     	;# 
  9804     0216                     	;# 
  9805     0216                     	;# 
  9806     0217                     	;# 
  9807     0217                     	;# 
  9808     0218                     	;# 
  9809     0219                     	;# 
  9810     021A                     	;# 
  9811     021A                     	;# 
  9812     021B                     	;# 
  9813     021B                     	;# 
  9814     021C                     	;# 
  9815     021C                     	;# 
  9816     021D                     	;# 
  9817     021D                     	;# 
  9818     021E                     	;# 
  9819     021F                     	;# 
  9820     028C                     	;# 
  9821     028C                     	;# 
  9822     028D                     	;# 
  9823     028D                     	;# 
  9824     028E                     	;# 
  9825     028F                     	;# 
  9826     0290                     	;# 
  9827     0291                     	;# 
  9828     0292                     	;# 
  9829     0292                     	;# 
  9830     0293                     	;# 
  9831     0293                     	;# 
  9832     0294                     	;# 
  9833     0295                     	;# 
  9834     0296                     	;# 
  9835     0297                     	;# 
  9836     0298                     	;# 
  9837     0298                     	;# 
  9838     0299                     	;# 
  9839     0299                     	;# 
  9840     029A                     	;# 
  9841     029B                     	;# 
  9842     029C                     	;# 
  9843     029D                     	;# 
  9844     029F                     	;# 
  9845     030C                     	;# 
  9846     030C                     	;# 
  9847     030D                     	;# 
  9848     030E                     	;# 
  9849     030F                     	;# 
  9850     0310                     	;# 
  9851     0310                     	;# 
  9852     0311                     	;# 
  9853     0312                     	;# 
  9854     0313                     	;# 
  9855     0314                     	;# 
  9856     0314                     	;# 
  9857     0315                     	;# 
  9858     0316                     	;# 
  9859     0317                     	;# 
  9860     0318                     	;# 
  9861     0318                     	;# 
  9862     0319                     	;# 
  9863     031A                     	;# 
  9864     031B                     	;# 
  9865     031C                     	;# 
  9866     031C                     	;# 
  9867     031D                     	;# 
  9868     031E                     	;# 
  9869     031F                     	;# 
  9870     038C                     	;# 
  9871     038C                     	;# 
  9872     038D                     	;# 
  9873     038E                     	;# 
  9874     0390                     	;# 
  9875     0390                     	;# 
  9876     0391                     	;# 
  9877     0392                     	;# 
  9878     048C                     	;# 
  9879     048C                     	;# 
  9880     048D                     	;# 
  9881     048E                     	;# 
  9882     048F                     	;# 
  9883     048F                     	;# 
  9884     0490                     	;# 
  9885     0491                     	;# 
  9886     0492                     	;# 
  9887     0492                     	;# 
  9888     0493                     	;# 
  9889     0494                     	;# 
  9890     0495                     	;# 
  9891     0495                     	;# 
  9892     0496                     	;# 
  9893     0497                     	;# 
  9894     0498                     	;# 
  9895     0499                     	;# 
  9896     049A                     	;# 
  9897     049B                     	;# 
  9898     049C                     	;# 
  9899     049D                     	;# 
  9900     050C                     	;# 
  9901     050C                     	;# 
  9902     050D                     	;# 
  9903     050E                     	;# 
  9904     050F                     	;# 
  9905     050F                     	;# 
  9906     0510                     	;# 
  9907     0511                     	;# 
  9908     0512                     	;# 
  9909     0512                     	;# 
  9910     0513                     	;# 
  9911     0514                     	;# 
  9912     0515                     	;# 
  9913     0515                     	;# 
  9914     0516                     	;# 
  9915     0517                     	;# 
  9916     0518                     	;# 
  9917     0519                     	;# 
  9918     051A                     	;# 
  9919     051B                     	;# 
  9920     051C                     	;# 
  9921     051D                     	;# 
  9922     058C                     	;# 
  9923     058C                     	;# 
  9924     058D                     	;# 
  9925     058E                     	;# 
  9926     058F                     	;# 
  9927     058F                     	;# 
  9928     0590                     	;# 
  9929     0591                     	;# 
  9930     0592                     	;# 
  9931     0593                     	;# 
  9932     059C                     	;# 
  9933     059C                     	;# 
  9934     059D                     	;# 
  9935     059D                     	;# 
  9936     059E                     	;# 
  9937     059F                     	;# 
  9938     060C                     	;# 
  9939     060C                     	;# 
  9940     060D                     	;# 
  9941     060D                     	;# 
  9942     060E                     	;# 
  9943     060F                     	;# 
  9944     0610                     	;# 
  9945     0611                     	;# 
  9946     0612                     	;# 
  9947     0613                     	;# 
  9948     0614                     	;# 
  9949     0616                     	;# 
  9950     0616                     	;# 
  9951     0617                     	;# 
  9952     0617                     	;# 
  9953     0618                     	;# 
  9954     0619                     	;# 
  9955     061A                     	;# 
  9956     061B                     	;# 
  9957     061C                     	;# 
  9958     061D                     	;# 
  9959     061E                     	;# 
  9960     068C                     	;# 
  9961     068D                     	;# 
  9962     068E                     	;# 
  9963     068F                     	;# 
  9964     0690                     	;# 
  9965     0691                     	;# 
  9966     0692                     	;# 
  9967     0693                     	;# 
  9968     0694                     	;# 
  9969     070C                     	;# 
  9970     070D                     	;# 
  9971     070E                     	;# 
  9972     070F                     	;# 
  9973     0710                     	;# 
  9974     0711                     	;# 
  9975     0712                     	;# 
  9976     0713                     	;# 
  9977     0714                     	;# 
  9978     0716                     	;# 
  9979     0717                     	;# 
  9980     0718                     	;# 
  9981     0719                     	;# 
  9982     071A                     	;# 
  9983     071B                     	;# 
  9984     071C                     	;# 
  9985     071D                     	;# 
  9986     071E                     	;# 
  9987     0796                     	;# 
  9988     0797                     	;# 
  9989     0798                     	;# 
  9990     0799                     	;# 
  9991     079A                     	;# 
  9992     079B                     	;# 
  9993     079C                     	;# 
  9994     079D                     	;# 
  9995     080C                     	;# 
  9996     080D                     	;# 
  9997     080E                     	;# 
  9998     080F                     	;# 
  9999     0810                     	;# 
 10000     0811                     	;# 
 10001     0813                     	;# 
 10002     0814                     	;# 
 10003     081A                     	;# 
 10004     081A                     	;# 
 10005     081B                     	;# 
 10006     081C                     	;# 
 10007     081C                     	;# 
 10008     081D                     	;# 
 10009     081E                     	;# 
 10010     081F                     	;# 
 10011     088C                     	;# 
 10012     088D                     	;# 
 10013     088E                     	;# 
 10014     088F                     	;# 
 10015     0890                     	;# 
 10016     0891                     	;# 
 10017     0892                     	;# 
 10018     0893                     	;# 
 10019     0895                     	;# 
 10020     0896                     	;# 
 10021     0897                     	;# 
 10022     0898                     	;# 
 10023     0899                     	;# 
 10024     089A                     	;# 
 10025     089B                     	;# 
 10026     090C                     	;# 
 10027     090E                     	;# 
 10028     090F                     	;# 
 10029     091F                     	;# 
 10030     098F                     	;# 
 10031     098F                     	;# 
 10032     0990                     	;# 
 10033     0991                     	;# 
 10034     0992                     	;# 
 10035     0993                     	;# 
 10036     0994                     	;# 
 10037     0995                     	;# 
 10038     0996                     	;# 
 10039     0997                     	;# 
 10040     0A19                     	;# 
 10041     0A19                     	;# 
 10042     0A1A                     	;# 
 10043     0A1A                     	;# 
 10044     0A1B                     	;# 
 10045     0A1B                     	;# 
 10046     0A1B                     	;# 
 10047     0A1C                     	;# 
 10048     0A1C                     	;# 
 10049     0A1D                     	;# 
 10050     0A1D                     	;# 
 10051     0A1E                     	;# 
 10052     0A1E                     	;# 
 10053     0A1F                     	;# 
 10054     0A1F                     	;# 
 10055     0A1F                     	;# 
 10056     1E0F                     	;# 
 10057     1E10                     	;# 
 10058     1E11                     	;# 
 10059     1E12                     	;# 
 10060     1E13                     	;# 
 10061     1E14                     	;# 
 10062     1E15                     	;# 
 10063     1E16                     	;# 
 10064     1E17                     	;# 
 10065     1E18                     	;# 
 10066     1E19                     	;# 
 10067     1E1A                     	;# 
 10068     1E1B                     	;# 
 10069     1E1C                     	;# 
 10070     1E1D                     	;# 
 10071     1E1E                     	;# 
 10072     1E1F                     	;# 
 10073     1E20                     	;# 
 10074     1E21                     	;# 
 10075     1E22                     	;# 
 10076     1E23                     	;# 
 10077     1E24                     	;# 
 10078     1E25                     	;# 
 10079     1E26                     	;# 
 10080     1E27                     	;# 
 10081     1E28                     	;# 
 10082     1E29                     	;# 
 10083     1E2A                     	;# 
 10084     1E2B                     	;# 
 10085     1E2C                     	;# 
 10086     1E2D                     	;# 
 10087     1E2E                     	;# 
 10088     1E2F                     	;# 
 10089     1E30                     	;# 
 10090     1E31                     	;# 
 10091     1E32                     	;# 
 10092     1E33                     	;# 
 10093     1E34                     	;# 
 10094     1E35                     	;# 
 10095     1E36                     	;# 
 10096     1E37                     	;# 
 10097     1E8F                     	;# 
 10098     1E90                     	;# 
 10099     1E91                     	;# 
 10100     1E92                     	;# 
 10101     1E93                     	;# 
 10102     1E94                     	;# 
 10103     1E95                     	;# 
 10104     1E96                     	;# 
 10105     1E97                     	;# 
 10106     1E9C                     	;# 
 10107     1E9D                     	;# 
 10108     1E9E                     	;# 
 10109     1EA1                     	;# 
 10110     1EA2                     	;# 
 10111     1EA3                     	;# 
 10112     1EA4                     	;# 
 10113     1EA5                     	;# 
 10114     1EA9                     	;# 
 10115     1EAA                     	;# 
 10116     1EAB                     	;# 
 10117     1EAC                     	;# 
 10118     1EB1                     	;# 
 10119     1EB2                     	;# 
 10120     1EB3                     	;# 
 10121     1EB8                     	;# 
 10122     1EB9                     	;# 
 10123     1EBA                     	;# 
 10124     1EBB                     	;# 
 10125     1EBC                     	;# 
 10126     1EBD                     	;# 
 10127     1EBE                     	;# 
 10128     1EC3                     	;# 
 10129     1EC5                     	;# 
 10130     1EC6                     	;# 
 10131     1EC7                     	;# 
 10132     1EC8                     	;# 
 10133     1EC9                     	;# 
 10134     1ECA                     	;# 
 10135     1ECB                     	;# 
 10136     1ECC                     	;# 
 10137     1ECD                     	;# 
 10138     1ECE                     	;# 
 10139     1F10                     	;# 
 10140     1F11                     	;# 
 10141     1F12                     	;# 
 10142     1F13                     	;# 
 10143     1F14                     	;# 
 10144     1F15                     	;# 
 10145     1F16                     	;# 
 10146     1F17                     	;# 
 10147     1F18                     	;# 
 10148     1F19                     	;# 
 10149     1F1A                     	;# 
 10150     1F1B                     	;# 
 10151     1F1C                     	;# 
 10152     1F1D                     	;# 
 10153     1F1E                     	;# 
 10154     1F1F                     	;# 
 10155     1F20                     	;# 
 10156     1F21                     	;# 
 10157     1F22                     	;# 
 10158     1F23                     	;# 
 10159     1F24                     	;# 
 10160     1F25                     	;# 
 10161     1F26                     	;# 
 10162     1F27                     	;# 
 10163     1F38                     	;# 
 10164     1F39                     	;# 
 10165     1F3A                     	;# 
 10166     1F3B                     	;# 
 10167     1F3C                     	;# 
 10168     1F3D                     	;# 
 10169     1F3E                     	;# 
 10170     1F3F                     	;# 
 10171     1F43                     	;# 
 10172     1F44                     	;# 
 10173     1F45                     	;# 
 10174     1F46                     	;# 
 10175     1F47                     	;# 
 10176     1F48                     	;# 
 10177     1F49                     	;# 
 10178     1F4A                     	;# 
 10179     1F4E                     	;# 
 10180     1F4F                     	;# 
 10181     1F50                     	;# 
 10182     1F51                     	;# 
 10183     1F52                     	;# 
 10184     1F53                     	;# 
 10185     1F54                     	;# 
 10186     1F55                     	;# 
 10187     1F65                     	;# 
 10188     1F66                     	;# 
 10189     1F67                     	;# 
 10190     1F68                     	;# 
 10191     1F69                     	;# 
 10192     1F6A                     	;# 
 10193     1F6B                     	;# 
 10194     1FE4                     	;# 
 10195     1FE5                     	;# 
 10196     1FE6                     	;# 
 10197     1FE7                     	;# 
 10198     1FE8                     	;# 
 10199     1FE8                     	;# 
 10200     1FE9                     	;# 
 10201     1FEA                     	;# 
 10202     1FEB                     	;# 
 10203     1FED                     	;# 
 10204     1FEE                     	;# 
 10205     1FEF                     	;# 
 10206                           
 10207 ;; Function _do_I2C_RESET is unused but had its address taken
 10208     0000                     
 10209 ;; Function _do_I2C_IDLE is unused but had its address taken
 10210     0000                     
 10211 ;; Function _do_I2C_SEND_RESTART_READ is unused but had its address taken
 10212     0000                     
 10213 ;; Function _do_I2C_SEND_RESTART_WRITE is unused but had its address taken
 10214     0000                     
 10215 ;; Function _do_I2C_SEND_RESTART is unused but had its address taken
 10216     0000                     
 10217 ;; Function _do_I2C_SEND_STOP is unused but had its address taken
 10218     0000                     
 10219 ;; Function _do_I2C_SEND_ADR_READ is unused but had its address taken
 10220     0000                     
 10221 ;; Function _do_I2C_SEND_ADR_WRITE is unused but had its address taken
 10222     0000                     
 10223 ;; Function _do_I2C_RCEN is unused but had its address taken
 10224     0000                     
 10225 ;; Function _do_I2C_DO_ACK is unused but had its address taken
 10226     0000                     
 10227 ;; Function _do_I2C_DO_NACK_STOP is unused but had its address taken
 10228     0000                     
 10229 ;; Function _do_I2C_DO_NACK_RESTART is unused but had its address taken
 10230     0000                     
 10231 ;; Function _do_I2C_DO_ADDRESS_NACK is unused but had its address taken
 10232     0000                     
 10233 ;; Function _do_I2C_TX is unused but had its address taken
 10234     0000                     
 10235 ;; Function _do_I2C_RX is unused but had its address taken
 10236     0000                     
 10237 ;; Function _do_I2C_TX_EMPTY is unused but had its address taken
 10238     0000                     
 10239 ;; Function _i2c_ISR is unused but had its address taken
 10240     0000                     
 10241 ;; Function _i2c_busCollisionISR is unused but had its address taken
 10242     0000                     
 10243 ;; Function _returnStop is unused but had its address taken
 10244     0000                     
 10245 ;; Function _returnReset is unused but had its address taken
 10246     0000                     
 10247 ;; Function _EUSART2_is_tx_ready is unused but had its address taken
 10248     0000                     
 10249 ;; Function _EUSART1_is_tx_ready is unused but had its address taken
 10250     0000                     
 10251                           	psect	idataBANK0
 10252     0002                     __pidataBANK0:
 10253                           
 10254                           ;initializer for RN487X_GetInputsValues@F12901
 10255     0002  3430               	retlw	48
 10256     0003  3430               	retlw	48
 10257                           
 10258                           	psect	idataBANK2
 10259     1101                     __pidataBANK2:
 10260                           
 10261                           ;initializer for __hex
 10262     1101  3430               	retlw	48
 10263     1102  3431               	retlw	49
 10264     1103  3432               	retlw	50
 10265     1104  3433               	retlw	51
 10266     1105  3434               	retlw	52
 10267     1106  3435               	retlw	53
 10268     1107  3436               	retlw	54
 10269     1108  3437               	retlw	55
 10270     1109  3438               	retlw	56
 10271     110A  3439               	retlw	57
 10272     110B  3441               	retlw	65
 10273     110C  3442               	retlw	66
 10274     110D  3443               	retlw	67
 10275     110E  3444               	retlw	68
 10276     110F  3445               	retlw	69
 10277     1110  3446               	retlw	70
 10278     1111  3400               	retlw	0
 10279                           
 10280                           	psect	stringtext1
 10281     1800                     __pstringtext1:
 10282     1800                     _uart:
 10283     1800  3448               	retlw	low _EUSART1_Read
 10284     1801  3415               	retlw	high _EUSART1_Read
 10285     1802  3421               	retlw	low _EUSART1_Write
 10286     1803  3415               	retlw	high _EUSART1_Write
 10287     1804  3400               	retlw	0
 10288     1805  3400               	retlw	0
 10289     1806  34DA               	retlw	low _EUSART1_is_rx_ready
 10290     1807  341F               	retlw	high _EUSART1_is_rx_ready
 10291     1808  346B               	retlw	low _EUSART1_SetTxInterruptHandler
 10292     1809  341F               	retlw	high _EUSART1_SetTxInterruptHandler
 10293     180A  3488               	retlw	low _EUSART1_Receive_ISR
 10294     180B  3408               	retlw	high _EUSART1_Receive_ISR
 10295     180C  3465               	retlw	low _EUSART1_SetRxInterruptHandler
 10296     180D  341F               	retlw	high _EUSART1_SetRxInterruptHandler
 10297     180E  34F5               	retlw	low _EUSART1_is_tx_done
 10298     180F  341E               	retlw	high _EUSART1_is_tx_done
 10299     1810  34FF               	retlw	low _EUSART1_Transmit_ISR
 10300     1811  3413               	retlw	high _EUSART1_Transmit_ISR
 10301     1812  343F               	retlw	low _EUSART1_Initialize
 10302     1813  3409               	retlw	high _EUSART1_Initialize
 10303     1814  34D4               	retlw	low _EUSART2_Read
 10304     1815  3414               	retlw	high _EUSART2_Read
 10305     1816  34FA               	retlw	low _EUSART2_Write
 10306     1817  3414               	retlw	high _EUSART2_Write
 10307     1818  3400               	retlw	0
 10308     1819  3400               	retlw	0
 10309     181A  34D1               	retlw	low _EUSART2_is_rx_ready
 10310     181B  341F               	retlw	high _EUSART2_is_rx_ready
 10311     181C  3489               	retlw	low _EUSART2_SetTxInterruptHandler
 10312     181D  341F               	retlw	high _EUSART2_SetTxInterruptHandler
 10313     181E  344F               	retlw	low _EUSART2_Receive_ISR
 10314     181F  3408               	retlw	high _EUSART2_Receive_ISR
 10315     1820  3483               	retlw	low _EUSART2_SetRxInterruptHandler
 10316     1821  341F               	retlw	high _EUSART2_SetRxInterruptHandler
 10317     1822  34F1               	retlw	low _EUSART2_is_tx_done
 10318     1823  341E               	retlw	high _EUSART2_is_tx_done
 10319     1824  34DD               	retlw	low _EUSART2_Transmit_ISR
 10320     1825  3413               	retlw	high _EUSART2_Transmit_ISR
 10321     1826  347D               	retlw	low _EUSART2_Initialize
 10322     1827  3409               	retlw	high _EUSART2_Initialize
 10323     1828                     __end_of_uart:
 10324                           
 10325                           	psect	stringtext2
 10326     1828                     __pstringtext2:
 10327     1828                     _i2c1_fsmStateTable:
 10328     1828  34FE               	retlw	low _I2C1_DO_IDLE
 10329     1829  341E               	retlw	high _I2C1_DO_IDLE
 10330     182A  34C8               	retlw	low _I2C1_DO_SEND_ADR_READ
 10331     182B  341F               	retlw	high _I2C1_DO_SEND_ADR_READ
 10332     182C  34AF               	retlw	low _I2C1_DO_SEND_ADR_WRITE
 10333     182D  341F               	retlw	high _I2C1_DO_SEND_ADR_WRITE
 10334     182E  343A               	retlw	low _I2C1_DO_TX
 10335     182F  340E               	retlw	high _I2C1_DO_TX
 10336     1830  34CC               	retlw	low _I2C1_DO_RX
 10337     1831  340A               	retlw	high _I2C1_DO_RX
 10338     1832  34A1               	retlw	low _I2C1_DO_RCEN
 10339     1833  341F               	retlw	high _I2C1_DO_RCEN
 10340     1834  34EB               	retlw	low _I2C1_DO_TX_EMPTY
 10341     1835  3415               	retlw	high _I2C1_DO_TX_EMPTY
 10342     1836  3403               	retlw	low _I2C1_DO_SEND_RESTART_READ
 10343     1837  341F               	retlw	high _I2C1_DO_SEND_RESTART_READ
 10344     1838  3408               	retlw	low _I2C1_DO_SEND_RESTART_WRITE
 10345     1839  341F               	retlw	high _I2C1_DO_SEND_RESTART_WRITE
 10346     183A  340D               	retlw	low _I2C1_DO_SEND_RESTART
 10347     183B  341F               	retlw	high _I2C1_DO_SEND_RESTART
 10348     183C  3412               	retlw	low _I2C1_DO_SEND_STOP
 10349     183D  341F               	retlw	high _I2C1_DO_SEND_STOP
 10350     183E  3417               	retlw	low _I2C1_DO_RX_ACK
 10351     183F  341F               	retlw	high _I2C1_DO_RX_ACK
 10352     1840  341C               	retlw	low _I2C1_DO_RX_NACK_STOP
 10353     1841  341F               	retlw	high _I2C1_DO_RX_NACK_STOP
 10354     1842  3421               	retlw	low _I2C1_DO_RX_NACK_RESTART
 10355     1843  341F               	retlw	high _I2C1_DO_RX_NACK_RESTART
 10356     1844  3426               	retlw	low _I2C1_DO_RESET
 10357     1845  341F               	retlw	high _I2C1_DO_RESET
 10358     1846  346F               	retlw	low _I2C1_DO_ADDRESS_NACK
 10359     1847  3415               	retlw	high _I2C1_DO_ADDRESS_NACK
 10360     1848                     __end_of_i2c1_fsmStateTable:
 10361                           
 10362                           	psect	stringtext3
 10363     1848                     __pstringtext3:
 10364     1848                     _fsmStateTable:
 10365     1848  3400               	retlw	0
 10366     1849  3400               	retlw	0
 10367     184A  3400               	retlw	0
 10368     184B  3400               	retlw	0
 10369     184C  3400               	retlw	0
 10370     184D  3400               	retlw	0
 10371     184E  3400               	retlw	0
 10372     184F  3400               	retlw	0
 10373     1850  3400               	retlw	0
 10374     1851  3400               	retlw	0
 10375     1852  3400               	retlw	0
 10376     1853  3400               	retlw	0
 10377     1854  3400               	retlw	0
 10378     1855  3400               	retlw	0
 10379     1856  3400               	retlw	0
 10380     1857  3400               	retlw	0
 10381     1858  3400               	retlw	0
 10382     1859  3400               	retlw	0
 10383     185A  3400               	retlw	0
 10384     185B  3400               	retlw	0
 10385     185C  3400               	retlw	0
 10386     185D  3400               	retlw	0
 10387     185E  3400               	retlw	0
 10388     185F  3400               	retlw	0
 10389     1860  3400               	retlw	0
 10390     1861  3400               	retlw	0
 10391     1862  3400               	retlw	0
 10392     1863  3400               	retlw	0
 10393     1864  3400               	retlw	0
 10394     1865  3400               	retlw	0
 10395     1866  3400               	retlw	0
 10396     1867  3400               	retlw	0
 10397     1868                     __end_of_fsmStateTable:
 10398                           
 10399                           	psect	stringtext4
 10400     1868                     __pstringtext4:
 10401     1868                     _RN487X:
 10402     1868  3466               	retlw	low _RN487X_Write
 10403     1869  3410               	retlw	high _RN487X_Write
 10404     186A  34EC               	retlw	low _RN487X_Read@rn487x_interface$F1869
 10405     186B  341F               	retlw	high _RN487X_Read@rn487x_interface$F1869
 10406     186C  34F6               	retlw	low _RN487X_is_tx_done
 10407     186D  341F               	retlw	high _RN487X_is_tx_done
 10408     186E  3405               	retlw	low _RN487X_is_rx_ready
 10409     186F  3410               	retlw	high _RN487X_is_rx_ready
 10410     1870  3439               	retlw	low _RN487X_IndicateRx
 10411     1871  3410               	retlw	high _RN487X_IndicateRx
 10412     1872  3444               	retlw	low _RN487X_Reset
 10413     1873  3410               	retlw	high _RN487X_Reset
 10414     1874  3472               	retlw	low _RN487X_SetSystemMode
 10415     1875  3410               	retlw	high _RN487X_SetSystemMode
 10416     1876  34B7               	retlw	low _RN487X_Delay
 10417     1877  341F               	retlw	high _RN487X_Delay
 10418     1878  34FA               	retlw	low _RN487X_MessageHandler
 10419     1879  3409               	retlw	high _RN487X_MessageHandler
 10420     187A                     __end_of_RN487X:
 10421                           
 10422                           	psect	stringtext5
 10423     2010                     __pstringtext5:
 10424     2010                     _rn487x_driver_version:
 10425     2010  3400               	retlw	low (STR_1| (0+32768))
 10426     2011  34A0               	retlw	high (STR_1| (0+32768))
 10427     2012                     __end_of_rn487x_driver_version:
 10428                           
 10429                           	psect	stringtext6
 10430     2012                     __pstringtext6:
 10431     2012                     _protocol_version_number:
 10432     2012  3400               	retlw	low (STR_1| (0+32768))
 10433     2013  34A0               	retlw	high (STR_1| (0+32768))
 10434     2014                     __end_of_protocol_version_number:
 10435                           
 10436                           	psect	stringtext7
 10437     1886                     __pstringtext7:
 10438     1886                     RN487X_RebootCmd@reboot:
 10439     1886  3452               	retlw	82
 10440     1887  3465               	retlw	101
 10441     1888  3462               	retlw	98
 10442     1889  346F               	retlw	111
 10443     188A  346F               	retlw	111
 10444     188B  3474               	retlw	116
 10445     188C  3469               	retlw	105
 10446     188D  346E               	retlw	110
 10447     188E  3467               	retlw	103
 10448     188F  340D               	retlw	13
 10449     1890  340A               	retlw	10
 10450     1891                     __end_ofRN487X_RebootCmd@reboot:
 10451                           
 10452                           	psect	stringtext8
 10453     2006                     __pstringtext8:
 10454     2006                     RN487X_EnterDataMode@cmdPrompt:
 10455     2006  3445               	retlw	69
 10456     2007  344E               	retlw	78
 10457     2008  3444               	retlw	68
 10458     2009  340D               	retlw	13
 10459     200A  340A               	retlw	10
 10460     200B                     __end_ofRN487X_EnterDataMode@cmdPrompt:
 10461                           
 10462                           	psect	stringtext9
 10463     200B                     __pstringtext9:
 10464     200B                     RN487X_EnterCmdMode@cmdPrompt:
 10465     200B  3443               	retlw	67
 10466     200C  344D               	retlw	77
 10467     200D  3444               	retlw	68
 10468     200E  343E               	retlw	62
 10469     200F  3420               	retlw	32
 10470     2010                     __end_ofRN487X_EnterCmdMode@cmdPrompt:
 10471                           
 10472                           	psect	nvBANK1
 10473     00EA                     __pnvBANK1:
 10474     00EA                     _IOCAF6_InterruptHandler:
 10475     00EA                     	ds	2
 10476     00EC                     _EUSART2_RxDefaultInterruptHandler:
 10477     00EC                     	ds	2
 10478     00EE                     _EUSART2_TxDefaultInterruptHandler:
 10479     00EE                     	ds	2
 10480                           
 10481                           	psect	nvBANK2
 10482     015D                     __pnvBANK2:
 10483     015D                     _EUSART1_ErrorHandler:
 10484     015D                     	ds	2
 10485     015F                     _EUSART1_OverrunErrorHandler:
 10486     015F                     	ds	2
 10487     0161                     _EUSART1_FramingErrorHandler:
 10488     0161                     	ds	2
 10489     0163                     _EUSART1_RxDefaultInterruptHandler:
 10490     0163                     	ds	2
 10491     0165                     _EUSART1_TxDefaultInterruptHandler:
 10492     0165                     	ds	2
 10493     0167                     _EUSART2_ErrorHandler:
 10494     0167                     	ds	2
 10495     0169                     _EUSART2_OverrunErrorHandler:
 10496     0169                     	ds	2
 10497     016B                     _EUSART2_FramingErrorHandler:
 10498     016B                     	ds	2
 10499     0014                     _TRISC	set	20
 10500     0013                     _TRISB	set	19
 10501     0012                     _TRISA	set	18
 10502     0016                     _TRISE	set	22
 10503     001A                     _LATC	set	26
 10504     0019                     _LATB	set	25
 10505     0018                     _LATA	set	24
 10506     001C                     _LATE	set	28
 10507     0012                     _TRISAbits	set	18
 10508     001A                     _LATCbits	set	26
 10509     000B                     _INTCONbits	set	11
 10510     0018                     _LATAbits	set	24
 10511     000C                     _PORTAbits	set	12
 10512     0119                     _RC1REG	set	281
 10513     011D                     _RC1STAbits	set	285
 10514     011A                     _TX1REG	set	282
 10515     011E                     _TX1STAbits	set	286
 10516     011C                     _SP1BRGH	set	284
 10517     011B                     _SP1BRGL	set	283
 10518     011E                     _TX1STA	set	286
 10519     011D                     _RC1STA	set	285
 10520     011F                     _BAUD1CON	set	287
 10521     018F                     _SSP1STATbits	set	399
 10522     018E                     _SSP1MSK	set	398
 10523     018C                     _SSP1BUF	set	396
 10524     0191                     _SSP1CON2bits	set	401
 10525     018D                     _SSP1ADD	set	397
 10526     0191                     _SSP1CON2	set	401
 10527     0190                     _SSP1CON1	set	400
 10528     018F                     _SSP1STAT	set	399
 10529     0190                     _SSP1CON1bits	set	400
 10530     059E                     _T0CON0bits	set	1438
 10531     059E                     _T0CON0	set	1438
 10532     059C                     _TMR0L	set	1436
 10533     059D                     _TMR0H	set	1437
 10534     059F                     _T0CON1	set	1439
 10535     070F                     _PIR3bits	set	1807
 10536     070C                     _PIR0bits	set	1804
 10537     0716                     _PIE0bits	set	1814
 10538     0719                     _PIE3bits	set	1817
 10539     079D                     _PMD7	set	1949
 10540     079C                     _PMD6	set	1948
 10541     079B                     _PMD5	set	1947
 10542     079A                     _PMD4	set	1946
 10543     0799                     _PMD3	set	1945
 10544     0798                     _PMD2	set	1944
 10545     0797                     _PMD1	set	1943
 10546     0796                     _PMD0	set	1942
 10547     0892                     _OSCTUNE	set	2194
 10548     0890                     _OSCSTAT	set	2192
 10549     0893                     _OSCFRQ	set	2195
 10550     0891                     _OSCEN	set	2193
 10551     088F                     _OSCCON3	set	2191
 10552     088D                     _OSCCON1	set	2189
 10553     0A19                     _RC2REG	set	2585
 10554     0A1D                     _RC2STAbits	set	2589
 10555     0A1A                     _TX2REG	set	2586
 10556     0A1E                     _TX2STAbits	set	2590
 10557     0A1C                     _SP2BRGH	set	2588
 10558     0A1B                     _SP2BRGL	set	2587
 10559     0A1E                     _TX2STA	set	2590
 10560     0A1D                     _RC2STA	set	2589
 10561     0A1F                     _BAUD2CON	set	2591
 10562     1ECB                     _RX1DTPPS	set	7883
 10563     1EC6                     _SSP1DATPPS	set	7878
 10564     1ECD                     _RX2DTPPS	set	7885
 10565     1EC5                     _SSP1CLKPPS	set	7877
 10566     1F1C                     _RB4PPS	set	7964
 10567     1F24                     _RC4PPS	set	7972
 10568     1F1A                     _RB2PPS	set	7962
 10569     1F19                     _RB1PPS	set	7961
 10570     1F3D                     _IOCAPbits	set	7997
 10571     1F3E                     _IOCANbits	set	7998
 10572     1F3F                     _IOCAFbits	set	7999
 10573     1F52                     _INLVLC	set	8018
 10574     1F47                     _INLVLB	set	8007
 10575     1F3C                     _INLVLA	set	7996
 10576     1F51                     _SLRCONC	set	8017
 10577     1F46                     _SLRCONB	set	8006
 10578     1F3B                     _SLRCONA	set	7995
 10579     1F50                     _ODCONC	set	8016
 10580     1F45                     _ODCONB	set	8005
 10581     1F3A                     _ODCONA	set	7994
 10582     1F66                     _ODCONE	set	8038
 10583     1F4F                     _WPUC	set	8015
 10584     1F39                     _WPUA	set	7993
 10585     1F44                     _WPUB	set	8004
 10586     1F65                     _WPUE	set	8037
 10587     1F38                     _ANSELA	set	7992
 10588     1F43                     _ANSELB	set	8003
 10589     1F4E                     _ANSELC	set	8014
 10590                           
 10591                           	psect	stringtext10
 10592     187A                     __pstringtext10:
 10593     187A                     STR_4:
 10594     187A  3453               	retlw	83	;'S'
 10595     187B  3454               	retlw	84	;'T'
 10596     187C  3452               	retlw	82	;'R'
 10597     187D  3445               	retlw	69	;'E'
 10598     187E  3441               	retlw	65	;'A'
 10599     187F  344D               	retlw	77	;'M'
 10600     1880  345F               	retlw	95	;'_'
 10601     1881  344F               	retlw	79	;'O'
 10602     1882  3450               	retlw	80	;'P'
 10603     1883  3445               	retlw	69	;'E'
 10604     1884  344E               	retlw	78	;'N'
 10605     1885  3400               	retlw	0
 10606                           
 10607                           	psect	stringtext11
 10608     1891                     __pstringtext11:
 10609     1891                     STR_2:
 10610     1891  3444               	retlw	68	;'D'
 10611     1892  3449               	retlw	73	;'I'
 10612     1893  3453               	retlw	83	;'S'
 10613     1894  3443               	retlw	67	;'C'
 10614     1895  344F               	retlw	79	;'O'
 10615     1896  344E               	retlw	78	;'N'
 10616     1897  344E               	retlw	78	;'N'
 10617     1898  3445               	retlw	69	;'E'
 10618     1899  3443               	retlw	67	;'C'
 10619     189A  3454               	retlw	84	;'T'
 10620     189B  3400               	retlw	0
 10621                           
 10622                           	psect	stringtext12
 10623     2000                     __pstringtext12:
 10624     2000                     STR_1:
 10625     2000  3431               	retlw	49	;'1'
 10626     2001  342E               	retlw	46	;'.'
 10627     2002  3431               	retlw	49	;'1'
 10628     2003  342E               	retlw	46	;'.'
 10629     2004  3430               	retlw	48	;'0'
 10630     2005  3400               	retlw	0
 10631                           
 10632                           	psect	stringtext13
 10633     0000                     __pstringtext13:
 10634     2000                     
 10635                           	psect	cinit
 10636     0057                     start_initialization:	
 10637                           ; #config settings
 10638                           
 10639     0057                     __initialization:
 10640                           
 10641                           ; Initialize objects allocated to BANK0
 10642     0057  3180  2002  3180   	fcall	__pidataBANK0	;fetch initializer
 10643     005A  00EE               	movwf	__pdataBANK0& (0+127)
 10644     005B  3180  2003  3180   	fcall	__pidataBANK0+1	;fetch initializer
 10645     005E  00EF               	movwf	(__pdataBANK0+1)& (0+127)
 10646                           
 10647                           ; Initialize objects allocated to BANK2
 10648     005F  3001               	movlw	low __pidataBANK2
 10649     0060  0084               	movwf	4
 10650     0061  3091               	movlw	(high __pidataBANK2)| (0+128)
 10651     0062  0085               	movwf	5
 10652     0063  304C               	movlw	low __pdataBANK2
 10653     0064  0086               	movwf	6
 10654     0065  3001               	movlw	high __pdataBANK2
 10655     0066  0087               	movwf	7
 10656     0067  3011               	movlw	17
 10657     0068  319F  279B  3180   	fcall	init_ram
 10658                           
 10659                           ; Clear objects allocated to COMMON
 10660     006B  01FC               	clrf	__pbssCOMMON& (0+127)
 10661                           
 10662                           ; Clear objects allocated to BANK0
 10663     006C  304A               	movlw	low __pbssBANK0
 10664     006D  0084               	movwf	4
 10665     006E  3000               	movlw	high __pbssBANK0
 10666     006F  0085               	movwf	5
 10667     0070  3024               	movlw	36
 10668     0071  319F  2795  3180   	fcall	clear_ram0
 10669                           
 10670                           ; Clear objects allocated to BANK1
 10671     0074  30A0               	movlw	low __pbssBANK1
 10672     0075  0084               	movwf	4
 10673     0076  3000               	movlw	high __pbssBANK1
 10674     0077  0085               	movwf	5
 10675     0078  304A               	movlw	74
 10676     0079  319F  2795  3180   	fcall	clear_ram0
 10677                           
 10678                           ; Clear objects allocated to BANK2
 10679     007C  3020               	movlw	low __pbssBANK2
 10680     007D  0084               	movwf	4
 10681     007E  3001               	movlw	high __pbssBANK2
 10682     007F  0085               	movwf	5
 10683     0080  302C               	movlw	44
 10684     0081  319F  2795  3180   	fcall	clear_ram0
 10685                           
 10686                           ; Clear objects allocated to BANK3
 10687     0084  30A0               	movlw	low __pbssBANK3
 10688     0085  0084               	movwf	4
 10689     0086  3001               	movlw	high __pbssBANK3
 10690     0087  0085               	movwf	5
 10691     0088  3040               	movlw	64
 10692     0089  319F  2795  3180   	fcall	clear_ram0
 10693                           
 10694                           ; Clear objects allocated to BANK4
 10695     008C  3020               	movlw	low __pbssBANK4
 10696     008D  0084               	movwf	4
 10697     008E  3002               	movlw	high __pbssBANK4
 10698     008F  0085               	movwf	5
 10699     0090  3050               	movlw	80
 10700     0091  319F  2795  3180   	fcall	clear_ram0
 10701                           
 10702                           ; Clear objects allocated to BANK5
 10703     0094  30A0               	movlw	low __pbssBANK5
 10704     0095  0084               	movwf	4
 10705     0096  3002               	movlw	high __pbssBANK5
 10706     0097  0085               	movwf	5
 10707     0098  3050               	movlw	80
 10708     0099  319F  2795  3180   	fcall	clear_ram0
 10709                           
 10710                           ; Clear objects allocated to BANK6
 10711     009C  3020               	movlw	low __pbssBANK6
 10712     009D  0084               	movwf	4
 10713     009E  3003               	movlw	high __pbssBANK6
 10714     009F  0085               	movwf	5
 10715     00A0  3050               	movlw	80
 10716     00A1  319F  2795  3180   	fcall	clear_ram0
 10717     00A4                     end_of_initialization:	
 10718                           ;End of C runtime variable initialization code
 10719                           
 10720     00A4                     __end_of__initialization:
 10721     00A4  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 10722     00A5  0140               	movlb	0
 10723     00A6  3184  2CBD         	ljmp	_main	;jump to C main() function
 10724                           
 10725                           	psect	bssCOMMON
 10726     007C                     __pbssCOMMON:
 10727     007C                     _eusart2RxHead:
 10728     007C                     	ds	1
 10729                           
 10730                           	psect	bssBANK0
 10731     004A                     __pbssBANK0:
 10732     004A                     _timer0ReloadVal16bit:
 10733     004A                     	ds	2
 10734     004C                     _pHead:
 10735     004C                     	ds	2
 10736     004E                     _asyncBuffer:
 10737     004E                     	ds	2
 10738     0050                     _manufactureId:
 10739     0050                     	ds	2
 10740     0052                     LIGHTBLUE_ParseIncomingPacket@data:
 10741     0052                     	ds	2
 10742     0054                     _bitMap:
 10743     0054                     	ds	2
 10744     0056                     _serialIndex:
 10745     0056                     	ds	1
 10746     0057                     _eusart1RxLastError:
 10747     0057                     	ds	1
 10748     0058                     _eusart1RxCount:
 10749     0058                     	ds	1
 10750     0059                     _eusart1RxTail:
 10751     0059                     	ds	1
 10752     005A                     _eusart1RxHead:
 10753     005A                     	ds	1
 10754     005B                     _eusart1TxBufferRemaining:
 10755     005B                     	ds	1
 10756     005C                     _eusart1TxTail:
 10757     005C                     	ds	1
 10758     005D                     _eusart1TxHead:
 10759     005D                     	ds	1
 10760     005E                     _eusart2RxLastError:
 10761     005E                     	ds	1
 10762     005F                     _eusart2RxCount:
 10763     005F                     	ds	1
 10764     0060                     _eusart2RxTail:
 10765     0060                     	ds	1
 10766     0061                     _eusart2TxBufferRemaining:
 10767     0061                     	ds	1
 10768     0062                     _eusart2TxTail:
 10769     0062                     	ds	1
 10770     0063                     _eusart2TxHead:
 10771     0063                     	ds	1
 10772     0064                     RN487X_FilterData@asyncBuffering:
 10773     0064                     	ds	1
 10774     0065                     _dataReady:
 10775     0065                     	ds	1
 10776     0066                     _peek:
 10777     0066                     	ds	1
 10778     0067                     _asyncBufferSize:
 10779     0067                     	ds	1
 10780     0068                     _connected:
 10781     0068                     	ds	1
 10782     0069                     LIGHTBLUE_ParseIncomingPacket@packetID:
 10783     0069                     	ds	1
 10784     006A                     LIGHTBLUE_ParseIncomingPacket@length:
 10785     006A                     	ds	1
 10786     006B                     LIGHTBLUE_ParseIncomingPacket@parserState:
 10787     006B                     	ds	1
 10788     006C                     _sequenceNumber:
 10789     006C                     	ds	1
 10790     006D                     __deviceAddress:
 10791     006D                     	ds	1
 10792                           
 10793                           	psect	dataBANK0
 10794     006E                     __pdataBANK0:
 10795     006E                     RN487X_GetInputsValues@F12901:
 10796     006E                     	ds	2
 10797                           
 10798                           	psect	bssBANK1
 10799     00A0                     __pbssBANK1:
 10800     00A0                     _I2C1_Status:
 10801     00A0                     	ds	30
 10802     00BE                     _eusart1RxStatusBuffer:
 10803     00BE                     	ds	8
 10804     00C6                     _eusart1TxBuffer:
 10805     00C6                     	ds	8
 10806     00CE                     _eusart2RxStatusBuffer:
 10807     00CE                     	ds	8
 10808     00D6                     _eusart2RxBuffer:
 10809     00D6                     	ds	8
 10810     00DE                     _eusart2TxBuffer:
 10811     00DE                     	ds	8
 10812     00E6                     _i2c1_driver_i2cISR:
 10813     00E6                     	ds	2
 10814     00E8                     _i2c1_driver_busCollisionISR:
 10815     00E8                     	ds	2
 10816                           
 10817                           	psect	bssBANK2
 10818     0120                     __pbssBANK2:
 10819     0120                     _i2c_status:
 10820     0120                     	ds	36
 10821     0144                     _eusart1RxBuffer:
 10822     0144                     	ds	8
 10823                           
 10824                           	psect	dataBANK2
 10825     014C                     __pdataBANK2:
 10826     014C                     __hex:
 10827     014C                     	ds	17
 10828                           
 10829                           	psect	bssBANK3
 10830     01A0                     __pbssBANK3:
 10831     01A0                     _cmdBuf:
 10832     01A0                     	ds	64
 10833                           
 10834                           	psect	bssBANK4
 10835     0220                     __pbssBANK4:
 10836     0220                     _lightBlueSerial:
 10837     0220                     	ds	80
 10838                           
 10839                           	psect	bssBANK5
 10840     02A0                     __pbssBANK5:
 10841     02A0                     _statusBuffer:
 10842     02A0                     	ds	80
 10843                           
 10844                           	psect	bssBANK6
 10845     0320                     __pbssBANK6:
 10846     0320                     _statusBuffer@main$F4268:
 10847     0320                     	ds	80
 10848                           
 10849                           	psect	inittext
 10850     1F9B                     init_ram:
 10851     1F9B  00FE               	movwf	btemp
 10852     1F9C                     initloop:
 10853     1F9C  0012               	moviw fsr0++
 10854     1F9D  001E               	movwi fsr1++
 10855     1F9E  0BFE               	decfsz	btemp,f
 10856     1F9F  2F9C               	goto	initloop
 10857     1FA0  3400               	retlw	0
 10858                           
 10859                           	psect	clrtext
 10860     1F95                     clear_ram0:	
 10861                           ;	Called with FSR0 containing the base address, and
 10862                           ;	WREG with the size to clear
 10863                           
 10864     1F95  0064               	clrwdt	;clear the watchdog before getting into this loop
 10865     1F96                     clrloop0:
 10866     1F96  0180               	clrf	0	;clear RAM location pointed to by FSR
 10867     1F97  3101               	addfsr 0,1
 10868     1F98  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
 10869     1F99  2F96               	goto	clrloop0	;have we reached the end yet?
 10870     1F9A  3400               	retlw	0	;all done for this memory range, return
 10871                           
 10872                           	psect	cstackBANK2
 10873     016D                     __pcstackBANK2:
 10874     016D                     _main$5462:
 10875                           
 10876                           ; 1 bytes @ 0x0
 10877     016D                     	ds	1
 10878                           
 10879                           	psect	cstackCOMMON
 10880     0070                     __pcstackCOMMON:
 10881     0070                     ?_BMA253_NewAccelDataRdyY:
 10882     0070                     ?_BMA253_NewAccelDataRdyZ:	
 10883                           ; 1 bytes @ 0x0
 10884                           
 10885     0070                     ?_readRegister:	
 10886                           ; 1 bytes @ 0x0
 10887                           
 10888     0070                     ?_LIGHTBLUE_GetButtonValue:	
 10889                           ; 1 bytes @ 0x0
 10890                           
 10891     0070                     ?_LIGHTBLUE_GetDataLedValue:	
 10892                           ; 1 bytes @ 0x0
 10893                           
 10894     0070                     ?_LIGHTBLUE_GetErrorLedValue:	
 10895                           ; 1 bytes @ 0x0
 10896                           
 10897     0070                     ?_LIGHTBLUE_UpdateErrorLed:	
 10898                           ; 1 bytes @ 0x0
 10899                           
 10900     0070                     ?_RN487X_EnterCmdMode:	
 10901                           ; 1 bytes @ 0x0
 10902                           
 10903     0070                     ?_RN487X_EnterDataMode:	
 10904                           ; 1 bytes @ 0x0
 10905                           
 10906     0070                     ?_EUSART1_Read:	
 10907                           ; 1 bytes @ 0x0
 10908                           
 10909     0070                     ?_EUSART1_is_rx_ready:	
 10910                           ; 1 bytes @ 0x0
 10911                           
 10912     0070                     ?_EUSART1_Receive_ISR:	
 10913                           ; 1 bytes @ 0x0
 10914                           
 10915     0070                     ?_EUSART1_is_tx_done:	
 10916                           ; 1 bytes @ 0x0
 10917                           
 10918     0070                     ?_EUSART1_Transmit_ISR:	
 10919                           ; 1 bytes @ 0x0
 10920                           
 10921     0070                     ??_EUSART1_Transmit_ISR:	
 10922                           ; 1 bytes @ 0x0
 10923                           
 10924     0070                     ?_EUSART1_Initialize:	
 10925                           ; 1 bytes @ 0x0
 10926                           
 10927     0070                     ?_EUSART2_Read:	
 10928                           ; 1 bytes @ 0x0
 10929                           
 10930     0070                     ?_EUSART2_is_rx_ready:	
 10931                           ; 1 bytes @ 0x0
 10932                           
 10933     0070                     ?_EUSART2_Receive_ISR:	
 10934                           ; 1 bytes @ 0x0
 10935                           
 10936     0070                     ?_EUSART2_is_tx_done:	
 10937                           ; 1 bytes @ 0x0
 10938                           
 10939     0070                     ?_EUSART2_Transmit_ISR:	
 10940                           ; 1 bytes @ 0x0
 10941                           
 10942     0070                     ??_EUSART2_Transmit_ISR:	
 10943                           ; 1 bytes @ 0x0
 10944                           
 10945     0070                     ?_EUSART2_Initialize:	
 10946                           ; 1 bytes @ 0x0
 10947                           
 10948     0070                     ?_I2C1_Open:	
 10949                           ; 1 bytes @ 0x0
 10950                           
 10951     0070                     ?_I2C1_MasterWrite:	
 10952                           ; 1 bytes @ 0x0
 10953                           
 10954     0070                     ?_I2C1_Close:	
 10955                           ; 1 bytes @ 0x0
 10956                           
 10957     0070                     ?_isConnected:	
 10958                           ; 1 bytes @ 0x0
 10959                           
 10960     0070                     ?_setMagneticChannel:	
 10961                           ; 1 bytes @ 0x0
 10962                           
 10963     0070                     ?_setTemperatureEn:	
 10964                           ; 1 bytes @ 0x0
 10965                           
 10966     0070                     ?_setOperatingMode:	
 10967                           ; 1 bytes @ 0x0
 10968                           
 10969     0070                     ?_setXYAxisRange:	
 10970                           ; 1 bytes @ 0x0
 10971                           
 10972     0070                     ?_setZAxisRange:	
 10973                           ; 1 bytes @ 0x0
 10974                           
 10975     0070                     ?_getError:	
 10976                           ; 1 bytes @ 0x0
 10977                           
 10978     0070                     ?_getLowPower:	
 10979                           ; 1 bytes @ 0x0
 10980                           
 10981     0070                     ?_getOperatingMode:	
 10982                           ; 1 bytes @ 0x0
 10983                           
 10984     0070                     ?_getMagneticChannel:	
 10985                           ; 1 bytes @ 0x0
 10986                           
 10987     0070                     ?_getTemperatureEN:	
 10988                           ; 1 bytes @ 0x0
 10989                           
 10990     0070                     ?_getAngleEn:	
 10991                           ; 1 bytes @ 0x0
 10992                           
 10993     0070                     ?_RN487X_IsConnected:	
 10994                           ; 1 bytes @ 0x0
 10995                           
 10996     0070                     ?_RN487X_Read:	
 10997                           ; 1 bytes @ 0x0
 10998                           
 10999     0070                     ?_RN487X_DataReady:	
 11000                           ; 1 bytes @ 0x0
 11001                           
 11002     0070                     ?_RN487X_Read@rn487x_interface$F1870:	
 11003                           ; 1 bytes @ 0x0
 11004                           
 11005     0070                     ?_RN487X_is_tx_done:	
 11006                           ; 1 bytes @ 0x0
 11007                           
 11008     0070                     ?_RN487X_is_rx_ready:	
 11009                           ; 1 bytes @ 0x0
 11010                           
 11011     0070                     ?_RN487X_FilterData:	
 11012                           ; 1 bytes @ 0x0
 11013                           
 11014     0070                     ?_EUSART2_DefaultFramingErrorHandler:	
 11015                           ; 1 bytes @ 0x0
 11016                           
 11017     0070                     ??_EUSART2_DefaultFramingErrorHandler:	
 11018                           ; 1 bytes @ 0x0
 11019                           
 11020     0070                     ?_EUSART2_DefaultOverrunErrorHandler:	
 11021                           ; 1 bytes @ 0x0
 11022                           
 11023     0070                     ??_EUSART2_DefaultOverrunErrorHandler:	
 11024                           ; 1 bytes @ 0x0
 11025                           
 11026     0070                     ?_EUSART2_DefaultErrorHandler:	
 11027                           ; 1 bytes @ 0x0
 11028                           
 11029     0070                     ?_EUSART2_RxDataHandler:	
 11030                           ; 1 bytes @ 0x0
 11031                           
 11032     0070                     ??_EUSART2_RxDataHandler:	
 11033                           ; 1 bytes @ 0x0
 11034                           
 11035     0070                     ?_EUSART1_DefaultFramingErrorHandler:	
 11036                           ; 1 bytes @ 0x0
 11037                           
 11038     0070                     ??_EUSART1_DefaultFramingErrorHandler:	
 11039                           ; 1 bytes @ 0x0
 11040                           
 11041     0070                     ?_EUSART1_DefaultOverrunErrorHandler:	
 11042                           ; 1 bytes @ 0x0
 11043                           
 11044     0070                     ??_EUSART1_DefaultOverrunErrorHandler:	
 11045                           ; 1 bytes @ 0x0
 11046                           
 11047     0070                     ?_EUSART1_DefaultErrorHandler:	
 11048                           ; 1 bytes @ 0x0
 11049                           
 11050     0070                     ?_EUSART1_RxDataHandler:	
 11051                           ; 1 bytes @ 0x0
 11052                           
 11053     0070                     ??_EUSART1_RxDataHandler:	
 11054                           ; 1 bytes @ 0x0
 11055                           
 11056     0070                     ?_PIN_MANAGER_IOC:	
 11057                           ; 1 bytes @ 0x0
 11058                           
 11059     0070                     ??_PIN_MANAGER_IOC:	
 11060                           ; 1 bytes @ 0x0
 11061                           
 11062     0070                     ?_PMD_Initialize:	
 11063                           ; 1 bytes @ 0x0
 11064                           
 11065     0070                     ?_I2C1_Initialize:	
 11066                           ; 1 bytes @ 0x0
 11067                           
 11068     0070                     ?_PIN_MANAGER_Initialize:	
 11069                           ; 1 bytes @ 0x0
 11070                           
 11071     0070                     ?_OSCILLATOR_Initialize:	
 11072                           ; 1 bytes @ 0x0
 11073                           
 11074     0070                     ?_TMR0_Initialize:	
 11075                           ; 1 bytes @ 0x0
 11076                           
 11077     0070                     ?_IOCAF6_DefaultInterruptHandler:	
 11078                           ; 1 bytes @ 0x0
 11079                           
 11080     0070                     ??_IOCAF6_DefaultInterruptHandler:	
 11081                           ; 1 bytes @ 0x0
 11082                           
 11083     0070                     ?_IOCAF6_ISR:	
 11084                           ; 1 bytes @ 0x0
 11085                           
 11086     0070                     ??_IOCAF6_ISR:	
 11087                           ; 1 bytes @ 0x0
 11088                           
 11089     0070                     ?_I2C1_DO_IDLE:	
 11090                           ; 1 bytes @ 0x0
 11091                           
 11092     0070                     ?_I2C1_DO_SEND_ADR_READ:	
 11093                           ; 1 bytes @ 0x0
 11094                           
 11095     0070                     ?_I2C1_DO_SEND_ADR_WRITE:	
 11096                           ; 1 bytes @ 0x0
 11097                           
 11098     0070                     ?_I2C1_DO_TX:	
 11099                           ; 1 bytes @ 0x0
 11100                           
 11101     0070                     ?_I2C1_DO_RX:	
 11102                           ; 1 bytes @ 0x0
 11103                           
 11104     0070                     ?_I2C1_DO_RCEN:	
 11105                           ; 1 bytes @ 0x0
 11106                           
 11107     0070                     ?_I2C1_DO_TX_EMPTY:	
 11108                           ; 1 bytes @ 0x0
 11109                           
 11110     0070                     ?_I2C1_DO_SEND_RESTART_READ:	
 11111                           ; 1 bytes @ 0x0
 11112                           
 11113     0070                     ?_I2C1_DO_SEND_RESTART_WRITE:	
 11114                           ; 1 bytes @ 0x0
 11115                           
 11116     0070                     ?_I2C1_DO_SEND_RESTART:	
 11117                           ; 1 bytes @ 0x0
 11118                           
 11119     0070                     ?_I2C1_DO_SEND_STOP:	
 11120                           ; 1 bytes @ 0x0
 11121                           
 11122     0070                     ?_I2C1_DO_RX_ACK:	
 11123                           ; 1 bytes @ 0x0
 11124                           
 11125     0070                     ?_I2C1_DO_RX_NACK_STOP:	
 11126                           ; 1 bytes @ 0x0
 11127                           
 11128     0070                     ?_I2C1_DO_RX_NACK_RESTART:	
 11129                           ; 1 bytes @ 0x0
 11130                           
 11131     0070                     ?_I2C1_DO_RESET:	
 11132                           ; 1 bytes @ 0x0
 11133                           
 11134     0070                     ?_I2C1_DO_ADDRESS_NACK:	
 11135                           ; 1 bytes @ 0x0
 11136                           
 11137     0070                     ?_I2C1_MasterClearIrq:	
 11138                           ; 1 bytes @ 0x0
 11139                           
 11140     0070                     ?_I2C1_MasterOpen:	
 11141                           ; 1 bytes @ 0x0
 11142                           
 11143     0070                     ?_I2C1_MasterDisableIrq:	
 11144                           ; 1 bytes @ 0x0
 11145                           
 11146     0070                     ?_I2C1_MasterClose:	
 11147                           ; 1 bytes @ 0x0
 11148                           
 11149     0070                     ?_I2C1_MasterStart:	
 11150                           ; 1 bytes @ 0x0
 11151                           
 11152     0070                     ?_I2C1_Poller:	
 11153                           ; 1 bytes @ 0x0
 11154                           
 11155     0070                     ?_I2C1_MasterWaitForEvent:	
 11156                           ; 1 bytes @ 0x0
 11157                           
 11158     0070                     ?_I2C1_MasterFsm:	
 11159                           ; 1 bytes @ 0x0
 11160                           
 11161     0070                     ?_I2C1_MasterIsNack:	
 11162                           ; 1 bytes @ 0x0
 11163                           
 11164     0070                     ?_I2C1_MasterSendTxData:	
 11165                           ; 1 bytes @ 0x0
 11166                           
 11167     0070                     ?_I2C1_MasterGetRxData:	
 11168                           ; 1 bytes @ 0x0
 11169                           
 11170     0070                     ?_I2C1_MasterSendAck:	
 11171                           ; 1 bytes @ 0x0
 11172                           
 11173     0070                     ?_I2C1_MasterStartRx:	
 11174                           ; 1 bytes @ 0x0
 11175                           
 11176     0070                     ?_I2C1_MasterSetIrq:	
 11177                           ; 1 bytes @ 0x0
 11178                           
 11179     0070                     ?_I2C1_MasterEnableRestart:	
 11180                           ; 1 bytes @ 0x0
 11181                           
 11182     0070                     ?_I2C1_MasterStop:	
 11183                           ; 1 bytes @ 0x0
 11184                           
 11185     0070                     ?_I2C1_MasterSendNack:	
 11186                           ; 1 bytes @ 0x0
 11187                           
 11188     0070                     ?_BMA253_GetAccelDataY:	
 11189                           ; 1 bytes @ 0x0
 11190                           
 11191     0070                     ?_BMA253_GetAccelDataZ:	
 11192                           ; 1 bytes @ 0x0
 11193                           
 11194     0070                     ?_BMA253_GetAccelDataXYZ:	
 11195                           ; 1 bytes @ 0x0
 11196                           
 11197     0070                     ?_LIGHTBLUE_Initialize:	
 11198                           ; 1 bytes @ 0x0
 11199                           
 11200     0070                     ?_LIGHTBLUE_TemperatureSensor:	
 11201                           ; 1 bytes @ 0x0
 11202                           
 11203     0070                     ?_LIGHTBLUE_AccelSensor:	
 11204                           ; 1 bytes @ 0x0
 11205                           
 11206     0070                     ?_LIGHTBLUE_PushButton:	
 11207                           ; 1 bytes @ 0x0
 11208                           
 11209     0070                     ?_LIGHTBLUE_LedState:	
 11210                           ; 1 bytes @ 0x0
 11211                           
 11212     0070                     ?_LIGHTBLUE_SendProtocolVersion:	
 11213                           ; 1 bytes @ 0x0
 11214                           
 11215     0070                     ?_LIGHTBLUE_SendSerialData:	
 11216                           ; 1 bytes @ 0x0
 11217                           
 11218     0070                     ?_LIGHTBLUE_ParseIncomingPacket:	
 11219                           ; 1 bytes @ 0x0
 11220                           
 11221     0070                     ?_LIGHTBLUE_SetErrorLedValue:	
 11222                           ; 1 bytes @ 0x0
 11223                           
 11224     0070                     ?_begin:	
 11225                           ; 1 bytes @ 0x0
 11226                           
 11227     0070                     ?_getDeviceStatus:	
 11228                           ; 1 bytes @ 0x0
 11229                           
 11230     0070                     ?_rn487x_PrintMessageStart:	
 11231                           ; 1 bytes @ 0x0
 11232                           
 11233     0070                     ?_rn487x_PrintMessageEnd:	
 11234                           ; 1 bytes @ 0x0
 11235                           
 11236     0070                     ?_rn487x_PrintIndicatorCharacters:	
 11237                           ; 1 bytes @ 0x0
 11238                           
 11239     0070                     ?_RN487X_Init:	
 11240                           ; 1 bytes @ 0x0
 11241                           
 11242     0070                     ?_RN487X_ReadDefaultResponse:	
 11243                           ; 1 bytes @ 0x0
 11244                           
 11245     0070                     ?_INTERRUPT_InterruptManager:	
 11246                           ; 1 bytes @ 0x0
 11247                           
 11248     0070                     ?_SYSTEM_Initialize:	
 11249                           ; 1 bytes @ 0x0
 11250                           
 11251     0070                     ?_TMR0_HasOverflowOccured:	
 11252                           ; 1 bytes @ 0x0
 11253                           
 11254     0070                     ?_I2C1_MasterOperation:	
 11255                           ; 1 bytes @ 0x0
 11256                           
 11257     0070                     ?_main:	
 11258                           ; 1 bytes @ 0x0
 11259                           
 11260                           
 11261                           ; 2 bytes @ 0x0
 11262     0070                     	ds	1
 11263     0071                     ??_LIGHTBLUE_GetButtonValue:
 11264     0071                     ??_LIGHTBLUE_GetDataLedValue:	
 11265                           ; 1 bytes @ 0x1
 11266                           
 11267     0071                     ??_LIGHTBLUE_GetErrorLedValue:	
 11268                           ; 1 bytes @ 0x1
 11269                           
 11270     0071                     ??_EUSART1_Read:	
 11271                           ; 1 bytes @ 0x1
 11272                           
 11273     0071                     ?_EUSART1_Write:	
 11274                           ; 1 bytes @ 0x1
 11275                           
 11276     0071                     ??_EUSART1_is_rx_ready:	
 11277                           ; 1 bytes @ 0x1
 11278                           
 11279     0071                     ?_EUSART1_SetTxInterruptHandler:	
 11280                           ; 1 bytes @ 0x1
 11281                           
 11282     0071                     ??_EUSART1_Receive_ISR:	
 11283                           ; 1 bytes @ 0x1
 11284                           
 11285     0071                     ?_EUSART1_SetRxInterruptHandler:	
 11286                           ; 1 bytes @ 0x1
 11287                           
 11288     0071                     ??_EUSART1_is_tx_done:	
 11289                           ; 1 bytes @ 0x1
 11290                           
 11291     0071                     ??_EUSART2_Read:	
 11292                           ; 1 bytes @ 0x1
 11293                           
 11294     0071                     ?_EUSART2_Write:	
 11295                           ; 1 bytes @ 0x1
 11296                           
 11297     0071                     ??_EUSART2_is_rx_ready:	
 11298                           ; 1 bytes @ 0x1
 11299                           
 11300     0071                     ?_EUSART2_SetTxInterruptHandler:	
 11301                           ; 1 bytes @ 0x1
 11302                           
 11303     0071                     ??_EUSART2_Receive_ISR:	
 11304                           ; 1 bytes @ 0x1
 11305                           
 11306     0071                     ?_EUSART2_SetRxInterruptHandler:	
 11307                           ; 1 bytes @ 0x1
 11308                           
 11309     0071                     ??_EUSART2_is_tx_done:	
 11310                           ; 1 bytes @ 0x1
 11311                           
 11312     0071                     ?_I2C1_SetBuffer:	
 11313                           ; 1 bytes @ 0x1
 11314                           
 11315     0071                     ??_I2C1_Open:	
 11316                           ; 1 bytes @ 0x1
 11317                           
 11318     0071                     ??_I2C1_Close:	
 11319                           ; 1 bytes @ 0x1
 11320                           
 11321     0071                     ?_bitWrite:	
 11322                           ; 1 bytes @ 0x1
 11323                           
 11324     0071                     ?_bitRead:	
 11325                           ; 1 bytes @ 0x1
 11326                           
 11327     0071                     ?_RN487X_SetAsyncMessageHandler:	
 11328                           ; 1 bytes @ 0x1
 11329                           
 11330     0071                     ??_RN487X_IsConnected:	
 11331                           ; 1 bytes @ 0x1
 11332                           
 11333     0071                     ??_RN487X_is_tx_done:	
 11334                           ; 1 bytes @ 0x1
 11335                           
 11336     0071                     ??_RN487X_is_rx_ready:	
 11337                           ; 1 bytes @ 0x1
 11338                           
 11339     0071                     ?_RN487X_IndicateRx:	
 11340                           ; 1 bytes @ 0x1
 11341                           
 11342     0071                     ?_RN487X_Reset:	
 11343                           ; 1 bytes @ 0x1
 11344                           
 11345     0071                     ?_RN487X_SetSystemMode:	
 11346                           ; 1 bytes @ 0x1
 11347                           
 11348     0071                     ?_DELAY_milliseconds:	
 11349                           ; 1 bytes @ 0x1
 11350                           
 11351     0071                     ?_strcpy:	
 11352                           ; 1 bytes @ 0x1
 11353                           
 11354     0071                     ?_EUSART2_SetFramingErrorHandler:	
 11355                           ; 1 bytes @ 0x1
 11356                           
 11357     0071                     ?_EUSART2_SetOverrunErrorHandler:	
 11358                           ; 1 bytes @ 0x1
 11359                           
 11360     0071                     ?_EUSART2_SetErrorHandler:	
 11361                           ; 1 bytes @ 0x1
 11362                           
 11363     0071                     ??_EUSART2_DefaultErrorHandler:	
 11364                           ; 1 bytes @ 0x1
 11365                           
 11366     0071                     ?_EUSART1_SetFramingErrorHandler:	
 11367                           ; 1 bytes @ 0x1
 11368                           
 11369     0071                     ?_EUSART1_SetOverrunErrorHandler:	
 11370                           ; 1 bytes @ 0x1
 11371                           
 11372     0071                     ?_EUSART1_SetErrorHandler:	
 11373                           ; 1 bytes @ 0x1
 11374                           
 11375     0071                     ??_EUSART1_DefaultErrorHandler:	
 11376                           ; 1 bytes @ 0x1
 11377                           
 11378     0071                     ??_PMD_Initialize:	
 11379                           ; 1 bytes @ 0x1
 11380                           
 11381     0071                     ??_I2C1_Initialize:	
 11382                           ; 1 bytes @ 0x1
 11383                           
 11384     0071                     ??_OSCILLATOR_Initialize:	
 11385                           ; 1 bytes @ 0x1
 11386                           
 11387     0071                     ??_TMR0_Initialize:	
 11388                           ; 1 bytes @ 0x1
 11389                           
 11390     0071                     ?_IOCAF6_SetInterruptHandler:	
 11391                           ; 1 bytes @ 0x1
 11392                           
 11393     0071                     ??_I2C1_DO_IDLE:	
 11394                           ; 1 bytes @ 0x1
 11395                           
 11396     0071                     ??_I2C1_DO_SEND_ADR_READ:	
 11397                           ; 1 bytes @ 0x1
 11398                           
 11399     0071                     ??_I2C1_DO_RCEN:	
 11400                           ; 1 bytes @ 0x1
 11401                           
 11402     0071                     ??_I2C1_DO_SEND_RESTART_READ:	
 11403                           ; 1 bytes @ 0x1
 11404                           
 11405     0071                     ??_I2C1_DO_SEND_RESTART_WRITE:	
 11406                           ; 1 bytes @ 0x1
 11407                           
 11408     0071                     ??_I2C1_DO_SEND_RESTART:	
 11409                           ; 1 bytes @ 0x1
 11410                           
 11411     0071                     ??_I2C1_DO_SEND_STOP:	
 11412                           ; 1 bytes @ 0x1
 11413                           
 11414     0071                     ??_I2C1_DO_RX_ACK:	
 11415                           ; 1 bytes @ 0x1
 11416                           
 11417     0071                     ??_I2C1_DO_RX_NACK_STOP:	
 11418                           ; 1 bytes @ 0x1
 11419                           
 11420     0071                     ??_I2C1_DO_RX_NACK_RESTART:	
 11421                           ; 1 bytes @ 0x1
 11422                           
 11423     0071                     ??_I2C1_DO_RESET:	
 11424                           ; 1 bytes @ 0x1
 11425                           
 11426     0071                     ??_I2C1_MasterClearIrq:	
 11427                           ; 1 bytes @ 0x1
 11428                           
 11429     0071                     ??_I2C1_MasterOpen:	
 11430                           ; 1 bytes @ 0x1
 11431                           
 11432     0071                     ??_I2C1_MasterDisableIrq:	
 11433                           ; 1 bytes @ 0x1
 11434                           
 11435     0071                     ??_I2C1_MasterClose:	
 11436                           ; 1 bytes @ 0x1
 11437                           
 11438     0071                     ??_I2C1_MasterStart:	
 11439                           ; 1 bytes @ 0x1
 11440                           
 11441     0071                     ?_I2C1_SetCallback:	
 11442                           ; 1 bytes @ 0x1
 11443                           
 11444     0071                     ??_I2C1_MasterWaitForEvent:	
 11445                           ; 1 bytes @ 0x1
 11446                           
 11447     0071                     ??_I2C1_MasterIsNack:	
 11448                           ; 1 bytes @ 0x1
 11449                           
 11450     0071                     ??_I2C1_MasterSendTxData:	
 11451                           ; 1 bytes @ 0x1
 11452                           
 11453     0071                     ??_I2C1_MasterGetRxData:	
 11454                           ; 1 bytes @ 0x1
 11455                           
 11456     0071                     ??_I2C1_MasterSendAck:	
 11457                           ; 1 bytes @ 0x1
 11458                           
 11459     0071                     ??_I2C1_MasterStartRx:	
 11460                           ; 1 bytes @ 0x1
 11461                           
 11462     0071                     ??_I2C1_MasterSetIrq:	
 11463                           ; 1 bytes @ 0x1
 11464                           
 11465     0071                     ??_I2C1_MasterEnableRestart:	
 11466                           ; 1 bytes @ 0x1
 11467                           
 11468     0071                     ??_I2C1_MasterStop:	
 11469                           ; 1 bytes @ 0x1
 11470                           
 11471     0071                     ??_I2C1_MasterSendNack:	
 11472                           ; 1 bytes @ 0x1
 11473                           
 11474     0071                     ??_LIGHTBLUE_Initialize:	
 11475                           ; 1 bytes @ 0x1
 11476                           
 11477     0071                     ??_INTERRUPT_InterruptManager:	
 11478                           ; 1 bytes @ 0x1
 11479                           
 11480     0071                     ??_TMR0_HasOverflowOccured:	
 11481                           ; 1 bytes @ 0x1
 11482                           
 11483     0071                     ?_strlen:	
 11484                           ; 1 bytes @ 0x1
 11485                           
 11486     0071                     ?_swap:	
 11487                           ; 2 bytes @ 0x1
 11488                           
 11489     0071                     ?_strncmp:	
 11490                           ; 2 bytes @ 0x1
 11491                           
 11492     0071                     ?_strchr:	
 11493                           ; 2 bytes @ 0x1
 11494                           
 11495     0071                     RN487X_Reset@value:	
 11496                           ; 2 bytes @ 0x1
 11497                           
 11498     0071                     RN487X_IndicateRx@value:	
 11499                           ; 1 bytes @ 0x1
 11500                           
 11501     0071                     RN487X_SetSystemMode@mode:	
 11502                           ; 1 bytes @ 0x1
 11503                           
 11504     0071                     EUSART2_Write@txData:	
 11505                           ; 1 bytes @ 0x1
 11506                           
 11507     0071                     EUSART1_Write@txData:	
 11508                           ; 1 bytes @ 0x1
 11509                           
 11510     0071                     I2C1_Open@address:	
 11511                           ; 1 bytes @ 0x1
 11512                           
 11513     0071                     I2C1_Close@returnValue:	
 11514                           ; 1 bytes @ 0x1
 11515                           
 11516     0071                     I2C1_MasterSendTxData@data:	
 11517                           ; 1 bytes @ 0x1
 11518                           
 11519     0071                     bitRead@reg:	
 11520                           ; 1 bytes @ 0x1
 11521                           
 11522     0071                     bitWrite@reg:	
 11523                           ; 2 bytes @ 0x1
 11524                           
 11525     0071                     swap@reg:	
 11526                           ; 2 bytes @ 0x1
 11527                           
 11528     0071                     RN487X_SetAsyncMessageHandler@pBuffer:	
 11529                           ; 2 bytes @ 0x1
 11530                           
 11531     0071                     EUSART2_SetFramingErrorHandler@interruptHandler:	
 11532                           ; 2 bytes @ 0x1
 11533                           
 11534     0071                     EUSART2_SetOverrunErrorHandler@interruptHandler:	
 11535                           ; 2 bytes @ 0x1
 11536                           
 11537     0071                     EUSART2_SetErrorHandler@interruptHandler:	
 11538                           ; 2 bytes @ 0x1
 11539                           
 11540     0071                     EUSART2_SetTxInterruptHandler@interruptHandler:	
 11541                           ; 2 bytes @ 0x1
 11542                           
 11543     0071                     EUSART2_SetRxInterruptHandler@interruptHandler:	
 11544                           ; 2 bytes @ 0x1
 11545                           
 11546     0071                     EUSART1_SetFramingErrorHandler@interruptHandler:	
 11547                           ; 2 bytes @ 0x1
 11548                           
 11549     0071                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
 11550                           ; 2 bytes @ 0x1
 11551                           
 11552     0071                     EUSART1_SetErrorHandler@interruptHandler:	
 11553                           ; 2 bytes @ 0x1
 11554                           
 11555     0071                     EUSART1_SetTxInterruptHandler@interruptHandler:	
 11556                           ; 2 bytes @ 0x1
 11557                           
 11558     0071                     EUSART1_SetRxInterruptHandler@interruptHandler:	
 11559                           ; 2 bytes @ 0x1
 11560                           
 11561     0071                     IOCAF6_SetInterruptHandler@InterruptHandler:	
 11562                           ; 2 bytes @ 0x1
 11563                           
 11564     0071                     I2C1_SetBuffer@buffer:	
 11565                           ; 2 bytes @ 0x1
 11566                           
 11567     0071                     I2C1_SetCallback@cb:	
 11568                           ; 2 bytes @ 0x1
 11569                           
 11570     0071                     DELAY_milliseconds@milliseconds:	
 11571                           ; 2 bytes @ 0x1
 11572                           
 11573     0071                     strcpy@src:	
 11574                           ; 2 bytes @ 0x1
 11575                           
 11576     0071                     strlen@s:	
 11577                           ; 2 bytes @ 0x1
 11578                           
 11579     0071                     strchr@s:	
 11580                           ; 2 bytes @ 0x1
 11581                           
 11582     0071                     strncmp@l:	
 11583                           ; 2 bytes @ 0x1
 11584                           
 11585                           
 11586                           ; 2 bytes @ 0x1
 11587     0071                     	ds	1
 11588     0072                     ??_EUSART1_Write:
 11589     0072                     ??_EUSART2_Write:	
 11590                           ; 1 bytes @ 0x2
 11591                           
 11592     0072                     ??_RN487X_IndicateRx:	
 11593                           ; 1 bytes @ 0x2
 11594                           
 11595     0072                     ??_RN487X_Reset:	
 11596                           ; 1 bytes @ 0x2
 11597                           
 11598     0072                     ??_RN487X_SetSystemMode:	
 11599                           ; 1 bytes @ 0x2
 11600                           
 11601     0072                     ??_I2C1_DO_SEND_ADR_WRITE:	
 11602                           ; 1 bytes @ 0x2
 11603                           
 11604     0072                     EUSART2_Read@readValue:	
 11605                           ; 1 bytes @ 0x2
 11606                           
 11607     0072                     EUSART1_Read@readValue:	
 11608                           ; 1 bytes @ 0x2
 11609                           
 11610     0072                     I2C1_Open@returnValue:	
 11611                           ; 1 bytes @ 0x2
 11612                           
 11613                           
 11614                           ; 1 bytes @ 0x2
 11615     0072                     	ds	1
 11616     0073                     ??_strlen:
 11617     0073                     ??_EUSART1_SetTxInterruptHandler:	
 11618                           ; 1 bytes @ 0x3
 11619                           
 11620     0073                     ??_EUSART1_SetRxInterruptHandler:	
 11621                           ; 1 bytes @ 0x3
 11622                           
 11623     0073                     ??_EUSART1_Initialize:	
 11624                           ; 1 bytes @ 0x3
 11625                           
 11626     0073                     ??_EUSART2_SetTxInterruptHandler:	
 11627                           ; 1 bytes @ 0x3
 11628                           
 11629     0073                     ??_EUSART2_SetRxInterruptHandler:	
 11630                           ; 1 bytes @ 0x3
 11631                           
 11632     0073                     ??_EUSART2_Initialize:	
 11633                           ; 1 bytes @ 0x3
 11634                           
 11635     0073                     ??_swap:	
 11636                           ; 1 bytes @ 0x3
 11637                           
 11638     0073                     ??_RN487X_Read@rn487x_interface$F1872:	
 11639                           ; 1 bytes @ 0x3
 11640                           
 11641     0073                     ??_DELAY_milliseconds:	
 11642                           ; 1 bytes @ 0x3
 11643                           
 11644     0073                     ??_strcpy:	
 11645                           ; 1 bytes @ 0x3
 11646                           
 11647     0073                     ??_EUSART2_SetFramingErrorHandler:	
 11648                           ; 1 bytes @ 0x3
 11649                           
 11650     0073                     ??_EUSART2_SetOverrunErrorHandler:	
 11651                           ; 1 bytes @ 0x3
 11652                           
 11653     0073                     ??_EUSART2_SetErrorHandler:	
 11654                           ; 1 bytes @ 0x3
 11655                           
 11656     0073                     ??_EUSART1_SetFramingErrorHandler:	
 11657                           ; 1 bytes @ 0x3
 11658                           
 11659     0073                     ??_EUSART1_SetOverrunErrorHandler:	
 11660                           ; 1 bytes @ 0x3
 11661                           
 11662     0073                     ??_EUSART1_SetErrorHandler:	
 11663                           ; 1 bytes @ 0x3
 11664                           
 11665     0073                     ??_PIN_MANAGER_Initialize:	
 11666                           ; 1 bytes @ 0x3
 11667                           
 11668     0073                     ??_IOCAF6_SetInterruptHandler:	
 11669                           ; 1 bytes @ 0x3
 11670                           
 11671     0073                     ??_rn487x_PrintMessageStart:	
 11672                           ; 1 bytes @ 0x3
 11673                           
 11674     0073                     ??_rn487x_PrintMessageEnd:	
 11675                           ; 1 bytes @ 0x3
 11676                           
 11677     0073                     ??_rn487x_PrintIndicatorCharacters:	
 11678                           ; 1 bytes @ 0x3
 11679                           
 11680     0073                     ?_RN487X_ReadMsg:	
 11681                           ; 1 bytes @ 0x3
 11682                           
 11683     0073                     ??_RN487X_ReadDefaultResponse:	
 11684                           ; 1 bytes @ 0x3
 11685                           
 11686     0073                     ??_SYSTEM_Initialize:	
 11687                           ; 1 bytes @ 0x3
 11688                           
 11689     0073                     bitRead@position:	
 11690                           ; 1 bytes @ 0x3
 11691                           
 11692     0073                     bitWrite@position:	
 11693                           ; 1 bytes @ 0x3
 11694                           
 11695     0073                     rn487x_PrintIndicatorCharacters@messageType:	
 11696                           ; 1 bytes @ 0x3
 11697                           
 11698     0073                     RN487X_SetAsyncMessageHandler@len:	
 11699                           ; 1 bytes @ 0x3
 11700                           
 11701     0073                     I2C1_SetCallback@ptr:	
 11702                           ; 1 bytes @ 0x3
 11703                           
 11704     0073                     RN487X_ReadMsg@expectedMsg:	
 11705                           ; 1 bytes @ 0x3
 11706                           
 11707     0073                     I2C1_SetBuffer@bufferSize:	
 11708                           ; 2 bytes @ 0x3
 11709                           
 11710     0073                     strchr@c:	
 11711                           ; 2 bytes @ 0x3
 11712                           
 11713     0073                     strncmp@r:	
 11714                           ; 2 bytes @ 0x3
 11715                           
 11716     0073                     RN487X_ReadDefaultResponse@resp:	
 11717                           ; 2 bytes @ 0x3
 11718                           
 11719                           
 11720                           ; 3 bytes @ 0x3
 11721     0073                     	ds	1
 11722     0074                     ??_bitRead:
 11723     0074                     ??_RN487X_SetAsyncMessageHandler:	
 11724                           ; 1 bytes @ 0x4
 11725                           
 11726     0074                     ?_RN487X_Delay:	
 11727                           ; 1 bytes @ 0x4
 11728                           
 11729     0074                     ??_I2C1_SetCallback:	
 11730                           ; 1 bytes @ 0x4
 11731                           
 11732     0074                     bitWrite@value:	
 11733                           ; 1 bytes @ 0x4
 11734                           
 11735     0074                     I2C1_SetCallback@idx:	
 11736                           ; 1 bytes @ 0x4
 11737                           
 11738     0074                     RN487X_Delay@delayCount:	
 11739                           ; 1 bytes @ 0x4
 11740                           
 11741     0074                     strlen@a:	
 11742                           ; 2 bytes @ 0x4
 11743                           
 11744                           
 11745                           ; 2 bytes @ 0x4
 11746     0074                     	ds	1
 11747     0075                     ??_I2C1_SetBuffer:
 11748     0075                     ?_I2C1_SetDataCompleteCallback:	
 11749                           ; 1 bytes @ 0x5
 11750                           
 11751     0075                     ?_I2C1_SetAddressNackCallback:	
 11752                           ; 1 bytes @ 0x5
 11753                           
 11754     0075                     ??_bitWrite:	
 11755                           ; 1 bytes @ 0x5
 11756                           
 11757     0075                     ??_strchr:	
 11758                           ; 1 bytes @ 0x5
 11759                           
 11760     0075                     RN487X_ReadMsg@msgLen:	
 11761                           ; 1 bytes @ 0x5
 11762                           
 11763     0075                     strcpy@d:	
 11764                           ; 1 bytes @ 0x5
 11765                           
 11766     0075                     I2C1_SetDataCompleteCallback@cb:	
 11767                           ; 1 bytes @ 0x5
 11768                           
 11769     0075                     I2C1_SetAddressNackCallback@cb:	
 11770                           ; 2 bytes @ 0x5
 11771                           
 11772     0075                     strncmp@n:	
 11773                           ; 2 bytes @ 0x5
 11774                           
 11775                           
 11776                           ; 2 bytes @ 0x5
 11777     0075                     	ds	1
 11778     0076                     ?_LIGHTBLUE_SplitByte:
 11779     0076                     ?_RN487X_Write:	
 11780                           ; 1 bytes @ 0x6
 11781                           
 11782     0076                     ??_RN487X_Delay:	
 11783                           ; 1 bytes @ 0x6
 11784                           
 11785     0076                     ??_RN487X_Init:	
 11786                           ; 1 bytes @ 0x6
 11787                           
 11788     0076                     ??_RN487X_ReadMsg:	
 11789                           ; 1 bytes @ 0x6
 11790                           
 11791     0076                     LIGHTBLUE_SplitByte@value:	
 11792                           ; 1 bytes @ 0x6
 11793                           
 11794     0076                     RN487X_Write@txData:	
 11795                           ; 1 bytes @ 0x6
 11796                           
 11797     0076                     RN487X_ReadDefaultResponse@status:	
 11798                           ; 1 bytes @ 0x6
 11799                           
 11800     0076                     strcpy@dest:	
 11801                           ; 1 bytes @ 0x6
 11802                           
 11803                           
 11804                           ; 1 bytes @ 0x6
 11805     0076                     	ds	1
 11806     0077                     ?_LIGHTBLUE_SendPacket:
 11807     0077                     ??_LIGHTBLUE_SplitByte:	
 11808                           ; 1 bytes @ 0x7
 11809                           
 11810     0077                     ??_RN487X_Write:	
 11811                           ; 1 bytes @ 0x7
 11812                           
 11813     0077                     ??_strncmp:	
 11814                           ; 1 bytes @ 0x7
 11815                           
 11816     0077                     ??_LIGHTBLUE_SendSerialData:	
 11817                           ; 1 bytes @ 0x7
 11818                           
 11819     0077                     ?_rn487x_PrintMessage:	
 11820                           ; 1 bytes @ 0x7
 11821                           
 11822     0077                     ?_RN487X_SendCmd:	
 11823                           ; 1 bytes @ 0x7
 11824                           
 11825     0077                     LIGHTBLUE_SendPacket@payload:	
 11826                           ; 1 bytes @ 0x7
 11827                           
 11828     0077                     RN487X_SendCmd@cmdLen:	
 11829                           ; 1 bytes @ 0x7
 11830                           
 11831     0077                     I2C1_SetDataCompleteCallback@ptr:	
 11832                           ; 1 bytes @ 0x7
 11833                           
 11834     0077                     rn487x_PrintMessage@passedMessage:	
 11835                           ; 1 bytes @ 0x7
 11836                           
 11837     0077                     I2C1_SetAddressNackCallback@ptr:	
 11838                           ; 2 bytes @ 0x7
 11839                           
 11840                           
 11841                           ; 2 bytes @ 0x7
 11842     0077                     	ds	1
 11843     0078                     ??_LIGHTBLUE_SendPacket:
 11844     0078                     ??_I2C1_SetDataCompleteCallback:	
 11845                           ; 1 bytes @ 0x8
 11846                           
 11847     0078                     ?_rd1RegCompleteHandler:	
 11848                           ; 1 bytes @ 0x8
 11849                           
 11850     0078                     ?_rd2RegCompleteHandler:	
 11851                           ; 1 bytes @ 0x8
 11852                           
 11853     0078                     ?_wr1RegCompleteHandler:	
 11854                           ; 1 bytes @ 0x8
 11855                           
 11856     0078                     ?_wr2RegCompleteHandler:	
 11857                           ; 1 bytes @ 0x8
 11858                           
 11859     0078                     ?_rdBlkRegCompleteHandler:	
 11860                           ; 1 bytes @ 0x8
 11861                           
 11862     0078                     ?_I2C1_CallbackReturnStop:	
 11863                           ; 1 bytes @ 0x8
 11864                           
 11865     0078                     ?_I2C1_CallbackReturnReset:	
 11866                           ; 1 bytes @ 0x8
 11867                           
 11868     0078                     ?_wr1RegCompleteHandler@strncmp$F4876:	
 11869                           ; 1 bytes @ 0x8
 11870                           
 11871     0078                     ?_rd1RegCompleteHandler@strncmp$F4882:	
 11872                           ; 1 bytes @ 0x8
 11873                           
 11874     0078                     ?_rd2RegCompleteHandler@strncmp$F4885:	
 11875                           ; 1 bytes @ 0x8
 11876                           
 11877     0078                     ?_wr2RegCompleteHandler@strncmp$F4888:	
 11878                           ; 1 bytes @ 0x8
 11879                           
 11880     0078                     ?_rdBlkRegCompleteHandler@strncmp$F4894:	
 11881                           ; 1 bytes @ 0x8
 11882                           
 11883     0078                     ??_RN487X_SendCmd:	
 11884                           ; 1 bytes @ 0x8
 11885                           
 11886     0078                     ?_strstr:	
 11887                           ; 1 bytes @ 0x8
 11888                           
 11889     0078                     LIGHTBLUE_SendSerialData@length:	
 11890                           ; 2 bytes @ 0x8
 11891                           
 11892     0078                     LIGHTBLUE_SplitByte@payload:	
 11893                           ; 1 bytes @ 0x8
 11894                           
 11895     0078                     wr1RegCompleteHandler@p:	
 11896                           ; 1 bytes @ 0x8
 11897                           
 11898     0078                     rd1RegCompleteHandler@p:	
 11899                           ; 1 bytes @ 0x8
 11900                           
 11901     0078                     rd2RegCompleteHandler@p:	
 11902                           ; 1 bytes @ 0x8
 11903                           
 11904     0078                     wr2RegCompleteHandler@p:	
 11905                           ; 1 bytes @ 0x8
 11906                           
 11907     0078                     rdBlkRegCompleteHandler@p:	
 11908                           ; 1 bytes @ 0x8
 11909                           
 11910     0078                     swap@upperByte:	
 11911                           ; 1 bytes @ 0x8
 11912                           
 11913     0078                     rd1RegCompleteHandler@i2c1_master_example$F1727@ptr:	
 11914                           ; 1 bytes @ 0x8
 11915                           
 11916     0078                     rd2RegCompleteHandler@i2c1_master_example$F1738@ptr:	
 11917                           ; 1 bytes @ 0x8
 11918                           
 11919     0078                     wr1RegCompleteHandler@i2c1_master_example$F1744@ptr:	
 11920                           ; 1 bytes @ 0x8
 11921                           
 11922     0078                     wr2RegCompleteHandler@i2c1_master_example$F1750@ptr:	
 11923                           ; 1 bytes @ 0x8
 11924                           
 11925     0078                     rdBlkRegCompleteHandler@i2c1_master_example$F1761@ptr:	
 11926                           ; 1 bytes @ 0x8
 11927                           
 11928     0078                     RN487X_ReadMsg@resp:	
 11929                           ; 1 bytes @ 0x8
 11930                           
 11931     0078                     I2C1_CallbackReturnStop@funPtr:	
 11932                           ; 1 bytes @ 0x8
 11933                           
 11934     0078                     I2C1_CallbackReturnReset@funPtr:	
 11935                           ; 1 bytes @ 0x8
 11936                           
 11937     0078                     bitRead@mask:	
 11938                           ; 1 bytes @ 0x8
 11939                           
 11940     0078                     strstr@h:	
 11941                           ; 2 bytes @ 0x8
 11942                           
 11943                           
 11944                           ; 2 bytes @ 0x8
 11945     0078                     	ds	1
 11946     0079                     ?_LIGHTBLUE_SplitWord:
 11947     0079                     ??_I2C1_SetAddressNackCallback:	
 11948                           ; 1 bytes @ 0x9
 11949                           
 11950     0079                     ??_rd1RegCompleteHandler:	
 11951                           ; 1 bytes @ 0x9
 11952                           
 11953     0079                     ??_rd2RegCompleteHandler:	
 11954                           ; 1 bytes @ 0x9
 11955                           
 11956     0079                     ??_wr1RegCompleteHandler:	
 11957                           ; 1 bytes @ 0x9
 11958                           
 11959     0079                     ??_wr2RegCompleteHandler:	
 11960                           ; 1 bytes @ 0x9
 11961                           
 11962     0079                     ??_rdBlkRegCompleteHandler:	
 11963                           ; 1 bytes @ 0x9
 11964                           
 11965     0079                     ??_I2C1_DO_TX:	
 11966                           ; 1 bytes @ 0x9
 11967                           
 11968     0079                     ??_I2C1_DO_RX:	
 11969                           ; 1 bytes @ 0x9
 11970                           
 11971     0079                     ??_I2C1_DO_TX_EMPTY:	
 11972                           ; 1 bytes @ 0x9
 11973                           
 11974     0079                     ??_I2C1_DO_ADDRESS_NACK:	
 11975                           ; 1 bytes @ 0x9
 11976                           
 11977     0079                     ??_I2C1_CallbackReturnStop:	
 11978                           ; 1 bytes @ 0x9
 11979                           
 11980     0079                     ??_I2C1_CallbackReturnReset:	
 11981                           ; 1 bytes @ 0x9
 11982                           
 11983     0079                     ??_wr1RegCompleteHandler@strncmp$F4878:	
 11984                           ; 1 bytes @ 0x9
 11985                           
 11986     0079                     ??_rd1RegCompleteHandler@strncmp$F4884:	
 11987                           ; 1 bytes @ 0x9
 11988                           
 11989     0079                     ??_rd2RegCompleteHandler@strncmp$F4887:	
 11990                           ; 1 bytes @ 0x9
 11991                           
 11992     0079                     ??_wr2RegCompleteHandler@strncmp$F4890:	
 11993                           ; 1 bytes @ 0x9
 11994                           
 11995     0079                     ??_rdBlkRegCompleteHandler@strncmp$F4896:	
 11996                           ; 1 bytes @ 0x9
 11997                           
 11998     0079                     ??_rn487x_PrintMessage:	
 11999                           ; 1 bytes @ 0x9
 12000                           
 12001     0079                     LIGHTBLUE_SendSerialData@serialData:	
 12002                           ; 1 bytes @ 0x9
 12003                           
 12004     0079                     swap@lowerByte:	
 12005                           ; 1 bytes @ 0x9
 12006                           
 12007     0079                     RN487X_SendCmd@index:	
 12008                           ; 1 bytes @ 0x9
 12009                           
 12010     0079                     RN487X_ReadMsg@index:	
 12011                           ; 1 bytes @ 0x9
 12012                           
 12013     0079                     LIGHTBLUE_SplitWord@value:	
 12014                           ; 1 bytes @ 0x9
 12015                           
 12016     0079                     bitWrite@mask:	
 12017                           ; 2 bytes @ 0x9
 12018                           
 12019                           
 12020                           ; 2 bytes @ 0x9
 12021     0079                     	ds	1
 12022     007A                     LIGHTBLUE_SendPacket@packetID:
 12023     007A                     RN487X_SendCmd@cmd:	
 12024                           ; 1 bytes @ 0xA
 12025                           
 12026     007A                     strstr@n:	
 12027                           ; 1 bytes @ 0xA
 12028                           
 12029                           
 12030                           ; 2 bytes @ 0xA
 12031     007A                     	ds	1
 12032     007B                     ??_i2c_write1ByteRegister:
 12033     007B                     ??_i2c_read1ByteRegister:	
 12034                           ; 1 bytes @ 0xB
 12035                           
 12036     007B                     ??_BMA253_NewAccelDataRdyY:	
 12037                           ; 1 bytes @ 0xB
 12038                           
 12039     007B                     ??_BMA253_NewAccelDataRdyZ:	
 12040                           ; 1 bytes @ 0xB
 12041                           
 12042     007B                     ??_readRegister:	
 12043                           ; 1 bytes @ 0xB
 12044                           
 12045     007B                     ??_LIGHTBLUE_SplitWord:	
 12046                           ; 1 bytes @ 0xB
 12047                           
 12048     007B                     ??_LIGHTBLUE_UpdateErrorLed:	
 12049                           ; 1 bytes @ 0xB
 12050                           
 12051     007B                     ??_RN487X_EnterCmdMode:	
 12052                           ; 1 bytes @ 0xB
 12053                           
 12054     007B                     ??_RN487X_SetOutputs:	
 12055                           ; 1 bytes @ 0xB
 12056                           
 12057     007B                     ??_RN487X_EnterDataMode:	
 12058                           ; 1 bytes @ 0xB
 12059                           
 12060     007B                     ??_I2C1_MasterWrite:	
 12061                           ; 1 bytes @ 0xB
 12062                           
 12063     007B                     ??_isConnected:	
 12064                           ; 1 bytes @ 0xB
 12065                           
 12066     007B                     ??_TMAG5273_GetManufacture:	
 12067                           ; 1 bytes @ 0xB
 12068                           
 12069     007B                     ??_I2C1_Poller:	
 12070                           ; 1 bytes @ 0xB
 12071                           
 12072     007B                     ??_LIGHTBLUE_PushButton:	
 12073                           ; 1 bytes @ 0xB
 12074                           
 12075     007B                     ??_LIGHTBLUE_LedState:	
 12076                           ; 1 bytes @ 0xB
 12077                           
 12078     007B                     ??_LIGHTBLUE_SetErrorLedValue:	
 12079                           ; 1 bytes @ 0xB
 12080                           
 12081     007B                     ??_getDeviceStatus:	
 12082                           ; 1 bytes @ 0xB
 12083                           
 12084     007B                     ??_I2C1_MasterOperation:	
 12085                           ; 1 bytes @ 0xB
 12086                           
 12087     007B                     BMA253_NewAccelDataRdyY@yNewData:	
 12088                           ; 1 bytes @ 0xB
 12089                           
 12090     007B                     BMA253_NewAccelDataRdyZ@zNewData:	
 12091                           ; 1 bytes @ 0xB
 12092                           
 12093     007B                     LIGHTBLUE_SplitWord@payload:	
 12094                           ; 1 bytes @ 0xB
 12095                           
 12096     007B                     i2c_write1ByteRegister@address:	
 12097                           ; 1 bytes @ 0xB
 12098                           
 12099     007B                     getDeviceStatus@deviceStatusReg:	
 12100                           ; 1 bytes @ 0xB
 12101                           
 12102                           
 12103                           ; 1 bytes @ 0xB
 12104     007B                     	ds	1
 12105     007C                     ??_RN487X_Read:
 12106     007C                     ??_RN487X_DataReady:	
 12107                           ; 1 bytes @ 0xC
 12108                           
 12109     007C                     ??_RN487X_MessageHandler:	
 12110                           ; 1 bytes @ 0xC
 12111                           
 12112     007C                     ??_LIGHTBLUE_TemperatureSensor:	
 12113                           ; 1 bytes @ 0xC
 12114                           
 12115     007C                     ??_LIGHTBLUE_AccelSensor:	
 12116                           ; 1 bytes @ 0xC
 12117                           
 12118     007C                     ??_begin:	
 12119                           ; 1 bytes @ 0xC
 12120                           
 12121     007C                     ??_writeRegister:	
 12122                           ; 1 bytes @ 0xC
 12123                           
 12124                           
 12125                           	psect	cstackBANK0
 12126     0020                     __pcstackBANK0:	
 12127                           ; 1 bytes @ 0xC
 12128                           
 12129     0020                     ?_RN487X_SetOutputs:
 12130     0020                     ??_strstr:	
 12131                           ; 1 bytes @ 0x0
 12132                           
 12133     0020                     ??_I2C1_MasterFsm:	
 12134                           ; 1 bytes @ 0x0
 12135                           
 12136     0020                     ??_LIGHTBLUE_SendProtocolVersion:	
 12137                           ; 1 bytes @ 0x0
 12138                           
 12139     0020                     LIGHTBLUE_PushButton@button:	
 12140                           ; 1 bytes @ 0x0
 12141                           
 12142     0020                     RN487X_SetOutputs@bitMap:	
 12143                           ; 1 bytes @ 0x0
 12144                           
 12145     0020                     LIGHTBLUE_LedState@payload:	
 12146                           ; 2 bytes @ 0x0
 12147                           
 12148     0020                     rn487x_PrintMessage@printCharacter:	
 12149                           ; 3 bytes @ 0x0
 12150                           
 12151                           
 12152                           ; 32 bytes @ 0x0
 12153     0020                     	ds	1
 12154     0021                     LIGHTBLUE_PushButton@payload:
 12155                           
 12156                           ; 3 bytes @ 0x1
 12157     0021                     	ds	1
 12158     0022                     RN487X_SetOutputs@ioLowNibble:
 12159     0022                     I2C1_MasterOperation@read:	
 12160                           ; 1 bytes @ 0x2
 12161                           
 12162     0022                     strstr@nl:	
 12163                           ; 1 bytes @ 0x2
 12164                           
 12165     0022                     LIGHTBLUE_SendProtocolVersion@payload:	
 12166                           ; 2 bytes @ 0x2
 12167                           
 12168                           
 12169                           ; 19 bytes @ 0x2
 12170     0022                     	ds	1
 12171     0023                     LIGHTBLUE_LedState@led:
 12172     0023                     RN487X_SetOutputs@stateLowNibble:	
 12173                           ; 1 bytes @ 0x3
 12174                           
 12175     0023                     I2C1_MasterOperation@returnValue:	
 12176                           ; 1 bytes @ 0x3
 12177                           
 12178                           
 12179                           ; 1 bytes @ 0x3
 12180     0023                     	ds	1
 12181     0024                     ?_i2c_write1ByteRegister:
 12182     0024                     ?_i2c_read1ByteRegister:	
 12183                           ; 1 bytes @ 0x4
 12184                           
 12185     0024                     ?_i2c_read2ByteRegister:	
 12186                           ; 1 bytes @ 0x4
 12187                           
 12188     0024                     i2c_write1ByteRegister@reg:	
 12189                           ; 2 bytes @ 0x4
 12190                           
 12191     0024                     i2c_read1ByteRegister@reg:	
 12192                           ; 1 bytes @ 0x4
 12193                           
 12194     0024                     i2c_read2ByteRegister@reg:	
 12195                           ; 1 bytes @ 0x4
 12196                           
 12197     0024                     RN487X_SetOutputs@ioHighNibble:	
 12198                           ; 1 bytes @ 0x4
 12199                           
 12200                           
 12201                           ; 1 bytes @ 0x4
 12202     0024                     	ds	1
 12203     0025                     i2c_write1ByteRegister@data:
 12204     0025                     i2c_read1ByteRegister@address:	
 12205                           ; 1 bytes @ 0x5
 12206                           
 12207     0025                     RN487X_SetOutputs@stateHighNibble:	
 12208                           ; 1 bytes @ 0x5
 12209                           
 12210                           
 12211                           ; 1 bytes @ 0x5
 12212     0025                     	ds	1
 12213     0026                     ??_i2c_read2ByteRegister:
 12214     0026                     ?_writeRegister:	
 12215                           ; 1 bytes @ 0x6
 12216                           
 12217     0026                     LIGHTBLUE_SetErrorLedValue@value:	
 12218                           ; 1 bytes @ 0x6
 12219                           
 12220     0026                     i2c_read1ByteRegister@e:	
 12221                           ; 1 bytes @ 0x6
 12222                           
 12223     0026                     writeRegister@data:	
 12224                           ; 1 bytes @ 0x6
 12225                           
 12226                           
 12227                           ; 1 bytes @ 0x6
 12228     0026                     	ds	1
 12229     0027                     ?_LIGHTBLUE_PerformAction:
 12230     0027                     LIGHTBLUE_PerformAction@data:	
 12231                           ; 1 bytes @ 0x7
 12232                           
 12233     0027                     writeRegister@regAddress:	
 12234                           ; 1 bytes @ 0x7
 12235                           
 12236     0027                     i2c_read1ByteRegister@x:	
 12237                           ; 1 bytes @ 0x7
 12238                           
 12239                           
 12240                           ; 2 bytes @ 0x7
 12241     0027                     	ds	1
 12242     0028                     ??_LIGHTBLUE_PerformAction:
 12243                           
 12244                           ; 1 bytes @ 0x8
 12245     0028                     	ds	1
 12246     0029                     LIGHTBLUE_PerformAction@id:
 12247     0029                     i2c_read1ByteRegister@d2:	
 12248                           ; 1 bytes @ 0x9
 12249                           
 12250                           
 12251                           ; 1 bytes @ 0x9
 12252     0029                     	ds	1
 12253     002A                     ??_BMA253_GetAccelDataY:
 12254     002A                     ??_BMA253_GetAccelDataZ:	
 12255                           ; 1 bytes @ 0xA
 12256                           
 12257     002A                     LIGHTBLUE_PerformAction@led:	
 12258                           ; 1 bytes @ 0xA
 12259                           
 12260     002A                     i2c_read2ByteRegister@address:	
 12261                           ; 1 bytes @ 0xA
 12262                           
 12263     002A                     readRegister@regAddress:	
 12264                           ; 1 bytes @ 0xA
 12265                           
 12266                           
 12267                           ; 1 bytes @ 0xA
 12268     002A                     	ds	1
 12269     002B                     ??_LIGHTBLUE_ParseIncomingPacket:
 12270     002B                     readRegister@regVal:	
 12271                           ; 1 bytes @ 0xB
 12272                           
 12273     002B                     i2c_read2ByteRegister@result:	
 12274                           ; 1 bytes @ 0xB
 12275                           
 12276                           
 12277                           ; 2 bytes @ 0xB
 12278     002B                     	ds	1
 12279     002C                     ??_getError:
 12280     002C                     ??_getLowPower:	
 12281                           ; 1 bytes @ 0xC
 12282                           
 12283     002C                     ??_getOperatingMode:	
 12284                           ; 1 bytes @ 0xC
 12285                           
 12286     002C                     ??_getMagneticChannel:	
 12287                           ; 1 bytes @ 0xC
 12288                           
 12289     002C                     ??_getTemperatureEN:	
 12290                           ; 1 bytes @ 0xC
 12291                           
 12292     002C                     ??_getAngleEn:	
 12293                           ; 1 bytes @ 0xC
 12294                           
 12295     002C                     LIGHTBLUE_TemperatureSensor@payload:	
 12296                           ; 1 bytes @ 0xC
 12297                           
 12298                           
 12299                           ; 5 bytes @ 0xC
 12300     002C                     	ds	1
 12301     002D                     ?_TMAG5273_GetManufacture:
 12302     002D                     BMA253_GetAccelDataY@yAccelData:	
 12303                           ; 2 bytes @ 0xD
 12304                           
 12305     002D                     BMA253_GetAccelDataZ@zAccelData:	
 12306                           ; 1 bytes @ 0xD
 12307                           
 12308     002D                     _LIGHTBLUE_ParseIncomingPacket$489:	
 12309                           ; 1 bytes @ 0xD
 12310                           
 12311                           
 12312                           ; 2 bytes @ 0xD
 12313     002D                     	ds	1
 12314     002E                     BMA253_GetAccelDataY@lsbData:
 12315     002E                     BMA253_GetAccelDataZ@lsbData:	
 12316                           ; 1 bytes @ 0xE
 12317                           
 12318     002E                     getLowPower@lowPowerModeBit:	
 12319                           ; 1 bytes @ 0xE
 12320                           
 12321     002E                     getOperatingMode@opMode:	
 12322                           ; 1 bytes @ 0xE
 12323                           
 12324     002E                     getMagneticChannel@magChannel:	
 12325                           ; 1 bytes @ 0xE
 12326                           
 12327     002E                     getAngleEn@angleReg:	
 12328                           ; 1 bytes @ 0xE
 12329                           
 12330     002E                     getTemperatureEN@tempEN:	
 12331                           ; 1 bytes @ 0xE
 12332                           
 12333     002E                     getError@undervoltageError:	
 12334                           ; 1 bytes @ 0xE
 12335                           
 12336                           
 12337                           ; 1 bytes @ 0xE
 12338     002E                     	ds	1
 12339     002F                     BMA253_GetAccelDataY@msbData:
 12340     002F                     BMA253_GetAccelDataZ@msbData:	
 12341                           ; 1 bytes @ 0xF
 12342                           
 12343     002F                     getLowPower@lowPowerMode:	
 12344                           ; 1 bytes @ 0xF
 12345                           
 12346     002F                     getOperatingMode@opMode0:	
 12347                           ; 1 bytes @ 0xF
 12348                           
 12349     002F                     getMagneticChannel@magMode4:	
 12350                           ; 1 bytes @ 0xF
 12351                           
 12352     002F                     getAngleEn@angleDir2:	
 12353                           ; 1 bytes @ 0xF
 12354                           
 12355     002F                     getTemperatureEN@tempENreg:	
 12356                           ; 1 bytes @ 0xF
 12357                           
 12358     002F                     getError@otpCrcError:	
 12359                           ; 1 bytes @ 0xF
 12360                           
 12361     002F                     _LIGHTBLUE_ParseIncomingPacket$490:	
 12362                           ; 1 bytes @ 0xF
 12363                           
 12364     002F                     TMAG5273_GetManufacture@read:	
 12365                           ; 2 bytes @ 0xF
 12366                           
 12367                           
 12368                           ; 2 bytes @ 0xF
 12369     002F                     	ds	1
 12370     0030                     ??_BMA253_GetAccelDataXYZ:
 12371     0030                     getOperatingMode@opMode1:	
 12372                           ; 1 bytes @ 0x10
 12373                           
 12374     0030                     getMagneticChannel@magMode5:	
 12375                           ; 1 bytes @ 0x10
 12376                           
 12377     0030                     getAngleEn@angleDir3:	
 12378                           ; 1 bytes @ 0x10
 12379                           
 12380     0030                     getError@intPinError:	
 12381                           ; 1 bytes @ 0x10
 12382                           
 12383                           
 12384                           ; 1 bytes @ 0x10
 12385     0030                     	ds	1
 12386     0031                     BMA253_GetAccelDataXYZ@lSB:
 12387     0031                     getMagneticChannel@magMode6:	
 12388                           ; 1 bytes @ 0x11
 12389                           
 12390     0031                     getError@oscillatorError:	
 12391                           ; 1 bytes @ 0x11
 12392                           
 12393     0031                     LIGHTBLUE_TemperatureSensor@temperature:	
 12394                           ; 1 bytes @ 0x11
 12395                           
 12396     0031                     _LIGHTBLUE_ParseIncomingPacket$491:	
 12397                           ; 2 bytes @ 0x11
 12398                           
 12399                           
 12400                           ; 2 bytes @ 0x11
 12401     0031                     	ds	1
 12402     0032                     BMA253_GetAccelDataXYZ@mSB:
 12403     0032                     getMagneticChannel@magMode7:	
 12404                           ; 1 bytes @ 0x12
 12405                           
 12406     0032                     getError@statusReg:	
 12407                           ; 1 bytes @ 0x12
 12408                           
 12409                           
 12410                           ; 1 bytes @ 0x12
 12411     0032                     	ds	1
 12412     0033                     ??_setMagneticChannel:
 12413     0033                     ??_setTemperatureEn:	
 12414                           ; 1 bytes @ 0x13
 12415                           
 12416     0033                     ??_setOperatingMode:	
 12417                           ; 1 bytes @ 0x13
 12418                           
 12419     0033                     ??_setXYAxisRange:	
 12420                           ; 1 bytes @ 0x13
 12421                           
 12422     0033                     ??_setZAxisRange:	
 12423                           ; 1 bytes @ 0x13
 12424                           
 12425     0033                     BMA253_GetAccelDataXYZ@accelData:	
 12426                           ; 1 bytes @ 0x13
 12427                           
 12428     0033                     LIGHTBLUE_ParseIncomingPacket@receivedByte:	
 12429                           ; 1 bytes @ 0x13
 12430                           
 12431                           
 12432                           ; 1 bytes @ 0x13
 12433     0033                     	ds	1
 12434     0034                     BMA253_GetAccelDataXYZ@sensorValue:
 12435                           
 12436                           ; 2 bytes @ 0x14
 12437     0034                     	ds	1
 12438     0035                     LIGHTBLUE_SendProtocolVersion@value:
 12439     0035                     setOperatingMode@opMode:	
 12440                           ; 1 bytes @ 0x15
 12441                           
 12442     0035                     setMagneticChannel@channelMode:	
 12443                           ; 1 bytes @ 0x15
 12444                           
 12445     0035                     setXYAxisRange@xyAxisRange:	
 12446                           ; 1 bytes @ 0x15
 12447                           
 12448     0035                     setZAxisRange@zAxisRange:	
 12449                           ; 1 bytes @ 0x15
 12450                           
 12451     0035                     setTemperatureEn@temperatureEnable:	
 12452                           ; 1 bytes @ 0x15
 12453                           
 12454                           
 12455                           ; 1 bytes @ 0x15
 12456     0035                     	ds	1
 12457     0036                     LIGHTBLUE_SendProtocolVersion@dataIndex:
 12458     0036                     setOperatingMode@mode:	
 12459                           ; 1 bytes @ 0x16
 12460                           
 12461     0036                     setMagneticChannel@mode:	
 12462                           ; 2 bytes @ 0x16
 12463                           
 12464     0036                     setXYAxisRange@mode:	
 12465                           ; 2 bytes @ 0x16
 12466                           
 12467     0036                     setZAxisRange@mode:	
 12468                           ; 2 bytes @ 0x16
 12469                           
 12470     0036                     setTemperatureEn@mode:	
 12471                           ; 2 bytes @ 0x16
 12472                           
 12473     0036                     LIGHTBLUE_AccelSensor@payload:	
 12474                           ; 2 bytes @ 0x16
 12475                           
 12476                           
 12477                           ; 13 bytes @ 0x16
 12478     0036                     	ds	10
 12479     0040                     rn487x_PrintMessage@messageIndex:
 12480                           
 12481                           ; 1 bytes @ 0x20
 12482     0040                     	ds	1
 12483     0041                     ?_RN487X_MessageHandler:
 12484     0041                     RN487X_MessageHandler@message:	
 12485                           ; 1 bytes @ 0x21
 12486                           
 12487                           
 12488                           ; 2 bytes @ 0x21
 12489     0041                     	ds	2
 12490     0043                     RN487X_MessageHandler@messageType:
 12491     0043                     LIGHTBLUE_AccelSensor@accelData:	
 12492                           ; 1 bytes @ 0x23
 12493                           
 12494                           
 12495                           ; 6 bytes @ 0x23
 12496     0043                     	ds	1
 12497     0044                     ??_RN487X_FilterData:
 12498                           
 12499                           ; 1 bytes @ 0x24
 12500     0044                     	ds	4
 12501     0048                     RN487X_FilterData@readChar:
 12502                           
 12503                           ; 1 bytes @ 0x28
 12504     0048                     	ds	1
 12505     0049                     ??_main:
 12506                           
 12507                           ; 1 bytes @ 0x29
 12508     0049                     	ds	1
 12509                           
 12510                           	psect	maintext
 12511     04BD                     __pmaintext:	
 12512 ;;
 12513 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
 12514 ;;
 12515 ;; *************** function _main *****************
 12516 ;; Defined at:
 12517 ;;		line 72 in file "main.c"
 12518 ;; Parameters:    Size  Location     Type
 12519 ;;		None
 12520 ;; Auto vars:     Size  Location     Type
 12521 ;;		None
 12522 ;; Return value:  Size  Location     Type
 12523 ;;                  2  2666[None  ] int 
 12524 ;; Registers used:
 12525 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12526 ;; Tracked objects:
 12527 ;;		On entry : B3F/0
 12528 ;;		On exit  : 0/0
 12529 ;;		Unchanged: 0/0
 12530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12532 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12533 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12534 ;;      Totals:         0       1       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12535 ;;Total ram usage:        2 bytes
 12536 ;; Hardware stack levels required when called: 18
 12537 ;; This function calls:
 12538 ;;		_EUSART1_Read
 12539 ;;		_EUSART1_Write
 12540 ;;		_EUSART1_is_rx_ready
 12541 ;;		_EUSART2_Read
 12542 ;;		_EUSART2_Write
 12543 ;;		_EUSART2_is_rx_ready
 12544 ;;		_LIGHTBLUE_AccelSensor
 12545 ;;		_LIGHTBLUE_Initialize
 12546 ;;		_LIGHTBLUE_LedState
 12547 ;;		_LIGHTBLUE_ParseIncomingPacket
 12548 ;;		_LIGHTBLUE_PushButton
 12549 ;;		_LIGHTBLUE_SendProtocolVersion
 12550 ;;		_LIGHTBLUE_SendSerialData
 12551 ;;		_LIGHTBLUE_TemperatureSensor
 12552 ;;		_RN487X_DataReady
 12553 ;;		_RN487X_Init
 12554 ;;		_RN487X_IsConnected
 12555 ;;		_RN487X_Read
 12556 ;;		_RN487X_SetAsyncMessageHandler
 12557 ;;		_RN487X_Write
 12558 ;;		_SYSTEM_Initialize
 12559 ;;		_TMR0_HasOverflowOccured
 12560 ;;		_begin
 12561 ;; This function is called by:
 12562 ;;		Startup code after reset
 12563 ;; This function uses a non-reentrant model
 12564 ;;
 12565                           
 12566     04BD                     _main:	
 12567                           ;psect for function _main
 12568                           
 12569     04BD                     l16419:	
 12570                           ;incstack = 0
 12571 ;; hardware stack exceeded
 12572                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12573                           
 12574                           
 12575                           ;main.c: 75:     SYSTEM_Initialize();
 12576     04BD  3192  223B  3184   	fcall	_SYSTEM_Initialize
 12577                           
 12578                           ;main.c: 76:     RN487X_SetAsyncMessageHandler(statusBuffer, sizeof(statusBuffer));
 12579     04C0  3020               	movlw	low _statusBuffer@main$F4268
 12580     04C1  00F1               	movwf	RN487X_SetAsyncMessageHandler@pBuffer
 12581     04C2  3003               	movlw	high _statusBuffer@main$F4268
 12582     04C3  00F2               	movwf	RN487X_SetAsyncMessageHandler@pBuffer+1
 12583     04C4  3050               	movlw	80
 12584     04C5  00F3               	movwf	RN487X_SetAsyncMessageHandler@len
 12585     04C6  3192  2297  3184   	fcall	_RN487X_SetAsyncMessageHandler
 12586     04C9                     l16421:
 12587                           
 12588                           ;main.c: 79:     (INTCONbits.GIE = 1);
 12589     04C9  178B               	bsf	11,7	;volatile
 12590     04CA                     l16423:
 12591                           
 12592                           ;main.c: 82:     (INTCONbits.PEIE = 1);
 12593     04CA  170B               	bsf	11,6	;volatile
 12594     04CB                     l16425:
 12595                           
 12596                           ;main.c: 84:     RN487X_Init();
 12597     04CB  3187  27A1  3184   	fcall	_RN487X_Init
 12598     04CE                     l16427:
 12599                           
 12600                           ;main.c: 85:     LIGHTBLUE_Initialize();
 12601     04CE  319F  2741  3184   	fcall	_LIGHTBLUE_Initialize
 12602                           
 12603                           ;main.c: 86:     begin();
 12604     04D1  318B  23FA  3184   	fcall	_begin
 12605     04D4                     l16429:
 12606                           
 12607                           ;main.c: 89:     {;main.c: 90:         if (RN487X_IsConnected() == 1)
 12608     04D4  319E  26D6  3184   	fcall	_RN487X_IsConnected
 12609     04D7  3A01               	xorlw	1
 12610     04D8  1D03               	skipz
 12611     04D9  2CDB               	goto	u13951
 12612     04DA  2CDC               	goto	u13950
 12613     04DB                     u13951:
 12614     04DB  2D63               	goto	l2682
 12615     04DC                     u13950:
 12616     04DC                     l16431:
 12617                           
 12618                           ;main.c: 91:         {;main.c: 92:             if ((TMR0_HasOverflowOccured()) == 1)
 12619     04DC  3190  2000  3184   	fcall	_TMR0_HasOverflowOccured
 12620     04DF  3A01               	xorlw	1
 12621     04E0  1D03               	skipz
 12622     04E1  2CE3               	goto	u13961
 12623     04E2  2CE4               	goto	u13960
 12624     04E3                     u13961:
 12625     04E3  2CFC               	goto	l2671
 12626     04E4                     u13960:
 12627     04E4                     l16433:
 12628                           
 12629                           ;main.c: 93:             {;main.c: 94:                 (PIR0bits.TMR0IF = 0);
 12630     04E4  014E               	movlb	14	; select bank14
 12631     04E5  128C               	bcf	12,5	;volatile
 12632     04E6                     l16435:
 12633                           
 12634                           ;main.c: 96:                 LIGHTBLUE_TemperatureSensor();
 12635     04E6  3192  2225  3184   	fcall	_LIGHTBLUE_TemperatureSensor
 12636                           
 12637                           ;main.c: 97:                 LIGHTBLUE_AccelSensor();
 12638     04E9  3196  26A1  3184   	fcall	_LIGHTBLUE_AccelSensor
 12639                           
 12640                           ;main.c: 98:                 LIGHTBLUE_PushButton();
 12641     04EC  3191  21AA  3184   	fcall	_LIGHTBLUE_PushButton
 12642                           
 12643                           ;main.c: 99:                 LIGHTBLUE_LedState();
 12644     04EF  3194  24AE  3184   	fcall	_LIGHTBLUE_LedState
 12645                           
 12646                           ;main.c: 100:                 LIGHTBLUE_SendProtocolVersion();
 12647     04F2  3197  2761  3184   	fcall	_LIGHTBLUE_SendProtocolVersion
 12648                           
 12649                           ;main.c: 101:             }
 12650     04F5  2CD4               	goto	l16429
 12651     04F6                     l16437:
 12652                           
 12653                           ;main.c: 105:                 {;main.c: 106:                     LIGHTBLUE_ParseIncoming
      +                          Packet(RN487X_Read());
 12654     04F6  3190  207E  3184   	fcall	_RN487X_Read
 12655     04F9  3185  2590  3184   	fcall	_LIGHTBLUE_ParseIncomingPacket
 12656     04FC                     l2671:	
 12657                           ;main.c: 107:                 }
 12658                           
 12659                           
 12660                           ;main.c: 104:                 while (RN487X_DataReady())
 12661     04FC  3193  2382  3184   	fcall	_RN487X_DataReady
 12662     04FF  3A00               	xorlw	0
 12663     0500  1D03               	skipz
 12664     0501  2D03               	goto	u13971
 12665     0502  2D04               	goto	u13970
 12666     0503                     u13971:
 12667     0503  2CF6               	goto	l16437
 12668     0504                     u13970:
 12669     0504  2D44               	goto	l16455
 12670     0505                     l16439:
 12671                           
 12672                           ;main.c: 109:                 {;main.c: 110:                     lightBlueSerial[serialI
      +                          ndex] = uart[UART_CDC].Read();
 12673     0505  3000               	movlw	low (_uart| (0+32768))
 12674     0506  0084               	movwf	4
 12675     0507  3098               	movlw	high (_uart| (0+32768))
 12676     0508  0085               	movwf	5
 12677     0509  3F01               	moviw [1]fsr0
 12678     050A  008A               	movwf	10
 12679     050B  3F00               	moviw [0]fsr0
 12680     050C  000A               	callw
 12681     050D  3184               	pagesel	$
 12682     050E  0140               	movlb	0	; select bank0
 12683     050F  00C9               	movwf	??_main
 12684     0510  0856               	movf	_serialIndex,w
 12685     0511  3E20               	addlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12686     0512  0086               	movwf	6
 12687     0513  3002               	movlw	2	; select bank4/5
 12688     0514  0087               	movwf	7
 12689     0515  0849               	movf	??_main,w
 12690     0516  0081               	movwf	1
 12691     0517                     l16441:
 12692                           
 12693                           ;main.c: 111:                     if ((lightBlueSerial[serialIndex] == '\r')
 12694     0517  0856               	movf	_serialIndex,w
 12695     0518  3E20               	addlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12696     0519  0086               	movwf	6
 12697     051A  3002               	movlw	2	; select bank4/5
 12698     051B  0087               	movwf	7
 12699     051C  300D               	movlw	13
 12700     051D  0601               	xorwf	1,w
 12701     051E  1903               	btfsc	3,2
 12702     051F  2D21               	goto	u13981
 12703     0520  2D22               	goto	u13980
 12704     0521                     u13981:
 12705     0521  2D33               	goto	l16447
 12706     0522                     u13980:
 12707     0522                     l16443:
 12708     0522  0856               	movf	_serialIndex,w
 12709     0523  3E20               	addlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12710     0524  0086               	movwf	6
 12711     0525  3002               	movlw	2	; select bank4/5
 12712     0526  0087               	movwf	7
 12713     0527  300A               	movlw	10
 12714     0528  0601               	xorwf	1,w
 12715     0529  1903               	btfsc	3,2
 12716     052A  2D2C               	goto	u13991
 12717     052B  2D2D               	goto	u13990
 12718     052C                     u13991:
 12719     052C  2D33               	goto	l16447
 12720     052D                     u13990:
 12721     052D                     l16445:
 12722     052D  304F               	movlw	79
 12723     052E  0656               	xorwf	_serialIndex,w
 12724     052F  1D03               	btfss	3,2
 12725     0530  2D32               	goto	u14001
 12726     0531  2D33               	goto	u14000
 12727     0532                     u14001:
 12728     0532  2D40               	goto	l16453
 12729     0533                     u14000:
 12730     0533                     l16447:
 12731                           
 12732                           ;main.c: 114:                     {;main.c: 115:                         lightBlueSerial
      +                          [serialIndex] = '\0';
 12733     0533  0856               	movf	_serialIndex,w
 12734     0534  3E20               	addlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12735     0535  0086               	movwf	6
 12736     0536  3002               	movlw	2	; select bank4/5
 12737     0537  0087               	movwf	7
 12738     0538  0181               	clrf	1
 12739     0539                     l16449:
 12740                           
 12741                           ;main.c: 116:                         LIGHTBLUE_SendSerialData(lightBlueSerial);
 12742     0539  3020               	movlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 12743     053A  3186  265C  3184   	fcall	_LIGHTBLUE_SendSerialData
 12744     053D                     l16451:
 12745                           
 12746                           ;main.c: 117:                         serialIndex = 0;
 12747     053D  0140               	movlb	0	; select bank0
 12748     053E  01D6               	clrf	_serialIndex
 12749                           
 12750                           ;main.c: 118:                     }
 12751     053F  2D44               	goto	l16455
 12752     0540                     l16453:
 12753                           
 12754                           ;main.c: 120:                     {;main.c: 121:                         serialIndex++;
 12755     0540  3001               	movlw	1
 12756     0541  00C9               	movwf	??_main
 12757     0542  0849               	movf	??_main,w
 12758     0543  07D6               	addwf	_serialIndex,f
 12759     0544                     l16455:
 12760                           
 12761                           ;main.c: 108:                 while (uart[UART_CDC].DataReady())
 12762     0544  3006               	movlw	low ((_uart+6)| (0+32768))
 12763     0545  0084               	movwf	4
 12764     0546  3098               	movlw	high ((_uart+6)| (0+32768))
 12765     0547  0085               	movwf	5
 12766     0548  3F01               	moviw [1]fsr0
 12767     0549  008A               	movwf	10
 12768     054A  3F00               	moviw [0]fsr0
 12769     054B  000A               	callw
 12770     054C  3184               	pagesel	$
 12771     054D  3A00               	xorlw	0
 12772     054E  1D03               	skipz
 12773     054F  2D51               	goto	u14011
 12774     0550  2D52               	goto	u14010
 12775     0551                     u14011:
 12776     0551  2D05               	goto	l16439
 12777     0552                     u14010:
 12778     0552  2CD4               	goto	l16429
 12779     0553                     l16457:
 12780                           
 12781                           ;main.c: 130:             {;main.c: 131:                 uart[UART_CDC].Write(RN487X_Rea
      +                          d());
 12782     0553  3190  207E  3184   	fcall	_RN487X_Read
 12783     0556  0142               	movlb	2	; select bank2
 12784     0557  00ED               	movwf	_main$5462^(0+256)
 12785                           
 12786                           ;main.c: 130:             {;main.c: 131:                 uart[UART_CDC].Write(RN487X_Rea
      +                          d());
 12787     0558  086D               	movf	_main$5462^(0+256),w
 12788     0559  00F1               	movwf	EUSART2_Write@txData
 12789     055A  3002               	movlw	low ((_uart+2)| (0+32768))
 12790     055B  0084               	movwf	4
 12791     055C  3098               	movlw	high ((_uart+2)| (0+32768))
 12792     055D  0085               	movwf	5
 12793     055E  3F01               	moviw [1]fsr0
 12794     055F  008A               	movwf	10
 12795     0560  3F00               	moviw [0]fsr0
 12796     0561  000A               	callw
 12797     0562  3184               	pagesel	$
 12798     0563                     l2682:	
 12799                           ;main.c: 132:             }
 12800                           
 12801                           
 12802                           ;main.c: 129:             while(RN487X_DataReady())
 12803     0563  3193  2382  3184   	fcall	_RN487X_DataReady
 12804     0566  3A00               	xorlw	0
 12805     0567  1D03               	skipz
 12806     0568  2D6A               	goto	u14021
 12807     0569  2D6B               	goto	u14020
 12808     056A                     u14021:
 12809     056A  2D53               	goto	l16457
 12810     056B                     u14020:
 12811     056B  2D7F               	goto	l16461
 12812     056C                     l16459:
 12813                           
 12814                           ;main.c: 134:             {;main.c: 135:                 RN487X.Write(uart[UART_CDC].Rea
      +                          d());
 12815     056C  3000               	movlw	low (_uart| (0+32768))
 12816     056D  0084               	movwf	4
 12817     056E  3098               	movlw	high (_uart| (0+32768))
 12818     056F  0085               	movwf	5
 12819     0570  3F01               	moviw [1]fsr0
 12820     0571  008A               	movwf	10
 12821     0572  3F00               	moviw [0]fsr0
 12822     0573  000A               	callw
 12823     0574  3184               	pagesel	$
 12824     0575  00F6               	movwf	RN487X_Write@txData
 12825     0576  3068               	movlw	low (_RN487X| (0+32768))
 12826     0577  0084               	movwf	4
 12827     0578  3098               	movlw	high (_RN487X| (0+32768))
 12828     0579  0085               	movwf	5
 12829     057A  3F01               	moviw [1]fsr0
 12830     057B  008A               	movwf	10
 12831     057C  3F00               	moviw [0]fsr0
 12832     057D  000A               	callw
 12833     057E  3184               	pagesel	$
 12834     057F                     l16461:
 12835                           
 12836                           ;main.c: 133:             while (uart[UART_CDC].DataReady())
 12837     057F  3006               	movlw	low ((_uart+6)| (0+32768))
 12838     0580  0084               	movwf	4
 12839     0581  3098               	movlw	high ((_uart+6)| (0+32768))
 12840     0582  0085               	movwf	5
 12841     0583  3F01               	moviw [1]fsr0
 12842     0584  008A               	movwf	10
 12843     0585  3F00               	moviw [0]fsr0
 12844     0586  000A               	callw
 12845     0587  3184               	pagesel	$
 12846     0588  3A00               	xorlw	0
 12847     0589  1D03               	skipz
 12848     058A  2D8C               	goto	u14031
 12849     058B  2D8D               	goto	u14030
 12850     058C                     u14031:
 12851     058C  2D6C               	goto	l16459
 12852     058D                     u14030:
 12853     058D  2CD4               	goto	l16429
 12854     058E  3180  2855         	ljmp	start
 12855     0590                     __end_of_main:
 12856                           
 12857                           	psect	text1
 12858     0BFA                     __ptext1:	
 12859 ;; *************** function _begin *****************
 12860 ;; Defined at:
 12861 ;;		line 31 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 12862 ;; Parameters:    Size  Location     Type
 12863 ;;		None
 12864 ;; Auto vars:     Size  Location     Type
 12865 ;;		None
 12866 ;; Return value:  Size  Location     Type
 12867 ;;                  1    wreg      char 
 12868 ;; Registers used:
 12869 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12870 ;; Tracked objects:
 12871 ;;		On entry : 0/0
 12872 ;;		On exit  : 0/0
 12873 ;;		Unchanged: 0/0
 12874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12879 ;;Total ram usage:        0 bytes
 12880 ;; Hardware stack levels used: 1
 12881 ;; Hardware stack levels required when called: 17
 12882 ;; This function calls:
 12883 ;;		_getAngleEn
 12884 ;;		_getError
 12885 ;;		_getLowPower
 12886 ;;		_getMagneticChannel
 12887 ;;		_getOperatingMode
 12888 ;;		_getTemperatureEN
 12889 ;;		_isConnected
 12890 ;;		_setMagneticChannel
 12891 ;;		_setOperatingMode
 12892 ;;		_setTemperatureEn
 12893 ;;		_setXYAxisRange
 12894 ;;		_setZAxisRange
 12895 ;; This function is called by:
 12896 ;;		_main
 12897 ;; This function uses a non-reentrant model
 12898 ;;
 12899                           
 12900     0BFA                     _begin:	
 12901                           ;psect for function _begin
 12902                           
 12903     0BFA                     l14423:	
 12904                           ;incstack = 0
 12905 ;; hardware stack exceeded
 12906                           ; Regs used in _begin: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12907                           
 12908                           
 12909                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 43:     if (isConnecte
      +                          d() != 0) {
 12910     0BFA  3191  21FA  318B   	fcall	_isConnected
 12911     0BFD  3A00               	xorlw	0
 12912     0BFE  1903               	skipnz
 12913     0BFF  2C01               	goto	u11551
 12914     0C00  2C02               	goto	u11550
 12915     0C01                     u11551:
 12916     0C01  2C03               	goto	l14427
 12917     0C02                     u11550:
 12918     0C02  2C47               	goto	l645
 12919     0C03                     l14427:
 12920                           
 12921                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 48:     setMagneticCha
      +                          nnel(0X7);
 12922     0C03  3007               	movlw	7
 12923     0C04  3180  20A8  318B   	fcall	_setMagneticChannel
 12924                           
 12925                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 49:     setTemperature
      +                          En(1);
 12926     0C07  3001               	movlw	1
 12927     0C08  3188  20C5  318B   	fcall	_setTemperatureEn
 12928                           
 12929                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 50:     setOperatingMo
      +                          de(0X2);
 12930     0C0B  3002               	movlw	2
 12931     0C0C  3187  2706  318B   	fcall	_setOperatingMode
 12932                           
 12933                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 53:     setXYAxisRange
      +                          (0X1);
 12934     0C0F  3001               	movlw	1
 12935     0C10  3189  21BB  318B   	fcall	_setXYAxisRange
 12936                           
 12937                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 54:     setZAxisRange(
      +                          0X1);
 12938     0C13  3001               	movlw	1
 12939     0C14  3189  2102  318B   	fcall	_setZAxisRange
 12940                           
 12941                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 57:     if (getError()
      +                           != 0) {
 12942     0C17  318D  2591  318B   	fcall	_getError
 12943     0C1A  3A00               	xorlw	0
 12944     0C1B  1903               	skipnz
 12945     0C1C  2C1E               	goto	u11561
 12946     0C1D  2C1F               	goto	u11560
 12947     0C1E                     u11561:
 12948     0C1E  2C20               	goto	l14431
 12949     0C1F                     u11560:
 12950     0C1F  2C47               	goto	l645
 12951     0C20                     l14431:
 12952                           
 12953                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 62:     if (getLowPowe
      +                          r() != 0X0) {
 12954     0C20  3192  2251  318B   	fcall	_getLowPower
 12955     0C23  3A00               	xorlw	0
 12956     0C24  1903               	skipnz
 12957     0C25  2C27               	goto	u11571
 12958     0C26  2C28               	goto	u11570
 12959     0C27                     u11571:
 12960     0C27  2C29               	goto	l14435
 12961     0C28                     u11570:
 12962     0C28  2C47               	goto	l645
 12963     0C29                     l14435:
 12964                           
 12965                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 67:     if (getOperati
      +                          ngMode() != 0X2) {
 12966     0C29  318C  24EA  318B   	fcall	_getOperatingMode
 12967     0C2C  3A02               	xorlw	2
 12968     0C2D  1903               	skipnz
 12969     0C2E  2C30               	goto	u11581
 12970     0C2F  2C31               	goto	u11580
 12971     0C30                     u11581:
 12972     0C30  2C32               	goto	l14439
 12973     0C31                     u11580:
 12974     0C31  2C47               	goto	l645
 12975     0C32                     l14439:
 12976                           
 12977                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 72:     if (getMagneti
      +                          cChannel() != 0X7) {
 12978     0C32  3183  2377  318B   	fcall	_getMagneticChannel
 12979     0C35  3A07               	xorlw	7
 12980     0C36  1903               	skipnz
 12981     0C37  2C39               	goto	u11591
 12982     0C38  2C3A               	goto	u11590
 12983     0C39                     u11591:
 12984     0C39  2C3B               	goto	l14443
 12985     0C3A                     u11590:
 12986     0C3A  2C47               	goto	l645
 12987     0C3B                     l14443:
 12988                           
 12989                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 77:     if (getTempera
      +                          tureEN() != 0X1) {
 12990     0C3B  3191  21E5  318B   	fcall	_getTemperatureEN
 12991     0C3E  3A01               	xorlw	1
 12992     0C3F  1903               	skipnz
 12993     0C40  2C42               	goto	u11601
 12994     0C41  2C43               	goto	u11600
 12995     0C42                     u11601:
 12996     0C42  2C44               	goto	l14447
 12997     0C43                     u11600:
 12998     0C43  2C47               	goto	l645
 12999     0C44                     l14447:
 13000                           
 13001                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 82:     if (getAngleEn
      +                          () != 0X0) {
 13002     0C44  318D  253D  318B   	fcall	_getAngleEn
 13003     0C47                     l645:
 13004     0C47  0008               	return
 13005     0C48                     __end_of_begin:
 13006                           
 13007                           	psect	text2
 13008     0902                     __ptext2:	
 13009 ;; *************** function _setZAxisRange *****************
 13010 ;; Defined at:
 13011 ;;		line 1011 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13012 ;; Parameters:    Size  Location     Type
 13013 ;;  zAxisRange      1    wreg     unsigned char 
 13014 ;; Auto vars:     Size  Location     Type
 13015 ;;  zAxisRange      1   21[BANK0 ] unsigned char 
 13016 ;;  mode            2   22[BANK0 ] unsigned short 
 13017 ;; Return value:  Size  Location     Type
 13018 ;;                  1    wreg      char 
 13019 ;; Registers used:
 13020 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13021 ;; Tracked objects:
 13022 ;;		On entry : 0/0
 13023 ;;		On exit  : 0/0
 13024 ;;		Unchanged: 0/0
 13025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13027 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13028 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13029 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13030 ;;Total ram usage:        5 bytes
 13031 ;; Hardware stack levels used: 1
 13032 ;; Hardware stack levels required when called: 16
 13033 ;; This function calls:
 13034 ;;		_bitWrite
 13035 ;;		_getError
 13036 ;;		_readRegister
 13037 ;;		_writeRegister
 13038 ;; This function is called by:
 13039 ;;		_begin
 13040 ;; This function uses a non-reentrant model
 13041 ;;
 13042                           
 13043     0902                     _setZAxisRange:	
 13044                           ;psect for function _setZAxisRange
 13045                           
 13046                           
 13047                           ;incstack = 0
 13048 ;; hardware stack exceeded
 13049                           ; Regs used in _setZAxisRange: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13050                           ;setZAxisRange@zAxisRange stored from wreg
 13051     0902  0140               	movlb	0	; select bank0
 13052     0903  00B5               	movwf	setZAxisRange@zAxisRange
 13053     0904                     l13773:
 13054     0904                     l13775:
 13055                           
 13056                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1013:     mode = readR
      +                          egister(TMAG5273_REG_SENSOR_CONFIG_2);
 13057     0904  3003               	movlw	3
 13058     0905  3190  205A  3189   	fcall	_readRegister
 13059     0908  0140               	movlb	0	; select bank0
 13060     0909  00B3               	movwf	??_setZAxisRange
 13061     090A  01B4               	clrf	??_setZAxisRange+1
 13062     090B  0833               	movf	??_setZAxisRange,w
 13063     090C  00B6               	movwf	setZAxisRange@mode
 13064     090D  0834               	movf	??_setZAxisRange+1,w
 13065     090E  00B7               	movwf	setZAxisRange@mode+1
 13066     090F                     l13777:
 13067                           
 13068                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1016:     if (zAxisRan
      +                          ge == 0X0)
 13069     090F  0835               	movf	setZAxisRange@zAxisRange,w
 13070     0910  1D03               	btfss	3,2
 13071     0911  2913               	goto	u10721
 13072     0912  2914               	goto	u10720
 13073     0913                     u10721:
 13074     0913  2925               	goto	l13783
 13075     0914                     u10720:
 13076     0914                     l13779:
 13077                           
 13078                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1017:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1019:         bitWrite(mode, 0, 0
      +                          );
 13079     0914  0837               	movf	setZAxisRange@mode+1,w
 13080     0915  00F2               	movwf	bitWrite@reg+1
 13081     0916  0836               	movf	setZAxisRange@mode,w
 13082     0917  00F1               	movwf	bitWrite@reg
 13083     0918  01F3               	clrf	bitWrite@position
 13084     0919  01F4               	clrf	bitWrite@value
 13085     091A  3194  248A  3189   	fcall	_bitWrite
 13086     091D                     l13781:
 13087                           
 13088                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1021:         writeReg
      +                          ister(TMAG5273_REG_SENSOR_CONFIG_2, mode);
 13089     091D  0140               	movlb	0	; select bank0
 13090     091E  0836               	movf	setZAxisRange@mode,w
 13091     091F  00A6               	movwf	writeRegister@data
 13092     0920  3003               	movlw	3
 13093     0921  3190  204F  3189   	fcall	_writeRegister
 13094                           
 13095                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1022:     } else if (z
      +                          AxisRange == 0X1)
 13096     0924  293B               	goto	l13789
 13097     0925                     l13783:
 13098     0925  0335               	decf	setZAxisRange@zAxisRange,w
 13099     0926  1D03               	btfss	3,2
 13100     0927  2929               	goto	u10731
 13101     0928  292A               	goto	u10730
 13102     0929                     u10731:
 13103     0929  293B               	goto	l13789
 13104     092A                     u10730:
 13105     092A                     l13785:
 13106                           
 13107                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1023:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1024:         bitWrite(mode, 0, 1
      +                          );
 13108     092A  0837               	movf	setZAxisRange@mode+1,w
 13109     092B  00F2               	movwf	bitWrite@reg+1
 13110     092C  0836               	movf	setZAxisRange@mode,w
 13111     092D  00F1               	movwf	bitWrite@reg
 13112     092E  01F3               	clrf	bitWrite@position
 13113     092F  01F4               	clrf	bitWrite@value
 13114     0930  0AF4               	incf	bitWrite@value,f
 13115     0931  3194  248A  3189   	fcall	_bitWrite
 13116     0934                     l13787:
 13117                           
 13118                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1025:         writeReg
      +                          ister(TMAG5273_REG_SENSOR_CONFIG_2, mode);
 13119     0934  0140               	movlb	0	; select bank0
 13120     0935  0836               	movf	setZAxisRange@mode,w
 13121     0936  00A6               	movwf	writeRegister@data
 13122     0937  3003               	movlw	3
 13123     0938  3190  204F  3189   	fcall	_writeRegister
 13124     093B                     l13789:
 13125                           
 13126                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1028:     return getEr
      +                          ror();;	Return value of _setZAxisRange is never used
 13127     093B  318D  2591  3189   	fcall	_getError
 13128     093E                     l857:
 13129     093E  0008               	return
 13130     093F                     __end_of_setZAxisRange:
 13131                           
 13132                           	psect	text3
 13133     09BB                     __ptext3:	
 13134 ;; *************** function _setXYAxisRange *****************
 13135 ;; Defined at:
 13136 ;;		line 984 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13137 ;; Parameters:    Size  Location     Type
 13138 ;;  xyAxisRange     1    wreg     unsigned char 
 13139 ;; Auto vars:     Size  Location     Type
 13140 ;;  xyAxisRange     1   21[BANK0 ] unsigned char 
 13141 ;;  mode            2   22[BANK0 ] unsigned short 
 13142 ;; Return value:  Size  Location     Type
 13143 ;;                  1    wreg      char 
 13144 ;; Registers used:
 13145 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13146 ;; Tracked objects:
 13147 ;;		On entry : 0/0
 13148 ;;		On exit  : 0/0
 13149 ;;		Unchanged: 0/0
 13150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13152 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13153 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13154 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13155 ;;Total ram usage:        5 bytes
 13156 ;; Hardware stack levels used: 1
 13157 ;; Hardware stack levels required when called: 16
 13158 ;; This function calls:
 13159 ;;		_bitWrite
 13160 ;;		_getError
 13161 ;;		_readRegister
 13162 ;;		_writeRegister
 13163 ;; This function is called by:
 13164 ;;		_begin
 13165 ;; This function uses a non-reentrant model
 13166 ;;
 13167                           
 13168     09BB                     _setXYAxisRange:	
 13169                           ;psect for function _setXYAxisRange
 13170                           
 13171                           
 13172                           ;incstack = 0
 13173 ;; hardware stack exceeded
 13174                           ; Regs used in _setXYAxisRange: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13175                           ;setXYAxisRange@xyAxisRange stored from wreg
 13176     09BB  0140               	movlb	0	; select bank0
 13177     09BC  00B5               	movwf	setXYAxisRange@xyAxisRange
 13178     09BD                     l13753:
 13179     09BD                     l13755:
 13180                           
 13181                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 986:     mode = readRe
      +                          gister(TMAG5273_REG_SENSOR_CONFIG_2);
 13182     09BD  3003               	movlw	3
 13183     09BE  3190  205A  3189   	fcall	_readRegister
 13184     09C1  0140               	movlb	0	; select bank0
 13185     09C2  00B3               	movwf	??_setXYAxisRange
 13186     09C3  01B4               	clrf	??_setXYAxisRange+1
 13187     09C4  0833               	movf	??_setXYAxisRange,w
 13188     09C5  00B6               	movwf	setXYAxisRange@mode
 13189     09C6  0834               	movf	??_setXYAxisRange+1,w
 13190     09C7  00B7               	movwf	setXYAxisRange@mode+1
 13191     09C8                     l13757:
 13192                           
 13193                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 989:     if (xyAxisRan
      +                          ge == 0X0)
 13194     09C8  0835               	movf	setXYAxisRange@xyAxisRange,w
 13195     09C9  1D03               	btfss	3,2
 13196     09CA  29CC               	goto	u10701
 13197     09CB  29CD               	goto	u10700
 13198     09CC                     u10701:
 13199     09CC  29DF               	goto	l13763
 13200     09CD                     u10700:
 13201     09CD                     l13759:
 13202                           
 13203                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 990:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 992:         bitWrite(mode, 1, 0);
 13204     09CD  0837               	movf	setXYAxisRange@mode+1,w
 13205     09CE  00F2               	movwf	bitWrite@reg+1
 13206     09CF  0836               	movf	setXYAxisRange@mode,w
 13207     09D0  00F1               	movwf	bitWrite@reg
 13208     09D1  01F3               	clrf	bitWrite@position
 13209     09D2  0AF3               	incf	bitWrite@position,f
 13210     09D3  01F4               	clrf	bitWrite@value
 13211     09D4  3194  248A  3189   	fcall	_bitWrite
 13212     09D7                     l13761:
 13213                           
 13214                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 994:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_2, mode);
 13215     09D7  0140               	movlb	0	; select bank0
 13216     09D8  0836               	movf	setXYAxisRange@mode,w
 13217     09D9  00A6               	movwf	writeRegister@data
 13218     09DA  3003               	movlw	3
 13219     09DB  3190  204F  3189   	fcall	_writeRegister
 13220                           
 13221                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 995:     } else if (xy
      +                          AxisRange == 0X1)
 13222     09DE  29F6               	goto	l13769
 13223     09DF                     l13763:
 13224     09DF  0335               	decf	setXYAxisRange@xyAxisRange,w
 13225     09E0  1D03               	btfss	3,2
 13226     09E1  29E3               	goto	u10711
 13227     09E2  29E4               	goto	u10710
 13228     09E3                     u10711:
 13229     09E3  29F6               	goto	l13769
 13230     09E4                     u10710:
 13231     09E4                     l13765:
 13232                           
 13233                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 996:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 997:         bitWrite(mode, 1, 1);
 13234     09E4  0837               	movf	setXYAxisRange@mode+1,w
 13235     09E5  00F2               	movwf	bitWrite@reg+1
 13236     09E6  0836               	movf	setXYAxisRange@mode,w
 13237     09E7  00F1               	movwf	bitWrite@reg
 13238     09E8  01F3               	clrf	bitWrite@position
 13239     09E9  0AF3               	incf	bitWrite@position,f
 13240     09EA  01F4               	clrf	bitWrite@value
 13241     09EB  0AF4               	incf	bitWrite@value,f
 13242     09EC  3194  248A  3189   	fcall	_bitWrite
 13243     09EF                     l13767:
 13244                           
 13245                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 998:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_2, mode);
 13246     09EF  0140               	movlb	0	; select bank0
 13247     09F0  0836               	movf	setXYAxisRange@mode,w
 13248     09F1  00A6               	movwf	writeRegister@data
 13249     09F2  3003               	movlw	3
 13250     09F3  3190  204F  3189   	fcall	_writeRegister
 13251     09F6                     l13769:
 13252                           
 13253                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1001:     return getEr
      +                          ror();;	Return value of _setXYAxisRange is never used
 13254     09F6  318D  2591  3189   	fcall	_getError
 13255     09F9                     l851:
 13256     09F9  0008               	return
 13257     09FA                     __end_of_setXYAxisRange:
 13258                           
 13259                           	psect	text4
 13260     08C5                     __ptext4:	
 13261 ;; *************** function _setTemperatureEn *****************
 13262 ;; Defined at:
 13263 ;;		line 1110 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13264 ;; Parameters:    Size  Location     Type
 13265 ;;  temperatureE    1    wreg     _Bool 
 13266 ;; Auto vars:     Size  Location     Type
 13267 ;;  temperatureE    1   21[BANK0 ] _Bool 
 13268 ;;  mode            2   22[BANK0 ] unsigned short 
 13269 ;; Return value:  Size  Location     Type
 13270 ;;                  1    wreg      char 
 13271 ;; Registers used:
 13272 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13273 ;; Tracked objects:
 13274 ;;		On entry : 0/0
 13275 ;;		On exit  : 0/0
 13276 ;;		Unchanged: 0/0
 13277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13279 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13280 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13281 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13282 ;;Total ram usage:        5 bytes
 13283 ;; Hardware stack levels used: 1
 13284 ;; Hardware stack levels required when called: 16
 13285 ;; This function calls:
 13286 ;;		_bitWrite
 13287 ;;		_getError
 13288 ;;		_readRegister
 13289 ;;		_writeRegister
 13290 ;; This function is called by:
 13291 ;;		_begin
 13292 ;; This function uses a non-reentrant model
 13293 ;;
 13294                           
 13295     08C5                     _setTemperatureEn:	
 13296                           ;psect for function _setTemperatureEn
 13297                           
 13298                           
 13299                           ;incstack = 0
 13300 ;; hardware stack exceeded
 13301                           ; Regs used in _setTemperatureEn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13302                           ;setTemperatureEn@temperatureEnable stored from wreg
 13303     08C5  0140               	movlb	0	; select bank0
 13304     08C6  00B5               	movwf	setTemperatureEn@temperatureEnable
 13305     08C7                     l13701:
 13306     08C7                     l13703:
 13307                           
 13308                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1112:     mode = readR
      +                          egister(TMAG5273_REG_T_CONFIG);
 13309     08C7  3007               	movlw	7
 13310     08C8  3190  205A  3188   	fcall	_readRegister
 13311     08CB  0140               	movlb	0	; select bank0
 13312     08CC  00B3               	movwf	??_setTemperatureEn
 13313     08CD  01B4               	clrf	??_setTemperatureEn+1
 13314     08CE  0833               	movf	??_setTemperatureEn,w
 13315     08CF  00B6               	movwf	setTemperatureEn@mode
 13316     08D0  0834               	movf	??_setTemperatureEn+1,w
 13317     08D1  00B7               	movwf	setTemperatureEn@mode+1
 13318     08D2                     l13705:
 13319                           
 13320                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1115:     if (temperat
      +                          ureEnable == 0)
 13321     08D2  0835               	movf	setTemperatureEn@temperatureEnable,w
 13322     08D3  1D03               	btfss	3,2
 13323     08D4  28D6               	goto	u10641
 13324     08D5  28D7               	goto	u10640
 13325     08D6                     u10641:
 13326     08D6  28E8               	goto	l13711
 13327     08D7                     u10640:
 13328     08D7                     l13707:
 13329                           
 13330                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1116:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1118:         bitWrite(mode, 0, 0
      +                          );
 13331     08D7  0837               	movf	setTemperatureEn@mode+1,w
 13332     08D8  00F2               	movwf	bitWrite@reg+1
 13333     08D9  0836               	movf	setTemperatureEn@mode,w
 13334     08DA  00F1               	movwf	bitWrite@reg
 13335     08DB  01F3               	clrf	bitWrite@position
 13336     08DC  01F4               	clrf	bitWrite@value
 13337     08DD  3194  248A  3188   	fcall	_bitWrite
 13338     08E0                     l13709:
 13339                           
 13340                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1120:         writeReg
      +                          ister(TMAG5273_REG_T_CONFIG, mode);
 13341     08E0  0140               	movlb	0	; select bank0
 13342     08E1  0836               	movf	setTemperatureEn@mode,w
 13343     08E2  00A6               	movwf	writeRegister@data
 13344     08E3  3007               	movlw	7
 13345     08E4  3190  204F  3188   	fcall	_writeRegister
 13346                           
 13347                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1121:     } else if (t
      +                          emperatureEnable == 1)
 13348     08E7  28FE               	goto	l13717
 13349     08E8                     l13711:
 13350     08E8  0335               	decf	setTemperatureEn@temperatureEnable,w
 13351     08E9  1D03               	btfss	3,2
 13352     08EA  28EC               	goto	u10651
 13353     08EB  28ED               	goto	u10650
 13354     08EC                     u10651:
 13355     08EC  28FE               	goto	l13717
 13356     08ED                     u10650:
 13357     08ED                     l13713:
 13358                           
 13359                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1122:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1123:         bitWrite(mode, 0, 1
      +                          );
 13360     08ED  0837               	movf	setTemperatureEn@mode+1,w
 13361     08EE  00F2               	movwf	bitWrite@reg+1
 13362     08EF  0836               	movf	setTemperatureEn@mode,w
 13363     08F0  00F1               	movwf	bitWrite@reg
 13364     08F1  01F3               	clrf	bitWrite@position
 13365     08F2  01F4               	clrf	bitWrite@value
 13366     08F3  0AF4               	incf	bitWrite@value,f
 13367     08F4  3194  248A  3188   	fcall	_bitWrite
 13368     08F7                     l13715:
 13369                           
 13370                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1124:         writeReg
      +                          ister(TMAG5273_REG_T_CONFIG, mode);
 13371     08F7  0140               	movlb	0	; select bank0
 13372     08F8  0836               	movf	setTemperatureEn@mode,w
 13373     08F9  00A6               	movwf	writeRegister@data
 13374     08FA  3007               	movlw	7
 13375     08FB  3190  204F  3188   	fcall	_writeRegister
 13376     08FE                     l13717:
 13377                           
 13378                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1127:     return getEr
      +                          ror();;	Return value of _setTemperatureEn is never used
 13379     08FE  318D  2591  3188   	fcall	_getError
 13380     0901                     l875:
 13381     0901  0008               	return
 13382     0902                     __end_of_setTemperatureEn:
 13383                           
 13384                           	psect	text5
 13385     0706                     __ptext5:	
 13386 ;; *************** function _setOperatingMode *****************
 13387 ;; Defined at:
 13388 ;;		line 503 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13389 ;; Parameters:    Size  Location     Type
 13390 ;;  opMode          1    wreg     unsigned char 
 13391 ;; Auto vars:     Size  Location     Type
 13392 ;;  opMode          1   21[BANK0 ] unsigned char 
 13393 ;;  mode            2   22[BANK0 ] unsigned short 
 13394 ;; Return value:  Size  Location     Type
 13395 ;;                  1    wreg      char 
 13396 ;; Registers used:
 13397 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13398 ;; Tracked objects:
 13399 ;;		On entry : 0/0
 13400 ;;		On exit  : 0/0
 13401 ;;		Unchanged: 0/0
 13402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13404 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13405 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13406 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13407 ;;Total ram usage:        5 bytes
 13408 ;; Hardware stack levels used: 1
 13409 ;; Hardware stack levels required when called: 16
 13410 ;; This function calls:
 13411 ;;		_bitWrite
 13412 ;;		_getError
 13413 ;;		_readRegister
 13414 ;;		_writeRegister
 13415 ;; This function is called by:
 13416 ;;		_begin
 13417 ;; This function uses a non-reentrant model
 13418 ;;
 13419                           
 13420     0706                     _setOperatingMode:	
 13421                           ;psect for function _setOperatingMode
 13422                           
 13423                           
 13424                           ;incstack = 0
 13425 ;; hardware stack exceeded
 13426                           ; Regs used in _setOperatingMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13427                           ;setOperatingMode@opMode stored from wreg
 13428     0706  0140               	movlb	0	; select bank0
 13429     0707  00B5               	movwf	setOperatingMode@opMode
 13430     0708                     l13721:
 13431     0708                     l13723:
 13432                           
 13433                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 505:     mode = readRe
      +                          gister(TMAG5273_REG_DEVICE_CONFIG_2);
 13434     0708  3001               	movlw	1
 13435     0709  3190  205A  3187   	fcall	_readRegister
 13436     070C  0140               	movlb	0	; select bank0
 13437     070D  00B3               	movwf	??_setOperatingMode
 13438     070E  01B4               	clrf	??_setOperatingMode+1
 13439     070F  0833               	movf	??_setOperatingMode,w
 13440     0710  00B6               	movwf	setOperatingMode@mode
 13441     0711  0834               	movf	??_setOperatingMode+1,w
 13442     0712  00B7               	movwf	setOperatingMode@mode+1
 13443     0713                     l13725:
 13444                           
 13445                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 508:     if (opMode ==
      +                           0)
 13446     0713  0835               	movf	setOperatingMode@opMode,w
 13447     0714  1D03               	btfss	3,2
 13448     0715  2F17               	goto	u10661
 13449     0716  2F18               	goto	u10660
 13450     0717                     u10661:
 13451     0717  2F34               	goto	l13731
 13452     0718                     u10660:
 13453     0718                     l13727:
 13454                           
 13455                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 509:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 511:         bitWrite(mode, 0, 0);
 13456     0718  0837               	movf	setOperatingMode@mode+1,w
 13457     0719  00F2               	movwf	bitWrite@reg+1
 13458     071A  0836               	movf	setOperatingMode@mode,w
 13459     071B  00F1               	movwf	bitWrite@reg
 13460     071C  01F3               	clrf	bitWrite@position
 13461     071D  01F4               	clrf	bitWrite@value
 13462     071E  3194  248A  3187   	fcall	_bitWrite
 13463                           
 13464                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 513:         bitWrite(
      +                          mode, 1, 0);
 13465     0721  0140               	movlb	0	; select bank0
 13466     0722  0837               	movf	setOperatingMode@mode+1,w
 13467     0723  00F2               	movwf	bitWrite@reg+1
 13468     0724  0836               	movf	setOperatingMode@mode,w
 13469     0725  00F1               	movwf	bitWrite@reg
 13470     0726  01F3               	clrf	bitWrite@position
 13471     0727  0AF3               	incf	bitWrite@position,f
 13472     0728  01F4               	clrf	bitWrite@value
 13473     0729  3194  248A  3187   	fcall	_bitWrite
 13474     072C                     l13729:
 13475                           
 13476                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 514:         writeRegi
      +                          ster(TMAG5273_REG_DEVICE_CONFIG_2, mode);
 13477     072C  0140               	movlb	0	; select bank0
 13478     072D  0836               	movf	setOperatingMode@mode,w
 13479     072E  00A6               	movwf	writeRegister@data
 13480     072F  3001               	movlw	1
 13481     0730  3190  204F  3187   	fcall	_writeRegister
 13482                           
 13483                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 515:     } else if (op
      +                          Mode == 0X1)
 13484     0733  2F9D               	goto	l13749
 13485     0734                     l13731:
 13486     0734  0335               	decf	setOperatingMode@opMode,w
 13487     0735  1D03               	btfss	3,2
 13488     0736  2F38               	goto	u10671
 13489     0737  2F39               	goto	u10670
 13490     0738                     u10671:
 13491     0738  2F56               	goto	l13737
 13492     0739                     u10670:
 13493     0739                     l13733:
 13494                           
 13495                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 516:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 518:         bitWrite(mode, 0, 1);
 13496     0739  0837               	movf	setOperatingMode@mode+1,w
 13497     073A  00F2               	movwf	bitWrite@reg+1
 13498     073B  0836               	movf	setOperatingMode@mode,w
 13499     073C  00F1               	movwf	bitWrite@reg
 13500     073D  01F3               	clrf	bitWrite@position
 13501     073E  01F4               	clrf	bitWrite@value
 13502     073F  0AF4               	incf	bitWrite@value,f
 13503     0740  3194  248A  3187   	fcall	_bitWrite
 13504                           
 13505                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 520:         bitWrite(
      +                          mode, 1, 0);
 13506     0743  0140               	movlb	0	; select bank0
 13507     0744  0837               	movf	setOperatingMode@mode+1,w
 13508     0745  00F2               	movwf	bitWrite@reg+1
 13509     0746  0836               	movf	setOperatingMode@mode,w
 13510     0747  00F1               	movwf	bitWrite@reg
 13511     0748  01F3               	clrf	bitWrite@position
 13512     0749  0AF3               	incf	bitWrite@position,f
 13513     074A  01F4               	clrf	bitWrite@value
 13514     074B  3194  248A  3187   	fcall	_bitWrite
 13515     074E                     l13735:
 13516                           
 13517                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 521:         writeRegi
      +                          ster(TMAG5273_REG_DEVICE_CONFIG_2, mode);
 13518     074E  0140               	movlb	0	; select bank0
 13519     074F  0836               	movf	setOperatingMode@mode,w
 13520     0750  00A6               	movwf	writeRegister@data
 13521     0751  3001               	movlw	1
 13522     0752  3190  204F  3187   	fcall	_writeRegister
 13523                           
 13524                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 522:     } else if (op
      +                          Mode == 0X2)
 13525     0755  2F9D               	goto	l13749
 13526     0756                     l13737:
 13527     0756  3002               	movlw	2
 13528     0757  0635               	xorwf	setOperatingMode@opMode,w
 13529     0758  1D03               	btfss	3,2
 13530     0759  2F5B               	goto	u10681
 13531     075A  2F5C               	goto	u10680
 13532     075B                     u10681:
 13533     075B  2F79               	goto	l13743
 13534     075C                     u10680:
 13535     075C                     l13739:
 13536                           
 13537                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 523:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 524:         bitWrite(mode, 0, 0);
 13538     075C  0837               	movf	setOperatingMode@mode+1,w
 13539     075D  00F2               	movwf	bitWrite@reg+1
 13540     075E  0836               	movf	setOperatingMode@mode,w
 13541     075F  00F1               	movwf	bitWrite@reg
 13542     0760  01F3               	clrf	bitWrite@position
 13543     0761  01F4               	clrf	bitWrite@value
 13544     0762  3194  248A  3187   	fcall	_bitWrite
 13545                           
 13546                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 525:         bitWrite(
      +                          mode, 1, 1);
 13547     0765  0140               	movlb	0	; select bank0
 13548     0766  0837               	movf	setOperatingMode@mode+1,w
 13549     0767  00F2               	movwf	bitWrite@reg+1
 13550     0768  0836               	movf	setOperatingMode@mode,w
 13551     0769  00F1               	movwf	bitWrite@reg
 13552     076A  01F3               	clrf	bitWrite@position
 13553     076B  0AF3               	incf	bitWrite@position,f
 13554     076C  01F4               	clrf	bitWrite@value
 13555     076D  0AF4               	incf	bitWrite@value,f
 13556     076E  3194  248A  3187   	fcall	_bitWrite
 13557     0771                     l13741:
 13558                           
 13559                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 526:         writeRegi
      +                          ster(TMAG5273_REG_DEVICE_CONFIG_2, mode);
 13560     0771  0140               	movlb	0	; select bank0
 13561     0772  0836               	movf	setOperatingMode@mode,w
 13562     0773  00A6               	movwf	writeRegister@data
 13563     0774  3001               	movlw	1
 13564     0775  3190  204F  3187   	fcall	_writeRegister
 13565                           
 13566                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 527:     } else if (op
      +                          Mode == 0X3)
 13567     0778  2F9D               	goto	l13749
 13568     0779                     l13743:
 13569     0779  3003               	movlw	3
 13570     077A  0635               	xorwf	setOperatingMode@opMode,w
 13571     077B  1D03               	btfss	3,2
 13572     077C  2F7E               	goto	u10691
 13573     077D  2F7F               	goto	u10690
 13574     077E                     u10691:
 13575     077E  2F9D               	goto	l741
 13576     077F                     u10690:
 13577     077F                     l13745:
 13578                           
 13579                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 528:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 529:         bitWrite(mode, 0, 1);
 13580     077F  0837               	movf	setOperatingMode@mode+1,w
 13581     0780  00F2               	movwf	bitWrite@reg+1
 13582     0781  0836               	movf	setOperatingMode@mode,w
 13583     0782  00F1               	movwf	bitWrite@reg
 13584     0783  01F3               	clrf	bitWrite@position
 13585     0784  01F4               	clrf	bitWrite@value
 13586     0785  0AF4               	incf	bitWrite@value,f
 13587     0786  3194  248A  3187   	fcall	_bitWrite
 13588                           
 13589                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 530:         bitWrite(
      +                          mode, 1, 1);
 13590     0789  0140               	movlb	0	; select bank0
 13591     078A  0837               	movf	setOperatingMode@mode+1,w
 13592     078B  00F2               	movwf	bitWrite@reg+1
 13593     078C  0836               	movf	setOperatingMode@mode,w
 13594     078D  00F1               	movwf	bitWrite@reg
 13595     078E  01F3               	clrf	bitWrite@position
 13596     078F  0AF3               	incf	bitWrite@position,f
 13597     0790  01F4               	clrf	bitWrite@value
 13598     0791  0AF4               	incf	bitWrite@value,f
 13599     0792  3194  248A  3187   	fcall	_bitWrite
 13600     0795                     l13747:
 13601                           
 13602                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 531:         writeRegi
      +                          ster(TMAG5273_REG_DEVICE_CONFIG_2, mode);
 13603     0795  0140               	movlb	0	; select bank0
 13604     0796  0836               	movf	setOperatingMode@mode,w
 13605     0797  00A6               	movwf	writeRegister@data
 13606     0798  3001               	movlw	1
 13607     0799  3190  204F  3187   	fcall	_writeRegister
 13608     079C  2F9D               	goto	l13749
 13609     079D                     l741:
 13610     079D                     l13749:
 13611                           
 13612                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 534:     return getErr
      +                          or();;	Return value of _setOperatingMode is never used
 13613     079D  318D  2591  3187   	fcall	_getError
 13614     07A0                     l745:
 13615     07A0  0008               	return
 13616     07A1                     __end_of_setOperatingMode:
 13617                           
 13618                           	psect	text6
 13619     00A8                     __ptext6:	
 13620 ;; *************** function _setMagneticChannel *****************
 13621 ;; Defined at:
 13622 ;;		line 555 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 13623 ;; Parameters:    Size  Location     Type
 13624 ;;  channelMode     1    wreg     unsigned char 
 13625 ;; Auto vars:     Size  Location     Type
 13626 ;;  channelMode     1   21[BANK0 ] unsigned char 
 13627 ;;  mode            2   22[BANK0 ] unsigned short 
 13628 ;; Return value:  Size  Location     Type
 13629 ;;                  1    wreg      char 
 13630 ;; Registers used:
 13631 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13632 ;; Tracked objects:
 13633 ;;		On entry : 0/0
 13634 ;;		On exit  : 0/0
 13635 ;;		Unchanged: 0/0
 13636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13638 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13639 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13640 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13641 ;;Total ram usage:        5 bytes
 13642 ;; Hardware stack levels used: 1
 13643 ;; Hardware stack levels required when called: 16
 13644 ;; This function calls:
 13645 ;;		_bitWrite
 13646 ;;		_getError
 13647 ;;		_readRegister
 13648 ;;		_writeRegister
 13649 ;; This function is called by:
 13650 ;;		_begin
 13651 ;; This function uses a non-reentrant model
 13652 ;;
 13653                           
 13654     00A8                     _setMagneticChannel:	
 13655                           ;psect for function _setMagneticChannel
 13656                           
 13657                           
 13658                           ;incstack = 0
 13659 ;; hardware stack exceeded
 13660                           ; Regs used in _setMagneticChannel: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13661                           ;setMagneticChannel@channelMode stored from wreg
 13662     00A8  0140               	movlb	0	; select bank0
 13663     00A9  00B5               	movwf	setMagneticChannel@channelMode
 13664     00AA                     l13621:
 13665     00AA                     l13623:
 13666                           
 13667                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 557:     mode = readRe
      +                          gister(TMAG5273_REG_SENSOR_CONFIG_1);
 13668     00AA  3002               	movlw	2
 13669     00AB  3190  205A  3180   	fcall	_readRegister
 13670     00AE  0140               	movlb	0	; select bank0
 13671     00AF  00B3               	movwf	??_setMagneticChannel
 13672     00B0  01B4               	clrf	??_setMagneticChannel+1
 13673     00B1  0833               	movf	??_setMagneticChannel,w
 13674     00B2  00B6               	movwf	setMagneticChannel@mode
 13675     00B3  0834               	movf	??_setMagneticChannel+1,w
 13676     00B4  00B7               	movwf	setMagneticChannel@mode+1
 13677     00B5                     l13625:
 13678                           
 13679                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 560:     if (channelMo
      +                          de == 0X0)
 13680     00B5  0835               	movf	setMagneticChannel@channelMode,w
 13681     00B6  1D03               	btfss	3,2
 13682     00B7  28B9               	goto	u10521
 13683     00B8  28BA               	goto	u10520
 13684     00B9                     u10521:
 13685     00B9  28ED               	goto	l13631
 13686     00BA                     u10520:
 13687     00BA                     l13627:
 13688                           
 13689                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 561:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 563:         bitWrite(mode, 4, 0);
 13690     00BA  0837               	movf	setMagneticChannel@mode+1,w
 13691     00BB  00F2               	movwf	bitWrite@reg+1
 13692     00BC  0836               	movf	setMagneticChannel@mode,w
 13693     00BD  00F1               	movwf	bitWrite@reg
 13694     00BE  3004               	movlw	4
 13695     00BF  00F3               	movwf	bitWrite@position
 13696     00C0  01F4               	clrf	bitWrite@value
 13697     00C1  3194  248A  3180   	fcall	_bitWrite
 13698                           
 13699                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 565:         bitWrite(
      +                          mode, 5, 0);
 13700     00C4  0140               	movlb	0	; select bank0
 13701     00C5  0837               	movf	setMagneticChannel@mode+1,w
 13702     00C6  00F2               	movwf	bitWrite@reg+1
 13703     00C7  0836               	movf	setMagneticChannel@mode,w
 13704     00C8  00F1               	movwf	bitWrite@reg
 13705     00C9  3005               	movlw	5
 13706     00CA  00F3               	movwf	bitWrite@position
 13707     00CB  01F4               	clrf	bitWrite@value
 13708     00CC  3194  248A  3180   	fcall	_bitWrite
 13709                           
 13710                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 567:         bitWrite(
      +                          mode, 6, 0);
 13711     00CF  0140               	movlb	0	; select bank0
 13712     00D0  0837               	movf	setMagneticChannel@mode+1,w
 13713     00D1  00F2               	movwf	bitWrite@reg+1
 13714     00D2  0836               	movf	setMagneticChannel@mode,w
 13715     00D3  00F1               	movwf	bitWrite@reg
 13716     00D4  3006               	movlw	6
 13717     00D5  00F3               	movwf	bitWrite@position
 13718     00D6  01F4               	clrf	bitWrite@value
 13719     00D7  3194  248A  3180   	fcall	_bitWrite
 13720                           
 13721                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 569:         bitWrite(
      +                          mode, 7, 0);
 13722     00DA  0140               	movlb	0	; select bank0
 13723     00DB  0837               	movf	setMagneticChannel@mode+1,w
 13724     00DC  00F2               	movwf	bitWrite@reg+1
 13725     00DD  0836               	movf	setMagneticChannel@mode,w
 13726     00DE  00F1               	movwf	bitWrite@reg
 13727     00DF  3007               	movlw	7
 13728     00E0  00F3               	movwf	bitWrite@position
 13729     00E1  01F4               	clrf	bitWrite@value
 13730     00E2  3194  248A  3180   	fcall	_bitWrite
 13731     00E5                     l13629:
 13732                           
 13733                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 571:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 13734     00E5  0140               	movlb	0	; select bank0
 13735     00E6  0836               	movf	setMagneticChannel@mode,w
 13736     00E7  00A6               	movwf	writeRegister@data
 13737     00E8  3002               	movlw	2
 13738     00E9  3190  204F  3180   	fcall	_writeRegister
 13739                           
 13740                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 573:     } else if (ch
      +                          annelMode == 0X1)
 13741     00EC  2B73               	goto	l13697
 13742     00ED                     l13631:
 13743     00ED  0335               	decf	setMagneticChannel@channelMode,w
 13744     00EE  1D03               	btfss	3,2
 13745     00EF  28F1               	goto	u10531
 13746     00F0  28F2               	goto	u10530
 13747     00F1                     u10531:
 13748     00F1  2926               	goto	l13637
 13749     00F2                     u10530:
 13750     00F2                     l13633:
 13751                           
 13752                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 574:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 575:         bitWrite(mode, 4, 1);
 13753     00F2  0837               	movf	setMagneticChannel@mode+1,w
 13754     00F3  00F2               	movwf	bitWrite@reg+1
 13755     00F4  0836               	movf	setMagneticChannel@mode,w
 13756     00F5  00F1               	movwf	bitWrite@reg
 13757     00F6  3004               	movlw	4
 13758     00F7  00F3               	movwf	bitWrite@position
 13759     00F8  01F4               	clrf	bitWrite@value
 13760     00F9  0AF4               	incf	bitWrite@value,f
 13761     00FA  3194  248A  3180   	fcall	_bitWrite
 13762                           
 13763                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 576:         bitWrite(
      +                          mode, 5, 0);
 13764     00FD  0140               	movlb	0	; select bank0
 13765     00FE  0837               	movf	setMagneticChannel@mode+1,w
 13766     00FF  00F2               	movwf	bitWrite@reg+1
 13767     0100  0836               	movf	setMagneticChannel@mode,w
 13768     0101  00F1               	movwf	bitWrite@reg
 13769     0102  3005               	movlw	5
 13770     0103  00F3               	movwf	bitWrite@position
 13771     0104  01F4               	clrf	bitWrite@value
 13772     0105  3194  248A  3180   	fcall	_bitWrite
 13773                           
 13774                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 577:         bitWrite(
      +                          mode, 6, 0);
 13775     0108  0140               	movlb	0	; select bank0
 13776     0109  0837               	movf	setMagneticChannel@mode+1,w
 13777     010A  00F2               	movwf	bitWrite@reg+1
 13778     010B  0836               	movf	setMagneticChannel@mode,w
 13779     010C  00F1               	movwf	bitWrite@reg
 13780     010D  3006               	movlw	6
 13781     010E  00F3               	movwf	bitWrite@position
 13782     010F  01F4               	clrf	bitWrite@value
 13783     0110  3194  248A  3180   	fcall	_bitWrite
 13784                           
 13785                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 578:         bitWrite(
      +                          mode, 7, 0);
 13786     0113  0140               	movlb	0	; select bank0
 13787     0114  0837               	movf	setMagneticChannel@mode+1,w
 13788     0115  00F2               	movwf	bitWrite@reg+1
 13789     0116  0836               	movf	setMagneticChannel@mode,w
 13790     0117  00F1               	movwf	bitWrite@reg
 13791     0118  3007               	movlw	7
 13792     0119  00F3               	movwf	bitWrite@position
 13793     011A  01F4               	clrf	bitWrite@value
 13794     011B  3194  248A  3180   	fcall	_bitWrite
 13795     011E                     l13635:
 13796                           
 13797                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 579:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 13798     011E  0140               	movlb	0	; select bank0
 13799     011F  0836               	movf	setMagneticChannel@mode,w
 13800     0120  00A6               	movwf	writeRegister@data
 13801     0121  3002               	movlw	2
 13802     0122  3190  204F  3180   	fcall	_writeRegister
 13803                           
 13804                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 580:     } else if (ch
      +                          annelMode == 0X2)
 13805     0125  2B73               	goto	l13697
 13806     0126                     l13637:
 13807     0126  3002               	movlw	2
 13808     0127  0635               	xorwf	setMagneticChannel@channelMode,w
 13809     0128  1D03               	btfss	3,2
 13810     0129  292B               	goto	u10541
 13811     012A  292C               	goto	u10540
 13812     012B                     u10541:
 13813     012B  2960               	goto	l13643
 13814     012C                     u10540:
 13815     012C                     l13639:
 13816                           
 13817                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 581:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 582:         bitWrite(mode, 4, 0);
 13818     012C  0837               	movf	setMagneticChannel@mode+1,w
 13819     012D  00F2               	movwf	bitWrite@reg+1
 13820     012E  0836               	movf	setMagneticChannel@mode,w
 13821     012F  00F1               	movwf	bitWrite@reg
 13822     0130  3004               	movlw	4
 13823     0131  00F3               	movwf	bitWrite@position
 13824     0132  01F4               	clrf	bitWrite@value
 13825     0133  3194  248A  3180   	fcall	_bitWrite
 13826                           
 13827                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 583:         bitWrite(
      +                          mode, 5, 1);
 13828     0136  0140               	movlb	0	; select bank0
 13829     0137  0837               	movf	setMagneticChannel@mode+1,w
 13830     0138  00F2               	movwf	bitWrite@reg+1
 13831     0139  0836               	movf	setMagneticChannel@mode,w
 13832     013A  00F1               	movwf	bitWrite@reg
 13833     013B  3005               	movlw	5
 13834     013C  00F3               	movwf	bitWrite@position
 13835     013D  01F4               	clrf	bitWrite@value
 13836     013E  0AF4               	incf	bitWrite@value,f
 13837     013F  3194  248A  3180   	fcall	_bitWrite
 13838                           
 13839                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 584:         bitWrite(
      +                          mode, 6, 0);
 13840     0142  0140               	movlb	0	; select bank0
 13841     0143  0837               	movf	setMagneticChannel@mode+1,w
 13842     0144  00F2               	movwf	bitWrite@reg+1
 13843     0145  0836               	movf	setMagneticChannel@mode,w
 13844     0146  00F1               	movwf	bitWrite@reg
 13845     0147  3006               	movlw	6
 13846     0148  00F3               	movwf	bitWrite@position
 13847     0149  01F4               	clrf	bitWrite@value
 13848     014A  3194  248A  3180   	fcall	_bitWrite
 13849                           
 13850                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 585:         bitWrite(
      +                          mode, 7, 0);
 13851     014D  0140               	movlb	0	; select bank0
 13852     014E  0837               	movf	setMagneticChannel@mode+1,w
 13853     014F  00F2               	movwf	bitWrite@reg+1
 13854     0150  0836               	movf	setMagneticChannel@mode,w
 13855     0151  00F1               	movwf	bitWrite@reg
 13856     0152  3007               	movlw	7
 13857     0153  00F3               	movwf	bitWrite@position
 13858     0154  01F4               	clrf	bitWrite@value
 13859     0155  3194  248A  3180   	fcall	_bitWrite
 13860     0158                     l13641:
 13861                           
 13862                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 586:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 13863     0158  0140               	movlb	0	; select bank0
 13864     0159  0836               	movf	setMagneticChannel@mode,w
 13865     015A  00A6               	movwf	writeRegister@data
 13866     015B  3002               	movlw	2
 13867     015C  3190  204F  3180   	fcall	_writeRegister
 13868                           
 13869                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 587:     } else if (ch
      +                          annelMode == 0X3)
 13870     015F  2B73               	goto	l13697
 13871     0160                     l13643:
 13872     0160  3003               	movlw	3
 13873     0161  0635               	xorwf	setMagneticChannel@channelMode,w
 13874     0162  1D03               	btfss	3,2
 13875     0163  2965               	goto	u10551
 13876     0164  2966               	goto	u10550
 13877     0165                     u10551:
 13878     0165  299B               	goto	l13649
 13879     0166                     u10550:
 13880     0166                     l13645:
 13881                           
 13882                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 588:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 589:         bitWrite(mode, 4, 1);
 13883     0166  0837               	movf	setMagneticChannel@mode+1,w
 13884     0167  00F2               	movwf	bitWrite@reg+1
 13885     0168  0836               	movf	setMagneticChannel@mode,w
 13886     0169  00F1               	movwf	bitWrite@reg
 13887     016A  3004               	movlw	4
 13888     016B  00F3               	movwf	bitWrite@position
 13889     016C  01F4               	clrf	bitWrite@value
 13890     016D  0AF4               	incf	bitWrite@value,f
 13891     016E  3194  248A  3180   	fcall	_bitWrite
 13892                           
 13893                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 590:         bitWrite(
      +                          mode, 5, 1);
 13894     0171  0140               	movlb	0	; select bank0
 13895     0172  0837               	movf	setMagneticChannel@mode+1,w
 13896     0173  00F2               	movwf	bitWrite@reg+1
 13897     0174  0836               	movf	setMagneticChannel@mode,w
 13898     0175  00F1               	movwf	bitWrite@reg
 13899     0176  3005               	movlw	5
 13900     0177  00F3               	movwf	bitWrite@position
 13901     0178  01F4               	clrf	bitWrite@value
 13902     0179  0AF4               	incf	bitWrite@value,f
 13903     017A  3194  248A  3180   	fcall	_bitWrite
 13904                           
 13905                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 591:         bitWrite(
      +                          mode, 6, 0);
 13906     017D  0140               	movlb	0	; select bank0
 13907     017E  0837               	movf	setMagneticChannel@mode+1,w
 13908     017F  00F2               	movwf	bitWrite@reg+1
 13909     0180  0836               	movf	setMagneticChannel@mode,w
 13910     0181  00F1               	movwf	bitWrite@reg
 13911     0182  3006               	movlw	6
 13912     0183  00F3               	movwf	bitWrite@position
 13913     0184  01F4               	clrf	bitWrite@value
 13914     0185  3194  248A  3180   	fcall	_bitWrite
 13915                           
 13916                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 592:         bitWrite(
      +                          mode, 7, 0);
 13917     0188  0140               	movlb	0	; select bank0
 13918     0189  0837               	movf	setMagneticChannel@mode+1,w
 13919     018A  00F2               	movwf	bitWrite@reg+1
 13920     018B  0836               	movf	setMagneticChannel@mode,w
 13921     018C  00F1               	movwf	bitWrite@reg
 13922     018D  3007               	movlw	7
 13923     018E  00F3               	movwf	bitWrite@position
 13924     018F  01F4               	clrf	bitWrite@value
 13925     0190  3194  248A  3180   	fcall	_bitWrite
 13926     0193                     l13647:
 13927                           
 13928                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 593:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 13929     0193  0140               	movlb	0	; select bank0
 13930     0194  0836               	movf	setMagneticChannel@mode,w
 13931     0195  00A6               	movwf	writeRegister@data
 13932     0196  3002               	movlw	2
 13933     0197  3190  204F  3180   	fcall	_writeRegister
 13934                           
 13935                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 594:     } else if (ch
      +                          annelMode == 0X4)
 13936     019A  2B73               	goto	l13697
 13937     019B                     l13649:
 13938     019B  3004               	movlw	4
 13939     019C  0635               	xorwf	setMagneticChannel@channelMode,w
 13940     019D  1D03               	btfss	3,2
 13941     019E  29A0               	goto	u10561
 13942     019F  29A1               	goto	u10560
 13943     01A0                     u10561:
 13944     01A0  29D5               	goto	l13655
 13945     01A1                     u10560:
 13946     01A1                     l13651:
 13947                           
 13948                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 595:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 596:         bitWrite(mode, 4, 0);
 13949     01A1  0837               	movf	setMagneticChannel@mode+1,w
 13950     01A2  00F2               	movwf	bitWrite@reg+1
 13951     01A3  0836               	movf	setMagneticChannel@mode,w
 13952     01A4  00F1               	movwf	bitWrite@reg
 13953     01A5  3004               	movlw	4
 13954     01A6  00F3               	movwf	bitWrite@position
 13955     01A7  01F4               	clrf	bitWrite@value
 13956     01A8  3194  248A  3180   	fcall	_bitWrite
 13957                           
 13958                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 597:         bitWrite(
      +                          mode, 5, 0);
 13959     01AB  0140               	movlb	0	; select bank0
 13960     01AC  0837               	movf	setMagneticChannel@mode+1,w
 13961     01AD  00F2               	movwf	bitWrite@reg+1
 13962     01AE  0836               	movf	setMagneticChannel@mode,w
 13963     01AF  00F1               	movwf	bitWrite@reg
 13964     01B0  3005               	movlw	5
 13965     01B1  00F3               	movwf	bitWrite@position
 13966     01B2  01F4               	clrf	bitWrite@value
 13967     01B3  3194  248A  3180   	fcall	_bitWrite
 13968                           
 13969                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 598:         bitWrite(
      +                          mode, 6, 1);
 13970     01B6  0140               	movlb	0	; select bank0
 13971     01B7  0837               	movf	setMagneticChannel@mode+1,w
 13972     01B8  00F2               	movwf	bitWrite@reg+1
 13973     01B9  0836               	movf	setMagneticChannel@mode,w
 13974     01BA  00F1               	movwf	bitWrite@reg
 13975     01BB  3006               	movlw	6
 13976     01BC  00F3               	movwf	bitWrite@position
 13977     01BD  01F4               	clrf	bitWrite@value
 13978     01BE  0AF4               	incf	bitWrite@value,f
 13979     01BF  3194  248A  3180   	fcall	_bitWrite
 13980                           
 13981                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 599:         bitWrite(
      +                          mode, 7, 0);
 13982     01C2  0140               	movlb	0	; select bank0
 13983     01C3  0837               	movf	setMagneticChannel@mode+1,w
 13984     01C4  00F2               	movwf	bitWrite@reg+1
 13985     01C5  0836               	movf	setMagneticChannel@mode,w
 13986     01C6  00F1               	movwf	bitWrite@reg
 13987     01C7  3007               	movlw	7
 13988     01C8  00F3               	movwf	bitWrite@position
 13989     01C9  01F4               	clrf	bitWrite@value
 13990     01CA  3194  248A  3180   	fcall	_bitWrite
 13991     01CD                     l13653:
 13992                           
 13993                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 600:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 13994     01CD  0140               	movlb	0	; select bank0
 13995     01CE  0836               	movf	setMagneticChannel@mode,w
 13996     01CF  00A6               	movwf	writeRegister@data
 13997     01D0  3002               	movlw	2
 13998     01D1  3190  204F  3180   	fcall	_writeRegister
 13999                           
 14000                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 601:     } else if (ch
      +                          annelMode == 0X5)
 14001     01D4  2B73               	goto	l13697
 14002     01D5                     l13655:
 14003     01D5  3005               	movlw	5
 14004     01D6  0635               	xorwf	setMagneticChannel@channelMode,w
 14005     01D7  1D03               	btfss	3,2
 14006     01D8  29DA               	goto	u10571
 14007     01D9  29DB               	goto	u10570
 14008     01DA                     u10571:
 14009     01DA  2A10               	goto	l13661
 14010     01DB                     u10570:
 14011     01DB                     l13657:
 14012                           
 14013                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 602:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 603:         bitWrite(mode, 4, 1);
 14014     01DB  0837               	movf	setMagneticChannel@mode+1,w
 14015     01DC  00F2               	movwf	bitWrite@reg+1
 14016     01DD  0836               	movf	setMagneticChannel@mode,w
 14017     01DE  00F1               	movwf	bitWrite@reg
 14018     01DF  3004               	movlw	4
 14019     01E0  00F3               	movwf	bitWrite@position
 14020     01E1  01F4               	clrf	bitWrite@value
 14021     01E2  0AF4               	incf	bitWrite@value,f
 14022     01E3  3194  248A  3180   	fcall	_bitWrite
 14023                           
 14024                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 604:         bitWrite(
      +                          mode, 5, 0);
 14025     01E6  0140               	movlb	0	; select bank0
 14026     01E7  0837               	movf	setMagneticChannel@mode+1,w
 14027     01E8  00F2               	movwf	bitWrite@reg+1
 14028     01E9  0836               	movf	setMagneticChannel@mode,w
 14029     01EA  00F1               	movwf	bitWrite@reg
 14030     01EB  3005               	movlw	5
 14031     01EC  00F3               	movwf	bitWrite@position
 14032     01ED  01F4               	clrf	bitWrite@value
 14033     01EE  3194  248A  3180   	fcall	_bitWrite
 14034                           
 14035                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 605:         bitWrite(
      +                          mode, 6, 1);
 14036     01F1  0140               	movlb	0	; select bank0
 14037     01F2  0837               	movf	setMagneticChannel@mode+1,w
 14038     01F3  00F2               	movwf	bitWrite@reg+1
 14039     01F4  0836               	movf	setMagneticChannel@mode,w
 14040     01F5  00F1               	movwf	bitWrite@reg
 14041     01F6  3006               	movlw	6
 14042     01F7  00F3               	movwf	bitWrite@position
 14043     01F8  01F4               	clrf	bitWrite@value
 14044     01F9  0AF4               	incf	bitWrite@value,f
 14045     01FA  3194  248A  3180   	fcall	_bitWrite
 14046                           
 14047                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 606:         bitWrite(
      +                          mode, 7, 0);
 14048     01FD  0140               	movlb	0	; select bank0
 14049     01FE  0837               	movf	setMagneticChannel@mode+1,w
 14050     01FF  00F2               	movwf	bitWrite@reg+1
 14051     0200  0836               	movf	setMagneticChannel@mode,w
 14052     0201  00F1               	movwf	bitWrite@reg
 14053     0202  3007               	movlw	7
 14054     0203  00F3               	movwf	bitWrite@position
 14055     0204  01F4               	clrf	bitWrite@value
 14056     0205  3194  248A  3180   	fcall	_bitWrite
 14057     0208                     l13659:
 14058                           
 14059                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 607:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14060     0208  0140               	movlb	0	; select bank0
 14061     0209  0836               	movf	setMagneticChannel@mode,w
 14062     020A  00A6               	movwf	writeRegister@data
 14063     020B  3002               	movlw	2
 14064     020C  3190  204F  3180   	fcall	_writeRegister
 14065                           
 14066                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 608:     } else if (ch
      +                          annelMode == 0X6)
 14067     020F  2B73               	goto	l13697
 14068     0210                     l13661:
 14069     0210  3006               	movlw	6
 14070     0211  0635               	xorwf	setMagneticChannel@channelMode,w
 14071     0212  1D03               	btfss	3,2
 14072     0213  2A15               	goto	u10581
 14073     0214  2A16               	goto	u10580
 14074     0215                     u10581:
 14075     0215  2A4B               	goto	l13667
 14076     0216                     u10580:
 14077     0216                     l13663:
 14078                           
 14079                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 609:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 610:         bitWrite(mode, 4, 0);
 14080     0216  0837               	movf	setMagneticChannel@mode+1,w
 14081     0217  00F2               	movwf	bitWrite@reg+1
 14082     0218  0836               	movf	setMagneticChannel@mode,w
 14083     0219  00F1               	movwf	bitWrite@reg
 14084     021A  3004               	movlw	4
 14085     021B  00F3               	movwf	bitWrite@position
 14086     021C  01F4               	clrf	bitWrite@value
 14087     021D  3194  248A  3180   	fcall	_bitWrite
 14088                           
 14089                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 611:         bitWrite(
      +                          mode, 5, 1);
 14090     0220  0140               	movlb	0	; select bank0
 14091     0221  0837               	movf	setMagneticChannel@mode+1,w
 14092     0222  00F2               	movwf	bitWrite@reg+1
 14093     0223  0836               	movf	setMagneticChannel@mode,w
 14094     0224  00F1               	movwf	bitWrite@reg
 14095     0225  3005               	movlw	5
 14096     0226  00F3               	movwf	bitWrite@position
 14097     0227  01F4               	clrf	bitWrite@value
 14098     0228  0AF4               	incf	bitWrite@value,f
 14099     0229  3194  248A  3180   	fcall	_bitWrite
 14100                           
 14101                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 612:         bitWrite(
      +                          mode, 6, 1);
 14102     022C  0140               	movlb	0	; select bank0
 14103     022D  0837               	movf	setMagneticChannel@mode+1,w
 14104     022E  00F2               	movwf	bitWrite@reg+1
 14105     022F  0836               	movf	setMagneticChannel@mode,w
 14106     0230  00F1               	movwf	bitWrite@reg
 14107     0231  3006               	movlw	6
 14108     0232  00F3               	movwf	bitWrite@position
 14109     0233  01F4               	clrf	bitWrite@value
 14110     0234  0AF4               	incf	bitWrite@value,f
 14111     0235  3194  248A  3180   	fcall	_bitWrite
 14112                           
 14113                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 613:         bitWrite(
      +                          mode, 7, 0);
 14114     0238  0140               	movlb	0	; select bank0
 14115     0239  0837               	movf	setMagneticChannel@mode+1,w
 14116     023A  00F2               	movwf	bitWrite@reg+1
 14117     023B  0836               	movf	setMagneticChannel@mode,w
 14118     023C  00F1               	movwf	bitWrite@reg
 14119     023D  3007               	movlw	7
 14120     023E  00F3               	movwf	bitWrite@position
 14121     023F  01F4               	clrf	bitWrite@value
 14122     0240  3194  248A  3180   	fcall	_bitWrite
 14123     0243                     l13665:
 14124                           
 14125                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 614:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14126     0243  0140               	movlb	0	; select bank0
 14127     0244  0836               	movf	setMagneticChannel@mode,w
 14128     0245  00A6               	movwf	writeRegister@data
 14129     0246  3002               	movlw	2
 14130     0247  3190  204F  3180   	fcall	_writeRegister
 14131                           
 14132                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 615:     } else if (ch
      +                          annelMode == 0X7)
 14133     024A  2B73               	goto	l13697
 14134     024B                     l13667:
 14135     024B  3007               	movlw	7
 14136     024C  0635               	xorwf	setMagneticChannel@channelMode,w
 14137     024D  1D03               	btfss	3,2
 14138     024E  2A50               	goto	u10591
 14139     024F  2A51               	goto	u10590
 14140     0250                     u10591:
 14141     0250  2A87               	goto	l13673
 14142     0251                     u10590:
 14143     0251                     l13669:
 14144                           
 14145                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 616:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 617:         bitWrite(mode, 4, 1);
 14146     0251  0837               	movf	setMagneticChannel@mode+1,w
 14147     0252  00F2               	movwf	bitWrite@reg+1
 14148     0253  0836               	movf	setMagneticChannel@mode,w
 14149     0254  00F1               	movwf	bitWrite@reg
 14150     0255  3004               	movlw	4
 14151     0256  00F3               	movwf	bitWrite@position
 14152     0257  01F4               	clrf	bitWrite@value
 14153     0258  0AF4               	incf	bitWrite@value,f
 14154     0259  3194  248A  3180   	fcall	_bitWrite
 14155                           
 14156                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 618:         bitWrite(
      +                          mode, 5, 1);
 14157     025C  0140               	movlb	0	; select bank0
 14158     025D  0837               	movf	setMagneticChannel@mode+1,w
 14159     025E  00F2               	movwf	bitWrite@reg+1
 14160     025F  0836               	movf	setMagneticChannel@mode,w
 14161     0260  00F1               	movwf	bitWrite@reg
 14162     0261  3005               	movlw	5
 14163     0262  00F3               	movwf	bitWrite@position
 14164     0263  01F4               	clrf	bitWrite@value
 14165     0264  0AF4               	incf	bitWrite@value,f
 14166     0265  3194  248A  3180   	fcall	_bitWrite
 14167                           
 14168                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 619:         bitWrite(
      +                          mode, 6, 1);
 14169     0268  0140               	movlb	0	; select bank0
 14170     0269  0837               	movf	setMagneticChannel@mode+1,w
 14171     026A  00F2               	movwf	bitWrite@reg+1
 14172     026B  0836               	movf	setMagneticChannel@mode,w
 14173     026C  00F1               	movwf	bitWrite@reg
 14174     026D  3006               	movlw	6
 14175     026E  00F3               	movwf	bitWrite@position
 14176     026F  01F4               	clrf	bitWrite@value
 14177     0270  0AF4               	incf	bitWrite@value,f
 14178     0271  3194  248A  3180   	fcall	_bitWrite
 14179                           
 14180                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 620:         bitWrite(
      +                          mode, 7, 0);
 14181     0274  0140               	movlb	0	; select bank0
 14182     0275  0837               	movf	setMagneticChannel@mode+1,w
 14183     0276  00F2               	movwf	bitWrite@reg+1
 14184     0277  0836               	movf	setMagneticChannel@mode,w
 14185     0278  00F1               	movwf	bitWrite@reg
 14186     0279  3007               	movlw	7
 14187     027A  00F3               	movwf	bitWrite@position
 14188     027B  01F4               	clrf	bitWrite@value
 14189     027C  3194  248A  3180   	fcall	_bitWrite
 14190     027F                     l13671:
 14191                           
 14192                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 621:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14193     027F  0140               	movlb	0	; select bank0
 14194     0280  0836               	movf	setMagneticChannel@mode,w
 14195     0281  00A6               	movwf	writeRegister@data
 14196     0282  3002               	movlw	2
 14197     0283  3190  204F  3180   	fcall	_writeRegister
 14198                           
 14199                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 622:     } else if (ch
      +                          annelMode == 0X8)
 14200     0286  2B73               	goto	l13697
 14201     0287                     l13673:
 14202     0287  3008               	movlw	8
 14203     0288  0635               	xorwf	setMagneticChannel@channelMode,w
 14204     0289  1D03               	btfss	3,2
 14205     028A  2A8C               	goto	u10601
 14206     028B  2A8D               	goto	u10600
 14207     028C                     u10601:
 14208     028C  2AC1               	goto	l13679
 14209     028D                     u10600:
 14210     028D                     l13675:
 14211                           
 14212                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 623:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 624:         bitWrite(mode, 4, 0);
 14213     028D  0837               	movf	setMagneticChannel@mode+1,w
 14214     028E  00F2               	movwf	bitWrite@reg+1
 14215     028F  0836               	movf	setMagneticChannel@mode,w
 14216     0290  00F1               	movwf	bitWrite@reg
 14217     0291  3004               	movlw	4
 14218     0292  00F3               	movwf	bitWrite@position
 14219     0293  01F4               	clrf	bitWrite@value
 14220     0294  3194  248A  3180   	fcall	_bitWrite
 14221                           
 14222                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 625:         bitWrite(
      +                          mode, 5, 0);
 14223     0297  0140               	movlb	0	; select bank0
 14224     0298  0837               	movf	setMagneticChannel@mode+1,w
 14225     0299  00F2               	movwf	bitWrite@reg+1
 14226     029A  0836               	movf	setMagneticChannel@mode,w
 14227     029B  00F1               	movwf	bitWrite@reg
 14228     029C  3005               	movlw	5
 14229     029D  00F3               	movwf	bitWrite@position
 14230     029E  01F4               	clrf	bitWrite@value
 14231     029F  3194  248A  3180   	fcall	_bitWrite
 14232                           
 14233                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 626:         bitWrite(
      +                          mode, 6, 0);
 14234     02A2  0140               	movlb	0	; select bank0
 14235     02A3  0837               	movf	setMagneticChannel@mode+1,w
 14236     02A4  00F2               	movwf	bitWrite@reg+1
 14237     02A5  0836               	movf	setMagneticChannel@mode,w
 14238     02A6  00F1               	movwf	bitWrite@reg
 14239     02A7  3006               	movlw	6
 14240     02A8  00F3               	movwf	bitWrite@position
 14241     02A9  01F4               	clrf	bitWrite@value
 14242     02AA  3194  248A  3180   	fcall	_bitWrite
 14243                           
 14244                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 627:         bitWrite(
      +                          mode, 7, 1);
 14245     02AD  0140               	movlb	0	; select bank0
 14246     02AE  0837               	movf	setMagneticChannel@mode+1,w
 14247     02AF  00F2               	movwf	bitWrite@reg+1
 14248     02B0  0836               	movf	setMagneticChannel@mode,w
 14249     02B1  00F1               	movwf	bitWrite@reg
 14250     02B2  3007               	movlw	7
 14251     02B3  00F3               	movwf	bitWrite@position
 14252     02B4  01F4               	clrf	bitWrite@value
 14253     02B5  0AF4               	incf	bitWrite@value,f
 14254     02B6  3194  248A  3180   	fcall	_bitWrite
 14255     02B9                     l13677:
 14256                           
 14257                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 628:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14258     02B9  0140               	movlb	0	; select bank0
 14259     02BA  0836               	movf	setMagneticChannel@mode,w
 14260     02BB  00A6               	movwf	writeRegister@data
 14261     02BC  3002               	movlw	2
 14262     02BD  3190  204F  3180   	fcall	_writeRegister
 14263                           
 14264                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 629:     } else if (ch
      +                          annelMode == 0X9)
 14265     02C0  2B73               	goto	l13697
 14266     02C1                     l13679:
 14267     02C1  3009               	movlw	9
 14268     02C2  0635               	xorwf	setMagneticChannel@channelMode,w
 14269     02C3  1D03               	btfss	3,2
 14270     02C4  2AC6               	goto	u10611
 14271     02C5  2AC7               	goto	u10610
 14272     02C6                     u10611:
 14273     02C6  2AFC               	goto	l13685
 14274     02C7                     u10610:
 14275     02C7                     l13681:
 14276                           
 14277                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 630:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 631:         bitWrite(mode, 4, 1);
 14278     02C7  0837               	movf	setMagneticChannel@mode+1,w
 14279     02C8  00F2               	movwf	bitWrite@reg+1
 14280     02C9  0836               	movf	setMagneticChannel@mode,w
 14281     02CA  00F1               	movwf	bitWrite@reg
 14282     02CB  3004               	movlw	4
 14283     02CC  00F3               	movwf	bitWrite@position
 14284     02CD  01F4               	clrf	bitWrite@value
 14285     02CE  0AF4               	incf	bitWrite@value,f
 14286     02CF  3194  248A  3180   	fcall	_bitWrite
 14287                           
 14288                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 632:         bitWrite(
      +                          mode, 5, 0);
 14289     02D2  0140               	movlb	0	; select bank0
 14290     02D3  0837               	movf	setMagneticChannel@mode+1,w
 14291     02D4  00F2               	movwf	bitWrite@reg+1
 14292     02D5  0836               	movf	setMagneticChannel@mode,w
 14293     02D6  00F1               	movwf	bitWrite@reg
 14294     02D7  3005               	movlw	5
 14295     02D8  00F3               	movwf	bitWrite@position
 14296     02D9  01F4               	clrf	bitWrite@value
 14297     02DA  3194  248A  3180   	fcall	_bitWrite
 14298                           
 14299                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 633:         bitWrite(
      +                          mode, 6, 0);
 14300     02DD  0140               	movlb	0	; select bank0
 14301     02DE  0837               	movf	setMagneticChannel@mode+1,w
 14302     02DF  00F2               	movwf	bitWrite@reg+1
 14303     02E0  0836               	movf	setMagneticChannel@mode,w
 14304     02E1  00F1               	movwf	bitWrite@reg
 14305     02E2  3006               	movlw	6
 14306     02E3  00F3               	movwf	bitWrite@position
 14307     02E4  01F4               	clrf	bitWrite@value
 14308     02E5  3194  248A  3180   	fcall	_bitWrite
 14309                           
 14310                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 634:         bitWrite(
      +                          mode, 7, 1);
 14311     02E8  0140               	movlb	0	; select bank0
 14312     02E9  0837               	movf	setMagneticChannel@mode+1,w
 14313     02EA  00F2               	movwf	bitWrite@reg+1
 14314     02EB  0836               	movf	setMagneticChannel@mode,w
 14315     02EC  00F1               	movwf	bitWrite@reg
 14316     02ED  3007               	movlw	7
 14317     02EE  00F3               	movwf	bitWrite@position
 14318     02EF  01F4               	clrf	bitWrite@value
 14319     02F0  0AF4               	incf	bitWrite@value,f
 14320     02F1  3194  248A  3180   	fcall	_bitWrite
 14321     02F4                     l13683:
 14322                           
 14323                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 635:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14324     02F4  0140               	movlb	0	; select bank0
 14325     02F5  0836               	movf	setMagneticChannel@mode,w
 14326     02F6  00A6               	movwf	writeRegister@data
 14327     02F7  3002               	movlw	2
 14328     02F8  3190  204F  3180   	fcall	_writeRegister
 14329                           
 14330                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 636:     } else if (ch
      +                          annelMode == 0XA)
 14331     02FB  2B73               	goto	l13697
 14332     02FC                     l13685:
 14333     02FC  300A               	movlw	10
 14334     02FD  0635               	xorwf	setMagneticChannel@channelMode,w
 14335     02FE  1D03               	btfss	3,2
 14336     02FF  2B01               	goto	u10621
 14337     0300  2B02               	goto	u10620
 14338     0301                     u10621:
 14339     0301  2B37               	goto	l13691
 14340     0302                     u10620:
 14341     0302                     l13687:
 14342                           
 14343                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 637:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 638:         bitWrite(mode, 4, 0);
 14344     0302  0837               	movf	setMagneticChannel@mode+1,w
 14345     0303  00F2               	movwf	bitWrite@reg+1
 14346     0304  0836               	movf	setMagneticChannel@mode,w
 14347     0305  00F1               	movwf	bitWrite@reg
 14348     0306  3004               	movlw	4
 14349     0307  00F3               	movwf	bitWrite@position
 14350     0308  01F4               	clrf	bitWrite@value
 14351     0309  3194  248A  3180   	fcall	_bitWrite
 14352                           
 14353                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 639:         bitWrite(
      +                          mode, 5, 1);
 14354     030C  0140               	movlb	0	; select bank0
 14355     030D  0837               	movf	setMagneticChannel@mode+1,w
 14356     030E  00F2               	movwf	bitWrite@reg+1
 14357     030F  0836               	movf	setMagneticChannel@mode,w
 14358     0310  00F1               	movwf	bitWrite@reg
 14359     0311  3005               	movlw	5
 14360     0312  00F3               	movwf	bitWrite@position
 14361     0313  01F4               	clrf	bitWrite@value
 14362     0314  0AF4               	incf	bitWrite@value,f
 14363     0315  3194  248A  3180   	fcall	_bitWrite
 14364                           
 14365                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 640:         bitWrite(
      +                          mode, 6, 0);
 14366     0318  0140               	movlb	0	; select bank0
 14367     0319  0837               	movf	setMagneticChannel@mode+1,w
 14368     031A  00F2               	movwf	bitWrite@reg+1
 14369     031B  0836               	movf	setMagneticChannel@mode,w
 14370     031C  00F1               	movwf	bitWrite@reg
 14371     031D  3006               	movlw	6
 14372     031E  00F3               	movwf	bitWrite@position
 14373     031F  01F4               	clrf	bitWrite@value
 14374     0320  3194  248A  3180   	fcall	_bitWrite
 14375                           
 14376                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 641:         bitWrite(
      +                          mode, 7, 1);
 14377     0323  0140               	movlb	0	; select bank0
 14378     0324  0837               	movf	setMagneticChannel@mode+1,w
 14379     0325  00F2               	movwf	bitWrite@reg+1
 14380     0326  0836               	movf	setMagneticChannel@mode,w
 14381     0327  00F1               	movwf	bitWrite@reg
 14382     0328  3007               	movlw	7
 14383     0329  00F3               	movwf	bitWrite@position
 14384     032A  01F4               	clrf	bitWrite@value
 14385     032B  0AF4               	incf	bitWrite@value,f
 14386     032C  3194  248A  3180   	fcall	_bitWrite
 14387     032F                     l13689:
 14388                           
 14389                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 642:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14390     032F  0140               	movlb	0	; select bank0
 14391     0330  0836               	movf	setMagneticChannel@mode,w
 14392     0331  00A6               	movwf	writeRegister@data
 14393     0332  3002               	movlw	2
 14394     0333  3190  204F  3180   	fcall	_writeRegister
 14395                           
 14396                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 643:     } else if (ch
      +                          annelMode == 0XB)
 14397     0336  2B73               	goto	l13697
 14398     0337                     l13691:
 14399     0337  300B               	movlw	11
 14400     0338  0635               	xorwf	setMagneticChannel@channelMode,w
 14401     0339  1D03               	btfss	3,2
 14402     033A  2B3C               	goto	u10631
 14403     033B  2B3D               	goto	u10630
 14404     033C                     u10631:
 14405     033C  2B73               	goto	l765
 14406     033D                     u10630:
 14407     033D                     l13693:
 14408                           
 14409                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 644:     {;mcc_generat
      +                          ed_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 645:         bitWrite(mode, 4, 1);
 14410     033D  0837               	movf	setMagneticChannel@mode+1,w
 14411     033E  00F2               	movwf	bitWrite@reg+1
 14412     033F  0836               	movf	setMagneticChannel@mode,w
 14413     0340  00F1               	movwf	bitWrite@reg
 14414     0341  3004               	movlw	4
 14415     0342  00F3               	movwf	bitWrite@position
 14416     0343  01F4               	clrf	bitWrite@value
 14417     0344  0AF4               	incf	bitWrite@value,f
 14418     0345  3194  248A  3180   	fcall	_bitWrite
 14419                           
 14420                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 646:         bitWrite(
      +                          mode, 5, 1);
 14421     0348  0140               	movlb	0	; select bank0
 14422     0349  0837               	movf	setMagneticChannel@mode+1,w
 14423     034A  00F2               	movwf	bitWrite@reg+1
 14424     034B  0836               	movf	setMagneticChannel@mode,w
 14425     034C  00F1               	movwf	bitWrite@reg
 14426     034D  3005               	movlw	5
 14427     034E  00F3               	movwf	bitWrite@position
 14428     034F  01F4               	clrf	bitWrite@value
 14429     0350  0AF4               	incf	bitWrite@value,f
 14430     0351  3194  248A  3180   	fcall	_bitWrite
 14431                           
 14432                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 647:         bitWrite(
      +                          mode, 6, 0);
 14433     0354  0140               	movlb	0	; select bank0
 14434     0355  0837               	movf	setMagneticChannel@mode+1,w
 14435     0356  00F2               	movwf	bitWrite@reg+1
 14436     0357  0836               	movf	setMagneticChannel@mode,w
 14437     0358  00F1               	movwf	bitWrite@reg
 14438     0359  3006               	movlw	6
 14439     035A  00F3               	movwf	bitWrite@position
 14440     035B  01F4               	clrf	bitWrite@value
 14441     035C  3194  248A  3180   	fcall	_bitWrite
 14442                           
 14443                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 648:         bitWrite(
      +                          mode, 7, 1);
 14444     035F  0140               	movlb	0	; select bank0
 14445     0360  0837               	movf	setMagneticChannel@mode+1,w
 14446     0361  00F2               	movwf	bitWrite@reg+1
 14447     0362  0836               	movf	setMagneticChannel@mode,w
 14448     0363  00F1               	movwf	bitWrite@reg
 14449     0364  3007               	movlw	7
 14450     0365  00F3               	movwf	bitWrite@position
 14451     0366  01F4               	clrf	bitWrite@value
 14452     0367  0AF4               	incf	bitWrite@value,f
 14453     0368  3194  248A  3180   	fcall	_bitWrite
 14454     036B                     l13695:
 14455                           
 14456                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 649:         writeRegi
      +                          ster(TMAG5273_REG_SENSOR_CONFIG_1, mode);
 14457     036B  0140               	movlb	0	; select bank0
 14458     036C  0836               	movf	setMagneticChannel@mode,w
 14459     036D  00A6               	movwf	writeRegister@data
 14460     036E  3002               	movlw	2
 14461     036F  3190  204F  3180   	fcall	_writeRegister
 14462     0372  2B73               	goto	l13697
 14463     0373                     l765:
 14464     0373                     l13697:
 14465                           
 14466                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 652:     return getErr
      +                          or();;	Return value of _setMagneticChannel is never used
 14467     0373  318D  2591  3180   	fcall	_getError
 14468     0376                     l771:
 14469     0376  0008               	return
 14470     0377                     __end_of_setMagneticChannel:
 14471                           
 14472                           	psect	text7
 14473     104F                     __ptext7:	
 14474 ;; *************** function _writeRegister *****************
 14475 ;; Defined at:
 14476 ;;		line 157 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 14477 ;; Parameters:    Size  Location     Type
 14478 ;;  regAddress      1    wreg     unsigned char 
 14479 ;;  data            1    6[BANK0 ] unsigned char 
 14480 ;; Auto vars:     Size  Location     Type
 14481 ;;  regAddress      1    7[BANK0 ] unsigned char 
 14482 ;; Return value:  Size  Location     Type
 14483 ;;                  1    wreg      unsigned char 
 14484 ;; Registers used:
 14485 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14486 ;; Tracked objects:
 14487 ;;		On entry : 0/0
 14488 ;;		On exit  : 0/0
 14489 ;;		Unchanged: 0/0
 14490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14491 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14492 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14494 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14495 ;;Total ram usage:        2 bytes
 14496 ;; Hardware stack levels used: 1
 14497 ;; Hardware stack levels required when called: 13
 14498 ;; This function calls:
 14499 ;;		_i2c_write1ByteRegister
 14500 ;; This function is called by:
 14501 ;;		_setOperatingMode
 14502 ;;		_setMagneticChannel
 14503 ;;		_setXYAxisRange
 14504 ;;		_setZAxisRange
 14505 ;;		_setTemperatureEn
 14506 ;;		_setupWakeUpAndSleep
 14507 ;;		_setCRCMode
 14508 ;;		_setMagTemp
 14509 ;;		_setConvAvg
 14510 ;;		_setIntThreshold
 14511 ;;		_setLowPower
 14512 ;;		_setGlitchFilter
 14513 ;;		_setTriggerMode
 14514 ;;		_setSleeptime
 14515 ;;		_setMagDir
 14516 ;;		_setMagnitudeGain
 14517 ;;		_setMagneticGain
 14518 ;;		_setMagneticOffset1
 14519 ;;		_setMagneticOffset2
 14520 ;;		_setAngleEn
 14521 ;;		_setXThreshold
 14522 ;;		_setYThreshold
 14523 ;;		_setZThreshold
 14524 ;;		_setTemperatureThreshold
 14525 ;;		_setInterruptResult
 14526 ;;		_setThresholdEn
 14527 ;;		_setIntPinState
 14528 ;;		_setInterruptMode
 14529 ;;		_setMaskInterrupt
 14530 ;;		_setI2CAddress
 14531 ;;		_setI2CAddressEN
 14532 ;; This function uses a non-reentrant model
 14533 ;;
 14534                           
 14535     104F                     _writeRegister:	
 14536                           ;psect for function _writeRegister
 14537                           
 14538                           
 14539                           ;incstack = 0
 14540                           ; Regs used in _writeRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14541                           ;writeRegister@regAddress stored from wreg
 14542     104F  0140               	movlb	0	; select bank0
 14543     1050  00A7               	movwf	writeRegister@regAddress
 14544     1051                     l13453:
 14545                           
 14546                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 158:     i2c_write1Byt
      +                          eRegister(0X22, regAddress, data);
 14547     1051  0827               	movf	writeRegister@regAddress,w
 14548     1052  00A4               	movwf	i2c_write1ByteRegister@reg
 14549     1053  0826               	movf	writeRegister@data,w
 14550     1054  00A5               	movwf	i2c_write1ByteRegister@data
 14551     1055  3022               	movlw	34
 14552     1056  3197  272E  3190   	fcall	_i2c_write1ByteRegister
 14553     1059                     l664:
 14554     1059  0008               	return
 14555     105A                     __end_of_writeRegister:
 14556                           
 14557                           	psect	text8
 14558     172E                     __ptext8:	
 14559 ;; *************** function _i2c_write1ByteRegister *****************
 14560 ;; Defined at:
 14561 ;;		line 51 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 14562 ;; Parameters:    Size  Location     Type
 14563 ;;  address         1    wreg     unsigned char 
 14564 ;;  reg             1    4[BANK0 ] unsigned char 
 14565 ;;  data            1    5[BANK0 ] unsigned char 
 14566 ;; Auto vars:     Size  Location     Type
 14567 ;;  address         1   11[COMMON] unsigned char 
 14568 ;; Return value:  Size  Location     Type
 14569 ;;                  1    wreg      void 
 14570 ;; Registers used:
 14571 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14572 ;; Tracked objects:
 14573 ;;		On entry : 0/0
 14574 ;;		On exit  : 0/0
 14575 ;;		Unchanged: 0/0
 14576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14577 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14578 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14580 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14581 ;;Total ram usage:        3 bytes
 14582 ;; Hardware stack levels used: 1
 14583 ;; Hardware stack levels required when called: 12
 14584 ;; This function calls:
 14585 ;;		_I2C1_Close
 14586 ;;		_I2C1_MasterWrite
 14587 ;;		_I2C1_Open
 14588 ;;		_I2C1_SetAddressNackCallback
 14589 ;;		_I2C1_SetBuffer
 14590 ;;		_I2C1_SetDataCompleteCallback
 14591 ;; This function is called by:
 14592 ;;		_writeRegister
 14593 ;;		_BMA253_Initialize
 14594 ;; This function uses a non-reentrant model
 14595 ;;
 14596                           
 14597     172E                     _i2c_write1ByteRegister:	
 14598                           ;psect for function _i2c_write1ByteRegister
 14599                           
 14600                           
 14601                           ;incstack = 0
 14602                           ; Regs used in _i2c_write1ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14603                           ;i2c_write1ByteRegister@address stored from wreg
 14604     172E  00FB               	movwf	i2c_write1ByteRegister@address
 14605     172F                     l13281:
 14606     172F                     l13283:	
 14607                           ;mcc_generated_files/drivers/i2c_simple_master.c: 51: void i2c_write1ByteRegister(i2c1_a
      +                          ddress_t address, uint8_t reg, uint8_t data);mcc_generated_files/drivers/i2c_simple_mast
      +                          er.c: 52: {;mcc_generated_files/drivers/i2c_simple_master.c: 53:     while(!I2C1_Open(ad
      +                          dress));
 14608                           
 14609     172F  087B               	movf	i2c_write1ByteRegister@address,w
 14610     1730  3197  27CA  3197   	fcall	_I2C1_Open
 14611     1733  3A00               	xorlw	0
 14612     1734  1903               	skipnz
 14613     1735  2F37               	goto	u10091
 14614     1736  2F38               	goto	u10090
 14615     1737                     u10091:
 14616     1737  2F2F               	goto	l13283
 14617     1738                     u10090:
 14618     1738                     l13285:
 14619                           
 14620                           ;mcc_generated_files/drivers/i2c_simple_master.c: 54:     I2C1_SetDataCompleteCallback(w
      +                          r1RegCompleteHandler,&data);
 14621     1738  3025               	movlw	low _wr1RegCompleteHandler
 14622     1739  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 14623     173A  3011               	movlw	high _wr1RegCompleteHandler
 14624     173B  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 14625     173C  3025               	movlw	(low (i2c_write1ByteRegister@data| 0))& (0+255)
 14626     173D  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 14627     173E  3190  2023  3197   	fcall	_I2C1_SetDataCompleteCallback
 14628     1741                     l13287:
 14629                           
 14630                           ;mcc_generated_files/drivers/i2c_simple_master.c: 55:     I2C1_SetBuffer(&reg,1);
 14631     1741  3024               	movlw	low i2c_write1ByteRegister@reg
 14632     1742  00F1               	movwf	I2C1_SetBuffer@buffer
 14633     1743  3000               	movlw	high i2c_write1ByteRegister@reg
 14634     1744  00F2               	movwf	I2C1_SetBuffer@buffer+1
 14635     1745  3001               	movlw	1
 14636     1746  00F3               	movwf	I2C1_SetBuffer@bufferSize
 14637     1747  3000               	movlw	0
 14638     1748  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 14639     1749  3190  20C1  3197   	fcall	_I2C1_SetBuffer
 14640     174C                     l13289:
 14641                           
 14642                           ;mcc_generated_files/drivers/i2c_simple_master.c: 56:     I2C1_SetAddressNackCallback(((
      +                          void*)0),((void*)0));
 14643     174C  3000               	movlw	0
 14644     174D  00F5               	movwf	I2C1_SetAddressNackCallback@cb
 14645     174E  00F6               	movwf	I2C1_SetAddressNackCallback@cb+1
 14646     174F  3000               	movlw	0
 14647     1750  00F7               	movwf	I2C1_SetAddressNackCallback@ptr
 14648     1751  00F8               	movwf	I2C1_SetAddressNackCallback@ptr+1
 14649     1752  3190  202E  3197   	fcall	_I2C1_SetAddressNackCallback
 14650     1755                     l13291:
 14651                           
 14652                           ;mcc_generated_files/drivers/i2c_simple_master.c: 57:     I2C1_MasterWrite();
 14653     1755  319F  272B  3197   	fcall	_I2C1_MasterWrite
 14654     1758                     l13293:	
 14655                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58:     while(I2C1_BUSY == I2C1_Close(
      +                          ));
 14656                           
 14657     1758  3192  227F  3197   	fcall	_I2C1_Close
 14658     175B  3A01               	xorlw	1
 14659     175C  1903               	skipnz
 14660     175D  2F5F               	goto	u10101
 14661     175E  2F60               	goto	u10100
 14662     175F                     u10101:
 14663     175F  2F58               	goto	l13293
 14664     1760                     u10100:
 14665     1760                     l510:
 14666     1760  0008               	return
 14667     1761                     __end_of_i2c_write1ByteRegister:
 14668                           
 14669                           	psect	text9
 14670     0D91                     __ptext9:	
 14671 ;; *************** function _getError *****************
 14672 ;; Defined at:
 14673 ;;		line 2287 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 14674 ;; Parameters:    Size  Location     Type
 14675 ;;		None
 14676 ;; Auto vars:     Size  Location     Type
 14677 ;;  statusReg       1   18[BANK0 ] unsigned char 
 14678 ;;  oscillatorEr    1   17[BANK0 ] unsigned char 
 14679 ;;  intPinError     1   16[BANK0 ] unsigned char 
 14680 ;;  otpCrcError     1   15[BANK0 ] unsigned char 
 14681 ;;  undervoltage    1   14[BANK0 ] unsigned char 
 14682 ;; Return value:  Size  Location     Type
 14683 ;;                  1    wreg      char 
 14684 ;; Registers used:
 14685 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14686 ;; Tracked objects:
 14687 ;;		On entry : 0/0
 14688 ;;		On exit  : 0/0
 14689 ;;		Unchanged: 0/0
 14690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14692 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14693 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14694 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14695 ;;Total ram usage:        7 bytes
 14696 ;; Hardware stack levels used: 1
 14697 ;; Hardware stack levels required when called: 15
 14698 ;; This function calls:
 14699 ;;		_bitRead
 14700 ;;		_getDeviceStatus
 14701 ;; This function is called by:
 14702 ;;		_begin
 14703 ;;		_setOperatingMode
 14704 ;;		_setMagneticChannel
 14705 ;;		_setXYAxisRange
 14706 ;;		_setZAxisRange
 14707 ;;		_setTemperatureEn
 14708 ;;		_setupWakeUpAndSleep
 14709 ;;		_readWakeUpAndSleepData
 14710 ;;		_setCRCMode
 14711 ;;		_setMagTemp
 14712 ;;		_setConvAvg
 14713 ;;		_setReadMode
 14714 ;;		_setIntThreshold
 14715 ;;		_setLowPower
 14716 ;;		_setGlitchFilter
 14717 ;;		_setTriggerMode
 14718 ;;		_setSleeptime
 14719 ;;		_setMagDir
 14720 ;;		_setMagnitudeGain
 14721 ;;		_setMagneticGain
 14722 ;;		_setMagneticOffset1
 14723 ;;		_setMagneticOffset2
 14724 ;;		_setAngleEn
 14725 ;;		_setXThreshold
 14726 ;;		_setYThreshold
 14727 ;;		_setZThreshold
 14728 ;;		_setTemperatureThreshold
 14729 ;;		_setInterruptResult
 14730 ;;		_setThresholdEn
 14731 ;;		_setIntPinState
 14732 ;;		_setInterruptMode
 14733 ;;		_setMaskInterrupt
 14734 ;;		_setI2CAddress
 14735 ;;		_setI2CAddressEN
 14736 ;;		_setOscillatorError
 14737 ;; This function uses a non-reentrant model
 14738 ;;
 14739                           
 14740     0D91                     _getError:	
 14741                           ;psect for function _getError
 14742                           
 14743     0D91                     l13419:	
 14744                           ;incstack = 0
 14745 ;; hardware stack exceeded
 14746                           ; Regs used in _getError: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14747                           
 14748                           
 14749                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2289:     uint8_t stat
      +                          usReg = getDeviceStatus();
 14750     0D91  319F  27A8  318D   	fcall	_getDeviceStatus
 14751     0D94  0140               	movlb	0	; select bank0
 14752     0D95  00B2               	movwf	getError@statusReg
 14753     0D96                     l13421:
 14754                           
 14755                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2290:     uint8_t unde
      +                          rvoltageError = bitRead(statusReg, 0);
 14756     0D96  0832               	movf	getError@statusReg,w
 14757     0D97  00AC               	movwf	??_getError
 14758     0D98  01AD               	clrf	??_getError+1
 14759     0D99  082C               	movf	??_getError,w
 14760     0D9A  00F1               	movwf	bitRead@reg
 14761     0D9B  082D               	movf	??_getError+1,w
 14762     0D9C  00F2               	movwf	bitRead@reg+1
 14763     0D9D  01F3               	clrf	bitRead@position
 14764     0D9E  3194  2421  318D   	fcall	_bitRead
 14765     0DA1  0140               	movlb	0	; select bank0
 14766     0DA2  00AE               	movwf	getError@undervoltageError
 14767     0DA3                     l13423:
 14768                           
 14769                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2291:     uint8_t otpC
      +                          rcError = bitRead(statusReg, 1);
 14770     0DA3  0832               	movf	getError@statusReg,w
 14771     0DA4  00AC               	movwf	??_getError
 14772     0DA5  01AD               	clrf	??_getError+1
 14773     0DA6  082C               	movf	??_getError,w
 14774     0DA7  00F1               	movwf	bitRead@reg
 14775     0DA8  082D               	movf	??_getError+1,w
 14776     0DA9  00F2               	movwf	bitRead@reg+1
 14777     0DAA  01F3               	clrf	bitRead@position
 14778     0DAB  0AF3               	incf	bitRead@position,f
 14779     0DAC  3194  2421  318D   	fcall	_bitRead
 14780     0DAF  0140               	movlb	0	; select bank0
 14781     0DB0  00AF               	movwf	getError@otpCrcError
 14782     0DB1                     l13425:
 14783                           
 14784                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2292:     uint8_t intP
      +                          inError = bitRead(statusReg, 2);
 14785     0DB1  0832               	movf	getError@statusReg,w
 14786     0DB2  00AC               	movwf	??_getError
 14787     0DB3  01AD               	clrf	??_getError+1
 14788     0DB4  082C               	movf	??_getError,w
 14789     0DB5  00F1               	movwf	bitRead@reg
 14790     0DB6  082D               	movf	??_getError+1,w
 14791     0DB7  00F2               	movwf	bitRead@reg+1
 14792     0DB8  3002               	movlw	2
 14793     0DB9  00F3               	movwf	bitRead@position
 14794     0DBA  3194  2421  318D   	fcall	_bitRead
 14795     0DBD  0140               	movlb	0	; select bank0
 14796     0DBE  00B0               	movwf	getError@intPinError
 14797     0DBF                     l13427:
 14798                           
 14799                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2293:     uint8_t osci
      +                          llatorError = bitRead(statusReg, 3);
 14800     0DBF  0832               	movf	getError@statusReg,w
 14801     0DC0  00AC               	movwf	??_getError
 14802     0DC1  01AD               	clrf	??_getError+1
 14803     0DC2  082C               	movf	??_getError,w
 14804     0DC3  00F1               	movwf	bitRead@reg
 14805     0DC4  082D               	movf	??_getError+1,w
 14806     0DC5  00F2               	movwf	bitRead@reg+1
 14807     0DC6  3003               	movlw	3
 14808     0DC7  00F3               	movwf	bitRead@position
 14809     0DC8  3194  2421  318D   	fcall	_bitRead
 14810     0DCB  0140               	movlb	0	; select bank0
 14811     0DCC  00B1               	movwf	getError@oscillatorError
 14812     0DCD                     l13429:
 14813                           
 14814                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2296:     if ((undervo
      +                          ltageError != 0) && (otpCrcError != 0) && (intPinError != 0) && (oscillatorError != 0)) 
      +                          {
 14815     0DCD  082E               	movf	getError@undervoltageError,w
 14816     0DCE  1903               	btfsc	3,2
 14817     0DCF  2DD1               	goto	u10291
 14818     0DD0  2DD2               	goto	u10290
 14819     0DD1                     u10291:
 14820     0DD1  2DE3               	goto	l13443
 14821     0DD2                     u10290:
 14822     0DD2                     l13431:
 14823     0DD2  082F               	movf	getError@otpCrcError,w
 14824     0DD3  1903               	btfsc	3,2
 14825     0DD4  2DD6               	goto	u10301
 14826     0DD5  2DD7               	goto	u10300
 14827     0DD6                     u10301:
 14828     0DD6  2DE3               	goto	l13443
 14829     0DD7                     u10300:
 14830     0DD7                     l13433:
 14831     0DD7  0830               	movf	getError@intPinError,w
 14832     0DD8  1903               	btfsc	3,2
 14833     0DD9  2DDB               	goto	u10311
 14834     0DDA  2DDC               	goto	u10310
 14835     0DDB                     u10311:
 14836     0DDB  2DE3               	goto	l13443
 14837     0DDC                     u10310:
 14838     0DDC                     l13435:
 14839     0DDC  0831               	movf	getError@oscillatorError,w
 14840     0DDD  1903               	btfsc	3,2
 14841     0DDE  2DE0               	goto	u10321
 14842     0DDF  2DE1               	goto	u10320
 14843     0DE0                     u10321:
 14844     0DE0  2DE3               	goto	l13443
 14845     0DE1                     u10320:
 14846     0DE1                     l13437:
 14847                           
 14848                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2297:         return -
      +                          1;
 14849     0DE1  30FF               	movlw	255
 14850     0DE2  2DE4               	goto	l1165
 14851     0DE3                     l13443:
 14852                           
 14853                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2299:         return 0
      +                          ;
 14854     0DE3  3000               	movlw	0
 14855     0DE4                     l1165:
 14856     0DE4  0008               	return
 14857     0DE5                     __end_of_getError:
 14858                           
 14859                           	psect	text10
 14860     1FA8                     __ptext10:	
 14861 ;; *************** function _getDeviceStatus *****************
 14862 ;; Defined at:
 14863 ;;		line 2273 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 14864 ;; Parameters:    Size  Location     Type
 14865 ;;		None
 14866 ;; Auto vars:     Size  Location     Type
 14867 ;;  deviceStatus    1   11[COMMON] unsigned char 
 14868 ;; Return value:  Size  Location     Type
 14869 ;;                  1    wreg      unsigned char 
 14870 ;; Registers used:
 14871 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14872 ;; Tracked objects:
 14873 ;;		On entry : 0/0
 14874 ;;		On exit  : 0/0
 14875 ;;		Unchanged: 0/0
 14876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14878 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14880 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14881 ;;Total ram usage:        1 bytes
 14882 ;; Hardware stack levels used: 1
 14883 ;; Hardware stack levels required when called: 14
 14884 ;; This function calls:
 14885 ;;		_readRegister
 14886 ;; This function is called by:
 14887 ;;		_getError
 14888 ;; This function uses a non-reentrant model
 14889 ;;
 14890                           
 14891     1FA8                     _getDeviceStatus:	
 14892                           ;psect for function _getDeviceStatus
 14893                           
 14894     1FA8                     l13347:	
 14895                           ;incstack = 0
 14896 ;; hardware stack exceeded
 14897                           ; Regs used in _getDeviceStatus: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14898                           
 14899                           
 14900                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2275:     uint8_t devi
      +                          ceStatusReg = readRegister(TMAG5273_REG_DEVICE_STATUS);
 14901     1FA8  301C               	movlw	28
 14902     1FA9  3190  205A  319F   	fcall	_readRegister
 14903     1FAC  00FB               	movwf	getDeviceStatus@deviceStatusReg
 14904     1FAD                     l13349:
 14905                           
 14906                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2277:     return devic
      +                          eStatusReg;
 14907     1FAD  087B               	movf	getDeviceStatus@deviceStatusReg,w
 14908     1FAE                     l1161:
 14909     1FAE  0008               	return
 14910     1FAF                     __end_of_getDeviceStatus:
 14911                           
 14912                           	psect	text11
 14913     148A                     __ptext11:	
 14914 ;; *************** function _bitWrite *****************
 14915 ;; Defined at:
 14916 ;;		line 2487 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 14917 ;; Parameters:    Size  Location     Type
 14918 ;;  reg             2    1[COMMON] PTR unsigned short 
 14919 ;;		 -> RAM(8192), 
 14920 ;;  position        1    3[COMMON] unsigned char 
 14921 ;;  value           1    4[COMMON] unsigned char 
 14922 ;; Auto vars:     Size  Location     Type
 14923 ;;  mask            2    9[COMMON] unsigned short 
 14924 ;; Return value:  Size  Location     Type
 14925 ;;                  1    wreg      void 
 14926 ;; Registers used:
 14927 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14928 ;; Tracked objects:
 14929 ;;		On entry : 0/0
 14930 ;;		On exit  : 0/0
 14931 ;;		Unchanged: 0/0
 14932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14933 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14934 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14935 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14936 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14937 ;;Total ram usage:       10 bytes
 14938 ;; Hardware stack levels used: 1
 14939 ;; Hardware stack levels required when called: 4
 14940 ;; This function calls:
 14941 ;;		Nothing
 14942 ;; This function is called by:
 14943 ;;		_setOperatingMode
 14944 ;;		_setMagneticChannel
 14945 ;;		_setXYAxisRange
 14946 ;;		_setZAxisRange
 14947 ;;		_setTemperatureEn
 14948 ;;		_setCRCMode
 14949 ;;		_setMagTemp
 14950 ;;		_setConvAvg
 14951 ;;		_setReadMode
 14952 ;;		_setIntThreshold
 14953 ;;		_setLowPower
 14954 ;;		_setGlitchFilter
 14955 ;;		_setTriggerMode
 14956 ;;		_setSleeptime
 14957 ;;		_setMagDir
 14958 ;;		_setMagnitudeGain
 14959 ;;		_setAngleEn
 14960 ;;		_setInterruptResult
 14961 ;;		_setThresholdEn
 14962 ;;		_setIntPinState
 14963 ;;		_setMaskInterrupt
 14964 ;;		_setI2CAddressEN
 14965 ;;		_setOscillatorError
 14966 ;; This function uses a non-reentrant model
 14967 ;;
 14968                           
 14969     148A                     _bitWrite:	
 14970                           ;psect for function _bitWrite
 14971                           
 14972     148A                     l13457:	
 14973                           ;incstack = 0
 14974                           ; Regs used in _bitWrite: [wreg+fsr1l+fsr1h+status,2+status,0]
 14975                           
 14976     148A                     l13459:
 14977                           
 14978                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2489:     mask = value
      +                           << position;
 14979     148A  0874               	movf	bitWrite@value,w
 14980     148B  00F5               	movwf	??_bitWrite
 14981     148C  01F6               	clrf	??_bitWrite+1
 14982     148D  0A73               	incf	bitWrite@position,w
 14983     148E  2C91               	goto	u10334
 14984     148F                     u10335:
 14985     148F  35F5               	lslf	??_bitWrite,f
 14986     1490  0DF6               	rlf	??_bitWrite+1,f
 14987     1491                     u10334:
 14988     1491  0B89               	decfsz	9,f
 14989     1492  2C8F               	goto	u10335
 14990     1493  0875               	movf	??_bitWrite,w
 14991     1494  00F9               	movwf	bitWrite@mask
 14992     1495  0876               	movf	??_bitWrite+1,w
 14993     1496  00FA               	movwf	bitWrite@mask+1
 14994     1497                     l13461:
 14995                           
 14996                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2490:     *reg = *reg 
      +                          | mask;
 14997     1497  0871               	movf	bitWrite@reg,w
 14998     1498  0086               	movwf	6
 14999     1499  0872               	movf	bitWrite@reg+1,w
 15000     149A  0087               	movwf	7
 15001     149B  3F40               	moviw [0]fsr1
 15002     149C  00F5               	movwf	??_bitWrite
 15003     149D  3F41               	moviw [1]fsr1
 15004     149E  00F6               	movwf	??_bitWrite+1
 15005     149F  0879               	movf	bitWrite@mask,w
 15006     14A0  0475               	iorwf	??_bitWrite,w
 15007     14A1  00F7               	movwf	??_bitWrite+2
 15008     14A2  087A               	movf	bitWrite@mask+1,w
 15009     14A3  0476               	iorwf	??_bitWrite+1,w
 15010     14A4  00F8               	movwf	??_bitWrite+3
 15011     14A5  0871               	movf	bitWrite@reg,w
 15012     14A6  0086               	movwf	6
 15013     14A7  0872               	movf	bitWrite@reg+1,w
 15014     14A8  0087               	movwf	7
 15015     14A9  0877               	movf	??_bitWrite+2,w
 15016     14AA  3FC0               	movwi [0]fsr1
 15017     14AB  0878               	movf	??_bitWrite+3,w
 15018     14AC  3FC1               	movwi [1]fsr1
 15019     14AD                     l1201:
 15020     14AD  0008               	return
 15021     14AE                     __end_of_bitWrite:
 15022                           
 15023                           	psect	text12
 15024     11FA                     __ptext12:	
 15025 ;; *************** function _isConnected *****************
 15026 ;; Defined at:
 15027 ;;		line 95 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15028 ;; Parameters:    Size  Location     Type
 15029 ;;		None
 15030 ;; Auto vars:     Size  Location     Type
 15031 ;;		None
 15032 ;; Return value:  Size  Location     Type
 15033 ;;                  1    wreg      char 
 15034 ;; Registers used:
 15035 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15036 ;; Tracked objects:
 15037 ;;		On entry : 0/0
 15038 ;;		On exit  : 0/0
 15039 ;;		Unchanged: 0/0
 15040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15045 ;;Total ram usage:        0 bytes
 15046 ;; Hardware stack levels used: 1
 15047 ;; Hardware stack levels required when called: 14
 15048 ;; This function calls:
 15049 ;;		_TMAG5273_GetManufacture
 15050 ;; This function is called by:
 15051 ;;		_begin
 15052 ;; This function uses a non-reentrant model
 15053 ;;
 15054                           
 15055     11FA                     _isConnected:	
 15056                           ;psect for function _isConnected
 15057                           
 15058     11FA                     l13609:	
 15059                           ;incstack = 0
 15060                           ; Regs used in _isConnected: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15061                           
 15062                           
 15063                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 103:     manufactureId
      +                           = TMAG5273_GetManufacture();
 15064     11FA  3192  22C8  3191   	fcall	_TMAG5273_GetManufacture
 15065     11FD  0140               	movlb	0	; select bank0
 15066     11FE  082E               	movf	?_TMAG5273_GetManufacture+1,w
 15067     11FF  00D1               	movwf	_manufactureId+1
 15068     1200  082D               	movf	?_TMAG5273_GetManufacture,w
 15069     1201  00D0               	movwf	_manufactureId
 15070     1202                     l13611:
 15071                           
 15072                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 105:     if (manufactu
      +                          reId != 0x5449) {
 15073     1202  3049               	movlw	73
 15074     1203  0650               	xorwf	_manufactureId,w
 15075     1204  3054               	movlw	84
 15076     1205  1903               	skipnz
 15077     1206  0651               	xorwf	_manufactureId+1,w
 15078     1207  1903               	btfsc	3,2
 15079     1208  2A0A               	goto	u10511
 15080     1209  2A0B               	goto	u10510
 15081     120A                     u10511:
 15082     120A  2A0D               	goto	l13617
 15083     120B                     u10510:
 15084     120B                     l13613:
 15085                           
 15086                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 106:         return -1
      +                          ;
 15087     120B  30FF               	movlw	255
 15088     120C  2A0E               	goto	l655
 15089     120D                     l13617:
 15090                           
 15091                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 109:     return 0;
 15092     120D  3000               	movlw	0
 15093     120E                     l655:
 15094     120E  0008               	return
 15095     120F                     __end_of_isConnected:
 15096                           
 15097                           	psect	text13
 15098     12C8                     __ptext13:	
 15099 ;; *************** function _TMAG5273_GetManufacture *****************
 15100 ;; Defined at:
 15101 ;;		line 2493 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15102 ;; Parameters:    Size  Location     Type
 15103 ;;		None
 15104 ;; Auto vars:     Size  Location     Type
 15105 ;;  read            2   15[BANK0 ] unsigned short 
 15106 ;; Return value:  Size  Location     Type
 15107 ;;                  2   13[BANK0 ] unsigned short 
 15108 ;; Registers used:
 15109 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15110 ;; Tracked objects:
 15111 ;;		On entry : 0/0
 15112 ;;		On exit  : 0/0
 15113 ;;		Unchanged: 0/0
 15114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15115 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15116 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15118 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15119 ;;Total ram usage:        4 bytes
 15120 ;; Hardware stack levels used: 1
 15121 ;; Hardware stack levels required when called: 13
 15122 ;; This function calls:
 15123 ;;		_i2c_read2ByteRegister
 15124 ;;		_swap
 15125 ;; This function is called by:
 15126 ;;		_isConnected
 15127 ;; This function uses a non-reentrant model
 15128 ;;
 15129                           
 15130     12C8                     _TMAG5273_GetManufacture:	
 15131                           ;psect for function _TMAG5273_GetManufacture
 15132                           
 15133     12C8                     l13447:	
 15134                           ;incstack = 0
 15135                           ; Regs used in _TMAG5273_GetManufacture: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15136                           
 15137                           
 15138                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2495:     uint16_t rea
      +                          d = i2c_read2ByteRegister(0X22, TMAG5273_REG_MANUFACTURER_ID_LSB);
 15139     12C8  300E               	movlw	14
 15140     12C9  0140               	movlb	0	; select bank0
 15141     12CA  00A4               	movwf	i2c_read2ByteRegister@reg
 15142     12CB  3022               	movlw	34
 15143     12CC  318A  223E  3192   	fcall	_i2c_read2ByteRegister
 15144     12CF  0140               	movlb	0	; select bank0
 15145     12D0  0825               	movf	?_i2c_read2ByteRegister+1,w
 15146     12D1  00B0               	movwf	TMAG5273_GetManufacture@read+1
 15147     12D2  0824               	movf	?_i2c_read2ByteRegister,w
 15148     12D3  00AF               	movwf	TMAG5273_GetManufacture@read
 15149     12D4                     l13449:
 15150                           
 15151                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2496:     return swap(
      +                          read);
 15152     12D4  0830               	movf	TMAG5273_GetManufacture@read+1,w
 15153     12D5  00F2               	movwf	swap@reg+1
 15154     12D6  082F               	movf	TMAG5273_GetManufacture@read,w
 15155     12D7  00F1               	movwf	swap@reg
 15156     12D8  3191  21D1  3192   	fcall	_swap
 15157     12DB  0872               	movf	?_swap+1,w
 15158     12DC  0140               	movlb	0	; select bank0
 15159     12DD  00AE               	movwf	?_TMAG5273_GetManufacture+1
 15160     12DE  0871               	movf	?_swap,w
 15161     12DF  00AD               	movwf	?_TMAG5273_GetManufacture
 15162     12E0                     l1204:
 15163     12E0  0008               	return
 15164     12E1                     __end_of_TMAG5273_GetManufacture:
 15165                           
 15166                           	psect	text14
 15167     11D1                     __ptext14:	
 15168 ;; *************** function _swap *****************
 15169 ;; Defined at:
 15170 ;;		line 2499 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15171 ;; Parameters:    Size  Location     Type
 15172 ;;  reg             2    1[COMMON] unsigned short 
 15173 ;; Auto vars:     Size  Location     Type
 15174 ;;  lowerByte       1    9[COMMON] unsigned char 
 15175 ;;  upperByte       1    8[COMMON] unsigned char 
 15176 ;; Return value:  Size  Location     Type
 15177 ;;                  2    1[COMMON] unsigned short 
 15178 ;; Registers used:
 15179 ;;		wreg, status,2
 15180 ;; Tracked objects:
 15181 ;;		On entry : 0/0
 15182 ;;		On exit  : 0/0
 15183 ;;		Unchanged: 0/0
 15184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15185 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15186 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15187 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15188 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15189 ;;Total ram usage:        9 bytes
 15190 ;; Hardware stack levels used: 1
 15191 ;; Hardware stack levels required when called: 4
 15192 ;; This function calls:
 15193 ;;		Nothing
 15194 ;; This function is called by:
 15195 ;;		_TMAG5273_GetManufacture
 15196 ;; This function uses a non-reentrant model
 15197 ;;
 15198                           
 15199     11D1                     _swap:	
 15200                           ;psect for function _swap
 15201                           
 15202     11D1                     l13353:	
 15203                           ;incstack = 0
 15204                           ; Regs used in _swap: [wreg+status,2]
 15205                           
 15206                           
 15207                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2500:     uint8_t uppe
      +                          rByte;;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2501:     uint8_
      +                          t lowerByte;;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2503:     
      +                          upperByte = ((reg & (0xFF00)) >> 8);
 15208     11D1  0872               	movf	swap@reg+1,w
 15209     11D2  00F8               	movwf	swap@upperByte
 15210     11D3                     l13355:
 15211                           
 15212                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2504:     lowerByte = 
      +                          (uint8_t) reg;
 15213     11D3  0871               	movf	swap@reg,w
 15214     11D4  00F9               	movwf	swap@lowerByte
 15215     11D5                     l13357:
 15216                           
 15217                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2506:     reg = ((int1
      +                          6_t) (lowerByte << 8) | upperByte);
 15218     11D5  0878               	movf	swap@upperByte,w
 15219     11D6  00F3               	movwf	??_swap
 15220     11D7  01F4               	clrf	??_swap+1
 15221     11D8  0879               	movf	swap@lowerByte,w
 15222     11D9  00F5               	movwf	??_swap+2
 15223     11DA  01F6               	clrf	??_swap+3
 15224     11DB  0875               	movf	??_swap+2,w
 15225     11DC  00F6               	movwf	??_swap+3
 15226     11DD  01F5               	clrf	??_swap+2
 15227     11DE  0873               	movf	??_swap,w
 15228     11DF  0475               	iorwf	??_swap+2,w
 15229     11E0  00F1               	movwf	swap@reg
 15230     11E1  0874               	movf	??_swap+1,w
 15231     11E2  0476               	iorwf	??_swap+3,w
 15232     11E3  00F2               	movwf	swap@reg+1
 15233     11E4                     l13359:
 15234     11E4                     l1207:	
 15235                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2508:     return reg;
 15236                           
 15237     11E4  0008               	return
 15238     11E5                     __end_of_swap:
 15239                           
 15240                           	psect	text15
 15241     0A3E                     __ptext15:	
 15242 ;; *************** function _i2c_read2ByteRegister *****************
 15243 ;; Defined at:
 15244 ;;		line 135 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 15245 ;; Parameters:    Size  Location     Type
 15246 ;;  address         1    wreg     unsigned char 
 15247 ;;  reg             1    4[BANK0 ] unsigned char 
 15248 ;; Auto vars:     Size  Location     Type
 15249 ;;  address         1   10[BANK0 ] unsigned char 
 15250 ;;  result          2   11[BANK0 ] unsigned short 
 15251 ;; Return value:  Size  Location     Type
 15252 ;;                  2    4[BANK0 ] unsigned short 
 15253 ;; Registers used:
 15254 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15255 ;; Tracked objects:
 15256 ;;		On entry : 0/0
 15257 ;;		On exit  : 0/0
 15258 ;;		Unchanged: 0/0
 15259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15260 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15261 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15262 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15263 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15264 ;;Total ram usage:        9 bytes
 15265 ;; Hardware stack levels used: 1
 15266 ;; Hardware stack levels required when called: 12
 15267 ;; This function calls:
 15268 ;;		_I2C1_Close
 15269 ;;		_I2C1_MasterWrite
 15270 ;;		_I2C1_Open
 15271 ;;		_I2C1_SetAddressNackCallback
 15272 ;;		_I2C1_SetBuffer
 15273 ;;		_I2C1_SetDataCompleteCallback
 15274 ;; This function is called by:
 15275 ;;		_TMAG5273_GetManufacture
 15276 ;;		_MCP9844_GetManufacture
 15277 ;;		_MCP9844_GetDevice
 15278 ;;		_MCP9844_CalcTemperature
 15279 ;;		_TMAG5273_GetDevice
 15280 ;;		_TMAG5273_CalcTemperature
 15281 ;; This function uses a non-reentrant model
 15282 ;;
 15283                           
 15284     0A3E                     _i2c_read2ByteRegister:	
 15285                           ;psect for function _i2c_read2ByteRegister
 15286                           
 15287                           
 15288                           ;incstack = 0
 15289                           ; Regs used in _i2c_read2ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15290                           ;i2c_read2ByteRegister@address stored from wreg
 15291     0A3E  0140               	movlb	0	; select bank0
 15292     0A3F  00AA               	movwf	i2c_read2ByteRegister@address
 15293     0A40                     l13307:
 15294     0A40                     l13309:	
 15295                           ;mcc_generated_files/drivers/i2c_simple_master.c: 135: uint16_t i2c_read2ByteRegister(i2
      +                          c1_address_t address, uint8_t reg);mcc_generated_files/drivers/i2c_simple_master.c: 136:
      +                           {;mcc_generated_files/drivers/i2c_simple_master.c: 138:     uint16_t result;;mcc_genera
      +                          ted_files/drivers/i2c_simple_master.c: 140:     while(!I2C1_Open(address));
 15296                           
 15297     0A40  0140               	movlb	0	; select bank0
 15298     0A41  082A               	movf	i2c_read2ByteRegister@address,w
 15299     0A42  3197  27CA  318A   	fcall	_I2C1_Open
 15300     0A45  3A00               	xorlw	0
 15301     0A46  1903               	skipnz
 15302     0A47  2A49               	goto	u10151
 15303     0A48  2A4A               	goto	u10150
 15304     0A49                     u10151:
 15305     0A49  2A40               	goto	l13309
 15306     0A4A                     u10150:
 15307     0A4A                     l13311:
 15308                           
 15309                           ;mcc_generated_files/drivers/i2c_simple_master.c: 141:     I2C1_SetDataCompleteCallback(
      +                          rd2RegCompleteHandler,&result);
 15310     0A4A  304B               	movlw	low _rd2RegCompleteHandler
 15311     0A4B  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 15312     0A4C  3011               	movlw	high _rd2RegCompleteHandler
 15313     0A4D  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 15314     0A4E  302B               	movlw	(low (i2c_read2ByteRegister@result| 0))& (0+255)
 15315     0A4F  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 15316     0A50  3190  2023  318A   	fcall	_I2C1_SetDataCompleteCallback
 15317     0A53                     l13313:
 15318                           
 15319                           ;mcc_generated_files/drivers/i2c_simple_master.c: 142:     I2C1_SetBuffer(&reg,1);
 15320     0A53  3024               	movlw	low i2c_read2ByteRegister@reg
 15321     0A54  00F1               	movwf	I2C1_SetBuffer@buffer
 15322     0A55  3000               	movlw	high i2c_read2ByteRegister@reg
 15323     0A56  00F2               	movwf	I2C1_SetBuffer@buffer+1
 15324     0A57  3001               	movlw	1
 15325     0A58  00F3               	movwf	I2C1_SetBuffer@bufferSize
 15326     0A59  3000               	movlw	0
 15327     0A5A  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 15328     0A5B  3190  20C1  318A   	fcall	_I2C1_SetBuffer
 15329     0A5E                     l13315:
 15330                           
 15331                           ;mcc_generated_files/drivers/i2c_simple_master.c: 143:     I2C1_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
 15332     0A5E  3000               	movlw	0
 15333     0A5F  00F5               	movwf	I2C1_SetAddressNackCallback@cb
 15334     0A60  00F6               	movwf	I2C1_SetAddressNackCallback@cb+1
 15335     0A61  3000               	movlw	0
 15336     0A62  00F7               	movwf	I2C1_SetAddressNackCallback@ptr
 15337     0A63  00F8               	movwf	I2C1_SetAddressNackCallback@ptr+1
 15338     0A64  3190  202E  318A   	fcall	_I2C1_SetAddressNackCallback
 15339     0A67                     l13317:
 15340                           
 15341                           ;mcc_generated_files/drivers/i2c_simple_master.c: 144:     I2C1_MasterWrite();
 15342     0A67  319F  272B  318A   	fcall	_I2C1_MasterWrite
 15343     0A6A                     l13319:	
 15344                           ;mcc_generated_files/drivers/i2c_simple_master.c: 145:     while(I2C1_BUSY == I2C1_Close
      +                          ());
 15345                           
 15346     0A6A  3192  227F  318A   	fcall	_I2C1_Close
 15347     0A6D  3A01               	xorlw	1
 15348     0A6E  1903               	skipnz
 15349     0A6F  2A71               	goto	u10161
 15350     0A70  2A72               	goto	u10160
 15351     0A71                     u10161:
 15352     0A71  2A6A               	goto	l13319
 15353     0A72                     u10160:
 15354     0A72                     l13321:
 15355                           
 15356                           ;mcc_generated_files/drivers/i2c_simple_master.c: 147:     return (result << 8 | result 
      +                          >> 8);
 15357     0A72  0140               	movlb	0	; select bank0
 15358     0A73  082C               	movf	i2c_read2ByteRegister@result+1,w
 15359     0A74  00A7               	movwf	??_i2c_read2ByteRegister+1
 15360     0A75  082B               	movf	i2c_read2ByteRegister@result,w
 15361     0A76  00A6               	movwf	??_i2c_read2ByteRegister
 15362     0A77  0827               	movf	??_i2c_read2ByteRegister+1,w
 15363     0A78  00A6               	movwf	??_i2c_read2ByteRegister
 15364     0A79  01A7               	clrf	??_i2c_read2ByteRegister+1
 15365     0A7A  082B               	movf	i2c_read2ByteRegister@result,w
 15366     0A7B  00A9               	movwf	??_i2c_read2ByteRegister+3
 15367     0A7C  01A8               	clrf	??_i2c_read2ByteRegister+2
 15368     0A7D  0826               	movf	??_i2c_read2ByteRegister,w
 15369     0A7E  0428               	iorwf	??_i2c_read2ByteRegister+2,w
 15370     0A7F  00A4               	movwf	?_i2c_read2ByteRegister
 15371     0A80  0827               	movf	??_i2c_read2ByteRegister+1,w
 15372     0A81  0429               	iorwf	??_i2c_read2ByteRegister+3,w
 15373     0A82  00A5               	movwf	?_i2c_read2ByteRegister+1
 15374     0A83                     l546:
 15375     0A83  0008               	return
 15376     0A84                     __end_of_i2c_read2ByteRegister:
 15377                           
 15378                           	psect	text16
 15379     11E5                     __ptext16:	
 15380 ;; *************** function _getTemperatureEN *****************
 15381 ;; Defined at:
 15382 ;;		line 2006 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15383 ;; Parameters:    Size  Location     Type
 15384 ;;		None
 15385 ;; Auto vars:     Size  Location     Type
 15386 ;;  tempENreg       1   15[BANK0 ] unsigned char 
 15387 ;;  tempEN          1   14[BANK0 ] unsigned char 
 15388 ;; Return value:  Size  Location     Type
 15389 ;;                  1    wreg      unsigned char 
 15390 ;; Registers used:
 15391 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15392 ;; Tracked objects:
 15393 ;;		On entry : 0/0
 15394 ;;		On exit  : 0/0
 15395 ;;		Unchanged: 0/0
 15396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15398 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15399 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15400 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15401 ;;Total ram usage:        4 bytes
 15402 ;; Hardware stack levels used: 1
 15403 ;; Hardware stack levels required when called: 14
 15404 ;; This function calls:
 15405 ;;		_bitRead
 15406 ;;		_readRegister
 15407 ;; This function is called by:
 15408 ;;		_begin
 15409 ;; This function uses a non-reentrant model
 15410 ;;
 15411                           
 15412     11E5                     _getTemperatureEN:	
 15413                           ;psect for function _getTemperatureEN
 15414                           
 15415     11E5                     l14037:	
 15416                           ;incstack = 0
 15417                           ; Regs used in _getTemperatureEN: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15418                           
 15419     11E5                     l14039:
 15420                           
 15421                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2008:     tempENreg = 
      +                          readRegister(TMAG5273_REG_T_CONFIG);
 15422     11E5  3007               	movlw	7
 15423     11E6  3190  205A  3191   	fcall	_readRegister
 15424     11E9  0140               	movlb	0	; select bank0
 15425     11EA  00AF               	movwf	getTemperatureEN@tempENreg
 15426     11EB                     l14041:
 15427                           
 15428                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2010:     uint8_t temp
      +                          EN = bitRead(tempENreg, 0);
 15429     11EB  082F               	movf	getTemperatureEN@tempENreg,w
 15430     11EC  00AC               	movwf	??_getTemperatureEN
 15431     11ED  01AD               	clrf	??_getTemperatureEN+1
 15432     11EE  082C               	movf	??_getTemperatureEN,w
 15433     11EF  00F1               	movwf	bitRead@reg
 15434     11F0  082D               	movf	??_getTemperatureEN+1,w
 15435     11F1  00F2               	movwf	bitRead@reg+1
 15436     11F2  01F3               	clrf	bitRead@position
 15437     11F3  3194  2421  3191   	fcall	_bitRead
 15438     11F6  0140               	movlb	0	; select bank0
 15439     11F7  00AE               	movwf	getTemperatureEN@tempEN
 15440     11F8                     l14043:
 15441                           
 15442                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2012:     return tempE
      +                          N;
 15443     11F8  082E               	movf	getTemperatureEN@tempEN,w
 15444     11F9                     l1105:
 15445     11F9  0008               	return
 15446     11FA                     __end_of_getTemperatureEN:
 15447                           
 15448                           	psect	text17
 15449     0CEA                     __ptext17:	
 15450 ;; *************** function _getOperatingMode *****************
 15451 ;; Defined at:
 15452 ;;		line 1552 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15453 ;; Parameters:    Size  Location     Type
 15454 ;;		None
 15455 ;; Auto vars:     Size  Location     Type
 15456 ;;  opMode1         1   16[BANK0 ] unsigned char 
 15457 ;;  opMode0         1   15[BANK0 ] unsigned char 
 15458 ;;  opMode          1   14[BANK0 ] unsigned char 
 15459 ;; Return value:  Size  Location     Type
 15460 ;;                  1    wreg      unsigned char 
 15461 ;; Registers used:
 15462 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15463 ;; Tracked objects:
 15464 ;;		On entry : 0/0
 15465 ;;		On exit  : 0/0
 15466 ;;		Unchanged: 0/0
 15467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15469 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15470 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15471 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15472 ;;Total ram usage:        5 bytes
 15473 ;; Hardware stack levels used: 1
 15474 ;; Hardware stack levels required when called: 14
 15475 ;; This function calls:
 15476 ;;		_bitRead
 15477 ;;		_readRegister
 15478 ;; This function is called by:
 15479 ;;		_begin
 15480 ;; This function uses a non-reentrant model
 15481 ;;
 15482                           
 15483     0CEA                     _getOperatingMode:	
 15484                           ;psect for function _getOperatingMode
 15485                           
 15486     0CEA                     l13803:	
 15487                           ;incstack = 0
 15488                           ; Regs used in _getOperatingMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15489                           
 15490     0CEA                     l13805:
 15491                           
 15492                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1554:     opMode = rea
      +                          dRegister(TMAG5273_REG_DEVICE_CONFIG_2);
 15493     0CEA  3001               	movlw	1
 15494     0CEB  3190  205A  318C   	fcall	_readRegister
 15495     0CEE  0140               	movlb	0	; select bank0
 15496     0CEF  00AE               	movwf	getOperatingMode@opMode
 15497     0CF0                     l13807:
 15498                           
 15499                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1556:     uint8_t opMo
      +                          de0 = bitRead(opMode, 0);
 15500     0CF0  082E               	movf	getOperatingMode@opMode,w
 15501     0CF1  00AC               	movwf	??_getOperatingMode
 15502     0CF2  01AD               	clrf	??_getOperatingMode+1
 15503     0CF3  082C               	movf	??_getOperatingMode,w
 15504     0CF4  00F1               	movwf	bitRead@reg
 15505     0CF5  082D               	movf	??_getOperatingMode+1,w
 15506     0CF6  00F2               	movwf	bitRead@reg+1
 15507     0CF7  01F3               	clrf	bitRead@position
 15508     0CF8  3194  2421  318C   	fcall	_bitRead
 15509     0CFB  0140               	movlb	0	; select bank0
 15510     0CFC  00AF               	movwf	getOperatingMode@opMode0
 15511     0CFD                     l13809:
 15512                           
 15513                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1557:     uint8_t opMo
      +                          de1 = bitRead(opMode, 1);
 15514     0CFD  082E               	movf	getOperatingMode@opMode,w
 15515     0CFE  00AC               	movwf	??_getOperatingMode
 15516     0CFF  01AD               	clrf	??_getOperatingMode+1
 15517     0D00  082C               	movf	??_getOperatingMode,w
 15518     0D01  00F1               	movwf	bitRead@reg
 15519     0D02  082D               	movf	??_getOperatingMode+1,w
 15520     0D03  00F2               	movwf	bitRead@reg+1
 15521     0D04  01F3               	clrf	bitRead@position
 15522     0D05  0AF3               	incf	bitRead@position,f
 15523     0D06  3194  2421  318C   	fcall	_bitRead
 15524     0D09  0140               	movlb	0	; select bank0
 15525     0D0A  00B0               	movwf	getOperatingMode@opMode1
 15526     0D0B                     l13811:
 15527                           
 15528                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1559:     if ((opMode0
      +                           == 0) && (opMode1 == 0))
 15529     0D0B  082F               	movf	getOperatingMode@opMode0,w
 15530     0D0C  1D03               	btfss	3,2
 15531     0D0D  2D0F               	goto	u10741
 15532     0D0E  2D10               	goto	u10740
 15533     0D0F                     u10741:
 15534     0D0F  2D17               	goto	l13821
 15535     0D10                     u10740:
 15536     0D10                     l13813:
 15537     0D10  0830               	movf	getOperatingMode@opMode1,w
 15538     0D11  1D03               	btfss	3,2
 15539     0D12  2D14               	goto	u10751
 15540     0D13  2D15               	goto	u10750
 15541     0D14                     u10751:
 15542     0D14  2D17               	goto	l13821
 15543     0D15                     u10750:
 15544     0D15                     l13815:
 15545                           
 15546                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1560:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1562:         return 0;
 15547     0D15  3000               	movlw	0
 15548     0D16  2D3C               	goto	l977
 15549     0D17                     l13821:
 15550     0D17  032F               	decf	getOperatingMode@opMode0,w
 15551     0D18  1D03               	btfss	3,2
 15552     0D19  2D1B               	goto	u10761
 15553     0D1A  2D1C               	goto	u10760
 15554     0D1B                     u10761:
 15555     0D1B  2D23               	goto	l13831
 15556     0D1C                     u10760:
 15557     0D1C                     l13823:
 15558     0D1C  0830               	movf	getOperatingMode@opMode1,w
 15559     0D1D  1D03               	btfss	3,2
 15560     0D1E  2D20               	goto	u10771
 15561     0D1F  2D21               	goto	u10770
 15562     0D20                     u10771:
 15563     0D20  2D23               	goto	l13831
 15564     0D21                     u10770:
 15565     0D21                     l13825:
 15566                           
 15567                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1564:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1566:         return 1;
 15568     0D21  3001               	movlw	1
 15569     0D22  2D3C               	goto	l977
 15570     0D23                     l13831:
 15571     0D23  082F               	movf	getOperatingMode@opMode0,w
 15572     0D24  1D03               	btfss	3,2
 15573     0D25  2D27               	goto	u10781
 15574     0D26  2D28               	goto	u10780
 15575     0D27                     u10781:
 15576     0D27  2D2F               	goto	l13841
 15577     0D28                     u10780:
 15578     0D28                     l13833:
 15579     0D28  0330               	decf	getOperatingMode@opMode1,w
 15580     0D29  1D03               	btfss	3,2
 15581     0D2A  2D2C               	goto	u10791
 15582     0D2B  2D2D               	goto	u10790
 15583     0D2C                     u10791:
 15584     0D2C  2D2F               	goto	l13841
 15585     0D2D                     u10790:
 15586     0D2D                     l13835:
 15587                           
 15588                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1568:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1570:         return 2;
 15589     0D2D  3002               	movlw	2
 15590     0D2E  2D3C               	goto	l977
 15591     0D2F                     l13841:
 15592     0D2F  032F               	decf	getOperatingMode@opMode0,w
 15593     0D30  1D03               	btfss	3,2
 15594     0D31  2D33               	goto	u10801
 15595     0D32  2D34               	goto	u10800
 15596     0D33                     u10801:
 15597     0D33  2D3B               	goto	l980
 15598     0D34                     u10800:
 15599     0D34                     l13843:
 15600     0D34  0330               	decf	getOperatingMode@opMode1,w
 15601     0D35  1D03               	btfss	3,2
 15602     0D36  2D38               	goto	u10811
 15603     0D37  2D39               	goto	u10810
 15604     0D38                     u10811:
 15605     0D38  2D3B               	goto	l980
 15606     0D39                     u10810:
 15607     0D39                     l13845:
 15608                           
 15609                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1572:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1574:         return 3;
 15610     0D39  3003               	movlw	3
 15611     0D3A  2D3C               	goto	l977
 15612     0D3B                     l980:
 15613     0D3B  2D15               	goto	l13815
 15614     0D3C                     l977:
 15615     0D3C  0008               	return
 15616     0D3D                     __end_of_getOperatingMode:
 15617                           
 15618                           	psect	text18
 15619     0377                     __ptext18:	
 15620 ;; *************** function _getMagneticChannel *****************
 15621 ;; Defined at:
 15622 ;;		line 1596 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 15623 ;; Parameters:    Size  Location     Type
 15624 ;;		None
 15625 ;; Auto vars:     Size  Location     Type
 15626 ;;  magMode7        1   18[BANK0 ] unsigned char 
 15627 ;;  magMode6        1   17[BANK0 ] unsigned char 
 15628 ;;  magMode5        1   16[BANK0 ] unsigned char 
 15629 ;;  magMode4        1   15[BANK0 ] unsigned char 
 15630 ;;  magChannel      1   14[BANK0 ] unsigned char 
 15631 ;; Return value:  Size  Location     Type
 15632 ;;                  1    wreg      unsigned char 
 15633 ;; Registers used:
 15634 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15635 ;; Tracked objects:
 15636 ;;		On entry : 0/0
 15637 ;;		On exit  : 0/0
 15638 ;;		Unchanged: 0/0
 15639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15641 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15642 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15643 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15644 ;;Total ram usage:        7 bytes
 15645 ;; Hardware stack levels used: 1
 15646 ;; Hardware stack levels required when called: 14
 15647 ;; This function calls:
 15648 ;;		_bitRead
 15649 ;;		_readRegister
 15650 ;; This function is called by:
 15651 ;;		_begin
 15652 ;; This function uses a non-reentrant model
 15653 ;;
 15654                           
 15655     0377                     _getMagneticChannel:	
 15656                           ;psect for function _getMagneticChannel
 15657                           
 15658     0377                     l13853:	
 15659                           ;incstack = 0
 15660                           ; Regs used in _getMagneticChannel: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15661                           
 15662     0377                     l13855:
 15663                           
 15664                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1598:     magChannel =
      +                           readRegister(TMAG5273_REG_SENSOR_CONFIG_1);
 15665     0377  3002               	movlw	2
 15666     0378  3190  205A  3183   	fcall	_readRegister
 15667     037B  0140               	movlb	0	; select bank0
 15668     037C  00AE               	movwf	getMagneticChannel@magChannel
 15669     037D                     l13857:
 15670                           
 15671                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1600:     uint8_t magM
      +                          ode4 = bitRead(magChannel, 4);
 15672     037D  082E               	movf	getMagneticChannel@magChannel,w
 15673     037E  00AC               	movwf	??_getMagneticChannel
 15674     037F  01AD               	clrf	??_getMagneticChannel+1
 15675     0380  082C               	movf	??_getMagneticChannel,w
 15676     0381  00F1               	movwf	bitRead@reg
 15677     0382  082D               	movf	??_getMagneticChannel+1,w
 15678     0383  00F2               	movwf	bitRead@reg+1
 15679     0384  3004               	movlw	4
 15680     0385  00F3               	movwf	bitRead@position
 15681     0386  3194  2421  3183   	fcall	_bitRead
 15682     0389  0140               	movlb	0	; select bank0
 15683     038A  00AF               	movwf	getMagneticChannel@magMode4
 15684     038B                     l13859:
 15685                           
 15686                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1601:     uint8_t magM
      +                          ode5 = bitRead(magChannel, 5);
 15687     038B  082E               	movf	getMagneticChannel@magChannel,w
 15688     038C  00AC               	movwf	??_getMagneticChannel
 15689     038D  01AD               	clrf	??_getMagneticChannel+1
 15690     038E  082C               	movf	??_getMagneticChannel,w
 15691     038F  00F1               	movwf	bitRead@reg
 15692     0390  082D               	movf	??_getMagneticChannel+1,w
 15693     0391  00F2               	movwf	bitRead@reg+1
 15694     0392  3005               	movlw	5
 15695     0393  00F3               	movwf	bitRead@position
 15696     0394  3194  2421  3183   	fcall	_bitRead
 15697     0397  0140               	movlb	0	; select bank0
 15698     0398  00B0               	movwf	getMagneticChannel@magMode5
 15699     0399                     l13861:
 15700                           
 15701                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1602:     uint8_t magM
      +                          ode6 = bitRead(magChannel, 6);
 15702     0399  082E               	movf	getMagneticChannel@magChannel,w
 15703     039A  00AC               	movwf	??_getMagneticChannel
 15704     039B  01AD               	clrf	??_getMagneticChannel+1
 15705     039C  082C               	movf	??_getMagneticChannel,w
 15706     039D  00F1               	movwf	bitRead@reg
 15707     039E  082D               	movf	??_getMagneticChannel+1,w
 15708     039F  00F2               	movwf	bitRead@reg+1
 15709     03A0  3006               	movlw	6
 15710     03A1  00F3               	movwf	bitRead@position
 15711     03A2  3194  2421  3183   	fcall	_bitRead
 15712     03A5  0140               	movlb	0	; select bank0
 15713     03A6  00B1               	movwf	getMagneticChannel@magMode6
 15714     03A7                     l13863:
 15715                           
 15716                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1603:     uint8_t magM
      +                          ode7 = bitRead(magChannel, 7);
 15717     03A7  082E               	movf	getMagneticChannel@magChannel,w
 15718     03A8  00AC               	movwf	??_getMagneticChannel
 15719     03A9  01AD               	clrf	??_getMagneticChannel+1
 15720     03AA  082C               	movf	??_getMagneticChannel,w
 15721     03AB  00F1               	movwf	bitRead@reg
 15722     03AC  082D               	movf	??_getMagneticChannel+1,w
 15723     03AD  00F2               	movwf	bitRead@reg+1
 15724     03AE  3007               	movlw	7
 15725     03AF  00F3               	movwf	bitRead@position
 15726     03B0  3194  2421  3183   	fcall	_bitRead
 15727     03B3  0140               	movlb	0	; select bank0
 15728     03B4  00B2               	movwf	getMagneticChannel@magMode7
 15729     03B5                     l13865:
 15730                           
 15731                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1605:     if ((magMode
      +                          4 == 0) && (magMode5 == 0) && (magMode6 == 0) && (magMode7 == 0))
 15732     03B5  082F               	movf	getMagneticChannel@magMode4,w
 15733     03B6  1D03               	btfss	3,2
 15734     03B7  2BB9               	goto	u10821
 15735     03B8  2BBA               	goto	u10820
 15736     03B9                     u10821:
 15737     03B9  2BCB               	goto	l13879
 15738     03BA                     u10820:
 15739     03BA                     l13867:
 15740     03BA  0830               	movf	getMagneticChannel@magMode5,w
 15741     03BB  1D03               	btfss	3,2
 15742     03BC  2BBE               	goto	u10831
 15743     03BD  2BBF               	goto	u10830
 15744     03BE                     u10831:
 15745     03BE  2BCB               	goto	l13879
 15746     03BF                     u10830:
 15747     03BF                     l13869:
 15748     03BF  0831               	movf	getMagneticChannel@magMode6,w
 15749     03C0  1D03               	btfss	3,2
 15750     03C1  2BC3               	goto	u10841
 15751     03C2  2BC4               	goto	u10840
 15752     03C3                     u10841:
 15753     03C3  2BCB               	goto	l13879
 15754     03C4                     u10840:
 15755     03C4                     l13871:
 15756     03C4  0832               	movf	getMagneticChannel@magMode7,w
 15757     03C5  1D03               	btfss	3,2
 15758     03C6  2BC8               	goto	u10851
 15759     03C7  2BC9               	goto	u10850
 15760     03C8                     u10851:
 15761     03C8  2BCB               	goto	l13879
 15762     03C9                     u10850:
 15763     03C9                     l13873:
 15764                           
 15765                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1606:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1607:         return 0;
 15766     03C9  3000               	movlw	0
 15767     03CA  2CBC               	goto	l987
 15768     03CB                     l13879:
 15769     03CB  032F               	decf	getMagneticChannel@magMode4,w
 15770     03CC  1D03               	btfss	3,2
 15771     03CD  2BCF               	goto	u10861
 15772     03CE  2BD0               	goto	u10860
 15773     03CF                     u10861:
 15774     03CF  2BE1               	goto	l13893
 15775     03D0                     u10860:
 15776     03D0                     l13881:
 15777     03D0  0830               	movf	getMagneticChannel@magMode5,w
 15778     03D1  1D03               	btfss	3,2
 15779     03D2  2BD4               	goto	u10871
 15780     03D3  2BD5               	goto	u10870
 15781     03D4                     u10871:
 15782     03D4  2BE1               	goto	l13893
 15783     03D5                     u10870:
 15784     03D5                     l13883:
 15785     03D5  0831               	movf	getMagneticChannel@magMode6,w
 15786     03D6  1D03               	btfss	3,2
 15787     03D7  2BD9               	goto	u10881
 15788     03D8  2BDA               	goto	u10880
 15789     03D9                     u10881:
 15790     03D9  2BE1               	goto	l13893
 15791     03DA                     u10880:
 15792     03DA                     l13885:
 15793     03DA  0832               	movf	getMagneticChannel@magMode7,w
 15794     03DB  1D03               	btfss	3,2
 15795     03DC  2BDE               	goto	u10891
 15796     03DD  2BDF               	goto	u10890
 15797     03DE                     u10891:
 15798     03DE  2BE1               	goto	l13893
 15799     03DF                     u10890:
 15800     03DF                     l13887:
 15801                           
 15802                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1609:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1610:         return 1;
 15803     03DF  3001               	movlw	1
 15804     03E0  2CBC               	goto	l987
 15805     03E1                     l13893:
 15806     03E1  082F               	movf	getMagneticChannel@magMode4,w
 15807     03E2  1D03               	btfss	3,2
 15808     03E3  2BE5               	goto	u10901
 15809     03E4  2BE6               	goto	u10900
 15810     03E5                     u10901:
 15811     03E5  2BF7               	goto	l13907
 15812     03E6                     u10900:
 15813     03E6                     l13895:
 15814     03E6  0330               	decf	getMagneticChannel@magMode5,w
 15815     03E7  1D03               	btfss	3,2
 15816     03E8  2BEA               	goto	u10911
 15817     03E9  2BEB               	goto	u10910
 15818     03EA                     u10911:
 15819     03EA  2BF7               	goto	l13907
 15820     03EB                     u10910:
 15821     03EB                     l13897:
 15822     03EB  0831               	movf	getMagneticChannel@magMode6,w
 15823     03EC  1D03               	btfss	3,2
 15824     03ED  2BEF               	goto	u10921
 15825     03EE  2BF0               	goto	u10920
 15826     03EF                     u10921:
 15827     03EF  2BF7               	goto	l13907
 15828     03F0                     u10920:
 15829     03F0                     l13899:
 15830     03F0  0832               	movf	getMagneticChannel@magMode7,w
 15831     03F1  1D03               	btfss	3,2
 15832     03F2  2BF4               	goto	u10931
 15833     03F3  2BF5               	goto	u10930
 15834     03F4                     u10931:
 15835     03F4  2BF7               	goto	l13907
 15836     03F5                     u10930:
 15837     03F5                     l13901:
 15838                           
 15839                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1612:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1613:         return 2;
 15840     03F5  3002               	movlw	2
 15841     03F6  2CBC               	goto	l987
 15842     03F7                     l13907:
 15843     03F7  032F               	decf	getMagneticChannel@magMode4,w
 15844     03F8  1D03               	btfss	3,2
 15845     03F9  2BFB               	goto	u10941
 15846     03FA  2BFC               	goto	u10940
 15847     03FB                     u10941:
 15848     03FB  2C0D               	goto	l13921
 15849     03FC                     u10940:
 15850     03FC                     l13909:
 15851     03FC  0330               	decf	getMagneticChannel@magMode5,w
 15852     03FD  1D03               	btfss	3,2
 15853     03FE  2C00               	goto	u10951
 15854     03FF  2C01               	goto	u10950
 15855     0400                     u10951:
 15856     0400  2C0D               	goto	l13921
 15857     0401                     u10950:
 15858     0401                     l13911:
 15859     0401  0831               	movf	getMagneticChannel@magMode6,w
 15860     0402  1D03               	btfss	3,2
 15861     0403  2C05               	goto	u10961
 15862     0404  2C06               	goto	u10960
 15863     0405                     u10961:
 15864     0405  2C0D               	goto	l13921
 15865     0406                     u10960:
 15866     0406                     l13913:
 15867     0406  0832               	movf	getMagneticChannel@magMode7,w
 15868     0407  1D03               	btfss	3,2
 15869     0408  2C0A               	goto	u10971
 15870     0409  2C0B               	goto	u10970
 15871     040A                     u10971:
 15872     040A  2C0D               	goto	l13921
 15873     040B                     u10970:
 15874     040B                     l13915:
 15875                           
 15876                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1615:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1616:         return 3;
 15877     040B  3003               	movlw	3
 15878     040C  2CBC               	goto	l987
 15879     040D                     l13921:
 15880     040D  082F               	movf	getMagneticChannel@magMode4,w
 15881     040E  1D03               	btfss	3,2
 15882     040F  2C11               	goto	u10981
 15883     0410  2C12               	goto	u10980
 15884     0411                     u10981:
 15885     0411  2C23               	goto	l13935
 15886     0412                     u10980:
 15887     0412                     l13923:
 15888     0412  0830               	movf	getMagneticChannel@magMode5,w
 15889     0413  1D03               	btfss	3,2
 15890     0414  2C16               	goto	u10991
 15891     0415  2C17               	goto	u10990
 15892     0416                     u10991:
 15893     0416  2C23               	goto	l13935
 15894     0417                     u10990:
 15895     0417                     l13925:
 15896     0417  0331               	decf	getMagneticChannel@magMode6,w
 15897     0418  1D03               	btfss	3,2
 15898     0419  2C1B               	goto	u11001
 15899     041A  2C1C               	goto	u11000
 15900     041B                     u11001:
 15901     041B  2C23               	goto	l13935
 15902     041C                     u11000:
 15903     041C                     l13927:
 15904     041C  0832               	movf	getMagneticChannel@magMode7,w
 15905     041D  1D03               	btfss	3,2
 15906     041E  2C20               	goto	u11011
 15907     041F  2C21               	goto	u11010
 15908     0420                     u11011:
 15909     0420  2C23               	goto	l13935
 15910     0421                     u11010:
 15911     0421                     l13929:
 15912                           
 15913                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1618:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1619:         return 4;
 15914     0421  3004               	movlw	4
 15915     0422  2CBC               	goto	l987
 15916     0423                     l13935:
 15917     0423  032F               	decf	getMagneticChannel@magMode4,w
 15918     0424  1D03               	btfss	3,2
 15919     0425  2C27               	goto	u11021
 15920     0426  2C28               	goto	u11020
 15921     0427                     u11021:
 15922     0427  2C39               	goto	l13949
 15923     0428                     u11020:
 15924     0428                     l13937:
 15925     0428  0830               	movf	getMagneticChannel@magMode5,w
 15926     0429  1D03               	btfss	3,2
 15927     042A  2C2C               	goto	u11031
 15928     042B  2C2D               	goto	u11030
 15929     042C                     u11031:
 15930     042C  2C39               	goto	l13949
 15931     042D                     u11030:
 15932     042D                     l13939:
 15933     042D  0331               	decf	getMagneticChannel@magMode6,w
 15934     042E  1D03               	btfss	3,2
 15935     042F  2C31               	goto	u11041
 15936     0430  2C32               	goto	u11040
 15937     0431                     u11041:
 15938     0431  2C39               	goto	l13949
 15939     0432                     u11040:
 15940     0432                     l13941:
 15941     0432  0832               	movf	getMagneticChannel@magMode7,w
 15942     0433  1D03               	btfss	3,2
 15943     0434  2C36               	goto	u11051
 15944     0435  2C37               	goto	u11050
 15945     0436                     u11051:
 15946     0436  2C39               	goto	l13949
 15947     0437                     u11050:
 15948     0437                     l13943:
 15949                           
 15950                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1621:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1622:         return 5;
 15951     0437  3005               	movlw	5
 15952     0438  2CBC               	goto	l987
 15953     0439                     l13949:
 15954     0439  082F               	movf	getMagneticChannel@magMode4,w
 15955     043A  1D03               	btfss	3,2
 15956     043B  2C3D               	goto	u11061
 15957     043C  2C3E               	goto	u11060
 15958     043D                     u11061:
 15959     043D  2C4F               	goto	l13963
 15960     043E                     u11060:
 15961     043E                     l13951:
 15962     043E  0330               	decf	getMagneticChannel@magMode5,w
 15963     043F  1D03               	btfss	3,2
 15964     0440  2C42               	goto	u11071
 15965     0441  2C43               	goto	u11070
 15966     0442                     u11071:
 15967     0442  2C4F               	goto	l13963
 15968     0443                     u11070:
 15969     0443                     l13953:
 15970     0443  0331               	decf	getMagneticChannel@magMode6,w
 15971     0444  1D03               	btfss	3,2
 15972     0445  2C47               	goto	u11081
 15973     0446  2C48               	goto	u11080
 15974     0447                     u11081:
 15975     0447  2C4F               	goto	l13963
 15976     0448                     u11080:
 15977     0448                     l13955:
 15978     0448  0832               	movf	getMagneticChannel@magMode7,w
 15979     0449  1D03               	btfss	3,2
 15980     044A  2C4C               	goto	u11091
 15981     044B  2C4D               	goto	u11090
 15982     044C                     u11091:
 15983     044C  2C4F               	goto	l13963
 15984     044D                     u11090:
 15985     044D                     l13957:
 15986                           
 15987                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1624:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1625:         return 6;
 15988     044D  3006               	movlw	6
 15989     044E  2CBC               	goto	l987
 15990     044F                     l13963:
 15991     044F  032F               	decf	getMagneticChannel@magMode4,w
 15992     0450  1D03               	btfss	3,2
 15993     0451  2C53               	goto	u11101
 15994     0452  2C54               	goto	u11100
 15995     0453                     u11101:
 15996     0453  2C65               	goto	l13977
 15997     0454                     u11100:
 15998     0454                     l13965:
 15999     0454  0330               	decf	getMagneticChannel@magMode5,w
 16000     0455  1D03               	btfss	3,2
 16001     0456  2C58               	goto	u11111
 16002     0457  2C59               	goto	u11110
 16003     0458                     u11111:
 16004     0458  2C65               	goto	l13977
 16005     0459                     u11110:
 16006     0459                     l13967:
 16007     0459  0331               	decf	getMagneticChannel@magMode6,w
 16008     045A  1D03               	btfss	3,2
 16009     045B  2C5D               	goto	u11121
 16010     045C  2C5E               	goto	u11120
 16011     045D                     u11121:
 16012     045D  2C65               	goto	l13977
 16013     045E                     u11120:
 16014     045E                     l13969:
 16015     045E  0832               	movf	getMagneticChannel@magMode7,w
 16016     045F  1D03               	btfss	3,2
 16017     0460  2C62               	goto	u11131
 16018     0461  2C63               	goto	u11130
 16019     0462                     u11131:
 16020     0462  2C65               	goto	l13977
 16021     0463                     u11130:
 16022     0463                     l13971:
 16023                           
 16024                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1627:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1628:         return 7;
 16025     0463  3007               	movlw	7
 16026     0464  2CBC               	goto	l987
 16027     0465                     l13977:
 16028     0465  082F               	movf	getMagneticChannel@magMode4,w
 16029     0466  1D03               	btfss	3,2
 16030     0467  2C69               	goto	u11141
 16031     0468  2C6A               	goto	u11140
 16032     0469                     u11141:
 16033     0469  2C7B               	goto	l13991
 16034     046A                     u11140:
 16035     046A                     l13979:
 16036     046A  0830               	movf	getMagneticChannel@magMode5,w
 16037     046B  1D03               	btfss	3,2
 16038     046C  2C6E               	goto	u11151
 16039     046D  2C6F               	goto	u11150
 16040     046E                     u11151:
 16041     046E  2C7B               	goto	l13991
 16042     046F                     u11150:
 16043     046F                     l13981:
 16044     046F  0831               	movf	getMagneticChannel@magMode6,w
 16045     0470  1D03               	btfss	3,2
 16046     0471  2C73               	goto	u11161
 16047     0472  2C74               	goto	u11160
 16048     0473                     u11161:
 16049     0473  2C7B               	goto	l13991
 16050     0474                     u11160:
 16051     0474                     l13983:
 16052     0474  0332               	decf	getMagneticChannel@magMode7,w
 16053     0475  1D03               	btfss	3,2
 16054     0476  2C78               	goto	u11171
 16055     0477  2C79               	goto	u11170
 16056     0478                     u11171:
 16057     0478  2C7B               	goto	l13991
 16058     0479                     u11170:
 16059     0479                     l13985:
 16060                           
 16061                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1630:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1631:         return 8;
 16062     0479  3008               	movlw	8
 16063     047A  2CBC               	goto	l987
 16064     047B                     l13991:
 16065     047B  032F               	decf	getMagneticChannel@magMode4,w
 16066     047C  1D03               	btfss	3,2
 16067     047D  2C7F               	goto	u11181
 16068     047E  2C80               	goto	u11180
 16069     047F                     u11181:
 16070     047F  2C91               	goto	l14005
 16071     0480                     u11180:
 16072     0480                     l13993:
 16073     0480  0830               	movf	getMagneticChannel@magMode5,w
 16074     0481  1D03               	btfss	3,2
 16075     0482  2C84               	goto	u11191
 16076     0483  2C85               	goto	u11190
 16077     0484                     u11191:
 16078     0484  2C91               	goto	l14005
 16079     0485                     u11190:
 16080     0485                     l13995:
 16081     0485  0831               	movf	getMagneticChannel@magMode6,w
 16082     0486  1D03               	btfss	3,2
 16083     0487  2C89               	goto	u11201
 16084     0488  2C8A               	goto	u11200
 16085     0489                     u11201:
 16086     0489  2C91               	goto	l14005
 16087     048A                     u11200:
 16088     048A                     l13997:
 16089     048A  0332               	decf	getMagneticChannel@magMode7,w
 16090     048B  1D03               	btfss	3,2
 16091     048C  2C8E               	goto	u11211
 16092     048D  2C8F               	goto	u11210
 16093     048E                     u11211:
 16094     048E  2C91               	goto	l14005
 16095     048F                     u11210:
 16096     048F                     l13999:
 16097                           
 16098                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1633:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1634:         return 9;
 16099     048F  3009               	movlw	9
 16100     0490  2CBC               	goto	l987
 16101     0491                     l14005:
 16102     0491  082F               	movf	getMagneticChannel@magMode4,w
 16103     0492  1D03               	btfss	3,2
 16104     0493  2C95               	goto	u11221
 16105     0494  2C96               	goto	u11220
 16106     0495                     u11221:
 16107     0495  2CA7               	goto	l14019
 16108     0496                     u11220:
 16109     0496                     l14007:
 16110     0496  0330               	decf	getMagneticChannel@magMode5,w
 16111     0497  1D03               	btfss	3,2
 16112     0498  2C9A               	goto	u11231
 16113     0499  2C9B               	goto	u11230
 16114     049A                     u11231:
 16115     049A  2CA7               	goto	l14019
 16116     049B                     u11230:
 16117     049B                     l14009:
 16118     049B  0831               	movf	getMagneticChannel@magMode6,w
 16119     049C  1D03               	btfss	3,2
 16120     049D  2C9F               	goto	u11241
 16121     049E  2CA0               	goto	u11240
 16122     049F                     u11241:
 16123     049F  2CA7               	goto	l14019
 16124     04A0                     u11240:
 16125     04A0                     l14011:
 16126     04A0  0332               	decf	getMagneticChannel@magMode7,w
 16127     04A1  1D03               	btfss	3,2
 16128     04A2  2CA4               	goto	u11251
 16129     04A3  2CA5               	goto	u11250
 16130     04A4                     u11251:
 16131     04A4  2CA7               	goto	l14019
 16132     04A5                     u11250:
 16133     04A5                     l14013:
 16134                           
 16135                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1636:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1637:         return 10;
 16136     04A5  300A               	movlw	10
 16137     04A6  2CBC               	goto	l987
 16138     04A7                     l14019:
 16139     04A7  032F               	decf	getMagneticChannel@magMode4,w
 16140     04A8  1D03               	btfss	3,2
 16141     04A9  2CAB               	goto	u11261
 16142     04AA  2CAC               	goto	u11260
 16143     04AB                     u11261:
 16144     04AB  2BC9               	goto	l13873
 16145     04AC                     u11260:
 16146     04AC                     l14021:
 16147     04AC  0330               	decf	getMagneticChannel@magMode5,w
 16148     04AD  1D03               	btfss	3,2
 16149     04AE  2CB0               	goto	u11271
 16150     04AF  2CB1               	goto	u11270
 16151     04B0                     u11271:
 16152     04B0  2BC9               	goto	l13873
 16153     04B1                     u11270:
 16154     04B1                     l14023:
 16155     04B1  0831               	movf	getMagneticChannel@magMode6,w
 16156     04B2  1D03               	btfss	3,2
 16157     04B3  2CB5               	goto	u11281
 16158     04B4  2CB6               	goto	u11280
 16159     04B5                     u11281:
 16160     04B5  2BC9               	goto	l13873
 16161     04B6                     u11280:
 16162     04B6                     l14025:
 16163     04B6  0332               	decf	getMagneticChannel@magMode7,w
 16164     04B7  1D03               	btfss	3,2
 16165     04B8  2CBA               	goto	u11291
 16166     04B9  2CBB               	goto	u11290
 16167     04BA                     u11291:
 16168     04BA  2BC9               	goto	l13873
 16169     04BB                     u11290:
 16170     04BB                     l14027:
 16171                           
 16172                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1639:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1640:         return 11;
 16173     04BB  300B               	movlw	11
 16174     04BC                     l987:
 16175     04BC  0008               	return
 16176     04BD                     __end_of_getMagneticChannel:
 16177                           
 16178                           	psect	text19
 16179     1251                     __ptext19:	
 16180 ;; *************** function _getLowPower *****************
 16181 ;; Defined at:
 16182 ;;		line 1501 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 16183 ;; Parameters:    Size  Location     Type
 16184 ;;		None
 16185 ;; Auto vars:     Size  Location     Type
 16186 ;;  lowPowerMode    1   15[BANK0 ] unsigned char 
 16187 ;;  lowPowerMode    1   14[BANK0 ] unsigned char 
 16188 ;; Return value:  Size  Location     Type
 16189 ;;                  1    wreg      unsigned char 
 16190 ;; Registers used:
 16191 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16192 ;; Tracked objects:
 16193 ;;		On entry : 0/0
 16194 ;;		On exit  : 0/0
 16195 ;;		Unchanged: 0/0
 16196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16198 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16199 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16200 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16201 ;;Total ram usage:        4 bytes
 16202 ;; Hardware stack levels used: 1
 16203 ;; Hardware stack levels required when called: 14
 16204 ;; This function calls:
 16205 ;;		_bitRead
 16206 ;;		_readRegister
 16207 ;; This function is called by:
 16208 ;;		_begin
 16209 ;; This function uses a non-reentrant model
 16210 ;;
 16211                           
 16212     1251                     _getLowPower:	
 16213                           ;psect for function _getLowPower
 16214                           
 16215     1251                     l13793:	
 16216                           ;incstack = 0
 16217                           ; Regs used in _getLowPower: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16218                           
 16219     1251                     l13795:
 16220                           
 16221                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1503:     lowPowerMode
      +                           = readRegister(TMAG5273_REG_DEVICE_CONFIG_2);
 16222     1251  3001               	movlw	1
 16223     1252  3190  205A  3192   	fcall	_readRegister
 16224     1255  0140               	movlb	0	; select bank0
 16225     1256  00AF               	movwf	getLowPower@lowPowerMode
 16226     1257                     l13797:
 16227                           
 16228                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1505:     uint8_t lowP
      +                          owerModeBit = bitRead(lowPowerMode, 4);
 16229     1257  082F               	movf	getLowPower@lowPowerMode,w
 16230     1258  00AC               	movwf	??_getLowPower
 16231     1259  01AD               	clrf	??_getLowPower+1
 16232     125A  082C               	movf	??_getLowPower,w
 16233     125B  00F1               	movwf	bitRead@reg
 16234     125C  082D               	movf	??_getLowPower+1,w
 16235     125D  00F2               	movwf	bitRead@reg+1
 16236     125E  3004               	movlw	4
 16237     125F  00F3               	movwf	bitRead@position
 16238     1260  3194  2421  3192   	fcall	_bitRead
 16239     1263  0140               	movlb	0	; select bank0
 16240     1264  00AE               	movwf	getLowPower@lowPowerModeBit
 16241     1265                     l13799:
 16242                           
 16243                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1507:     return lowPo
      +                          werModeBit;
 16244     1265  082E               	movf	getLowPower@lowPowerModeBit,w
 16245     1266                     l967:
 16246     1266  0008               	return
 16247     1267                     __end_of_getLowPower:
 16248                           
 16249                           	psect	text20
 16250     0D3D                     __ptext20:	
 16251 ;; *************** function _getAngleEn *****************
 16252 ;; Defined at:
 16253 ;;		line 1857 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 16254 ;; Parameters:    Size  Location     Type
 16255 ;;		None
 16256 ;; Auto vars:     Size  Location     Type
 16257 ;;  angleDir3       1   16[BANK0 ] unsigned char 
 16258 ;;  angleDir2       1   15[BANK0 ] unsigned char 
 16259 ;;  angleReg        1   14[BANK0 ] unsigned char 
 16260 ;; Return value:  Size  Location     Type
 16261 ;;                  1    wreg      unsigned char 
 16262 ;; Registers used:
 16263 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16264 ;; Tracked objects:
 16265 ;;		On entry : 0/0
 16266 ;;		On exit  : 0/0
 16267 ;;		Unchanged: 0/0
 16268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16270 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16271 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16272 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16273 ;;Total ram usage:        5 bytes
 16274 ;; Hardware stack levels used: 1
 16275 ;; Hardware stack levels required when called: 14
 16276 ;; This function calls:
 16277 ;;		_bitRead
 16278 ;;		_readRegister
 16279 ;; This function is called by:
 16280 ;;		_begin
 16281 ;;		_setMagneticOffset2
 16282 ;;		_getMagneticOffset2
 16283 ;; This function uses a non-reentrant model
 16284 ;;
 16285                           
 16286     0D3D                     _getAngleEn:	
 16287                           ;psect for function _getAngleEn
 16288                           
 16289     0D3D                     l14047:	
 16290                           ;incstack = 0
 16291                           ; Regs used in _getAngleEn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16292                           
 16293     0D3D                     l14049:
 16294                           
 16295                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1859:     angleReg = r
      +                          eadRegister(TMAG5273_REG_SENSOR_CONFIG_2);
 16296     0D3D  3003               	movlw	3
 16297     0D3E  3190  205A  318D   	fcall	_readRegister
 16298     0D41  0140               	movlb	0	; select bank0
 16299     0D42  00AE               	movwf	getAngleEn@angleReg
 16300     0D43                     l14051:
 16301                           
 16302                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1861:     uint8_t angl
      +                          eDir2 = bitRead(angleReg, 2);
 16303     0D43  082E               	movf	getAngleEn@angleReg,w
 16304     0D44  00AC               	movwf	??_getAngleEn
 16305     0D45  01AD               	clrf	??_getAngleEn+1
 16306     0D46  082C               	movf	??_getAngleEn,w
 16307     0D47  00F1               	movwf	bitRead@reg
 16308     0D48  082D               	movf	??_getAngleEn+1,w
 16309     0D49  00F2               	movwf	bitRead@reg+1
 16310     0D4A  3002               	movlw	2
 16311     0D4B  00F3               	movwf	bitRead@position
 16312     0D4C  3194  2421  318D   	fcall	_bitRead
 16313     0D4F  0140               	movlb	0	; select bank0
 16314     0D50  00AF               	movwf	getAngleEn@angleDir2
 16315     0D51                     l14053:
 16316                           
 16317                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1862:     uint8_t angl
      +                          eDir3 = bitRead(angleReg, 3);
 16318     0D51  082E               	movf	getAngleEn@angleReg,w
 16319     0D52  00AC               	movwf	??_getAngleEn
 16320     0D53  01AD               	clrf	??_getAngleEn+1
 16321     0D54  082C               	movf	??_getAngleEn,w
 16322     0D55  00F1               	movwf	bitRead@reg
 16323     0D56  082D               	movf	??_getAngleEn+1,w
 16324     0D57  00F2               	movwf	bitRead@reg+1
 16325     0D58  3003               	movlw	3
 16326     0D59  00F3               	movwf	bitRead@position
 16327     0D5A  3194  2421  318D   	fcall	_bitRead
 16328     0D5D  0140               	movlb	0	; select bank0
 16329     0D5E  00B0               	movwf	getAngleEn@angleDir3
 16330     0D5F                     l14055:
 16331                           
 16332                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1864:     if ((angleDi
      +                          r2 == 0) && (angleDir3 == 0))
 16333     0D5F  082F               	movf	getAngleEn@angleDir2,w
 16334     0D60  1D03               	btfss	3,2
 16335     0D61  2D63               	goto	u11301
 16336     0D62  2D64               	goto	u11300
 16337     0D63                     u11301:
 16338     0D63  2D6B               	goto	l14065
 16339     0D64                     u11300:
 16340     0D64                     l14057:
 16341     0D64  0830               	movf	getAngleEn@angleDir3,w
 16342     0D65  1D03               	btfss	3,2
 16343     0D66  2D68               	goto	u11311
 16344     0D67  2D69               	goto	u11310
 16345     0D68                     u11311:
 16346     0D68  2D6B               	goto	l14065
 16347     0D69                     u11310:
 16348     0D69                     l14059:
 16349                           
 16350                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1865:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1867:         return 0;
 16351     0D69  3000               	movlw	0
 16352     0D6A  2D90               	goto	l1072
 16353     0D6B                     l14065:
 16354     0D6B  032F               	decf	getAngleEn@angleDir2,w
 16355     0D6C  1D03               	btfss	3,2
 16356     0D6D  2D6F               	goto	u11321
 16357     0D6E  2D70               	goto	u11320
 16358     0D6F                     u11321:
 16359     0D6F  2D77               	goto	l14075
 16360     0D70                     u11320:
 16361     0D70                     l14067:
 16362     0D70  0830               	movf	getAngleEn@angleDir3,w
 16363     0D71  1D03               	btfss	3,2
 16364     0D72  2D74               	goto	u11331
 16365     0D73  2D75               	goto	u11330
 16366     0D74                     u11331:
 16367     0D74  2D77               	goto	l14075
 16368     0D75                     u11330:
 16369     0D75                     l14069:
 16370                           
 16371                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1869:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1871:         return 1;
 16372     0D75  3001               	movlw	1
 16373     0D76  2D90               	goto	l1072
 16374     0D77                     l14075:
 16375     0D77  082F               	movf	getAngleEn@angleDir2,w
 16376     0D78  1D03               	btfss	3,2
 16377     0D79  2D7B               	goto	u11341
 16378     0D7A  2D7C               	goto	u11340
 16379     0D7B                     u11341:
 16380     0D7B  2D83               	goto	l14085
 16381     0D7C                     u11340:
 16382     0D7C                     l14077:
 16383     0D7C  0330               	decf	getAngleEn@angleDir3,w
 16384     0D7D  1D03               	btfss	3,2
 16385     0D7E  2D80               	goto	u11351
 16386     0D7F  2D81               	goto	u11350
 16387     0D80                     u11351:
 16388     0D80  2D83               	goto	l14085
 16389     0D81                     u11350:
 16390     0D81                     l14079:
 16391                           
 16392                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1873:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1875:         return 2;
 16393     0D81  3002               	movlw	2
 16394     0D82  2D90               	goto	l1072
 16395     0D83                     l14085:
 16396     0D83  032F               	decf	getAngleEn@angleDir2,w
 16397     0D84  1D03               	btfss	3,2
 16398     0D85  2D87               	goto	u11361
 16399     0D86  2D88               	goto	u11360
 16400     0D87                     u11361:
 16401     0D87  2D8F               	goto	l1075
 16402     0D88                     u11360:
 16403     0D88                     l14087:
 16404     0D88  0330               	decf	getAngleEn@angleDir3,w
 16405     0D89  1D03               	btfss	3,2
 16406     0D8A  2D8C               	goto	u11371
 16407     0D8B  2D8D               	goto	u11370
 16408     0D8C                     u11371:
 16409     0D8C  2D8F               	goto	l1075
 16410     0D8D                     u11370:
 16411     0D8D                     l14089:
 16412                           
 16413                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1877:     {;mcc_genera
      +                          ted_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 1879:         return 3;
 16414     0D8D  3003               	movlw	3
 16415     0D8E  2D90               	goto	l1072
 16416     0D8F                     l1075:
 16417     0D8F  2D69               	goto	l14059
 16418     0D90                     l1072:
 16419     0D90  0008               	return
 16420     0D91                     __end_of_getAngleEn:
 16421                           
 16422                           	psect	text21
 16423     1421                     __ptext21:	
 16424 ;; *************** function _bitRead *****************
 16425 ;; Defined at:
 16426 ;;		line 2477 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 16427 ;; Parameters:    Size  Location     Type
 16428 ;;  reg             2    1[COMMON] PTR unsigned short 
 16429 ;;		 -> RAM(8192), 
 16430 ;;  position        1    3[COMMON] unsigned char 
 16431 ;; Auto vars:     Size  Location     Type
 16432 ;;  mask            2    8[COMMON] unsigned short 
 16433 ;; Return value:  Size  Location     Type
 16434 ;;                  1    wreg      unsigned char 
 16435 ;; Registers used:
 16436 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16437 ;; Tracked objects:
 16438 ;;		On entry : 0/0
 16439 ;;		On exit  : 0/0
 16440 ;;		Unchanged: 0/0
 16441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16442 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16443 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16444 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16445 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16446 ;;Total ram usage:        9 bytes
 16447 ;; Hardware stack levels used: 1
 16448 ;; Hardware stack levels required when called: 4
 16449 ;; This function calls:
 16450 ;;		Nothing
 16451 ;; This function is called by:
 16452 ;;		_getLowPower
 16453 ;;		_getOperatingMode
 16454 ;;		_getMagneticChannel
 16455 ;;		_getAngleEn
 16456 ;;		_getTemperatureEN
 16457 ;;		_getError
 16458 ;;		_getCRCMode
 16459 ;;		_getMagTemp
 16460 ;;		_getConvAvg
 16461 ;;		_getReadMode
 16462 ;;		_getIntThreshold
 16463 ;;		_getGlitchFiler
 16464 ;;		_getTriggerMode
 16465 ;;		_getSleeptime
 16466 ;;		_getMagDir
 16467 ;;		_getMagnitudeChannelSelect
 16468 ;;		_getXYAxisRange
 16469 ;;		_getZAxisRange
 16470 ;;		_getInterruptResult
 16471 ;;		_getThresholdEn
 16472 ;;		_getIntPinState
 16473 ;;		_getInterruptMode
 16474 ;;		_getMaskInt
 16475 ;;		_getPOR
 16476 ;;		_getDiagStatus
 16477 ;;		_getResultStatus
 16478 ;;		_getDeviceID
 16479 ;;		_getInterruptPinStatus
 16480 ;; This function uses a non-reentrant model
 16481 ;;
 16482                           
 16483     1421                     _bitRead:	
 16484                           ;psect for function _bitRead
 16485                           
 16486     1421                     l13333:	
 16487                           ;incstack = 0
 16488                           ; Regs used in _bitRead: [wreg+fsr1l+fsr1h+status,2+status,0]
 16489                           
 16490                           
 16491                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2478:     uint16_t mas
      +                          k = (1 << position) & *reg;
 16492     1421  0871               	movf	bitRead@reg,w
 16493     1422  0086               	movwf	6
 16494     1423  0872               	movf	bitRead@reg+1,w
 16495     1424  0087               	movwf	7
 16496     1425  3F40               	moviw [0]fsr1
 16497     1426  00F4               	movwf	??_bitRead
 16498     1427  3F41               	moviw [1]fsr1
 16499     1428  00F5               	movwf	??_bitRead+1
 16500     1429  3001               	movlw	1
 16501     142A  00F6               	movwf	??_bitRead+2
 16502     142B  3000               	movlw	0
 16503     142C  00F7               	movwf	??_bitRead+3
 16504     142D  0A73               	incf	bitRead@position,w
 16505     142E  2C31               	goto	u10174
 16506     142F                     u10175:
 16507     142F  35F6               	lslf	??_bitRead+2,f
 16508     1430  0DF7               	rlf	??_bitRead+3,f
 16509     1431                     u10174:
 16510     1431  0B89               	decfsz	9,f
 16511     1432  2C2F               	goto	u10175
 16512     1433  0874               	movf	??_bitRead,w
 16513     1434  0576               	andwf	??_bitRead+2,w
 16514     1435  00F8               	movwf	bitRead@mask
 16515     1436  0875               	movf	??_bitRead+1,w
 16516     1437  0577               	andwf	??_bitRead+3,w
 16517     1438  00F9               	movwf	bitRead@mask+1
 16518     1439                     l13335:
 16519                           
 16520                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2480:     if (mask == 
      +                          0) {
 16521     1439  0878               	movf	bitRead@mask,w
 16522     143A  0479               	iorwf	bitRead@mask+1,w
 16523     143B  1D03               	btfss	3,2
 16524     143C  2C3E               	goto	u10181
 16525     143D  2C3F               	goto	u10180
 16526     143E                     u10181:
 16527     143E  2C41               	goto	l13343
 16528     143F                     u10180:
 16529     143F                     l13337:
 16530                           
 16531                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2481:         return 0
      +                          ;
 16532     143F  3000               	movlw	0
 16533     1440  2C42               	goto	l1197
 16534     1441                     l13343:
 16535                           
 16536                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 2483:         return 1
      +                          ;
 16537     1441  3001               	movlw	1
 16538     1442                     l1197:
 16539     1442  0008               	return
 16540     1443                     __end_of_bitRead:
 16541                           
 16542                           	psect	text22
 16543     1000                     __ptext22:	
 16544 ;; *************** function _TMR0_HasOverflowOccured *****************
 16545 ;; Defined at:
 16546 ;;		line 127 in file "mcc_generated_files/tmr0.c"
 16547 ;; Parameters:    Size  Location     Type
 16548 ;;		None
 16549 ;; Auto vars:     Size  Location     Type
 16550 ;;		None
 16551 ;; Return value:  Size  Location     Type
 16552 ;;                  1    wreg      _Bool 
 16553 ;; Registers used:
 16554 ;;		wreg, status,2, status,0
 16555 ;; Tracked objects:
 16556 ;;		On entry : 0/0
 16557 ;;		On exit  : 0/0
 16558 ;;		Unchanged: 0/0
 16559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16564 ;;Total ram usage:        0 bytes
 16565 ;; Hardware stack levels used: 1
 16566 ;; Hardware stack levels required when called: 4
 16567 ;; This function calls:
 16568 ;;		Nothing
 16569 ;; This function is called by:
 16570 ;;		_main
 16571 ;; This function uses a non-reentrant model
 16572 ;;
 16573                           
 16574     1000                     _TMR0_HasOverflowOccured:	
 16575                           ;psect for function _TMR0_HasOverflowOccured
 16576                           
 16577     1000                     l14575:	
 16578                           ;incstack = 0
 16579                           ; Regs used in _TMR0_HasOverflowOccured: [wreg+status,2+status,0]
 16580                           
 16581                           
 16582                           ;mcc_generated_files/tmr0.c: 130:     return(PIR0bits.TMR0IF);
 16583     1000  014E               	movlb	14	; select bank14
 16584     1001  0E0C               	swapf	12,w	;volatile
 16585     1002  0C89               	rrf	9,f
 16586     1003  3901               	andlw	1
 16587     1004                     l2117:
 16588     1004  0008               	return
 16589     1005                     __end_of_TMR0_HasOverflowOccured:
 16590                           
 16591                           	psect	text23
 16592     123B                     __ptext23:	
 16593 ;; *************** function _SYSTEM_Initialize *****************
 16594 ;; Defined at:
 16595 ;;		line 50 in file "mcc_generated_files/mcc.c"
 16596 ;; Parameters:    Size  Location     Type
 16597 ;;		None
 16598 ;; Auto vars:     Size  Location     Type
 16599 ;;		None
 16600 ;; Return value:  Size  Location     Type
 16601 ;;                  1    wreg      void 
 16602 ;; Registers used:
 16603 ;;		wreg, status,2, status,0, pclath, cstack
 16604 ;; Tracked objects:
 16605 ;;		On entry : 0/0
 16606 ;;		On exit  : 0/0
 16607 ;;		Unchanged: 0/0
 16608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16613 ;;Total ram usage:        0 bytes
 16614 ;; Hardware stack levels used: 1
 16615 ;; Hardware stack levels required when called: 6
 16616 ;; This function calls:
 16617 ;;		_EUSART1_Initialize
 16618 ;;		_EUSART2_Initialize
 16619 ;;		_I2C1_Initialize
 16620 ;;		_OSCILLATOR_Initialize
 16621 ;;		_PIN_MANAGER_Initialize
 16622 ;;		_PMD_Initialize
 16623 ;;		_TMR0_Initialize
 16624 ;; This function is called by:
 16625 ;;		_main
 16626 ;; This function uses a non-reentrant model
 16627 ;;
 16628                           
 16629     123B                     _SYSTEM_Initialize:	
 16630                           ;psect for function _SYSTEM_Initialize
 16631                           
 16632     123B                     l14561:	
 16633                           ;incstack = 0
 16634                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16635                           
 16636                           
 16637                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 16638     123B  3190  2019  3192   	fcall	_PMD_Initialize
 16639     123E                     l14563:
 16640                           
 16641                           ;mcc_generated_files/mcc.c: 53:     I2C1_Initialize();
 16642     123E  319F  27E3  3192   	fcall	_I2C1_Initialize
 16643     1241                     l14565:
 16644                           
 16645                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 16646     1241  318B  2315  3192   	fcall	_PIN_MANAGER_Initialize
 16647     1244                     l14567:
 16648                           
 16649                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 16650     1244  3190  200F  3192   	fcall	_OSCILLATOR_Initialize
 16651     1247                     l14569:
 16652                           
 16653                           ;mcc_generated_files/mcc.c: 56:     TMR0_Initialize();
 16654     1247  3191  21BD  3192   	fcall	_TMR0_Initialize
 16655     124A                     l14571:
 16656                           
 16657                           ;mcc_generated_files/mcc.c: 57:     EUSART1_Initialize();
 16658     124A  3189  213F  3192   	fcall	_EUSART1_Initialize
 16659     124D                     l14573:
 16660                           
 16661                           ;mcc_generated_files/mcc.c: 58:     EUSART2_Initialize();
 16662     124D  3189  217D  3192   	fcall	_EUSART2_Initialize
 16663     1250                     l1977:
 16664     1250  0008               	return
 16665     1251                     __end_of_SYSTEM_Initialize:
 16666                           
 16667                           	psect	text24
 16668     11BD                     __ptext24:	
 16669 ;; *************** function _TMR0_Initialize *****************
 16670 ;; Defined at:
 16671 ;;		line 65 in file "mcc_generated_files/tmr0.c"
 16672 ;; Parameters:    Size  Location     Type
 16673 ;;		None
 16674 ;; Auto vars:     Size  Location     Type
 16675 ;;		None
 16676 ;; Return value:  Size  Location     Type
 16677 ;;                  1    wreg      void 
 16678 ;; Registers used:
 16679 ;;		wreg
 16680 ;; Tracked objects:
 16681 ;;		On entry : 0/0
 16682 ;;		On exit  : 0/0
 16683 ;;		Unchanged: 0/0
 16684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16689 ;;Total ram usage:        0 bytes
 16690 ;; Hardware stack levels used: 1
 16691 ;; Hardware stack levels required when called: 4
 16692 ;; This function calls:
 16693 ;;		Nothing
 16694 ;; This function is called by:
 16695 ;;		_SYSTEM_Initialize
 16696 ;; This function uses a non-reentrant model
 16697 ;;
 16698                           
 16699     11BD                     _TMR0_Initialize:	
 16700                           ;psect for function _TMR0_Initialize
 16701                           
 16702     11BD                     l14273:	
 16703                           ;incstack = 0
 16704                           ; Regs used in _TMR0_Initialize: [wreg]
 16705                           
 16706                           
 16707                           ;mcc_generated_files/tmr0.c: 70:     T0CON1 = 0x47;
 16708     11BD  3047               	movlw	71
 16709     11BE  014B               	movlb	11	; select bank11
 16710     11BF  009F               	movwf	31	;volatile
 16711                           
 16712                           ;mcc_generated_files/tmr0.c: 73:     TMR0H = 0x0B;
 16713     11C0  300B               	movlw	11
 16714     11C1  009D               	movwf	29	;volatile
 16715                           
 16716                           ;mcc_generated_files/tmr0.c: 76:     TMR0L = 0xDC;
 16717     11C2  30DC               	movlw	220
 16718     11C3  009C               	movwf	28	;volatile
 16719                           
 16720                           ;mcc_generated_files/tmr0.c: 79:     timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
 16721     11C4  081D               	movf	29,w	;volatile
 16722     11C5  0140               	movlb	0	; select bank0
 16723     11C6  00CB               	movwf	_timer0ReloadVal16bit+1	;volatile
 16724     11C7  014B               	movlb	11	; select bank11
 16725     11C8  081C               	movf	28,w	;volatile
 16726     11C9  0140               	movlb	0	; select bank0
 16727     11CA  00CA               	movwf	_timer0ReloadVal16bit	;volatile
 16728     11CB                     l14275:
 16729                           
 16730                           ;mcc_generated_files/tmr0.c: 82:     PIR0bits.TMR0IF = 0;
 16731     11CB  014E               	movlb	14	; select bank14
 16732     11CC  128C               	bcf	12,5	;volatile
 16733                           
 16734                           ;mcc_generated_files/tmr0.c: 85:     T0CON0 = 0x90;
 16735     11CD  3090               	movlw	144
 16736     11CE  014B               	movlb	11	; select bank11
 16737     11CF  009E               	movwf	30	;volatile
 16738     11D0                     l2099:
 16739     11D0  0008               	return
 16740     11D1                     __end_of_TMR0_Initialize:
 16741                           
 16742                           	psect	text25
 16743     1019                     __ptext25:	
 16744 ;; *************** function _PMD_Initialize *****************
 16745 ;; Defined at:
 16746 ;;		line 77 in file "mcc_generated_files/mcc.c"
 16747 ;; Parameters:    Size  Location     Type
 16748 ;;		None
 16749 ;; Auto vars:     Size  Location     Type
 16750 ;;		None
 16751 ;; Return value:  Size  Location     Type
 16752 ;;                  1    wreg      void 
 16753 ;; Registers used:
 16754 ;;		status,2
 16755 ;; Tracked objects:
 16756 ;;		On entry : 0/0
 16757 ;;		On exit  : 0/0
 16758 ;;		Unchanged: 0/0
 16759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16764 ;;Total ram usage:        0 bytes
 16765 ;; Hardware stack levels used: 1
 16766 ;; Hardware stack levels required when called: 4
 16767 ;; This function calls:
 16768 ;;		Nothing
 16769 ;; This function is called by:
 16770 ;;		_SYSTEM_Initialize
 16771 ;; This function uses a non-reentrant model
 16772 ;;
 16773                           
 16774     1019                     _PMD_Initialize:	
 16775                           ;psect for function _PMD_Initialize
 16776                           
 16777     1019                     l14187:	
 16778                           ;incstack = 0
 16779                           ; Regs used in _PMD_Initialize: [status,2]
 16780                           
 16781                           
 16782                           ;mcc_generated_files/mcc.c: 80:     PMD0 = 0x00;
 16783     1019  014F               	movlb	15	; select bank15
 16784     101A  0196               	clrf	22	;volatile
 16785                           
 16786                           ;mcc_generated_files/mcc.c: 82:     PMD1 = 0x00;
 16787     101B  0197               	clrf	23	;volatile
 16788                           
 16789                           ;mcc_generated_files/mcc.c: 84:     PMD2 = 0x00;
 16790     101C  0198               	clrf	24	;volatile
 16791                           
 16792                           ;mcc_generated_files/mcc.c: 86:     PMD3 = 0x00;
 16793     101D  0199               	clrf	25	;volatile
 16794                           
 16795                           ;mcc_generated_files/mcc.c: 88:     PMD4 = 0x00;
 16796     101E  019A               	clrf	26	;volatile
 16797                           
 16798                           ;mcc_generated_files/mcc.c: 90:     PMD5 = 0x00;
 16799     101F  019B               	clrf	27	;volatile
 16800                           
 16801                           ;mcc_generated_files/mcc.c: 92:     PMD6 = 0x00;
 16802     1020  019C               	clrf	28	;volatile
 16803                           
 16804                           ;mcc_generated_files/mcc.c: 94:     PMD7 = 0x00;
 16805     1021  019D               	clrf	29	;volatile
 16806     1022                     l1983:
 16807     1022  0008               	return
 16808     1023                     __end_of_PMD_Initialize:
 16809                           
 16810                           	psect	text26
 16811     0B15                     __ptext26:	
 16812 ;; *************** function _PIN_MANAGER_Initialize *****************
 16813 ;; Defined at:
 16814 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 16815 ;; Parameters:    Size  Location     Type
 16816 ;;		None
 16817 ;; Auto vars:     Size  Location     Type
 16818 ;;		None
 16819 ;; Return value:  Size  Location     Type
 16820 ;;                  1    wreg      void 
 16821 ;; Registers used:
 16822 ;;		wreg, status,2, status,0, pclath, cstack
 16823 ;; Tracked objects:
 16824 ;;		On entry : 0/0
 16825 ;;		On exit  : 0/0
 16826 ;;		Unchanged: 0/0
 16827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16832 ;;Total ram usage:        0 bytes
 16833 ;; Hardware stack levels used: 1
 16834 ;; Hardware stack levels required when called: 5
 16835 ;; This function calls:
 16836 ;;		_IOCAF6_SetInterruptHandler
 16837 ;; This function is called by:
 16838 ;;		_SYSTEM_Initialize
 16839 ;; This function uses a non-reentrant model
 16840 ;;
 16841                           
 16842     0B15                     _PIN_MANAGER_Initialize:	
 16843                           ;psect for function _PIN_MANAGER_Initialize
 16844                           
 16845     0B15                     l14197:	
 16846                           ;incstack = 0
 16847                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16848                           
 16849                           
 16850                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x00;
 16851     0B15  0140               	movlb	0	; select bank0
 16852     0B16  019C               	clrf	28	;volatile
 16853     0B17                     l14199:
 16854                           
 16855                           ;mcc_generated_files/pin_manager.c: 63:     LATA = 0x31;
 16856     0B17  3031               	movlw	49
 16857     0B18  0098               	movwf	24	;volatile
 16858     0B19                     l14201:
 16859                           
 16860                           ;mcc_generated_files/pin_manager.c: 64:     LATB = 0x00;
 16861     0B19  0199               	clrf	25	;volatile
 16862                           
 16863                           ;mcc_generated_files/pin_manager.c: 65:     LATC = 0xC1;
 16864     0B1A  30C1               	movlw	193
 16865     0B1B  009A               	movwf	26	;volatile
 16866                           
 16867                           ;mcc_generated_files/pin_manager.c: 70:     TRISE = 0x08;
 16868     0B1C  3008               	movlw	8
 16869     0B1D  0096               	movwf	22	;volatile
 16870                           
 16871                           ;mcc_generated_files/pin_manager.c: 71:     TRISA = 0xDE;
 16872     0B1E  30DE               	movlw	222
 16873     0B1F  0092               	movwf	18	;volatile
 16874                           
 16875                           ;mcc_generated_files/pin_manager.c: 72:     TRISB = 0xEF;
 16876     0B20  30EF               	movlw	239
 16877     0B21  0093               	movwf	19	;volatile
 16878                           
 16879                           ;mcc_generated_files/pin_manager.c: 73:     TRISC = 0x25;
 16880     0B22  3025               	movlw	37
 16881     0B23  0094               	movwf	20	;volatile
 16882     0B24                     l14203:
 16883                           
 16884                           ;mcc_generated_files/pin_manager.c: 78:     ANSELC = 0x00;
 16885     0B24  017E               	movlb	62	; select bank62
 16886     0B25  01CE               	clrf	78	;volatile
 16887     0B26                     l14205:
 16888                           
 16889                           ;mcc_generated_files/pin_manager.c: 79:     ANSELB = 0xC9;
 16890     0B26  30C9               	movlw	201
 16891     0B27  00C3               	movwf	67	;volatile
 16892     0B28                     l14207:
 16893                           
 16894                           ;mcc_generated_files/pin_manager.c: 80:     ANSELA = 0x0E;
 16895     0B28  300E               	movlw	14
 16896     0B29  00B8               	movwf	56	;volatile
 16897     0B2A                     l14209:
 16898                           
 16899                           ;mcc_generated_files/pin_manager.c: 85:     WPUE = 0x00;
 16900     0B2A  01E5               	clrf	101	;volatile
 16901     0B2B                     l14211:
 16902                           
 16903                           ;mcc_generated_files/pin_manager.c: 86:     WPUB = 0x00;
 16904     0B2B  01C4               	clrf	68	;volatile
 16905     0B2C                     l14213:
 16906                           
 16907                           ;mcc_generated_files/pin_manager.c: 87:     WPUA = 0x00;
 16908     0B2C  01B9               	clrf	57	;volatile
 16909     0B2D                     l14215:
 16910                           
 16911                           ;mcc_generated_files/pin_manager.c: 88:     WPUC = 0x00;
 16912     0B2D  01CF               	clrf	79	;volatile
 16913     0B2E                     l14217:
 16914                           
 16915                           ;mcc_generated_files/pin_manager.c: 93:     ODCONE = 0x00;
 16916     0B2E  01E6               	clrf	102	;volatile
 16917     0B2F                     l14219:
 16918                           
 16919                           ;mcc_generated_files/pin_manager.c: 94:     ODCONA = 0x00;
 16920     0B2F  01BA               	clrf	58	;volatile
 16921     0B30                     l14221:
 16922                           
 16923                           ;mcc_generated_files/pin_manager.c: 95:     ODCONB = 0x00;
 16924     0B30  01C5               	clrf	69	;volatile
 16925     0B31                     l14223:
 16926                           
 16927                           ;mcc_generated_files/pin_manager.c: 96:     ODCONC = 0x00;
 16928     0B31  01D0               	clrf	80	;volatile
 16929     0B32                     l14225:
 16930                           
 16931                           ;mcc_generated_files/pin_manager.c: 101:     SLRCONA = 0xFF;
 16932     0B32  30FF               	movlw	255
 16933     0B33  00BB               	movwf	59	;volatile
 16934     0B34                     l14227:
 16935                           
 16936                           ;mcc_generated_files/pin_manager.c: 102:     SLRCONB = 0xFF;
 16937     0B34  30FF               	movlw	255
 16938     0B35  00C6               	movwf	70	;volatile
 16939     0B36                     l14229:
 16940                           
 16941                           ;mcc_generated_files/pin_manager.c: 103:     SLRCONC = 0xFF;
 16942     0B36  30FF               	movlw	255
 16943     0B37  00D1               	movwf	81	;volatile
 16944     0B38                     l14231:
 16945                           
 16946                           ;mcc_generated_files/pin_manager.c: 108:     INLVLA = 0x3F;
 16947     0B38  303F               	movlw	63
 16948     0B39  00BC               	movwf	60	;volatile
 16949     0B3A                     l14233:
 16950                           
 16951                           ;mcc_generated_files/pin_manager.c: 109:     INLVLB = 0x3F;
 16952     0B3A  303F               	movlw	63
 16953     0B3B  00C7               	movwf	71	;volatile
 16954     0B3C                     l14235:
 16955                           
 16956                           ;mcc_generated_files/pin_manager.c: 110:     INLVLC = 0x3F;
 16957     0B3C  303F               	movlw	63
 16958     0B3D  00D2               	movwf	82	;volatile
 16959     0B3E                     l14237:
 16960                           
 16961                           ;mcc_generated_files/pin_manager.c: 117:     IOCAFbits.IOCAF6 = 0;
 16962     0B3E  133F               	bcf	63,6	;volatile
 16963     0B3F                     l14239:
 16964                           
 16965                           ;mcc_generated_files/pin_manager.c: 119:     IOCANbits.IOCAN6 = 0;
 16966     0B3F  133E               	bcf	62,6	;volatile
 16967     0B40                     l14241:
 16968                           
 16969                           ;mcc_generated_files/pin_manager.c: 121:     IOCAPbits.IOCAP6 = 1;
 16970     0B40  173D               	bsf	61,6	;volatile
 16971     0B41                     l14243:
 16972                           
 16973                           ;mcc_generated_files/pin_manager.c: 126:     IOCAF6_SetInterruptHandler(IOCAF6_DefaultIn
      +                          terruptHandler);
 16974     0B41  30FF               	movlw	low _IOCAF6_DefaultInterruptHandler
 16975     0B42  00F1               	movwf	IOCAF6_SetInterruptHandler@InterruptHandler
 16976     0B43  3007               	movlw	high _IOCAF6_DefaultInterruptHandler
 16977     0B44  00F2               	movwf	IOCAF6_SetInterruptHandler@InterruptHandler+1
 16978     0B45  319F  278F  318B   	fcall	_IOCAF6_SetInterruptHandler
 16979     0B48                     l14245:
 16980                           
 16981                           ;mcc_generated_files/pin_manager.c: 129:     PIE0bits.IOCIE = 1;
 16982     0B48  014E               	movlb	14	; select bank14
 16983     0B49  1616               	bsf	22,4	;volatile
 16984     0B4A                     l14247:
 16985                           
 16986                           ;mcc_generated_files/pin_manager.c: 132:     SSP1CLKPPS = 0x09;
 16987     0B4A  3009               	movlw	9
 16988     0B4B  017D               	movlb	61	; select bank61
 16989     0B4C  00C5               	movwf	69	;volatile
 16990     0B4D                     l14249:
 16991                           
 16992                           ;mcc_generated_files/pin_manager.c: 133:     RB1PPS = 0x13;
 16993     0B4D  3013               	movlw	19
 16994     0B4E  017E               	movlb	62	; select bank62
 16995     0B4F  0099               	movwf	25	;volatile
 16996     0B50                     l14251:
 16997                           
 16998                           ;mcc_generated_files/pin_manager.c: 134:     RB2PPS = 0x14;
 16999     0B50  3014               	movlw	20
 17000     0B51  009A               	movwf	26	;volatile
 17001     0B52                     l14253:
 17002                           
 17003                           ;mcc_generated_files/pin_manager.c: 135:     RC4PPS = 0x25;
 17004     0B52  3025               	movlw	37
 17005     0B53  00A4               	movwf	36	;volatile
 17006     0B54                     l14255:
 17007                           
 17008                           ;mcc_generated_files/pin_manager.c: 136:     RB4PPS = 0x0F;
 17009     0B54  300F               	movlw	15
 17010     0B55  009C               	movwf	28	;volatile
 17011     0B56                     l14257:
 17012                           
 17013                           ;mcc_generated_files/pin_manager.c: 137:     RX2DTPPS = 0x15;
 17014     0B56  3015               	movlw	21
 17015     0B57  017D               	movlb	61	; select bank61
 17016     0B58  00CD               	movwf	77	;volatile
 17017     0B59                     l14259:
 17018                           
 17019                           ;mcc_generated_files/pin_manager.c: 138:     SSP1DATPPS = 0x0A;
 17020     0B59  300A               	movlw	10
 17021     0B5A  00C6               	movwf	70	;volatile
 17022     0B5B                     l14261:
 17023                           
 17024                           ;mcc_generated_files/pin_manager.c: 139:     RX1DTPPS = 0x0D;
 17025     0B5B  300D               	movlw	13
 17026     0B5C  00CB               	movwf	75	;volatile
 17027     0B5D                     l2068:
 17028     0B5D  0008               	return
 17029     0B5E                     __end_of_PIN_MANAGER_Initialize:
 17030                           
 17031                           	psect	text27
 17032     1F8F                     __ptext27:	
 17033 ;; *************** function _IOCAF6_SetInterruptHandler *****************
 17034 ;; Defined at:
 17035 ;;		line 169 in file "mcc_generated_files/pin_manager.c"
 17036 ;; Parameters:    Size  Location     Type
 17037 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
 17038 ;;		 -> IOCAF6_DefaultInterruptHandler(1), 
 17039 ;; Auto vars:     Size  Location     Type
 17040 ;;		None
 17041 ;; Return value:  Size  Location     Type
 17042 ;;                  1    wreg      void 
 17043 ;; Registers used:
 17044 ;;		wreg
 17045 ;; Tracked objects:
 17046 ;;		On entry : 0/0
 17047 ;;		On exit  : 0/0
 17048 ;;		Unchanged: 0/0
 17049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17050 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17053 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17054 ;;Total ram usage:        2 bytes
 17055 ;; Hardware stack levels used: 1
 17056 ;; Hardware stack levels required when called: 4
 17057 ;; This function calls:
 17058 ;;		Nothing
 17059 ;; This function is called by:
 17060 ;;		_PIN_MANAGER_Initialize
 17061 ;; This function uses a non-reentrant model
 17062 ;;
 17063                           
 17064     1F8F                     _IOCAF6_SetInterruptHandler:	
 17065                           ;psect for function _IOCAF6_SetInterruptHandler
 17066                           
 17067     1F8F                     l13525:	
 17068                           ;incstack = 0
 17069                           ; Regs used in _IOCAF6_SetInterruptHandler: [wreg]
 17070                           
 17071                           
 17072                           ;mcc_generated_files/pin_manager.c: 170:     IOCAF6_InterruptHandler = InterruptHandler;
 17073     1F8F  0872               	movf	IOCAF6_SetInterruptHandler@InterruptHandler+1,w
 17074     1F90  0141               	movlb	1	; select bank1
 17075     1F91  00EB               	movwf	(_IOCAF6_InterruptHandler+1)^(0+128)
 17076     1F92  0871               	movf	IOCAF6_SetInterruptHandler@InterruptHandler,w
 17077     1F93  00EA               	movwf	_IOCAF6_InterruptHandler^(0+128)
 17078     1F94                     l2079:
 17079     1F94  0008               	return
 17080     1F95                     __end_of_IOCAF6_SetInterruptHandler:
 17081                           
 17082                           	psect	text28
 17083     100F                     __ptext28:	
 17084 ;; *************** function _OSCILLATOR_Initialize *****************
 17085 ;; Defined at:
 17086 ;;		line 61 in file "mcc_generated_files/mcc.c"
 17087 ;; Parameters:    Size  Location     Type
 17088 ;;		None
 17089 ;; Auto vars:     Size  Location     Type
 17090 ;;		None
 17091 ;; Return value:  Size  Location     Type
 17092 ;;                  1    wreg      void 
 17093 ;; Registers used:
 17094 ;;		wreg, status,2
 17095 ;; Tracked objects:
 17096 ;;		On entry : 0/0
 17097 ;;		On exit  : 0/0
 17098 ;;		Unchanged: 0/0
 17099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17104 ;;Total ram usage:        0 bytes
 17105 ;; Hardware stack levels used: 1
 17106 ;; Hardware stack levels required when called: 4
 17107 ;; This function calls:
 17108 ;;		Nothing
 17109 ;; This function is called by:
 17110 ;;		_SYSTEM_Initialize
 17111 ;; This function uses a non-reentrant model
 17112 ;;
 17113                           
 17114     100F                     _OSCILLATOR_Initialize:	
 17115                           ;psect for function _OSCILLATOR_Initialize
 17116                           
 17117     100F                     l14263:	
 17118                           ;incstack = 0
 17119                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 17120                           
 17121                           
 17122                           ;mcc_generated_files/mcc.c: 64:     OSCCON1 = 0x60;
 17123     100F  3060               	movlw	96
 17124     1010  0151               	movlb	17	; select bank17
 17125     1011  008D               	movwf	13	;volatile
 17126     1012                     l14265:
 17127                           
 17128                           ;mcc_generated_files/mcc.c: 66:     OSCCON3 = 0x00;
 17129     1012  018F               	clrf	15	;volatile
 17130     1013                     l14267:
 17131                           
 17132                           ;mcc_generated_files/mcc.c: 68:     OSCEN = 0x00;
 17133     1013  0191               	clrf	17	;volatile
 17134                           
 17135                           ;mcc_generated_files/mcc.c: 70:     OSCFRQ = 0x06;
 17136     1014  3006               	movlw	6
 17137     1015  0093               	movwf	19	;volatile
 17138     1016                     l14269:
 17139                           
 17140                           ;mcc_generated_files/mcc.c: 72:     OSCSTAT = 0x00;
 17141     1016  0190               	clrf	16	;volatile
 17142     1017                     l14271:
 17143                           
 17144                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
 17145     1017  0192               	clrf	18	;volatile
 17146     1018                     l1980:
 17147     1018  0008               	return
 17148     1019                     __end_of_OSCILLATOR_Initialize:
 17149                           
 17150                           	psect	text29
 17151     1FE3                     __ptext29:	
 17152 ;; *************** function _I2C1_Initialize *****************
 17153 ;; Defined at:
 17154 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 17155 ;; Parameters:    Size  Location     Type
 17156 ;;		None
 17157 ;; Auto vars:     Size  Location     Type
 17158 ;;		None
 17159 ;; Return value:  Size  Location     Type
 17160 ;;                  1    wreg      void 
 17161 ;; Registers used:
 17162 ;;		wreg, status,2
 17163 ;; Tracked objects:
 17164 ;;		On entry : 0/0
 17165 ;;		On exit  : 0/0
 17166 ;;		Unchanged: 0/0
 17167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17172 ;;Total ram usage:        0 bytes
 17173 ;; Hardware stack levels used: 1
 17174 ;; Hardware stack levels required when called: 4
 17175 ;; This function calls:
 17176 ;;		Nothing
 17177 ;; This function is called by:
 17178 ;;		_SYSTEM_Initialize
 17179 ;; This function uses a non-reentrant model
 17180 ;;
 17181                           
 17182     1FE3                     _I2C1_Initialize:	
 17183                           ;psect for function _I2C1_Initialize
 17184                           
 17185     1FE3                     l14189:	
 17186                           ;incstack = 0
 17187                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 17188                           
 17189                           
 17190                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x00;
 17191     1FE3  0143               	movlb	3	; select bank3
 17192     1FE4  018F               	clrf	15	;volatile
 17193     1FE5                     l14191:
 17194                           
 17195                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 17196     1FE5  3008               	movlw	8
 17197     1FE6  0090               	movwf	16	;volatile
 17198     1FE7                     l14193:
 17199                           
 17200                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 17201     1FE7  0191               	clrf	17	;volatile
 17202                           
 17203                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x4F;
 17204     1FE8  304F               	movlw	79
 17205     1FE9  008D               	movwf	13	;volatile
 17206     1FEA                     l14195:
 17207                           
 17208                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 17209     1FEA  1290               	bcf	16,5	;volatile
 17210     1FEB                     l2367:
 17211     1FEB  0008               	return
 17212     1FEC                     __end_of_I2C1_Initialize:
 17213                           
 17214                           	psect	text30
 17215     097D                     __ptext30:	
 17216 ;; *************** function _EUSART2_Initialize *****************
 17217 ;; Defined at:
 17218 ;;		line 88 in file "mcc_generated_files/eusart2.c"
 17219 ;; Parameters:    Size  Location     Type
 17220 ;;		None
 17221 ;; Auto vars:     Size  Location     Type
 17222 ;;		None
 17223 ;; Return value:  Size  Location     Type
 17224 ;;                  1    wreg      void 
 17225 ;; Registers used:
 17226 ;;		wreg, status,2, status,0, pclath, cstack
 17227 ;; Tracked objects:
 17228 ;;		On entry : 0/0
 17229 ;;		On exit  : 0/0
 17230 ;;		Unchanged: 0/0
 17231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17236 ;;Total ram usage:        0 bytes
 17237 ;; Hardware stack levels used: 1
 17238 ;; Hardware stack levels required when called: 5
 17239 ;; This function calls:
 17240 ;;		_EUSART2_SetErrorHandler
 17241 ;;		_EUSART2_SetFramingErrorHandler
 17242 ;;		_EUSART2_SetOverrunErrorHandler
 17243 ;;		_EUSART2_SetRxInterruptHandler
 17244 ;;		_EUSART2_SetTxInterruptHandler
 17245 ;; This function is called by:
 17246 ;;		_SYSTEM_Initialize
 17247 ;; This function uses a non-reentrant model
 17248 ;;
 17249                           
 17250     097D                     _EUSART2_Initialize:	
 17251                           ;psect for function _EUSART2_Initialize
 17252                           
 17253     097D                     l14119:	
 17254                           ;incstack = 0
 17255                           ; Regs used in _EUSART2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17256                           
 17257                           
 17258                           ;mcc_generated_files/eusart2.c: 91:     PIE3bits.RC2IE = 0;
 17259     097D  014E               	movlb	14	; select bank14
 17260     097E  1399               	bcf	25,7	;volatile
 17261     097F                     l14121:
 17262                           
 17263                           ;mcc_generated_files/eusart2.c: 92:     EUSART2_SetRxInterruptHandler(EUSART2_Receive_IS
      +                          R);
 17264     097F  304F               	movlw	low _EUSART2_Receive_ISR
 17265     0980  00F1               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler
 17266     0981  3008               	movlw	high _EUSART2_Receive_ISR
 17267     0982  00F2               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler+1
 17268     0983  319F  2783  3189   	fcall	_EUSART2_SetRxInterruptHandler
 17269     0986                     l14123:
 17270                           
 17271                           ;mcc_generated_files/eusart2.c: 93:     PIE3bits.TX2IE = 0;
 17272     0986  014E               	movlb	14	; select bank14
 17273     0987  1319               	bcf	25,6	;volatile
 17274                           
 17275                           ;mcc_generated_files/eusart2.c: 94:     EUSART2_SetTxInterruptHandler(EUSART2_Transmit_I
      +                          SR);
 17276     0988  30DD               	movlw	low _EUSART2_Transmit_ISR
 17277     0989  00F1               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler
 17278     098A  3013               	movlw	high _EUSART2_Transmit_ISR
 17279     098B  00F2               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler+1
 17280     098C  319F  2789  3189   	fcall	_EUSART2_SetTxInterruptHandler
 17281     098F                     l14125:
 17282                           
 17283                           ;mcc_generated_files/eusart2.c: 98:     BAUD2CON = 0x08;
 17284     098F  3008               	movlw	8
 17285     0990  0154               	movlb	20	; select bank20
 17286     0991  009F               	movwf	31	;volatile
 17287     0992                     l14127:
 17288                           
 17289                           ;mcc_generated_files/eusart2.c: 101:     RC2STA = 0x90;
 17290     0992  3090               	movlw	144
 17291     0993  009D               	movwf	29	;volatile
 17292     0994                     l14129:
 17293                           
 17294                           ;mcc_generated_files/eusart2.c: 104:     TX2STA = 0x24;
 17295     0994  3024               	movlw	36
 17296     0995  009E               	movwf	30	;volatile
 17297     0996                     l14131:
 17298                           
 17299                           ;mcc_generated_files/eusart2.c: 107:     SP2BRGL = 0x40;
 17300     0996  3040               	movlw	64
 17301     0997  009B               	movwf	27	;volatile
 17302     0998                     l14133:
 17303                           
 17304                           ;mcc_generated_files/eusart2.c: 110:     SP2BRGH = 0x03;
 17305     0998  3003               	movlw	3
 17306     0999  009C               	movwf	28	;volatile
 17307     099A                     l14135:
 17308                           
 17309                           ;mcc_generated_files/eusart2.c: 113:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultF
      +                          ramingErrorHandler);
 17310     099A  30B6               	movlw	low _EUSART2_DefaultFramingErrorHandler
 17311     099B  00F1               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler
 17312     099C  301E               	movlw	high _EUSART2_DefaultFramingErrorHandler
 17313     099D  00F2               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler+1
 17314     099E  319F  2777  3189   	fcall	_EUSART2_SetFramingErrorHandler
 17315     09A1                     l14137:
 17316                           
 17317                           ;mcc_generated_files/eusart2.c: 114:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultO
      +                          verrunErrorHandler);
 17318     09A1  30E5               	movlw	low _EUSART2_DefaultOverrunErrorHandler
 17319     09A2  00F1               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler
 17320     09A3  301E               	movlw	high _EUSART2_DefaultOverrunErrorHandler
 17321     09A4  00F2               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler+1
 17322     09A5  319F  277D  3189   	fcall	_EUSART2_SetOverrunErrorHandler
 17323     09A8                     l14139:
 17324                           
 17325                           ;mcc_generated_files/eusart2.c: 115:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHan
      +                          dler);
 17326     09A8  30E1               	movlw	low _EUSART2_DefaultErrorHandler
 17327     09A9  00F1               	movwf	EUSART2_SetErrorHandler@interruptHandler
 17328     09AA  301E               	movlw	high _EUSART2_DefaultErrorHandler
 17329     09AB  00F2               	movwf	EUSART2_SetErrorHandler@interruptHandler+1
 17330     09AC  319F  2771  3189   	fcall	_EUSART2_SetErrorHandler
 17331     09AF                     l14141:
 17332                           
 17333                           ;mcc_generated_files/eusart2.c: 117:     eusart2RxLastError.status = 0;
 17334     09AF  0140               	movlb	0	; select bank0
 17335     09B0  01DE               	clrf	_eusart2RxLastError	;volatile
 17336     09B1                     l14143:
 17337                           
 17338                           ;mcc_generated_files/eusart2.c: 120:     eusart2TxHead = 0;
 17339     09B1  01E3               	clrf	_eusart2TxHead	;volatile
 17340     09B2                     l14145:
 17341                           
 17342                           ;mcc_generated_files/eusart2.c: 121:     eusart2TxTail = 0;
 17343     09B2  01E2               	clrf	_eusart2TxTail	;volatile
 17344     09B3                     l14147:
 17345                           
 17346                           ;mcc_generated_files/eusart2.c: 122:     eusart2TxBufferRemaining = sizeof(eusart2TxBuff
      +                          er);
 17347     09B3  3008               	movlw	8
 17348     09B4  00E1               	movwf	_eusart2TxBufferRemaining	;volatile
 17349                           
 17350                           ;mcc_generated_files/eusart2.c: 124:     eusart2RxHead = 0;
 17351     09B5  01FC               	clrf	_eusart2RxHead	;volatile
 17352                           
 17353                           ;mcc_generated_files/eusart2.c: 125:     eusart2RxTail = 0;
 17354     09B6  01E0               	clrf	_eusart2RxTail	;volatile
 17355                           
 17356                           ;mcc_generated_files/eusart2.c: 126:     eusart2RxCount = 0;
 17357     09B7  01DF               	clrf	_eusart2RxCount	;volatile
 17358     09B8                     l14149:
 17359                           
 17360                           ;mcc_generated_files/eusart2.c: 129:     PIE3bits.RC2IE = 1;
 17361     09B8  014E               	movlb	14	; select bank14
 17362     09B9  1799               	bsf	25,7	;volatile
 17363     09BA                     l1676:
 17364     09BA  0008               	return
 17365     09BB                     __end_of_EUSART2_Initialize:
 17366                           
 17367                           	psect	text31
 17368     1F89                     __ptext31:	
 17369 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
 17370 ;; Defined at:
 17371 ;;		line 276 in file "mcc_generated_files/eusart2.c"
 17372 ;; Parameters:    Size  Location     Type
 17373 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17374 ;;		 -> EUSART2_Transmit_ISR(1), EUSART1_Transmit_ISR(1), 
 17375 ;; Auto vars:     Size  Location     Type
 17376 ;;		None
 17377 ;; Return value:  Size  Location     Type
 17378 ;;                  1    wreg      void 
 17379 ;; Registers used:
 17380 ;;		wreg
 17381 ;; Tracked objects:
 17382 ;;		On entry : 0/0
 17383 ;;		On exit  : 0/0
 17384 ;;		Unchanged: 0/0
 17385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17386 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17389 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17390 ;;Total ram usage:        2 bytes
 17391 ;; Hardware stack levels used: 1
 17392 ;; Hardware stack levels required when called: 4
 17393 ;; This function calls:
 17394 ;;		Nothing
 17395 ;; This function is called by:
 17396 ;;		_EUSART2_Initialize
 17397 ;; This function uses a non-reentrant model
 17398 ;;
 17399                           
 17400     1F89                     _EUSART2_SetTxInterruptHandler:	
 17401                           ;psect for function _EUSART2_SetTxInterruptHandler
 17402                           
 17403     1F89                     l13497:	
 17404                           ;incstack = 0
 17405                           ; Regs used in _EUSART2_SetTxInterruptHandler: [wreg]
 17406                           
 17407                           
 17408                           ;mcc_generated_files/eusart2.c: 277:     EUSART2_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 17409     1F89  0872               	movf	EUSART2_SetTxInterruptHandler@interruptHandler+1,w
 17410     1F8A  0141               	movlb	1	; select bank1
 17411     1F8B  00EF               	movwf	(_EUSART2_TxDefaultInterruptHandler+1)^(0+128)
 17412     1F8C  0871               	movf	EUSART2_SetTxInterruptHandler@interruptHandler,w
 17413     1F8D  00EE               	movwf	_EUSART2_TxDefaultInterruptHandler^(0+128)
 17414     1F8E                     l1742:
 17415     1F8E  0008               	return
 17416     1F8F                     __end_of_EUSART2_SetTxInterruptHandler:
 17417                           
 17418                           	psect	text32
 17419     1F83                     __ptext32:	
 17420 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
 17421 ;; Defined at:
 17422 ;;		line 280 in file "mcc_generated_files/eusart2.c"
 17423 ;; Parameters:    Size  Location     Type
 17424 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17425 ;;		 -> EUSART2_Receive_ISR(1), EUSART1_Receive_ISR(1), 
 17426 ;; Auto vars:     Size  Location     Type
 17427 ;;		None
 17428 ;; Return value:  Size  Location     Type
 17429 ;;                  1    wreg      void 
 17430 ;; Registers used:
 17431 ;;		wreg
 17432 ;; Tracked objects:
 17433 ;;		On entry : 0/0
 17434 ;;		On exit  : 0/0
 17435 ;;		Unchanged: 0/0
 17436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17437 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17440 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17441 ;;Total ram usage:        2 bytes
 17442 ;; Hardware stack levels used: 1
 17443 ;; Hardware stack levels required when called: 4
 17444 ;; This function calls:
 17445 ;;		Nothing
 17446 ;; This function is called by:
 17447 ;;		_EUSART2_Initialize
 17448 ;; This function uses a non-reentrant model
 17449 ;;
 17450                           
 17451     1F83                     _EUSART2_SetRxInterruptHandler:	
 17452                           ;psect for function _EUSART2_SetRxInterruptHandler
 17453                           
 17454     1F83                     l13495:	
 17455                           ;incstack = 0
 17456                           ; Regs used in _EUSART2_SetRxInterruptHandler: [wreg]
 17457                           
 17458                           
 17459                           ;mcc_generated_files/eusart2.c: 281:     EUSART2_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 17460     1F83  0872               	movf	EUSART2_SetRxInterruptHandler@interruptHandler+1,w
 17461     1F84  0141               	movlb	1	; select bank1
 17462     1F85  00ED               	movwf	(_EUSART2_RxDefaultInterruptHandler+1)^(0+128)
 17463     1F86  0871               	movf	EUSART2_SetRxInterruptHandler@interruptHandler,w
 17464     1F87  00EC               	movwf	_EUSART2_RxDefaultInterruptHandler^(0+128)
 17465     1F88                     l1745:
 17466     1F88  0008               	return
 17467     1F89                     __end_of_EUSART2_SetRxInterruptHandler:
 17468                           
 17469                           	psect	text33
 17470     1F7D                     __ptext33:	
 17471 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
 17472 ;; Defined at:
 17473 ;;		line 268 in file "mcc_generated_files/eusart2.c"
 17474 ;; Parameters:    Size  Location     Type
 17475 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17476 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
 17477 ;; Auto vars:     Size  Location     Type
 17478 ;;		None
 17479 ;; Return value:  Size  Location     Type
 17480 ;;                  1    wreg      void 
 17481 ;; Registers used:
 17482 ;;		wreg
 17483 ;; Tracked objects:
 17484 ;;		On entry : 0/0
 17485 ;;		On exit  : 0/0
 17486 ;;		Unchanged: 0/0
 17487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17488 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17491 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17492 ;;Total ram usage:        2 bytes
 17493 ;; Hardware stack levels used: 1
 17494 ;; Hardware stack levels required when called: 4
 17495 ;; This function calls:
 17496 ;;		Nothing
 17497 ;; This function is called by:
 17498 ;;		_EUSART2_Initialize
 17499 ;; This function uses a non-reentrant model
 17500 ;;
 17501                           
 17502     1F7D                     _EUSART2_SetOverrunErrorHandler:	
 17503                           ;psect for function _EUSART2_SetOverrunErrorHandler
 17504                           
 17505     1F7D                     l13501:	
 17506                           ;incstack = 0
 17507                           ; Regs used in _EUSART2_SetOverrunErrorHandler: [wreg]
 17508                           
 17509                           
 17510                           ;mcc_generated_files/eusart2.c: 269:     EUSART2_OverrunErrorHandler = interruptHandler;
 17511     1F7D  0872               	movf	EUSART2_SetOverrunErrorHandler@interruptHandler+1,w
 17512     1F7E  0142               	movlb	2	; select bank2
 17513     1F7F  00EA               	movwf	(_EUSART2_OverrunErrorHandler+1)^(0+256)
 17514     1F80  0871               	movf	EUSART2_SetOverrunErrorHandler@interruptHandler,w
 17515     1F81  00E9               	movwf	_EUSART2_OverrunErrorHandler^(0+256)
 17516     1F82                     l1736:
 17517     1F82  0008               	return
 17518     1F83                     __end_of_EUSART2_SetOverrunErrorHandler:
 17519                           
 17520                           	psect	text34
 17521     1F77                     __ptext34:	
 17522 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
 17523 ;; Defined at:
 17524 ;;		line 264 in file "mcc_generated_files/eusart2.c"
 17525 ;; Parameters:    Size  Location     Type
 17526 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17527 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
 17528 ;; Auto vars:     Size  Location     Type
 17529 ;;		None
 17530 ;; Return value:  Size  Location     Type
 17531 ;;                  1    wreg      void 
 17532 ;; Registers used:
 17533 ;;		wreg
 17534 ;; Tracked objects:
 17535 ;;		On entry : 0/0
 17536 ;;		On exit  : 0/0
 17537 ;;		Unchanged: 0/0
 17538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17539 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17542 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17543 ;;Total ram usage:        2 bytes
 17544 ;; Hardware stack levels used: 1
 17545 ;; Hardware stack levels required when called: 4
 17546 ;; This function calls:
 17547 ;;		Nothing
 17548 ;; This function is called by:
 17549 ;;		_EUSART2_Initialize
 17550 ;; This function uses a non-reentrant model
 17551 ;;
 17552                           
 17553     1F77                     _EUSART2_SetFramingErrorHandler:	
 17554                           ;psect for function _EUSART2_SetFramingErrorHandler
 17555                           
 17556     1F77                     l13499:	
 17557                           ;incstack = 0
 17558                           ; Regs used in _EUSART2_SetFramingErrorHandler: [wreg]
 17559                           
 17560                           
 17561                           ;mcc_generated_files/eusart2.c: 265:     EUSART2_FramingErrorHandler = interruptHandler;
 17562     1F77  0872               	movf	EUSART2_SetFramingErrorHandler@interruptHandler+1,w
 17563     1F78  0142               	movlb	2	; select bank2
 17564     1F79  00EC               	movwf	(_EUSART2_FramingErrorHandler+1)^(0+256)
 17565     1F7A  0871               	movf	EUSART2_SetFramingErrorHandler@interruptHandler,w
 17566     1F7B  00EB               	movwf	_EUSART2_FramingErrorHandler^(0+256)
 17567     1F7C                     l1733:
 17568     1F7C  0008               	return
 17569     1F7D                     __end_of_EUSART2_SetFramingErrorHandler:
 17570                           
 17571                           	psect	text35
 17572     1F71                     __ptext35:	
 17573 ;; *************** function _EUSART2_SetErrorHandler *****************
 17574 ;; Defined at:
 17575 ;;		line 272 in file "mcc_generated_files/eusart2.c"
 17576 ;; Parameters:    Size  Location     Type
 17577 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17578 ;;		 -> EUSART2_DefaultErrorHandler(1), 
 17579 ;; Auto vars:     Size  Location     Type
 17580 ;;		None
 17581 ;; Return value:  Size  Location     Type
 17582 ;;                  1    wreg      void 
 17583 ;; Registers used:
 17584 ;;		wreg
 17585 ;; Tracked objects:
 17586 ;;		On entry : 0/0
 17587 ;;		On exit  : 0/0
 17588 ;;		Unchanged: 0/0
 17589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17590 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17593 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17594 ;;Total ram usage:        2 bytes
 17595 ;; Hardware stack levels used: 1
 17596 ;; Hardware stack levels required when called: 4
 17597 ;; This function calls:
 17598 ;;		Nothing
 17599 ;; This function is called by:
 17600 ;;		_EUSART2_Initialize
 17601 ;; This function uses a non-reentrant model
 17602 ;;
 17603                           
 17604     1F71                     _EUSART2_SetErrorHandler:	
 17605                           ;psect for function _EUSART2_SetErrorHandler
 17606                           
 17607     1F71                     l13503:	
 17608                           ;incstack = 0
 17609                           ; Regs used in _EUSART2_SetErrorHandler: [wreg]
 17610                           
 17611                           
 17612                           ;mcc_generated_files/eusart2.c: 273:     EUSART2_ErrorHandler = interruptHandler;
 17613     1F71  0872               	movf	EUSART2_SetErrorHandler@interruptHandler+1,w
 17614     1F72  0142               	movlb	2	; select bank2
 17615     1F73  00E8               	movwf	(_EUSART2_ErrorHandler+1)^(0+256)
 17616     1F74  0871               	movf	EUSART2_SetErrorHandler@interruptHandler,w
 17617     1F75  00E7               	movwf	_EUSART2_ErrorHandler^(0+256)
 17618     1F76                     l1739:
 17619     1F76  0008               	return
 17620     1F77                     __end_of_EUSART2_SetErrorHandler:
 17621                           
 17622                           	psect	text36
 17623     093F                     __ptext36:	
 17624 ;; *************** function _EUSART1_Initialize *****************
 17625 ;; Defined at:
 17626 ;;		line 88 in file "mcc_generated_files/eusart1.c"
 17627 ;; Parameters:    Size  Location     Type
 17628 ;;		None
 17629 ;; Auto vars:     Size  Location     Type
 17630 ;;		None
 17631 ;; Return value:  Size  Location     Type
 17632 ;;                  1    wreg      void 
 17633 ;; Registers used:
 17634 ;;		wreg, status,2, status,0, pclath, cstack
 17635 ;; Tracked objects:
 17636 ;;		On entry : 0/0
 17637 ;;		On exit  : 0/0
 17638 ;;		Unchanged: 0/0
 17639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17644 ;;Total ram usage:        0 bytes
 17645 ;; Hardware stack levels used: 1
 17646 ;; Hardware stack levels required when called: 5
 17647 ;; This function calls:
 17648 ;;		_EUSART1_SetErrorHandler
 17649 ;;		_EUSART1_SetFramingErrorHandler
 17650 ;;		_EUSART1_SetOverrunErrorHandler
 17651 ;;		_EUSART1_SetRxInterruptHandler
 17652 ;;		_EUSART1_SetTxInterruptHandler
 17653 ;; This function is called by:
 17654 ;;		_SYSTEM_Initialize
 17655 ;; This function uses a non-reentrant model
 17656 ;;
 17657                           
 17658     093F                     _EUSART1_Initialize:	
 17659                           ;psect for function _EUSART1_Initialize
 17660                           
 17661     093F                     l14155:	
 17662                           ;incstack = 0
 17663                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17664                           
 17665                           
 17666                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
 17667     093F  014E               	movlb	14	; select bank14
 17668     0940  1299               	bcf	25,5	;volatile
 17669     0941                     l14157:
 17670                           
 17671                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 17672     0941  3088               	movlw	low _EUSART1_Receive_ISR
 17673     0942  00F1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 17674     0943  3008               	movlw	high _EUSART1_Receive_ISR
 17675     0944  00F2               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 17676     0945  319F  2765  3189   	fcall	_EUSART1_SetRxInterruptHandler
 17677     0948                     l14159:
 17678                           
 17679                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
 17680     0948  014E               	movlb	14	; select bank14
 17681     0949  1219               	bcf	25,4	;volatile
 17682                           
 17683                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
 17684     094A  30FF               	movlw	low _EUSART1_Transmit_ISR
 17685     094B  00F1               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler
 17686     094C  3013               	movlw	high _EUSART1_Transmit_ISR
 17687     094D  00F2               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1
 17688     094E  319F  276B  3189   	fcall	_EUSART1_SetTxInterruptHandler
 17689     0951                     l14161:
 17690                           
 17691                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
 17692     0951  3008               	movlw	8
 17693     0952  0142               	movlb	2	; select bank2
 17694     0953  009F               	movwf	31	;volatile
 17695     0954                     l14163:
 17696                           
 17697                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
 17698     0954  3090               	movlw	144
 17699     0955  009D               	movwf	29	;volatile
 17700     0956                     l14165:
 17701                           
 17702                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
 17703     0956  3024               	movlw	36
 17704     0957  009E               	movwf	30	;volatile
 17705     0958                     l14167:
 17706                           
 17707                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x40;
 17708     0958  3040               	movlw	64
 17709     0959  009B               	movwf	27	;volatile
 17710     095A                     l14169:
 17711                           
 17712                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x03;
 17713     095A  3003               	movlw	3
 17714     095B  009C               	movwf	28	;volatile
 17715     095C                     l14171:
 17716                           
 17717                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 17718     095C  30B5               	movlw	low _EUSART1_DefaultFramingErrorHandler
 17719     095D  00F1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
 17720     095E  301E               	movlw	high _EUSART1_DefaultFramingErrorHandler
 17721     095F  00F2               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
 17722     0960  319F  2759  3189   	fcall	_EUSART1_SetFramingErrorHandler
 17723     0963                     l14173:
 17724                           
 17725                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 17726     0963  30DD               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 17727     0964  00F1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
 17728     0965  301E               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 17729     0966  00F2               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
 17730     0967  319F  275F  3189   	fcall	_EUSART1_SetOverrunErrorHandler
 17731     096A                     l14175:
 17732                           
 17733                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 17734     096A  30D9               	movlw	low _EUSART1_DefaultErrorHandler
 17735     096B  00F1               	movwf	EUSART1_SetErrorHandler@interruptHandler
 17736     096C  301E               	movlw	high _EUSART1_DefaultErrorHandler
 17737     096D  00F2               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
 17738     096E  319F  2753  3189   	fcall	_EUSART1_SetErrorHandler
 17739     0971                     l14177:
 17740                           
 17741                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
 17742     0971  0140               	movlb	0	; select bank0
 17743     0972  01D7               	clrf	_eusart1RxLastError	;volatile
 17744     0973                     l14179:
 17745                           
 17746                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
 17747     0973  01DD               	clrf	_eusart1TxHead	;volatile
 17748     0974                     l14181:
 17749                           
 17750                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
 17751     0974  01DC               	clrf	_eusart1TxTail	;volatile
 17752     0975                     l14183:
 17753                           
 17754                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
 17755     0975  3008               	movlw	8
 17756     0976  00DB               	movwf	_eusart1TxBufferRemaining	;volatile
 17757                           
 17758                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
 17759     0977  01DA               	clrf	_eusart1RxHead	;volatile
 17760                           
 17761                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
 17762     0978  01D9               	clrf	_eusart1RxTail	;volatile
 17763                           
 17764                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
 17765     0979  01D8               	clrf	_eusart1RxCount	;volatile
 17766     097A                     l14185:
 17767                           
 17768                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
 17769     097A  014E               	movlb	14	; select bank14
 17770     097B  1699               	bsf	25,5	;volatile
 17771     097C                     l1820:
 17772     097C  0008               	return
 17773     097D                     __end_of_EUSART1_Initialize:
 17774                           
 17775                           	psect	text37
 17776     1F6B                     __ptext37:	
 17777 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
 17778 ;; Defined at:
 17779 ;;		line 285 in file "mcc_generated_files/eusart1.c"
 17780 ;; Parameters:    Size  Location     Type
 17781 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17782 ;;		 -> EUSART2_Transmit_ISR(1), EUSART1_Transmit_ISR(1), 
 17783 ;; Auto vars:     Size  Location     Type
 17784 ;;		None
 17785 ;; Return value:  Size  Location     Type
 17786 ;;                  1    wreg      void 
 17787 ;; Registers used:
 17788 ;;		wreg
 17789 ;; Tracked objects:
 17790 ;;		On entry : 0/0
 17791 ;;		On exit  : 0/0
 17792 ;;		Unchanged: 0/0
 17793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17794 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17797 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17798 ;;Total ram usage:        2 bytes
 17799 ;; Hardware stack levels used: 1
 17800 ;; Hardware stack levels required when called: 4
 17801 ;; This function calls:
 17802 ;;		Nothing
 17803 ;; This function is called by:
 17804 ;;		_EUSART1_Initialize
 17805 ;; This function uses a non-reentrant model
 17806 ;;
 17807                           
 17808     1F6B                     _EUSART1_SetTxInterruptHandler:	
 17809                           ;psect for function _EUSART1_SetTxInterruptHandler
 17810                           
 17811     1F6B                     l13517:	
 17812                           ;incstack = 0
 17813                           ; Regs used in _EUSART1_SetTxInterruptHandler: [wreg]
 17814                           
 17815                           
 17816                           ;mcc_generated_files/eusart1.c: 286:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 17817     1F6B  0872               	movf	EUSART1_SetTxInterruptHandler@interruptHandler+1,w
 17818     1F6C  0142               	movlb	2	; select bank2
 17819     1F6D  00E6               	movwf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+256)
 17820     1F6E  0871               	movf	EUSART1_SetTxInterruptHandler@interruptHandler,w
 17821     1F6F  00E5               	movwf	_EUSART1_TxDefaultInterruptHandler^(0+256)
 17822     1F70                     l1892:
 17823     1F70  0008               	return
 17824     1F71                     __end_of_EUSART1_SetTxInterruptHandler:
 17825                           
 17826                           	psect	text38
 17827     1F65                     __ptext38:	
 17828 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 17829 ;; Defined at:
 17830 ;;		line 289 in file "mcc_generated_files/eusart1.c"
 17831 ;; Parameters:    Size  Location     Type
 17832 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17833 ;;		 -> EUSART2_Receive_ISR(1), EUSART1_Receive_ISR(1), 
 17834 ;; Auto vars:     Size  Location     Type
 17835 ;;		None
 17836 ;; Return value:  Size  Location     Type
 17837 ;;                  1    wreg      void 
 17838 ;; Registers used:
 17839 ;;		wreg
 17840 ;; Tracked objects:
 17841 ;;		On entry : 0/0
 17842 ;;		On exit  : 0/0
 17843 ;;		Unchanged: 0/0
 17844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17845 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17848 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17849 ;;Total ram usage:        2 bytes
 17850 ;; Hardware stack levels used: 1
 17851 ;; Hardware stack levels required when called: 4
 17852 ;; This function calls:
 17853 ;;		Nothing
 17854 ;; This function is called by:
 17855 ;;		_EUSART1_Initialize
 17856 ;; This function uses a non-reentrant model
 17857 ;;
 17858                           
 17859     1F65                     _EUSART1_SetRxInterruptHandler:	
 17860                           ;psect for function _EUSART1_SetRxInterruptHandler
 17861                           
 17862     1F65                     l13515:	
 17863                           ;incstack = 0
 17864                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
 17865                           
 17866                           
 17867                           ;mcc_generated_files/eusart1.c: 290:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 17868     1F65  0872               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
 17869     1F66  0142               	movlb	2	; select bank2
 17870     1F67  00E4               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256)
 17871     1F68  0871               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
 17872     1F69  00E3               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+256)
 17873     1F6A                     l1895:
 17874     1F6A  0008               	return
 17875     1F6B                     __end_of_EUSART1_SetRxInterruptHandler:
 17876                           
 17877                           	psect	text39
 17878     1F5F                     __ptext39:	
 17879 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 17880 ;; Defined at:
 17881 ;;		line 277 in file "mcc_generated_files/eusart1.c"
 17882 ;; Parameters:    Size  Location     Type
 17883 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17884 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 17885 ;; Auto vars:     Size  Location     Type
 17886 ;;		None
 17887 ;; Return value:  Size  Location     Type
 17888 ;;                  1    wreg      void 
 17889 ;; Registers used:
 17890 ;;		wreg
 17891 ;; Tracked objects:
 17892 ;;		On entry : 0/0
 17893 ;;		On exit  : 0/0
 17894 ;;		Unchanged: 0/0
 17895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17896 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17899 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17900 ;;Total ram usage:        2 bytes
 17901 ;; Hardware stack levels used: 1
 17902 ;; Hardware stack levels required when called: 4
 17903 ;; This function calls:
 17904 ;;		Nothing
 17905 ;; This function is called by:
 17906 ;;		_EUSART1_Initialize
 17907 ;; This function uses a non-reentrant model
 17908 ;;
 17909                           
 17910     1F5F                     _EUSART1_SetOverrunErrorHandler:	
 17911                           ;psect for function _EUSART1_SetOverrunErrorHandler
 17912                           
 17913     1F5F                     l13521:	
 17914                           ;incstack = 0
 17915                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
 17916                           
 17917                           
 17918                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_OverrunErrorHandler = interruptHandler;
 17919     1F5F  0872               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
 17920     1F60  0142               	movlb	2	; select bank2
 17921     1F61  00E0               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+256)
 17922     1F62  0871               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
 17923     1F63  00DF               	movwf	_EUSART1_OverrunErrorHandler^(0+256)
 17924     1F64                     l1886:
 17925     1F64  0008               	return
 17926     1F65                     __end_of_EUSART1_SetOverrunErrorHandler:
 17927                           
 17928                           	psect	text40
 17929     1F59                     __ptext40:	
 17930 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 17931 ;; Defined at:
 17932 ;;		line 273 in file "mcc_generated_files/eusart1.c"
 17933 ;; Parameters:    Size  Location     Type
 17934 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17935 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 17936 ;; Auto vars:     Size  Location     Type
 17937 ;;		None
 17938 ;; Return value:  Size  Location     Type
 17939 ;;                  1    wreg      void 
 17940 ;; Registers used:
 17941 ;;		wreg
 17942 ;; Tracked objects:
 17943 ;;		On entry : 0/0
 17944 ;;		On exit  : 0/0
 17945 ;;		Unchanged: 0/0
 17946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17947 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17950 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17951 ;;Total ram usage:        2 bytes
 17952 ;; Hardware stack levels used: 1
 17953 ;; Hardware stack levels required when called: 4
 17954 ;; This function calls:
 17955 ;;		Nothing
 17956 ;; This function is called by:
 17957 ;;		_EUSART1_Initialize
 17958 ;; This function uses a non-reentrant model
 17959 ;;
 17960                           
 17961     1F59                     _EUSART1_SetFramingErrorHandler:	
 17962                           ;psect for function _EUSART1_SetFramingErrorHandler
 17963                           
 17964     1F59                     l13519:	
 17965                           ;incstack = 0
 17966                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
 17967                           
 17968                           
 17969                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_FramingErrorHandler = interruptHandler;
 17970     1F59  0872               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
 17971     1F5A  0142               	movlb	2	; select bank2
 17972     1F5B  00E2               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+256)
 17973     1F5C  0871               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
 17974     1F5D  00E1               	movwf	_EUSART1_FramingErrorHandler^(0+256)
 17975     1F5E                     l1883:
 17976     1F5E  0008               	return
 17977     1F5F                     __end_of_EUSART1_SetFramingErrorHandler:
 17978                           
 17979                           	psect	text41
 17980     1F53                     __ptext41:	
 17981 ;; *************** function _EUSART1_SetErrorHandler *****************
 17982 ;; Defined at:
 17983 ;;		line 281 in file "mcc_generated_files/eusart1.c"
 17984 ;; Parameters:    Size  Location     Type
 17985 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17986 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 17987 ;; Auto vars:     Size  Location     Type
 17988 ;;		None
 17989 ;; Return value:  Size  Location     Type
 17990 ;;                  1    wreg      void 
 17991 ;; Registers used:
 17992 ;;		wreg
 17993 ;; Tracked objects:
 17994 ;;		On entry : 0/0
 17995 ;;		On exit  : 0/0
 17996 ;;		Unchanged: 0/0
 17997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17998 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18001 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18002 ;;Total ram usage:        2 bytes
 18003 ;; Hardware stack levels used: 1
 18004 ;; Hardware stack levels required when called: 4
 18005 ;; This function calls:
 18006 ;;		Nothing
 18007 ;; This function is called by:
 18008 ;;		_EUSART1_Initialize
 18009 ;; This function uses a non-reentrant model
 18010 ;;
 18011                           
 18012     1F53                     _EUSART1_SetErrorHandler:	
 18013                           ;psect for function _EUSART1_SetErrorHandler
 18014                           
 18015     1F53                     l13523:	
 18016                           ;incstack = 0
 18017                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
 18018                           
 18019                           
 18020                           ;mcc_generated_files/eusart1.c: 282:     EUSART1_ErrorHandler = interruptHandler;
 18021     1F53  0872               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
 18022     1F54  0142               	movlb	2	; select bank2
 18023     1F55  00DE               	movwf	(_EUSART1_ErrorHandler+1)^(0+256)
 18024     1F56  0871               	movf	EUSART1_SetErrorHandler@interruptHandler,w
 18025     1F57  00DD               	movwf	_EUSART1_ErrorHandler^(0+256)
 18026     1F58                     l1889:
 18027     1F58  0008               	return
 18028     1F59                     __end_of_EUSART1_SetErrorHandler:
 18029                           
 18030                           	psect	text42
 18031     1297                     __ptext42:	
 18032 ;; *************** function _RN487X_SetAsyncMessageHandler *****************
 18033 ;; Defined at:
 18034 ;;		line 328 in file "mcc_generated_files/rn487x/rn487x.c"
 18035 ;; Parameters:    Size  Location     Type
 18036 ;;  pBuffer         2    1[COMMON] PTR unsigned char 
 18037 ;;		 -> statusBuffer@main$F4268(80), statusBuffer(80), 
 18038 ;;  len             1    3[COMMON] unsigned char 
 18039 ;; Auto vars:     Size  Location     Type
 18040 ;;		None
 18041 ;; Return value:  Size  Location     Type
 18042 ;;                  1    wreg      _Bool 
 18043 ;; Registers used:
 18044 ;;		wreg, status,2, status,0
 18045 ;; Tracked objects:
 18046 ;;		On entry : 0/0
 18047 ;;		On exit  : 0/0
 18048 ;;		Unchanged: 0/0
 18049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18050 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18053 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18054 ;;Total ram usage:        3 bytes
 18055 ;; Hardware stack levels used: 1
 18056 ;; Hardware stack levels required when called: 4
 18057 ;; This function calls:
 18058 ;;		Nothing
 18059 ;; This function is called by:
 18060 ;;		_main
 18061 ;;		_RN487X_Example_Initialized
 18062 ;; This function uses a non-reentrant model
 18063 ;;
 18064                           
 18065     1297                     _RN487X_SetAsyncMessageHandler:	
 18066                           ;psect for function _RN487X_SetAsyncMessageHandler
 18067                           
 18068     1297                     l14503:	
 18069                           ;incstack = 0
 18070                           ; Regs used in _RN487X_SetAsyncMessageHandler: [wreg+status,2+status,0]
 18071                           
 18072                           
 18073                           ;mcc_generated_files/rn487x/rn487x.c: 328: _Bool RN487X_SetAsyncMessageHandler(char* pBu
      +                          ffer, uint8_t len);mcc_generated_files/rn487x/rn487x.c: 329: {;mcc_generated_files/rn487
      +                          x/rn487x.c: 330:     if ((pBuffer != ((void*)0)) && (len > 1))
 18074     1297  0871               	movf	RN487X_SetAsyncMessageHandler@pBuffer,w
 18075     1298  0472               	iorwf	RN487X_SetAsyncMessageHandler@pBuffer+1,w
 18076     1299  1903               	btfsc	3,2
 18077     129A  2A9C               	goto	u11651
 18078     129B  2A9D               	goto	u11650
 18079     129C                     u11651:
 18080     129C  2AAD               	goto	l14517
 18081     129D                     u11650:
 18082     129D                     l14505:
 18083     129D  3002               	movlw	2
 18084     129E  0273               	subwf	RN487X_SetAsyncMessageHandler@len,w
 18085     129F  1C03               	skipc
 18086     12A0  2AA2               	goto	u11661
 18087     12A1  2AA3               	goto	u11660
 18088     12A2                     u11661:
 18089     12A2  2AAD               	goto	l14517
 18090     12A3                     u11660:
 18091     12A3                     l14507:
 18092                           
 18093                           ;mcc_generated_files/rn487x/rn487x.c: 331:     {;mcc_generated_files/rn487x/rn487x.c: 33
      +                          2:       asyncBuffer = pBuffer;
 18094     12A3  0872               	movf	RN487X_SetAsyncMessageHandler@pBuffer+1,w
 18095     12A4  0140               	movlb	0	; select bank0
 18096     12A5  00CF               	movwf	_asyncBuffer+1
 18097     12A6  0871               	movf	RN487X_SetAsyncMessageHandler@pBuffer,w
 18098     12A7  00CE               	movwf	_asyncBuffer
 18099     12A8                     l14509:
 18100                           
 18101                           ;mcc_generated_files/rn487x/rn487x.c: 333:       asyncBufferSize = len - 1;
 18102     12A8  0873               	movf	RN487X_SetAsyncMessageHandler@len,w
 18103     12A9  3EFF               	addlw	255
 18104     12AA  00E7               	movwf	_asyncBufferSize
 18105     12AB                     l14511:
 18106                           
 18107                           ;mcc_generated_files/rn487x/rn487x.c: 334:       return 1;
 18108     12AB  3001               	movlw	1
 18109     12AC  2AAE               	goto	l1577
 18110     12AD                     l14517:
 18111                           
 18112                           ;mcc_generated_files/rn487x/rn487x.c: 337:     {;mcc_generated_files/rn487x/rn487x.c: 33
      +                          8:         return 0;
 18113     12AD  3000               	movlw	0
 18114     12AE                     l1577:
 18115     12AE  0008               	return
 18116     12AF                     __end_of_RN487X_SetAsyncMessageHandler:
 18117                           
 18118                           	psect	text43
 18119     107E                     __ptext43:	
 18120 ;; *************** function _RN487X_Read *****************
 18121 ;; Defined at:
 18122 ;;		line 356 in file "mcc_generated_files/rn487x/rn487x.c"
 18123 ;; Parameters:    Size  Location     Type
 18124 ;;		None
 18125 ;; Auto vars:     Size  Location     Type
 18126 ;;		None
 18127 ;; Return value:  Size  Location     Type
 18128 ;;                  1    wreg      unsigned char 
 18129 ;; Registers used:
 18130 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18131 ;; Tracked objects:
 18132 ;;		On entry : 0/0
 18133 ;;		On exit  : 0/0
 18134 ;;		Unchanged: 0/0
 18135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18140 ;;Total ram usage:        0 bytes
 18141 ;; Hardware stack levels used: 1
 18142 ;; Hardware stack levels required when called: 9
 18143 ;; This function calls:
 18144 ;;		_RN487X_DataReady
 18145 ;; This function is called by:
 18146 ;;		_main
 18147 ;;		_RN487X_Example_TransparentUart
 18148 ;; This function uses a non-reentrant model
 18149 ;;
 18150                           
 18151     107E                     _RN487X_Read:	
 18152                           ;psect for function _RN487X_Read
 18153                           
 18154     107E                     l14525:	
 18155                           ;incstack = 0
 18156                           ; Regs used in _RN487X_Read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18157                           
 18158     107E                     l14527:	
 18159                           ;mcc_generated_files/rn487x/rn487x.c: 358:     while(RN487X_DataReady() == 0);
 18160                           
 18161     107E  3193  2382  3190   	fcall	_RN487X_DataReady
 18162     1081  3A00               	xorlw	0
 18163     1082  1903               	skipnz
 18164     1083  2885               	goto	u11671
 18165     1084  2886               	goto	u11670
 18166     1085                     u11671:
 18167     1085  287E               	goto	l14527
 18168     1086                     u11670:
 18169     1086                     l14529:
 18170                           
 18171                           ;mcc_generated_files/rn487x/rn487x.c: 359:     dataReady = 0;
 18172     1086  0140               	movlb	0	; select bank0
 18173     1087  01E5               	clrf	_dataReady
 18174     1088                     l14531:
 18175                           
 18176                           ;mcc_generated_files/rn487x/rn487x.c: 360:     return peek;
 18177     1088  0866               	movf	_peek,w
 18178     1089                     l1589:
 18179     1089  0008               	return
 18180     108A                     __end_of_RN487X_Read:
 18181                           
 18182                           	psect	text44
 18183     1382                     __ptext44:	
 18184 ;; *************** function _RN487X_DataReady *****************
 18185 ;; Defined at:
 18186 ;;		line 342 in file "mcc_generated_files/rn487x/rn487x.c"
 18187 ;; Parameters:    Size  Location     Type
 18188 ;;		None
 18189 ;; Auto vars:     Size  Location     Type
 18190 ;;		None
 18191 ;; Return value:  Size  Location     Type
 18192 ;;                  1    wreg      _Bool 
 18193 ;; Registers used:
 18194 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18195 ;; Tracked objects:
 18196 ;;		On entry : 0/0
 18197 ;;		On exit  : 0/0
 18198 ;;		Unchanged: 0/0
 18199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18204 ;;Total ram usage:        0 bytes
 18205 ;; Hardware stack levels used: 1
 18206 ;; Hardware stack levels required when called: 8
 18207 ;; This function calls:
 18208 ;;		_RN487X_FilterData
 18209 ;;		_RN487X_is_rx_ready
 18210 ;; This function is called by:
 18211 ;;		_RN487X_Read
 18212 ;;		_main
 18213 ;;		_RN487X_Example_TransparentUart
 18214 ;; This function uses a non-reentrant model
 18215 ;;
 18216                           
 18217     1382                     _RN487X_DataReady:	
 18218                           ;psect for function _RN487X_DataReady
 18219                           
 18220     1382                     l14097:	
 18221                           ;incstack = 0
 18222                           ; Regs used in _RN487X_DataReady: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18223                           
 18224                           
 18225                           ;mcc_generated_files/rn487x/rn487x.c: 344:     if (dataReady)
 18226     1382  0140               	movlb	0	; select bank0
 18227     1383  0865               	movf	_dataReady,w
 18228     1384  1903               	btfsc	3,2
 18229     1385  2B87               	goto	u11381
 18230     1386  2B88               	goto	u11380
 18231     1387                     u11381:
 18232     1387  2B8A               	goto	l14103
 18233     1388                     u11380:
 18234     1388                     l14099:
 18235                           
 18236                           ;mcc_generated_files/rn487x/rn487x.c: 345:     {;mcc_generated_files/rn487x/rn487x.c: 34
      +                          6:         return 1;
 18237     1388  3001               	movlw	1
 18238     1389  2B9D               	goto	l1582
 18239     138A                     l14103:
 18240                           
 18241                           ;mcc_generated_files/rn487x/rn487x.c: 349:     if (RN487X.DataReady())
 18242     138A  306E               	movlw	low ((_RN487X+6)| (0+32768))
 18243     138B  0084               	movwf	4
 18244     138C  3098               	movlw	high ((_RN487X+6)| (0+32768))
 18245     138D  0085               	movwf	5
 18246     138E  3F01               	moviw [1]fsr0
 18247     138F  008A               	movwf	10
 18248     1390  3F00               	moviw [0]fsr0
 18249     1391  000A               	callw
 18250     1392  3193               	pagesel	$
 18251     1393  3A00               	xorlw	0
 18252     1394  1903               	skipnz
 18253     1395  2B97               	goto	u11391
 18254     1396  2B98               	goto	u11390
 18255     1397                     u11391:
 18256     1397  2B9C               	goto	l14109
 18257     1398                     u11390:
 18258     1398                     l14105:
 18259                           
 18260                           ;mcc_generated_files/rn487x/rn487x.c: 350:     {;mcc_generated_files/rn487x/rn487x.c: 35
      +                          1:         return RN487X_FilterData();
 18261     1398  318E  2690  3193   	fcall	_RN487X_FilterData
 18262     139B  2B9D               	goto	l1582
 18263     139C                     l14109:
 18264                           
 18265                           ;mcc_generated_files/rn487x/rn487x.c: 353:     return 0;
 18266     139C  3000               	movlw	0
 18267     139D                     l1582:
 18268     139D  0008               	return
 18269     139E                     __end_of_RN487X_DataReady:
 18270                           
 18271                           	psect	text45
 18272     0E90                     __ptext45:	
 18273 ;; *************** function _RN487X_FilterData *****************
 18274 ;; Defined at:
 18275 ;;		line 363 in file "mcc_generated_files/rn487x/rn487x.c"
 18276 ;; Parameters:    Size  Location     Type
 18277 ;;		None
 18278 ;; Auto vars:     Size  Location     Type
 18279 ;;  readChar        1   40[BANK0 ] unsigned char 
 18280 ;; Return value:  Size  Location     Type
 18281 ;;                  1    wreg      _Bool 
 18282 ;; Registers used:
 18283 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18284 ;; Tracked objects:
 18285 ;;		On entry : 0/0
 18286 ;;		On exit  : 0/0
 18287 ;;		Unchanged: 0/0
 18288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18290 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18291 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18292 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18293 ;;Total ram usage:        5 bytes
 18294 ;; Hardware stack levels used: 1
 18295 ;; Hardware stack levels required when called: 7
 18296 ;; This function calls:
 18297 ;;		_RN487X_MessageHandler
 18298 ;;		_RN487X_Read@rn487x_interface$F1869
 18299 ;; This function is called by:
 18300 ;;		_RN487X_DataReady
 18301 ;; This function uses a non-reentrant model
 18302 ;;
 18303                           
 18304     0E90                     _RN487X_FilterData:	
 18305                           ;psect for function _RN487X_FilterData
 18306                           
 18307     0E90                     l13467:	
 18308                           ;incstack = 0
 18309                           ; Regs used in _RN487X_FilterData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18310                           
 18311                           
 18312                           ;mcc_generated_files/rn487x/rn487x.c: 365:     static _Bool asyncBuffering = 0;;mcc_gene
      +                          rated_files/rn487x/rn487x.c: 367:     uint8_t readChar = RN487X.Read();
 18313     0E90  306A               	movlw	low ((_RN487X+2)| (0+32768))
 18314     0E91  0084               	movwf	4
 18315     0E92  3098               	movlw	high ((_RN487X+2)| (0+32768))
 18316     0E93  0085               	movwf	5
 18317     0E94  3F01               	moviw [1]fsr0
 18318     0E95  008A               	movwf	10
 18319     0E96  3F00               	moviw [0]fsr0
 18320     0E97  000A               	callw
 18321     0E98  318E               	pagesel	$
 18322     0E99  0140               	movlb	0	; select bank0
 18323     0E9A  00C8               	movwf	RN487X_FilterData@readChar
 18324     0E9B                     l13469:
 18325                           
 18326                           ;mcc_generated_files/rn487x/rn487x.c: 369:     if(asyncBuffering == 1)
 18327     0E9B  0364               	decf	RN487X_FilterData@asyncBuffering,w
 18328     0E9C  1D03               	btfss	3,2
 18329     0E9D  2E9F               	goto	u10341
 18330     0E9E  2EA0               	goto	u10340
 18331     0E9F                     u10341:
 18332     0E9F  2ED8               	goto	l13485
 18333     0EA0                     u10340:
 18334     0EA0                     l13471:
 18335                           
 18336                           ;mcc_generated_files/rn487x/rn487x.c: 370:     {;mcc_generated_files/rn487x/rn487x.c: 37
      +                          1:         if(readChar == ('%'))
 18337     0EA0  3025               	movlw	37
 18338     0EA1  0648               	xorwf	RN487X_FilterData@readChar,w
 18339     0EA2  1D03               	btfss	3,2
 18340     0EA3  2EA5               	goto	u10351
 18341     0EA4  2EA6               	goto	u10350
 18342     0EA5                     u10351:
 18343     0EA5  2EBA               	goto	l13479
 18344     0EA6                     u10350:
 18345     0EA6                     l13473:
 18346                           
 18347                           ;mcc_generated_files/rn487x/rn487x.c: 372:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 373:             asyncBuffering = 0;
 18348     0EA6  01E4               	clrf	RN487X_FilterData@asyncBuffering
 18349     0EA7                     l13475:
 18350                           
 18351                           ;mcc_generated_files/rn487x/rn487x.c: 374:             *pHead = '\0';
 18352     0EA7  084C               	movf	_pHead,w
 18353     0EA8  0086               	movwf	6
 18354     0EA9  084D               	movf	_pHead+1,w
 18355     0EAA  0087               	movwf	7
 18356     0EAB  0181               	clrf	1
 18357     0EAC                     l13477:
 18358                           
 18359                           ;mcc_generated_files/rn487x/rn487x.c: 375:             RN487X.AsyncHandler(asyncBuffer);
 18360     0EAC  084F               	movf	_asyncBuffer+1,w
 18361     0EAD  00C2               	movwf	RN487X_MessageHandler@message+1
 18362     0EAE  084E               	movf	_asyncBuffer,w
 18363     0EAF  00C1               	movwf	RN487X_MessageHandler@message
 18364     0EB0  3078               	movlw	low ((_RN487X+16)| (0+32768))
 18365     0EB1  0084               	movwf	4
 18366     0EB2  3098               	movlw	high ((_RN487X+16)| (0+32768))
 18367     0EB3  0085               	movwf	5
 18368     0EB4  3F01               	moviw [1]fsr0
 18369     0EB5  008A               	movwf	10
 18370     0EB6  3F00               	moviw [0]fsr0
 18371     0EB7  000A               	callw
 18372     0EB8  318E               	pagesel	$
 18373                           
 18374                           ;mcc_generated_files/rn487x/rn487x.c: 376:         }
 18375     0EB9  2EE9               	goto	l1598
 18376     0EBA                     l13479:
 18377     0EBA  0867               	movf	_asyncBufferSize,w
 18378     0EBB  00C4               	movwf	??_RN487X_FilterData
 18379     0EBC  01C5               	clrf	??_RN487X_FilterData+1
 18380     0EBD  0844               	movf	??_RN487X_FilterData,w
 18381     0EBE  074E               	addwf	_asyncBuffer,w
 18382     0EBF  00C6               	movwf	??_RN487X_FilterData+2
 18383     0EC0  0845               	movf	??_RN487X_FilterData+1,w
 18384     0EC1  3D4F               	addwfc	_asyncBuffer+1,w
 18385     0EC2  00C7               	movwf	??_RN487X_FilterData+3
 18386     0EC3  0847               	movf	??_RN487X_FilterData+3,w
 18387     0EC4  024D               	subwf	_pHead+1,w
 18388     0EC5  1D03               	skipz
 18389     0EC6  2EC9               	goto	u10365
 18390     0EC7  0846               	movf	??_RN487X_FilterData+2,w
 18391     0EC8  024C               	subwf	_pHead,w
 18392     0EC9                     u10365:
 18393     0EC9  1803               	skipnc
 18394     0ECA  2ECC               	goto	u10361
 18395     0ECB  2ECD               	goto	u10360
 18396     0ECC                     u10361:
 18397     0ECC  2EE9               	goto	l1598
 18398     0ECD                     u10360:
 18399     0ECD                     l13481:
 18400                           
 18401                           ;mcc_generated_files/rn487x/rn487x.c: 378:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 379:             *pHead++ = readChar;
 18402     0ECD  084C               	movf	_pHead,w
 18403     0ECE  0086               	movwf	6
 18404     0ECF  084D               	movf	_pHead+1,w
 18405     0ED0  0087               	movwf	7
 18406     0ED1  0848               	movf	RN487X_FilterData@readChar,w
 18407     0ED2  0081               	movwf	1
 18408     0ED3                     l13483:
 18409     0ED3  3001               	movlw	1
 18410     0ED4  07CC               	addwf	_pHead,f
 18411     0ED5  3000               	movlw	0
 18412     0ED6  3DCD               	addwfc	_pHead+1,f
 18413     0ED7  2EE9               	goto	l1598
 18414     0ED8                     l13485:
 18415                           
 18416                           ;mcc_generated_files/rn487x/rn487x.c: 383:     {;mcc_generated_files/rn487x/rn487x.c: 38
      +                          4:         if (readChar == ('%'))
 18417     0ED8  3025               	movlw	37
 18418     0ED9  0648               	xorwf	RN487X_FilterData@readChar,w
 18419     0EDA  1D03               	btfss	3,2
 18420     0EDB  2EDD               	goto	u10371
 18421     0EDC  2EDE               	goto	u10370
 18422     0EDD                     u10371:
 18423     0EDD  2EE5               	goto	l1599
 18424     0EDE                     u10370:
 18425     0EDE                     l13487:
 18426                           
 18427                           ;mcc_generated_files/rn487x/rn487x.c: 385:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 386:             asyncBuffering = 1;
 18428     0EDE  01E4               	clrf	RN487X_FilterData@asyncBuffering
 18429     0EDF  0AE4               	incf	RN487X_FilterData@asyncBuffering,f
 18430     0EE0                     l13489:
 18431                           
 18432                           ;mcc_generated_files/rn487x/rn487x.c: 387:             pHead = asyncBuffer;
 18433     0EE0  084F               	movf	_asyncBuffer+1,w
 18434     0EE1  00CD               	movwf	_pHead+1
 18435     0EE2  084E               	movf	_asyncBuffer,w
 18436     0EE3  00CC               	movwf	_pHead
 18437                           
 18438                           ;mcc_generated_files/rn487x/rn487x.c: 388:         }
 18439     0EE4  2EE9               	goto	l1598
 18440     0EE5                     l1599:	
 18441                           ;mcc_generated_files/rn487x/rn487x.c: 389:         else
 18442                           
 18443                           
 18444                           ;mcc_generated_files/rn487x/rn487x.c: 390:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 391:             dataReady = 1;
 18445     0EE5  01E5               	clrf	_dataReady
 18446     0EE6  0AE5               	incf	_dataReady,f
 18447     0EE7                     l13491:
 18448                           
 18449                           ;mcc_generated_files/rn487x/rn487x.c: 392:             peek = readChar;
 18450     0EE7  0848               	movf	RN487X_FilterData@readChar,w
 18451     0EE8  00E6               	movwf	_peek
 18452     0EE9                     l1598:	
 18453                           ;mcc_generated_files/rn487x/rn487x.c: 394:     }
 18454                           
 18455                           
 18456                           ;mcc_generated_files/rn487x/rn487x.c: 395:     return dataReady;
 18457     0EE9  0140               	movlb	0	; select bank0
 18458     0EEA  0865               	movf	_dataReady,w
 18459     0EEB                     l1601:
 18460     0EEB  0008               	return
 18461     0EEC                     __end_of_RN487X_FilterData:
 18462                           
 18463                           	psect	text46
 18464     09FA                     __ptext46:	
 18465 ;; *************** function _RN487X_MessageHandler *****************
 18466 ;; Defined at:
 18467 ;;		line 368 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 18468 ;; Parameters:    Size  Location     Type
 18469 ;;  message         2   33[BANK0 ] PTR unsigned char 
 18470 ;;		 -> statusBuffer@main$F4268(80), statusBuffer(80), NULL(0), 
 18471 ;; Auto vars:     Size  Location     Type
 18472 ;;  messageType     1   35[BANK0 ] enum E12962
 18473 ;; Return value:  Size  Location     Type
 18474 ;;                  1    wreg      void 
 18475 ;; Registers used:
 18476 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18477 ;; Tracked objects:
 18478 ;;		On entry : 0/0
 18479 ;;		On exit  : 0/0
 18480 ;;		Unchanged: 0/0
 18481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18482 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18483 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18485 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18486 ;;Total ram usage:        3 bytes
 18487 ;; Hardware stack levels used: 1
 18488 ;; Hardware stack levels required when called: 6
 18489 ;; This function calls:
 18490 ;;		_rn487x_PrintIndicatorCharacters
 18491 ;;		_rn487x_PrintMessage
 18492 ;;		_rn487x_PrintMessageEnd
 18493 ;;		_rn487x_PrintMessageStart
 18494 ;;		_strstr
 18495 ;; This function is called by:
 18496 ;;		_RN487X_FilterData
 18497 ;; This function uses a non-reentrant model
 18498 ;;
 18499                           
 18500     09FA                     _RN487X_MessageHandler:	
 18501                           ;psect for function _RN487X_MessageHandler
 18502                           
 18503     09FA                     l13363:	
 18504                           ;incstack = 0
 18505                           ; Regs used in _RN487X_MessageHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18506                           
 18507                           
 18508                           ;mcc_generated_files/rn487x/rn487x_interface.c: 368: static void RN487X_MessageHandler(c
      +                          har* message);mcc_generated_files/rn487x/rn487x_interface.c: 369: {;mcc_generated_files/
      +                          rn487x/rn487x_interface.c: 370:     RN487X_MESSAGE_TYPE messageType;;mcc_generated_files
      +                          /rn487x/rn487x_interface.c: 371:     rn487x_PrintMessageStart();
 18509     09FA  3196  2618  3189   	fcall	_rn487x_PrintMessageStart
 18510                           
 18511                           ;mcc_generated_files/rn487x/rn487x_interface.c: 372:     if (strstr(message, "DISCONNECT
      +                          "))
 18512     09FD  0140               	movlb	0	; select bank0
 18513     09FE  0842               	movf	RN487X_MessageHandler@message+1,w
 18514     09FF  00F9               	movwf	strstr@h+1
 18515     0A00  0841               	movf	RN487X_MessageHandler@message,w
 18516     0A01  00F8               	movwf	strstr@h
 18517     0A02  3091               	movlw	low (STR_2| (0+32768))
 18518     0A03  00FA               	movwf	strstr@n
 18519     0A04  3098               	movlw	high (STR_2| (0+32768))
 18520     0A05  00FB               	movwf	strstr@n+1
 18521     0A06  318D  25E5  3189   	fcall	_strstr
 18522     0A09  0878               	movf	?_strstr,w
 18523     0A0A  0479               	iorwf	?_strstr+1,w
 18524     0A0B  1903               	btfsc	3,2
 18525     0A0C  2A0E               	goto	u10191
 18526     0A0D  2A0F               	goto	u10190
 18527     0A0E                     u10191:
 18528     0A0E  2A13               	goto	l13367
 18529     0A0F                     u10190:
 18530     0A0F                     l13365:
 18531                           
 18532                           ;mcc_generated_files/rn487x/rn487x_interface.c: 373:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 374:         messageType = DISCONNECT_MSG;
 18533     0A0F  0140               	movlb	0	; select bank0
 18534     0A10  01C3               	clrf	RN487X_MessageHandler@messageType
 18535                           
 18536                           ;mcc_generated_files/rn487x/rn487x_interface.c: 375:         connected = 0;
 18537     0A11  01E8               	clrf	_connected
 18538                           
 18539                           ;mcc_generated_files/rn487x/rn487x_interface.c: 376:     }
 18540     0A12  2A2E               	goto	l13373
 18541     0A13                     l13367:
 18542     0A13  0140               	movlb	0	; select bank0
 18543     0A14  0842               	movf	RN487X_MessageHandler@message+1,w
 18544     0A15  00F9               	movwf	strstr@h+1
 18545     0A16  0841               	movf	RN487X_MessageHandler@message,w
 18546     0A17  00F8               	movwf	strstr@h
 18547     0A18  307A               	movlw	low (STR_4| (0+32768))
 18548     0A19  00FA               	movwf	strstr@n
 18549     0A1A  3098               	movlw	high (STR_4| (0+32768))
 18550     0A1B  00FB               	movwf	strstr@n+1
 18551     0A1C  318D  25E5  3189   	fcall	_strstr
 18552     0A1F  0878               	movf	?_strstr,w
 18553     0A20  0479               	iorwf	?_strstr+1,w
 18554     0A21  1903               	btfsc	3,2
 18555     0A22  2A24               	goto	u10201
 18556     0A23  2A25               	goto	u10200
 18557     0A24                     u10201:
 18558     0A24  2A2B               	goto	l13371
 18559     0A25                     u10200:
 18560     0A25                     l13369:
 18561                           
 18562                           ;mcc_generated_files/rn487x/rn487x_interface.c: 378:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 379:         messageType = STREAM_OPEN_MSG;
 18563     0A25  0140               	movlb	0	; select bank0
 18564     0A26  01C3               	clrf	RN487X_MessageHandler@messageType
 18565     0A27  0AC3               	incf	RN487X_MessageHandler@messageType,f
 18566                           
 18567                           ;mcc_generated_files/rn487x/rn487x_interface.c: 380:         connected = 1;
 18568     0A28  01E8               	clrf	_connected
 18569     0A29  0AE8               	incf	_connected,f
 18570                           
 18571                           ;mcc_generated_files/rn487x/rn487x_interface.c: 381:     }
 18572     0A2A  2A2E               	goto	l13373
 18573     0A2B                     l13371:
 18574                           
 18575                           ;mcc_generated_files/rn487x/rn487x_interface.c: 383:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 384:         messageType = GENERAL_MSG;
 18576     0A2B  3002               	movlw	2
 18577     0A2C  0140               	movlb	0	; select bank0
 18578     0A2D  00C3               	movwf	RN487X_MessageHandler@messageType
 18579     0A2E                     l13373:
 18580                           
 18581                           ;mcc_generated_files/rn487x/rn487x_interface.c: 386:     rn487x_PrintMessage(message);
 18582     0A2E  0842               	movf	RN487X_MessageHandler@message+1,w
 18583     0A2F  00F8               	movwf	rn487x_PrintMessage@passedMessage+1
 18584     0A30  0841               	movf	RN487X_MessageHandler@message,w
 18585     0A31  00F7               	movwf	rn487x_PrintMessage@passedMessage
 18586     0A32  3197  2795  3189   	fcall	_rn487x_PrintMessage
 18587     0A35                     l13375:
 18588                           
 18589                           ;mcc_generated_files/rn487x/rn487x_interface.c: 387:     rn487x_PrintMessageEnd();
 18590     0A35  318B  23AC  3189   	fcall	_rn487x_PrintMessageEnd
 18591     0A38                     l13377:
 18592                           
 18593                           ;mcc_generated_files/rn487x/rn487x_interface.c: 388:     rn487x_PrintIndicatorCharacters
      +                          (messageType);
 18594     0A38  0140               	movlb	0	; select bank0
 18595     0A39  0843               	movf	RN487X_MessageHandler@messageType,w
 18596     0A3A  3194  2443  3189   	fcall	_rn487x_PrintIndicatorCharacters
 18597     0A3D                     l1480:
 18598     0A3D  0008               	return
 18599     0A3E                     __end_of_RN487X_MessageHandler:
 18600                           
 18601                           	psect	text47
 18602     0DE5                     __ptext47:	
 18603 ;; *************** function _strstr *****************
 18604 ;; Defined at:
 18605 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strstr.c"
 18606 ;; Parameters:    Size  Location     Type
 18607 ;;  h               2    8[COMMON] PTR const unsigned char 
 18608 ;;		 -> statusBuffer@main$F4268(80), statusBuffer(80), NULL(0), 
 18609 ;;  n               2   10[COMMON] PTR const unsigned char 
 18610 ;;		 -> STR_5(12), STR_3(11), 
 18611 ;; Auto vars:     Size  Location     Type
 18612 ;;  nl              2    2[BANK0 ] unsigned int 
 18613 ;; Return value:  Size  Location     Type
 18614 ;;                  2    8[COMMON] PTR unsigned char 
 18615 ;; Registers used:
 18616 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18617 ;; Tracked objects:
 18618 ;;		On entry : 0/0
 18619 ;;		On exit  : 0/0
 18620 ;;		Unchanged: 0/0
 18621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18622 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18623 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18624 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18625 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18626 ;;Total ram usage:        8 bytes
 18627 ;; Hardware stack levels used: 1
 18628 ;; Hardware stack levels required when called: 5
 18629 ;; This function calls:
 18630 ;;		_strchr
 18631 ;;		_strlen
 18632 ;;		_strncmp
 18633 ;; This function is called by:
 18634 ;;		_RN487X_MessageHandler
 18635 ;; This function uses a non-reentrant model
 18636 ;;
 18637                           
 18638     0DE5                     _strstr:	
 18639                           ;psect for function _strstr
 18640                           
 18641     0DE5                     l13263:	
 18642                           ;incstack = 0
 18643                           ; Regs used in _strstr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18644                           
 18645     0DE5  087A               	movf	strstr@n,w
 18646     0DE6  047B               	iorwf	strstr@n+1,w
 18647     0DE7  1903               	btfsc	3,2
 18648     0DE8  2DEA               	goto	u10051
 18649     0DE9  2DEB               	goto	u10050
 18650     0DEA                     u10051:
 18651     0DEA  2E37               	goto	l13277
 18652     0DEB                     u10050:
 18653     0DEB                     l13265:
 18654     0DEB  087B               	movf	strstr@n+1,w
 18655     0DEC  00F2               	movwf	strlen@s+1
 18656     0DED  087A               	movf	strstr@n,w
 18657     0DEE  00F1               	movwf	strlen@s
 18658     0DEF  3192  22AF  318D   	fcall	_strlen
 18659     0DF2  0872               	movf	?_strlen+1,w
 18660     0DF3  0140               	movlb	0	; select bank0
 18661     0DF4  00A3               	movwf	strstr@nl+1
 18662     0DF5  0871               	movf	?_strlen,w
 18663     0DF6  00A2               	movwf	strstr@nl
 18664     0DF7  2E28               	goto	l13273
 18665     0DF8                     l13267:
 18666     0DF8  0879               	movf	strstr@h+1,w
 18667     0DF9  00F2               	movwf	strncmp@l+1
 18668     0DFA  0878               	movf	strstr@h,w
 18669     0DFB  00F1               	movwf	strncmp@l
 18670     0DFC  087B               	movf	strstr@n+1,w
 18671     0DFD  00F4               	movwf	strncmp@r+1
 18672     0DFE  087A               	movf	strstr@n,w
 18673     0DFF  00F3               	movwf	strncmp@r
 18674     0E00  0140               	movlb	0	; select bank0
 18675     0E01  0823               	movf	strstr@nl+1,w
 18676     0E02  00F6               	movwf	strncmp@n+1
 18677     0E03  0822               	movf	strstr@nl,w
 18678     0E04  00F5               	movwf	strncmp@n
 18679     0E05  318C  2498  318D   	fcall	_strncmp
 18680     0E08  0871               	movf	?_strncmp,w
 18681     0E09  0472               	iorwf	?_strncmp+1,w
 18682     0E0A  1D03               	btfss	3,2
 18683     0E0B  2E0D               	goto	u10061
 18684     0E0C  2E0E               	goto	u10060
 18685     0E0D                     u10061:
 18686     0E0D  2E0F               	goto	l13271
 18687     0E0E                     u10060:
 18688     0E0E                     l13269:
 18689     0E0E  2E39               	goto	l3323
 18690     0E0F                     l13271:
 18691     0E0F  0878               	movf	strstr@h,w
 18692     0E10  3E01               	addlw	1
 18693     0E11  00F1               	movwf	strchr@s
 18694     0E12  3000               	movlw	0
 18695     0E13  3D79               	addwfc	strstr@h+1,w
 18696     0E14  00F2               	movwf	strchr@s+1
 18697     0E15  087A               	movf	strstr@n,w
 18698     0E16  0084               	movwf	4
 18699     0E17  087B               	movf	strstr@n+1,w
 18700     0E18  0085               	movwf	5
 18701     0E19  0800               	movf	0,w	;code access
 18702     0E1A  0140               	movlb	0	; select bank0
 18703     0E1B  00A0               	movwf	??_strstr
 18704     0E1C  01A1               	clrf	??_strstr+1
 18705     0E1D  0820               	movf	??_strstr,w
 18706     0E1E  00F3               	movwf	strchr@c
 18707     0E1F  0821               	movf	??_strstr+1,w
 18708     0E20  00F4               	movwf	strchr@c+1
 18709     0E21  3193  239E  318D   	fcall	_strchr
 18710     0E24  0872               	movf	?_strchr+1,w
 18711     0E25  00F9               	movwf	strstr@h+1
 18712     0E26  0871               	movf	?_strchr,w
 18713     0E27  00F8               	movwf	strstr@h
 18714     0E28                     l13273:
 18715     0E28  0878               	movf	strstr@h,w
 18716     0E29  0479               	iorwf	strstr@h+1,w
 18717     0E2A  1903               	btfsc	3,2
 18718     0E2B  2E2D               	goto	u10071
 18719     0E2C  2E2E               	goto	u10070
 18720     0E2D                     u10071:
 18721     0E2D  2E37               	goto	l13277
 18722     0E2E                     u10070:
 18723     0E2E                     l13275:
 18724     0E2E  0878               	movf	strstr@h,w
 18725     0E2F  0086               	movwf	6
 18726     0E30  0879               	movf	strstr@h+1,w
 18727     0E31  0087               	movwf	7
 18728     0E32  0801               	movf	1,w
 18729     0E33  1D03               	btfss	3,2
 18730     0E34  2E36               	goto	u10081
 18731     0E35  2E37               	goto	u10080
 18732     0E36                     u10081:
 18733     0E36  2DF8               	goto	l13267
 18734     0E37                     u10080:
 18735     0E37                     l13277:
 18736     0E37  01F8               	clrf	?_strstr
 18737     0E38  01F9               	clrf	?_strstr+1
 18738     0E39                     l3323:
 18739     0E39  0008               	return
 18740     0E3A                     __end_of_strstr:
 18741                           
 18742                           	psect	text48
 18743     0C98                     __ptext48:	
 18744 ;; *************** function _strncmp *****************
 18745 ;; Defined at:
 18746 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strncmp.c"
 18747 ;; Parameters:    Size  Location     Type
 18748 ;;  l               2    1[COMMON] PTR const unsigned char 
 18749 ;;		 -> statusBuffer@main$F4268(80), statusBuffer(80), NULL(0), 
 18750 ;;  r               2    3[COMMON] PTR const unsigned char 
 18751 ;;		 -> STR_5(12), STR_3(11), 
 18752 ;;  n               2    5[COMMON] unsigned int 
 18753 ;; Auto vars:     Size  Location     Type
 18754 ;;		None
 18755 ;; Return value:  Size  Location     Type
 18756 ;;                  2    1[COMMON] int 
 18757 ;; Registers used:
 18758 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 18759 ;; Tracked objects:
 18760 ;;		On entry : 0/0
 18761 ;;		On exit  : 0/0
 18762 ;;		Unchanged: 0/0
 18763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18764 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18766 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18767 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18768 ;;Total ram usage:        7 bytes
 18769 ;; Hardware stack levels used: 1
 18770 ;; Hardware stack levels required when called: 4
 18771 ;; This function calls:
 18772 ;;		Nothing
 18773 ;; This function is called by:
 18774 ;;		_strstr
 18775 ;; This function uses a non-reentrant model
 18776 ;;
 18777                           
 18778     0C98                     _strncmp:	
 18779                           ;psect for function _strncmp
 18780                           
 18781     0C98                     l13141:	
 18782                           ;incstack = 0
 18783                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
 18784                           
 18785     0C98  3001               	movlw	1
 18786     0C99  02F5               	subwf	strncmp@n,f
 18787     0C9A  3000               	movlw	0
 18788     0C9B  3BF6               	subwfb	strncmp@n+1,f
 18789     0C9C  0A75               	incf	strncmp@n,w
 18790     0C9D  1D03               	skipz
 18791     0C9E  2CA3               	goto	u9931
 18792     0C9F  0A76               	incf	strncmp@n+1,w
 18793     0CA0  1D03               	btfss	3,2
 18794     0CA1  2CA3               	goto	u9931
 18795     0CA2  2CA4               	goto	u9930
 18796     0CA3                     u9931:
 18797     0CA3  2CB3               	goto	l13149
 18798     0CA4                     u9930:
 18799     0CA4                     l13143:
 18800     0CA4  01F1               	clrf	?_strncmp
 18801     0CA5  01F2               	clrf	?_strncmp+1
 18802     0CA6  2CE9               	goto	l3336
 18803     0CA7                     l13147:
 18804     0CA7  3001               	movlw	1
 18805     0CA8  07F1               	addwf	strncmp@l,f
 18806     0CA9  3000               	movlw	0
 18807     0CAA  3DF2               	addwfc	strncmp@l+1,f
 18808     0CAB  3001               	movlw	1
 18809     0CAC  07F3               	addwf	strncmp@r,f
 18810     0CAD  3000               	movlw	0
 18811     0CAE  3DF4               	addwfc	strncmp@r+1,f
 18812     0CAF  3001               	movlw	1
 18813     0CB0  02F5               	subwf	strncmp@n,f
 18814     0CB1  3000               	movlw	0
 18815     0CB2  3BF6               	subwfb	strncmp@n+1,f
 18816     0CB3                     l13149:
 18817     0CB3  0871               	movf	strncmp@l,w
 18818     0CB4  0086               	movwf	6
 18819     0CB5  0872               	movf	strncmp@l+1,w
 18820     0CB6  0087               	movwf	7
 18821     0CB7  0801               	movf	1,w
 18822     0CB8  1903               	btfsc	3,2
 18823     0CB9  2CBB               	goto	u9941
 18824     0CBA  2CBC               	goto	u9940
 18825     0CBB                     u9941:
 18826     0CBB  2CDB               	goto	l13157
 18827     0CBC                     u9940:
 18828     0CBC                     l13151:
 18829     0CBC  0873               	movf	strncmp@r,w
 18830     0CBD  0084               	movwf	4
 18831     0CBE  0874               	movf	strncmp@r+1,w
 18832     0CBF  0085               	movwf	5
 18833     0CC0  0012               	moviw fsr0++
 18834     0CC1  1903               	btfsc	3,2
 18835     0CC2  2CC4               	goto	u9951
 18836     0CC3  2CC5               	goto	u9950
 18837     0CC4                     u9951:
 18838     0CC4  2CDB               	goto	l13157
 18839     0CC5                     u9950:
 18840     0CC5                     l13153:
 18841     0CC5  0875               	movf	strncmp@n,w
 18842     0CC6  0476               	iorwf	strncmp@n+1,w
 18843     0CC7  1903               	btfsc	3,2
 18844     0CC8  2CCA               	goto	u9961
 18845     0CC9  2CCB               	goto	u9960
 18846     0CCA                     u9961:
 18847     0CCA  2CDB               	goto	l13157
 18848     0CCB                     u9960:
 18849     0CCB                     l13155:
 18850     0CCB  0873               	movf	strncmp@r,w
 18851     0CCC  0084               	movwf	4
 18852     0CCD  0874               	movf	strncmp@r+1,w
 18853     0CCE  0085               	movwf	5
 18854     0CCF  0800               	movf	0,w	;code access
 18855     0CD0  00F7               	movwf	??_strncmp
 18856     0CD1  0871               	movf	strncmp@l,w
 18857     0CD2  0086               	movwf	6
 18858     0CD3  0872               	movf	strncmp@l+1,w
 18859     0CD4  0087               	movwf	7
 18860     0CD5  0801               	movf	1,w
 18861     0CD6  0677               	xorwf	??_strncmp,w
 18862     0CD7  1903               	skipnz
 18863     0CD8  2CDA               	goto	u9971
 18864     0CD9  2CDB               	goto	u9970
 18865     0CDA                     u9971:
 18866     0CDA  2CA7               	goto	l13147
 18867     0CDB                     u9970:
 18868     0CDB                     l13157:
 18869     0CDB  0871               	movf	strncmp@l,w
 18870     0CDC  0086               	movwf	6
 18871     0CDD  0872               	movf	strncmp@l+1,w
 18872     0CDE  0087               	movwf	7
 18873     0CDF  0873               	movf	strncmp@r,w
 18874     0CE0  0084               	movwf	4
 18875     0CE1  0874               	movf	strncmp@r+1,w
 18876     0CE2  0085               	movwf	5
 18877     0CE3  0800               	movf	0,w	;code access
 18878     0CE4  0201               	subwf	1,w
 18879     0CE5  00F1               	movwf	?_strncmp
 18880     0CE6  01F2               	clrf	?_strncmp+1
 18881     0CE7  1C03               	skipc
 18882     0CE8  03F2               	decf	?_strncmp+1,f
 18883     0CE9                     l3336:
 18884     0CE9  0008               	return
 18885     0CEA                     __end_of_strncmp:
 18886                           
 18887                           	psect	text49
 18888     139E                     __ptext49:	
 18889 ;; *************** function _strchr *****************
 18890 ;; Defined at:
 18891 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strchr.c"
 18892 ;; Parameters:    Size  Location     Type
 18893 ;;  s               2    1[COMMON] PTR const unsigned char 
 18894 ;;		 -> statusBuffer@main$F4268(80), statusBuffer(80), NULL(0), 
 18895 ;;  c               2    3[COMMON] int 
 18896 ;; Auto vars:     Size  Location     Type
 18897 ;;		None
 18898 ;; Return value:  Size  Location     Type
 18899 ;;                  2    1[COMMON] PTR unsigned char 
 18900 ;; Registers used:
 18901 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18902 ;; Tracked objects:
 18903 ;;		On entry : 0/0
 18904 ;;		On exit  : 0/0
 18905 ;;		Unchanged: 0/0
 18906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18907 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18909 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18910 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18911 ;;Total ram usage:        6 bytes
 18912 ;; Hardware stack levels used: 1
 18913 ;; Hardware stack levels required when called: 4
 18914 ;; This function calls:
 18915 ;;		Nothing
 18916 ;; This function is called by:
 18917 ;;		_strstr
 18918 ;; This function uses a non-reentrant model
 18919 ;;
 18920                           
 18921     139E                     _strchr:	
 18922                           ;psect for function _strchr
 18923                           
 18924     139E                     l3329:	
 18925                           ;incstack = 0
 18926                           ; Regs used in _strchr: [wreg+fsr1l+fsr1h+status,2+status,0]
 18927                           
 18928     139E                     l13161:
 18929     139E  0871               	movf	strchr@s,w
 18930     139F  0086               	movwf	6
 18931     13A0  0872               	movf	strchr@s+1,w
 18932     13A1  0087               	movwf	7
 18933     13A2  0801               	movf	1,w
 18934     13A3  0673               	xorwf	strchr@c,w
 18935     13A4  1D03               	skipz
 18936     13A5  2BA7               	goto	u9981
 18937     13A6  2BA8               	goto	u9980
 18938     13A7                     u9981:
 18939     13A7  2BA9               	goto	l13165
 18940     13A8                     u9980:
 18941     13A8                     l13163:
 18942     13A8  2BBB               	goto	l3331
 18943     13A9                     l13165:
 18944     13A9  0872               	movf	strchr@s+1,w
 18945     13AA  00F6               	movwf	??_strchr+1
 18946     13AB  0871               	movf	strchr@s,w
 18947     13AC  00F5               	movwf	??_strchr
 18948     13AD  0AF1               	incf	strchr@s,f
 18949     13AE  1903               	skipnz
 18950     13AF  0AF2               	incf	strchr@s+1,f
 18951     13B0  0875               	movf	??_strchr,w
 18952     13B1  0086               	movwf	6
 18953     13B2  0876               	movf	??_strchr+1,w
 18954     13B3  0087               	movwf	7
 18955     13B4  0801               	movf	1,w
 18956     13B5  1D03               	btfss	3,2
 18957     13B6  2BB8               	goto	u9991
 18958     13B7  2BB9               	goto	u9990
 18959     13B8                     u9991:
 18960     13B8  2B9E               	goto	l3329
 18961     13B9                     u9990:
 18962     13B9                     l13167:
 18963     13B9  01F1               	clrf	?_strchr
 18964     13BA  01F2               	clrf	?_strchr+1
 18965     13BB                     l3331:
 18966     13BB  0008               	return
 18967     13BC                     __end_of_strchr:
 18968                           
 18969                           	psect	text50
 18970     1618                     __ptext50:	
 18971 ;; *************** function _rn487x_PrintMessageStart *****************
 18972 ;; Defined at:
 18973 ;;		line 323 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 18974 ;; Parameters:    Size  Location     Type
 18975 ;;		None
 18976 ;; Auto vars:     Size  Location     Type
 18977 ;;		None
 18978 ;; Return value:  Size  Location     Type
 18979 ;;                  1    wreg      void 
 18980 ;; Registers used:
 18981 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18982 ;; Tracked objects:
 18983 ;;		On entry : 0/0
 18984 ;;		On exit  : 0/0
 18985 ;;		Unchanged: 0/0
 18986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18991 ;;Total ram usage:        0 bytes
 18992 ;; Hardware stack levels used: 1
 18993 ;; Hardware stack levels required when called: 5
 18994 ;; This function calls:
 18995 ;;		_EUSART1_Write
 18996 ;;		_EUSART2_Write
 18997 ;; This function is called by:
 18998 ;;		_RN487X_MessageHandler
 18999 ;; This function uses a non-reentrant model
 19000 ;;
 19001                           
 19002     1618                     _rn487x_PrintMessageStart:	
 19003                           ;psect for function _rn487x_PrintMessageStart
 19004                           
 19005     1618                     l13241:	
 19006                           ;incstack = 0
 19007                           ; Regs used in _rn487x_PrintMessageStart: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19008                           
 19009                           
 19010                           ;mcc_generated_files/rn487x/rn487x_interface.c: 325:     uart[UART_CDC].Write('<');
 19011     1618  303C               	movlw	60
 19012     1619  00F1               	movwf	EUSART2_Write@txData
 19013     161A  3002               	movlw	low ((_uart+2)| (0+32768))
 19014     161B  0084               	movwf	4
 19015     161C  3098               	movlw	high ((_uart+2)| (0+32768))
 19016     161D  0085               	movwf	5
 19017     161E  3F01               	moviw [1]fsr0
 19018     161F  008A               	movwf	10
 19019     1620  3F00               	moviw [0]fsr0
 19020     1621  000A               	callw
 19021     1622  3196               	pagesel	$
 19022                           
 19023                           ;mcc_generated_files/rn487x/rn487x_interface.c: 326:     uart[UART_CDC].Write('<');
 19024     1623  303C               	movlw	60
 19025     1624  00F1               	movwf	EUSART2_Write@txData
 19026     1625  3002               	movlw	low ((_uart+2)| (0+32768))
 19027     1626  0084               	movwf	4
 19028     1627  3098               	movlw	high ((_uart+2)| (0+32768))
 19029     1628  0085               	movwf	5
 19030     1629  3F01               	moviw [1]fsr0
 19031     162A  008A               	movwf	10
 19032     162B  3F00               	moviw [0]fsr0
 19033     162C  000A               	callw
 19034     162D  3196               	pagesel	$
 19035                           
 19036                           ;mcc_generated_files/rn487x/rn487x_interface.c: 327:     uart[UART_CDC].Write('<');
 19037     162E  303C               	movlw	60
 19038     162F  00F1               	movwf	EUSART2_Write@txData
 19039     1630  3002               	movlw	low ((_uart+2)| (0+32768))
 19040     1631  0084               	movwf	4
 19041     1632  3098               	movlw	high ((_uart+2)| (0+32768))
 19042     1633  0085               	movwf	5
 19043     1634  3F01               	moviw [1]fsr0
 19044     1635  008A               	movwf	10
 19045     1636  3F00               	moviw [0]fsr0
 19046     1637  000A               	callw
 19047     1638  3196               	pagesel	$
 19048                           
 19049                           ;mcc_generated_files/rn487x/rn487x_interface.c: 328:     uart[UART_CDC].Write(' ');
 19050     1639  3020               	movlw	32
 19051     163A  00F1               	movwf	EUSART2_Write@txData
 19052     163B  3002               	movlw	low ((_uart+2)| (0+32768))
 19053     163C  0084               	movwf	4
 19054     163D  3098               	movlw	high ((_uart+2)| (0+32768))
 19055     163E  0085               	movwf	5
 19056     163F  3F01               	moviw [1]fsr0
 19057     1640  008A               	movwf	10
 19058     1641  3F00               	moviw [0]fsr0
 19059     1642  000A               	callw
 19060     1643  3196               	pagesel	$
 19061     1644                     l1457:
 19062     1644  0008               	return
 19063     1645                     __end_of_rn487x_PrintMessageStart:
 19064                           
 19065                           	psect	text51
 19066     0BAC                     __ptext51:	
 19067 ;; *************** function _rn487x_PrintMessageEnd *****************
 19068 ;; Defined at:
 19069 ;;		line 331 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19070 ;; Parameters:    Size  Location     Type
 19071 ;;		None
 19072 ;; Auto vars:     Size  Location     Type
 19073 ;;		None
 19074 ;; Return value:  Size  Location     Type
 19075 ;;                  1    wreg      void 
 19076 ;; Registers used:
 19077 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19078 ;; Tracked objects:
 19079 ;;		On entry : 0/0
 19080 ;;		On exit  : 0/0
 19081 ;;		Unchanged: 0/0
 19082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19087 ;;Total ram usage:        0 bytes
 19088 ;; Hardware stack levels used: 1
 19089 ;; Hardware stack levels required when called: 5
 19090 ;; This function calls:
 19091 ;;		_EUSART1_Write
 19092 ;;		_EUSART2_Write
 19093 ;; This function is called by:
 19094 ;;		_RN487X_MessageHandler
 19095 ;; This function uses a non-reentrant model
 19096 ;;
 19097                           
 19098     0BAC                     _rn487x_PrintMessageEnd:	
 19099                           ;psect for function _rn487x_PrintMessageEnd
 19100                           
 19101     0BAC                     l13243:	
 19102                           ;incstack = 0
 19103                           ; Regs used in _rn487x_PrintMessageEnd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19104                           
 19105                           
 19106                           ;mcc_generated_files/rn487x/rn487x_interface.c: 333:     uart[UART_CDC].Write(' ');
 19107     0BAC  3020               	movlw	32
 19108     0BAD  00F1               	movwf	EUSART2_Write@txData
 19109     0BAE  3002               	movlw	low ((_uart+2)| (0+32768))
 19110     0BAF  0084               	movwf	4
 19111     0BB0  3098               	movlw	high ((_uart+2)| (0+32768))
 19112     0BB1  0085               	movwf	5
 19113     0BB2  3F01               	moviw [1]fsr0
 19114     0BB3  008A               	movwf	10
 19115     0BB4  3F00               	moviw [0]fsr0
 19116     0BB5  000A               	callw
 19117     0BB6  318B               	pagesel	$
 19118                           
 19119                           ;mcc_generated_files/rn487x/rn487x_interface.c: 334:     uart[UART_CDC].Write('>');
 19120     0BB7  303E               	movlw	62
 19121     0BB8  00F1               	movwf	EUSART2_Write@txData
 19122     0BB9  3002               	movlw	low ((_uart+2)| (0+32768))
 19123     0BBA  0084               	movwf	4
 19124     0BBB  3098               	movlw	high ((_uart+2)| (0+32768))
 19125     0BBC  0085               	movwf	5
 19126     0BBD  3F01               	moviw [1]fsr0
 19127     0BBE  008A               	movwf	10
 19128     0BBF  3F00               	moviw [0]fsr0
 19129     0BC0  000A               	callw
 19130     0BC1  318B               	pagesel	$
 19131                           
 19132                           ;mcc_generated_files/rn487x/rn487x_interface.c: 335:     uart[UART_CDC].Write('>');
 19133     0BC2  303E               	movlw	62
 19134     0BC3  00F1               	movwf	EUSART2_Write@txData
 19135     0BC4  3002               	movlw	low ((_uart+2)| (0+32768))
 19136     0BC5  0084               	movwf	4
 19137     0BC6  3098               	movlw	high ((_uart+2)| (0+32768))
 19138     0BC7  0085               	movwf	5
 19139     0BC8  3F01               	moviw [1]fsr0
 19140     0BC9  008A               	movwf	10
 19141     0BCA  3F00               	moviw [0]fsr0
 19142     0BCB  000A               	callw
 19143     0BCC  318B               	pagesel	$
 19144                           
 19145                           ;mcc_generated_files/rn487x/rn487x_interface.c: 336:     uart[UART_CDC].Write('>');
 19146     0BCD  303E               	movlw	62
 19147     0BCE  00F1               	movwf	EUSART2_Write@txData
 19148     0BCF  3002               	movlw	low ((_uart+2)| (0+32768))
 19149     0BD0  0084               	movwf	4
 19150     0BD1  3098               	movlw	high ((_uart+2)| (0+32768))
 19151     0BD2  0085               	movwf	5
 19152     0BD3  3F01               	moviw [1]fsr0
 19153     0BD4  008A               	movwf	10
 19154     0BD5  3F00               	moviw [0]fsr0
 19155     0BD6  000A               	callw
 19156     0BD7  318B               	pagesel	$
 19157                           
 19158                           ;mcc_generated_files/rn487x/rn487x_interface.c: 337:     uart[UART_CDC].Write(' ');
 19159     0BD8  3020               	movlw	32
 19160     0BD9  00F1               	movwf	EUSART2_Write@txData
 19161     0BDA  3002               	movlw	low ((_uart+2)| (0+32768))
 19162     0BDB  0084               	movwf	4
 19163     0BDC  3098               	movlw	high ((_uart+2)| (0+32768))
 19164     0BDD  0085               	movwf	5
 19165     0BDE  3F01               	moviw [1]fsr0
 19166     0BDF  008A               	movwf	10
 19167     0BE0  3F00               	moviw [0]fsr0
 19168     0BE1  000A               	callw
 19169     0BE2  318B               	pagesel	$
 19170                           
 19171                           ;mcc_generated_files/rn487x/rn487x_interface.c: 338:     uart[UART_CDC].Write('\r');
 19172     0BE3  300D               	movlw	13
 19173     0BE4  00F1               	movwf	EUSART2_Write@txData
 19174     0BE5  3002               	movlw	low ((_uart+2)| (0+32768))
 19175     0BE6  0084               	movwf	4
 19176     0BE7  3098               	movlw	high ((_uart+2)| (0+32768))
 19177     0BE8  0085               	movwf	5
 19178     0BE9  3F01               	moviw [1]fsr0
 19179     0BEA  008A               	movwf	10
 19180     0BEB  3F00               	moviw [0]fsr0
 19181     0BEC  000A               	callw
 19182     0BED  318B               	pagesel	$
 19183                           
 19184                           ;mcc_generated_files/rn487x/rn487x_interface.c: 339:     uart[UART_CDC].Write('\n');
 19185     0BEE  300A               	movlw	10
 19186     0BEF  00F1               	movwf	EUSART2_Write@txData
 19187     0BF0  3002               	movlw	low ((_uart+2)| (0+32768))
 19188     0BF1  0084               	movwf	4
 19189     0BF2  3098               	movlw	high ((_uart+2)| (0+32768))
 19190     0BF3  0085               	movwf	5
 19191     0BF4  3F01               	moviw [1]fsr0
 19192     0BF5  008A               	movwf	10
 19193     0BF6  3F00               	moviw [0]fsr0
 19194     0BF7  000A               	callw
 19195     0BF8  318B               	pagesel	$
 19196     0BF9                     l1460:
 19197     0BF9  0008               	return
 19198     0BFA                     __end_of_rn487x_PrintMessageEnd:
 19199                           
 19200                           	psect	text52
 19201     1795                     __ptext52:	
 19202 ;; *************** function _rn487x_PrintMessage *****************
 19203 ;; Defined at:
 19204 ;;		line 358 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19205 ;; Parameters:    Size  Location     Type
 19206 ;;  passedMessag    2    7[COMMON] PTR unsigned char 
 19207 ;;		 -> statusBuffer@main$F4268(80), statusBuffer(80), NULL(0), 
 19208 ;; Auto vars:     Size  Location     Type
 19209 ;;  messageIndex    1   32[BANK0 ] unsigned char 
 19210 ;;  printCharact   32    0[BANK0 ] unsigned char [32]
 19211 ;; Return value:  Size  Location     Type
 19212 ;;                  1    wreg      void 
 19213 ;; Registers used:
 19214 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19215 ;; Tracked objects:
 19216 ;;		On entry : 0/0
 19217 ;;		On exit  : 0/0
 19218 ;;		Unchanged: 0/0
 19219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19220 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19221 ;;      Locals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19222 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19223 ;;      Totals:         4      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19224 ;;Total ram usage:       37 bytes
 19225 ;; Hardware stack levels used: 1
 19226 ;; Hardware stack levels required when called: 5
 19227 ;; This function calls:
 19228 ;;		_EUSART1_Write
 19229 ;;		_EUSART2_Write
 19230 ;;		_strcpy
 19231 ;;		_strlen
 19232 ;; This function is called by:
 19233 ;;		_RN487X_MessageHandler
 19234 ;; This function uses a non-reentrant model
 19235 ;;
 19236                           
 19237     1795                     _rn487x_PrintMessage:	
 19238                           ;psect for function _rn487x_PrintMessage
 19239                           
 19240     1795                     l13253:	
 19241                           ;incstack = 0
 19242                           ; Regs used in _rn487x_PrintMessage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19243                           
 19244                           
 19245                           ;mcc_generated_files/rn487x/rn487x_interface.c: 358: static __attribute__((inline)) void
      +                           rn487x_PrintMessage(char* passedMessage);mcc_generated_files/rn487x/rn487x_interface.c:
      +                           359: {;mcc_generated_files/rn487x/rn487x_interface.c: 360:     char printCharacter [(32
      +                          )];;mcc_generated_files/rn487x/rn487x_interface.c: 361:     strcpy(printCharacter, passe
      +                          dMessage);
 19246     1795  0878               	movf	rn487x_PrintMessage@passedMessage+1,w
 19247     1796  00F2               	movwf	strcpy@src+1
 19248     1797  0877               	movf	rn487x_PrintMessage@passedMessage,w
 19249     1798  00F1               	movwf	strcpy@src
 19250     1799  3020               	movlw	(low (rn487x_PrintMessage@printCharacter| 0))& (0+255)
 19251     179A  3192  22FB  3197   	fcall	_strcpy
 19252     179D                     l13255:
 19253                           
 19254                           ;mcc_generated_files/rn487x/rn487x_interface.c: 362:     for (uint8_t messageIndex = 0; 
      +                          messageIndex < strlen(passedMessage); messageIndex++)
 19255     179D  0140               	movlb	0	; select bank0
 19256     179E  01C0               	clrf	rn487x_PrintMessage@messageIndex
 19257     179F  2FB4               	goto	l13261
 19258     17A0                     l13257:
 19259                           
 19260                           ;mcc_generated_files/rn487x/rn487x_interface.c: 363:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 364:         uart[UART_CDC].Write(printCharacter[messageIndex]);
 19261     17A0  0840               	movf	rn487x_PrintMessage@messageIndex,w
 19262     17A1  3E20               	addlw	(low (rn487x_PrintMessage@printCharacter| 0))& (0+255)
 19263     17A2  0086               	movwf	6
 19264     17A3  0187               	clrf	7
 19265     17A4  0801               	movf	1,w
 19266     17A5  00F1               	movwf	EUSART2_Write@txData
 19267     17A6  3002               	movlw	low ((_uart+2)| (0+32768))
 19268     17A7  0084               	movwf	4
 19269     17A8  3098               	movlw	high ((_uart+2)| (0+32768))
 19270     17A9  0085               	movwf	5
 19271     17AA  3F01               	moviw [1]fsr0
 19272     17AB  008A               	movwf	10
 19273     17AC  3F00               	moviw [0]fsr0
 19274     17AD  000A               	callw
 19275     17AE  3197               	pagesel	$
 19276     17AF                     l13259:
 19277                           
 19278                           ;mcc_generated_files/rn487x/rn487x_interface.c: 365:     }
 19279     17AF  3001               	movlw	1
 19280     17B0  00F9               	movwf	??_rn487x_PrintMessage
 19281     17B1  0879               	movf	??_rn487x_PrintMessage,w
 19282     17B2  0140               	movlb	0	; select bank0
 19283     17B3  07C0               	addwf	rn487x_PrintMessage@messageIndex,f
 19284     17B4                     l13261:
 19285     17B4  0878               	movf	rn487x_PrintMessage@passedMessage+1,w
 19286     17B5  00F2               	movwf	strlen@s+1
 19287     17B6  0877               	movf	rn487x_PrintMessage@passedMessage,w
 19288     17B7  00F1               	movwf	strlen@s
 19289     17B8  3192  22AF  3197   	fcall	_strlen
 19290     17BB  0140               	movlb	0	; select bank0
 19291     17BC  0840               	movf	rn487x_PrintMessage@messageIndex,w
 19292     17BD  00F9               	movwf	??_rn487x_PrintMessage
 19293     17BE  01FA               	clrf	??_rn487x_PrintMessage+1
 19294     17BF  0872               	movf	?_strlen+1,w
 19295     17C0  027A               	subwf	??_rn487x_PrintMessage+1,w
 19296     17C1  1D03               	skipz
 19297     17C2  2FC5               	goto	u10045
 19298     17C3  0871               	movf	?_strlen,w
 19299     17C4  0279               	subwf	??_rn487x_PrintMessage,w
 19300     17C5                     u10045:
 19301     17C5  1C03               	skipc
 19302     17C6  2FC8               	goto	u10041
 19303     17C7  2FC9               	goto	u10040
 19304     17C8                     u10041:
 19305     17C8  2FA0               	goto	l13257
 19306     17C9                     u10040:
 19307     17C9                     l1473:
 19308     17C9  0008               	return
 19309     17CA                     __end_of_rn487x_PrintMessage:
 19310                           
 19311                           	psect	text53
 19312     12FB                     __ptext53:	
 19313 ;; *************** function _strcpy *****************
 19314 ;; Defined at:
 19315 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strcpy.c"
 19316 ;; Parameters:    Size  Location     Type
 19317 ;;  dest            1    wreg     PTR unsigned char 
 19318 ;;		 -> rn487x_PrintMessage@printCharacter(32), 
 19319 ;;  src             2    1[COMMON] PTR const unsigned char 
 19320 ;;		 -> statusBuffer@main$F4268(80), statusBuffer(80), NULL(0), 
 19321 ;; Auto vars:     Size  Location     Type
 19322 ;;  dest            1    6[COMMON] PTR unsigned char 
 19323 ;;		 -> rn487x_PrintMessage@printCharacter(32), 
 19324 ;;  d               1    5[COMMON] PTR unsigned char 
 19325 ;;		 -> rn487x_PrintMessage@printCharacter(32), 
 19326 ;; Return value:  Size  Location     Type
 19327 ;;                  1    wreg      PTR unsigned char 
 19328 ;; Registers used:
 19329 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 19330 ;; Tracked objects:
 19331 ;;		On entry : 0/0
 19332 ;;		On exit  : 0/0
 19333 ;;		Unchanged: 0/0
 19334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19335 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19336 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19337 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19338 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19339 ;;Total ram usage:        6 bytes
 19340 ;; Hardware stack levels used: 1
 19341 ;; Hardware stack levels required when called: 4
 19342 ;; This function calls:
 19343 ;;		Nothing
 19344 ;; This function is called by:
 19345 ;;		_rn487x_PrintMessage
 19346 ;; This function uses a non-reentrant model
 19347 ;;
 19348                           
 19349     12FB                     _strcpy:	
 19350                           ;psect for function _strcpy
 19351                           
 19352                           
 19353                           ;incstack = 0
 19354                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0]
 19355                           ;strcpy@dest stored from wreg
 19356     12FB  00F6               	movwf	strcpy@dest
 19357     12FC                     l13075:
 19358     12FC  0876               	movf	strcpy@dest,w
 19359     12FD  00F5               	movwf	strcpy@d
 19360     12FE                     l13077:
 19361     12FE  0875               	movf	strcpy@d,w
 19362     12FF  0086               	movwf	6
 19363     1300  0187               	clrf	7
 19364     1301  0AF5               	incf	strcpy@d,f
 19365     1302  0872               	movf	strcpy@src+1,w
 19366     1303  00F4               	movwf	??_strcpy+1
 19367     1304  0871               	movf	strcpy@src,w
 19368     1305  00F3               	movwf	??_strcpy
 19369     1306  0AF1               	incf	strcpy@src,f
 19370     1307  1903               	skipnz
 19371     1308  0AF2               	incf	strcpy@src+1,f
 19372     1309  0873               	movf	??_strcpy,w
 19373     130A  0084               	movwf	4
 19374     130B  0874               	movf	??_strcpy+1,w
 19375     130C  0085               	movwf	5
 19376     130D  0800               	movf	0,w
 19377     130E  3FC0               	movwi [0]fsr1
 19378     130F  0889               	movf	9,f
 19379     1310  1D03               	btfss	3,2
 19380     1311  2B13               	goto	u9841
 19381     1312  2B14               	goto	u9840
 19382     1313                     u9841:
 19383     1313  2AFE               	goto	l13077
 19384     1314                     u9840:
 19385     1314                     l3304:
 19386     1314  0008               	return
 19387     1315                     __end_of_strcpy:
 19388                           
 19389                           	psect	text54
 19390     1443                     __ptext54:	
 19391 ;; *************** function _rn487x_PrintIndicatorCharacters *****************
 19392 ;; Defined at:
 19393 ;;		line 342 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19394 ;; Parameters:    Size  Location     Type
 19395 ;;  messageType     1    wreg     enum E12962
 19396 ;; Auto vars:     Size  Location     Type
 19397 ;;  messageType     1    3[COMMON] enum E12962
 19398 ;; Return value:  Size  Location     Type
 19399 ;;                  1    wreg      void 
 19400 ;; Registers used:
 19401 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19402 ;; Tracked objects:
 19403 ;;		On entry : 0/0
 19404 ;;		On exit  : 0/0
 19405 ;;		Unchanged: 0/0
 19406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19408 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19410 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19411 ;;Total ram usage:        1 bytes
 19412 ;; Hardware stack levels used: 1
 19413 ;; Hardware stack levels required when called: 5
 19414 ;; This function calls:
 19415 ;;		_EUSART1_Write
 19416 ;;		_EUSART2_Write
 19417 ;; This function is called by:
 19418 ;;		_RN487X_MessageHandler
 19419 ;; This function uses a non-reentrant model
 19420 ;;
 19421                           
 19422     1443                     _rn487x_PrintIndicatorCharacters:	
 19423                           ;psect for function _rn487x_PrintIndicatorCharacters
 19424                           
 19425                           
 19426                           ;incstack = 0
 19427                           ; Regs used in _rn487x_PrintIndicatorCharacters: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 19428                           ;rn487x_PrintIndicatorCharacters@messageType stored from wreg
 19429     1443  00F3               	movwf	rn487x_PrintIndicatorCharacters@messageType
 19430     1444                     l13245:
 19431                           
 19432                           ;mcc_generated_files/rn487x/rn487x_interface.c: 342: static __attribute__((inline)) void
      +                           rn487x_PrintIndicatorCharacters(RN487X_MESSAGE_TYPE messageType);mcc_generated_files/rn
      +                          487x/rn487x_interface.c: 343: {;mcc_generated_files/rn487x/rn487x_interface.c: 344:     
      +                          if (DISCONNECT_MSG == messageType)
 19433     1444  0873               	movf	rn487x_PrintIndicatorCharacters@messageType,w
 19434     1445  1D03               	btfss	3,2
 19435     1446  2C48               	goto	u10021
 19436     1447  2C49               	goto	u10020
 19437     1448                     u10021:
 19438     1448  2C55               	goto	l13249
 19439     1449                     u10020:
 19440     1449                     l13247:
 19441                           
 19442                           ;mcc_generated_files/rn487x/rn487x_interface.c: 345:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 346:         uart[UART_CDC].Write('[');
 19443     1449  305B               	movlw	91
 19444     144A  00F1               	movwf	EUSART2_Write@txData
 19445     144B  3002               	movlw	low ((_uart+2)| (0+32768))
 19446     144C  0084               	movwf	4
 19447     144D  3098               	movlw	high ((_uart+2)| (0+32768))
 19448     144E  0085               	movwf	5
 19449     144F  3F01               	moviw [1]fsr0
 19450     1450  008A               	movwf	10
 19451     1451  3F00               	moviw [0]fsr0
 19452     1452  000A               	callw
 19453     1453  3194               	pagesel	$
 19454                           
 19455                           ;mcc_generated_files/rn487x/rn487x_interface.c: 347:     }
 19456     1454  2C65               	goto	l1467
 19457     1455                     l13249:
 19458     1455  0373               	decf	rn487x_PrintIndicatorCharacters@messageType,w
 19459     1456  1D03               	btfss	3,2
 19460     1457  2C59               	goto	u10031
 19461     1458  2C5A               	goto	u10030
 19462     1459                     u10031:
 19463     1459  2C65               	goto	l1467
 19464     145A                     u10030:
 19465     145A                     l13251:
 19466                           
 19467                           ;mcc_generated_files/rn487x/rn487x_interface.c: 349:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 350:         uart[UART_CDC].Write(']');
 19468     145A  305D               	movlw	93
 19469     145B  00F1               	movwf	EUSART2_Write@txData
 19470     145C  3002               	movlw	low ((_uart+2)| (0+32768))
 19471     145D  0084               	movwf	4
 19472     145E  3098               	movlw	high ((_uart+2)| (0+32768))
 19473     145F  0085               	movwf	5
 19474     1460  3F01               	moviw [1]fsr0
 19475     1461  008A               	movwf	10
 19476     1462  3F00               	moviw [0]fsr0
 19477     1463  000A               	callw
 19478     1464  3194               	pagesel	$
 19479     1465                     l1467:	
 19480                           ;mcc_generated_files/rn487x/rn487x_interface.c: 351:     }
 19481                           
 19482     1465  0008               	return
 19483     1466                     __end_of_rn487x_PrintIndicatorCharacters:
 19484                           
 19485                           	psect	text55
 19486     1ED6                     __ptext55:	
 19487 ;; *************** function _RN487X_IsConnected *****************
 19488 ;; Defined at:
 19489 ;;		line 243 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19490 ;; Parameters:    Size  Location     Type
 19491 ;;		None
 19492 ;; Auto vars:     Size  Location     Type
 19493 ;;		None
 19494 ;; Return value:  Size  Location     Type
 19495 ;;                  1    wreg      _Bool 
 19496 ;; Registers used:
 19497 ;;		wreg
 19498 ;; Tracked objects:
 19499 ;;		On entry : 0/0
 19500 ;;		On exit  : 0/0
 19501 ;;		Unchanged: 0/0
 19502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19507 ;;Total ram usage:        0 bytes
 19508 ;; Hardware stack levels used: 1
 19509 ;; Hardware stack levels required when called: 4
 19510 ;; This function calls:
 19511 ;;		Nothing
 19512 ;; This function is called by:
 19513 ;;		_main
 19514 ;;		_RN487X_Example_TransparentUart
 19515 ;; This function uses a non-reentrant model
 19516 ;;
 19517                           
 19518     1ED6                     _RN487X_IsConnected:	
 19519                           ;psect for function _RN487X_IsConnected
 19520                           
 19521     1ED6                     l14521:	
 19522                           ;incstack = 0
 19523                           ; Regs used in _RN487X_IsConnected: [wreg]
 19524                           
 19525                           
 19526                           ;mcc_generated_files/rn487x/rn487x_interface.c: 245:     return connected;
 19527     1ED6  0140               	movlb	0	; select bank0
 19528     1ED7  0868               	movf	_connected,w
 19529     1ED8                     l1408:
 19530     1ED8  0008               	return
 19531     1ED9                     __end_of_RN487X_IsConnected:
 19532                           
 19533                           	psect	text56
 19534     07A1                     __ptext56:	
 19535 ;; *************** function _RN487X_Init *****************
 19536 ;; Defined at:
 19537 ;;		line 54 in file "mcc_generated_files/rn487x/rn487x.c"
 19538 ;; Parameters:    Size  Location     Type
 19539 ;;		None
 19540 ;; Auto vars:     Size  Location     Type
 19541 ;;		None
 19542 ;; Return value:  Size  Location     Type
 19543 ;;                  1    wreg      _Bool 
 19544 ;; Registers used:
 19545 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19546 ;; Tracked objects:
 19547 ;;		On entry : 0/0
 19548 ;;		On exit  : 0/0
 19549 ;;		Unchanged: 0/0
 19550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19555 ;;Total ram usage:        0 bytes
 19556 ;; Hardware stack levels used: 1
 19557 ;; Hardware stack levels required when called: 6
 19558 ;; This function calls:
 19559 ;;		_RN487X_Delay
 19560 ;;		_RN487X_IndicateRx
 19561 ;;		_RN487X_Read@rn487x_interface$F1869
 19562 ;;		_RN487X_Reset
 19563 ;;		_RN487X_SetSystemMode
 19564 ;;		_RN487X_is_rx_ready
 19565 ;; This function is called by:
 19566 ;;		_main
 19567 ;; This function uses a non-reentrant model
 19568 ;;
 19569                           
 19570     07A1                     _RN487X_Init:	
 19571                           ;psect for function _RN487X_Init
 19572                           
 19573     07A1                     l14535:	
 19574                           ;incstack = 0
 19575                           ; Regs used in _RN487X_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19576                           
 19577                           
 19578                           ;mcc_generated_files/rn487x/rn487x.c: 57:     RN487X.SetSystemMode(APPLICATION_MODE);
 19579     07A1  01F1               	clrf	RN487X_SetSystemMode@mode
 19580     07A2  0AF1               	incf	RN487X_SetSystemMode@mode,f
 19581     07A3  3074               	movlw	low ((_RN487X+12)| (0+32768))
 19582     07A4  0084               	movwf	4
 19583     07A5  3098               	movlw	high ((_RN487X+12)| (0+32768))
 19584     07A6  0085               	movwf	5
 19585     07A7  3F01               	moviw [1]fsr0
 19586     07A8  008A               	movwf	10
 19587     07A9  3F00               	moviw [0]fsr0
 19588     07AA  000A               	callw
 19589     07AB  3187               	pagesel	$
 19590                           
 19591                           ;mcc_generated_files/rn487x/rn487x.c: 59:     RN487X.ResetModule(1);
 19592     07AC  01F1               	clrf	RN487X_Reset@value
 19593     07AD  0AF1               	incf	RN487X_Reset@value,f
 19594     07AE  3072               	movlw	low ((_RN487X+10)| (0+32768))
 19595     07AF  0084               	movwf	4
 19596     07B0  3098               	movlw	high ((_RN487X+10)| (0+32768))
 19597     07B1  0085               	movwf	5
 19598     07B2  3F01               	moviw [1]fsr0
 19599     07B3  008A               	movwf	10
 19600     07B4  3F00               	moviw [0]fsr0
 19601     07B5  000A               	callw
 19602     07B6  3187               	pagesel	$
 19603                           
 19604                           ;mcc_generated_files/rn487x/rn487x.c: 61:     RN487X.DelayMs((1));
 19605     07B7  3001               	movlw	1
 19606     07B8  00F4               	movwf	RN487X_Delay@delayCount
 19607     07B9  3000               	movlw	0
 19608     07BA  00F5               	movwf	RN487X_Delay@delayCount+1
 19609     07BB  3076               	movlw	low ((_RN487X+14)| (0+32768))
 19610     07BC  0084               	movwf	4
 19611     07BD  3098               	movlw	high ((_RN487X+14)| (0+32768))
 19612     07BE  0085               	movwf	5
 19613     07BF  3F01               	moviw [1]fsr0
 19614     07C0  008A               	movwf	10
 19615     07C1  3F00               	moviw [0]fsr0
 19616     07C2  000A               	callw
 19617     07C3  3187               	pagesel	$
 19618                           
 19619                           ;mcc_generated_files/rn487x/rn487x.c: 63:     RN487X.ResetModule(0);
 19620     07C4  01F1               	clrf	RN487X_Reset@value
 19621     07C5  3072               	movlw	low ((_RN487X+10)| (0+32768))
 19622     07C6  0084               	movwf	4
 19623     07C7  3098               	movlw	high ((_RN487X+10)| (0+32768))
 19624     07C8  0085               	movwf	5
 19625     07C9  3F01               	moviw [1]fsr0
 19626     07CA  008A               	movwf	10
 19627     07CB  3F00               	moviw [0]fsr0
 19628     07CC  000A               	callw
 19629     07CD  3187               	pagesel	$
 19630                           
 19631                           ;mcc_generated_files/rn487x/rn487x.c: 66:     RN487X.IndicateRx(1);
 19632     07CE  01F1               	clrf	RN487X_IndicateRx@value
 19633     07CF  0AF1               	incf	RN487X_IndicateRx@value,f
 19634     07D0  3070               	movlw	low ((_RN487X+8)| (0+32768))
 19635     07D1  0084               	movwf	4
 19636     07D2  3098               	movlw	high ((_RN487X+8)| (0+32768))
 19637     07D3  0085               	movwf	5
 19638     07D4  3F01               	moviw [1]fsr0
 19639     07D5  008A               	movwf	10
 19640     07D6  3F00               	moviw [0]fsr0
 19641     07D7  000A               	callw
 19642     07D8  3187               	pagesel	$
 19643                           
 19644                           ;mcc_generated_files/rn487x/rn487x.c: 68:     RN487X.DelayMs((200));
 19645     07D9  30C8               	movlw	200
 19646     07DA  00F4               	movwf	RN487X_Delay@delayCount
 19647     07DB  3000               	movlw	0
 19648     07DC  00F5               	movwf	RN487X_Delay@delayCount+1
 19649     07DD  3076               	movlw	low ((_RN487X+14)| (0+32768))
 19650     07DE  0084               	movwf	4
 19651     07DF  3098               	movlw	high ((_RN487X+14)| (0+32768))
 19652     07E0  0085               	movwf	5
 19653     07E1  3F01               	moviw [1]fsr0
 19654     07E2  008A               	movwf	10
 19655     07E3  3F00               	moviw [0]fsr0
 19656     07E4  000A               	callw
 19657     07E5  3187               	pagesel	$
 19658                           
 19659                           ;mcc_generated_files/rn487x/rn487x.c: 71:     while (RN487X.DataReady())
 19660     07E6  2FF0               	goto	l14539
 19661     07E7                     l14537:
 19662                           
 19663                           ;mcc_generated_files/rn487x/rn487x.c: 72:     {;mcc_generated_files/rn487x/rn487x.c: 73:
      +                                   RN487X.Read();
 19664     07E7  306A               	movlw	low ((_RN487X+2)| (0+32768))
 19665     07E8  0084               	movwf	4
 19666     07E9  3098               	movlw	high ((_RN487X+2)| (0+32768))
 19667     07EA  0085               	movwf	5
 19668     07EB  3F01               	moviw [1]fsr0
 19669     07EC  008A               	movwf	10
 19670     07ED  3F00               	moviw [0]fsr0
 19671     07EE  000A               	callw
 19672     07EF  3187               	pagesel	$
 19673     07F0                     l14539:
 19674                           
 19675                           ;mcc_generated_files/rn487x/rn487x.c: 71:     while (RN487X.DataReady())
 19676     07F0  306E               	movlw	low ((_RN487X+6)| (0+32768))
 19677     07F1  0084               	movwf	4
 19678     07F2  3098               	movlw	high ((_RN487X+6)| (0+32768))
 19679     07F3  0085               	movwf	5
 19680     07F4  3F01               	moviw [1]fsr0
 19681     07F5  008A               	movwf	10
 19682     07F6  3F00               	moviw [0]fsr0
 19683     07F7  000A               	callw
 19684     07F8  3187               	pagesel	$
 19685     07F9  3A00               	xorlw	0
 19686     07FA  1D03               	skipz
 19687     07FB  2FFD               	goto	u11681
 19688     07FC  2FFE               	goto	u11680
 19689     07FD                     u11681:
 19690     07FD  2FE7               	goto	l14537
 19691     07FE                     u11680:
 19692     07FE                     l1504:
 19693     07FE  0008               	return
 19694     07FF                     __end_of_RN487X_Init:
 19695                           
 19696                           	psect	text57
 19697     1005                     __ptext57:	
 19698 ;; *************** function _RN487X_is_rx_ready *****************
 19699 ;; Defined at:
 19700 ;;		line 267 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19701 ;; Parameters:    Size  Location     Type
 19702 ;;		None
 19703 ;; Auto vars:     Size  Location     Type
 19704 ;;		None
 19705 ;; Return value:  Size  Location     Type
 19706 ;;                  1    wreg      _Bool 
 19707 ;; Registers used:
 19708 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 19709 ;; Tracked objects:
 19710 ;;		On entry : 0/0
 19711 ;;		On exit  : 0/0
 19712 ;;		Unchanged: 0/0
 19713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19718 ;;Total ram usage:        0 bytes
 19719 ;; Hardware stack levels used: 1
 19720 ;; Hardware stack levels required when called: 5
 19721 ;; This function calls:
 19722 ;;		_EUSART1_is_rx_ready
 19723 ;;		_EUSART2_is_rx_ready
 19724 ;; This function is called by:
 19725 ;;		_RN487X_DataReady
 19726 ;;		_RN487X_Init
 19727 ;; This function uses a non-reentrant model
 19728 ;;
 19729                           
 19730     1005                     _RN487X_is_rx_ready:	
 19731                           ;psect for function _RN487X_is_rx_ready
 19732                           
 19733     1005                     l13463:	
 19734                           ;incstack = 0
 19735                           ; Regs used in _RN487X_is_rx_ready: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 19736                           
 19737                           
 19738                           ;mcc_generated_files/rn487x/rn487x_interface.c: 269:     return uart[UART_BLE].DataReady
      +                          ();
 19739     1005  301A               	movlw	low ((_uart+26)| (0+32768))
 19740     1006  0084               	movwf	4
 19741     1007  3098               	movlw	high ((_uart+26)| (0+32768))
 19742     1008  0085               	movwf	5
 19743     1009  3F01               	moviw [1]fsr0
 19744     100A  008A               	movwf	10
 19745     100B  3F00               	moviw [0]fsr0
 19746     100C  000A               	callw
 19747     100D  3190               	pagesel	$
 19748     100E                     l1420:
 19749     100E  0008               	return
 19750     100F                     __end_of_RN487X_is_rx_ready:
 19751                           
 19752                           	psect	text58
 19753     1FDA                     __ptext58:	
 19754 ;; *************** function _EUSART1_is_rx_ready *****************
 19755 ;; Defined at:
 19756 ;;		line 137 in file "mcc_generated_files/eusart1.c"
 19757 ;; Parameters:    Size  Location     Type
 19758 ;;		None
 19759 ;; Auto vars:     Size  Location     Type
 19760 ;;		None
 19761 ;; Return value:  Size  Location     Type
 19762 ;;                  1    wreg      _Bool 
 19763 ;; Registers used:
 19764 ;;		wreg, status,2, status,0
 19765 ;; Tracked objects:
 19766 ;;		On entry : 0/0
 19767 ;;		On exit  : 0/0
 19768 ;;		Unchanged: 0/0
 19769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19774 ;;Total ram usage:        0 bytes
 19775 ;; Hardware stack levels used: 1
 19776 ;; Hardware stack levels required when called: 4
 19777 ;; This function calls:
 19778 ;;		Nothing
 19779 ;; This function is called by:
 19780 ;;		_RN487X_is_rx_ready
 19781 ;;		_RN487X_Example_TransparentUart
 19782 ;;		_main
 19783 ;; This function uses a non-reentrant model
 19784 ;;
 19785                           
 19786     1FDA                     _EUSART1_is_rx_ready:	
 19787                           ;psect for function _EUSART1_is_rx_ready
 19788                           
 19789     1FDA                     l13383:	
 19790                           ;incstack = 0
 19791                           ; Regs used in _EUSART1_is_rx_ready: [wreg+status,2+status,0]
 19792                           
 19793                           
 19794                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
 19795     1FDA  0140               	movlb	0	; select bank0
 19796     1FDB  0858               	movf	_eusart1RxCount,w	;volatile
 19797     1FDC  1D03               	btfss	3,2
 19798     1FDD  2FDF               	goto	u10231
 19799     1FDE  2FE1               	goto	u10230
 19800     1FDF                     u10231:
 19801     1FDF  3001               	movlw	1
 19802     1FE0  2FE2               	goto	u10240
 19803     1FE1                     u10230:
 19804     1FE1  3000               	movlw	0
 19805     1FE2                     u10240:
 19806     1FE2                     l1826:
 19807     1FE2  0008               	return
 19808     1FE3                     __end_of_EUSART1_is_rx_ready:
 19809                           
 19810                           	psect	text59
 19811     1FD1                     __ptext59:	
 19812 ;; *************** function _EUSART2_is_rx_ready *****************
 19813 ;; Defined at:
 19814 ;;		line 137 in file "mcc_generated_files/eusart2.c"
 19815 ;; Parameters:    Size  Location     Type
 19816 ;;		None
 19817 ;; Auto vars:     Size  Location     Type
 19818 ;;		None
 19819 ;; Return value:  Size  Location     Type
 19820 ;;                  1    wreg      _Bool 
 19821 ;; Registers used:
 19822 ;;		wreg, status,2, status,0
 19823 ;; Tracked objects:
 19824 ;;		On entry : 0/0
 19825 ;;		On exit  : 0/0
 19826 ;;		Unchanged: 0/0
 19827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19832 ;;Total ram usage:        0 bytes
 19833 ;; Hardware stack levels used: 1
 19834 ;; Hardware stack levels required when called: 4
 19835 ;; This function calls:
 19836 ;;		Nothing
 19837 ;; This function is called by:
 19838 ;;		_RN487X_is_rx_ready
 19839 ;;		_RN487X_Example_TransparentUart
 19840 ;;		_main
 19841 ;; This function uses a non-reentrant model
 19842 ;;
 19843                           
 19844     1FD1                     _EUSART2_is_rx_ready:	
 19845                           ;psect for function _EUSART2_is_rx_ready
 19846                           
 19847     1FD1                     l13379:	
 19848                           ;incstack = 0
 19849                           ; Regs used in _EUSART2_is_rx_ready: [wreg+status,2+status,0]
 19850                           
 19851                           
 19852                           ;mcc_generated_files/eusart2.c: 139:     return (eusart2RxCount ? 1 : 0);
 19853     1FD1  0140               	movlb	0	; select bank0
 19854     1FD2  085F               	movf	_eusart2RxCount,w	;volatile
 19855     1FD3  1D03               	btfss	3,2
 19856     1FD4  2FD6               	goto	u10211
 19857     1FD5  2FD8               	goto	u10210
 19858     1FD6                     u10211:
 19859     1FD6  3001               	movlw	1
 19860     1FD7  2FD9               	goto	u10220
 19861     1FD8                     u10210:
 19862     1FD8  3000               	movlw	0
 19863     1FD9                     u10220:
 19864     1FD9                     l1682:
 19865     1FD9  0008               	return
 19866     1FDA                     __end_of_EUSART2_is_rx_ready:
 19867                           
 19868                           	psect	text60
 19869     1072                     __ptext60:	
 19870 ;; *************** function _RN487X_SetSystemMode *****************
 19871 ;; Defined at:
 19872 ;;		line 301 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19873 ;; Parameters:    Size  Location     Type
 19874 ;;  mode            1    1[COMMON] enum E204
 19875 ;; Auto vars:     Size  Location     Type
 19876 ;;		None
 19877 ;; Return value:  Size  Location     Type
 19878 ;;                  1    wreg      void 
 19879 ;; Registers used:
 19880 ;;		wreg, status,2, status,0
 19881 ;; Tracked objects:
 19882 ;;		On entry : 0/0
 19883 ;;		On exit  : 0/0
 19884 ;;		Unchanged: 0/0
 19885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19886 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19889 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19890 ;;Total ram usage:        1 bytes
 19891 ;; Hardware stack levels used: 1
 19892 ;; Hardware stack levels required when called: 4
 19893 ;; This function calls:
 19894 ;;		Nothing
 19895 ;; This function is called by:
 19896 ;;		_RN487X_Init
 19897 ;; This function uses a non-reentrant model
 19898 ;;
 19899                           
 19900     1072                     _RN487X_SetSystemMode:	
 19901                           ;psect for function _RN487X_SetSystemMode
 19902                           
 19903     1072                     l1444:	
 19904                           ;incstack = 0
 19905                           ; Regs used in _RN487X_SetSystemMode: [wreg+status,2+status,0]
 19906                           ;mcc_generated_files/rn487x/rn487x_interface.c: 301: static void RN487X_SetSystemMode(RN
      +                          487X_SYSTEM_MODES_t mode);mcc_generated_files/rn487x/rn487x_interface.c: 302: {;mcc_gene
      +                          rated_files/rn487x/rn487x_interface.c: 304:     do { TRISAbits.TRISA7 = 0; } while(0);
 19907                           
 19908     1072  0140               	movlb	0	; select bank0
 19909     1073  1392               	bcf	18,7	;volatile
 19910     1074                     l14117:
 19911                           
 19912                           ;mcc_generated_files/rn487x/rn487x_interface.c: 306:     if (APPLICATION_MODE == mode)
 19913     1074  0371               	decf	RN487X_SetSystemMode@mode,w
 19914     1075  1D03               	btfss	3,2
 19915     1076  2878               	goto	u11421
 19916     1077  2879               	goto	u11420
 19917     1078                     u11421:
 19918     1078  287B               	goto	l1450
 19919     1079                     u11420:
 19920     1079                     l1447:	
 19921                           ;mcc_generated_files/rn487x/rn487x_interface.c: 307:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 308:         do { LATAbits.LATA7 = 1; } while(0);
 19922                           
 19923     1079  1798               	bsf	24,7	;volatile
 19924     107A  287C               	goto	l1452
 19925     107B                     l1450:	
 19926                           ;mcc_generated_files/rn487x/rn487x_interface.c: 311:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 312:         do { LATAbits.LATA7 = 0; } while(0);
 19927                           
 19928     107B  1398               	bcf	24,7	;volatile
 19929     107C                     l1452:	
 19930                           ;mcc_generated_files/rn487x/rn487x_interface.c: 316:     do { TRISAbits.TRISA7 = 1; } wh
      +                          ile(0);
 19931                           
 19932     107C  1792               	bsf	18,7	;volatile
 19933     107D                     l1454:
 19934     107D  0008               	return
 19935     107E                     __end_of_RN487X_SetSystemMode:
 19936                           
 19937                           	psect	text61
 19938     1044                     __ptext61:	
 19939 ;; *************** function _RN487X_Reset *****************
 19940 ;; Defined at:
 19941 ;;		line 277 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 19942 ;; Parameters:    Size  Location     Type
 19943 ;;  value           1    1[COMMON] _Bool 
 19944 ;; Auto vars:     Size  Location     Type
 19945 ;;		None
 19946 ;; Return value:  Size  Location     Type
 19947 ;;                  1    wreg      void 
 19948 ;; Registers used:
 19949 ;;		wreg, status,2, status,0
 19950 ;; Tracked objects:
 19951 ;;		On entry : 0/0
 19952 ;;		On exit  : 0/0
 19953 ;;		Unchanged: 0/0
 19954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19955 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19958 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19959 ;;Total ram usage:        1 bytes
 19960 ;; Hardware stack levels used: 1
 19961 ;; Hardware stack levels required when called: 4
 19962 ;; This function calls:
 19963 ;;		Nothing
 19964 ;; This function is called by:
 19965 ;;		_RN487X_Init
 19966 ;; This function uses a non-reentrant model
 19967 ;;
 19968                           
 19969     1044                     _RN487X_Reset:	
 19970                           ;psect for function _RN487X_Reset
 19971                           
 19972     1044                     l14113:	
 19973                           ;incstack = 0
 19974                           ; Regs used in _RN487X_Reset: [wreg+status,2+status,0]
 19975                           
 19976                           
 19977                           ;mcc_generated_files/rn487x/rn487x_interface.c: 277: static void RN487X_Reset(_Bool valu
      +                          e);mcc_generated_files/rn487x/rn487x_interface.c: 278: {;mcc_generated_files/rn487x/rn48
      +                          7x_interface.c: 279:     if (1 == value)
 19978     1044  0371               	decf	RN487X_Reset@value,w
 19979     1045  1D03               	btfss	3,2
 19980     1046  2848               	goto	u11401
 19981     1047  2849               	goto	u11400
 19982     1048                     u11401:
 19983     1048  284C               	goto	l1430
 19984     1049                     u11400:
 19985     1049                     l1427:	
 19986                           ;mcc_generated_files/rn487x/rn487x_interface.c: 280:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 281:         do { LATAbits.LATA0 = 0; } while(0);
 19987                           
 19988     1049  0140               	movlb	0	; select bank0
 19989     104A  1018               	bcf	24,0	;volatile
 19990     104B  284E               	goto	l1432
 19991     104C                     l1430:	
 19992                           ;mcc_generated_files/rn487x/rn487x_interface.c: 284:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 285:         do { LATAbits.LATA0 = 1; } while(0);
 19993                           
 19994     104C  0140               	movlb	0	; select bank0
 19995     104D  1418               	bsf	24,0	;volatile
 19996     104E                     l1432:
 19997     104E  0008               	return
 19998     104F                     __end_of_RN487X_Reset:
 19999                           
 20000                           	psect	text62
 20001     1039                     __ptext62:	
 20002 ;; *************** function _RN487X_IndicateRx *****************
 20003 ;; Defined at:
 20004 ;;		line 289 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 20005 ;; Parameters:    Size  Location     Type
 20006 ;;  value           1    1[COMMON] _Bool 
 20007 ;; Auto vars:     Size  Location     Type
 20008 ;;		None
 20009 ;; Return value:  Size  Location     Type
 20010 ;;                  1    wreg      void 
 20011 ;; Registers used:
 20012 ;;		wreg, status,2, status,0
 20013 ;; Tracked objects:
 20014 ;;		On entry : 0/0
 20015 ;;		On exit  : 0/0
 20016 ;;		Unchanged: 0/0
 20017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20018 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20021 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20022 ;;Total ram usage:        1 bytes
 20023 ;; Hardware stack levels used: 1
 20024 ;; Hardware stack levels required when called: 4
 20025 ;; This function calls:
 20026 ;;		Nothing
 20027 ;; This function is called by:
 20028 ;;		_RN487X_Init
 20029 ;; This function uses a non-reentrant model
 20030 ;;
 20031                           
 20032     1039                     _RN487X_IndicateRx:	
 20033                           ;psect for function _RN487X_IndicateRx
 20034                           
 20035     1039                     l14115:	
 20036                           ;incstack = 0
 20037                           ; Regs used in _RN487X_IndicateRx: [wreg+status,2+status,0]
 20038                           
 20039                           
 20040                           ;mcc_generated_files/rn487x/rn487x_interface.c: 289: static void RN487X_IndicateRx(_Bool
      +                           value);mcc_generated_files/rn487x/rn487x_interface.c: 290: {;mcc_generated_files/rn487x
      +                          /rn487x_interface.c: 291:     if (1 == value)
 20041     1039  0371               	decf	RN487X_IndicateRx@value,w
 20042     103A  1D03               	btfss	3,2
 20043     103B  283D               	goto	u11411
 20044     103C  283E               	goto	u11410
 20045     103D                     u11411:
 20046     103D  2841               	goto	l1439
 20047     103E                     u11410:
 20048     103E                     l1436:	
 20049                           ;mcc_generated_files/rn487x/rn487x_interface.c: 292:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 293:         do { LATCbits.LATC6 = 0; } while(0);
 20050                           
 20051     103E  0140               	movlb	0	; select bank0
 20052     103F  131A               	bcf	26,6	;volatile
 20053     1040  2843               	goto	l1441
 20054     1041                     l1439:	
 20055                           ;mcc_generated_files/rn487x/rn487x_interface.c: 296:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 297:         do { LATCbits.LATC6 = 1; } while(0);
 20056                           
 20057     1041  0140               	movlb	0	; select bank0
 20058     1042  171A               	bsf	26,6	;volatile
 20059     1043                     l1441:
 20060     1043  0008               	return
 20061     1044                     __end_of_RN487X_IndicateRx:
 20062                           
 20063                           	psect	text63
 20064     1225                     __ptext63:	
 20065 ;; *************** function _LIGHTBLUE_TemperatureSensor *****************
 20066 ;; Defined at:
 20067 ;;		line 311 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20068 ;; Parameters:    Size  Location     Type
 20069 ;;		None
 20070 ;; Auto vars:     Size  Location     Type
 20071 ;;  payload         5   12[BANK0 ] unsigned char [5]
 20072 ;;  temperature     2   17[BANK0 ] short 
 20073 ;;  read            1    0        unsigned char 
 20074 ;; Return value:  Size  Location     Type
 20075 ;;                  1    wreg      void 
 20076 ;; Registers used:
 20077 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20078 ;; Tracked objects:
 20079 ;;		On entry : 0/0
 20080 ;;		On exit  : 0/0
 20081 ;;		Unchanged: 0/0
 20082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20084 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20086 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20087 ;;Total ram usage:        7 bytes
 20088 ;; Hardware stack levels used: 1
 20089 ;; Hardware stack levels required when called: 14
 20090 ;; This function calls:
 20091 ;;		_LIGHTBLUE_SendPacket
 20092 ;;		_LIGHTBLUE_SplitWord
 20093 ;;		_readRegister
 20094 ;; This function is called by:
 20095 ;;		_main
 20096 ;; This function uses a non-reentrant model
 20097 ;;
 20098                           
 20099     1225                     _LIGHTBLUE_TemperatureSensor:	
 20100                           ;psect for function _LIGHTBLUE_TemperatureSensor
 20101                           
 20102     1225                     l14279:	
 20103                           ;incstack = 0
 20104                           ; Regs used in _LIGHTBLUE_TemperatureSensor: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 20105                           
 20106                           
 20107                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 312:     char payload[5];;mcc_gene
      +                          rated_files/application/LIGHTBLUE_service.c: 313:     int16_t temperature;;mcc_generated
      +                          _files/application/LIGHTBLUE_service.c: 314:     uint8_t read;;mcc_generated_files/appli
      +                          cation/LIGHTBLUE_service.c: 316:     *payload = '\0';
 20108     1225  0140               	movlb	0	; select bank0
 20109     1226  01AC               	clrf	LIGHTBLUE_TemperatureSensor@payload
 20110     1227                     l14281:
 20111     1227  300E               	movlw	14
 20112     1228  3190  205A  3192   	fcall	_readRegister
 20113     122B                     l14283:
 20114                           
 20115                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 324:     LIGHTBLUE_SplitWord(paylo
      +                          ad, temperature);
 20116     122B  0140               	movlb	0	; select bank0
 20117     122C  0832               	movf	LIGHTBLUE_TemperatureSensor@temperature+1,w
 20118     122D  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 20119     122E  0831               	movf	LIGHTBLUE_TemperatureSensor@temperature,w
 20120     122F  00F9               	movwf	LIGHTBLUE_SplitWord@value
 20121     1230  302C               	movlw	(low (LIGHTBLUE_TemperatureSensor@payload| 0))& (0+255)
 20122     1231  3190  20A4  3192   	fcall	_LIGHTBLUE_SplitWord
 20123     1234                     l14285:
 20124                           
 20125                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 326:     LIGHTBLUE_SendPacket(TEMP
      +                          ERATURE_DATA_ID, payload);
 20126     1234  302C               	movlw	(low (LIGHTBLUE_TemperatureSensor@payload| 0))& (0+255)
 20127     1235  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 20128     1236  3054               	movlw	84
 20129     1237  318F  2774  3192   	fcall	_LIGHTBLUE_SendPacket
 20130     123A                     l124:
 20131     123A  0008               	return
 20132     123B                     __end_of_LIGHTBLUE_TemperatureSensor:
 20133                           
 20134                           	psect	text64
 20135     065C                     __ptext64:	
 20136 ;; *************** function _LIGHTBLUE_SendSerialData *****************
 20137 ;; Defined at:
 20138 ;;		line 388 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20139 ;; Parameters:    Size  Location     Type
 20140 ;;  serialData      1    wreg     PTR unsigned char 
 20141 ;;		 -> lightBlueSerial(80), 
 20142 ;; Auto vars:     Size  Location     Type
 20143 ;;  serialData      1    9[COMMON] PTR unsigned char 
 20144 ;;		 -> lightBlueSerial(80), 
 20145 ;;  length          1    8[COMMON] unsigned char 
 20146 ;; Return value:  Size  Location     Type
 20147 ;;                  1    wreg      void 
 20148 ;; Registers used:
 20149 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20150 ;; Tracked objects:
 20151 ;;		On entry : 0/0
 20152 ;;		On exit  : 0/0
 20153 ;;		Unchanged: 0/0
 20154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20156 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20157 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20158 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20159 ;;Total ram usage:        3 bytes
 20160 ;; Hardware stack levels used: 1
 20161 ;; Hardware stack levels required when called: 6
 20162 ;; This function calls:
 20163 ;;		_RN487X_Write
 20164 ;;		_strlen
 20165 ;; This function is called by:
 20166 ;;		_main
 20167 ;; This function uses a non-reentrant model
 20168 ;;
 20169                           
 20170     065C                     _LIGHTBLUE_SendSerialData:	
 20171                           ;psect for function _LIGHTBLUE_SendSerialData
 20172                           
 20173                           
 20174                           ;incstack = 0
 20175                           ; Regs used in _LIGHTBLUE_SendSerialData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20176                           ;LIGHTBLUE_SendSerialData@serialData stored from wreg
 20177     065C  00F9               	movwf	LIGHTBLUE_SendSerialData@serialData
 20178     065D                     l14333:
 20179                           
 20180                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 389:     uint8_t length = strlen(s
      +                          erialData) * 2;
 20181     065D  0879               	movf	LIGHTBLUE_SendSerialData@serialData,w
 20182     065E  00F1               	movwf	strlen@s
 20183     065F  3002               	movlw	2
 20184     0660  00F2               	movwf	strlen@s+1
 20185     0661  3192  22AF  3186   	fcall	_strlen
 20186     0664  0871               	movf	?_strlen,w
 20187     0665  0709               	addwf	9,w
 20188     0666  00F8               	movwf	LIGHTBLUE_SendSerialData@length
 20189     0667                     l14335:
 20190                           
 20191                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 391:     RN487X.Write(('['));
 20192     0667  305B               	movlw	91
 20193     0668  00F6               	movwf	RN487X_Write@txData
 20194     0669  3068               	movlw	low (_RN487X| (0+32768))
 20195     066A  0084               	movwf	4
 20196     066B  3098               	movlw	high (_RN487X| (0+32768))
 20197     066C  0085               	movwf	5
 20198     066D  3F01               	moviw [1]fsr0
 20199     066E  008A               	movwf	10
 20200     066F  3F00               	moviw [0]fsr0
 20201     0670  000A               	callw
 20202     0671  3186               	pagesel	$
 20203     0672                     l14337:
 20204                           
 20205                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 392:     RN487X.Write((_hex[(seque
      +                          nceNumber++) & 0xF]));
 20206     0672  0140               	movlb	0	; select bank0
 20207     0673  086C               	movf	_sequenceNumber,w
 20208     0674  390F               	andlw	15
 20209     0675  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 20210     0676  0086               	movwf	6
 20211     0677  3001               	movlw	1	; select bank2/3
 20212     0678  0087               	movwf	7
 20213     0679  0801               	movf	1,w
 20214     067A  00F6               	movwf	RN487X_Write@txData
 20215     067B  3068               	movlw	low (_RN487X| (0+32768))
 20216     067C  0084               	movwf	4
 20217     067D  3098               	movlw	high (_RN487X| (0+32768))
 20218     067E  0085               	movwf	5
 20219     067F  3F01               	moviw [1]fsr0
 20220     0680  008A               	movwf	10
 20221     0681  3F00               	moviw [0]fsr0
 20222     0682  000A               	callw
 20223     0683  3186               	pagesel	$
 20224     0684                     l14339:
 20225     0684  3001               	movlw	1
 20226     0685  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 20227     0686  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 20228     0687  0140               	movlb	0	; select bank0
 20229     0688  07EC               	addwf	_sequenceNumber,f
 20230     0689                     l14341:
 20231                           
 20232                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 393:     RN487X.Write(SERIAL_DATA_
      +                          ID);
 20233     0689  3053               	movlw	83
 20234     068A  00F6               	movwf	RN487X_Write@txData
 20235     068B  3068               	movlw	low (_RN487X| (0+32768))
 20236     068C  0084               	movwf	4
 20237     068D  3098               	movlw	high (_RN487X| (0+32768))
 20238     068E  0085               	movwf	5
 20239     068F  3F01               	moviw [1]fsr0
 20240     0690  008A               	movwf	10
 20241     0691  3F00               	moviw [0]fsr0
 20242     0692  000A               	callw
 20243     0693  3186               	pagesel	$
 20244     0694                     l14343:
 20245                           
 20246                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 394:     RN487X.Write((_hex[(lengt
      +                          h >> 4) & 0xF]));
 20247     0694  0878               	movf	LIGHTBLUE_SendSerialData@length,w
 20248     0695  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 20249     0696  3004               	movlw	4
 20250     0697                     u11445:
 20251     0697  36F7               	lsrf	??_LIGHTBLUE_SendSerialData,f
 20252     0698  0B89               	decfsz	9,f
 20253     0699  2E97               	goto	u11445
 20254     069A  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 20255     069B  390F               	andlw	15
 20256     069C  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 20257     069D  0086               	movwf	6
 20258     069E  3001               	movlw	1	; select bank2/3
 20259     069F  0087               	movwf	7
 20260     06A0  0801               	movf	1,w
 20261     06A1  00F6               	movwf	RN487X_Write@txData
 20262     06A2  3068               	movlw	low (_RN487X| (0+32768))
 20263     06A3  0084               	movwf	4
 20264     06A4  3098               	movlw	high (_RN487X| (0+32768))
 20265     06A5  0085               	movwf	5
 20266     06A6  3F01               	moviw [1]fsr0
 20267     06A7  008A               	movwf	10
 20268     06A8  3F00               	moviw [0]fsr0
 20269     06A9  000A               	callw
 20270     06AA  3186               	pagesel	$
 20271     06AB                     l14345:
 20272                           
 20273                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 395:     RN487X.Write((_hex[(lengt
      +                          h) & 0xF]));
 20274     06AB  0878               	movf	LIGHTBLUE_SendSerialData@length,w
 20275     06AC  390F               	andlw	15
 20276     06AD  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 20277     06AE  0086               	movwf	6
 20278     06AF  3001               	movlw	1	; select bank2/3
 20279     06B0  0087               	movwf	7
 20280     06B1  0801               	movf	1,w
 20281     06B2  00F6               	movwf	RN487X_Write@txData
 20282     06B3  3068               	movlw	low (_RN487X| (0+32768))
 20283     06B4  0084               	movwf	4
 20284     06B5  3098               	movlw	high (_RN487X| (0+32768))
 20285     06B6  0085               	movwf	5
 20286     06B7  3F01               	moviw [1]fsr0
 20287     06B8  008A               	movwf	10
 20288     06B9  3F00               	moviw [0]fsr0
 20289     06BA  000A               	callw
 20290     06BB  3186               	pagesel	$
 20291                           
 20292                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 396:     while (*serialData) {
 20293     06BC  2EF1               	goto	l14351
 20294     06BD                     l14347:
 20295                           
 20296                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 397:         RN487X.Write((_hex[(*
      +                          serialData >> 4) & 0xF]));
 20297     06BD  0879               	movf	LIGHTBLUE_SendSerialData@serialData,w
 20298     06BE  0086               	movwf	6
 20299     06BF  3002               	movlw	2	; select bank4/5
 20300     06C0  0087               	movwf	7
 20301     06C1  0801               	movf	1,w
 20302     06C2  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 20303     06C3  3004               	movlw	4
 20304     06C4                     u11455:
 20305     06C4  36F7               	lsrf	??_LIGHTBLUE_SendSerialData,f
 20306     06C5  0B89               	decfsz	9,f
 20307     06C6  2EC4               	goto	u11455
 20308     06C7  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 20309     06C8  390F               	andlw	15
 20310     06C9  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 20311     06CA  0086               	movwf	6
 20312     06CB  3001               	movlw	1	; select bank2/3
 20313     06CC  0087               	movwf	7
 20314     06CD  0801               	movf	1,w
 20315     06CE  00F6               	movwf	RN487X_Write@txData
 20316     06CF  3068               	movlw	low (_RN487X| (0+32768))
 20317     06D0  0084               	movwf	4
 20318     06D1  3098               	movlw	high (_RN487X| (0+32768))
 20319     06D2  0085               	movwf	5
 20320     06D3  3F01               	moviw [1]fsr0
 20321     06D4  008A               	movwf	10
 20322     06D5  3F00               	moviw [0]fsr0
 20323     06D6  000A               	callw
 20324     06D7  3186               	pagesel	$
 20325                           
 20326                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 398:         RN487X.Write((_hex[(*
      +                          serialData++) & 0xF]));
 20327     06D8  0879               	movf	LIGHTBLUE_SendSerialData@serialData,w
 20328     06D9  0086               	movwf	6
 20329     06DA  3002               	movlw	2	; select bank4/5
 20330     06DB  0087               	movwf	7
 20331     06DC  0801               	movf	1,w
 20332     06DD  390F               	andlw	15
 20333     06DE  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 20334     06DF  0086               	movwf	6
 20335     06E0  3001               	movlw	1	; select bank2/3
 20336     06E1  0087               	movwf	7
 20337     06E2  0801               	movf	1,w
 20338     06E3  00F6               	movwf	RN487X_Write@txData
 20339     06E4  3068               	movlw	low (_RN487X| (0+32768))
 20340     06E5  0084               	movwf	4
 20341     06E6  3098               	movlw	high (_RN487X| (0+32768))
 20342     06E7  0085               	movwf	5
 20343     06E8  3F01               	moviw [1]fsr0
 20344     06E9  008A               	movwf	10
 20345     06EA  3F00               	moviw [0]fsr0
 20346     06EB  000A               	callw
 20347     06EC  3186               	pagesel	$
 20348     06ED                     l14349:
 20349     06ED  3001               	movlw	1
 20350     06EE  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 20351     06EF  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 20352     06F0  07F9               	addwf	LIGHTBLUE_SendSerialData@serialData,f
 20353     06F1                     l14351:
 20354                           
 20355                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 396:     while (*serialData) {
 20356     06F1  0879               	movf	LIGHTBLUE_SendSerialData@serialData,w
 20357     06F2  0086               	movwf	6
 20358     06F3  3002               	movlw	2	; select bank4/5
 20359     06F4  0087               	movwf	7
 20360     06F5  0801               	movf	1,w
 20361     06F6  1D03               	btfss	3,2
 20362     06F7  2EF9               	goto	u11461
 20363     06F8  2EFA               	goto	u11460
 20364     06F9                     u11461:
 20365     06F9  2EBD               	goto	l14347
 20366     06FA                     u11460:
 20367     06FA                     l14353:
 20368                           
 20369                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 400:     RN487X.Write((']'));
 20370     06FA  305D               	movlw	93
 20371     06FB  00F6               	movwf	RN487X_Write@txData
 20372     06FC  3068               	movlw	low (_RN487X| (0+32768))
 20373     06FD  0084               	movwf	4
 20374     06FE  3098               	movlw	high (_RN487X| (0+32768))
 20375     06FF  0085               	movwf	5
 20376     0700  3F01               	moviw [1]fsr0
 20377     0701  008A               	movwf	10
 20378     0702  3F00               	moviw [0]fsr0
 20379     0703  000A               	callw
 20380     0704  3186               	pagesel	$
 20381     0705                     l145:
 20382     0705  0008               	return
 20383     0706                     __end_of_LIGHTBLUE_SendSerialData:
 20384                           
 20385                           	psect	text65
 20386     1761                     __ptext65:	
 20387 ;; *************** function _LIGHTBLUE_SendProtocolVersion *****************
 20388 ;; Defined at:
 20389 ;;		line 373 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20390 ;; Parameters:    Size  Location     Type
 20391 ;;		None
 20392 ;; Auto vars:     Size  Location     Type
 20393 ;;  payload        19    2[BANK0 ] unsigned char [19]
 20394 ;;  dataIndex       1   22[BANK0 ] unsigned char 
 20395 ;;  value           1   21[BANK0 ] unsigned char 
 20396 ;; Return value:  Size  Location     Type
 20397 ;;                  1    wreg      void 
 20398 ;; Registers used:
 20399 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20400 ;; Tracked objects:
 20401 ;;		On entry : 0/0
 20402 ;;		On exit  : 0/0
 20403 ;;		Unchanged: 0/0
 20404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20406 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20407 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20408 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20409 ;;Total ram usage:       23 bytes
 20410 ;; Hardware stack levels used: 1
 20411 ;; Hardware stack levels required when called: 7
 20412 ;; This function calls:
 20413 ;;		_LIGHTBLUE_SendPacket
 20414 ;;		_LIGHTBLUE_SplitByte
 20415 ;;		_strlen
 20416 ;; This function is called by:
 20417 ;;		_main
 20418 ;; This function uses a non-reentrant model
 20419 ;;
 20420                           
 20421     1761                     _LIGHTBLUE_SendProtocolVersion:	
 20422                           ;psect for function _LIGHTBLUE_SendProtocolVersion
 20423                           
 20424     1761                     l14321:	
 20425                           ;incstack = 0
 20426                           ; Regs used in _LIGHTBLUE_SendProtocolVersion: [wreg-fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 20427                           
 20428                           
 20429                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 374:     char payload[19];;mcc_gen
      +                          erated_files/application/LIGHTBLUE_service.c: 375:     uint8_t value;;mcc_generated_file
      +                          s/application/LIGHTBLUE_service.c: 376:     uint8_t dataIndex;;mcc_generated_files/appli
      +                          cation/LIGHTBLUE_service.c: 378:     *payload = '\0';
 20430     1761  0140               	movlb	0	; select bank0
 20431     1762  01A2               	clrf	LIGHTBLUE_SendProtocolVersion@payload
 20432                           
 20433                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 380:     for (dataIndex = 0; dataI
      +                          ndex < strlen(protocol_version_number); dataIndex++) {
 20434     1763  01B6               	clrf	LIGHTBLUE_SendProtocolVersion@dataIndex
 20435     1764  2F79               	goto	l14329
 20436     1765                     l14323:
 20437                           
 20438                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 381:         value = protocol_vers
      +                          ion_number[dataIndex];
 20439     1765  0836               	movf	LIGHTBLUE_SendProtocolVersion@dataIndex,w
 20440     1766  3E00               	addlw	low (STR_1| (0+32768))
 20441     1767  0084               	movwf	4
 20442     1768  30A0               	movlw	high (STR_1| (0+32768))
 20443     1769  1803               	skipnc
 20444     176A  3E01               	addlw	1
 20445     176B  0085               	movwf	5
 20446     176C  0800               	movf	0,w	;code access
 20447     176D  00B5               	movwf	LIGHTBLUE_SendProtocolVersion@value
 20448     176E                     l14325:
 20449                           
 20450                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 382:         LIGHTBLUE_SplitByte(p
      +                          ayload, value);
 20451     176E  0835               	movf	LIGHTBLUE_SendProtocolVersion@value,w
 20452     176F  00F6               	movwf	LIGHTBLUE_SplitByte@value
 20453     1770  3022               	movlw	(low (LIGHTBLUE_SendProtocolVersion@payload| 0))& (0+255)
 20454     1771  3196  26FD  3197   	fcall	_LIGHTBLUE_SplitByte
 20455     1774                     l14327:
 20456                           
 20457                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 383:     }
 20458     1774  3001               	movlw	1
 20459     1775  0140               	movlb	0	; select bank0
 20460     1776  00A0               	movwf	??_LIGHTBLUE_SendProtocolVersion
 20461     1777  0820               	movf	??_LIGHTBLUE_SendProtocolVersion,w
 20462     1778  07B6               	addwf	LIGHTBLUE_SendProtocolVersion@dataIndex,f
 20463     1779                     l14329:
 20464     1779  3000               	movlw	low (STR_1| (0+32768))
 20465     177A  00F1               	movwf	strlen@s
 20466     177B  30A0               	movlw	high (STR_1| (0+32768))
 20467     177C  00F2               	movwf	strlen@s+1
 20468     177D  3192  22AF  3197   	fcall	_strlen
 20469     1780  0140               	movlb	0	; select bank0
 20470     1781  0836               	movf	LIGHTBLUE_SendProtocolVersion@dataIndex,w
 20471     1782  00A0               	movwf	??_LIGHTBLUE_SendProtocolVersion
 20472     1783  01A1               	clrf	??_LIGHTBLUE_SendProtocolVersion+1
 20473     1784  0872               	movf	?_strlen+1,w
 20474     1785  0221               	subwf	??_LIGHTBLUE_SendProtocolVersion+1,w
 20475     1786  1D03               	skipz
 20476     1787  2F8A               	goto	u11435
 20477     1788  0871               	movf	?_strlen,w
 20478     1789  0220               	subwf	??_LIGHTBLUE_SendProtocolVersion,w
 20479     178A                     u11435:
 20480     178A  1C03               	skipc
 20481     178B  2F8D               	goto	u11431
 20482     178C  2F8E               	goto	u11430
 20483     178D                     u11431:
 20484     178D  2F65               	goto	l14323
 20485     178E                     u11430:
 20486     178E                     l14331:
 20487                           
 20488                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 385:     LIGHTBLUE_SendPacket(PROT
      +                          OCOL_VERSION_ID, payload);
 20489     178E  3022               	movlw	(low (LIGHTBLUE_SendProtocolVersion@payload| 0))& (0+255)
 20490     178F  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 20491     1790  3056               	movlw	86
 20492     1791  318F  2774  3197   	fcall	_LIGHTBLUE_SendPacket
 20493     1794                     l139:
 20494     1794  0008               	return
 20495     1795                     __end_of_LIGHTBLUE_SendProtocolVersion:
 20496                           
 20497                           	psect	text66
 20498     11AA                     __ptext66:	
 20499 ;; *************** function _LIGHTBLUE_PushButton *****************
 20500 ;; Defined at:
 20501 ;;		line 345 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20502 ;; Parameters:    Size  Location     Type
 20503 ;;		None
 20504 ;; Auto vars:     Size  Location     Type
 20505 ;;  payload         3    1[BANK0 ] unsigned char [3]
 20506 ;;  button          1    0[BANK0 ] unsigned char 
 20507 ;; Return value:  Size  Location     Type
 20508 ;;                  1    wreg      void 
 20509 ;; Registers used:
 20510 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20511 ;; Tracked objects:
 20512 ;;		On entry : 0/0
 20513 ;;		On exit  : 0/0
 20514 ;;		Unchanged: 0/0
 20515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20517 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20519 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20520 ;;Total ram usage:        4 bytes
 20521 ;; Hardware stack levels used: 1
 20522 ;; Hardware stack levels required when called: 7
 20523 ;; This function calls:
 20524 ;;		_LIGHTBLUE_GetButtonValue
 20525 ;;		_LIGHTBLUE_SendPacket
 20526 ;;		_LIGHTBLUE_SplitByte
 20527 ;; This function is called by:
 20528 ;;		_main
 20529 ;; This function uses a non-reentrant model
 20530 ;;
 20531                           
 20532     11AA                     _LIGHTBLUE_PushButton:	
 20533                           ;psect for function _LIGHTBLUE_PushButton
 20534                           
 20535     11AA                     l14299:	
 20536                           ;incstack = 0
 20537                           ; Regs used in _LIGHTBLUE_PushButton: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20538                           
 20539                           
 20540                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 346:     char payload[3];;mcc_gene
      +                          rated_files/application/LIGHTBLUE_service.c: 347:     uint8_t button = LIGHTBLUE_GetButt
      +                          onValue();
 20541     11AA  319F  274D  3191   	fcall	_LIGHTBLUE_GetButtonValue
 20542     11AD  0140               	movlb	0	; select bank0
 20543     11AE  00A0               	movwf	LIGHTBLUE_PushButton@button
 20544     11AF                     l14301:
 20545                           
 20546                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 349:     *payload = '\0';
 20547     11AF  01A1               	clrf	LIGHTBLUE_PushButton@payload
 20548     11B0                     l14303:
 20549                           
 20550                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 350:     LIGHTBLUE_SplitByte(paylo
      +                          ad, button);
 20551     11B0  0820               	movf	LIGHTBLUE_PushButton@button,w
 20552     11B1  00F6               	movwf	LIGHTBLUE_SplitByte@value
 20553     11B2  3021               	movlw	(low (LIGHTBLUE_PushButton@payload| 0))& (0+255)
 20554     11B3  3196  26FD  3191   	fcall	_LIGHTBLUE_SplitByte
 20555     11B6                     l14305:
 20556                           
 20557                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 352:     LIGHTBLUE_SendPacket(BUTT
      +                          ON_STATE_ID, payload);
 20558     11B6  3021               	movlw	(low (LIGHTBLUE_PushButton@payload| 0))& (0+255)
 20559     11B7  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 20560     11B8  3050               	movlw	80
 20561     11B9  318F  2774  3191   	fcall	_LIGHTBLUE_SendPacket
 20562     11BC                     l130:
 20563     11BC  0008               	return
 20564     11BD                     __end_of_LIGHTBLUE_PushButton:
 20565                           
 20566                           	psect	text67
 20567     1F4D                     __ptext67:	
 20568 ;; *************** function _LIGHTBLUE_GetButtonValue *****************
 20569 ;; Defined at:
 20570 ;;		line 478 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20571 ;; Parameters:    Size  Location     Type
 20572 ;;		None
 20573 ;; Auto vars:     Size  Location     Type
 20574 ;;		None
 20575 ;; Return value:  Size  Location     Type
 20576 ;;                  1    wreg      unsigned char 
 20577 ;; Registers used:
 20578 ;;		wreg, status,2, status,0
 20579 ;; Tracked objects:
 20580 ;;		On entry : 0/0
 20581 ;;		On exit  : 0/0
 20582 ;;		Unchanged: 0/0
 20583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20588 ;;Total ram usage:        0 bytes
 20589 ;; Hardware stack levels used: 1
 20590 ;; Hardware stack levels required when called: 4
 20591 ;; This function calls:
 20592 ;;		Nothing
 20593 ;; This function is called by:
 20594 ;;		_LIGHTBLUE_PushButton
 20595 ;; This function uses a non-reentrant model
 20596 ;;
 20597                           
 20598     1F4D                     _LIGHTBLUE_GetButtonValue:	
 20599                           ;psect for function _LIGHTBLUE_GetButtonValue
 20600                           
 20601     1F4D                     l13569:	
 20602                           ;incstack = 0
 20603                           ; Regs used in _LIGHTBLUE_GetButtonValue: [wreg+status,2+status,0]
 20604                           
 20605                           
 20606                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 479:     return (0x01) - PORTAbits
      +                          .RA7;
 20607     1F4D  0140               	movlb	0	; select bank0
 20608     1F4E  0D0C               	rlf	12,w	;volatile
 20609     1F4F  0D0C               	rlf	12,w	;volatile
 20610     1F50  3901               	andlw	1
 20611     1F51  3C01               	sublw	1
 20612     1F52                     l202:
 20613     1F52  0008               	return
 20614     1F53                     __end_of_LIGHTBLUE_GetButtonValue:
 20615                           
 20616                           	psect	text68
 20617     0590                     __ptext68:	
 20618 ;; *************** function _LIGHTBLUE_ParseIncomingPacket *****************
 20619 ;; Defined at:
 20620 ;;		line 403 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20621 ;; Parameters:    Size  Location     Type
 20622 ;;  receivedByte    1    wreg     unsigned char 
 20623 ;; Auto vars:     Size  Location     Type
 20624 ;;  receivedByte    1   19[BANK0 ] unsigned char 
 20625 ;; Return value:  Size  Location     Type
 20626 ;;                  1    wreg      void 
 20627 ;; Registers used:
 20628 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20629 ;; Tracked objects:
 20630 ;;		On entry : 0/0
 20631 ;;		On exit  : 0/0
 20632 ;;		Unchanged: 0/0
 20633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20635 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20636 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20637 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20638 ;;Total ram usage:        9 bytes
 20639 ;; Hardware stack levels used: 1
 20640 ;; Hardware stack levels required when called: 11
 20641 ;; This function calls:
 20642 ;;		_LIGHTBLUE_PerformAction
 20643 ;; This function is called by:
 20644 ;;		_main
 20645 ;; This function uses a non-reentrant model
 20646 ;;
 20647                           
 20648     0590                     _LIGHTBLUE_ParseIncomingPacket:	
 20649                           ;psect for function _LIGHTBLUE_ParseIncomingPacket
 20650                           
 20651                           
 20652                           ;incstack = 0
 20653                           ; Regs used in _LIGHTBLUE_ParseIncomingPacket: [wreg-fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 20654                           ;LIGHTBLUE_ParseIncomingPacket@receivedByte stored from wreg
 20655     0590  0140               	movlb	0	; select bank0
 20656     0591  00B3               	movwf	LIGHTBLUE_ParseIncomingPacket@receivedByte
 20657     0592                     l14355:
 20658                           
 20659                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 404:     static PACKET_PARSER_STAT
      +                          E_t parserState = IDLE;;mcc_generated_files/application/LIGHTBLUE_service.c: 405:     st
      +                          atic uint8_t length = 0;;mcc_generated_files/application/LIGHTBLUE_service.c: 406:     s
      +                          tatic uint16_t data = 0;;mcc_generated_files/application/LIGHTBLUE_service.c: 407:     s
      +                          tatic char packetID = '\0';;mcc_generated_files/application/LIGHTBLUE_service.c: 409:   
      +                            switch (parserState) {
 20660     0592  2E3C               	goto	l14415
 20661     0593                     l14357:
 20662                           
 20663                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 412:             parserState = PAC
      +                          KET_ID;
 20664     0593  3002               	movlw	2
 20665     0594  00EB               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 20666                           
 20667                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 413:             break;
 20668     0595  2E5B               	goto	l187
 20669     0596                     l14359:
 20670                           
 20671                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 415:             packetID = receiv
      +                          edByte;
 20672     0596  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20673     0597  00E9               	movwf	LIGHTBLUE_ParseIncomingPacket@packetID
 20674                           
 20675                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 416:             parserState = PAY
      +                          LOAD_SIZE_0;
 20676     0598  3003               	movlw	3
 20677     0599  00EB               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 20678                           
 20679                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 417:             break;
 20680     059A  2E5B               	goto	l187
 20681     059B                     l14361:
 20682                           
 20683                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 419:             length = (((recei
      +                          vedByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 10);
 20684     059B  303A               	movlw	58
 20685     059C  0233               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20686     059D  1C03               	skipc
 20687     059E  2DA0               	goto	u11471
 20688     059F  2DA1               	goto	u11470
 20689     05A0                     u11471:
 20690     05A0  2DAA               	goto	l14365
 20691     05A1                     u11470:
 20692     05A1                     l14363:
 20693     05A1  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20694     05A2  395F               	andlw	95
 20695     05A3  3EC9               	addlw	201
 20696     05A4  00AD               	movwf	_LIGHTBLUE_ParseIncomingPacket$489
 20697     05A5  30FF               	movlw	255
 20698     05A6  1803               	skipnc
 20699     05A7  3000               	movlw	0
 20700     05A8  00AE               	movwf	_LIGHTBLUE_ParseIncomingPacket$489+1
 20701     05A9  2DB1               	goto	l164
 20702     05AA                     l14365:
 20703     05AA  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20704     05AB  3ED0               	addlw	208
 20705     05AC  00AD               	movwf	_LIGHTBLUE_ParseIncomingPacket$489
 20706     05AD  30FF               	movlw	255
 20707     05AE  1803               	skipnc
 20708     05AF  3000               	movlw	0
 20709     05B0  00AE               	movwf	_LIGHTBLUE_ParseIncomingPacket$489+1
 20710     05B1                     l164:
 20711     05B1  082D               	movf	_LIGHTBLUE_ParseIncomingPacket$489,w
 20712     05B2  00EA               	movwf	LIGHTBLUE_ParseIncomingPacket@length
 20713                           
 20714                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 420:             parserState = PAY
      +                          LOAD_SIZE_1;
 20715     05B3  3004               	movlw	4
 20716     05B4  00EB               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 20717                           
 20718                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 421:             break;
 20719     05B5  2E5B               	goto	l187
 20720     05B6                     l14367:
 20721                           
 20722                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 423:             length = (length 
      +                          << 4) + (((receivedByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 
      +                          10);
 20723     05B6  303A               	movlw	58
 20724     05B7  0233               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20725     05B8  1C03               	skipc
 20726     05B9  2DBB               	goto	u11481
 20727     05BA  2DBC               	goto	u11480
 20728     05BB                     u11481:
 20729     05BB  2DC5               	goto	l14371
 20730     05BC                     u11480:
 20731     05BC                     l14369:
 20732     05BC  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20733     05BD  395F               	andlw	95
 20734     05BE  3EC9               	addlw	201
 20735     05BF  00AF               	movwf	_LIGHTBLUE_ParseIncomingPacket$490
 20736     05C0  30FF               	movlw	255
 20737     05C1  1803               	skipnc
 20738     05C2  3000               	movlw	0
 20739     05C3  00B0               	movwf	_LIGHTBLUE_ParseIncomingPacket$490+1
 20740     05C4  2DCC               	goto	l14373
 20741     05C5                     l14371:
 20742     05C5  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20743     05C6  3ED0               	addlw	208
 20744     05C7  00AF               	movwf	_LIGHTBLUE_ParseIncomingPacket$490
 20745     05C8  30FF               	movlw	255
 20746     05C9  1803               	skipnc
 20747     05CA  3000               	movlw	0
 20748     05CB  00B0               	movwf	_LIGHTBLUE_ParseIncomingPacket$490+1
 20749     05CC                     l14373:
 20750     05CC  086A               	movf	LIGHTBLUE_ParseIncomingPacket@length,w
 20751     05CD  00AB               	movwf	??_LIGHTBLUE_ParseIncomingPacket
 20752     05CE  3003               	movlw	3
 20753     05CF                     u11495:
 20754     05CF  35AB               	lslf	??_LIGHTBLUE_ParseIncomingPacket,f
 20755     05D0  3EFF               	addlw	-1
 20756     05D1  1D03               	skipz
 20757     05D2  2DCF               	goto	u11495
 20758     05D3  352B               	lslf	??_LIGHTBLUE_ParseIncomingPacket,w
 20759     05D4  072F               	addwf	_LIGHTBLUE_ParseIncomingPacket$490,w
 20760     05D5  00EA               	movwf	LIGHTBLUE_ParseIncomingPacket@length
 20761     05D6                     l14375:
 20762                           
 20763                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 424:             parserState = PAY
      +                          LOAD_0;
 20764     05D6  3005               	movlw	5
 20765     05D7  00EB               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 20766                           
 20767                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 425:             break;
 20768     05D8  2E5B               	goto	l187
 20769     05D9                     l14377:
 20770                           
 20771                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 427:             data = (((receive
      +                          dByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 10);
 20772     05D9  303A               	movlw	58
 20773     05DA  0233               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20774     05DB  1C03               	skipc
 20775     05DC  2DDE               	goto	u11501
 20776     05DD  2DDF               	goto	u11500
 20777     05DE                     u11501:
 20778     05DE  2DE8               	goto	l14381
 20779     05DF                     u11500:
 20780     05DF                     l14379:
 20781     05DF  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20782     05E0  395F               	andlw	95
 20783     05E1  3EC9               	addlw	201
 20784     05E2  00D2               	movwf	LIGHTBLUE_ParseIncomingPacket@data
 20785     05E3  30FF               	movlw	255
 20786     05E4  1803               	skipnc
 20787     05E5  3000               	movlw	0
 20788     05E6  00D3               	movwf	LIGHTBLUE_ParseIncomingPacket@data+1
 20789     05E7  2DEF               	goto	l14383
 20790     05E8                     l14381:
 20791     05E8  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20792     05E9  3ED0               	addlw	208
 20793     05EA  00D2               	movwf	LIGHTBLUE_ParseIncomingPacket@data
 20794     05EB  30FF               	movlw	255
 20795     05EC  1803               	skipnc
 20796     05ED  3000               	movlw	0
 20797     05EE  00D3               	movwf	LIGHTBLUE_ParseIncomingPacket@data+1
 20798     05EF                     l14383:
 20799                           
 20800                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 428:             length--;
 20801     05EF  3001               	movlw	1
 20802     05F0  02EA               	subwf	LIGHTBLUE_ParseIncomingPacket@length,f
 20803     05F1                     l14385:
 20804                           
 20805                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 429:             if (length == 0) 
      +                          {
 20806     05F1  086A               	movf	LIGHTBLUE_ParseIncomingPacket@length,w
 20807     05F2  1D03               	btfss	3,2
 20808     05F3  2DF5               	goto	u11511
 20809     05F4  2DF6               	goto	u11510
 20810     05F5                     u11511:
 20811     05F5  2DF8               	goto	l14389
 20812     05F6                     u11510:
 20813     05F6                     l14387:
 20814                           
 20815                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 430:                 parserState =
      +                           IDLE;
 20816     05F6  01EB               	clrf	LIGHTBLUE_ParseIncomingPacket@parserState
 20817                           
 20818                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 431:             } else {
 20819     05F7  2E5B               	goto	l187
 20820     05F8                     l14389:
 20821                           
 20822                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 432:                 parserState =
      +                           PAYLOAD_1;
 20823     05F8  3006               	movlw	6
 20824     05F9  00EB               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 20825     05FA  2E5B               	goto	l187
 20826     05FB                     l14391:
 20827                           
 20828                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 436:             data = (data << 4
      +                          ) + (((receivedByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 10);
 20829     05FB  303A               	movlw	58
 20830     05FC  0233               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20831     05FD  1C03               	skipc
 20832     05FE  2E00               	goto	u11521
 20833     05FF  2E01               	goto	u11520
 20834     0600                     u11521:
 20835     0600  2E0A               	goto	l14395
 20836     0601                     u11520:
 20837     0601                     l14393:
 20838     0601  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20839     0602  395F               	andlw	95
 20840     0603  3EC9               	addlw	201
 20841     0604  00B1               	movwf	_LIGHTBLUE_ParseIncomingPacket$491
 20842     0605  30FF               	movlw	255
 20843     0606  1803               	skipnc
 20844     0607  3000               	movlw	0
 20845     0608  00B2               	movwf	_LIGHTBLUE_ParseIncomingPacket$491+1
 20846     0609  2E11               	goto	l14397
 20847     060A                     l14395:
 20848     060A  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20849     060B  3ED0               	addlw	208
 20850     060C  00B1               	movwf	_LIGHTBLUE_ParseIncomingPacket$491
 20851     060D  30FF               	movlw	255
 20852     060E  1803               	skipnc
 20853     060F  3000               	movlw	0
 20854     0610  00B2               	movwf	_LIGHTBLUE_ParseIncomingPacket$491+1
 20855     0611                     l14397:
 20856     0611  0853               	movf	LIGHTBLUE_ParseIncomingPacket@data+1,w
 20857     0612  00AC               	movwf	??_LIGHTBLUE_ParseIncomingPacket+1
 20858     0613  0852               	movf	LIGHTBLUE_ParseIncomingPacket@data,w
 20859     0614  00AB               	movwf	??_LIGHTBLUE_ParseIncomingPacket
 20860     0615  0EAB               	swapf	??_LIGHTBLUE_ParseIncomingPacket,f
 20861     0616  0EAC               	swapf	??_LIGHTBLUE_ParseIncomingPacket+1,f
 20862     0617  30F0               	movlw	240
 20863     0618  05AC               	andwf	??_LIGHTBLUE_ParseIncomingPacket+1,f
 20864     0619  082B               	movf	??_LIGHTBLUE_ParseIncomingPacket,w
 20865     061A  390F               	andlw	15
 20866     061B  04AC               	iorwf	??_LIGHTBLUE_ParseIncomingPacket+1,f
 20867     061C  30F0               	movlw	240
 20868     061D  05AB               	andwf	??_LIGHTBLUE_ParseIncomingPacket,f
 20869     061E  0831               	movf	_LIGHTBLUE_ParseIncomingPacket$491,w
 20870     061F  072B               	addwf	??_LIGHTBLUE_ParseIncomingPacket,w
 20871     0620  00D2               	movwf	LIGHTBLUE_ParseIncomingPacket@data
 20872     0621  0832               	movf	_LIGHTBLUE_ParseIncomingPacket$491+1,w
 20873     0622  3D2C               	addwfc	??_LIGHTBLUE_ParseIncomingPacket+1,w
 20874     0623  00D3               	movwf	LIGHTBLUE_ParseIncomingPacket@data+1
 20875     0624                     l14399:
 20876                           
 20877                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 437:             LIGHTBLUE_Perform
      +                          Action(packetID, data);
 20878     0624  0852               	movf	LIGHTBLUE_ParseIncomingPacket@data,w
 20879     0625  00A7               	movwf	LIGHTBLUE_PerformAction@data
 20880     0626  0869               	movf	LIGHTBLUE_ParseIncomingPacket@packetID,w
 20881     0627  3188  2017  3185   	fcall	_LIGHTBLUE_PerformAction
 20882     062A                     l14401:
 20883                           
 20884                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 438:             length--;
 20885     062A  3001               	movlw	1
 20886     062B  0140               	movlb	0	; select bank0
 20887     062C  02EA               	subwf	LIGHTBLUE_ParseIncomingPacket@length,f
 20888     062D                     l14403:
 20889                           
 20890                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 439:             if (length == 0) 
      +                          {
 20891     062D  086A               	movf	LIGHTBLUE_ParseIncomingPacket@length,w
 20892     062E  1D03               	btfss	3,2
 20893     062F  2E31               	goto	u11531
 20894     0630  2E32               	goto	u11530
 20895     0631                     u11531:
 20896     0631  2DD6               	goto	l14375
 20897     0632                     u11530:
 20898     0632  2DF6               	goto	l14387
 20899     0633                     l14409:
 20900                           
 20901                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 447:             if (receivedByte 
      +                          == ('[')) {
 20902     0633  305B               	movlw	91
 20903     0634  0633               	xorwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 20904     0635  1D03               	btfss	3,2
 20905     0636  2E38               	goto	u11541
 20906     0637  2E39               	goto	u11540
 20907     0638                     u11541:
 20908     0638  2E5B               	goto	l187
 20909     0639                     u11540:
 20910     0639                     l14411:
 20911                           
 20912                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 448:                 parserState =
      +                           SEQUENCE_NUMBER;
 20913     0639  01EB               	clrf	LIGHTBLUE_ParseIncomingPacket@parserState
 20914     063A  0AEB               	incf	LIGHTBLUE_ParseIncomingPacket@parserState,f
 20915     063B  2E5B               	goto	l187
 20916     063C                     l14415:
 20917     063C  086B               	movf	LIGHTBLUE_ParseIncomingPacket@parserState,w
 20918     063D  00AB               	movwf	??_LIGHTBLUE_ParseIncomingPacket
 20919     063E  01AC               	clrf	??_LIGHTBLUE_ParseIncomingPacket+1
 20920                           
 20921                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20922                           ; Switch size 1, requested type "simple"
 20923                           ; Number of cases is 1, Range of values is 0 to 0
 20924                           ; switch strategies available:
 20925                           ; Name         Instructions Cycles
 20926                           ; simple_byte            4     3 (average)
 20927                           ; direct_byte            8     6 (fixed)
 20928                           ; jumptable            260     6 (fixed)
 20929                           ;	Chosen strategy is simple_byte
 20930     063F  082C               	movf	??_LIGHTBLUE_ParseIncomingPacket+1,w
 20931     0640  3A00               	xorlw	0	; case 0
 20932     0641  1903               	skipnz
 20933     0642  2E44               	goto	l16603
 20934     0643  2E33               	goto	l14409
 20935     0644                     l16603:
 20936                           
 20937                           ; Switch size 1, requested type "simple"
 20938                           ; Number of cases is 7, Range of values is 0 to 6
 20939                           ; switch strategies available:
 20940                           ; Name         Instructions Cycles
 20941                           ; direct_byte           20     6 (fixed)
 20942                           ; simple_byte           22    12 (average)
 20943                           ; jumptable            260     6 (fixed)
 20944                           ;	Chosen strategy is simple_byte
 20945     0644  082B               	movf	??_LIGHTBLUE_ParseIncomingPacket,w
 20946     0645  3A00               	xorlw	0	; case 0
 20947     0646  1903               	skipnz
 20948     0647  2E33               	goto	l14409
 20949     0648  3A01               	xorlw	1	; case 1
 20950     0649  1903               	skipnz
 20951     064A  2D93               	goto	l14357
 20952     064B  3A03               	xorlw	3	; case 2
 20953     064C  1903               	skipnz
 20954     064D  2D96               	goto	l14359
 20955     064E  3A01               	xorlw	1	; case 3
 20956     064F  1903               	skipnz
 20957     0650  2D9B               	goto	l14361
 20958     0651  3A07               	xorlw	7	; case 4
 20959     0652  1903               	skipnz
 20960     0653  2DB6               	goto	l14367
 20961     0654  3A01               	xorlw	1	; case 5
 20962     0655  1903               	skipnz
 20963     0656  2DD9               	goto	l14377
 20964     0657  3A03               	xorlw	3	; case 6
 20965     0658  1903               	skipnz
 20966     0659  2DFB               	goto	l14391
 20967     065A  2E33               	goto	l14409
 20968     065B                     l187:
 20969     065B  0008               	return
 20970     065C                     __end_of_LIGHTBLUE_ParseIncomingPacket:
 20971                           
 20972                           	psect	text69
 20973     0817                     __ptext69:	
 20974 ;; *************** function _LIGHTBLUE_PerformAction *****************
 20975 ;; Defined at:
 20976 ;;		line 502 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 20977 ;; Parameters:    Size  Location     Type
 20978 ;;  id              1    wreg     unsigned char 
 20979 ;;  data            1    7[BANK0 ] unsigned char 
 20980 ;; Auto vars:     Size  Location     Type
 20981 ;;  id              1    9[BANK0 ] unsigned char 
 20982 ;;  led             1   10[BANK0 ] unsigned char 
 20983 ;; Return value:  Size  Location     Type
 20984 ;;                  1    wreg      void 
 20985 ;; Registers used:
 20986 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20987 ;; Tracked objects:
 20988 ;;		On entry : 0/0
 20989 ;;		On exit  : 0/0
 20990 ;;		Unchanged: 0/0
 20991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20992 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20993 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20994 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20995 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20996 ;;Total ram usage:        4 bytes
 20997 ;; Hardware stack levels used: 1
 20998 ;; Hardware stack levels required when called: 10
 20999 ;; This function calls:
 21000 ;;		_EUSART1_Write
 21001 ;;		_EUSART2_Write
 21002 ;;		_LIGHTBLUE_SetErrorLedValue
 21003 ;; This function is called by:
 21004 ;;		_LIGHTBLUE_ParseIncomingPacket
 21005 ;; This function uses a non-reentrant model
 21006 ;;
 21007                           
 21008     0817                     _LIGHTBLUE_PerformAction:	
 21009                           ;psect for function _LIGHTBLUE_PerformAction
 21010                           
 21011                           
 21012                           ;incstack = 0
 21013                           ; Regs used in _LIGHTBLUE_PerformAction: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21014                           ;LIGHTBLUE_PerformAction@id stored from wreg
 21015     0817  0140               	movlb	0	; select bank0
 21016     0818  00A9               	movwf	LIGHTBLUE_PerformAction@id
 21017     0819                     l13581:
 21018                           
 21019                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 503:     uint8_t led;;mcc_generate
      +                          d_files/application/LIGHTBLUE_service.c: 505:     switch (id) {
 21020     0819  2846               	goto	l13593
 21021     081A                     l13583:
 21022                           
 21023                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 507:             led = (data >> 4)
      +                           & (0x01);
 21024     081A  0827               	movf	LIGHTBLUE_PerformAction@data,w
 21025     081B  00A8               	movwf	??_LIGHTBLUE_PerformAction
 21026     081C  3004               	movlw	4
 21027     081D                     u10445:
 21028     081D  36A8               	lsrf	??_LIGHTBLUE_PerformAction,f
 21029     081E  0B89               	decfsz	9,f
 21030     081F  281D               	goto	u10445
 21031     0820  0828               	movf	??_LIGHTBLUE_PerformAction,w
 21032     0821  3901               	andlw	1
 21033     0822  00AA               	movwf	LIGHTBLUE_PerformAction@led
 21034                           
 21035                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 508:             if (led == (0x00)
      +                          ) {
 21036     0823  082A               	movf	LIGHTBLUE_PerformAction@led,w
 21037     0824  1D03               	btfss	3,2
 21038     0825  2827               	goto	u10451
 21039     0826  2828               	goto	u10450
 21040     0827                     u10451:
 21041     0827  2830               	goto	l13587
 21042     0828                     u10450:
 21043     0828                     l13585:
 21044                           
 21045                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 509:                 if ((data & (
      +                          0x01)) == (0x00)) {
 21046     0828  1827               	btfsc	LIGHTBLUE_PerformAction@data,0
 21047     0829  282B               	goto	u10461
 21048     082A  282C               	goto	u10460
 21049     082B                     u10461:
 21050     082B  282E               	goto	l224
 21051     082C                     u10460:
 21052     082C                     l221:	
 21053                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 510:                     do { LATA
      +                          bits.LATA5 = 1; } while(0);
 21054                           
 21055     082C  1698               	bsf	24,5	;volatile
 21056     082D  284E               	goto	l230
 21057     082E                     l224:	
 21058                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 512:                     do { LATA
      +                          bits.LATA5 = 0; } while(0);
 21059                           
 21060     082E  1298               	bcf	24,5	;volatile
 21061     082F  284E               	goto	l230
 21062     0830                     l13587:
 21063                           
 21064                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 515:                 LIGHTBLUE_Set
      +                          ErrorLedValue(data & (0x01));
 21065     0830  1827               	btfsc	LIGHTBLUE_PerformAction@data,0
 21066     0831  2833               	goto	u10471
 21067     0832  2835               	goto	u10470
 21068     0833                     u10471:
 21069     0833  3001               	movlw	1
 21070     0834  2836               	goto	u10480
 21071     0835                     u10470:
 21072     0835  3000               	movlw	0
 21073     0836                     u10480:
 21074     0836  3190  20D0  3188   	fcall	_LIGHTBLUE_SetErrorLedValue
 21075     0839  284E               	goto	l230
 21076     083A                     l13589:
 21077                           
 21078                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 519:             uart[UART_CDC].Wr
      +                          ite(data);
 21079     083A  0827               	movf	LIGHTBLUE_PerformAction@data,w
 21080     083B  00F1               	movwf	EUSART2_Write@txData
 21081     083C  3002               	movlw	low ((_uart+2)| (0+32768))
 21082     083D  0084               	movwf	4
 21083     083E  3098               	movlw	high ((_uart+2)| (0+32768))
 21084     083F  0085               	movwf	5
 21085     0840  3F01               	moviw [1]fsr0
 21086     0841  008A               	movwf	10
 21087     0842  3F00               	moviw [0]fsr0
 21088     0843  000A               	callw
 21089     0844  3188               	pagesel	$
 21090                           
 21091                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 520:             break;
 21092     0845  284E               	goto	l230
 21093     0846                     l13593:
 21094     0846  0829               	movf	LIGHTBLUE_PerformAction@id,w
 21095                           
 21096                           ; Switch size 1, requested type "simple"
 21097                           ; Number of cases is 2, Range of values is 76 to 83
 21098                           ; switch strategies available:
 21099                           ; Name         Instructions Cycles
 21100                           ; simple_byte            7     4 (average)
 21101                           ; direct_byte           25     9 (fixed)
 21102                           ; jumptable            263     9 (fixed)
 21103                           ;	Chosen strategy is simple_byte
 21104     0847  3A4C               	xorlw	76	; case 76
 21105     0848  1903               	skipnz
 21106     0849  281A               	goto	l13583
 21107     084A  3A1F               	xorlw	31	; case 83
 21108     084B  1903               	skipnz
 21109     084C  283A               	goto	l13589
 21110     084D  284E               	goto	l230
 21111     084E                     l230:
 21112     084E  0008               	return
 21113     084F                     __end_of_LIGHTBLUE_PerformAction:
 21114                           
 21115                           	psect	text70
 21116     10D0                     __ptext70:	
 21117 ;; *************** function _LIGHTBLUE_SetErrorLedValue *****************
 21118 ;; Defined at:
 21119 ;;		line 490 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 21120 ;; Parameters:    Size  Location     Type
 21121 ;;  value           1    wreg     _Bool 
 21122 ;; Auto vars:     Size  Location     Type
 21123 ;;  value           1    6[BANK0 ] _Bool 
 21124 ;; Return value:  Size  Location     Type
 21125 ;;                  1    wreg      void 
 21126 ;; Registers used:
 21127 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21128 ;; Tracked objects:
 21129 ;;		On entry : 0/0
 21130 ;;		On exit  : 0/0
 21131 ;;		Unchanged: 0/0
 21132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21134 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21135 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21136 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21137 ;;Total ram usage:        2 bytes
 21138 ;; Hardware stack levels used: 1
 21139 ;; Hardware stack levels required when called: 9
 21140 ;; This function calls:
 21141 ;;		_LIGHTBLUE_UpdateErrorLed
 21142 ;; This function is called by:
 21143 ;;		_LIGHTBLUE_PerformAction
 21144 ;; This function uses a non-reentrant model
 21145 ;;
 21146                           
 21147     10D0                     _LIGHTBLUE_SetErrorLedValue:	
 21148                           ;psect for function _LIGHTBLUE_SetErrorLedValue
 21149                           
 21150                           
 21151                           ;incstack = 0
 21152                           ; Regs used in _LIGHTBLUE_SetErrorLedValue: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21153                           ;LIGHTBLUE_SetErrorLedValue@value stored from wreg
 21154     10D0  0140               	movlb	0	; select bank0
 21155     10D1  00A6               	movwf	LIGHTBLUE_SetErrorLedValue@value
 21156     10D2                     l13415:
 21157                           
 21158                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 491:     (bitMap.ioStateBitMap.p2_
      +                          2_state) = (0x01) - value;
 21159     10D2  3001               	movlw	1
 21160     10D3  00FB               	movwf	??_LIGHTBLUE_SetErrorLedValue
 21161     10D4  0826               	movf	LIGHTBLUE_SetErrorLedValue@value,w
 21162     10D5  02FB               	subwf	??_LIGHTBLUE_SetErrorLedValue,f
 21163     10D6  0855               	movf	_bitMap+1,w	;volatile
 21164     10D7  067B               	xorwf	??_LIGHTBLUE_SetErrorLedValue,w
 21165     10D8  39FE               	andlw	-2
 21166     10D9  067B               	xorwf	??_LIGHTBLUE_SetErrorLedValue,w
 21167     10DA  00D5               	movwf	_bitMap+1	;volatile
 21168     10DB                     l13417:
 21169                           
 21170                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 492:     LIGHTBLUE_UpdateErrorLed(
      +                          );
 21171     10DB  3193  2366  3190   	fcall	_LIGHTBLUE_UpdateErrorLed
 21172     10DE                     l211:
 21173     10DE  0008               	return
 21174     10DF                     __end_of_LIGHTBLUE_SetErrorLedValue:
 21175                           
 21176                           	psect	text71
 21177     1366                     __ptext71:	
 21178 ;; *************** function _LIGHTBLUE_UpdateErrorLed *****************
 21179 ;; Defined at:
 21180 ;;		line 495 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 21181 ;; Parameters:    Size  Location     Type
 21182 ;;		None
 21183 ;; Auto vars:     Size  Location     Type
 21184 ;;		None
 21185 ;; Return value:  Size  Location     Type
 21186 ;;                  1    wreg      void 
 21187 ;; Registers used:
 21188 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21189 ;; Tracked objects:
 21190 ;;		On entry : 0/0
 21191 ;;		On exit  : 0/0
 21192 ;;		Unchanged: 0/0
 21193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21198 ;;Total ram usage:        0 bytes
 21199 ;; Hardware stack levels used: 1
 21200 ;; Hardware stack levels required when called: 8
 21201 ;; This function calls:
 21202 ;;		_RN487X_Delay
 21203 ;;		_RN487X_EnterCmdMode
 21204 ;;		_RN487X_EnterDataMode
 21205 ;;		_RN487X_SetOutputs
 21206 ;; This function is called by:
 21207 ;;		_LIGHTBLUE_SetErrorLedValue
 21208 ;; This function uses a non-reentrant model
 21209 ;;
 21210                           
 21211     1366                     _LIGHTBLUE_UpdateErrorLed:	
 21212                           ;psect for function _LIGHTBLUE_UpdateErrorLed
 21213                           
 21214     1366                     l13325:	
 21215                           ;incstack = 0
 21216                           ; Regs used in _LIGHTBLUE_UpdateErrorLed: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21217                           
 21218                           
 21219                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 496:     RN487X_EnterCmdMode();
 21220     1366  3188  2000  3193   	fcall	_RN487X_EnterCmdMode
 21221     1369                     l13327:
 21222                           
 21223                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 497:     RN487X.DelayMs((20));
 21224     1369  3014               	movlw	20
 21225     136A  00F4               	movwf	RN487X_Delay@delayCount
 21226     136B  3000               	movlw	0
 21227     136C  00F5               	movwf	RN487X_Delay@delayCount+1
 21228     136D  3076               	movlw	low ((_RN487X+14)| (0+32768))
 21229     136E  0084               	movwf	4
 21230     136F  3098               	movlw	high ((_RN487X+14)| (0+32768))
 21231     1370  0085               	movwf	5
 21232     1371  3F01               	moviw [1]fsr0
 21233     1372  008A               	movwf	10
 21234     1373  3F00               	moviw [0]fsr0
 21235     1374  000A               	callw
 21236     1375  3193               	pagesel	$
 21237     1376                     l13329:
 21238                           
 21239                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 498:     RN487X_SetOutputs(bitMap)
      +                          ;
 21240     1376  0140               	movlb	0	; select bank0
 21241     1377  0855               	movf	_bitMap+1,w	;volatile
 21242     1378  00A1               	movwf	RN487X_SetOutputs@bitMap+1
 21243     1379  0854               	movf	_bitMap,w	;volatile
 21244     137A  00A0               	movwf	RN487X_SetOutputs@bitMap
 21245     137B  318A  2284  3193   	fcall	_RN487X_SetOutputs
 21246     137E                     l13331:
 21247                           
 21248                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 499:     RN487X_EnterDataMode();
 21249     137E  3193  234B  3193   	fcall	_RN487X_EnterDataMode
 21250     1381                     l214:
 21251     1381  0008               	return
 21252     1382                     __end_of_LIGHTBLUE_UpdateErrorLed:
 21253                           
 21254                           	psect	text72
 21255     0A84                     __ptext72:	
 21256 ;; *************** function _RN487X_SetOutputs *****************
 21257 ;; Defined at:
 21258 ;;		line 223 in file "mcc_generated_files/rn487x/rn487x.c"
 21259 ;; Parameters:    Size  Location     Type
 21260 ;;  bitMap          2    0[BANK0 ] struct .
 21261 ;; Auto vars:     Size  Location     Type
 21262 ;;  stateHighNib    1    5[BANK0 ] unsigned char 
 21263 ;;  ioHighNibble    1    4[BANK0 ] unsigned char 
 21264 ;;  stateLowNibb    1    3[BANK0 ] unsigned char 
 21265 ;;  ioLowNibble     1    2[BANK0 ] unsigned char 
 21266 ;; Return value:  Size  Location     Type
 21267 ;;                  1    wreg      _Bool 
 21268 ;; Registers used:
 21269 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21270 ;; Tracked objects:
 21271 ;;		On entry : 0/0
 21272 ;;		On exit  : 0/0
 21273 ;;		Unchanged: 0/0
 21274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21275 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21276 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21278 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21279 ;;Total ram usage:        6 bytes
 21280 ;; Hardware stack levels used: 1
 21281 ;; Hardware stack levels required when called: 7
 21282 ;; This function calls:
 21283 ;;		_RN487X_ReadDefaultResponse
 21284 ;;		_RN487X_SendCmd
 21285 ;; This function is called by:
 21286 ;;		_LIGHTBLUE_UpdateErrorLed
 21287 ;; This function uses a non-reentrant model
 21288 ;;
 21289                           
 21290     0A84                     _RN487X_SetOutputs:	
 21291                           ;psect for function _RN487X_SetOutputs
 21292                           
 21293     0A84                     l13185:	
 21294                           ;incstack = 0
 21295                           ; Regs used in _RN487X_SetOutputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21296                           
 21297                           
 21298                           ;mcc_generated_files/rn487x/rn487x.c: 226:     char ioLowNibble = '0';
 21299     0A84  3030               	movlw	48
 21300     0A85  0140               	movlb	0	; select bank0
 21301     0A86  00A2               	movwf	RN487X_SetOutputs@ioLowNibble
 21302                           
 21303                           ;mcc_generated_files/rn487x/rn487x.c: 227:     char stateHighNibble = '0';
 21304     0A87  3030               	movlw	48
 21305     0A88  00A5               	movwf	RN487X_SetOutputs@stateHighNibble
 21306                           
 21307                           ;mcc_generated_files/rn487x/rn487x.c: 228:     char stateLowNibble = '0';
 21308     0A89  3030               	movlw	48
 21309     0A8A  00A3               	movwf	RN487X_SetOutputs@stateLowNibble
 21310     0A8B                     l13187:
 21311                           
 21312                           ;mcc_generated_files/rn487x/rn487x.c: 231:     if (bitMap.ioBitMap.p1_3)
 21313     0A8B  1E20               	btfss	RN487X_SetOutputs@bitMap,4
 21314     0A8C  2A8E               	goto	u10001
 21315     0A8D  2A8F               	goto	u10000
 21316     0A8E                     u10001:
 21317     0A8E  2A92               	goto	l13191
 21318     0A8F                     u10000:
 21319     0A8F                     l13189:
 21320                           
 21321                           ;mcc_generated_files/rn487x/rn487x.c: 232:     {;mcc_generated_files/rn487x/rn487x.c: 23
      +                          3:         ioHighNibble = '1';
 21322     0A8F  3031               	movlw	49
 21323     0A90  00A4               	movwf	RN487X_SetOutputs@ioHighNibble
 21324                           
 21325                           ;mcc_generated_files/rn487x/rn487x.c: 234:     }
 21326     0A91  2A94               	goto	l13193
 21327     0A92                     l13191:
 21328                           
 21329                           ;mcc_generated_files/rn487x/rn487x.c: 236:     {;mcc_generated_files/rn487x/rn487x.c: 23
      +                          7:         ioHighNibble = '0';
 21330     0A92  3030               	movlw	48
 21331     0A93  00A4               	movwf	RN487X_SetOutputs@ioHighNibble
 21332     0A94                     l13193:
 21333                           
 21334                           ;mcc_generated_files/rn487x/rn487x.c: 239:     ioLowNibble = ( (0x0F & bitMap.ioBitMap.g
      +                          pioBitMap) + '0');
 21335     0A94  0820               	movf	RN487X_SetOutputs@bitMap,w
 21336     0A95  390F               	andlw	15
 21337     0A96  3E30               	addlw	48
 21338     0A97  00A2               	movwf	RN487X_SetOutputs@ioLowNibble
 21339     0A98                     l13195:
 21340                           
 21341                           ;mcc_generated_files/rn487x/rn487x.c: 242:     if (bitMap.ioStateBitMap.p1_3_state)
 21342     0A98  1E21               	btfss	RN487X_SetOutputs@bitMap+1,4
 21343     0A99  2A9B               	goto	u10011
 21344     0A9A  2A9C               	goto	u10010
 21345     0A9B                     u10011:
 21346     0A9B  2A9F               	goto	l13199
 21347     0A9C                     u10010:
 21348     0A9C                     l13197:
 21349                           
 21350                           ;mcc_generated_files/rn487x/rn487x.c: 243:     {;mcc_generated_files/rn487x/rn487x.c: 24
      +                          4:         stateHighNibble = '1';
 21351     0A9C  3031               	movlw	49
 21352     0A9D  00A5               	movwf	RN487X_SetOutputs@stateHighNibble
 21353                           
 21354                           ;mcc_generated_files/rn487x/rn487x.c: 245:     }
 21355     0A9E  2AA1               	goto	l13201
 21356     0A9F                     l13199:
 21357                           
 21358                           ;mcc_generated_files/rn487x/rn487x.c: 247:     {;mcc_generated_files/rn487x/rn487x.c: 24
      +                          8:         stateHighNibble = '0';
 21359     0A9F  3030               	movlw	48
 21360     0AA0  00A5               	movwf	RN487X_SetOutputs@stateHighNibble
 21361     0AA1                     l13201:
 21362                           
 21363                           ;mcc_generated_files/rn487x/rn487x.c: 250:     stateLowNibble = ( (0x0F & bitMap.ioState
      +                          BitMap.gpioStateBitMap) + '0');
 21364     0AA1  0821               	movf	RN487X_SetOutputs@bitMap+1,w
 21365     0AA2  390F               	andlw	15
 21366     0AA3  3E30               	addlw	48
 21367     0AA4  00A3               	movwf	RN487X_SetOutputs@stateLowNibble
 21368     0AA5                     l13203:
 21369                           
 21370                           ;mcc_generated_files/rn487x/rn487x.c: 252:     cmdBuf[0] = '|';
 21371     0AA5  307C               	movlw	124
 21372     0AA6  0143               	movlb	3	; select bank3
 21373     0AA7  00A0               	movwf	_cmdBuf^(0+384)
 21374     0AA8                     l13205:
 21375                           
 21376                           ;mcc_generated_files/rn487x/rn487x.c: 253:     cmdBuf[1] = 'O';
 21377     0AA8  304F               	movlw	79
 21378     0AA9  00A1               	movwf	(_cmdBuf^(0+384)+1)
 21379     0AAA                     l13207:
 21380                           
 21381                           ;mcc_generated_files/rn487x/rn487x.c: 254:     cmdBuf[2] = ',';
 21382     0AAA  302C               	movlw	44
 21383     0AAB  00A2               	movwf	(_cmdBuf^(0+384)+2)
 21384     0AAC                     l13209:
 21385                           
 21386                           ;mcc_generated_files/rn487x/rn487x.c: 255:     cmdBuf[3] = ioHighNibble;
 21387     0AAC  0140               	movlb	0	; select bank0
 21388     0AAD  0824               	movf	RN487X_SetOutputs@ioHighNibble,w
 21389     0AAE  0143               	movlb	3	; select bank3
 21390     0AAF  00A3               	movwf	(_cmdBuf^(0+384)+3)
 21391     0AB0                     l13211:
 21392                           
 21393                           ;mcc_generated_files/rn487x/rn487x.c: 256:     cmdBuf[4] = ioLowNibble;
 21394     0AB0  0140               	movlb	0	; select bank0
 21395     0AB1  0822               	movf	RN487X_SetOutputs@ioLowNibble,w
 21396     0AB2  0143               	movlb	3	; select bank3
 21397     0AB3  00A4               	movwf	(_cmdBuf^(0+384)+4)
 21398     0AB4                     l13213:
 21399                           
 21400                           ;mcc_generated_files/rn487x/rn487x.c: 257:     cmdBuf[5] = ',';
 21401     0AB4  302C               	movlw	44
 21402     0AB5  00A5               	movwf	(_cmdBuf^(0+384)+5)
 21403     0AB6                     l13215:
 21404                           
 21405                           ;mcc_generated_files/rn487x/rn487x.c: 258:     cmdBuf[6] = stateHighNibble;
 21406     0AB6  0140               	movlb	0	; select bank0
 21407     0AB7  0825               	movf	RN487X_SetOutputs@stateHighNibble,w
 21408     0AB8  0143               	movlb	3	; select bank3
 21409     0AB9  00A6               	movwf	(_cmdBuf^(0+384)+6)
 21410     0ABA                     l13217:
 21411                           
 21412                           ;mcc_generated_files/rn487x/rn487x.c: 259:     cmdBuf[7] = stateLowNibble;
 21413     0ABA  0140               	movlb	0	; select bank0
 21414     0ABB  0823               	movf	RN487X_SetOutputs@stateLowNibble,w
 21415     0ABC  0143               	movlb	3	; select bank3
 21416     0ABD  00A7               	movwf	(_cmdBuf^(0+384)+7)
 21417     0ABE                     l13219:
 21418                           
 21419                           ;mcc_generated_files/rn487x/rn487x.c: 260:     cmdBuf[8] = '\r';
 21420     0ABE  300D               	movlw	13
 21421     0ABF  00A8               	movwf	(_cmdBuf^(0+384)+8)
 21422     0AC0                     l13221:
 21423                           
 21424                           ;mcc_generated_files/rn487x/rn487x.c: 261:     cmdBuf[9] = '\n';
 21425     0AC0  300A               	movlw	10
 21426     0AC1  00A9               	movwf	(_cmdBuf^(0+384)+9)
 21427     0AC2                     l13223:
 21428                           
 21429                           ;mcc_generated_files/rn487x/rn487x.c: 263:     RN487X_SendCmd(cmdBuf, 10);
 21430     0AC2  300A               	movlw	10
 21431     0AC3  00F7               	movwf	RN487X_SendCmd@cmdLen
 21432     0AC4  30A0               	movlw	(low (_cmdBuf| (0+256)))& (0+255)
 21433     0AC5  3196  26CF  318A   	fcall	_RN487X_SendCmd
 21434     0AC8                     l13225:
 21435                           
 21436                           ;mcc_generated_files/rn487x/rn487x.c: 264:     return RN487X_ReadDefaultResponse();;	Ret
      +                          urn value of _RN487X_SetOutputs is never used
 21437     0AC8  318E  26EC  318A   	fcall	_RN487X_ReadDefaultResponse
 21438     0ACB                     l1558:
 21439     0ACB  0008               	return
 21440     0ACC                     __end_of_RN487X_SetOutputs:
 21441                           
 21442                           	psect	text73
 21443     0EEC                     __ptext73:	
 21444 ;; *************** function _RN487X_ReadDefaultResponse *****************
 21445 ;; Defined at:
 21446 ;;		line 125 in file "mcc_generated_files/rn487x/rn487x.c"
 21447 ;; Parameters:    Size  Location     Type
 21448 ;;		None
 21449 ;; Auto vars:     Size  Location     Type
 21450 ;;  resp            3    3[COMMON] unsigned char [3]
 21451 ;;  status          1    6[COMMON] _Bool 
 21452 ;; Return value:  Size  Location     Type
 21453 ;;                  1    wreg      _Bool 
 21454 ;; Registers used:
 21455 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21456 ;; Tracked objects:
 21457 ;;		On entry : 0/0
 21458 ;;		On exit  : 0/0
 21459 ;;		Unchanged: 0/0
 21460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21462 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21464 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21465 ;;Total ram usage:        4 bytes
 21466 ;; Hardware stack levels used: 1
 21467 ;; Hardware stack levels required when called: 6
 21468 ;; This function calls:
 21469 ;;		_RN487X_Read@rn487x_interface$F1869
 21470 ;; This function is called by:
 21471 ;;		_RN487X_SetOutputs
 21472 ;;		_RN487X_Disconnect
 21473 ;; This function uses a non-reentrant model
 21474 ;;
 21475                           
 21476     0EEC                     _RN487X_ReadDefaultResponse:	
 21477                           ;psect for function _RN487X_ReadDefaultResponse
 21478                           
 21479     0EEC                     l13107:	
 21480                           ;incstack = 0
 21481                           ; Regs used in _RN487X_ReadDefaultResponse: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21482                           
 21483                           
 21484                           ;mcc_generated_files/rn487x/rn487x.c: 127:     uint8_t resp[3];;mcc_generated_files/rn48
      +                          7x/rn487x.c: 128:     _Bool status = 0;
 21485     0EEC  01F6               	clrf	RN487X_ReadDefaultResponse@status
 21486     0EED                     l13109:
 21487                           
 21488                           ;mcc_generated_files/rn487x/rn487x.c: 130:     resp[0] = RN487X.Read();
 21489     0EED  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21490     0EEE  0084               	movwf	4
 21491     0EEF  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21492     0EF0  0085               	movwf	5
 21493     0EF1  3F01               	moviw [1]fsr0
 21494     0EF2  008A               	movwf	10
 21495     0EF3  3F00               	moviw [0]fsr0
 21496     0EF4  000A               	callw
 21497     0EF5  318E               	pagesel	$
 21498     0EF6  00F3               	movwf	RN487X_ReadDefaultResponse@resp
 21499     0EF7                     l13111:
 21500                           
 21501                           ;mcc_generated_files/rn487x/rn487x.c: 131:     resp[1] = RN487X.Read();
 21502     0EF7  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21503     0EF8  0084               	movwf	4
 21504     0EF9  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21505     0EFA  0085               	movwf	5
 21506     0EFB  3F01               	moviw [1]fsr0
 21507     0EFC  008A               	movwf	10
 21508     0EFD  3F00               	moviw [0]fsr0
 21509     0EFE  000A               	callw
 21510     0EFF  318E               	pagesel	$
 21511     0F00  00F4               	movwf	RN487X_ReadDefaultResponse@resp+1
 21512     0F01                     l13113:
 21513                           
 21514                           ;mcc_generated_files/rn487x/rn487x.c: 132:     resp[2] = RN487X.Read();
 21515     0F01  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21516     0F02  0084               	movwf	4
 21517     0F03  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21518     0F04  0085               	movwf	5
 21519     0F05  3F01               	moviw [1]fsr0
 21520     0F06  008A               	movwf	10
 21521     0F07  3F00               	moviw [0]fsr0
 21522     0F08  000A               	callw
 21523     0F09  318E               	pagesel	$
 21524     0F0A  00F5               	movwf	RN487X_ReadDefaultResponse@resp+2
 21525                           
 21526                           ;mcc_generated_files/rn487x/rn487x.c: 134:     switch (resp[0])
 21527     0F0B  2F2B               	goto	l13133
 21528     0F0C                     l13115:
 21529                           
 21530                           ;mcc_generated_files/rn487x/rn487x.c: 137:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 138:             if ((resp[1] == 'O') && (resp[2] == 'K'))
 21531     0F0C  304F               	movlw	79
 21532     0F0D  0674               	xorwf	RN487X_ReadDefaultResponse@resp+1,w
 21533     0F0E  1D03               	btfss	3,2
 21534     0F0F  2F11               	goto	u9891
 21535     0F10  2F12               	goto	u9890
 21536     0F11                     u9891:
 21537     0F11  2F33               	goto	l13135
 21538     0F12                     u9890:
 21539     0F12                     l13117:
 21540     0F12  304B               	movlw	75
 21541     0F13  0675               	xorwf	RN487X_ReadDefaultResponse@resp+2,w
 21542     0F14  1D03               	btfss	3,2
 21543     0F15  2F17               	goto	u9901
 21544     0F16  2F18               	goto	u9900
 21545     0F17                     u9901:
 21546     0F17  2F33               	goto	l13135
 21547     0F18                     u9900:
 21548     0F18                     l13119:
 21549                           
 21550                           ;mcc_generated_files/rn487x/rn487x.c: 139:                 status = 1;
 21551     0F18  01F6               	clrf	RN487X_ReadDefaultResponse@status
 21552     0F19  0AF6               	incf	RN487X_ReadDefaultResponse@status,f
 21553     0F1A  2F33               	goto	l13135
 21554     0F1B                     l13121:
 21555                           
 21556                           ;mcc_generated_files/rn487x/rn487x.c: 144:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 145:             if ((resp[1] == 'r') && (resp[2] == 'r'))
 21557     0F1B  3072               	movlw	114
 21558     0F1C  0674               	xorwf	RN487X_ReadDefaultResponse@resp+1,w
 21559     0F1D  1D03               	btfss	3,2
 21560     0F1E  2F20               	goto	u9911
 21561     0F1F  2F21               	goto	u9910
 21562     0F20                     u9911:
 21563     0F20  2F33               	goto	l13135
 21564     0F21                     u9910:
 21565     0F21                     l13123:
 21566     0F21  3072               	movlw	114
 21567     0F22  0675               	xorwf	RN487X_ReadDefaultResponse@resp+2,w
 21568     0F23  1D03               	btfss	3,2
 21569     0F24  2F26               	goto	u9921
 21570     0F25  2F27               	goto	u9920
 21571     0F26                     u9921:
 21572     0F26  2F33               	goto	l13135
 21573     0F27                     u9920:
 21574     0F27                     l13125:
 21575                           
 21576                           ;mcc_generated_files/rn487x/rn487x.c: 146:                 status = 0;
 21577     0F27  01F6               	clrf	RN487X_ReadDefaultResponse@status
 21578     0F28  2F33               	goto	l13135
 21579     0F29                     l13127:
 21580                           
 21581                           ;mcc_generated_files/rn487x/rn487x.c: 151:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 152:             return status;
 21582     0F29  3000               	movlw	0
 21583     0F2A  2F73               	goto	l1533
 21584     0F2B                     l13133:
 21585     0F2B  0873               	movf	RN487X_ReadDefaultResponse@resp,w
 21586                           
 21587                           ; Switch size 1, requested type "simple"
 21588                           ; Number of cases is 2, Range of values is 65 to 69
 21589                           ; switch strategies available:
 21590                           ; Name         Instructions Cycles
 21591                           ; simple_byte            7     4 (average)
 21592                           ; direct_byte           19     9 (fixed)
 21593                           ; jumptable            263     9 (fixed)
 21594                           ;	Chosen strategy is simple_byte
 21595     0F2C  3A41               	xorlw	65	; case 65
 21596     0F2D  1903               	skipnz
 21597     0F2E  2F0C               	goto	l13115
 21598     0F2F  3A04               	xorlw	4	; case 69
 21599     0F30  1903               	skipnz
 21600     0F31  2F1B               	goto	l13121
 21601     0F32  2F29               	goto	l13127
 21602     0F33                     l13135:
 21603                           
 21604                           ;mcc_generated_files/rn487x/rn487x.c: 157:     RN487X.Read();
 21605     0F33  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21606     0F34  0084               	movwf	4
 21607     0F35  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21608     0F36  0085               	movwf	5
 21609     0F37  3F01               	moviw [1]fsr0
 21610     0F38  008A               	movwf	10
 21611     0F39  3F00               	moviw [0]fsr0
 21612     0F3A  000A               	callw
 21613     0F3B  318E               	pagesel	$
 21614                           
 21615                           ;mcc_generated_files/rn487x/rn487x.c: 158:     RN487X.Read();
 21616     0F3C  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21617     0F3D  0084               	movwf	4
 21618     0F3E  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21619     0F3F  0085               	movwf	5
 21620     0F40  3F01               	moviw [1]fsr0
 21621     0F41  008A               	movwf	10
 21622     0F42  3F00               	moviw [0]fsr0
 21623     0F43  000A               	callw
 21624     0F44  318E               	pagesel	$
 21625                           
 21626                           ;mcc_generated_files/rn487x/rn487x.c: 161:     RN487X.Read();
 21627     0F45  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21628     0F46  0084               	movwf	4
 21629     0F47  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21630     0F48  0085               	movwf	5
 21631     0F49  3F01               	moviw [1]fsr0
 21632     0F4A  008A               	movwf	10
 21633     0F4B  3F00               	moviw [0]fsr0
 21634     0F4C  000A               	callw
 21635     0F4D  318E               	pagesel	$
 21636                           
 21637                           ;mcc_generated_files/rn487x/rn487x.c: 162:     RN487X.Read();
 21638     0F4E  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21639     0F4F  0084               	movwf	4
 21640     0F50  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21641     0F51  0085               	movwf	5
 21642     0F52  3F01               	moviw [1]fsr0
 21643     0F53  008A               	movwf	10
 21644     0F54  3F00               	moviw [0]fsr0
 21645     0F55  000A               	callw
 21646     0F56  318E               	pagesel	$
 21647                           
 21648                           ;mcc_generated_files/rn487x/rn487x.c: 163:     RN487X.Read();
 21649     0F57  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21650     0F58  0084               	movwf	4
 21651     0F59  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21652     0F5A  0085               	movwf	5
 21653     0F5B  3F01               	moviw [1]fsr0
 21654     0F5C  008A               	movwf	10
 21655     0F5D  3F00               	moviw [0]fsr0
 21656     0F5E  000A               	callw
 21657     0F5F  318E               	pagesel	$
 21658                           
 21659                           ;mcc_generated_files/rn487x/rn487x.c: 164:     RN487X.Read();
 21660     0F60  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21661     0F61  0084               	movwf	4
 21662     0F62  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21663     0F63  0085               	movwf	5
 21664     0F64  3F01               	moviw [1]fsr0
 21665     0F65  008A               	movwf	10
 21666     0F66  3F00               	moviw [0]fsr0
 21667     0F67  000A               	callw
 21668     0F68  318E               	pagesel	$
 21669                           
 21670                           ;mcc_generated_files/rn487x/rn487x.c: 165:     RN487X.Read();
 21671     0F69  306A               	movlw	low ((_RN487X+2)| (0+32768))
 21672     0F6A  0084               	movwf	4
 21673     0F6B  3098               	movlw	high ((_RN487X+2)| (0+32768))
 21674     0F6C  0085               	movwf	5
 21675     0F6D  3F01               	moviw [1]fsr0
 21676     0F6E  008A               	movwf	10
 21677     0F6F  3F00               	moviw [0]fsr0
 21678     0F70  000A               	callw
 21679     0F71  318E               	pagesel	$
 21680     0F72                     l13137:
 21681                           
 21682                           ;mcc_generated_files/rn487x/rn487x.c: 167:     return status;
 21683     0F72  0876               	movf	RN487X_ReadDefaultResponse@status,w
 21684     0F73                     l1533:
 21685     0F73  0008               	return
 21686     0F74                     __end_of_RN487X_ReadDefaultResponse:
 21687                           
 21688                           	psect	text74
 21689     134B                     __ptext74:	
 21690 ;; *************** function _RN487X_EnterDataMode *****************
 21691 ;; Defined at:
 21692 ;;		line 208 in file "mcc_generated_files/rn487x/rn487x.c"
 21693 ;; Parameters:    Size  Location     Type
 21694 ;;		None
 21695 ;; Auto vars:     Size  Location     Type
 21696 ;;		None
 21697 ;; Return value:  Size  Location     Type
 21698 ;;                  1    wreg      _Bool 
 21699 ;; Registers used:
 21700 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21701 ;; Tracked objects:
 21702 ;;		On entry : 0/0
 21703 ;;		On exit  : 0/0
 21704 ;;		Unchanged: 0/0
 21705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21710 ;;Total ram usage:        0 bytes
 21711 ;; Hardware stack levels used: 1
 21712 ;; Hardware stack levels required when called: 7
 21713 ;; This function calls:
 21714 ;;		_RN487X_ReadMsg
 21715 ;;		_RN487X_SendCmd
 21716 ;; This function is called by:
 21717 ;;		_LIGHTBLUE_UpdateErrorLed
 21718 ;; This function uses a non-reentrant model
 21719 ;;
 21720                           
 21721     134B                     _RN487X_EnterDataMode:	
 21722                           ;psect for function _RN487X_EnterDataMode
 21723                           
 21724     134B                     l13229:	
 21725                           ;incstack = 0
 21726                           ; Regs used in _RN487X_EnterDataMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21727                           
 21728                           
 21729                           ;mcc_generated_files/rn487x/rn487x.c: 210:     const uint8_t cmdPrompt[] = {'E', 'N', 'D
      +                          ', '\r', '\n'};;mcc_generated_files/rn487x/rn487x.c: 212:     cmdBuf[0] = '-';
 21730     134B  302D               	movlw	45
 21731     134C  0143               	movlb	3	; select bank3
 21732     134D  00A0               	movwf	_cmdBuf^(0+384)
 21733                           
 21734                           ;mcc_generated_files/rn487x/rn487x.c: 213:     cmdBuf[1] = '-';
 21735     134E  302D               	movlw	45
 21736     134F  00A1               	movwf	(_cmdBuf^(0+384)+1)
 21737                           
 21738                           ;mcc_generated_files/rn487x/rn487x.c: 214:     cmdBuf[2] = '-';
 21739     1350  302D               	movlw	45
 21740     1351  00A2               	movwf	(_cmdBuf^(0+384)+2)
 21741                           
 21742                           ;mcc_generated_files/rn487x/rn487x.c: 215:     cmdBuf[3] = '\r';
 21743     1352  300D               	movlw	13
 21744     1353  00A3               	movwf	(_cmdBuf^(0+384)+3)
 21745                           
 21746                           ;mcc_generated_files/rn487x/rn487x.c: 216:     cmdBuf[4] = '\n';
 21747     1354  300A               	movlw	10
 21748     1355  00A4               	movwf	(_cmdBuf^(0+384)+4)
 21749     1356                     l13231:
 21750                           
 21751                           ;mcc_generated_files/rn487x/rn487x.c: 218:     RN487X_SendCmd(cmdBuf, 5);
 21752     1356  3005               	movlw	5
 21753     1357  00F7               	movwf	RN487X_SendCmd@cmdLen
 21754     1358  30A0               	movlw	(low (_cmdBuf| (0+256)))& (0+255)
 21755     1359  3196  26CF  3193   	fcall	_RN487X_SendCmd
 21756     135C                     l13233:
 21757                           
 21758                           ;mcc_generated_files/rn487x/rn487x.c: 220:     return RN487X_ReadMsg(cmdPrompt, sizeof (
      +                          cmdPrompt));;	Return value of _RN487X_EnterDataMode is never used
 21759     135C  3006               	movlw	low (RN487X_EnterDataMode@cmdPrompt| (0+32768))
 21760     135D  00F3               	movwf	RN487X_ReadMsg@expectedMsg
 21761     135E  30A0               	movlw	high (RN487X_EnterDataMode@cmdPrompt| (0+32768))
 21762     135F  00F4               	movwf	RN487X_ReadMsg@expectedMsg+1
 21763     1360  3005               	movlw	5
 21764     1361  00F5               	movwf	RN487X_ReadMsg@msgLen
 21765     1362  3195  25C0  3193   	fcall	_RN487X_ReadMsg
 21766     1365                     l1551:
 21767     1365  0008               	return
 21768     1366                     __end_of_RN487X_EnterDataMode:
 21769                           
 21770                           	psect	text75
 21771     0800                     __ptext75:	
 21772 ;; *************** function _RN487X_EnterCmdMode *****************
 21773 ;; Defined at:
 21774 ;;		line 195 in file "mcc_generated_files/rn487x/rn487x.c"
 21775 ;; Parameters:    Size  Location     Type
 21776 ;;		None
 21777 ;; Auto vars:     Size  Location     Type
 21778 ;;		None
 21779 ;; Return value:  Size  Location     Type
 21780 ;;                  1    wreg      _Bool 
 21781 ;; Registers used:
 21782 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21783 ;; Tracked objects:
 21784 ;;		On entry : 0/0
 21785 ;;		On exit  : 0/0
 21786 ;;		Unchanged: 0/0
 21787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21792 ;;Total ram usage:        0 bytes
 21793 ;; Hardware stack levels used: 1
 21794 ;; Hardware stack levels required when called: 7
 21795 ;; This function calls:
 21796 ;;		_RN487X_ReadMsg
 21797 ;;		_RN487X_SendCmd
 21798 ;; This function is called by:
 21799 ;;		_LIGHTBLUE_UpdateErrorLed
 21800 ;; This function uses a non-reentrant model
 21801 ;;
 21802                           
 21803     0800                     _RN487X_EnterCmdMode:	
 21804                           ;psect for function _RN487X_EnterCmdMode
 21805                           
 21806     0800                     l13177:	
 21807                           ;incstack = 0
 21808                           ; Regs used in _RN487X_EnterCmdMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21809                           
 21810                           
 21811                           ;mcc_generated_files/rn487x/rn487x.c: 197:     const uint8_t cmdPrompt[] = {'C', 'M', 'D
      +                          ', '>', ' '};;mcc_generated_files/rn487x/rn487x.c: 199:     cmdBuf[0] = '$';
 21812     0800  3024               	movlw	36
 21813     0801  0143               	movlb	3	; select bank3
 21814     0802  00A0               	movwf	_cmdBuf^(0+384)
 21815                           
 21816                           ;mcc_generated_files/rn487x/rn487x.c: 200:     cmdBuf[1] = '$';
 21817     0803  3024               	movlw	36
 21818     0804  00A1               	movwf	(_cmdBuf^(0+384)+1)
 21819                           
 21820                           ;mcc_generated_files/rn487x/rn487x.c: 201:     cmdBuf[2] = '$';
 21821     0805  3024               	movlw	36
 21822     0806  00A2               	movwf	(_cmdBuf^(0+384)+2)
 21823     0807                     l13179:
 21824                           
 21825                           ;mcc_generated_files/rn487x/rn487x.c: 203:     RN487X_SendCmd(cmdBuf, 3);
 21826     0807  3003               	movlw	3
 21827     0808  00F7               	movwf	RN487X_SendCmd@cmdLen
 21828     0809  30A0               	movlw	(low (_cmdBuf| (0+256)))& (0+255)
 21829     080A  3196  26CF  3188   	fcall	_RN487X_SendCmd
 21830     080D                     l13181:
 21831                           
 21832                           ;mcc_generated_files/rn487x/rn487x.c: 205:     return RN487X_ReadMsg(cmdPrompt, sizeof (
      +                          cmdPrompt));;	Return value of _RN487X_EnterCmdMode is never used
 21833     080D  300B               	movlw	low (RN487X_EnterCmdMode@cmdPrompt| (0+32768))
 21834     080E  00F3               	movwf	RN487X_ReadMsg@expectedMsg
 21835     080F  30A0               	movlw	high (RN487X_EnterCmdMode@cmdPrompt| (0+32768))
 21836     0810  00F4               	movwf	RN487X_ReadMsg@expectedMsg+1
 21837     0811  3005               	movlw	5
 21838     0812  00F5               	movwf	RN487X_ReadMsg@msgLen
 21839     0813  3195  25C0  3188   	fcall	_RN487X_ReadMsg
 21840     0816                     l1546:
 21841     0816  0008               	return
 21842     0817                     __end_of_RN487X_EnterCmdMode:
 21843                           
 21844                           	psect	text76
 21845     16CF                     __ptext76:	
 21846 ;; *************** function _RN487X_SendCmd *****************
 21847 ;; Defined at:
 21848 ;;		line 79 in file "mcc_generated_files/rn487x/rn487x.c"
 21849 ;; Parameters:    Size  Location     Type
 21850 ;;  cmd             1    wreg     PTR const unsigned char 
 21851 ;;		 -> cmdBuf(64), 
 21852 ;;  cmdLen          1    7[COMMON] unsigned char 
 21853 ;; Auto vars:     Size  Location     Type
 21854 ;;  cmd             1   10[COMMON] PTR const unsigned char 
 21855 ;;		 -> cmdBuf(64), 
 21856 ;;  index           1    9[COMMON] unsigned char 
 21857 ;; Return value:  Size  Location     Type
 21858 ;;                  1    wreg      void 
 21859 ;; Registers used:
 21860 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21861 ;; Tracked objects:
 21862 ;;		On entry : 0/0
 21863 ;;		On exit  : 0/0
 21864 ;;		Unchanged: 0/0
 21865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21866 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21867 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21868 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21869 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21870 ;;Total ram usage:        4 bytes
 21871 ;; Hardware stack levels used: 1
 21872 ;; Hardware stack levels required when called: 6
 21873 ;; This function calls:
 21874 ;;		_RN487X_Write
 21875 ;;		_RN487X_is_tx_done
 21876 ;; This function is called by:
 21877 ;;		_RN487X_EnterCmdMode
 21878 ;;		_RN487X_EnterDataMode
 21879 ;;		_RN487X_SetOutputs
 21880 ;;		_RN487X_GetCmd
 21881 ;;		_RN487X_GetInputsValues
 21882 ;;		_RN487X_RebootCmd
 21883 ;;		_RN487X_Disconnect
 21884 ;; This function uses a non-reentrant model
 21885 ;;
 21886                           
 21887     16CF                     _RN487X_SendCmd:	
 21888                           ;psect for function _RN487X_SendCmd
 21889                           
 21890                           
 21891                           ;incstack = 0
 21892                           ; Regs used in _RN487X_SendCmd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21893                           ;RN487X_SendCmd@cmd stored from wreg
 21894     16CF  00FA               	movwf	RN487X_SendCmd@cmd
 21895     16D0                     l13079:
 21896                           
 21897                           ;mcc_generated_files/rn487x/rn487x.c: 79: void RN487X_SendCmd(const uint8_t *cmd, uint8_
      +                          t cmdLen);mcc_generated_files/rn487x/rn487x.c: 80: {;mcc_generated_files/rn487x/rn487x.c
      +                          : 81:     uint8_t index = 0;
 21898     16D0  01F9               	clrf	RN487X_SendCmd@index
 21899                           
 21900                           ;mcc_generated_files/rn487x/rn487x.c: 83:     while (index < cmdLen)
 21901     16D1  2EF6               	goto	l13087
 21902     16D2                     l13081:
 21903                           
 21904                           ;mcc_generated_files/rn487x/rn487x.c: 84:     {;mcc_generated_files/rn487x/rn487x.c: 85:
      +                                   if (RN487X.TransmitDone())
 21905     16D2  306C               	movlw	low ((_RN487X+4)| (0+32768))
 21906     16D3  0084               	movwf	4
 21907     16D4  3098               	movlw	high ((_RN487X+4)| (0+32768))
 21908     16D5  0085               	movwf	5
 21909     16D6  3F01               	moviw [1]fsr0
 21910     16D7  008A               	movwf	10
 21911     16D8  3F00               	moviw [0]fsr0
 21912     16D9  000A               	callw
 21913     16DA  3196               	pagesel	$
 21914     16DB  3A00               	xorlw	0
 21915     16DC  1903               	skipnz
 21916     16DD  2EDF               	goto	u9851
 21917     16DE  2EE0               	goto	u9850
 21918     16DF                     u9851:
 21919     16DF  2EF6               	goto	l13087
 21920     16E0                     u9850:
 21921     16E0                     l13083:
 21922                           
 21923                           ;mcc_generated_files/rn487x/rn487x.c: 86:         {;mcc_generated_files/rn487x/rn487x.c:
      +                           87:             RN487X.Write(cmd[index]);
 21924     16E0  0879               	movf	RN487X_SendCmd@index,w
 21925     16E1  077A               	addwf	RN487X_SendCmd@cmd,w
 21926     16E2  00F8               	movwf	??_RN487X_SendCmd
 21927     16E3  0878               	movf	??_RN487X_SendCmd,w
 21928     16E4  0086               	movwf	6
 21929     16E5  3001               	movlw	1	; select bank2/3
 21930     16E6  0087               	movwf	7
 21931     16E7  0801               	movf	1,w
 21932     16E8  00F6               	movwf	RN487X_Write@txData
 21933     16E9  3068               	movlw	low (_RN487X| (0+32768))
 21934     16EA  0084               	movwf	4
 21935     16EB  3098               	movlw	high (_RN487X| (0+32768))
 21936     16EC  0085               	movwf	5
 21937     16ED  3F01               	moviw [1]fsr0
 21938     16EE  008A               	movwf	10
 21939     16EF  3F00               	moviw [0]fsr0
 21940     16F0  000A               	callw
 21941     16F1  3196               	pagesel	$
 21942     16F2                     l13085:
 21943                           
 21944                           ;mcc_generated_files/rn487x/rn487x.c: 88:             index++;
 21945     16F2  3001               	movlw	1
 21946     16F3  00F8               	movwf	??_RN487X_SendCmd
 21947     16F4  0878               	movf	??_RN487X_SendCmd,w
 21948     16F5  07F9               	addwf	RN487X_SendCmd@index,f
 21949     16F6                     l13087:
 21950                           
 21951                           ;mcc_generated_files/rn487x/rn487x.c: 83:     while (index < cmdLen)
 21952     16F6  0877               	movf	RN487X_SendCmd@cmdLen,w
 21953     16F7  0279               	subwf	RN487X_SendCmd@index,w
 21954     16F8  1C03               	skipc
 21955     16F9  2EFB               	goto	u9861
 21956     16FA  2EFC               	goto	u9860
 21957     16FB                     u9861:
 21958     16FB  2ED2               	goto	l13081
 21959     16FC                     u9860:
 21960     16FC                     l1511:
 21961     16FC  0008               	return
 21962     16FD                     __end_of_RN487X_SendCmd:
 21963                           
 21964                           	psect	text77
 21965     1FF6                     __ptext77:	
 21966 ;; *************** function _RN487X_is_tx_done *****************
 21967 ;; Defined at:
 21968 ;;		line 262 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 21969 ;; Parameters:    Size  Location     Type
 21970 ;;		None
 21971 ;; Auto vars:     Size  Location     Type
 21972 ;;		None
 21973 ;; Return value:  Size  Location     Type
 21974 ;;                  1    wreg      _Bool 
 21975 ;; Registers used:
 21976 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 21977 ;; Tracked objects:
 21978 ;;		On entry : 0/0
 21979 ;;		On exit  : 0/0
 21980 ;;		Unchanged: 0/0
 21981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21986 ;;Total ram usage:        0 bytes
 21987 ;; Hardware stack levels used: 1
 21988 ;; Hardware stack levels required when called: 5
 21989 ;; This function calls:
 21990 ;;		_EUSART1_is_tx_done
 21991 ;;		_EUSART2_is_tx_done
 21992 ;; This function is called by:
 21993 ;;		_RN487X_SendCmd
 21994 ;; This function uses a non-reentrant model
 21995 ;;
 21996                           
 21997     1FF6                     _RN487X_is_tx_done:	
 21998                           ;psect for function _RN487X_is_tx_done
 21999                           
 22000     1FF6                     l13025:	
 22001                           ;incstack = 0
 22002                           ; Regs used in _RN487X_is_tx_done: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 22003                           
 22004                           
 22005                           ;mcc_generated_files/rn487x/rn487x_interface.c: 264:     return uart[UART_BLE].TransmitD
      +                          one();
 22006     1FF6  3022               	movlw	low ((_uart+34)| (0+32768))
 22007     1FF7  0084               	movwf	4
 22008     1FF8  3098               	movlw	high ((_uart+34)| (0+32768))
 22009     1FF9  0085               	movwf	5
 22010     1FFA  3F01               	moviw [1]fsr0
 22011     1FFB  008A               	movwf	10
 22012     1FFC  3F00               	moviw [0]fsr0
 22013     1FFD  000A               	callw
 22014     1FFE  319F               	pagesel	$
 22015     1FFF                     l1417:
 22016     1FFF  0008               	return
 22017     2000                     __end_of_RN487X_is_tx_done:
 22018                           
 22019                           	psect	text78
 22020     1EF5                     __ptext78:	
 22021 ;; *************** function _EUSART1_is_tx_done *****************
 22022 ;; Defined at:
 22023 ;;		line 142 in file "mcc_generated_files/eusart1.c"
 22024 ;; Parameters:    Size  Location     Type
 22025 ;;		None
 22026 ;; Auto vars:     Size  Location     Type
 22027 ;;		None
 22028 ;; Return value:  Size  Location     Type
 22029 ;;                  1    wreg      _Bool 
 22030 ;; Registers used:
 22031 ;;		wreg, status,2, status,0
 22032 ;; Tracked objects:
 22033 ;;		On entry : 0/0
 22034 ;;		On exit  : 0/0
 22035 ;;		Unchanged: 0/0
 22036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22041 ;;Total ram usage:        0 bytes
 22042 ;; Hardware stack levels used: 1
 22043 ;; Hardware stack levels required when called: 4
 22044 ;; This function calls:
 22045 ;;		Nothing
 22046 ;; This function is called by:
 22047 ;;		_RN487X_is_tx_done
 22048 ;; This function uses a non-reentrant model
 22049 ;;
 22050                           
 22051     1EF5                     _EUSART1_is_tx_done:	
 22052                           ;psect for function _EUSART1_is_tx_done
 22053                           
 22054     1EF5                     l12883:	
 22055                           ;incstack = 0
 22056                           ; Regs used in _EUSART1_is_tx_done: [wreg+status,2+status,0]
 22057                           
 22058                           
 22059                           ;mcc_generated_files/eusart1.c: 144:     return TX1STAbits.TRMT;
 22060     1EF5  0142               	movlb	2	; select bank2
 22061     1EF6  0C1E               	rrf	30,w	;volatile
 22062     1EF7  3901               	andlw	1
 22063     1EF8                     l1829:
 22064     1EF8  0008               	return
 22065     1EF9                     __end_of_EUSART1_is_tx_done:
 22066                           
 22067                           	psect	text79
 22068     1EF1                     __ptext79:	
 22069 ;; *************** function _EUSART2_is_tx_done *****************
 22070 ;; Defined at:
 22071 ;;		line 142 in file "mcc_generated_files/eusart2.c"
 22072 ;; Parameters:    Size  Location     Type
 22073 ;;		None
 22074 ;; Auto vars:     Size  Location     Type
 22075 ;;		None
 22076 ;; Return value:  Size  Location     Type
 22077 ;;                  1    wreg      _Bool 
 22078 ;; Registers used:
 22079 ;;		wreg, status,2, status,0
 22080 ;; Tracked objects:
 22081 ;;		On entry : 0/0
 22082 ;;		On exit  : 0/0
 22083 ;;		Unchanged: 0/0
 22084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22089 ;;Total ram usage:        0 bytes
 22090 ;; Hardware stack levels used: 1
 22091 ;; Hardware stack levels required when called: 4
 22092 ;; This function calls:
 22093 ;;		Nothing
 22094 ;; This function is called by:
 22095 ;;		_RN487X_is_tx_done
 22096 ;; This function uses a non-reentrant model
 22097 ;;
 22098                           
 22099     1EF1                     _EUSART2_is_tx_done:	
 22100                           ;psect for function _EUSART2_is_tx_done
 22101                           
 22102     1EF1                     l12839:	
 22103                           ;incstack = 0
 22104                           ; Regs used in _EUSART2_is_tx_done: [wreg+status,2+status,0]
 22105                           
 22106                           
 22107                           ;mcc_generated_files/eusart2.c: 144:     return TX2STAbits.TRMT;
 22108     1EF1  0154               	movlb	20	; select bank20
 22109     1EF2  0C1E               	rrf	30,w	;volatile
 22110     1EF3  3901               	andlw	1
 22111     1EF4                     l1685:
 22112     1EF4  0008               	return
 22113     1EF5                     __end_of_EUSART2_is_tx_done:
 22114                           
 22115                           	psect	text80
 22116     15C0                     __ptext80:	
 22117 ;; *************** function _RN487X_ReadMsg *****************
 22118 ;; Defined at:
 22119 ;;		line 108 in file "mcc_generated_files/rn487x/rn487x.c"
 22120 ;; Parameters:    Size  Location     Type
 22121 ;;  expectedMsg     2    3[COMMON] PTR const unsigned char 
 22122 ;;		 -> RN487X_RebootCmd@reboot(11), RN487X_GetInputsValues@ioValue(2), RN487X_EnterDataMode@cmdPrompt(5), RN487X_EnterC
      +mdMode@cmdPrompt(5), 
 22123 ;;  msgLen          1    5[COMMON] unsigned char 
 22124 ;; Auto vars:     Size  Location     Type
 22125 ;;  index           1    9[COMMON] unsigned char 
 22126 ;;  resp            1    8[COMMON] unsigned char 
 22127 ;; Return value:  Size  Location     Type
 22128 ;;                  1    wreg      _Bool 
 22129 ;; Registers used:
 22130 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22131 ;; Tracked objects:
 22132 ;;		On entry : 0/0
 22133 ;;		On exit  : 0/0
 22134 ;;		Unchanged: 0/0
 22135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22136 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22137 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22138 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22139 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22140 ;;Total ram usage:        7 bytes
 22141 ;; Hardware stack levels used: 1
 22142 ;; Hardware stack levels required when called: 6
 22143 ;; This function calls:
 22144 ;;		_RN487X_Read@rn487x_interface$F1869
 22145 ;; This function is called by:
 22146 ;;		_RN487X_EnterCmdMode
 22147 ;;		_RN487X_EnterDataMode
 22148 ;;		_RN487X_GetInputsValues
 22149 ;;		_RN487X_RebootCmd
 22150 ;; This function uses a non-reentrant model
 22151 ;;
 22152                           
 22153     15C0                     _RN487X_ReadMsg:	
 22154                           ;psect for function _RN487X_ReadMsg
 22155                           
 22156     15C0                     l13089:	
 22157                           ;incstack = 0
 22158                           ; Regs used in _RN487X_ReadMsg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22159                           
 22160                           
 22161                           ;mcc_generated_files/rn487x/rn487x.c: 108: _Bool RN487X_ReadMsg(const uint8_t *expectedM
      +                          sg, uint8_t msgLen);mcc_generated_files/rn487x/rn487x.c: 109: {;mcc_generated_files/rn48
      +                          7x/rn487x.c: 110:     uint8_t index;;mcc_generated_files/rn487x/rn487x.c: 111:     uint8
      +                          _t resp;;mcc_generated_files/rn487x/rn487x.c: 113:     for (index = 0; index < msgLen; i
      +                          ndex++)
 22162     15C0  01F9               	clrf	RN487X_ReadMsg@index
 22163     15C1  2DE3               	goto	l13101
 22164     15C2                     l13091:
 22165                           
 22166                           ;mcc_generated_files/rn487x/rn487x.c: 114:     {;mcc_generated_files/rn487x/rn487x.c: 11
      +                          5:         resp = RN487X.Read();
 22167     15C2  306A               	movlw	low ((_RN487X+2)| (0+32768))
 22168     15C3  0084               	movwf	4
 22169     15C4  3098               	movlw	high ((_RN487X+2)| (0+32768))
 22170     15C5  0085               	movwf	5
 22171     15C6  3F01               	moviw [1]fsr0
 22172     15C7  008A               	movwf	10
 22173     15C8  3F00               	moviw [0]fsr0
 22174     15C9  000A               	callw
 22175     15CA  3195               	pagesel	$
 22176     15CB  00F8               	movwf	RN487X_ReadMsg@resp
 22177     15CC                     l13093:
 22178                           
 22179                           ;mcc_generated_files/rn487x/rn487x.c: 116:         if (resp != expectedMsg[index])
 22180     15CC  0874               	movf	RN487X_ReadMsg@expectedMsg+1,w
 22181     15CD  00F7               	movwf	??_RN487X_ReadMsg+1
 22182     15CE  0873               	movf	RN487X_ReadMsg@expectedMsg,w
 22183     15CF  00F6               	movwf	??_RN487X_ReadMsg
 22184     15D0  0879               	movf	RN487X_ReadMsg@index,w
 22185     15D1  0776               	addwf	??_RN487X_ReadMsg,w
 22186     15D2  0084               	movwf	4
 22187     15D3  0877               	movf	??_RN487X_ReadMsg+1,w
 22188     15D4  1803               	skipnc
 22189     15D5  0A77               	incf	??_RN487X_ReadMsg+1,w
 22190     15D6  0085               	movwf	5
 22191     15D7  0800               	movf	0,w	;code access
 22192     15D8  0678               	xorwf	RN487X_ReadMsg@resp,w
 22193     15D9  1903               	skipnz
 22194     15DA  2DDC               	goto	u9871
 22195     15DB  2DDD               	goto	u9870
 22196     15DC                     u9871:
 22197     15DC  2DDF               	goto	l13099
 22198     15DD                     u9870:
 22199     15DD                     l13095:
 22200                           
 22201                           ;mcc_generated_files/rn487x/rn487x.c: 117:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 118:             return 0;
 22202     15DD  3000               	movlw	0
 22203     15DE  2DEA               	goto	l1522
 22204     15DF                     l13099:
 22205                           
 22206                           ;mcc_generated_files/rn487x/rn487x.c: 120:     }
 22207     15DF  3001               	movlw	1
 22208     15E0  00F6               	movwf	??_RN487X_ReadMsg
 22209     15E1  0876               	movf	??_RN487X_ReadMsg,w
 22210     15E2  07F9               	addwf	RN487X_ReadMsg@index,f
 22211     15E3                     l13101:
 22212     15E3  0875               	movf	RN487X_ReadMsg@msgLen,w
 22213     15E4  0279               	subwf	RN487X_ReadMsg@index,w
 22214     15E5  1C03               	skipc
 22215     15E6  2DE8               	goto	u9881
 22216     15E7  2DE9               	goto	u9880
 22217     15E8                     u9881:
 22218     15E8  2DC2               	goto	l13091
 22219     15E9                     u9880:
 22220     15E9                     l13103:
 22221                           
 22222                           ;mcc_generated_files/rn487x/rn487x.c: 122:     return 1;
 22223     15E9  3001               	movlw	1
 22224     15EA                     l1522:
 22225     15EA  0008               	return
 22226     15EB                     __end_of_RN487X_ReadMsg:
 22227                           
 22228                           	psect	text81
 22229     1FEC                     __ptext81:	
 22230 ;; *************** function _RN487X_Read@rn487x_interface$F1869 *****************
 22231 ;; Defined at:
 22232 ;;		line 257 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 22233 ;; Parameters:    Size  Location     Type
 22234 ;;		None
 22235 ;; Auto vars:     Size  Location     Type
 22236 ;;		None
 22237 ;; Return value:  Size  Location     Type
 22238 ;;                  1    wreg      unsigned char 
 22239 ;; Registers used:
 22240 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22241 ;; Tracked objects:
 22242 ;;		On entry : 0/0
 22243 ;;		On exit  : 0/0
 22244 ;;		Unchanged: 0/0
 22245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22250 ;;Total ram usage:        0 bytes
 22251 ;; Hardware stack levels used: 1
 22252 ;; Hardware stack levels required when called: 5
 22253 ;; This function calls:
 22254 ;;		_EUSART1_Read
 22255 ;;		_EUSART2_Read
 22256 ;; This function is called by:
 22257 ;;		_RN487X_ReadMsg
 22258 ;;		_RN487X_ReadDefaultResponse
 22259 ;;		_RN487X_FilterData
 22260 ;;		_RN487X_Init
 22261 ;;		_RN487X_GetCmd
 22262 ;;		_RN487X_WaitForMsg
 22263 ;; This function uses a non-reentrant model
 22264 ;;
 22265                           
 22266     1FEC                     _RN487X_Read@rn487x_interface$F1869:	
 22267                           ;psect for function _RN487X_Read@rn487x_interface$F1869
 22268                           
 22269     1FEC                     l13021:	
 22270                           ;incstack = 0
 22271                           ; Regs used in _RN487X_Read@rn487x_interface$F1869: [wreg-fsr1h+status,2+status,0+pclath
      +                          +cstack]
 22272                           
 22273                           
 22274                           ;mcc_generated_files/rn487x/rn487x_interface.c: 259:     return uart[UART_BLE].Read();
 22275     1FEC  3014               	movlw	low ((_uart+20)| (0+32768))
 22276     1FED  0084               	movwf	4
 22277     1FEE  3098               	movlw	high ((_uart+20)| (0+32768))
 22278     1FEF  0085               	movwf	5
 22279     1FF0  3F01               	moviw [1]fsr0
 22280     1FF1  008A               	movwf	10
 22281     1FF2  3F00               	moviw [0]fsr0
 22282     1FF3  000A               	callw
 22283     1FF4  319F               	pagesel	$
 22284     1FF5                     l1414:
 22285     1FF5  0008               	return
 22286     1FF6                     __end_of_RN487X_Read@rn487x_interface$F1869:
 22287                           
 22288                           	psect	text82
 22289     1548                     __ptext82:	
 22290 ;; *************** function _EUSART1_Read *****************
 22291 ;; Defined at:
 22292 ;;		line 151 in file "mcc_generated_files/eusart1.c"
 22293 ;; Parameters:    Size  Location     Type
 22294 ;;		None
 22295 ;; Auto vars:     Size  Location     Type
 22296 ;;  readValue       1    2[COMMON] unsigned char 
 22297 ;; Return value:  Size  Location     Type
 22298 ;;                  1    wreg      unsigned char 
 22299 ;; Registers used:
 22300 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 22301 ;; Tracked objects:
 22302 ;;		On entry : 0/0
 22303 ;;		On exit  : 0/0
 22304 ;;		Unchanged: 0/0
 22305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22307 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22308 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22309 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22310 ;;Total ram usage:        2 bytes
 22311 ;; Hardware stack levels used: 1
 22312 ;; Hardware stack levels required when called: 4
 22313 ;; This function calls:
 22314 ;;		Nothing
 22315 ;; This function is called by:
 22316 ;;		_getch
 22317 ;;		_RN487X_Read@rn487x_interface$F1869
 22318 ;;		_RN487X_Example_TransparentUart
 22319 ;;		_main
 22320 ;; This function uses a non-reentrant model
 22321 ;;
 22322                           
 22323     1548                     _EUSART1_Read:	
 22324                           ;psect for function _EUSART1_Read
 22325                           
 22326     1548                     l12887:	
 22327                           ;incstack = 0
 22328                           ; Regs used in _EUSART1_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 22329                           
 22330     1548                     l12889:	
 22331                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 22332                           
 22333                           
 22334                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 22335     1548  0140               	movlb	0	; select bank0
 22336     1549  0858               	movf	_eusart1RxCount,w	;volatile
 22337     154A  1903               	btfsc	3,2
 22338     154B  2D4D               	goto	u9681
 22339     154C  2D4E               	goto	u9680
 22340     154D                     u9681:
 22341     154D  2D48               	goto	l12889
 22342     154E                     u9680:
 22343     154E                     l12891:
 22344                           
 22345                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 22346     154E  0859               	movf	_eusart1RxTail,w	;volatile
 22347     154F  3EBE               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 22348     1550  0086               	movwf	6
 22349     1551  0187               	clrf	7
 22350     1552  0801               	movf	1,w
 22351     1553  00D7               	movwf	_eusart1RxLastError	;volatile
 22352                           
 22353                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
 22354     1554  0859               	movf	_eusart1RxTail,w
 22355     1555  3E44               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 22356     1556  0086               	movwf	6
 22357     1557  3001               	movlw	1	; select bank2/3
 22358     1558  0087               	movwf	7
 22359     1559  0801               	movf	1,w
 22360     155A  00F2               	movwf	EUSART1_Read@readValue
 22361     155B                     l12893:
 22362     155B  3001               	movlw	1
 22363     155C  00F1               	movwf	??_EUSART1_Read
 22364     155D  0871               	movf	??_EUSART1_Read,w
 22365     155E  07D9               	addwf	_eusart1RxTail,f	;volatile
 22366     155F                     l12895:
 22367                           
 22368                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 22369     155F  3008               	movlw	8
 22370     1560  0259               	subwf	_eusart1RxTail,w	;volatile
 22371     1561  1C03               	skipc
 22372     1562  2D64               	goto	u9691
 22373     1563  2D65               	goto	u9690
 22374     1564                     u9691:
 22375     1564  2D66               	goto	l12899
 22376     1565                     u9690:
 22377     1565                     l12897:
 22378                           
 22379                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
 22380     1565  01D9               	clrf	_eusart1RxTail	;volatile
 22381     1566                     l12899:
 22382                           
 22383                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
 22384     1566  014E               	movlb	14	; select bank14
 22385     1567  1299               	bcf	25,5	;volatile
 22386     1568                     l12901:
 22387                           
 22388                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
 22389     1568  3001               	movlw	1
 22390     1569  0140               	movlb	0	; select bank0
 22391     156A  02D8               	subwf	_eusart1RxCount,f	;volatile
 22392     156B                     l12903:
 22393                           
 22394                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
 22395     156B  014E               	movlb	14	; select bank14
 22396     156C  1699               	bsf	25,5	;volatile
 22397     156D                     l12905:
 22398                           
 22399                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
 22400     156D  0872               	movf	EUSART1_Read@readValue,w
 22401     156E                     l1839:
 22402     156E  0008               	return
 22403     156F                     __end_of_EUSART1_Read:
 22404                           
 22405                           	psect	text83
 22406     14D4                     __ptext83:	
 22407 ;; *************** function _EUSART2_Read *****************
 22408 ;; Defined at:
 22409 ;;		line 151 in file "mcc_generated_files/eusart2.c"
 22410 ;; Parameters:    Size  Location     Type
 22411 ;;		None
 22412 ;; Auto vars:     Size  Location     Type
 22413 ;;  readValue       1    2[COMMON] unsigned char 
 22414 ;; Return value:  Size  Location     Type
 22415 ;;                  1    wreg      unsigned char 
 22416 ;; Registers used:
 22417 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 22418 ;; Tracked objects:
 22419 ;;		On entry : 0/0
 22420 ;;		On exit  : 0/0
 22421 ;;		Unchanged: 0/0
 22422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22424 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22425 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22426 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22427 ;;Total ram usage:        2 bytes
 22428 ;; Hardware stack levels used: 1
 22429 ;; Hardware stack levels required when called: 4
 22430 ;; This function calls:
 22431 ;;		Nothing
 22432 ;; This function is called by:
 22433 ;;		_RN487X_Read@rn487x_interface$F1869
 22434 ;;		_RN487X_Example_TransparentUart
 22435 ;;		_main
 22436 ;; This function uses a non-reentrant model
 22437 ;;
 22438                           
 22439     14D4                     _EUSART2_Read:	
 22440                           ;psect for function _EUSART2_Read
 22441                           
 22442     14D4                     l12843:	
 22443                           ;incstack = 0
 22444                           ; Regs used in _EUSART2_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 22445                           
 22446     14D4                     l12845:	
 22447                           ;mcc_generated_files/eusart2.c: 155:     while(0 == eusart2RxCount)
 22448                           
 22449                           
 22450                           ;mcc_generated_files/eusart2.c: 155:     while(0 == eusart2RxCount)
 22451     14D4  0140               	movlb	0	; select bank0
 22452     14D5  085F               	movf	_eusart2RxCount,w	;volatile
 22453     14D6  1903               	btfsc	3,2
 22454     14D7  2CD9               	goto	u9631
 22455     14D8  2CDA               	goto	u9630
 22456     14D9                     u9631:
 22457     14D9  2CD4               	goto	l12845
 22458     14DA                     u9630:
 22459     14DA                     l12847:
 22460                           
 22461                           ;mcc_generated_files/eusart2.c: 159:     eusart2RxLastError = eusart2RxStatusBuffer[eusa
      +                          rt2RxTail];
 22462     14DA  0860               	movf	_eusart2RxTail,w	;volatile
 22463     14DB  3ECE               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 22464     14DC  0086               	movwf	6
 22465     14DD  0187               	clrf	7
 22466     14DE  0801               	movf	1,w
 22467     14DF  00DE               	movwf	_eusart2RxLastError	;volatile
 22468                           
 22469                           ;mcc_generated_files/eusart2.c: 161:     readValue = eusart2RxBuffer[eusart2RxTail++];
 22470     14E0  0860               	movf	_eusart2RxTail,w
 22471     14E1  3ED6               	addlw	(low (_eusart2RxBuffer| 0))& (0+255)
 22472     14E2  0086               	movwf	6
 22473     14E3  0187               	clrf	7
 22474     14E4  0801               	movf	1,w
 22475     14E5  00F2               	movwf	EUSART2_Read@readValue
 22476     14E6                     l12849:
 22477     14E6  3001               	movlw	1
 22478     14E7  00F1               	movwf	??_EUSART2_Read
 22479     14E8  0871               	movf	??_EUSART2_Read,w
 22480     14E9  07E0               	addwf	_eusart2RxTail,f	;volatile
 22481     14EA                     l12851:
 22482                           
 22483                           ;mcc_generated_files/eusart2.c: 162:     if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
 22484     14EA  3008               	movlw	8
 22485     14EB  0260               	subwf	_eusart2RxTail,w	;volatile
 22486     14EC  1C03               	skipc
 22487     14ED  2CEF               	goto	u9641
 22488     14EE  2CF0               	goto	u9640
 22489     14EF                     u9641:
 22490     14EF  2CF1               	goto	l12855
 22491     14F0                     u9640:
 22492     14F0                     l12853:
 22493                           
 22494                           ;mcc_generated_files/eusart2.c: 163:     {;mcc_generated_files/eusart2.c: 164:         e
      +                          usart2RxTail = 0;
 22495     14F0  01E0               	clrf	_eusart2RxTail	;volatile
 22496     14F1                     l12855:
 22497                           
 22498                           ;mcc_generated_files/eusart2.c: 166:     PIE3bits.RC2IE = 0;
 22499     14F1  014E               	movlb	14	; select bank14
 22500     14F2  1399               	bcf	25,7	;volatile
 22501     14F3                     l12857:
 22502                           
 22503                           ;mcc_generated_files/eusart2.c: 167:     eusart2RxCount--;
 22504     14F3  3001               	movlw	1
 22505     14F4  0140               	movlb	0	; select bank0
 22506     14F5  02DF               	subwf	_eusart2RxCount,f	;volatile
 22507     14F6                     l12859:
 22508                           
 22509                           ;mcc_generated_files/eusart2.c: 168:     PIE3bits.RC2IE = 1;
 22510     14F6  014E               	movlb	14	; select bank14
 22511     14F7  1799               	bsf	25,7	;volatile
 22512     14F8                     l12861:
 22513                           
 22514                           ;mcc_generated_files/eusart2.c: 170:     return readValue;
 22515     14F8  0872               	movf	EUSART2_Read@readValue,w
 22516     14F9                     l1695:
 22517     14F9  0008               	return
 22518     14FA                     __end_of_EUSART2_Read:
 22519                           
 22520                           	psect	text84
 22521     1FB7                     __ptext84:	
 22522 ;; *************** function _RN487X_Delay *****************
 22523 ;; Defined at:
 22524 ;;		line 272 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 22525 ;; Parameters:    Size  Location     Type
 22526 ;;  delayCount      2    4[COMMON] unsigned short 
 22527 ;; Auto vars:     Size  Location     Type
 22528 ;;		None
 22529 ;; Return value:  Size  Location     Type
 22530 ;;                  1    wreg      void 
 22531 ;; Registers used:
 22532 ;;		wreg, status,2, status,0, pclath, cstack
 22533 ;; Tracked objects:
 22534 ;;		On entry : 0/0
 22535 ;;		On exit  : 0/0
 22536 ;;		Unchanged: 0/0
 22537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22538 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22541 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22542 ;;Total ram usage:        2 bytes
 22543 ;; Hardware stack levels used: 1
 22544 ;; Hardware stack levels required when called: 5
 22545 ;; This function calls:
 22546 ;;		_DELAY_milliseconds
 22547 ;; This function is called by:
 22548 ;;		_LIGHTBLUE_UpdateErrorLed
 22549 ;;		_RN487X_Init
 22550 ;; This function uses a non-reentrant model
 22551 ;;
 22552                           
 22553     1FB7                     _RN487X_Delay:	
 22554                           ;psect for function _RN487X_Delay
 22555                           
 22556     1FB7                     l13237:	
 22557                           ;incstack = 0
 22558                           ; Regs used in _RN487X_Delay: [wreg+status,2+status,0+pclath+cstack]
 22559                           
 22560                           
 22561                           ;mcc_generated_files/rn487x/rn487x_interface.c: 272: static __attribute__((inline)) void
      +                           RN487X_Delay(uint16_t delayCount);mcc_generated_files/rn487x/rn487x_interface.c: 273: {
      +                          ;mcc_generated_files/rn487x/rn487x_interface.c: 274:     return DELAY_milliseconds(delay
      +                          Count);;	Return value of _RN487X_Delay is never used
 22562     1FB7  0875               	movf	RN487X_Delay@delayCount+1,w
 22563     1FB8  00F2               	movwf	DELAY_milliseconds@milliseconds+1
 22564     1FB9  0874               	movf	RN487X_Delay@delayCount,w
 22565     1FBA  00F1               	movwf	DELAY_milliseconds@milliseconds
 22566     1FBB  3192  220F  319F   	fcall	_DELAY_milliseconds
 22567     1FBE                     l1423:
 22568     1FBE  0008               	return
 22569     1FBF                     __end_of_RN487X_Delay:
 22570                           
 22571                           	psect	text85
 22572     120F                     __ptext85:	
 22573 ;; *************** function _DELAY_milliseconds *****************
 22574 ;; Defined at:
 22575 ;;		line 38 in file "mcc_generated_files/delay.c"
 22576 ;; Parameters:    Size  Location     Type
 22577 ;;  milliseconds    2    1[COMMON] unsigned short 
 22578 ;; Auto vars:     Size  Location     Type
 22579 ;;		None
 22580 ;; Return value:  Size  Location     Type
 22581 ;;                  1    wreg      void 
 22582 ;; Registers used:
 22583 ;;		wreg, status,2, status,0
 22584 ;; Tracked objects:
 22585 ;;		On entry : 0/0
 22586 ;;		On exit  : 0/0
 22587 ;;		Unchanged: 0/0
 22588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22589 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22591 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22592 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22593 ;;Total ram usage:        3 bytes
 22594 ;; Hardware stack levels used: 1
 22595 ;; Hardware stack levels required when called: 4
 22596 ;; This function calls:
 22597 ;;		Nothing
 22598 ;; This function is called by:
 22599 ;;		_RN487X_Delay
 22600 ;; This function uses a non-reentrant model
 22601 ;;
 22602                           
 22603     120F                     _DELAY_milliseconds:	
 22604                           ;psect for function _DELAY_milliseconds
 22605                           
 22606     120F                     l13069:	
 22607                           ;incstack = 0
 22608                           ; Regs used in _DELAY_milliseconds: [wreg+status,2+status,0]
 22609                           
 22610                           
 22611                           ;mcc_generated_files/delay.c: 39:     while(milliseconds--){
 22612     120F  2A18               	goto	l13073
 22613     1210                     l13071:
 22614                           
 22615                           ;mcc_generated_files/delay.c: 40:         _delay((unsigned long)((1)*(32000000/4000.0)))
      +                          ;
 22616     1210  300B               	movlw	11
 22617     1211  00F3               	movwf	??_DELAY_milliseconds
 22618     1212  3062               	movlw	98
 22619     1213                     u14047:
 22620     1213  0B89               	decfsz	9,f
 22621     1214  2A13               	goto	u14047
 22622     1215  0BF3               	decfsz	??_DELAY_milliseconds,f
 22623     1216  2A13               	goto	u14047
 22624     1217  3200               	nop2
 22625     1218                     l13073:
 22626                           
 22627                           ;mcc_generated_files/delay.c: 39:     while(milliseconds--){
 22628     1218  3001               	movlw	1
 22629     1219  02F1               	subwf	DELAY_milliseconds@milliseconds,f
 22630     121A  3000               	movlw	0
 22631     121B  3BF2               	subwfb	DELAY_milliseconds@milliseconds+1,f
 22632     121C  0A71               	incf	DELAY_milliseconds@milliseconds,w
 22633     121D  1D03               	skipz
 22634     121E  2A23               	goto	u9831
 22635     121F  0A72               	incf	DELAY_milliseconds@milliseconds+1,w
 22636     1220  1D03               	btfss	3,2
 22637     1221  2A23               	goto	u9831
 22638     1222  2A24               	goto	u9830
 22639     1223                     u9831:
 22640     1223  2A10               	goto	l13071
 22641     1224                     u9830:
 22642     1224                     l2605:
 22643     1224  0008               	return
 22644     1225                     __end_of_DELAY_milliseconds:
 22645                           
 22646                           	psect	text86
 22647     14AE                     __ptext86:	
 22648 ;; *************** function _LIGHTBLUE_LedState *****************
 22649 ;; Defined at:
 22650 ;;		line 355 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 22651 ;; Parameters:    Size  Location     Type
 22652 ;;		None
 22653 ;; Auto vars:     Size  Location     Type
 22654 ;;  payload         3    0[BANK0 ] unsigned char [3]
 22655 ;;  led             1    3[BANK0 ] unsigned char 
 22656 ;; Return value:  Size  Location     Type
 22657 ;;                  1    wreg      void 
 22658 ;; Registers used:
 22659 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22660 ;; Tracked objects:
 22661 ;;		On entry : 0/0
 22662 ;;		On exit  : 0/0
 22663 ;;		Unchanged: 0/0
 22664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22666 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22668 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22669 ;;Total ram usage:        4 bytes
 22670 ;; Hardware stack levels used: 1
 22671 ;; Hardware stack levels required when called: 7
 22672 ;; This function calls:
 22673 ;;		_LIGHTBLUE_GetDataLedValue
 22674 ;;		_LIGHTBLUE_GetErrorLedValue
 22675 ;;		_LIGHTBLUE_SendPacket
 22676 ;;		_LIGHTBLUE_SplitByte
 22677 ;; This function is called by:
 22678 ;;		_main
 22679 ;; This function uses a non-reentrant model
 22680 ;;
 22681                           
 22682     14AE                     _LIGHTBLUE_LedState:	
 22683                           ;psect for function _LIGHTBLUE_LedState
 22684                           
 22685     14AE                     l14307:	
 22686                           ;incstack = 0
 22687                           ; Regs used in _LIGHTBLUE_LedState: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22688                           
 22689                           
 22690                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 356:     char payload[3];;mcc_gene
      +                          rated_files/application/LIGHTBLUE_service.c: 357:     uint8_t led;;mcc_generated_files/a
      +                          pplication/LIGHTBLUE_service.c: 359:     led = (0x00) + LIGHTBLUE_GetDataLedValue();
 22691     14AE  319F  2747  3194   	fcall	_LIGHTBLUE_GetDataLedValue
 22692     14B1  0140               	movlb	0	; select bank0
 22693     14B2  00A3               	movwf	LIGHTBLUE_LedState@led
 22694     14B3                     l14309:
 22695                           
 22696                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 361:     *payload = '\0';
 22697     14B3  01A0               	clrf	LIGHTBLUE_LedState@payload
 22698     14B4                     l14311:
 22699                           
 22700                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 362:     LIGHTBLUE_SplitByte(paylo
      +                          ad, led);
 22701     14B4  0823               	movf	LIGHTBLUE_LedState@led,w
 22702     14B5  00F6               	movwf	LIGHTBLUE_SplitByte@value
 22703     14B6  3020               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 22704     14B7  3196  26FD  3194   	fcall	_LIGHTBLUE_SplitByte
 22705     14BA                     l14313:
 22706                           
 22707                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 364:     LIGHTBLUE_SendPacket(LED_
      +                          STATE_ID, payload);
 22708     14BA  3020               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 22709     14BB  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 22710     14BC  304C               	movlw	76
 22711     14BD  318F  2774  3194   	fcall	_LIGHTBLUE_SendPacket
 22712     14C0                     l14315:
 22713                           
 22714                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 366:     led = (0x10) + LIGHTBLUE_
      +                          GetErrorLedValue();
 22715     14C0  319F  2730  3194   	fcall	_LIGHTBLUE_GetErrorLedValue
 22716     14C3  3E10               	addlw	16
 22717     14C4  0140               	movlb	0	; select bank0
 22718     14C5  00A3               	movwf	LIGHTBLUE_LedState@led
 22719                           
 22720                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 367:     *payload = '\0';
 22721     14C6  01A0               	clrf	LIGHTBLUE_LedState@payload
 22722     14C7                     l14317:
 22723                           
 22724                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 368:     LIGHTBLUE_SplitByte(paylo
      +                          ad, led);
 22725     14C7  0823               	movf	LIGHTBLUE_LedState@led,w
 22726     14C8  00F6               	movwf	LIGHTBLUE_SplitByte@value
 22727     14C9  3020               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 22728     14CA  3196  26FD  3194   	fcall	_LIGHTBLUE_SplitByte
 22729     14CD                     l14319:
 22730                           
 22731                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 370:     LIGHTBLUE_SendPacket(LED_
      +                          STATE_ID, payload);
 22732     14CD  3020               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 22733     14CE  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 22734     14CF  304C               	movlw	76
 22735     14D0  318F  2774  3194   	fcall	_LIGHTBLUE_SendPacket
 22736     14D3                     l133:
 22737     14D3  0008               	return
 22738     14D4                     __end_of_LIGHTBLUE_LedState:
 22739                           
 22740                           	psect	text87
 22741     1F30                     __ptext87:	
 22742 ;; *************** function _LIGHTBLUE_GetErrorLedValue *****************
 22743 ;; Defined at:
 22744 ;;		line 486 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 22745 ;; Parameters:    Size  Location     Type
 22746 ;;		None
 22747 ;; Auto vars:     Size  Location     Type
 22748 ;;		None
 22749 ;; Return value:  Size  Location     Type
 22750 ;;                  1    wreg      unsigned char 
 22751 ;; Registers used:
 22752 ;;		wreg, status,2, status,0
 22753 ;; Tracked objects:
 22754 ;;		On entry : 0/0
 22755 ;;		On exit  : 0/0
 22756 ;;		Unchanged: 0/0
 22757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22762 ;;Total ram usage:        0 bytes
 22763 ;; Hardware stack levels used: 1
 22764 ;; Hardware stack levels required when called: 4
 22765 ;; This function calls:
 22766 ;;		Nothing
 22767 ;; This function is called by:
 22768 ;;		_LIGHTBLUE_LedState
 22769 ;; This function uses a non-reentrant model
 22770 ;;
 22771                           
 22772     1F30                     _LIGHTBLUE_GetErrorLedValue:	
 22773                           ;psect for function _LIGHTBLUE_GetErrorLedValue
 22774                           
 22775     1F30                     l13577:	
 22776                           ;incstack = 0
 22777                           ; Regs used in _LIGHTBLUE_GetErrorLedValue: [wreg+status,2+status,0]
 22778                           
 22779                           
 22780                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 487:     return (0x01) - (bitMap.i
      +                          oStateBitMap.p2_2_state);
 22781     1F30  0140               	movlb	0	; select bank0
 22782     1F31  0855               	movf	_bitMap+1,w	;volatile
 22783     1F32  3901               	andlw	1
 22784     1F33  3C01               	sublw	1
 22785     1F34                     l208:
 22786     1F34  0008               	return
 22787     1F35                     __end_of_LIGHTBLUE_GetErrorLedValue:
 22788                           
 22789                           	psect	text88
 22790     1F47                     __ptext88:	
 22791 ;; *************** function _LIGHTBLUE_GetDataLedValue *****************
 22792 ;; Defined at:
 22793 ;;		line 482 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 22794 ;; Parameters:    Size  Location     Type
 22795 ;;		None
 22796 ;; Auto vars:     Size  Location     Type
 22797 ;;		None
 22798 ;; Return value:  Size  Location     Type
 22799 ;;                  1    wreg      unsigned char 
 22800 ;; Registers used:
 22801 ;;		wreg, status,2, status,0
 22802 ;; Tracked objects:
 22803 ;;		On entry : 0/0
 22804 ;;		On exit  : 0/0
 22805 ;;		Unchanged: 0/0
 22806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22811 ;;Total ram usage:        0 bytes
 22812 ;; Hardware stack levels used: 1
 22813 ;; Hardware stack levels required when called: 4
 22814 ;; This function calls:
 22815 ;;		Nothing
 22816 ;; This function is called by:
 22817 ;;		_LIGHTBLUE_LedState
 22818 ;; This function uses a non-reentrant model
 22819 ;;
 22820                           
 22821     1F47                     _LIGHTBLUE_GetDataLedValue:	
 22822                           ;psect for function _LIGHTBLUE_GetDataLedValue
 22823                           
 22824     1F47                     l13573:	
 22825                           ;incstack = 0
 22826                           ; Regs used in _LIGHTBLUE_GetDataLedValue: [wreg+status,2+status,0]
 22827                           
 22828                           
 22829                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 483:     return (0x01) - PORTAbits
      +                          .RA5;
 22830     1F47  0140               	movlb	0	; select bank0
 22831     1F48  0E0C               	swapf	12,w	;volatile
 22832     1F49  0C89               	rrf	9,f
 22833     1F4A  3901               	andlw	1
 22834     1F4B  3C01               	sublw	1
 22835     1F4C                     l205:
 22836     1F4C  0008               	return
 22837     1F4D                     __end_of_LIGHTBLUE_GetDataLedValue:
 22838                           
 22839                           	psect	text89
 22840     1F41                     __ptext89:	
 22841 ;; *************** function _LIGHTBLUE_Initialize *****************
 22842 ;; Defined at:
 22843 ;;		line 306 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 22844 ;; Parameters:    Size  Location     Type
 22845 ;;		None
 22846 ;; Auto vars:     Size  Location     Type
 22847 ;;		None
 22848 ;; Return value:  Size  Location     Type
 22849 ;;                  1    wreg      void 
 22850 ;; Registers used:
 22851 ;;		wreg
 22852 ;; Tracked objects:
 22853 ;;		On entry : 0/0
 22854 ;;		On exit  : 0/0
 22855 ;;		Unchanged: 0/0
 22856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22861 ;;Total ram usage:        0 bytes
 22862 ;; Hardware stack levels used: 1
 22863 ;; Hardware stack levels required when called: 4
 22864 ;; This function calls:
 22865 ;;		Nothing
 22866 ;; This function is called by:
 22867 ;;		_main
 22868 ;; This function uses a non-reentrant model
 22869 ;;
 22870                           
 22871     1F41                     _LIGHTBLUE_Initialize:	
 22872                           ;psect for function _LIGHTBLUE_Initialize
 22873                           
 22874     1F41                     l14277:	
 22875                           ;incstack = 0
 22876                           ; Regs used in _LIGHTBLUE_Initialize: [wreg]
 22877                           
 22878                           
 22879                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 307:     bitMap.ioBitMap.gpioBitMa
      +                          p = 0x01;
 22880     1F41  3001               	movlw	1
 22881     1F42  0140               	movlb	0	; select bank0
 22882     1F43  00D4               	movwf	_bitMap	;volatile
 22883                           
 22884                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 308:     bitMap.ioStateBitMap.gpio
      +                          StateBitMap = 0x01;
 22885     1F44  3001               	movlw	1
 22886     1F45  00D5               	movwf	_bitMap+1	;volatile
 22887     1F46                     l121:
 22888     1F46  0008               	return
 22889     1F47                     __end_of_LIGHTBLUE_Initialize:
 22890                           
 22891                           	psect	text90
 22892     16A1                     __ptext90:	
 22893 ;; *************** function _LIGHTBLUE_AccelSensor *****************
 22894 ;; Defined at:
 22895 ;;		line 329 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 22896 ;; Parameters:    Size  Location     Type
 22897 ;;		None
 22898 ;; Auto vars:     Size  Location     Type
 22899 ;;  payload        13   22[BANK0 ] unsigned char [13]
 22900 ;;  accelData       6   35[BANK0 ] struct .
 22901 ;; Return value:  Size  Location     Type
 22902 ;;                  1    wreg      void 
 22903 ;; Registers used:
 22904 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22905 ;; Tracked objects:
 22906 ;;		On entry : 0/0
 22907 ;;		On exit  : 0/0
 22908 ;;		Unchanged: 0/0
 22909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22911 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22913 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22914 ;;Total ram usage:       19 bytes
 22915 ;; Hardware stack levels used: 1
 22916 ;; Hardware stack levels required when called: 16
 22917 ;; This function calls:
 22918 ;;		_BMA253_GetAccelDataXYZ
 22919 ;;		_LIGHTBLUE_SendPacket
 22920 ;;		_LIGHTBLUE_SplitWord
 22921 ;; This function is called by:
 22922 ;;		_main
 22923 ;; This function uses a non-reentrant model
 22924 ;;
 22925                           
 22926     16A1                     _LIGHTBLUE_AccelSensor:	
 22927                           ;psect for function _LIGHTBLUE_AccelSensor
 22928                           
 22929     16A1                     l14287:	
 22930                           ;incstack = 0
 22931 ;; hardware stack exceeded
 22932                           ; Regs used in _LIGHTBLUE_AccelSensor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22933                           
 22934                           
 22935                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 330:     char payload[13];;mcc_gen
      +                          erated_files/application/LIGHTBLUE_service.c: 331:     BMA253_ACCEL_DATA_t accelData;;mc
      +                          c_generated_files/application/LIGHTBLUE_service.c: 334:     *payload = '\0';
 22936     16A1  0140               	movlb	0	; select bank0
 22937     16A2  01B6               	clrf	LIGHTBLUE_AccelSensor@payload
 22938     16A3                     l14289:
 22939                           
 22940                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 335:     BMA253_GetAccelDataXYZ(&a
      +                          ccelData);
 22941     16A3  3043               	movlw	(low (LIGHTBLUE_AccelSensor@accelData| 0))& (0+255)
 22942     16A4  318C  2448  3196   	fcall	_BMA253_GetAccelDataXYZ
 22943     16A7                     l14291:
 22944                           
 22945                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 338:     LIGHTBLUE_SplitWord(paylo
      +                          ad, (accelData.x & 0x0FFF));
 22946     16A7  30FF               	movlw	255
 22947     16A8  0140               	movlb	0	; select bank0
 22948     16A9  0543               	andwf	LIGHTBLUE_AccelSensor@accelData,w
 22949     16AA  00F9               	movwf	LIGHTBLUE_SplitWord@value
 22950     16AB  300F               	movlw	15
 22951     16AC  0544               	andwf	LIGHTBLUE_AccelSensor@accelData+1,w
 22952     16AD  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 22953     16AE  3036               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 22954     16AF  3190  20A4  3196   	fcall	_LIGHTBLUE_SplitWord
 22955     16B2                     l14293:
 22956                           
 22957                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 339:     LIGHTBLUE_SplitWord(paylo
      +                          ad, (accelData.y & 0x0FFF));
 22958     16B2  30FF               	movlw	255
 22959     16B3  0140               	movlb	0	; select bank0
 22960     16B4  0545               	andwf	LIGHTBLUE_AccelSensor@accelData+2,w
 22961     16B5  00F9               	movwf	LIGHTBLUE_SplitWord@value
 22962     16B6  300F               	movlw	15
 22963     16B7  0546               	andwf	LIGHTBLUE_AccelSensor@accelData+3,w
 22964     16B8  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 22965     16B9  3036               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 22966     16BA  3190  20A4  3196   	fcall	_LIGHTBLUE_SplitWord
 22967     16BD                     l14295:
 22968                           
 22969                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 340:     LIGHTBLUE_SplitWord(paylo
      +                          ad, (accelData.z & 0x0FFF));
 22970     16BD  30FF               	movlw	255
 22971     16BE  0140               	movlb	0	; select bank0
 22972     16BF  0547               	andwf	LIGHTBLUE_AccelSensor@accelData+4,w
 22973     16C0  00F9               	movwf	LIGHTBLUE_SplitWord@value
 22974     16C1  300F               	movlw	15
 22975     16C2  0548               	andwf	LIGHTBLUE_AccelSensor@accelData+5,w
 22976     16C3  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 22977     16C4  3036               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 22978     16C5  3190  20A4  3196   	fcall	_LIGHTBLUE_SplitWord
 22979     16C8                     l14297:
 22980                           
 22981                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 342:     LIGHTBLUE_SendPacket(ACCE
      +                          L_DATA_ID, payload);
 22982     16C8  3036               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 22983     16C9  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 22984     16CA  3058               	movlw	88
 22985     16CB  318F  2774  3196   	fcall	_LIGHTBLUE_SendPacket
 22986     16CE                     l127:
 22987     16CE  0008               	return
 22988     16CF                     __end_of_LIGHTBLUE_AccelSensor:
 22989                           
 22990                           	psect	text91
 22991     10A4                     __ptext91:	
 22992 ;; *************** function _LIGHTBLUE_SplitWord *****************
 22993 ;; Defined at:
 22994 ;;		line 466 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 22995 ;; Parameters:    Size  Location     Type
 22996 ;;  payload         1    wreg     PTR unsigned char 
 22997 ;;		 -> LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), 
 22998 ;;  value           2    9[COMMON] short 
 22999 ;; Auto vars:     Size  Location     Type
 23000 ;;  payload         1   11[COMMON] PTR unsigned char 
 23001 ;;		 -> LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), 
 23002 ;; Return value:  Size  Location     Type
 23003 ;;                  1    wreg      void 
 23004 ;; Registers used:
 23005 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23006 ;; Tracked objects:
 23007 ;;		On entry : 0/0
 23008 ;;		On exit  : 0/0
 23009 ;;		Unchanged: 0/0
 23010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23011 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23012 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23014 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23015 ;;Total ram usage:        3 bytes
 23016 ;; Hardware stack levels used: 1
 23017 ;; Hardware stack levels required when called: 6
 23018 ;; This function calls:
 23019 ;;		_LIGHTBLUE_SplitByte
 23020 ;; This function is called by:
 23021 ;;		_LIGHTBLUE_TemperatureSensor
 23022 ;;		_LIGHTBLUE_AccelSensor
 23023 ;; This function uses a non-reentrant model
 23024 ;;
 23025                           
 23026     10A4                     _LIGHTBLUE_SplitWord:	
 23027                           ;psect for function _LIGHTBLUE_SplitWord
 23028                           
 23029                           
 23030                           ;incstack = 0
 23031                           ; Regs used in _LIGHTBLUE_SplitWord: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23032                           ;LIGHTBLUE_SplitWord@payload stored from wreg
 23033     10A4  00FB               	movwf	LIGHTBLUE_SplitWord@payload
 23034     10A5                     l13549:
 23035                           
 23036                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 467:     LIGHTBLUE_SplitByte(paylo
      +                          ad, value);
 23037     10A5  0879               	movf	LIGHTBLUE_SplitWord@value,w
 23038     10A6  00F6               	movwf	LIGHTBLUE_SplitByte@value
 23039     10A7  087B               	movf	LIGHTBLUE_SplitWord@payload,w
 23040     10A8  3196  26FD  3190   	fcall	_LIGHTBLUE_SplitByte
 23041                           
 23042                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 468:     LIGHTBLUE_SplitByte(paylo
      +                          ad, value >> 8);
 23043     10AB  087A               	movf	LIGHTBLUE_SplitWord@value+1,w
 23044     10AC  00F6               	movwf	LIGHTBLUE_SplitByte@value
 23045     10AD  087B               	movf	LIGHTBLUE_SplitWord@payload,w
 23046     10AE  3196  26FD  3190   	fcall	_LIGHTBLUE_SplitByte
 23047     10B1                     l196:
 23048     10B1  0008               	return
 23049     10B2                     __end_of_LIGHTBLUE_SplitWord:
 23050                           
 23051                           	psect	text92
 23052     16FD                     __ptext92:	
 23053 ;; *************** function _LIGHTBLUE_SplitByte *****************
 23054 ;; Defined at:
 23055 ;;		line 471 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 23056 ;; Parameters:    Size  Location     Type
 23057 ;;  payload         1    wreg     PTR unsigned char 
 23058 ;;		 -> LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), LIGHTBLUE_PushButton@payload(3), LIGHT
      +BLUE_AccelSensor@payload(13), 
 23059 ;;		 -> LIGHTBLUE_TemperatureSensor@payload(5), 
 23060 ;;  value           1    6[COMMON] char 
 23061 ;; Auto vars:     Size  Location     Type
 23062 ;;  payload         1    8[COMMON] PTR unsigned char 
 23063 ;;		 -> LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), LIGHTBLUE_PushButton@payload(3), LIGHT
      +BLUE_AccelSensor@payload(13), 
 23064 ;;		 -> LIGHTBLUE_TemperatureSensor@payload(5), 
 23065 ;; Return value:  Size  Location     Type
 23066 ;;                  1    wreg      void 
 23067 ;; Registers used:
 23068 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23069 ;; Tracked objects:
 23070 ;;		On entry : 0/0
 23071 ;;		On exit  : 0/0
 23072 ;;		Unchanged: 0/0
 23073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23074 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23075 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23076 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23077 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23078 ;;Total ram usage:        3 bytes
 23079 ;; Hardware stack levels used: 1
 23080 ;; Hardware stack levels required when called: 5
 23081 ;; This function calls:
 23082 ;;		_strlen
 23083 ;; This function is called by:
 23084 ;;		_LIGHTBLUE_PushButton
 23085 ;;		_LIGHTBLUE_LedState
 23086 ;;		_LIGHTBLUE_SendProtocolVersion
 23087 ;;		_LIGHTBLUE_SplitWord
 23088 ;; This function uses a non-reentrant model
 23089 ;;
 23090                           
 23091     16FD                     _LIGHTBLUE_SplitByte:	
 23092                           ;psect for function _LIGHTBLUE_SplitByte
 23093                           
 23094                           
 23095                           ;incstack = 0
 23096                           ; Regs used in _LIGHTBLUE_SplitByte: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23097                           ;LIGHTBLUE_SplitByte@payload stored from wreg
 23098     16FD  00F8               	movwf	LIGHTBLUE_SplitByte@payload
 23099     16FE                     l13403:
 23100                           
 23101                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 472:     payload += strlen(payload
      +                          );
 23102     16FE  0878               	movf	LIGHTBLUE_SplitByte@payload,w
 23103     16FF  00F1               	movwf	strlen@s
 23104     1700  01F2               	clrf	strlen@s+1
 23105     1701  3192  22AF  3196   	fcall	_strlen
 23106     1704  0871               	movf	?_strlen,w
 23107     1705  00F7               	movwf	??_LIGHTBLUE_SplitByte
 23108     1706  0877               	movf	??_LIGHTBLUE_SplitByte,w
 23109     1707  07F8               	addwf	LIGHTBLUE_SplitByte@payload,f
 23110     1708                     l13405:
 23111                           
 23112                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 473:     *payload++ = (_hex[(value
      +                           >> 4) & 0xF]);
 23113     1708  0878               	movf	LIGHTBLUE_SplitByte@payload,w
 23114     1709  0086               	movwf	6
 23115     170A  0187               	clrf	7
 23116     170B  0E76               	swapf	LIGHTBLUE_SplitByte@value,w
 23117     170C  390F               	andlw	15
 23118     170D  1989               	btfsc	9,3
 23119     170E  38F0               	iorlw	240
 23120     170F  390F               	andlw	15
 23121     1710  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 23122     1711  0084               	movwf	4
 23123     1712  3001               	movlw	1	; select bank2/3
 23124     1713  0085               	movwf	5
 23125     1714  0800               	movf	0,w
 23126     1715  0081               	movwf	1
 23127     1716                     l13407:
 23128     1716  3001               	movlw	1
 23129     1717  00F7               	movwf	??_LIGHTBLUE_SplitByte
 23130     1718  0877               	movf	??_LIGHTBLUE_SplitByte,w
 23131     1719  07F8               	addwf	LIGHTBLUE_SplitByte@payload,f
 23132     171A                     l13409:
 23133                           
 23134                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 474:     *payload++ = (_hex[(value
      +                          ) & 0xF]);
 23135     171A  0878               	movf	LIGHTBLUE_SplitByte@payload,w
 23136     171B  0086               	movwf	6
 23137     171C  0187               	clrf	7
 23138     171D  0876               	movf	LIGHTBLUE_SplitByte@value,w
 23139     171E  390F               	andlw	15
 23140     171F  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 23141     1720  0084               	movwf	4
 23142     1721  3001               	movlw	1	; select bank2/3
 23143     1722  0085               	movwf	5
 23144     1723  0800               	movf	0,w
 23145     1724  0081               	movwf	1
 23146     1725                     l13411:
 23147     1725  3001               	movlw	1
 23148     1726  00F7               	movwf	??_LIGHTBLUE_SplitByte
 23149     1727  0877               	movf	??_LIGHTBLUE_SplitByte,w
 23150     1728  07F8               	addwf	LIGHTBLUE_SplitByte@payload,f
 23151     1729                     l13413:
 23152                           
 23153                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 475:     *payload = '\0';
 23154     1729  0878               	movf	LIGHTBLUE_SplitByte@payload,w
 23155     172A  0086               	movwf	6
 23156     172B  0187               	clrf	7
 23157     172C  0181               	clrf	1
 23158     172D                     l199:
 23159     172D  0008               	return
 23160     172E                     __end_of_LIGHTBLUE_SplitByte:
 23161                           
 23162                           	psect	text93
 23163     0F74                     __ptext93:	
 23164 ;; *************** function _LIGHTBLUE_SendPacket *****************
 23165 ;; Defined at:
 23166 ;;		line 454 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 23167 ;; Parameters:    Size  Location     Type
 23168 ;;  packetID        1    wreg     unsigned char 
 23169 ;;  payload         1    7[COMMON] PTR unsigned char 
 23170 ;;		 -> LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), LIGHTBLUE_PushButton@payload(3), LIGHT
      +BLUE_AccelSensor@payload(13), 
 23171 ;;		 -> LIGHTBLUE_TemperatureSensor@payload(5), 
 23172 ;; Auto vars:     Size  Location     Type
 23173 ;;  packetID        1   10[COMMON] unsigned char 
 23174 ;; Return value:  Size  Location     Type
 23175 ;;                  1    wreg      void 
 23176 ;; Registers used:
 23177 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23178 ;; Tracked objects:
 23179 ;;		On entry : 0/0
 23180 ;;		On exit  : 0/0
 23181 ;;		Unchanged: 0/0
 23182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23183 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23184 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23185 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23186 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23187 ;;Total ram usage:        4 bytes
 23188 ;; Hardware stack levels used: 1
 23189 ;; Hardware stack levels required when called: 6
 23190 ;; This function calls:
 23191 ;;		_RN487X_Write
 23192 ;;		_strlen
 23193 ;; This function is called by:
 23194 ;;		_LIGHTBLUE_TemperatureSensor
 23195 ;;		_LIGHTBLUE_AccelSensor
 23196 ;;		_LIGHTBLUE_PushButton
 23197 ;;		_LIGHTBLUE_LedState
 23198 ;;		_LIGHTBLUE_SendProtocolVersion
 23199 ;; This function uses a non-reentrant model
 23200 ;;
 23201                           
 23202     0F74                     _LIGHTBLUE_SendPacket:	
 23203                           ;psect for function _LIGHTBLUE_SendPacket
 23204                           
 23205                           
 23206                           ;incstack = 0
 23207                           ; Regs used in _LIGHTBLUE_SendPacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23208                           ;LIGHTBLUE_SendPacket@packetID stored from wreg
 23209     0F74  00FA               	movwf	LIGHTBLUE_SendPacket@packetID
 23210     0F75                     l13551:
 23211                           
 23212                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 455:     RN487X.Write(('['));
 23213     0F75  305B               	movlw	91
 23214     0F76  00F6               	movwf	RN487X_Write@txData
 23215     0F77  3068               	movlw	low (_RN487X| (0+32768))
 23216     0F78  0084               	movwf	4
 23217     0F79  3098               	movlw	high (_RN487X| (0+32768))
 23218     0F7A  0085               	movwf	5
 23219     0F7B  3F01               	moviw [1]fsr0
 23220     0F7C  008A               	movwf	10
 23221     0F7D  3F00               	moviw [0]fsr0
 23222     0F7E  000A               	callw
 23223     0F7F  318F               	pagesel	$
 23224                           
 23225                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 456:     RN487X.Write((_hex[(seque
      +                          nceNumber++) & 0xF]));
 23226     0F80  0140               	movlb	0	; select bank0
 23227     0F81  086C               	movf	_sequenceNumber,w
 23228     0F82  390F               	andlw	15
 23229     0F83  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 23230     0F84  0086               	movwf	6
 23231     0F85  3001               	movlw	1	; select bank2/3
 23232     0F86  0087               	movwf	7
 23233     0F87  0801               	movf	1,w
 23234     0F88  00F6               	movwf	RN487X_Write@txData
 23235     0F89  3068               	movlw	low (_RN487X| (0+32768))
 23236     0F8A  0084               	movwf	4
 23237     0F8B  3098               	movlw	high (_RN487X| (0+32768))
 23238     0F8C  0085               	movwf	5
 23239     0F8D  3F01               	moviw [1]fsr0
 23240     0F8E  008A               	movwf	10
 23241     0F8F  3F00               	moviw [0]fsr0
 23242     0F90  000A               	callw
 23243     0F91  318F               	pagesel	$
 23244     0F92                     l13553:
 23245     0F92  3001               	movlw	1
 23246     0F93  00F8               	movwf	??_LIGHTBLUE_SendPacket
 23247     0F94  0878               	movf	??_LIGHTBLUE_SendPacket,w
 23248     0F95  0140               	movlb	0	; select bank0
 23249     0F96  07EC               	addwf	_sequenceNumber,f
 23250     0F97                     l13555:
 23251                           
 23252                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 457:     RN487X.Write(packetID);
 23253     0F97  087A               	movf	LIGHTBLUE_SendPacket@packetID,w
 23254     0F98  00F6               	movwf	RN487X_Write@txData
 23255     0F99  3068               	movlw	low (_RN487X| (0+32768))
 23256     0F9A  0084               	movwf	4
 23257     0F9B  3098               	movlw	high (_RN487X| (0+32768))
 23258     0F9C  0085               	movwf	5
 23259     0F9D  3F01               	moviw [1]fsr0
 23260     0F9E  008A               	movwf	10
 23261     0F9F  3F00               	moviw [0]fsr0
 23262     0FA0  000A               	callw
 23263     0FA1  318F               	pagesel	$
 23264     0FA2                     l13557:
 23265                           
 23266                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 458:     RN487X.Write((_hex[(strle
      +                          n(payload) >> 4) & 0xF]));
 23267     0FA2  0877               	movf	LIGHTBLUE_SendPacket@payload,w
 23268     0FA3  00F1               	movwf	strlen@s
 23269     0FA4  01F2               	clrf	strlen@s+1
 23270     0FA5  3192  22AF  318F   	fcall	_strlen
 23271     0FA8  0871               	movf	?_strlen,w
 23272     0FA9  00F8               	movwf	??_LIGHTBLUE_SendPacket
 23273     0FAA  0872               	movf	?_strlen+1,w
 23274     0FAB  00F9               	movwf	??_LIGHTBLUE_SendPacket+1
 23275     0FAC  3004               	movlw	4
 23276     0FAD                     u10425:
 23277     0FAD  36F9               	lsrf	??_LIGHTBLUE_SendPacket+1,f
 23278     0FAE  0CF8               	rrf	??_LIGHTBLUE_SendPacket,f
 23279     0FAF  0B89               	decfsz	9,f
 23280     0FB0  2FAD               	goto	u10425
 23281     0FB1  0878               	movf	??_LIGHTBLUE_SendPacket,w
 23282     0FB2  390F               	andlw	15
 23283     0FB3  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 23284     0FB4  0086               	movwf	6
 23285     0FB5  3001               	movlw	1	; select bank2/3
 23286     0FB6  0087               	movwf	7
 23287     0FB7  0801               	movf	1,w
 23288     0FB8  00F6               	movwf	RN487X_Write@txData
 23289     0FB9  3068               	movlw	low (_RN487X| (0+32768))
 23290     0FBA  0084               	movwf	4
 23291     0FBB  3098               	movlw	high (_RN487X| (0+32768))
 23292     0FBC  0085               	movwf	5
 23293     0FBD  3F01               	moviw [1]fsr0
 23294     0FBE  008A               	movwf	10
 23295     0FBF  3F00               	moviw [0]fsr0
 23296     0FC0  000A               	callw
 23297     0FC1  318F               	pagesel	$
 23298     0FC2                     l13559:
 23299                           
 23300                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 459:     RN487X.Write((_hex[(strle
      +                          n(payload)) & 0xF]));
 23301     0FC2  0877               	movf	LIGHTBLUE_SendPacket@payload,w
 23302     0FC3  00F1               	movwf	strlen@s
 23303     0FC4  01F2               	clrf	strlen@s+1
 23304     0FC5  3192  22AF  318F   	fcall	_strlen
 23305     0FC8  0871               	movf	?_strlen,w
 23306     0FC9  390F               	andlw	15
 23307     0FCA  3E4C               	addlw	(low (__hex| (0+256)))& (0+255)
 23308     0FCB  0086               	movwf	6
 23309     0FCC  3001               	movlw	1	; select bank2/3
 23310     0FCD  0087               	movwf	7
 23311     0FCE  0801               	movf	1,w
 23312     0FCF  00F6               	movwf	RN487X_Write@txData
 23313     0FD0  3068               	movlw	low (_RN487X| (0+32768))
 23314     0FD1  0084               	movwf	4
 23315     0FD2  3098               	movlw	high (_RN487X| (0+32768))
 23316     0FD3  0085               	movwf	5
 23317     0FD4  3F01               	moviw [1]fsr0
 23318     0FD5  008A               	movwf	10
 23319     0FD6  3F00               	moviw [0]fsr0
 23320     0FD7  000A               	callw
 23321     0FD8  318F               	pagesel	$
 23322                           
 23323                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 460:     while (*payload) {
 23324     0FD9  2FEC               	goto	l13565
 23325     0FDA                     l13561:
 23326                           
 23327                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 461:         RN487X.Write((*(uint8
      +                          _t *) payload++));
 23328     0FDA  0877               	movf	LIGHTBLUE_SendPacket@payload,w
 23329     0FDB  0086               	movwf	6
 23330     0FDC  0187               	clrf	7
 23331     0FDD  0801               	movf	1,w
 23332     0FDE  00F6               	movwf	RN487X_Write@txData
 23333     0FDF  3068               	movlw	low (_RN487X| (0+32768))
 23334     0FE0  0084               	movwf	4
 23335     0FE1  3098               	movlw	high (_RN487X| (0+32768))
 23336     0FE2  0085               	movwf	5
 23337     0FE3  3F01               	moviw [1]fsr0
 23338     0FE4  008A               	movwf	10
 23339     0FE5  3F00               	moviw [0]fsr0
 23340     0FE6  000A               	callw
 23341     0FE7  318F               	pagesel	$
 23342     0FE8                     l13563:
 23343     0FE8  3001               	movlw	1
 23344     0FE9  00F8               	movwf	??_LIGHTBLUE_SendPacket
 23345     0FEA  0878               	movf	??_LIGHTBLUE_SendPacket,w
 23346     0FEB  07F7               	addwf	LIGHTBLUE_SendPacket@payload,f
 23347     0FEC                     l13565:
 23348                           
 23349                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 460:     while (*payload) {
 23350     0FEC  0877               	movf	LIGHTBLUE_SendPacket@payload,w
 23351     0FED  0086               	movwf	6
 23352     0FEE  0187               	clrf	7
 23353     0FEF  0801               	movf	1,w
 23354     0FF0  1D03               	btfss	3,2
 23355     0FF1  2FF3               	goto	u10431
 23356     0FF2  2FF4               	goto	u10430
 23357     0FF3                     u10431:
 23358     0FF3  2FDA               	goto	l13561
 23359     0FF4                     u10430:
 23360     0FF4                     l13567:
 23361                           
 23362                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 463:     RN487X.Write((']'));
 23363     0FF4  305D               	movlw	93
 23364     0FF5  00F6               	movwf	RN487X_Write@txData
 23365     0FF6  3068               	movlw	low (_RN487X| (0+32768))
 23366     0FF7  0084               	movwf	4
 23367     0FF8  3098               	movlw	high (_RN487X| (0+32768))
 23368     0FF9  0085               	movwf	5
 23369     0FFA  3F01               	moviw [1]fsr0
 23370     0FFB  008A               	movwf	10
 23371     0FFC  3F00               	moviw [0]fsr0
 23372     0FFD  000A               	callw
 23373     0FFE  318F               	pagesel	$
 23374     0FFF                     l193:
 23375     0FFF  0008               	return
 23376     1000                     __end_of_LIGHTBLUE_SendPacket:
 23377                           
 23378                           	psect	text94
 23379     12AF                     __ptext94:	
 23380 ;; *************** function _strlen *****************
 23381 ;; Defined at:
 23382 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strlen.c"
 23383 ;; Parameters:    Size  Location     Type
 23384 ;;  s               2    1[COMMON] PTR const unsigned char 
 23385 ;;		 -> lightBlueSerial(80), statusBuffer@main$F4268(80), STR_5(12), STR_3(11), 
 23386 ;;		 -> statusBuffer(80), NULL(0), LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), 
 23387 ;;		 -> LIGHTBLUE_PushButton@payload(3), LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), STR_
      +1(6), 
 23388 ;; Auto vars:     Size  Location     Type
 23389 ;;  a               2    4[COMMON] PTR const unsigned char 
 23390 ;;		 -> lightBlueSerial(80), statusBuffer@main$F4268(80), STR_5(12), STR_3(11), 
 23391 ;;		 -> statusBuffer(80), NULL(0), LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), 
 23392 ;;		 -> LIGHTBLUE_PushButton@payload(3), LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), STR_
      +1(6), 
 23393 ;; Return value:  Size  Location     Type
 23394 ;;                  2    1[COMMON] unsigned int 
 23395 ;; Registers used:
 23396 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 23397 ;; Tracked objects:
 23398 ;;		On entry : 0/0
 23399 ;;		On exit  : 0/0
 23400 ;;		Unchanged: 0/0
 23401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23402 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23403 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23404 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23405 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23406 ;;Total ram usage:        5 bytes
 23407 ;; Hardware stack levels used: 1
 23408 ;; Hardware stack levels required when called: 4
 23409 ;; This function calls:
 23410 ;;		Nothing
 23411 ;; This function is called by:
 23412 ;;		_LIGHTBLUE_SendProtocolVersion
 23413 ;;		_LIGHTBLUE_SendSerialData
 23414 ;;		_LIGHTBLUE_SendPacket
 23415 ;;		_LIGHTBLUE_SplitByte
 23416 ;;		_rn487x_PrintMessage
 23417 ;;		_strstr
 23418 ;; This function uses a non-reentrant model
 23419 ;;
 23420                           
 23421     12AF                     _strlen:	
 23422                           ;psect for function _strlen
 23423                           
 23424     12AF                     l13059:	
 23425                           ;incstack = 0
 23426                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 23427                           
 23428     12AF  0872               	movf	strlen@s+1,w
 23429     12B0  00F5               	movwf	strlen@a+1
 23430     12B1  0871               	movf	strlen@s,w
 23431     12B2  00F4               	movwf	strlen@a
 23432     12B3  2AB8               	goto	l13063
 23433     12B4                     l13061:
 23434     12B4  3001               	movlw	1
 23435     12B5  07F1               	addwf	strlen@s,f
 23436     12B6  3000               	movlw	0
 23437     12B7  3DF2               	addwfc	strlen@s+1,f
 23438     12B8                     l13063:
 23439     12B8  0871               	movf	strlen@s,w
 23440     12B9  0084               	movwf	4
 23441     12BA  0872               	movf	strlen@s+1,w
 23442     12BB  0085               	movwf	5
 23443     12BC  0012               	moviw fsr0++
 23444     12BD  1D03               	btfss	3,2
 23445     12BE  2AC0               	goto	u9821
 23446     12BF  2AC1               	goto	u9820
 23447     12C0                     u9821:
 23448     12C0  2AB4               	goto	l13061
 23449     12C1                     u9820:
 23450     12C1                     l13065:
 23451     12C1  0874               	movf	strlen@a,w
 23452     12C2  0271               	subwf	strlen@s,w
 23453     12C3  00F1               	movwf	?_strlen
 23454     12C4  0875               	movf	strlen@a+1,w
 23455     12C5  3B72               	subwfb	strlen@s+1,w
 23456     12C6  00F2               	movwf	?_strlen+1
 23457     12C7                     l3310:
 23458     12C7  0008               	return
 23459     12C8                     __end_of_strlen:
 23460                           
 23461                           	psect	text95
 23462     1066                     __ptext95:	
 23463 ;; *************** function _RN487X_Write *****************
 23464 ;; Defined at:
 23465 ;;		line 252 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 23466 ;; Parameters:    Size  Location     Type
 23467 ;;  txData          1    6[COMMON] unsigned char 
 23468 ;; Auto vars:     Size  Location     Type
 23469 ;;		None
 23470 ;; Return value:  Size  Location     Type
 23471 ;;                  1    wreg      void 
 23472 ;; Registers used:
 23473 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23474 ;; Tracked objects:
 23475 ;;		On entry : 0/0
 23476 ;;		On exit  : 0/0
 23477 ;;		Unchanged: 0/0
 23478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23479 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23482 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23483 ;;Total ram usage:        1 bytes
 23484 ;; Hardware stack levels used: 1
 23485 ;; Hardware stack levels required when called: 5
 23486 ;; This function calls:
 23487 ;;		_EUSART1_Write
 23488 ;;		_EUSART2_Write
 23489 ;; This function is called by:
 23490 ;;		_RN487X_SendCmd
 23491 ;;		_LIGHTBLUE_SendPacket
 23492 ;;		_LIGHTBLUE_SendSerialData
 23493 ;;		_RN487X_Example_TransparentUart
 23494 ;;		_main
 23495 ;; This function uses a non-reentrant model
 23496 ;;
 23497                           
 23498     1066                     _RN487X_Write:	
 23499                           ;psect for function _RN487X_Write
 23500                           
 23501     1066                     l13019:	
 23502                           ;incstack = 0
 23503                           ; Regs used in _RN487X_Write: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23504                           
 23505                           
 23506                           ;mcc_generated_files/rn487x/rn487x_interface.c: 252: static __attribute__((inline)) void
      +                           RN487X_Write(uint8_t txData);mcc_generated_files/rn487x/rn487x_interface.c: 253: {;mcc_
      +                          generated_files/rn487x/rn487x_interface.c: 254:     uart[UART_BLE].Write(txData);
 23507     1066  0876               	movf	RN487X_Write@txData,w
 23508     1067  00F1               	movwf	EUSART2_Write@txData
 23509     1068  3016               	movlw	low ((_uart+22)| (0+32768))
 23510     1069  0084               	movwf	4
 23511     106A  3098               	movlw	high ((_uart+22)| (0+32768))
 23512     106B  0085               	movwf	5
 23513     106C  3F01               	moviw [1]fsr0
 23514     106D  008A               	movwf	10
 23515     106E  3F00               	moviw [0]fsr0
 23516     106F  000A               	callw
 23517     1070  3190               	pagesel	$
 23518     1071                     l1411:
 23519     1071  0008               	return
 23520     1072                     __end_of_RN487X_Write:
 23521                           
 23522                           	psect	text96
 23523     1521                     __ptext96:	
 23524 ;; *************** function _EUSART1_Write *****************
 23525 ;; Defined at:
 23526 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 23527 ;; Parameters:    Size  Location     Type
 23528 ;;  txData          1    1[COMMON] unsigned char 
 23529 ;; Auto vars:     Size  Location     Type
 23530 ;;		None
 23531 ;; Return value:  Size  Location     Type
 23532 ;;                  1    wreg      void 
 23533 ;; Registers used:
 23534 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23535 ;; Tracked objects:
 23536 ;;		On entry : 0/0
 23537 ;;		On exit  : 0/0
 23538 ;;		Unchanged: 0/0
 23539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23540 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23542 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23543 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23544 ;;Total ram usage:        2 bytes
 23545 ;; Hardware stack levels used: 1
 23546 ;; Hardware stack levels required when called: 4
 23547 ;; This function calls:
 23548 ;;		Nothing
 23549 ;; This function is called by:
 23550 ;;		_putch
 23551 ;;		_RN487X_Write
 23552 ;;		_rn487x_PrintMessageStart
 23553 ;;		_rn487x_PrintMessageEnd
 23554 ;;		_rn487x_PrintIndicatorCharacters
 23555 ;;		_rn487x_PrintMessage
 23556 ;;		_LIGHTBLUE_PerformAction
 23557 ;;		_RN487X_Example_TransparentUart
 23558 ;;		_main
 23559 ;; This function uses a non-reentrant model
 23560 ;;
 23561                           
 23562     1521                     _EUSART1_Write:	
 23563                           ;psect for function _EUSART1_Write
 23564                           
 23565     1521                     l12909:	
 23566                           ;incstack = 0
 23567                           ; Regs used in _EUSART1_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 23568                           
 23569     1521                     l12911:	
 23570                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 23571                           
 23572                           
 23573                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 23574     1521  0140               	movlb	0	; select bank0
 23575     1522  085B               	movf	_eusart1TxBufferRemaining,w	;volatile
 23576     1523  1903               	btfsc	3,2
 23577     1524  2D26               	goto	u9701
 23578     1525  2D27               	goto	u9700
 23579     1526                     u9701:
 23580     1526  2D21               	goto	l12911
 23581     1527                     u9700:
 23582     1527                     l1844:
 23583                           
 23584                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
 23585     1527  014E               	movlb	14	; select bank14
 23586     1528  1A19               	btfsc	25,4	;volatile
 23587     1529  2D2B               	goto	u9711
 23588     152A  2D2C               	goto	u9710
 23589     152B                     u9711:
 23590     152B  2D30               	goto	l1845
 23591     152C                     u9710:
 23592     152C                     l12913:
 23593                           
 23594                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
 23595     152C  0871               	movf	EUSART1_Write@txData,w
 23596     152D  0142               	movlb	2	; select bank2
 23597     152E  009A               	movwf	26	;volatile
 23598                           
 23599                           ;mcc_generated_files/eusart1.c: 182:     }
 23600     152F  2D45               	goto	l12925
 23601     1530                     l1845:	
 23602                           ;mcc_generated_files/eusart1.c: 183:     else
 23603                           
 23604                           
 23605                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
 23606     1530  1219               	bcf	25,4	;volatile
 23607     1531                     l12915:
 23608                           
 23609                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 23610     1531  0140               	movlb	0	; select bank0
 23611     1532  085D               	movf	_eusart1TxHead,w
 23612     1533  3EC6               	addlw	(low (_eusart1TxBuffer| 0))& (0+255)
 23613     1534  0086               	movwf	6
 23614     1535  0187               	clrf	7
 23615     1536  0871               	movf	EUSART1_Write@txData,w
 23616     1537  0081               	movwf	1
 23617     1538                     l12917:
 23618     1538  3001               	movlw	1
 23619     1539  00F2               	movwf	??_EUSART1_Write
 23620     153A  0872               	movf	??_EUSART1_Write,w
 23621     153B  07DD               	addwf	_eusart1TxHead,f	;volatile
 23622     153C                     l12919:
 23623                           
 23624                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 23625     153C  3008               	movlw	8
 23626     153D  025D               	subwf	_eusart1TxHead,w	;volatile
 23627     153E  1C03               	skipc
 23628     153F  2D41               	goto	u9721
 23629     1540  2D42               	goto	u9720
 23630     1541                     u9721:
 23631     1541  2D43               	goto	l12923
 23632     1542                     u9720:
 23633     1542                     l12921:
 23634                           
 23635                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 23636     1542  01DD               	clrf	_eusart1TxHead	;volatile
 23637     1543                     l12923:
 23638                           
 23639                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 23640     1543  3001               	movlw	1
 23641     1544  02DB               	subwf	_eusart1TxBufferRemaining,f	;volatile
 23642     1545                     l12925:
 23643                           
 23644                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
 23645     1545  014E               	movlb	14	; select bank14
 23646     1546  1619               	bsf	25,4	;volatile
 23647     1547                     l1848:
 23648     1547  0008               	return
 23649     1548                     __end_of_EUSART1_Write:
 23650                           
 23651                           	psect	text97
 23652     14FA                     __ptext97:	
 23653 ;; *************** function _EUSART2_Write *****************
 23654 ;; Defined at:
 23655 ;;		line 173 in file "mcc_generated_files/eusart2.c"
 23656 ;; Parameters:    Size  Location     Type
 23657 ;;  txData          1    1[COMMON] unsigned char 
 23658 ;; Auto vars:     Size  Location     Type
 23659 ;;		None
 23660 ;; Return value:  Size  Location     Type
 23661 ;;                  1    wreg      void 
 23662 ;; Registers used:
 23663 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23664 ;; Tracked objects:
 23665 ;;		On entry : 0/0
 23666 ;;		On exit  : 0/0
 23667 ;;		Unchanged: 0/0
 23668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23669 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23671 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23672 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23673 ;;Total ram usage:        2 bytes
 23674 ;; Hardware stack levels used: 1
 23675 ;; Hardware stack levels required when called: 4
 23676 ;; This function calls:
 23677 ;;		Nothing
 23678 ;; This function is called by:
 23679 ;;		_RN487X_Write
 23680 ;;		_rn487x_PrintMessageStart
 23681 ;;		_rn487x_PrintMessageEnd
 23682 ;;		_rn487x_PrintIndicatorCharacters
 23683 ;;		_rn487x_PrintMessage
 23684 ;;		_LIGHTBLUE_PerformAction
 23685 ;;		_RN487X_Example_TransparentUart
 23686 ;;		_main
 23687 ;; This function uses a non-reentrant model
 23688 ;;
 23689                           
 23690     14FA                     _EUSART2_Write:	
 23691                           ;psect for function _EUSART2_Write
 23692                           
 23693     14FA                     l12865:	
 23694                           ;incstack = 0
 23695                           ; Regs used in _EUSART2_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 23696                           
 23697     14FA                     l12867:	
 23698                           ;mcc_generated_files/eusart2.c: 173: void EUSART2_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart2.c: 174: {;mcc_generated_files/eusart2.c: 175:     while(0 == eusart2TxBuffer
      +                          Remaining)
 23699                           
 23700                           
 23701                           ;mcc_generated_files/eusart2.c: 175:     while(0 == eusart2TxBufferRemaining)
 23702     14FA  0140               	movlb	0	; select bank0
 23703     14FB  0861               	movf	_eusart2TxBufferRemaining,w	;volatile
 23704     14FC  1903               	btfsc	3,2
 23705     14FD  2CFF               	goto	u9651
 23706     14FE  2D00               	goto	u9650
 23707     14FF                     u9651:
 23708     14FF  2CFA               	goto	l12867
 23709     1500                     u9650:
 23710     1500                     l1700:
 23711                           
 23712                           ;mcc_generated_files/eusart2.c: 179:     if(0 == PIE3bits.TX2IE)
 23713     1500  014E               	movlb	14	; select bank14
 23714     1501  1B19               	btfsc	25,6	;volatile
 23715     1502  2D04               	goto	u9661
 23716     1503  2D05               	goto	u9660
 23717     1504                     u9661:
 23718     1504  2D09               	goto	l1701
 23719     1505                     u9660:
 23720     1505                     l12869:
 23721                           
 23722                           ;mcc_generated_files/eusart2.c: 180:     {;mcc_generated_files/eusart2.c: 181:         T
      +                          X2REG = txData;
 23723     1505  0871               	movf	EUSART2_Write@txData,w
 23724     1506  0154               	movlb	20	; select bank20
 23725     1507  009A               	movwf	26	;volatile
 23726                           
 23727                           ;mcc_generated_files/eusart2.c: 182:     }
 23728     1508  2D1E               	goto	l12881
 23729     1509                     l1701:	
 23730                           ;mcc_generated_files/eusart2.c: 183:     else
 23731                           
 23732                           
 23733                           ;mcc_generated_files/eusart2.c: 184:     {;mcc_generated_files/eusart2.c: 185:         P
      +                          IE3bits.TX2IE = 0;
 23734     1509  1319               	bcf	25,6	;volatile
 23735     150A                     l12871:
 23736                           
 23737                           ;mcc_generated_files/eusart2.c: 186:         eusart2TxBuffer[eusart2TxHead++] = txData;
 23738     150A  0140               	movlb	0	; select bank0
 23739     150B  0863               	movf	_eusart2TxHead,w
 23740     150C  3EDE               	addlw	(low (_eusart2TxBuffer| 0))& (0+255)
 23741     150D  0086               	movwf	6
 23742     150E  0187               	clrf	7
 23743     150F  0871               	movf	EUSART2_Write@txData,w
 23744     1510  0081               	movwf	1
 23745     1511                     l12873:
 23746     1511  3001               	movlw	1
 23747     1512  00F2               	movwf	??_EUSART2_Write
 23748     1513  0872               	movf	??_EUSART2_Write,w
 23749     1514  07E3               	addwf	_eusart2TxHead,f	;volatile
 23750     1515                     l12875:
 23751                           
 23752                           ;mcc_generated_files/eusart2.c: 187:         if(sizeof(eusart2TxBuffer) <= eusart2TxHead
      +                          )
 23753     1515  3008               	movlw	8
 23754     1516  0263               	subwf	_eusart2TxHead,w	;volatile
 23755     1517  1C03               	skipc
 23756     1518  2D1A               	goto	u9671
 23757     1519  2D1B               	goto	u9670
 23758     151A                     u9671:
 23759     151A  2D1C               	goto	l12879
 23760     151B                     u9670:
 23761     151B                     l12877:
 23762                           
 23763                           ;mcc_generated_files/eusart2.c: 188:         {;mcc_generated_files/eusart2.c: 189:      
      +                                 eusart2TxHead = 0;
 23764     151B  01E3               	clrf	_eusart2TxHead	;volatile
 23765     151C                     l12879:
 23766                           
 23767                           ;mcc_generated_files/eusart2.c: 191:         eusart2TxBufferRemaining--;
 23768     151C  3001               	movlw	1
 23769     151D  02E1               	subwf	_eusart2TxBufferRemaining,f	;volatile
 23770     151E                     l12881:
 23771                           
 23772                           ;mcc_generated_files/eusart2.c: 193:     PIE3bits.TX2IE = 1;
 23773     151E  014E               	movlb	14	; select bank14
 23774     151F  1719               	bsf	25,6	;volatile
 23775     1520                     l1704:
 23776     1520  0008               	return
 23777     1521                     __end_of_EUSART2_Write:
 23778                           
 23779                           	psect	text98
 23780     0C48                     __ptext98:	
 23781 ;; *************** function _BMA253_GetAccelDataXYZ *****************
 23782 ;; Defined at:
 23783 ;;		line 118 in file "mcc_generated_files/application/BMA253_accel.c"
 23784 ;; Parameters:    Size  Location     Type
 23785 ;;  accelData       1    wreg     PTR struct .
 23786 ;;		 -> LIGHTBLUE_AccelSensor@accelData(6), 
 23787 ;; Auto vars:     Size  Location     Type
 23788 ;;  accelData       1   19[BANK0 ] PTR struct .
 23789 ;;		 -> LIGHTBLUE_AccelSensor@accelData(6), 
 23790 ;;  sensorValue     2   20[BANK0 ] short 
 23791 ;;  mSB             1   18[BANK0 ] char 
 23792 ;;  lSB             1   17[BANK0 ] char 
 23793 ;; Return value:  Size  Location     Type
 23794 ;;                  1    wreg      void 
 23795 ;; Registers used:
 23796 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23797 ;; Tracked objects:
 23798 ;;		On entry : 0/0
 23799 ;;		On exit  : 0/0
 23800 ;;		Unchanged: 0/0
 23801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23803 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23804 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23805 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23806 ;;Total ram usage:        6 bytes
 23807 ;; Hardware stack levels used: 1
 23808 ;; Hardware stack levels required when called: 15
 23809 ;; This function calls:
 23810 ;;		_BMA253_GetAccelDataY
 23811 ;;		_BMA253_GetAccelDataZ
 23812 ;;		_BMA253_NewAccelDataRdyY
 23813 ;;		_BMA253_NewAccelDataRdyZ
 23814 ;;		_readRegister
 23815 ;; This function is called by:
 23816 ;;		_LIGHTBLUE_AccelSensor
 23817 ;; This function uses a non-reentrant model
 23818 ;;
 23819                           
 23820     0C48                     _BMA253_GetAccelDataXYZ:	
 23821                           ;psect for function _BMA253_GetAccelDataXYZ
 23822                           
 23823                           
 23824                           ;incstack = 0
 23825 ;; hardware stack exceeded
 23826                           ; Regs used in _BMA253_GetAccelDataXYZ: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23827                           ;BMA253_GetAccelDataXYZ@accelData stored from wreg
 23828     0C48  0140               	movlb	0	; select bank0
 23829     0C49  00B3               	movwf	BMA253_GetAccelDataXYZ@accelData
 23830     0C4A                     l13527:
 23831                           
 23832                           ;mcc_generated_files/application/BMA253_accel.c: 121:     int8_t mSB = 0;
 23833     0C4A  01B2               	clrf	BMA253_GetAccelDataXYZ@mSB
 23834     0C4B                     l13529:
 23835                           
 23836                           ;mcc_generated_files/application/BMA253_accel.c: 123:     lSB = readRegister(TMAG5273_RE
      +                          G_X_LSB_RESULT);
 23837     0C4B  3013               	movlw	19
 23838     0C4C  3190  205A  318C   	fcall	_readRegister
 23839     0C4F  0140               	movlb	0	; select bank0
 23840     0C50  00B1               	movwf	BMA253_GetAccelDataXYZ@lSB
 23841     0C51                     l13531:
 23842                           
 23843                           ;mcc_generated_files/application/BMA253_accel.c: 124:     mSB = readRegister(TMAG5273_RE
      +                          G_X_MSB_RESULT);
 23844     0C51  3012               	movlw	18
 23845     0C52  3190  205A  318C   	fcall	_readRegister
 23846     0C55  0140               	movlb	0	; select bank0
 23847     0C56  00B2               	movwf	BMA253_GetAccelDataXYZ@mSB
 23848     0C57                     l13533:
 23849                           
 23850                           ;mcc_generated_files/application/BMA253_accel.c: 126:     int16_t sensorValue;;mcc_gener
      +                          ated_files/application/BMA253_accel.c: 128:     sensorValue = mSB >> 8 | lSB;
 23851     0C57  0832               	movf	BMA253_GetAccelDataXYZ@mSB,w
 23852     0C58  00B0               	movwf	??_BMA253_GetAccelDataXYZ
 23853     0C59  3008               	movlw	8
 23854     0C5A                     u10395:
 23855     0C5A  1003               	clrc
 23856     0C5B  1BB0               	btfsc	??_BMA253_GetAccelDataXYZ,7
 23857     0C5C  1403               	setc
 23858     0C5D  0CB0               	rrf	??_BMA253_GetAccelDataXYZ,f
 23859     0C5E  0B89               	decfsz	9,f
 23860     0C5F  2C5A               	goto	u10395
 23861     0C60  0830               	movf	??_BMA253_GetAccelDataXYZ,w
 23862     0C61  0431               	iorwf	BMA253_GetAccelDataXYZ@lSB,w
 23863     0C62  00B4               	movwf	BMA253_GetAccelDataXYZ@sensorValue
 23864     0C63  01B5               	clrf	BMA253_GetAccelDataXYZ@sensorValue+1
 23865     0C64  1BB4               	btfsc	BMA253_GetAccelDataXYZ@sensorValue,7
 23866     0C65  03B5               	decf	BMA253_GetAccelDataXYZ@sensorValue+1,f
 23867     0C66                     l13535:
 23868                           
 23869                           ;mcc_generated_files/application/BMA253_accel.c: 130:     accelData->x = sensorValue;
 23870     0C66  0833               	movf	BMA253_GetAccelDataXYZ@accelData,w
 23871     0C67  0086               	movwf	6
 23872     0C68  0187               	clrf	7
 23873     0C69  0834               	movf	BMA253_GetAccelDataXYZ@sensorValue,w
 23874     0C6A  3FC0               	movwi [0]fsr1
 23875     0C6B  0835               	movf	BMA253_GetAccelDataXYZ@sensorValue+1,w
 23876     0C6C  3FC1               	movwi [1]fsr1
 23877     0C6D                     l13537:	
 23878                           ;mcc_generated_files/application/BMA253_accel.c: 132:     while (!BMA253_NewAccelDataRdy
      +                          Y())
 23879                           
 23880                           
 23881                           ;mcc_generated_files/application/BMA253_accel.c: 132:     while (!BMA253_NewAccelDataRdy
      +                          Y())
 23882     0C6D  3190  20DF  318C   	fcall	_BMA253_NewAccelDataRdyY
 23883     0C70  3A00               	xorlw	0
 23884     0C71  1903               	skipnz
 23885     0C72  2C74               	goto	u10401
 23886     0C73  2C75               	goto	u10400
 23887     0C74                     u10401:
 23888     0C74  2C6D               	goto	l13537
 23889     0C75                     u10400:
 23890     0C75                     l13539:
 23891                           
 23892                           ;mcc_generated_files/application/BMA253_accel.c: 137:     BMA253_GetAccelDataY(&sensorVa
      +                          lue);
 23893     0C75  3034               	movlw	(low (BMA253_GetAccelDataXYZ@sensorValue| 0))& (0+255)
 23894     0C76  3196  2645  318C   	fcall	_BMA253_GetAccelDataY
 23895     0C79                     l13541:
 23896                           
 23897                           ;mcc_generated_files/application/BMA253_accel.c: 138:     accelData->y = sensorValue;
 23898     0C79  0140               	movlb	0	; select bank0
 23899     0C7A  0833               	movf	BMA253_GetAccelDataXYZ@accelData,w
 23900     0C7B  3E02               	addlw	2
 23901     0C7C  0086               	movwf	6
 23902     0C7D  0187               	clrf	7
 23903     0C7E  0834               	movf	BMA253_GetAccelDataXYZ@sensorValue,w
 23904     0C7F  3FC0               	movwi [0]fsr1
 23905     0C80  0835               	movf	BMA253_GetAccelDataXYZ@sensorValue+1,w
 23906     0C81  3FC1               	movwi [1]fsr1
 23907     0C82                     l13543:	
 23908                           ;mcc_generated_files/application/BMA253_accel.c: 140:      while (!BMA253_NewAccelDataRd
      +                          yZ())
 23909                           
 23910                           
 23911                           ;mcc_generated_files/application/BMA253_accel.c: 140:      while (!BMA253_NewAccelDataRd
      +                          yZ())
 23912     0C82  3190  20F0  318C   	fcall	_BMA253_NewAccelDataRdyZ
 23913     0C85  3A00               	xorlw	0
 23914     0C86  1903               	skipnz
 23915     0C87  2C89               	goto	u10411
 23916     0C88  2C8A               	goto	u10410
 23917     0C89                     u10411:
 23918     0C89  2C82               	goto	l13543
 23919     0C8A                     u10410:
 23920     0C8A                     l13545:
 23921                           
 23922                           ;mcc_generated_files/application/BMA253_accel.c: 145:     BMA253_GetAccelDataZ(&sensorVa
      +                          lue);
 23923     0C8A  3034               	movlw	(low (BMA253_GetAccelDataXYZ@sensorValue| 0))& (0+255)
 23924     0C8B  3196  2673  318C   	fcall	_BMA253_GetAccelDataZ
 23925     0C8E                     l13547:
 23926                           
 23927                           ;mcc_generated_files/application/BMA253_accel.c: 146:     accelData->z = sensorValue;
 23928     0C8E  0140               	movlb	0	; select bank0
 23929     0C8F  0833               	movf	BMA253_GetAccelDataXYZ@accelData,w
 23930     0C90  3E04               	addlw	4
 23931     0C91  0086               	movwf	6
 23932     0C92  0187               	clrf	7
 23933     0C93  0834               	movf	BMA253_GetAccelDataXYZ@sensorValue,w
 23934     0C94  3FC0               	movwi [0]fsr1
 23935     0C95  0835               	movf	BMA253_GetAccelDataXYZ@sensorValue+1,w
 23936     0C96  3FC1               	movwi [1]fsr1
 23937     0C97                     l44:
 23938     0C97  0008               	return
 23939     0C98                     __end_of_BMA253_GetAccelDataXYZ:
 23940                           
 23941                           	psect	text99
 23942     105A                     __ptext99:	
 23943 ;; *************** function _readRegister *****************
 23944 ;; Defined at:
 23945 ;;		line 146 in file "mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c"
 23946 ;; Parameters:    Size  Location     Type
 23947 ;;  regAddress      1    wreg     unsigned char 
 23948 ;; Auto vars:     Size  Location     Type
 23949 ;;  regAddress      1   10[BANK0 ] unsigned char 
 23950 ;;  regVal          1   11[BANK0 ] unsigned char 
 23951 ;; Return value:  Size  Location     Type
 23952 ;;                  1    wreg      unsigned char 
 23953 ;; Registers used:
 23954 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23955 ;; Tracked objects:
 23956 ;;		On entry : 0/0
 23957 ;;		On exit  : 0/0
 23958 ;;		Unchanged: 0/0
 23959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23961 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23963 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23964 ;;Total ram usage:        2 bytes
 23965 ;; Hardware stack levels used: 1
 23966 ;; Hardware stack levels required when called: 13
 23967 ;; This function calls:
 23968 ;;		_i2c_read1ByteRegister
 23969 ;; This function is called by:
 23970 ;;		_BMA253_GetAccelDataXYZ
 23971 ;;		_LIGHTBLUE_TemperatureSensor
 23972 ;;		_setOperatingMode
 23973 ;;		_setMagneticChannel
 23974 ;;		_setXYAxisRange
 23975 ;;		_setZAxisRange
 23976 ;;		_setTemperatureEn
 23977 ;;		_getLowPower
 23978 ;;		_getOperatingMode
 23979 ;;		_getMagneticChannel
 23980 ;;		_getAngleEn
 23981 ;;		_getTemperatureEN
 23982 ;;		_getDeviceStatus
 23983 ;;		_setCRCMode
 23984 ;;		_setMagTemp
 23985 ;;		_setConvAvg
 23986 ;;		_setReadMode
 23987 ;;		_setIntThreshold
 23988 ;;		_setLowPower
 23989 ;;		_setGlitchFilter
 23990 ;;		_setTriggerMode
 23991 ;;		_setSleeptime
 23992 ;;		_setMagDir
 23993 ;;		_setMagnitudeGain
 23994 ;;		_setAngleEn
 23995 ;;		_setInterruptResult
 23996 ;;		_setThresholdEn
 23997 ;;		_setIntPinState
 23998 ;;		_setInterruptMode
 23999 ;;		_setMaskInterrupt
 24000 ;;		_setI2CAddressEN
 24001 ;;		_setOscillatorError
 24002 ;;		_getCRCMode
 24003 ;;		_getMagTemp
 24004 ;;		_getConvAvg
 24005 ;;		_getReadMode
 24006 ;;		_getIntThreshold
 24007 ;;		_getGlitchFiler
 24008 ;;		_getTriggerMode
 24009 ;;		_getSleeptime
 24010 ;;		_getMagDir
 24011 ;;		_getMagnitudeChannelSelect
 24012 ;;		_getMagneticGain
 24013 ;;		_getMagneticOffset1
 24014 ;;		_getMagneticOffset2
 24015 ;;		_getXYAxisRange
 24016 ;;		_getZAxisRange
 24017 ;;		_getXThreshold
 24018 ;;		_getYThreshold
 24019 ;;		_getZThreshold
 24020 ;;		_getTemperatureThreshold
 24021 ;;		_getInterruptResult
 24022 ;;		_getThresholdEn
 24023 ;;		_getIntPinState
 24024 ;;		_getInterruptMode
 24025 ;;		_getMaskInt
 24026 ;;		_getSetCount
 24027 ;;		_getPOR
 24028 ;;		_getDiagStatus
 24029 ;;		_getResultStatus
 24030 ;;		_getI2CAddress
 24031 ;;		_getDeviceID
 24032 ;;		_getInterruptPinStatus
 24033 ;;		_getXData
 24034 ;;		_getYData
 24035 ;;		_getZData
 24036 ;;		_getAngleResult
 24037 ;;		_getMagnitudeResult
 24038 ;; This function uses a non-reentrant model
 24039 ;;
 24040                           
 24041     105A                     _readRegister:	
 24042                           ;psect for function _readRegister
 24043                           
 24044                           
 24045                           ;incstack = 0
 24046                           ; Regs used in _readRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24047                           ;readRegister@regAddress stored from wreg
 24048     105A  0140               	movlb	0	; select bank0
 24049     105B  00AA               	movwf	readRegister@regAddress
 24050     105C                     l13171:
 24051                           
 24052                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 147:     uint8_t regVa
      +                          l;;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 148:     regVal = i2
      +                          c_read1ByteRegister(0X22, regAddress);
 24053     105C  082A               	movf	readRegister@regAddress,w
 24054     105D  00A4               	movwf	i2c_read1ByteRegister@reg
 24055     105E  3022               	movlw	34
 24056     105F  318B  235E  3190   	fcall	_i2c_read1ByteRegister
 24057     1062  0140               	movlb	0	; select bank0
 24058     1063  00AB               	movwf	readRegister@regVal
 24059     1064                     l13173:
 24060                           
 24061                           ;mcc_generated_files/drivers/SparkFun_TMAG5273_Arduino_Library.c: 149:     return regVal
      +                          ;
 24062     1064  082B               	movf	readRegister@regVal,w
 24063     1065                     l661:
 24064     1065  0008               	return
 24065     1066                     __end_of_readRegister:
 24066                           
 24067                           	psect	text100
 24068     1673                     __ptext100:	
 24069 ;; *************** function _BMA253_GetAccelDataZ *****************
 24070 ;; Defined at:
 24071 ;;		line 104 in file "mcc_generated_files/application/BMA253_accel.c"
 24072 ;; Parameters:    Size  Location     Type
 24073 ;;  zAccelData      1    wreg     PTR short 
 24074 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 24075 ;; Auto vars:     Size  Location     Type
 24076 ;;  zAccelData      1   13[BANK0 ] PTR short 
 24077 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 24078 ;;  msbData         1   15[BANK0 ] unsigned char 
 24079 ;;  lsbData         1   14[BANK0 ] unsigned char 
 24080 ;; Return value:  Size  Location     Type
 24081 ;;                  1    wreg      void 
 24082 ;; Registers used:
 24083 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24084 ;; Tracked objects:
 24085 ;;		On entry : 0/0
 24086 ;;		On exit  : 0/0
 24087 ;;		Unchanged: 0/0
 24088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24090 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24091 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24092 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24093 ;;Total ram usage:        6 bytes
 24094 ;; Hardware stack levels used: 1
 24095 ;; Hardware stack levels required when called: 14
 24096 ;; This function calls:
 24097 ;;		_BMA253_NewAccelDataRdyZ
 24098 ;;		_i2c_read1ByteRegister
 24099 ;; This function is called by:
 24100 ;;		_BMA253_GetAccelDataXYZ
 24101 ;; This function uses a non-reentrant model
 24102 ;;
 24103                           
 24104     1673                     _BMA253_GetAccelDataZ:	
 24105                           ;psect for function _BMA253_GetAccelDataZ
 24106                           
 24107                           
 24108                           ;incstack = 0
 24109 ;; hardware stack exceeded
 24110                           ; Regs used in _BMA253_GetAccelDataZ: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24111                           ;BMA253_GetAccelDataZ@zAccelData stored from wreg
 24112     1673  0140               	movlb	0	; select bank0
 24113     1674  00AD               	movwf	BMA253_GetAccelDataZ@zAccelData
 24114     1675                     l13395:
 24115     1675                     l13397:	
 24116                           ;mcc_generated_files/application/BMA253_accel.c: 104: void BMA253_GetAccelDataZ(int16_t 
      +                          *zAccelData);mcc_generated_files/application/BMA253_accel.c: 105: {;mcc_generated_files/
      +                          application/BMA253_accel.c: 106:     uint8_t lsbData;;mcc_generated_files/application/BM
      +                          A253_accel.c: 107:     uint8_t msbData;;mcc_generated_files/application/BMA253_accel.c: 
      +                          108:     while(!BMA253_NewAccelDataRdyZ())
 24117                           
 24118                           
 24119                           ;mcc_generated_files/application/BMA253_accel.c: 108:     while(!BMA253_NewAccelDataRdyZ
      +                          ())
 24120     1675  3190  20F0  3196   	fcall	_BMA253_NewAccelDataRdyZ
 24121     1678  3A00               	xorlw	0
 24122     1679  1903               	skipnz
 24123     167A  2E7C               	goto	u10271
 24124     167B  2E7D               	goto	u10270
 24125     167C                     u10271:
 24126     167C  2E75               	goto	l13397
 24127     167D                     u10270:
 24128     167D                     l13399:
 24129                           
 24130                           ;mcc_generated_files/application/BMA253_accel.c: 113:     lsbData = i2c_read1ByteRegiste
      +                          r((0x19), (0x06));
 24131     167D  3006               	movlw	6
 24132     167E  0140               	movlb	0	; select bank0
 24133     167F  00A4               	movwf	i2c_read1ByteRegister@reg
 24134     1680  3019               	movlw	25
 24135     1681  318B  235E  3196   	fcall	_i2c_read1ByteRegister
 24136     1684  0140               	movlb	0	; select bank0
 24137     1685  00AE               	movwf	BMA253_GetAccelDataZ@lsbData
 24138                           
 24139                           ;mcc_generated_files/application/BMA253_accel.c: 114:     msbData = i2c_read1ByteRegiste
      +                          r((0x19), (0x07));
 24140     1686  3007               	movlw	7
 24141     1687  00A4               	movwf	i2c_read1ByteRegister@reg
 24142     1688  3019               	movlw	25
 24143     1689  318B  235E  3196   	fcall	_i2c_read1ByteRegister
 24144     168C  0140               	movlb	0	; select bank0
 24145     168D  00AF               	movwf	BMA253_GetAccelDataZ@msbData
 24146     168E                     l13401:
 24147                           
 24148                           ;mcc_generated_files/application/BMA253_accel.c: 115:     *zAccelData = ( (((int16_t)msb
      +                          Data) << 8) | (lsbData) ) >> 4;
 24149     168E  082F               	movf	BMA253_GetAccelDataZ@msbData,w
 24150     168F  00AB               	movwf	??_BMA253_GetAccelDataZ+1
 24151     1690  082E               	movf	BMA253_GetAccelDataZ@lsbData,w
 24152     1691  00AA               	movwf	??_BMA253_GetAccelDataZ
 24153     1692  3004               	movlw	4
 24154     1693  00AC               	movwf	??_BMA253_GetAccelDataZ+2
 24155     1694                     u10285:
 24156     1694  0D2B               	rlf	??_BMA253_GetAccelDataZ+1,w
 24157     1695  0CAB               	rrf	??_BMA253_GetAccelDataZ+1,f
 24158     1696  0CAA               	rrf	??_BMA253_GetAccelDataZ,f
 24159     1697  0BAC               	decfsz	??_BMA253_GetAccelDataZ+2,f
 24160     1698  2E94               	goto	u10285
 24161     1699  082D               	movf	BMA253_GetAccelDataZ@zAccelData,w
 24162     169A  0086               	movwf	6
 24163     169B  0187               	clrf	7
 24164     169C  082A               	movf	??_BMA253_GetAccelDataZ,w
 24165     169D  3FC0               	movwi [0]fsr1
 24166     169E  082B               	movf	??_BMA253_GetAccelDataZ+1,w
 24167     169F  3FC1               	movwi [1]fsr1
 24168     16A0                     l35:
 24169     16A0  0008               	return
 24170     16A1                     __end_of_BMA253_GetAccelDataZ:
 24171                           
 24172                           	psect	text101
 24173     10F0                     __ptext101:	
 24174 ;; *************** function _BMA253_NewAccelDataRdyZ *****************
 24175 ;; Defined at:
 24176 ;;		line 172 in file "mcc_generated_files/application/BMA253_accel.c"
 24177 ;; Parameters:    Size  Location     Type
 24178 ;;		None
 24179 ;; Auto vars:     Size  Location     Type
 24180 ;;  zNewData        1   11[COMMON] _Bool 
 24181 ;; Return value:  Size  Location     Type
 24182 ;;                  1    wreg      _Bool 
 24183 ;; Registers used:
 24184 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24185 ;; Tracked objects:
 24186 ;;		On entry : 0/0
 24187 ;;		On exit  : 0/0
 24188 ;;		Unchanged: 0/0
 24189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24191 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24193 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24194 ;;Total ram usage:        1 bytes
 24195 ;; Hardware stack levels used: 1
 24196 ;; Hardware stack levels required when called: 13
 24197 ;; This function calls:
 24198 ;;		_i2c_read1ByteRegister
 24199 ;; This function is called by:
 24200 ;;		_BMA253_GetAccelDataZ
 24201 ;;		_BMA253_GetAccelDataXYZ
 24202 ;; This function uses a non-reentrant model
 24203 ;;
 24204                           
 24205     10F0                     _BMA253_NewAccelDataRdyZ:	
 24206                           ;psect for function _BMA253_NewAccelDataRdyZ
 24207                           
 24208     10F0                     l13301:	
 24209                           ;incstack = 0
 24210                           ; Regs used in _BMA253_NewAccelDataRdyZ: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24211                           
 24212                           
 24213                           ;mcc_generated_files/application/BMA253_accel.c: 174:     _Bool zNewData;;mcc_generated_
      +                          files/application/BMA253_accel.c: 176:     zNewData = (i2c_read1ByteRegister((0x19), (0x
      +                          06)) & (0x01));
 24214     10F0  3006               	movlw	6
 24215     10F1  0140               	movlb	0	; select bank0
 24216     10F2  00A4               	movwf	i2c_read1ByteRegister@reg
 24217     10F3  3019               	movlw	25
 24218     10F4  318B  235E  3190   	fcall	_i2c_read1ByteRegister
 24219     10F7  3901               	andlw	1
 24220     10F8  1D03               	btfss	3,2
 24221     10F9  28FB               	goto	u10131
 24222     10FA  28FD               	goto	u10130
 24223     10FB                     u10131:
 24224     10FB  3001               	movlw	1
 24225     10FC  28FE               	goto	u10140
 24226     10FD                     u10130:
 24227     10FD  3000               	movlw	0
 24228     10FE                     u10140:
 24229     10FE  00FB               	movwf	BMA253_NewAccelDataRdyZ@zNewData
 24230     10FF                     l13303:
 24231                           
 24232                           ;mcc_generated_files/application/BMA253_accel.c: 178:     return zNewData;
 24233     10FF  087B               	movf	BMA253_NewAccelDataRdyZ@zNewData,w
 24234     1100                     l56:
 24235     1100  0008               	return
 24236     1101                     __end_of_BMA253_NewAccelDataRdyZ:
 24237                           
 24238                           	psect	text102
 24239     1645                     __ptext102:	
 24240 ;; *************** function _BMA253_GetAccelDataY *****************
 24241 ;; Defined at:
 24242 ;;		line 90 in file "mcc_generated_files/application/BMA253_accel.c"
 24243 ;; Parameters:    Size  Location     Type
 24244 ;;  yAccelData      1    wreg     PTR short 
 24245 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 24246 ;; Auto vars:     Size  Location     Type
 24247 ;;  yAccelData      1   13[BANK0 ] PTR short 
 24248 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 24249 ;;  msbData         1   15[BANK0 ] unsigned char 
 24250 ;;  lsbData         1   14[BANK0 ] unsigned char 
 24251 ;; Return value:  Size  Location     Type
 24252 ;;                  1    wreg      void 
 24253 ;; Registers used:
 24254 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24255 ;; Tracked objects:
 24256 ;;		On entry : 0/0
 24257 ;;		On exit  : 0/0
 24258 ;;		Unchanged: 0/0
 24259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24261 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24262 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24263 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24264 ;;Total ram usage:        6 bytes
 24265 ;; Hardware stack levels used: 1
 24266 ;; Hardware stack levels required when called: 14
 24267 ;; This function calls:
 24268 ;;		_BMA253_NewAccelDataRdyY
 24269 ;;		_i2c_read1ByteRegister
 24270 ;; This function is called by:
 24271 ;;		_BMA253_GetAccelDataXYZ
 24272 ;; This function uses a non-reentrant model
 24273 ;;
 24274                           
 24275     1645                     _BMA253_GetAccelDataY:	
 24276                           ;psect for function _BMA253_GetAccelDataY
 24277                           
 24278                           
 24279                           ;incstack = 0
 24280 ;; hardware stack exceeded
 24281                           ; Regs used in _BMA253_GetAccelDataY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24282                           ;BMA253_GetAccelDataY@yAccelData stored from wreg
 24283     1645  0140               	movlb	0	; select bank0
 24284     1646  00AD               	movwf	BMA253_GetAccelDataY@yAccelData
 24285     1647                     l13387:
 24286     1647                     l13389:	
 24287                           ;mcc_generated_files/application/BMA253_accel.c: 90: void BMA253_GetAccelDataY(int16_t *
      +                          yAccelData);mcc_generated_files/application/BMA253_accel.c: 91: {;mcc_generated_files/ap
      +                          plication/BMA253_accel.c: 92:     uint8_t lsbData;;mcc_generated_files/application/BMA25
      +                          3_accel.c: 93:     uint8_t msbData;;mcc_generated_files/application/BMA253_accel.c: 94: 
      +                              while(!BMA253_NewAccelDataRdyY())
 24288                           
 24289                           
 24290                           ;mcc_generated_files/application/BMA253_accel.c: 94:     while(!BMA253_NewAccelDataRdyY(
      +                          ))
 24291     1647  3190  20DF  3196   	fcall	_BMA253_NewAccelDataRdyY
 24292     164A  3A00               	xorlw	0
 24293     164B  1903               	skipnz
 24294     164C  2E4E               	goto	u10251
 24295     164D  2E4F               	goto	u10250
 24296     164E                     u10251:
 24297     164E  2E47               	goto	l13389
 24298     164F                     u10250:
 24299     164F                     l13391:
 24300                           
 24301                           ;mcc_generated_files/application/BMA253_accel.c: 99:     lsbData = i2c_read1ByteRegister
      +                          ((0x19), (0x04));
 24302     164F  3004               	movlw	4
 24303     1650  0140               	movlb	0	; select bank0
 24304     1651  00A4               	movwf	i2c_read1ByteRegister@reg
 24305     1652  3019               	movlw	25
 24306     1653  318B  235E  3196   	fcall	_i2c_read1ByteRegister
 24307     1656  0140               	movlb	0	; select bank0
 24308     1657  00AE               	movwf	BMA253_GetAccelDataY@lsbData
 24309                           
 24310                           ;mcc_generated_files/application/BMA253_accel.c: 100:     msbData = i2c_read1ByteRegiste
      +                          r((0x19), (0x05));
 24311     1658  3005               	movlw	5
 24312     1659  00A4               	movwf	i2c_read1ByteRegister@reg
 24313     165A  3019               	movlw	25
 24314     165B  318B  235E  3196   	fcall	_i2c_read1ByteRegister
 24315     165E  0140               	movlb	0	; select bank0
 24316     165F  00AF               	movwf	BMA253_GetAccelDataY@msbData
 24317     1660                     l13393:
 24318                           
 24319                           ;mcc_generated_files/application/BMA253_accel.c: 101:     *yAccelData = ( (((int16_t)msb
      +                          Data) << 8) | (lsbData) ) >> 4;
 24320     1660  082F               	movf	BMA253_GetAccelDataY@msbData,w
 24321     1661  00AB               	movwf	??_BMA253_GetAccelDataY+1
 24322     1662  082E               	movf	BMA253_GetAccelDataY@lsbData,w
 24323     1663  00AA               	movwf	??_BMA253_GetAccelDataY
 24324     1664  3004               	movlw	4
 24325     1665  00AC               	movwf	??_BMA253_GetAccelDataY+2
 24326     1666                     u10265:
 24327     1666  0D2B               	rlf	??_BMA253_GetAccelDataY+1,w
 24328     1667  0CAB               	rrf	??_BMA253_GetAccelDataY+1,f
 24329     1668  0CAA               	rrf	??_BMA253_GetAccelDataY,f
 24330     1669  0BAC               	decfsz	??_BMA253_GetAccelDataY+2,f
 24331     166A  2E66               	goto	u10265
 24332     166B  082D               	movf	BMA253_GetAccelDataY@yAccelData,w
 24333     166C  0086               	movwf	6
 24334     166D  0187               	clrf	7
 24335     166E  082A               	movf	??_BMA253_GetAccelDataY,w
 24336     166F  3FC0               	movwi [0]fsr1
 24337     1670  082B               	movf	??_BMA253_GetAccelDataY+1,w
 24338     1671  3FC1               	movwi [1]fsr1
 24339     1672                     l29:
 24340     1672  0008               	return
 24341     1673                     __end_of_BMA253_GetAccelDataY:
 24342                           
 24343                           	psect	text103
 24344     10DF                     __ptext103:	
 24345 ;; *************** function _BMA253_NewAccelDataRdyY *****************
 24346 ;; Defined at:
 24347 ;;		line 163 in file "mcc_generated_files/application/BMA253_accel.c"
 24348 ;; Parameters:    Size  Location     Type
 24349 ;;		None
 24350 ;; Auto vars:     Size  Location     Type
 24351 ;;  yNewData        1   11[COMMON] _Bool 
 24352 ;; Return value:  Size  Location     Type
 24353 ;;                  1    wreg      _Bool 
 24354 ;; Registers used:
 24355 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24356 ;; Tracked objects:
 24357 ;;		On entry : 0/0
 24358 ;;		On exit  : 0/0
 24359 ;;		Unchanged: 0/0
 24360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24362 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24364 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24365 ;;Total ram usage:        1 bytes
 24366 ;; Hardware stack levels used: 1
 24367 ;; Hardware stack levels required when called: 13
 24368 ;; This function calls:
 24369 ;;		_i2c_read1ByteRegister
 24370 ;; This function is called by:
 24371 ;;		_BMA253_GetAccelDataY
 24372 ;;		_BMA253_GetAccelDataXYZ
 24373 ;; This function uses a non-reentrant model
 24374 ;;
 24375                           
 24376     10DF                     _BMA253_NewAccelDataRdyY:	
 24377                           ;psect for function _BMA253_NewAccelDataRdyY
 24378                           
 24379     10DF                     l13295:	
 24380                           ;incstack = 0
 24381                           ; Regs used in _BMA253_NewAccelDataRdyY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24382                           
 24383                           
 24384                           ;mcc_generated_files/application/BMA253_accel.c: 165:     _Bool yNewData;;mcc_generated_
      +                          files/application/BMA253_accel.c: 167:     yNewData = (i2c_read1ByteRegister((0x19), (0x
      +                          04)) & (0x01));
 24385     10DF  3004               	movlw	4
 24386     10E0  0140               	movlb	0	; select bank0
 24387     10E1  00A4               	movwf	i2c_read1ByteRegister@reg
 24388     10E2  3019               	movlw	25
 24389     10E3  318B  235E  3190   	fcall	_i2c_read1ByteRegister
 24390     10E6  3901               	andlw	1
 24391     10E7  1D03               	btfss	3,2
 24392     10E8  28EA               	goto	u10111
 24393     10E9  28EC               	goto	u10110
 24394     10EA                     u10111:
 24395     10EA  3001               	movlw	1
 24396     10EB  28ED               	goto	u10120
 24397     10EC                     u10110:
 24398     10EC  3000               	movlw	0
 24399     10ED                     u10120:
 24400     10ED  00FB               	movwf	BMA253_NewAccelDataRdyY@yNewData
 24401     10EE                     l13297:
 24402                           
 24403                           ;mcc_generated_files/application/BMA253_accel.c: 169:     return yNewData;
 24404     10EE  087B               	movf	BMA253_NewAccelDataRdyY@yNewData,w
 24405     10EF                     l53:
 24406     10EF  0008               	return
 24407     10F0                     __end_of_BMA253_NewAccelDataRdyY:
 24408                           
 24409                           	psect	text104
 24410     0B5E                     __ptext104:	
 24411 ;; *************** function _i2c_read1ByteRegister *****************
 24412 ;; Defined at:
 24413 ;;		line 97 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 24414 ;; Parameters:    Size  Location     Type
 24415 ;;  address         1    wreg     unsigned char 
 24416 ;;  reg             1    4[BANK0 ] unsigned char 
 24417 ;; Auto vars:     Size  Location     Type
 24418 ;;  address         1    5[BANK0 ] unsigned char 
 24419 ;;  x               2    7[BANK0 ] int 
 24420 ;;  d2              1    9[BANK0 ] unsigned char 
 24421 ;;  e               1    6[BANK0 ] enum E358
 24422 ;; Return value:  Size  Location     Type
 24423 ;;                  1    wreg      unsigned char 
 24424 ;; Registers used:
 24425 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24426 ;; Tracked objects:
 24427 ;;		On entry : 0/0
 24428 ;;		On exit  : 0/0
 24429 ;;		Unchanged: 0/0
 24430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24431 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24432 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24434 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24435 ;;Total ram usage:        6 bytes
 24436 ;; Hardware stack levels used: 1
 24437 ;; Hardware stack levels required when called: 12
 24438 ;; This function calls:
 24439 ;;		_I2C1_Close
 24440 ;;		_I2C1_MasterWrite
 24441 ;;		_I2C1_Open
 24442 ;;		_I2C1_SetAddressNackCallback
 24443 ;;		_I2C1_SetBuffer
 24444 ;;		_I2C1_SetDataCompleteCallback
 24445 ;; This function is called by:
 24446 ;;		_BMA253_GetAccelDataY
 24447 ;;		_BMA253_GetAccelDataZ
 24448 ;;		_BMA253_NewAccelDataRdyY
 24449 ;;		_BMA253_NewAccelDataRdyZ
 24450 ;;		_readRegister
 24451 ;;		_BMA253_GetAccelDataX
 24452 ;;		_BMA253_GetAccelChipId
 24453 ;;		_BMA253_NewAccelDataRdyX
 24454 ;; This function uses a non-reentrant model
 24455 ;;
 24456                           
 24457     0B5E                     _i2c_read1ByteRegister:	
 24458                           ;psect for function _i2c_read1ByteRegister
 24459                           
 24460                           
 24461                           ;incstack = 0
 24462                           ; Regs used in _i2c_read1ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24463                           ;i2c_read1ByteRegister@address stored from wreg
 24464     0B5E  0140               	movlb	0	; select bank0
 24465     0B5F  00A5               	movwf	i2c_read1ByteRegister@address
 24466     0B60                     l13029:
 24467                           
 24468                           ;mcc_generated_files/drivers/i2c_simple_master.c: 97: uint8_t i2c_read1ByteRegister(i2c1
      +                          _address_t address, uint8_t reg);mcc_generated_files/drivers/i2c_simple_master.c: 98: {;
      +                          mcc_generated_files/drivers/i2c_simple_master.c: 99:     uint8_t d2=42;
 24469     0B60  302A               	movlw	42
 24470     0B61  00A9               	movwf	i2c_read1ByteRegister@d2
 24471                           
 24472                           ;mcc_generated_files/drivers/i2c_simple_master.c: 100:     i2c1_error_t e;;mcc_generated
      +                          _files/drivers/i2c_simple_master.c: 101:     int x;;mcc_generated_files/drivers/i2c_simp
      +                          le_master.c: 103:     for(x = 2; x != 0; x--)
 24473     0B62  3002               	movlw	2
 24474     0B63  00A7               	movwf	i2c_read1ByteRegister@x
 24475     0B64  3000               	movlw	0
 24476     0B65  00A8               	movwf	i2c_read1ByteRegister@x+1
 24477     0B66                     l13035:
 24478     0B66  0140               	movlb	0	; select bank0
 24479     0B67  0825               	movf	i2c_read1ByteRegister@address,w
 24480     0B68  3197  27CA  318B   	fcall	_I2C1_Open
 24481     0B6B  3A00               	xorlw	0
 24482     0B6C  1903               	skipnz
 24483     0B6D  2B6F               	goto	u9781
 24484     0B6E  2B70               	goto	u9780
 24485     0B6F                     u9781:
 24486     0B6F  2B66               	goto	l13035
 24487     0B70                     u9780:
 24488     0B70                     l13037:
 24489                           
 24490                           ;mcc_generated_files/drivers/i2c_simple_master.c: 106:         I2C1_SetDataCompleteCallb
      +                          ack(rd1RegCompleteHandler,&d2);
 24491     0B70  3038               	movlw	low _rd1RegCompleteHandler
 24492     0B71  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 24493     0B72  3011               	movlw	high _rd1RegCompleteHandler
 24494     0B73  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 24495     0B74  3029               	movlw	(low (i2c_read1ByteRegister@d2| 0))& (0+255)
 24496     0B75  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 24497     0B76  3190  2023  318B   	fcall	_I2C1_SetDataCompleteCallback
 24498     0B79                     l13039:
 24499                           
 24500                           ;mcc_generated_files/drivers/i2c_simple_master.c: 107:         I2C1_SetBuffer(&reg,1);
 24501     0B79  3024               	movlw	low i2c_read1ByteRegister@reg
 24502     0B7A  00F1               	movwf	I2C1_SetBuffer@buffer
 24503     0B7B  3000               	movlw	high i2c_read1ByteRegister@reg
 24504     0B7C  00F2               	movwf	I2C1_SetBuffer@buffer+1
 24505     0B7D  3001               	movlw	1
 24506     0B7E  00F3               	movwf	I2C1_SetBuffer@bufferSize
 24507     0B7F  3000               	movlw	0
 24508     0B80  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 24509     0B81  3190  20C1  318B   	fcall	_I2C1_SetBuffer
 24510     0B84                     l13041:
 24511                           
 24512                           ;mcc_generated_files/drivers/i2c_simple_master.c: 108:         I2C1_SetAddressNackCallba
      +                          ck(((void*)0),((void*)0));
 24513     0B84  3000               	movlw	0
 24514     0B85  00F5               	movwf	I2C1_SetAddressNackCallback@cb
 24515     0B86  00F6               	movwf	I2C1_SetAddressNackCallback@cb+1
 24516     0B87  3000               	movlw	0
 24517     0B88  00F7               	movwf	I2C1_SetAddressNackCallback@ptr
 24518     0B89  00F8               	movwf	I2C1_SetAddressNackCallback@ptr+1
 24519     0B8A  3190  202E  318B   	fcall	_I2C1_SetAddressNackCallback
 24520     0B8D                     l13043:
 24521                           
 24522                           ;mcc_generated_files/drivers/i2c_simple_master.c: 109:         I2C1_MasterWrite();
 24523     0B8D  319F  272B  318B   	fcall	_I2C1_MasterWrite
 24524     0B90                     l13045:	
 24525                           ;mcc_generated_files/drivers/i2c_simple_master.c: 110:         while(I2C1_BUSY == (e = I
      +                          2C1_Close()));
 24526                           
 24527     0B90  3192  227F  318B   	fcall	_I2C1_Close
 24528     0B93  0140               	movlb	0	; select bank0
 24529     0B94  00A6               	movwf	i2c_read1ByteRegister@e
 24530     0B95  0326               	decf	i2c_read1ByteRegister@e,w
 24531     0B96  1903               	btfsc	3,2
 24532     0B97  2B99               	goto	u9791
 24533     0B98  2B9A               	goto	u9790
 24534     0B99                     u9791:
 24535     0B99  2B90               	goto	l13045
 24536     0B9A                     u9790:
 24537     0B9A                     l13047:
 24538                           
 24539                           ;mcc_generated_files/drivers/i2c_simple_master.c: 111:         if(e==I2C1_NOERR) break;
 24540     0B9A  0826               	movf	i2c_read1ByteRegister@e,w
 24541     0B9B  1D03               	btfss	3,2
 24542     0B9C  2B9E               	goto	u9801
 24543     0B9D  2B9F               	goto	u9800
 24544     0B9E                     u9801:
 24545     0B9E  2BA0               	goto	l13051
 24546     0B9F                     u9800:
 24547     0B9F  2BAA               	goto	l13055
 24548     0BA0                     l13051:
 24549                           
 24550                           ;mcc_generated_files/drivers/i2c_simple_master.c: 112:     }
 24551     0BA0  30FF               	movlw	255
 24552     0BA1  07A7               	addwf	i2c_read1ByteRegister@x,f
 24553     0BA2  30FF               	movlw	255
 24554     0BA3  3DA8               	addwfc	i2c_read1ByteRegister@x+1,f
 24555     0BA4                     l13053:
 24556     0BA4  0827               	movf	i2c_read1ByteRegister@x,w
 24557     0BA5  0428               	iorwf	i2c_read1ByteRegister@x+1,w
 24558     0BA6  1D03               	btfss	3,2
 24559     0BA7  2BA9               	goto	u9811
 24560     0BA8  2BAA               	goto	u9810
 24561     0BA9                     u9811:
 24562     0BA9  2B66               	goto	l13035
 24563     0BAA                     u9810:
 24564     0BAA                     l13055:
 24565                           
 24566                           ;mcc_generated_files/drivers/i2c_simple_master.c: 115:     return d2;
 24567     0BAA  0829               	movf	i2c_read1ByteRegister@d2,w
 24568     0BAB                     l534:
 24569     0BAB  0008               	return
 24570     0BAC                     __end_of_i2c_read1ByteRegister:
 24571                           
 24572                           	psect	text105
 24573     102E                     __ptext105:	
 24574 ;; *************** function _I2C1_SetAddressNackCallback *****************
 24575 ;; Defined at:
 24576 ;;		line 283 in file "mcc_generated_files/i2c1_master.c"
 24577 ;; Parameters:    Size  Location     Type
 24578 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 24579 ;;		 -> NULL(1), 
 24580 ;;  ptr             2    7[COMMON] PTR void 
 24581 ;;		 -> NULL(0), 
 24582 ;; Auto vars:     Size  Location     Type
 24583 ;;		None
 24584 ;; Return value:  Size  Location     Type
 24585 ;;                  1    wreg      void 
 24586 ;; Registers used:
 24587 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24588 ;; Tracked objects:
 24589 ;;		On entry : 0/0
 24590 ;;		On exit  : 0/0
 24591 ;;		Unchanged: 0/0
 24592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24593 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24596 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24597 ;;Total ram usage:        4 bytes
 24598 ;; Hardware stack levels used: 1
 24599 ;; Hardware stack levels required when called: 5
 24600 ;; This function calls:
 24601 ;;		_I2C1_SetCallback
 24602 ;; This function is called by:
 24603 ;;		_i2c_write1ByteRegister
 24604 ;;		_i2c_read1ByteRegister
 24605 ;;		_i2c_read2ByteRegister
 24606 ;;		_i2c_writeNBytes
 24607 ;;		_i2c_write2ByteRegister
 24608 ;;		_i2c_readDataBlock
 24609 ;;		_I2C1_Read1ByteRegister
 24610 ;;		_I2C1_Read2ByteRegister
 24611 ;;		_I2C1_Write1ByteRegister
 24612 ;;		_I2C1_Write2ByteRegister
 24613 ;;		_I2C1_WriteNBytes
 24614 ;;		_I2C1_ReadDataBlock
 24615 ;; This function uses a non-reentrant model
 24616 ;;
 24617                           
 24618     102E                     _I2C1_SetAddressNackCallback:	
 24619                           ;psect for function _I2C1_SetAddressNackCallback
 24620                           
 24621     102E                     l12995:	
 24622                           ;incstack = 0
 24623                           ; Regs used in _I2C1_SetAddressNackCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 24624                           
 24625                           
 24626                           ;mcc_generated_files/i2c1_master.c: 283: void I2C1_SetAddressNackCallback(i2c1_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c1_master.c: 284: {;mcc_generated_files/i2c1_mast
      +                          er.c: 285:     I2C1_SetCallback(I2C1_ADDR_NACK, cb, ptr);
 24627     102E  0876               	movf	I2C1_SetAddressNackCallback@cb+1,w
 24628     102F  00F2               	movwf	I2C1_SetCallback@cb+1
 24629     1030  0875               	movf	I2C1_SetAddressNackCallback@cb,w
 24630     1031  00F1               	movwf	I2C1_SetCallback@cb
 24631     1032  0877               	movf	I2C1_SetAddressNackCallback@ptr,w
 24632     1033  00F3               	movwf	I2C1_SetCallback@ptr
 24633     1034  3002               	movlw	2
 24634     1035  3194  2466  3190   	fcall	_I2C1_SetCallback
 24635     1038                     l2403:
 24636     1038  0008               	return
 24637     1039                     __end_of_I2C1_SetAddressNackCallback:
 24638                           
 24639                           	psect	text106
 24640     17CA                     __ptext106:	
 24641 ;; *************** function _I2C1_Open *****************
 24642 ;; Defined at:
 24643 ;;		line 176 in file "mcc_generated_files/i2c1_master.c"
 24644 ;; Parameters:    Size  Location     Type
 24645 ;;  address         1    wreg     unsigned char 
 24646 ;; Auto vars:     Size  Location     Type
 24647 ;;  address         1    1[COMMON] unsigned char 
 24648 ;;  returnValue     1    2[COMMON] enum E358
 24649 ;; Return value:  Size  Location     Type
 24650 ;;                  1    wreg      enum E358
 24651 ;; Registers used:
 24652 ;;		wreg, status,2, status,0, pclath, cstack
 24653 ;; Tracked objects:
 24654 ;;		On entry : 0/0
 24655 ;;		On exit  : 0/0
 24656 ;;		Unchanged: 0/0
 24657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24659 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24661 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24662 ;;Total ram usage:        2 bytes
 24663 ;; Hardware stack levels used: 1
 24664 ;; Hardware stack levels required when called: 5
 24665 ;; This function calls:
 24666 ;;		_I2C1_MasterClearIrq
 24667 ;;		_I2C1_MasterOpen
 24668 ;; This function is called by:
 24669 ;;		_i2c_write1ByteRegister
 24670 ;;		_i2c_read1ByteRegister
 24671 ;;		_i2c_read2ByteRegister
 24672 ;;		_i2c_writeNBytes
 24673 ;;		_i2c_write2ByteRegister
 24674 ;;		_i2c_readDataBlock
 24675 ;;		_i2c_readNBytes
 24676 ;;		_I2C1_Read1ByteRegister
 24677 ;;		_I2C1_Read2ByteRegister
 24678 ;;		_I2C1_Write1ByteRegister
 24679 ;;		_I2C1_Write2ByteRegister
 24680 ;;		_I2C1_WriteNBytes
 24681 ;;		_I2C1_ReadNBytes
 24682 ;;		_I2C1_ReadDataBlock
 24683 ;; This function uses a non-reentrant model
 24684 ;;
 24685                           
 24686     17CA                     _I2C1_Open:	
 24687                           ;psect for function _I2C1_Open
 24688                           
 24689                           
 24690                           ;incstack = 0
 24691                           ; Regs used in _I2C1_Open: [wreg+status,2+status,0+pclath+cstack]
 24692                           ;I2C1_Open@address stored from wreg
 24693     17CA  00F1               	movwf	I2C1_Open@address
 24694     17CB                     l12963:
 24695                           
 24696                           ;mcc_generated_files/i2c1_master.c: 176: i2c1_error_t I2C1_Open(i2c1_address_t address);
      +                          mcc_generated_files/i2c1_master.c: 177: {;mcc_generated_files/i2c1_master.c: 178:     i2
      +                          c1_error_t returnValue = I2C1_BUSY;
 24697     17CB  01F2               	clrf	I2C1_Open@returnValue
 24698     17CC  0AF2               	incf	I2C1_Open@returnValue,f
 24699                           
 24700                           ;mcc_generated_files/i2c1_master.c: 180:     if(!I2C1_Status.inUse)
 24701     17CD  0141               	movlb	1	; select bank1
 24702     17CE  193D               	btfsc	(_I2C1_Status^(0+128)+29),2
 24703     17CF  2FD1               	goto	u9761
 24704     17D0  2FD2               	goto	u9760
 24705     17D1                     u9761:
 24706     17D1  2FFE               	goto	l2370
 24707     17D2                     u9760:
 24708     17D2                     l12965:
 24709                           
 24710                           ;mcc_generated_files/i2c1_master.c: 181:     {;mcc_generated_files/i2c1_master.c: 182:  
      +                                 I2C1_Status.address = address;
 24711     17D2  0871               	movf	I2C1_Open@address,w
 24712     17D3  00B6               	movwf	(_I2C1_Status^(0+128)+22)
 24713     17D4                     l12967:
 24714                           
 24715                           ;mcc_generated_files/i2c1_master.c: 183:         I2C1_Status.busy = 0;
 24716     17D4  10BD               	bcf	(_I2C1_Status^(0+128)+29),1
 24717     17D5                     l12969:
 24718                           
 24719                           ;mcc_generated_files/i2c1_master.c: 184:         I2C1_Status.inUse = 1;
 24720     17D5  153D               	bsf	(_I2C1_Status^(0+128)+29),2
 24721     17D6                     l12971:
 24722                           
 24723                           ;mcc_generated_files/i2c1_master.c: 185:         I2C1_Status.addressNackCheck = 0;
 24724     17D6  103D               	bcf	(_I2C1_Status^(0+128)+29),0
 24725                           
 24726                           ;mcc_generated_files/i2c1_master.c: 186:         I2C1_Status.state = I2C1_RESET;
 24727     17D7  300E               	movlw	14
 24728     17D8  00BB               	movwf	(_I2C1_Status^(0+128)+27)
 24729                           
 24730                           ;mcc_generated_files/i2c1_master.c: 187:         I2C1_Status.time_out_value = 500;
 24731     17D9  30F4               	movlw	244
 24732     17DA  00B4               	movwf	(_I2C1_Status^(0+128)+20)
 24733     17DB  3001               	movlw	1
 24734     17DC  00B5               	movwf	(_I2C1_Status^(0+128)+21)
 24735     17DD                     l12973:
 24736                           
 24737                           ;mcc_generated_files/i2c1_master.c: 188:         I2C1_Status.bufferFree = 1;
 24738     17DD  15BD               	bsf	(_I2C1_Status^(0+128)+29),3
 24739                           
 24740                           ;mcc_generated_files/i2c1_master.c: 191:         I2C1_Status.callbackTable[I2C1_DATA_COM
      +                          PLETE]=I2C1_CallbackReturnStop;
 24741     17DE  30B7               	movlw	low _I2C1_CallbackReturnStop
 24742     17DF  00A0               	movwf	_I2C1_Status^(0+128)
 24743     17E0  301E               	movlw	high _I2C1_CallbackReturnStop
 24744     17E1  00A1               	movwf	(_I2C1_Status^(0+128)+1)
 24745     17E2                     l12975:
 24746                           
 24747                           ;mcc_generated_files/i2c1_master.c: 192:         I2C1_Status.callbackPayload[I2C1_DATA_C
      +                          OMPLETE] = ((void*)0);
 24748     17E2  01AC               	clrf	(low ((_I2C1_Status| 0+12)))^(0+128)
 24749     17E3                     l12977:
 24750                           
 24751                           ;mcc_generated_files/i2c1_master.c: 193:         I2C1_Status.callbackTable[I2C1_WRITE_CO
      +                          LLISION]=I2C1_CallbackReturnStop;
 24752     17E3  30B7               	movlw	low _I2C1_CallbackReturnStop
 24753     17E4  00A2               	movwf	(low ((_I2C1_Status| 0+2)))^(0+128)
 24754     17E5  301E               	movlw	high _I2C1_CallbackReturnStop
 24755     17E6  00A3               	movwf	((low ((_I2C1_Status| 0+2)))^(0+128)+1)
 24756                           
 24757                           ;mcc_generated_files/i2c1_master.c: 194:         I2C1_Status.callbackPayload[I2C1_WRITE_
      +                          COLLISION] = ((void*)0);
 24758     17E7  01AD               	clrf	(low ((_I2C1_Status| 0+13)))^(0+128)
 24759     17E8                     l12979:
 24760                           
 24761                           ;mcc_generated_files/i2c1_master.c: 195:         I2C1_Status.callbackTable[I2C1_ADDR_NAC
      +                          K]=I2C1_CallbackReturnStop;
 24762     17E8  30B7               	movlw	low _I2C1_CallbackReturnStop
 24763     17E9  00A4               	movwf	(low ((_I2C1_Status| 0+4)))^(0+128)
 24764     17EA  301E               	movlw	high _I2C1_CallbackReturnStop
 24765     17EB  00A5               	movwf	((low ((_I2C1_Status| 0+4)))^(0+128)+1)
 24766     17EC                     l12981:
 24767                           
 24768                           ;mcc_generated_files/i2c1_master.c: 196:         I2C1_Status.callbackPayload[I2C1_ADDR_N
      +                          ACK] = ((void*)0);
 24769     17EC  01AE               	clrf	(low ((_I2C1_Status| 0+14)))^(0+128)
 24770                           
 24771                           ;mcc_generated_files/i2c1_master.c: 197:         I2C1_Status.callbackTable[I2C1_DATA_NAC
      +                          K]=I2C1_CallbackReturnStop;
 24772     17ED  30B7               	movlw	low _I2C1_CallbackReturnStop
 24773     17EE  00A6               	movwf	(low ((_I2C1_Status| 0+6)))^(0+128)
 24774     17EF  301E               	movlw	high _I2C1_CallbackReturnStop
 24775     17F0  00A7               	movwf	((low ((_I2C1_Status| 0+6)))^(0+128)+1)
 24776     17F1                     l12983:
 24777                           
 24778                           ;mcc_generated_files/i2c1_master.c: 198:         I2C1_Status.callbackPayload[I2C1_DATA_N
      +                          ACK] = ((void*)0);
 24779     17F1  01AF               	clrf	(low ((_I2C1_Status| 0+15)))^(0+128)
 24780     17F2                     l12985:
 24781                           
 24782                           ;mcc_generated_files/i2c1_master.c: 199:         I2C1_Status.callbackTable[I2C1_TIMEOUT]
      +                          =I2C1_CallbackReturnReset;
 24783     17F2  30B9               	movlw	low _I2C1_CallbackReturnReset
 24784     17F3  00A8               	movwf	(low ((_I2C1_Status| 0+8)))^(0+128)
 24785     17F4  301E               	movlw	high _I2C1_CallbackReturnReset
 24786     17F5  00A9               	movwf	((low ((_I2C1_Status| 0+8)))^(0+128)+1)
 24787                           
 24788                           ;mcc_generated_files/i2c1_master.c: 200:         I2C1_Status.callbackPayload[I2C1_TIMEOU
      +                          T] = ((void*)0);
 24789     17F6  01B0               	clrf	(low ((_I2C1_Status| 0+16)))^(0+128)
 24790     17F7                     l12987:
 24791                           
 24792                           ;mcc_generated_files/i2c1_master.c: 202:         I2C1_MasterClearIrq();
 24793     17F7  319E  26BB  3197   	fcall	_I2C1_MasterClearIrq
 24794     17FA                     l12989:
 24795                           
 24796                           ;mcc_generated_files/i2c1_master.c: 203:         I2C1_MasterOpen();
 24797     17FA  3190  2097  3197   	fcall	_I2C1_MasterOpen
 24798     17FD                     l12991:
 24799                           
 24800                           ;mcc_generated_files/i2c1_master.c: 204:         returnValue = I2C1_NOERR;
 24801     17FD  01F2               	clrf	I2C1_Open@returnValue
 24802     17FE                     l2370:	
 24803                           ;mcc_generated_files/i2c1_master.c: 205:     }
 24804                           
 24805                           
 24806                           ;mcc_generated_files/i2c1_master.c: 206:     return returnValue;
 24807     17FE  0872               	movf	I2C1_Open@returnValue,w
 24808     17FF                     l2371:
 24809     17FF  0008               	return
 24810     1800                     __end_of_I2C1_Open:
 24811                           
 24812                           	psect	text107
 24813     1097                     __ptext107:	
 24814 ;; *************** function _I2C1_MasterOpen *****************
 24815 ;; Defined at:
 24816 ;;		line 543 in file "mcc_generated_files/i2c1_master.c"
 24817 ;; Parameters:    Size  Location     Type
 24818 ;;		None
 24819 ;; Auto vars:     Size  Location     Type
 24820 ;;		None
 24821 ;; Return value:  Size  Location     Type
 24822 ;;                  1    wreg      _Bool 
 24823 ;; Registers used:
 24824 ;;		wreg, status,2
 24825 ;; Tracked objects:
 24826 ;;		On entry : 0/0
 24827 ;;		On exit  : 0/0
 24828 ;;		Unchanged: 0/0
 24829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24834 ;;Total ram usage:        0 bytes
 24835 ;; Hardware stack levels used: 1
 24836 ;; Hardware stack levels required when called: 4
 24837 ;; This function calls:
 24838 ;;		Nothing
 24839 ;; This function is called by:
 24840 ;;		_I2C1_Open
 24841 ;; This function uses a non-reentrant model
 24842 ;;
 24843                           
 24844     1097                     _I2C1_MasterOpen:	
 24845                           ;psect for function _I2C1_MasterOpen
 24846                           
 24847     1097                     l12927:	
 24848                           ;incstack = 0
 24849                           ; Regs used in _I2C1_MasterOpen: [wreg+status,2]
 24850                           
 24851                           
 24852                           ;mcc_generated_files/i2c1_master.c: 545:     if(!SSP1CON1bits.SSPEN)
 24853     1097  0143               	movlb	3	; select bank3
 24854     1098  1A90               	btfsc	16,5	;volatile
 24855     1099  289B               	goto	u9731
 24856     109A  289C               	goto	u9730
 24857     109B                     u9731:
 24858     109B  28A3               	goto	l2536
 24859     109C                     u9730:
 24860     109C                     l12929:
 24861                           
 24862                           ;mcc_generated_files/i2c1_master.c: 546:     {;mcc_generated_files/i2c1_master.c: 547:  
      +                                 SSP1STAT = 0x00;
 24863     109C  018F               	clrf	15	;volatile
 24864     109D                     l12931:
 24865                           
 24866                           ;mcc_generated_files/i2c1_master.c: 548:         SSP1CON1 = 0x08;
 24867     109D  3008               	movlw	8
 24868     109E  0090               	movwf	16	;volatile
 24869     109F                     l12933:
 24870                           
 24871                           ;mcc_generated_files/i2c1_master.c: 549:         SSP1CON2 = 0x00;
 24872     109F  0191               	clrf	17	;volatile
 24873                           
 24874                           ;mcc_generated_files/i2c1_master.c: 550:         SSP1ADD = 0x4F;
 24875     10A0  304F               	movlw	79
 24876     10A1  008D               	movwf	13	;volatile
 24877     10A2                     l12935:
 24878                           
 24879                           ;mcc_generated_files/i2c1_master.c: 551:         SSP1CON1bits.SSPEN = 1;
 24880     10A2  1690               	bsf	16,5	;volatile
 24881     10A3                     l2536:
 24882     10A3  0008               	return
 24883     10A4                     __end_of_I2C1_MasterOpen:
 24884                           
 24885                           	psect	text108
 24886     1F2B                     __ptext108:	
 24887 ;; *************** function _I2C1_MasterWrite *****************
 24888 ;; Defined at:
 24889 ;;		line 251 in file "mcc_generated_files/i2c1_master.c"
 24890 ;; Parameters:    Size  Location     Type
 24891 ;;		None
 24892 ;; Auto vars:     Size  Location     Type
 24893 ;;		None
 24894 ;; Return value:  Size  Location     Type
 24895 ;;                  1    wreg      enum E358
 24896 ;; Registers used:
 24897 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24898 ;; Tracked objects:
 24899 ;;		On entry : 0/0
 24900 ;;		On exit  : 0/0
 24901 ;;		Unchanged: 0/0
 24902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24907 ;;Total ram usage:        0 bytes
 24908 ;; Hardware stack levels used: 1
 24909 ;; Hardware stack levels required when called: 11
 24910 ;; This function calls:
 24911 ;;		_I2C1_MasterOperation
 24912 ;; This function is called by:
 24913 ;;		_i2c_write1ByteRegister
 24914 ;;		_i2c_read1ByteRegister
 24915 ;;		_i2c_read2ByteRegister
 24916 ;;		_i2c_writeNBytes
 24917 ;;		_i2c_write2ByteRegister
 24918 ;;		_i2c_readDataBlock
 24919 ;;		_I2C1_Read1ByteRegister
 24920 ;;		_I2C1_Read2ByteRegister
 24921 ;;		_I2C1_Write1ByteRegister
 24922 ;;		_I2C1_Write2ByteRegister
 24923 ;;		_I2C1_WriteNBytes
 24924 ;;		_I2C1_ReadDataBlock
 24925 ;; This function uses a non-reentrant model
 24926 ;;
 24927                           
 24928     1F2B                     _I2C1_MasterWrite:	
 24929                           ;psect for function _I2C1_MasterWrite
 24930                           
 24931     1F2B                     l12997:	
 24932                           ;incstack = 0
 24933                           ; Regs used in _I2C1_MasterWrite: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24934                           
 24935                           
 24936                           ;mcc_generated_files/i2c1_master.c: 253:     return I2C1_MasterOperation(0);;	Return val
      +                          ue of _I2C1_MasterWrite is never used
 24937     1F2B  3000               	movlw	0
 24938     1F2C  3193  23BC  319F   	fcall	_I2C1_MasterOperation
 24939     1F2F                     l2387:
 24940     1F2F  0008               	return
 24941     1F30                     __end_of_I2C1_MasterWrite:
 24942                           
 24943                           	psect	text109
 24944     13BC                     __ptext109:	
 24945 ;; *************** function _I2C1_MasterOperation *****************
 24946 ;; Defined at:
 24947 ;;		line 224 in file "mcc_generated_files/i2c1_master.c"
 24948 ;; Parameters:    Size  Location     Type
 24949 ;;  read            1    wreg     _Bool 
 24950 ;; Auto vars:     Size  Location     Type
 24951 ;;  read            1    2[BANK0 ] _Bool 
 24952 ;;  returnValue     1    3[BANK0 ] enum E358
 24953 ;; Return value:  Size  Location     Type
 24954 ;;                  1    wreg      enum E358
 24955 ;; Registers used:
 24956 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24957 ;; Tracked objects:
 24958 ;;		On entry : 0/0
 24959 ;;		On exit  : 0/0
 24960 ;;		Unchanged: 0/0
 24961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24963 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24965 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24966 ;;Total ram usage:        2 bytes
 24967 ;; Hardware stack levels used: 1
 24968 ;; Hardware stack levels required when called: 10
 24969 ;; This function calls:
 24970 ;;		_I2C1_MasterStart
 24971 ;;		_I2C1_Poller
 24972 ;; This function is called by:
 24973 ;;		_I2C1_MasterWrite
 24974 ;;		_I2C1_MasterRead
 24975 ;; This function uses a non-reentrant model
 24976 ;;
 24977                           
 24978     13BC                     _I2C1_MasterOperation:	
 24979                           ;psect for function _I2C1_MasterOperation
 24980                           
 24981                           
 24982                           ;incstack = 0
 24983                           ; Regs used in _I2C1_MasterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24984                           ;I2C1_MasterOperation@read stored from wreg
 24985     13BC  0140               	movlb	0	; select bank0
 24986     13BD  00A2               	movwf	I2C1_MasterOperation@read
 24987     13BE                     l12943:
 24988                           
 24989                           ;mcc_generated_files/i2c1_master.c: 224: i2c1_error_t I2C1_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c1_master.c: 225: {;mcc_generated_files/i2c1_master.c: 226:     i2c
      +                          1_error_t returnValue = I2C1_BUSY;
 24990     13BE  01A3               	clrf	I2C1_MasterOperation@returnValue
 24991     13BF  0AA3               	incf	I2C1_MasterOperation@returnValue,f
 24992                           
 24993                           ;mcc_generated_files/i2c1_master.c: 227:     if(!I2C1_Status.busy)
 24994     13C0  0141               	movlb	1	; select bank1
 24995     13C1  18BD               	btfsc	(_I2C1_Status^(0+128)+29),1
 24996     13C2  2BC4               	goto	u9741
 24997     13C3  2BC5               	goto	u9740
 24998     13C4                     u9741:
 24999     13C4  2BDA               	goto	l12959
 25000     13C5                     u9740:
 25001     13C5                     l12945:
 25002                           
 25003                           ;mcc_generated_files/i2c1_master.c: 228:     {;mcc_generated_files/i2c1_master.c: 229:  
      +                                 I2C1_Status.busy = 1;
 25004     13C5  14BD               	bsf	(_I2C1_Status^(0+128)+29),1
 25005     13C6                     l12947:
 25006                           
 25007                           ;mcc_generated_files/i2c1_master.c: 230:         returnValue = I2C1_NOERR;
 25008     13C6  0140               	movlb	0	; select bank0
 25009     13C7  01A3               	clrf	I2C1_MasterOperation@returnValue
 25010     13C8                     l12949:
 25011                           
 25012                           ;mcc_generated_files/i2c1_master.c: 232:         if(read)
 25013     13C8  0822               	movf	I2C1_MasterOperation@read,w
 25014     13C9  1903               	btfsc	3,2
 25015     13CA  2BCC               	goto	u9751
 25016     13CB  2BCD               	goto	u9750
 25017     13CC                     u9751:
 25018     13CC  2BD1               	goto	l12953
 25019     13CD                     u9750:
 25020     13CD                     l12951:
 25021                           
 25022                           ;mcc_generated_files/i2c1_master.c: 233:         {;mcc_generated_files/i2c1_master.c: 23
      +                          4:             I2C1_Status.state = I2C1_SEND_ADR_READ;
 25023     13CD  0141               	movlb	1	; select bank1
 25024     13CE  01BB               	clrf	(_I2C1_Status^(0+128)+27)
 25025     13CF  0ABB               	incf	(_I2C1_Status^(0+128)+27),f
 25026                           
 25027                           ;mcc_generated_files/i2c1_master.c: 235:         }
 25028     13D0  2BD4               	goto	l12955
 25029     13D1                     l12953:
 25030                           
 25031                           ;mcc_generated_files/i2c1_master.c: 237:         {;mcc_generated_files/i2c1_master.c: 23
      +                          8:             I2C1_Status.state = I2C1_SEND_ADR_WRITE;
 25032     13D1  3002               	movlw	2
 25033     13D2  0141               	movlb	1	; select bank1
 25034     13D3  00BB               	movwf	(_I2C1_Status^(0+128)+27)
 25035     13D4                     l12955:
 25036                           
 25037                           ;mcc_generated_files/i2c1_master.c: 240:         I2C1_MasterStart();
 25038     13D4  319E  26C4  3193   	fcall	_I2C1_MasterStart
 25039     13D7                     l12957:
 25040                           
 25041                           ;mcc_generated_files/i2c1_master.c: 241:         I2C1_Poller();
 25042     13D7  3190  208A  3193   	fcall	_I2C1_Poller
 25043     13DA                     l12959:
 25044                           
 25045                           ;mcc_generated_files/i2c1_master.c: 243:     return returnValue;
 25046     13DA  0140               	movlb	0	; select bank0
 25047     13DB  0823               	movf	I2C1_MasterOperation@returnValue,w
 25048     13DC                     l2381:
 25049     13DC  0008               	return
 25050     13DD                     __end_of_I2C1_MasterOperation:
 25051                           
 25052                           	psect	text110
 25053     108A                     __ptext110:	
 25054 ;; *************** function _I2C1_Poller *****************
 25055 ;; Defined at:
 25056 ;;		line 312 in file "mcc_generated_files/i2c1_master.c"
 25057 ;; Parameters:    Size  Location     Type
 25058 ;;		None
 25059 ;; Auto vars:     Size  Location     Type
 25060 ;;		None
 25061 ;; Return value:  Size  Location     Type
 25062 ;;                  1    wreg      void 
 25063 ;; Registers used:
 25064 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25065 ;; Tracked objects:
 25066 ;;		On entry : 0/0
 25067 ;;		On exit  : 0/0
 25068 ;;		Unchanged: 0/0
 25069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25074 ;;Total ram usage:        0 bytes
 25075 ;; Hardware stack levels used: 1
 25076 ;; Hardware stack levels required when called: 9
 25077 ;; This function calls:
 25078 ;;		_I2C1_MasterFsm
 25079 ;;		_I2C1_MasterWaitForEvent
 25080 ;; This function is called by:
 25081 ;;		_I2C1_MasterOperation
 25082 ;; This function uses a non-reentrant model
 25083 ;;
 25084                           
 25085     108A                     _I2C1_Poller:	
 25086                           ;psect for function _I2C1_Poller
 25087                           
 25088     108A                     l12831:	
 25089                           ;incstack = 0
 25090                           ; Regs used in _I2C1_Poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25091                           
 25092                           
 25093                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 25094     108A  2891               	goto	l12837
 25095     108B                     l12833:
 25096                           
 25097                           ;mcc_generated_files/i2c1_master.c: 315:     {;mcc_generated_files/i2c1_master.c: 316:  
      +                                 I2C1_MasterWaitForEvent();
 25098     108B  319F  273B  3190   	fcall	_I2C1_MasterWaitForEvent
 25099     108E                     l12835:
 25100                           
 25101                           ;mcc_generated_files/i2c1_master.c: 317:         I2C1_MasterFsm();
 25102     108E  3195  2597  3190   	fcall	_I2C1_MasterFsm
 25103     1091                     l12837:
 25104                           
 25105                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 25106     1091  0141               	movlb	1	; select bank1
 25107     1092  18BD               	btfsc	(_I2C1_Status^(0+128)+29),1
 25108     1093  2895               	goto	u9621
 25109     1094  2896               	goto	u9620
 25110     1095                     u9621:
 25111     1095  288B               	goto	l12833
 25112     1096                     u9620:
 25113     1096                     l2420:
 25114     1096  0008               	return
 25115     1097                     __end_of_I2C1_Poller:
 25116                           
 25117                           	psect	text111
 25118     1F3B                     __ptext111:	
 25119 ;; *************** function _I2C1_MasterWaitForEvent *****************
 25120 ;; Defined at:
 25121 ;;		line 650 in file "mcc_generated_files/i2c1_master.c"
 25122 ;; Parameters:    Size  Location     Type
 25123 ;;		None
 25124 ;; Auto vars:     Size  Location     Type
 25125 ;;		None
 25126 ;; Return value:  Size  Location     Type
 25127 ;;                  1    wreg      void 
 25128 ;; Registers used:
 25129 ;;		None
 25130 ;; Tracked objects:
 25131 ;;		On entry : 0/0
 25132 ;;		On exit  : 0/0
 25133 ;;		Unchanged: 0/0
 25134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25139 ;;Total ram usage:        0 bytes
 25140 ;; Hardware stack levels used: 1
 25141 ;; Hardware stack levels required when called: 4
 25142 ;; This function calls:
 25143 ;;		Nothing
 25144 ;; This function is called by:
 25145 ;;		_I2C1_Poller
 25146 ;; This function uses a non-reentrant model
 25147 ;;
 25148                           
 25149     1F3B                     _I2C1_MasterWaitForEvent:	
 25150                           ;psect for function _I2C1_MasterWaitForEvent
 25151                           
 25152     1F3B                     l2593:	
 25153                           ;incstack = 0
 25154                           ; Regs used in _I2C1_MasterWaitForEvent: []
 25155                           ;mcc_generated_files/i2c1_master.c: 652:     while(1)
 25156                           
 25157                           
 25158                           ;mcc_generated_files/i2c1_master.c: 653:     {;mcc_generated_files/i2c1_master.c: 654:  
      +                                 if(PIR3bits.SSP1IF)
 25159     1F3B  014E               	movlb	14	; select bank14
 25160     1F3C  1C0F               	btfss	15,0	;volatile
 25161     1F3D  2F3F               	goto	u9591
 25162     1F3E  2F40               	goto	u9590
 25163     1F3F                     u9591:
 25164     1F3F  2F3B               	goto	l2593
 25165     1F40                     u9590:
 25166     1F40                     l2597:
 25167     1F40  0008               	return
 25168     1F41                     __end_of_I2C1_MasterWaitForEvent:
 25169                           
 25170                           	psect	text112
 25171     1597                     __ptext112:	
 25172 ;; *************** function _I2C1_MasterFsm *****************
 25173 ;; Defined at:
 25174 ;;		line 321 in file "mcc_generated_files/i2c1_master.c"
 25175 ;; Parameters:    Size  Location     Type
 25176 ;;		None
 25177 ;; Auto vars:     Size  Location     Type
 25178 ;;		None
 25179 ;; Return value:  Size  Location     Type
 25180 ;;                  1    wreg      void 
 25181 ;; Registers used:
 25182 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25183 ;; Tracked objects:
 25184 ;;		On entry : 0/0
 25185 ;;		On exit  : 0/0
 25186 ;;		Unchanged: 0/0
 25187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25190 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25191 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25192 ;;Total ram usage:        2 bytes
 25193 ;; Hardware stack levels used: 1
 25194 ;; Hardware stack levels required when called: 8
 25195 ;; This function calls:
 25196 ;;		_I2C1_DO_ADDRESS_NACK
 25197 ;;		_I2C1_DO_IDLE
 25198 ;;		_I2C1_DO_RCEN
 25199 ;;		_I2C1_DO_RESET
 25200 ;;		_I2C1_DO_RX
 25201 ;;		_I2C1_DO_RX_ACK
 25202 ;;		_I2C1_DO_RX_NACK_RESTART
 25203 ;;		_I2C1_DO_RX_NACK_STOP
 25204 ;;		_I2C1_DO_SEND_ADR_READ
 25205 ;;		_I2C1_DO_SEND_ADR_WRITE
 25206 ;;		_I2C1_DO_SEND_RESTART
 25207 ;;		_I2C1_DO_SEND_RESTART_READ
 25208 ;;		_I2C1_DO_SEND_RESTART_WRITE
 25209 ;;		_I2C1_DO_SEND_STOP
 25210 ;;		_I2C1_DO_TX
 25211 ;;		_I2C1_DO_TX_EMPTY
 25212 ;;		_I2C1_MasterClearIrq
 25213 ;;		_I2C1_MasterIsNack
 25214 ;; This function is called by:
 25215 ;;		_I2C1_Poller
 25216 ;; This function uses a non-reentrant model
 25217 ;;
 25218                           
 25219     1597                     _I2C1_MasterFsm:	
 25220                           ;psect for function _I2C1_MasterFsm
 25221                           
 25222     1597                     l12819:	
 25223                           ;incstack = 0
 25224                           ; Regs used in _I2C1_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25225                           
 25226                           
 25227                           ;mcc_generated_files/i2c1_master.c: 323:     I2C1_MasterClearIrq();
 25228     1597  319E  26BB  3195   	fcall	_I2C1_MasterClearIrq
 25229     159A                     l12821:
 25230                           
 25231                           ;mcc_generated_files/i2c1_master.c: 325:     if(I2C1_Status.addressNackCheck && I2C1_Mas
      +                          terIsNack())
 25232     159A  0141               	movlb	1	; select bank1
 25233     159B  1C3D               	btfss	(_I2C1_Status^(0+128)+29),0
 25234     159C  2D9E               	goto	u9601
 25235     159D  2D9F               	goto	u9600
 25236     159E                     u9601:
 25237     159E  2DAA               	goto	l12827
 25238     159F                     u9600:
 25239     159F                     l12823:
 25240     159F  319F  2735  3195   	fcall	_I2C1_MasterIsNack
 25241     15A2  3A00               	xorlw	0
 25242     15A3  1903               	skipnz
 25243     15A4  2DA6               	goto	u9611
 25244     15A5  2DA7               	goto	u9610
 25245     15A6                     u9611:
 25246     15A6  2DAA               	goto	l12827
 25247     15A7                     u9610:
 25248     15A7                     l12825:
 25249                           
 25250                           ;mcc_generated_files/i2c1_master.c: 326:     {;mcc_generated_files/i2c1_master.c: 327:  
      +                                 I2C1_Status.state = I2C1_ADDRESS_NACK;
 25251     15A7  300F               	movlw	15
 25252     15A8  0141               	movlb	1	; select bank1
 25253     15A9  00BB               	movwf	(_I2C1_Status^(0+128)+27)
 25254     15AA                     l12827:
 25255                           
 25256                           ;mcc_generated_files/i2c1_master.c: 329:     I2C1_Status.state = i2c1_fsmStateTable[I2C1
      +                          _Status.state]();
 25257     15AA  0141               	movlb	1	; select bank1
 25258     15AB  083B               	movf	(_I2C1_Status^(0+128)+27),w
 25259     15AC  0140               	movlb	0	; select bank0
 25260     15AD  00A0               	movwf	??_I2C1_MasterFsm
 25261     15AE  01A1               	clrf	??_I2C1_MasterFsm+1
 25262     15AF  35A0               	lslf	??_I2C1_MasterFsm,f
 25263     15B0  0DA1               	rlf	??_I2C1_MasterFsm+1,f
 25264     15B1  3028               	movlw	low _i2c1_fsmStateTable
 25265     15B2  0720               	addwf	??_I2C1_MasterFsm,w
 25266     15B3  0084               	movwf	4
 25267     15B4  3018               	movlw	high _i2c1_fsmStateTable
 25268     15B5  3D21               	addwfc	??_I2C1_MasterFsm+1,w
 25269     15B6  3880               	iorlw	128
 25270     15B7  0085               	movwf	5
 25271     15B8  3F01               	moviw [1]fsr0
 25272     15B9  008A               	movwf	10
 25273     15BA  3F00               	moviw [0]fsr0
 25274     15BB  000A               	callw
 25275     15BC  3195               	pagesel	$
 25276     15BD  0141               	movlb	1	; select bank1
 25277     15BE  00BB               	movwf	(_I2C1_Status^(0+128)+27)
 25278     15BF                     l2424:
 25279     15BF  0008               	return
 25280     15C0                     __end_of_I2C1_MasterFsm:
 25281                           
 25282                           	psect	text113
 25283     156F                     __ptext113:	
 25284 ;; *************** function _I2C1_DO_ADDRESS_NACK *****************
 25285 ;; Defined at:
 25286 ;;		line 500 in file "mcc_generated_files/i2c1_master.c"
 25287 ;; Parameters:    Size  Location     Type
 25288 ;;		None
 25289 ;; Auto vars:     Size  Location     Type
 25290 ;;		None
 25291 ;; Return value:  Size  Location     Type
 25292 ;;                  1    wreg      enum E12565
 25293 ;; Registers used:
 25294 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25295 ;; Tracked objects:
 25296 ;;		On entry : 0/0
 25297 ;;		On exit  : 0/0
 25298 ;;		Unchanged: 0/0
 25299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25302 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25303 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25304 ;;Total ram usage:        2 bytes
 25305 ;; Hardware stack levels used: 1
 25306 ;; Hardware stack levels required when called: 7
 25307 ;; This function calls:
 25308 ;;		NULL
 25309 ;;		_I2C1_CallbackReturnReset
 25310 ;;		_I2C1_CallbackReturnStop
 25311 ;;		_I2C1_DO_SEND_RESTART
 25312 ;;		_I2C1_DO_SEND_STOP
 25313 ;;		_rd1RegCompleteHandler
 25314 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1727
 25315 ;;		_rd2RegCompleteHandler
 25316 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1738
 25317 ;;		_rdBlkRegCompleteHandler
 25318 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1761
 25319 ;;		_wr1RegCompleteHandler
 25320 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1744
 25321 ;;		_wr2RegCompleteHandler
 25322 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1750
 25323 ;; This function is called by:
 25324 ;;		_I2C1_MasterFsm
 25325 ;; This function uses a non-reentrant model
 25326 ;;
 25327                           
 25328     156F                     _I2C1_DO_ADDRESS_NACK:	
 25329                           ;psect for function _I2C1_DO_ADDRESS_NACK
 25330                           
 25331     156F                     l12795:	
 25332                           ;incstack = 0
 25333                           ; Regs used in _I2C1_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25334                           
 25335                           
 25336                           ;mcc_generated_files/i2c1_master.c: 502:     I2C1_Status.addressNackCheck = 0;
 25337     156F  0141               	movlb	1	; select bank1
 25338     1570  103D               	bcf	(_I2C1_Status^(0+128)+29),0
 25339     1571                     l12797:
 25340                           
 25341                           ;mcc_generated_files/i2c1_master.c: 503:     I2C1_Status.error = I2C1_FAIL;
 25342     1571  3002               	movlw	2
 25343     1572  00BC               	movwf	(_I2C1_Status^(0+128)+28)
 25344                           
 25345                           ;mcc_generated_files/i2c1_master.c: 504:     switch(I2C1_Status.callbackTable[I2C1_ADDR_
      +                          NACK](I2C1_Status.callbackPayload[I2C1_ADDR_NACK]))
 25346     1573  2D7C               	goto	l12809
 25347     1574                     l12799:
 25348                           
 25349                           ;mcc_generated_files/i2c1_master.c: 508:             return I2C1_DO_SEND_RESTART();
 25350     1574  319F  270D  3195   	fcall	_I2C1_DO_SEND_RESTART
 25351     1577  2D96               	goto	l2515
 25352     1578                     l12803:
 25353                           
 25354                           ;mcc_generated_files/i2c1_master.c: 510:             return I2C1_DO_SEND_STOP();
 25355     1578  319F  2712  3195   	fcall	_I2C1_DO_SEND_STOP
 25356     157B  2D96               	goto	l2515
 25357     157C                     l12809:
 25358     157C  082E               	movf	(low ((_I2C1_Status| 0+14)))^(0+128),w
 25359     157D  00F8               	movwf	I2C1_CallbackReturnReset@funPtr
 25360     157E  3004               	movlw	4
 25361     157F  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 25362     1580  0086               	movwf	6
 25363     1581  0187               	clrf	7
 25364     1582  3F41               	moviw [1]fsr1
 25365     1583  008A               	movwf	10
 25366     1584  3F40               	moviw [0]fsr1
 25367     1585  000A               	callw
 25368     1586  3195               	pagesel	$
 25369     1587  00F9               	movwf	??_I2C1_DO_ADDRESS_NACK
 25370     1588  01FA               	clrf	??_I2C1_DO_ADDRESS_NACK+1
 25371                           
 25372                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25373                           ; Switch size 1, requested type "simple"
 25374                           ; Number of cases is 1, Range of values is 0 to 0
 25375                           ; switch strategies available:
 25376                           ; Name         Instructions Cycles
 25377                           ; simple_byte            4     3 (average)
 25378                           ; direct_byte            8     6 (fixed)
 25379                           ; jumptable            260     6 (fixed)
 25380                           ;	Chosen strategy is simple_byte
 25381     1589  087A               	movf	??_I2C1_DO_ADDRESS_NACK+1,w
 25382     158A  3A00               	xorlw	0	; case 0
 25383     158B  1903               	skipnz
 25384     158C  2D8E               	goto	l16605
 25385     158D  2D78               	goto	l12803
 25386     158E                     l16605:
 25387                           
 25388                           ; Switch size 1, requested type "simple"
 25389                           ; Number of cases is 2, Range of values is 2 to 3
 25390                           ; switch strategies available:
 25391                           ; Name         Instructions Cycles
 25392                           ; simple_byte            7     4 (average)
 25393                           ; direct_byte           13     9 (fixed)
 25394                           ; jumptable            263     9 (fixed)
 25395                           ;	Chosen strategy is simple_byte
 25396     158E  0879               	movf	??_I2C1_DO_ADDRESS_NACK,w
 25397     158F  3A02               	xorlw	2	; case 2
 25398     1590  1903               	skipnz
 25399     1591  2D74               	goto	l12799
 25400     1592  3A01               	xorlw	1	; case 3
 25401     1593  1903               	skipnz
 25402     1594  2D74               	goto	l12799
 25403     1595  2D78               	goto	l12803
 25404     1596                     l2515:
 25405     1596  0008               	return
 25406     1597                     __end_of_I2C1_DO_ADDRESS_NACK:
 25407                           
 25408                           	psect	text114
 25409     1F26                     __ptext114:	
 25410 ;; *************** function _I2C1_DO_RESET *****************
 25411 ;; Defined at:
 25412 ;;		line 494 in file "mcc_generated_files/i2c1_master.c"
 25413 ;; Parameters:    Size  Location     Type
 25414 ;;		None
 25415 ;; Auto vars:     Size  Location     Type
 25416 ;;		None
 25417 ;; Return value:  Size  Location     Type
 25418 ;;                  1    wreg      enum E12565
 25419 ;; Registers used:
 25420 ;;		wreg, status,2
 25421 ;; Tracked objects:
 25422 ;;		On entry : 0/0
 25423 ;;		On exit  : 0/0
 25424 ;;		Unchanged: 0/0
 25425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25430 ;;Total ram usage:        0 bytes
 25431 ;; Hardware stack levels used: 1
 25432 ;; Hardware stack levels required when called: 4
 25433 ;; This function calls:
 25434 ;;		Nothing
 25435 ;; This function is called by:
 25436 ;;		_I2C1_MasterFsm
 25437 ;; This function uses a non-reentrant model
 25438 ;;
 25439                           
 25440     1F26                     _I2C1_DO_RESET:	
 25441                           ;psect for function _I2C1_DO_RESET
 25442                           
 25443     1F26                     l12787:	
 25444                           ;incstack = 0
 25445                           ; Regs used in _I2C1_DO_RESET: [wreg+status,2]
 25446                           
 25447                           
 25448                           ;mcc_generated_files/i2c1_master.c: 496:     I2C1_Status.busy = 0;
 25449     1F26  0141               	movlb	1	; select bank1
 25450     1F27  10BD               	bcf	(_I2C1_Status^(0+128)+29),1
 25451     1F28                     l12789:
 25452                           
 25453                           ;mcc_generated_files/i2c1_master.c: 497:     I2C1_Status.error = I2C1_NOERR;
 25454     1F28  01BC               	clrf	(_I2C1_Status^(0+128)+28)
 25455     1F29                     l12791:
 25456                           
 25457                           ;mcc_generated_files/i2c1_master.c: 498:     return I2C1_RESET;
 25458     1F29  300E               	movlw	14
 25459     1F2A                     l2509:
 25460     1F2A  0008               	return
 25461     1F2B                     __end_of_I2C1_DO_RESET:
 25462                           
 25463                           	psect	text115
 25464     1F21                     __ptext115:	
 25465 ;; *************** function _I2C1_DO_RX_NACK_RESTART *****************
 25466 ;; Defined at:
 25467 ;;		line 488 in file "mcc_generated_files/i2c1_master.c"
 25468 ;; Parameters:    Size  Location     Type
 25469 ;;		None
 25470 ;; Auto vars:     Size  Location     Type
 25471 ;;		None
 25472 ;; Return value:  Size  Location     Type
 25473 ;;                  1    wreg      enum E12565
 25474 ;; Registers used:
 25475 ;;		wreg, status,2, status,0, pclath, cstack
 25476 ;; Tracked objects:
 25477 ;;		On entry : 0/0
 25478 ;;		On exit  : 0/0
 25479 ;;		Unchanged: 0/0
 25480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25485 ;;Total ram usage:        0 bytes
 25486 ;; Hardware stack levels used: 1
 25487 ;; Hardware stack levels required when called: 5
 25488 ;; This function calls:
 25489 ;;		_I2C1_MasterSendNack
 25490 ;; This function is called by:
 25491 ;;		_I2C1_DO_RX
 25492 ;;		_I2C1_MasterFsm
 25493 ;; This function uses a non-reentrant model
 25494 ;;
 25495                           
 25496     1F21                     _I2C1_DO_RX_NACK_RESTART:	
 25497                           ;psect for function _I2C1_DO_RX_NACK_RESTART
 25498                           
 25499     1F21                     l12625:	
 25500                           ;incstack = 0
 25501                           ; Regs used in _I2C1_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 25502                           
 25503                           
 25504                           ;mcc_generated_files/i2c1_master.c: 490:     I2C1_MasterSendNack();
 25505     1F21  319E  26E9  319F   	fcall	_I2C1_MasterSendNack
 25506     1F24                     l12627:
 25507                           
 25508                           ;mcc_generated_files/i2c1_master.c: 491:     return I2C1_SEND_RESTART;
 25509     1F24  3009               	movlw	9
 25510     1F25                     l2506:
 25511     1F25  0008               	return
 25512     1F26                     __end_of_I2C1_DO_RX_NACK_RESTART:
 25513                           
 25514                           	psect	text116
 25515     1F1C                     __ptext116:	
 25516 ;; *************** function _I2C1_DO_RX_NACK_STOP *****************
 25517 ;; Defined at:
 25518 ;;		line 482 in file "mcc_generated_files/i2c1_master.c"
 25519 ;; Parameters:    Size  Location     Type
 25520 ;;		None
 25521 ;; Auto vars:     Size  Location     Type
 25522 ;;		None
 25523 ;; Return value:  Size  Location     Type
 25524 ;;                  1    wreg      enum E12565
 25525 ;; Registers used:
 25526 ;;		wreg, status,2, status,0, pclath, cstack
 25527 ;; Tracked objects:
 25528 ;;		On entry : 0/0
 25529 ;;		On exit  : 0/0
 25530 ;;		Unchanged: 0/0
 25531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25536 ;;Total ram usage:        0 bytes
 25537 ;; Hardware stack levels used: 1
 25538 ;; Hardware stack levels required when called: 5
 25539 ;; This function calls:
 25540 ;;		_I2C1_MasterSendNack
 25541 ;; This function is called by:
 25542 ;;		_I2C1_DO_RX
 25543 ;;		_I2C1_MasterFsm
 25544 ;; This function uses a non-reentrant model
 25545 ;;
 25546                           
 25547     1F1C                     _I2C1_DO_RX_NACK_STOP:	
 25548                           ;psect for function _I2C1_DO_RX_NACK_STOP
 25549                           
 25550     1F1C                     l12631:	
 25551                           ;incstack = 0
 25552                           ; Regs used in _I2C1_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 25553                           
 25554                           
 25555                           ;mcc_generated_files/i2c1_master.c: 484:     I2C1_MasterSendNack();
 25556     1F1C  319E  26E9  319F   	fcall	_I2C1_MasterSendNack
 25557     1F1F                     l12633:
 25558                           
 25559                           ;mcc_generated_files/i2c1_master.c: 485:     return I2C1_SEND_STOP;
 25560     1F1F  300A               	movlw	10
 25561     1F20                     l2503:
 25562     1F20  0008               	return
 25563     1F21                     __end_of_I2C1_DO_RX_NACK_STOP:
 25564                           
 25565                           	psect	text117
 25566     1F17                     __ptext117:	
 25567 ;; *************** function _I2C1_DO_RX_ACK *****************
 25568 ;; Defined at:
 25569 ;;		line 475 in file "mcc_generated_files/i2c1_master.c"
 25570 ;; Parameters:    Size  Location     Type
 25571 ;;		None
 25572 ;; Auto vars:     Size  Location     Type
 25573 ;;		None
 25574 ;; Return value:  Size  Location     Type
 25575 ;;                  1    wreg      enum E12565
 25576 ;; Registers used:
 25577 ;;		wreg, status,2, status,0, pclath, cstack
 25578 ;; Tracked objects:
 25579 ;;		On entry : 0/0
 25580 ;;		On exit  : 0/0
 25581 ;;		Unchanged: 0/0
 25582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25587 ;;Total ram usage:        0 bytes
 25588 ;; Hardware stack levels used: 1
 25589 ;; Hardware stack levels required when called: 5
 25590 ;; This function calls:
 25591 ;;		_I2C1_MasterSendAck
 25592 ;; This function is called by:
 25593 ;;		_I2C1_MasterFsm
 25594 ;; This function uses a non-reentrant model
 25595 ;;
 25596                           
 25597     1F17                     _I2C1_DO_RX_ACK:	
 25598                           ;psect for function _I2C1_DO_RX_ACK
 25599                           
 25600     1F17                     l12781:	
 25601                           ;incstack = 0
 25602                           ; Regs used in _I2C1_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
 25603                           
 25604                           
 25605                           ;mcc_generated_files/i2c1_master.c: 477:     I2C1_MasterSendAck();
 25606     1F17  319E  26ED  319F   	fcall	_I2C1_MasterSendAck
 25607     1F1A                     l12783:
 25608                           
 25609                           ;mcc_generated_files/i2c1_master.c: 478:     return I2C1_RCEN;
 25610     1F1A  3005               	movlw	5
 25611     1F1B                     l2500:
 25612     1F1B  0008               	return
 25613     1F1C                     __end_of_I2C1_DO_RX_ACK:
 25614                           
 25615                           	psect	text118
 25616     1F12                     __ptext118:	
 25617 ;; *************** function _I2C1_DO_SEND_STOP *****************
 25618 ;; Defined at:
 25619 ;;		line 469 in file "mcc_generated_files/i2c1_master.c"
 25620 ;; Parameters:    Size  Location     Type
 25621 ;;		None
 25622 ;; Auto vars:     Size  Location     Type
 25623 ;;		None
 25624 ;; Return value:  Size  Location     Type
 25625 ;;                  1    wreg      enum E12565
 25626 ;; Registers used:
 25627 ;;		wreg, status,2, status,0, pclath, cstack
 25628 ;; Tracked objects:
 25629 ;;		On entry : 0/0
 25630 ;;		On exit  : 0/0
 25631 ;;		Unchanged: 0/0
 25632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25637 ;;Total ram usage:        0 bytes
 25638 ;; Hardware stack levels used: 1
 25639 ;; Hardware stack levels required when called: 5
 25640 ;; This function calls:
 25641 ;;		_I2C1_MasterStop
 25642 ;; This function is called by:
 25643 ;;		_I2C1_DO_TX
 25644 ;;		_I2C1_DO_TX_EMPTY
 25645 ;;		_I2C1_DO_ADDRESS_NACK
 25646 ;;		_I2C1_MasterFsm
 25647 ;; This function uses a non-reentrant model
 25648 ;;
 25649                           
 25650     1F12                     _I2C1_DO_SEND_STOP:	
 25651                           ;psect for function _I2C1_DO_SEND_STOP
 25652                           
 25653     1F12                     l12613:	
 25654                           ;incstack = 0
 25655                           ; Regs used in _I2C1_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 25656                           
 25657                           
 25658                           ;mcc_generated_files/i2c1_master.c: 471:     I2C1_MasterStop();
 25659     1F12  319E  26CA  319F   	fcall	_I2C1_MasterStop
 25660     1F15                     l12615:
 25661                           
 25662                           ;mcc_generated_files/i2c1_master.c: 472:     return I2C1_IDLE;
 25663     1F15  3000               	movlw	0
 25664     1F16                     l2497:
 25665     1F16  0008               	return
 25666     1F17                     __end_of_I2C1_DO_SEND_STOP:
 25667                           
 25668                           	psect	text119
 25669     1F0D                     __ptext119:	
 25670 ;; *************** function _I2C1_DO_SEND_RESTART *****************
 25671 ;; Defined at:
 25672 ;;		line 463 in file "mcc_generated_files/i2c1_master.c"
 25673 ;; Parameters:    Size  Location     Type
 25674 ;;		None
 25675 ;; Auto vars:     Size  Location     Type
 25676 ;;		None
 25677 ;; Return value:  Size  Location     Type
 25678 ;;                  1    wreg      enum E12565
 25679 ;; Registers used:
 25680 ;;		wreg, status,2, status,0, pclath, cstack
 25681 ;; Tracked objects:
 25682 ;;		On entry : 0/0
 25683 ;;		On exit  : 0/0
 25684 ;;		Unchanged: 0/0
 25685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25690 ;;Total ram usage:        0 bytes
 25691 ;; Hardware stack levels used: 1
 25692 ;; Hardware stack levels required when called: 5
 25693 ;; This function calls:
 25694 ;;		_I2C1_MasterEnableRestart
 25695 ;; This function is called by:
 25696 ;;		_I2C1_DO_TX_EMPTY
 25697 ;;		_I2C1_DO_ADDRESS_NACK
 25698 ;;		_I2C1_MasterFsm
 25699 ;; This function uses a non-reentrant model
 25700 ;;
 25701                           
 25702     1F0D                     _I2C1_DO_SEND_RESTART:	
 25703                           ;psect for function _I2C1_DO_SEND_RESTART
 25704                           
 25705     1F0D                     l12639:	
 25706                           ;incstack = 0
 25707                           ; Regs used in _I2C1_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 25708                           
 25709                           
 25710                           ;mcc_generated_files/i2c1_master.c: 465:     I2C1_MasterEnableRestart();
 25711     1F0D  319E  26C7  319F   	fcall	_I2C1_MasterEnableRestart
 25712     1F10                     l12641:
 25713                           
 25714                           ;mcc_generated_files/i2c1_master.c: 466:     return I2C1_SEND_ADR_READ;
 25715     1F10  3001               	movlw	1
 25716     1F11                     l2494:
 25717     1F11  0008               	return
 25718     1F12                     __end_of_I2C1_DO_SEND_RESTART:
 25719                           
 25720                           	psect	text120
 25721     1F08                     __ptext120:	
 25722 ;; *************** function _I2C1_DO_SEND_RESTART_WRITE *****************
 25723 ;; Defined at:
 25724 ;;		line 456 in file "mcc_generated_files/i2c1_master.c"
 25725 ;; Parameters:    Size  Location     Type
 25726 ;;		None
 25727 ;; Auto vars:     Size  Location     Type
 25728 ;;		None
 25729 ;; Return value:  Size  Location     Type
 25730 ;;                  1    wreg      enum E12565
 25731 ;; Registers used:
 25732 ;;		wreg, status,2, status,0, pclath, cstack
 25733 ;; Tracked objects:
 25734 ;;		On entry : 0/0
 25735 ;;		On exit  : 0/0
 25736 ;;		Unchanged: 0/0
 25737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25742 ;;Total ram usage:        0 bytes
 25743 ;; Hardware stack levels used: 1
 25744 ;; Hardware stack levels required when called: 5
 25745 ;; This function calls:
 25746 ;;		_I2C1_MasterEnableRestart
 25747 ;; This function is called by:
 25748 ;;		_I2C1_DO_TX
 25749 ;;		_I2C1_MasterFsm
 25750 ;; This function uses a non-reentrant model
 25751 ;;
 25752                           
 25753     1F08                     _I2C1_DO_SEND_RESTART_WRITE:	
 25754                           ;psect for function _I2C1_DO_SEND_RESTART_WRITE
 25755                           
 25756     1F08                     l12607:	
 25757                           ;incstack = 0
 25758                           ; Regs used in _I2C1_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 25759                           
 25760                           
 25761                           ;mcc_generated_files/i2c1_master.c: 458:     I2C1_MasterEnableRestart();
 25762     1F08  319E  26C7  319F   	fcall	_I2C1_MasterEnableRestart
 25763     1F0B                     l12609:
 25764                           
 25765                           ;mcc_generated_files/i2c1_master.c: 459:     return I2C1_SEND_ADR_WRITE;
 25766     1F0B  3002               	movlw	2
 25767     1F0C                     l2491:
 25768     1F0C  0008               	return
 25769     1F0D                     __end_of_I2C1_DO_SEND_RESTART_WRITE:
 25770                           
 25771                           	psect	text121
 25772     1F03                     __ptext121:	
 25773 ;; *************** function _I2C1_DO_SEND_RESTART_READ *****************
 25774 ;; Defined at:
 25775 ;;		line 450 in file "mcc_generated_files/i2c1_master.c"
 25776 ;; Parameters:    Size  Location     Type
 25777 ;;		None
 25778 ;; Auto vars:     Size  Location     Type
 25779 ;;		None
 25780 ;; Return value:  Size  Location     Type
 25781 ;;                  1    wreg      enum E12565
 25782 ;; Registers used:
 25783 ;;		wreg, status,2, status,0, pclath, cstack
 25784 ;; Tracked objects:
 25785 ;;		On entry : 0/0
 25786 ;;		On exit  : 0/0
 25787 ;;		Unchanged: 0/0
 25788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25793 ;;Total ram usage:        0 bytes
 25794 ;; Hardware stack levels used: 1
 25795 ;; Hardware stack levels required when called: 5
 25796 ;; This function calls:
 25797 ;;		_I2C1_MasterEnableRestart
 25798 ;; This function is called by:
 25799 ;;		_I2C1_DO_TX
 25800 ;;		_I2C1_MasterFsm
 25801 ;; This function uses a non-reentrant model
 25802 ;;
 25803                           
 25804     1F03                     _I2C1_DO_SEND_RESTART_READ:	
 25805                           ;psect for function _I2C1_DO_SEND_RESTART_READ
 25806                           
 25807     1F03                     l12601:	
 25808                           ;incstack = 0
 25809                           ; Regs used in _I2C1_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 25810                           
 25811                           
 25812                           ;mcc_generated_files/i2c1_master.c: 452:     I2C1_MasterEnableRestart();
 25813     1F03  319E  26C7  319F   	fcall	_I2C1_MasterEnableRestart
 25814     1F06                     l12603:
 25815                           
 25816                           ;mcc_generated_files/i2c1_master.c: 453:     return I2C1_SEND_ADR_READ;
 25817     1F06  3001               	movlw	1
 25818     1F07                     l2488:
 25819     1F07  0008               	return
 25820     1F08                     __end_of_I2C1_DO_SEND_RESTART_READ:
 25821                           
 25822                           	psect	text122
 25823     1FA1                     __ptext122:	
 25824 ;; *************** function _I2C1_DO_RCEN *****************
 25825 ;; Defined at:
 25826 ;;		line 402 in file "mcc_generated_files/i2c1_master.c"
 25827 ;; Parameters:    Size  Location     Type
 25828 ;;		None
 25829 ;; Auto vars:     Size  Location     Type
 25830 ;;		None
 25831 ;; Return value:  Size  Location     Type
 25832 ;;                  1    wreg      enum E12565
 25833 ;; Registers used:
 25834 ;;		wreg, status,2, status,0, pclath, cstack
 25835 ;; Tracked objects:
 25836 ;;		On entry : 0/0
 25837 ;;		On exit  : 0/0
 25838 ;;		Unchanged: 0/0
 25839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25844 ;;Total ram usage:        0 bytes
 25845 ;; Hardware stack levels used: 1
 25846 ;; Hardware stack levels required when called: 5
 25847 ;; This function calls:
 25848 ;;		_I2C1_MasterStartRx
 25849 ;; This function is called by:
 25850 ;;		_I2C1_MasterFsm
 25851 ;; This function uses a non-reentrant model
 25852 ;;
 25853                           
 25854     1FA1                     _I2C1_DO_RCEN:	
 25855                           ;psect for function _I2C1_DO_RCEN
 25856                           
 25857     1FA1                     l12747:	
 25858                           ;incstack = 0
 25859                           ; Regs used in _I2C1_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
 25860                           
 25861                           
 25862                           ;mcc_generated_files/i2c1_master.c: 404:     I2C1_Status.addressNackCheck = 0;
 25863     1FA1  0141               	movlb	1	; select bank1
 25864     1FA2  103D               	bcf	(_I2C1_Status^(0+128)+29),0
 25865     1FA3                     l12749:
 25866                           
 25867                           ;mcc_generated_files/i2c1_master.c: 405:     I2C1_MasterStartRx();
 25868     1FA3  319E  26CD  319F   	fcall	_I2C1_MasterStartRx
 25869     1FA6                     l12751:
 25870                           
 25871                           ;mcc_generated_files/i2c1_master.c: 406:     return I2C1_RX;
 25872     1FA6  3004               	movlw	4
 25873     1FA7                     l2464:
 25874     1FA7  0008               	return
 25875     1FA8                     __end_of_I2C1_DO_RCEN:
 25876                           
 25877                           	psect	text123
 25878     0ACC                     __ptext123:	
 25879 ;; *************** function _I2C1_DO_RX *****************
 25880 ;; Defined at:
 25881 ;;		line 378 in file "mcc_generated_files/i2c1_master.c"
 25882 ;; Parameters:    Size  Location     Type
 25883 ;;		None
 25884 ;; Auto vars:     Size  Location     Type
 25885 ;;		None
 25886 ;; Return value:  Size  Location     Type
 25887 ;;                  1    wreg      enum E12565
 25888 ;; Registers used:
 25889 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25890 ;; Tracked objects:
 25891 ;;		On entry : 0/0
 25892 ;;		On exit  : 0/0
 25893 ;;		Unchanged: 0/0
 25894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25897 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25898 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25899 ;;Total ram usage:        2 bytes
 25900 ;; Hardware stack levels used: 1
 25901 ;; Hardware stack levels required when called: 7
 25902 ;; This function calls:
 25903 ;;		NULL
 25904 ;;		_I2C1_CallbackReturnReset
 25905 ;;		_I2C1_CallbackReturnStop
 25906 ;;		_I2C1_DO_RX_NACK_RESTART
 25907 ;;		_I2C1_DO_RX_NACK_STOP
 25908 ;;		_I2C1_MasterGetRxData
 25909 ;;		_I2C1_MasterSendAck
 25910 ;;		_rd1RegCompleteHandler
 25911 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1727
 25912 ;;		_rd2RegCompleteHandler
 25913 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1738
 25914 ;;		_rdBlkRegCompleteHandler
 25915 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1761
 25916 ;;		_wr1RegCompleteHandler
 25917 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1744
 25918 ;;		_wr2RegCompleteHandler
 25919 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1750
 25920 ;; This function is called by:
 25921 ;;		_I2C1_MasterFsm
 25922 ;; This function uses a non-reentrant model
 25923 ;;
 25924                           
 25925     0ACC                     _I2C1_DO_RX:	
 25926                           ;psect for function _I2C1_DO_RX
 25927                           
 25928     0ACC                     l12715:	
 25929                           ;incstack = 0
 25930                           ; Regs used in _I2C1_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25931                           
 25932                           
 25933                           ;mcc_generated_files/i2c1_master.c: 380:     *I2C1_Status.data_ptr++ = I2C1_MasterGetRxD
      +                          ata();
 25934     0ACC  319E  26D0  318A   	fcall	_I2C1_MasterGetRxData
 25935     0ACF  00F9               	movwf	??_I2C1_DO_RX
 25936     0AD0  3017               	movlw	23
 25937     0AD1  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 25938     0AD2  0086               	movwf	6
 25939     0AD3  0187               	clrf	7
 25940     0AD4  3F40               	moviw [0]fsr1
 25941     0AD5  0084               	movwf	4
 25942     0AD6  3F41               	moviw [1]fsr1
 25943     0AD7  0085               	movwf	5
 25944     0AD8  0879               	movf	??_I2C1_DO_RX,w
 25945     0AD9  0080               	movwf	0
 25946     0ADA                     l12717:
 25947     0ADA  3001               	movlw	1
 25948     0ADB  0141               	movlb	1	; select bank1
 25949     0ADC  07B7               	addwf	(low ((_I2C1_Status| 0+23)))^(0+128),f
 25950     0ADD  3000               	movlw	0
 25951     0ADE  3DB8               	addwfc	((low ((_I2C1_Status| 0+23))+1))^(0+128),f
 25952     0ADF                     l12719:
 25953                           
 25954                           ;mcc_generated_files/i2c1_master.c: 381:     if(--I2C1_Status.data_length)
 25955     0ADF  3001               	movlw	1
 25956     0AE0  02B9               	subwf	(_I2C1_Status^(0+128)+25),f
 25957     0AE1  3000               	movlw	0
 25958     0AE2  3BBA               	subwfb	((_I2C1_Status+1)^(0+128)+25),f
 25959     0AE3  0839               	movf	(_I2C1_Status^(0+128)+25),w
 25960     0AE4  043A               	iorwf	((_I2C1_Status+1)^(0+128)+25),w
 25961     0AE5  1903               	btfsc	3,2
 25962     0AE6  2AE8               	goto	u9581
 25963     0AE7  2AE9               	goto	u9580
 25964     0AE8                     u9581:
 25965     0AE8  2AEE               	goto	l2452
 25966     0AE9                     u9580:
 25967     0AE9                     l12721:
 25968                           
 25969                           ;mcc_generated_files/i2c1_master.c: 382:     {;mcc_generated_files/i2c1_master.c: 383:  
      +                                 I2C1_MasterSendAck();
 25970     0AE9  319E  26ED  318A   	fcall	_I2C1_MasterSendAck
 25971     0AEC                     l12723:
 25972                           
 25973                           ;mcc_generated_files/i2c1_master.c: 384:         return I2C1_RCEN;
 25974     0AEC  3005               	movlw	5
 25975     0AED  2B14               	goto	l2453
 25976     0AEE                     l2452:	
 25977                           ;mcc_generated_files/i2c1_master.c: 386:     else
 25978                           
 25979                           
 25980                           ;mcc_generated_files/i2c1_master.c: 387:     {;mcc_generated_files/i2c1_master.c: 388:  
      +                                 I2C1_Status.bufferFree = 1;
 25981     0AEE  15BD               	bsf	(_I2C1_Status^(0+128)+29),3
 25982                           
 25983                           ;mcc_generated_files/i2c1_master.c: 389:         switch(I2C1_Status.callbackTable[I2C1_D
      +                          ATA_COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 25984     0AEF  2AF8               	goto	l12739
 25985     0AF0                     l12729:
 25986                           
 25987                           ;mcc_generated_files/i2c1_master.c: 393:                 return I2C1_DO_RX_NACK_RESTART(
      +                          );
 25988     0AF0  319F  2721  318A   	fcall	_I2C1_DO_RX_NACK_RESTART
 25989     0AF3  2B14               	goto	l2453
 25990     0AF4                     l12733:
 25991                           
 25992                           ;mcc_generated_files/i2c1_master.c: 397:                 return I2C1_DO_RX_NACK_STOP();
 25993     0AF4  319F  271C  318A   	fcall	_I2C1_DO_RX_NACK_STOP
 25994     0AF7  2B14               	goto	l2453
 25995     0AF8                     l12739:
 25996     0AF8  082C               	movf	(low ((_I2C1_Status| 0+12)))^(0+128),w
 25997     0AF9  00F8               	movwf	I2C1_CallbackReturnReset@funPtr
 25998     0AFA  0821               	movf	(_I2C1_Status+1)^(0+128),w
 25999     0AFB  008A               	movwf	10
 26000     0AFC  0820               	movf	_I2C1_Status^(0+128),w
 26001     0AFD  000A               	callw
 26002     0AFE  318A               	pagesel	$
 26003     0AFF  00F9               	movwf	??_I2C1_DO_RX
 26004     0B00  01FA               	clrf	??_I2C1_DO_RX+1
 26005                           
 26006                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26007                           ; Switch size 1, requested type "simple"
 26008                           ; Number of cases is 1, Range of values is 0 to 0
 26009                           ; switch strategies available:
 26010                           ; Name         Instructions Cycles
 26011                           ; simple_byte            4     3 (average)
 26012                           ; direct_byte            8     6 (fixed)
 26013                           ; jumptable            260     6 (fixed)
 26014                           ;	Chosen strategy is simple_byte
 26015     0B01  087A               	movf	??_I2C1_DO_RX+1,w
 26016     0B02  3A00               	xorlw	0	; case 0
 26017     0B03  1903               	skipnz
 26018     0B04  2B06               	goto	l16607
 26019     0B05  2AF4               	goto	l12733
 26020     0B06                     l16607:
 26021                           
 26022                           ; Switch size 1, requested type "simple"
 26023                           ; Number of cases is 4, Range of values is 1 to 4
 26024                           ; switch strategies available:
 26025                           ; Name         Instructions Cycles
 26026                           ; simple_byte           13     7 (average)
 26027                           ; direct_byte           17     9 (fixed)
 26028                           ; jumptable            263     9 (fixed)
 26029                           ;	Chosen strategy is simple_byte
 26030     0B06  0879               	movf	??_I2C1_DO_RX,w
 26031     0B07  3A01               	xorlw	1	; case 1
 26032     0B08  1903               	skipnz
 26033     0B09  2AF4               	goto	l12733
 26034     0B0A  3A03               	xorlw	3	; case 2
 26035     0B0B  1903               	skipnz
 26036     0B0C  2AF0               	goto	l12729
 26037     0B0D  3A01               	xorlw	1	; case 3
 26038     0B0E  1903               	skipnz
 26039     0B0F  2AF0               	goto	l12729
 26040     0B10  3A07               	xorlw	7	; case 4
 26041     0B11  1903               	skipnz
 26042     0B12  2AF4               	goto	l12733
 26043     0B13  2AF4               	goto	l12733
 26044     0B14                     l2453:
 26045     0B14  0008               	return
 26046     0B15                     __end_of_I2C1_DO_RX:
 26047                           
 26048                           	psect	text124
 26049     0E3A                     __ptext124:	
 26050 ;; *************** function _I2C1_DO_TX *****************
 26051 ;; Defined at:
 26052 ;;		line 354 in file "mcc_generated_files/i2c1_master.c"
 26053 ;; Parameters:    Size  Location     Type
 26054 ;;		None
 26055 ;; Auto vars:     Size  Location     Type
 26056 ;;		None
 26057 ;; Return value:  Size  Location     Type
 26058 ;;                  1    wreg      enum E12565
 26059 ;; Registers used:
 26060 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 26061 ;; Tracked objects:
 26062 ;;		On entry : 0/0
 26063 ;;		On exit  : 0/0
 26064 ;;		Unchanged: 0/0
 26065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26068 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26069 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26070 ;;Total ram usage:        2 bytes
 26071 ;; Hardware stack levels used: 1
 26072 ;; Hardware stack levels required when called: 7
 26073 ;; This function calls:
 26074 ;;		NULL
 26075 ;;		_I2C1_CallbackReturnReset
 26076 ;;		_I2C1_CallbackReturnStop
 26077 ;;		_I2C1_DO_SEND_RESTART_READ
 26078 ;;		_I2C1_DO_SEND_RESTART_WRITE
 26079 ;;		_I2C1_DO_SEND_STOP
 26080 ;;		_I2C1_MasterIsNack
 26081 ;;		_I2C1_MasterSendTxData
 26082 ;;		_rd1RegCompleteHandler
 26083 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1727
 26084 ;;		_rd2RegCompleteHandler
 26085 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1738
 26086 ;;		_rdBlkRegCompleteHandler
 26087 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1761
 26088 ;;		_wr1RegCompleteHandler
 26089 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1744
 26090 ;;		_wr2RegCompleteHandler
 26091 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1750
 26092 ;; This function is called by:
 26093 ;;		_I2C1_MasterFsm
 26094 ;; This function uses a non-reentrant model
 26095 ;;
 26096                           
 26097     0E3A                     _I2C1_DO_TX:	
 26098                           ;psect for function _I2C1_DO_TX
 26099                           
 26100     0E3A                     l12681:	
 26101                           ;incstack = 0
 26102                           ; Regs used in _I2C1_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 26103                           
 26104                           
 26105                           ;mcc_generated_files/i2c1_master.c: 356:     if(I2C1_MasterIsNack())
 26106     0E3A  319F  2735  318E   	fcall	_I2C1_MasterIsNack
 26107     0E3D  3A00               	xorlw	0
 26108     0E3E  1903               	skipnz
 26109     0E3F  2E41               	goto	u9561
 26110     0E40  2E42               	goto	u9560
 26111     0E41                     u9561:
 26112     0E41  2E70               	goto	l2436
 26113     0E42                     u9560:
 26114     0E42  2E4F               	goto	l12699
 26115     0E43                     l12685:
 26116                           
 26117                           ;mcc_generated_files/i2c1_master.c: 361:                 return I2C1_DO_SEND_RESTART_REA
      +                          D();
 26118     0E43  319F  2703  318E   	fcall	_I2C1_DO_SEND_RESTART_READ
 26119     0E46  2E8F               	goto	l2439
 26120     0E47                     l12689:
 26121                           
 26122                           ;mcc_generated_files/i2c1_master.c: 363:                   return I2C1_DO_SEND_RESTART_W
      +                          RITE();
 26123     0E47  319F  2708  318E   	fcall	_I2C1_DO_SEND_RESTART_WRITE
 26124     0E4A  2E8F               	goto	l2439
 26125     0E4B                     l12693:
 26126                           
 26127                           ;mcc_generated_files/i2c1_master.c: 367:                 return I2C1_DO_SEND_STOP();
 26128     0E4B  319F  2712  318E   	fcall	_I2C1_DO_SEND_STOP
 26129     0E4E  2E8F               	goto	l2439
 26130     0E4F                     l12699:
 26131     0E4F  0141               	movlb	1	; select bank1
 26132     0E50  082F               	movf	(low ((_I2C1_Status| 0+15)))^(0+128),w
 26133     0E51  00F8               	movwf	I2C1_CallbackReturnReset@funPtr
 26134     0E52  3006               	movlw	6
 26135     0E53  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 26136     0E54  0086               	movwf	6
 26137     0E55  0187               	clrf	7
 26138     0E56  3F41               	moviw [1]fsr1
 26139     0E57  008A               	movwf	10
 26140     0E58  3F40               	moviw [0]fsr1
 26141     0E59  000A               	callw
 26142     0E5A  318E               	pagesel	$
 26143     0E5B  00F9               	movwf	??_I2C1_DO_TX
 26144     0E5C  01FA               	clrf	??_I2C1_DO_TX+1
 26145                           
 26146                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26147                           ; Switch size 1, requested type "simple"
 26148                           ; Number of cases is 1, Range of values is 0 to 0
 26149                           ; switch strategies available:
 26150                           ; Name         Instructions Cycles
 26151                           ; simple_byte            4     3 (average)
 26152                           ; direct_byte            8     6 (fixed)
 26153                           ; jumptable            260     6 (fixed)
 26154                           ;	Chosen strategy is simple_byte
 26155     0E5D  087A               	movf	??_I2C1_DO_TX+1,w
 26156     0E5E  3A00               	xorlw	0	; case 0
 26157     0E5F  1903               	skipnz
 26158     0E60  2E62               	goto	l16609
 26159     0E61  2E4B               	goto	l12693
 26160     0E62                     l16609:
 26161                           
 26162                           ; Switch size 1, requested type "simple"
 26163                           ; Number of cases is 4, Range of values is 1 to 4
 26164                           ; switch strategies available:
 26165                           ; Name         Instructions Cycles
 26166                           ; simple_byte           13     7 (average)
 26167                           ; direct_byte           17     9 (fixed)
 26168                           ; jumptable            263     9 (fixed)
 26169                           ;	Chosen strategy is simple_byte
 26170     0E62  0879               	movf	??_I2C1_DO_TX,w
 26171     0E63  3A01               	xorlw	1	; case 1
 26172     0E64  1903               	skipnz
 26173     0E65  2E4B               	goto	l12693
 26174     0E66  3A03               	xorlw	3	; case 2
 26175     0E67  1903               	skipnz
 26176     0E68  2E43               	goto	l12685
 26177     0E69  3A01               	xorlw	1	; case 3
 26178     0E6A  1903               	skipnz
 26179     0E6B  2E47               	goto	l12689
 26180     0E6C  3A07               	xorlw	7	; case 4
 26181     0E6D  1903               	skipnz
 26182     0E6E  2E4B               	goto	l12693
 26183     0E6F  2E4B               	goto	l12693
 26184     0E70                     l2436:	
 26185                           ;mcc_generated_files/i2c1_master.c: 370:     else
 26186                           
 26187                           
 26188                           ;mcc_generated_files/i2c1_master.c: 371:     {;mcc_generated_files/i2c1_master.c: 372:  
      +                                 I2C1_Status.addressNackCheck = 0;
 26189     0E70  0141               	movlb	1	; select bank1
 26190     0E71  103D               	bcf	(_I2C1_Status^(0+128)+29),0
 26191     0E72                     l12701:
 26192                           
 26193                           ;mcc_generated_files/i2c1_master.c: 373:         I2C1_MasterSendTxData(*I2C1_Status.data
      +                          _ptr++);
 26194     0E72  0838               	movf	((low ((_I2C1_Status| 0+23))+1))^(0+128),w
 26195     0E73  00FA               	movwf	??_I2C1_DO_TX+1
 26196     0E74  0837               	movf	(low ((_I2C1_Status| 0+23)))^(0+128),w
 26197     0E75  00F9               	movwf	??_I2C1_DO_TX
 26198     0E76  0AB7               	incf	(low ((_I2C1_Status| 0+23)))^(0+128),f
 26199     0E77  1903               	skipnz
 26200     0E78  0AB8               	incf	((low ((_I2C1_Status| 0+23))+1))^(0+128),f
 26201     0E79  0879               	movf	??_I2C1_DO_TX,w
 26202     0E7A  0086               	movwf	6
 26203     0E7B  087A               	movf	??_I2C1_DO_TX+1,w
 26204     0E7C  0087               	movwf	7
 26205     0E7D  0801               	movf	1,w
 26206     0E7E  319E  26F9  318E   	fcall	_I2C1_MasterSendTxData
 26207     0E81                     l12703:
 26208                           
 26209                           ;mcc_generated_files/i2c1_master.c: 374:         return (--I2C1_Status.data_length)?I2C1
      +                          _TX:I2C1_TX_EMPTY;
 26210     0E81  3001               	movlw	1
 26211     0E82  0141               	movlb	1	; select bank1
 26212     0E83  02B9               	subwf	(_I2C1_Status^(0+128)+25),f
 26213     0E84  3000               	movlw	0
 26214     0E85  3BBA               	subwfb	((_I2C1_Status+1)^(0+128)+25),f
 26215     0E86  0839               	movf	(_I2C1_Status^(0+128)+25),w
 26216     0E87  043A               	iorwf	((_I2C1_Status+1)^(0+128)+25),w
 26217     0E88  1D03               	btfss	3,2
 26218     0E89  2E8B               	goto	u9571
 26219     0E8A  2E8C               	goto	u9570
 26220     0E8B                     u9571:
 26221     0E8B  2E8E               	goto	l12707
 26222     0E8C                     u9570:
 26223     0E8C                     l12705:
 26224     0E8C  3006               	movlw	6
 26225     0E8D  2E8F               	goto	l2439
 26226     0E8E                     l12707:
 26227     0E8E  3003               	movlw	3
 26228     0E8F                     l2439:
 26229     0E8F  0008               	return
 26230     0E90                     __end_of_I2C1_DO_TX:
 26231                           
 26232                           	psect	text125
 26233     1FAF                     __ptext125:	
 26234 ;; *************** function _I2C1_DO_SEND_ADR_WRITE *****************
 26235 ;; Defined at:
 26236 ;;		line 347 in file "mcc_generated_files/i2c1_master.c"
 26237 ;; Parameters:    Size  Location     Type
 26238 ;;		None
 26239 ;; Auto vars:     Size  Location     Type
 26240 ;;		None
 26241 ;; Return value:  Size  Location     Type
 26242 ;;                  1    wreg      enum E12565
 26243 ;; Registers used:
 26244 ;;		wreg, status,2, status,0, pclath, cstack
 26245 ;; Tracked objects:
 26246 ;;		On entry : 0/0
 26247 ;;		On exit  : 0/0
 26248 ;;		Unchanged: 0/0
 26249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26254 ;;Total ram usage:        0 bytes
 26255 ;; Hardware stack levels used: 1
 26256 ;; Hardware stack levels required when called: 5
 26257 ;; This function calls:
 26258 ;;		_I2C1_MasterSendTxData
 26259 ;; This function is called by:
 26260 ;;		_I2C1_MasterFsm
 26261 ;; This function uses a non-reentrant model
 26262 ;;
 26263                           
 26264     1FAF                     _I2C1_DO_SEND_ADR_WRITE:	
 26265                           ;psect for function _I2C1_DO_SEND_ADR_WRITE
 26266                           
 26267     1FAF                     l12673:	
 26268                           ;incstack = 0
 26269                           ; Regs used in _I2C1_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 26270                           
 26271                           
 26272                           ;mcc_generated_files/i2c1_master.c: 349:     I2C1_Status.addressNackCheck = 1;
 26273     1FAF  0141               	movlb	1	; select bank1
 26274     1FB0  143D               	bsf	(_I2C1_Status^(0+128)+29),0
 26275     1FB1                     l12675:
 26276                           
 26277                           ;mcc_generated_files/i2c1_master.c: 350:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1));
 26278     1FB1  3536               	lslf	(_I2C1_Status^(0+128)+22),w
 26279     1FB2  319E  26F9  319F   	fcall	_I2C1_MasterSendTxData
 26280     1FB5                     l12677:
 26281                           
 26282                           ;mcc_generated_files/i2c1_master.c: 351:     return I2C1_TX;
 26283     1FB5  3003               	movlw	3
 26284     1FB6                     l2433:
 26285     1FB6  0008               	return
 26286     1FB7                     __end_of_I2C1_DO_SEND_ADR_WRITE:
 26287                           
 26288                           	psect	text126
 26289     1FC8                     __ptext126:	
 26290 ;; *************** function _I2C1_DO_SEND_ADR_READ *****************
 26291 ;; Defined at:
 26292 ;;		line 340 in file "mcc_generated_files/i2c1_master.c"
 26293 ;; Parameters:    Size  Location     Type
 26294 ;;		None
 26295 ;; Auto vars:     Size  Location     Type
 26296 ;;		None
 26297 ;; Return value:  Size  Location     Type
 26298 ;;                  1    wreg      enum E12565
 26299 ;; Registers used:
 26300 ;;		wreg, status,2, status,0, pclath, cstack
 26301 ;; Tracked objects:
 26302 ;;		On entry : 0/0
 26303 ;;		On exit  : 0/0
 26304 ;;		Unchanged: 0/0
 26305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26310 ;;Total ram usage:        0 bytes
 26311 ;; Hardware stack levels used: 1
 26312 ;; Hardware stack levels required when called: 5
 26313 ;; This function calls:
 26314 ;;		_I2C1_MasterSendTxData
 26315 ;; This function is called by:
 26316 ;;		_I2C1_MasterFsm
 26317 ;; This function uses a non-reentrant model
 26318 ;;
 26319                           
 26320     1FC8                     _I2C1_DO_SEND_ADR_READ:	
 26321                           ;psect for function _I2C1_DO_SEND_ADR_READ
 26322                           
 26323     1FC8                     l12665:	
 26324                           ;incstack = 0
 26325                           ; Regs used in _I2C1_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 26326                           
 26327                           
 26328                           ;mcc_generated_files/i2c1_master.c: 342:     I2C1_Status.addressNackCheck = 1;
 26329     1FC8  0141               	movlb	1	; select bank1
 26330     1FC9  143D               	bsf	(_I2C1_Status^(0+128)+29),0
 26331     1FCA                     l12667:
 26332                           
 26333                           ;mcc_generated_files/i2c1_master.c: 343:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1 | 1));
 26334     1FCA  1403               	setc
 26335     1FCB  0D36               	rlf	(_I2C1_Status^(0+128)+22),w
 26336     1FCC  319E  26F9  319F   	fcall	_I2C1_MasterSendTxData
 26337     1FCF                     l12669:
 26338                           
 26339                           ;mcc_generated_files/i2c1_master.c: 344:     return I2C1_RCEN;
 26340     1FCF  3005               	movlw	5
 26341     1FD0                     l2430:
 26342     1FD0  0008               	return
 26343     1FD1                     __end_of_I2C1_DO_SEND_ADR_READ:
 26344                           
 26345                           	psect	text127
 26346     1EFE                     __ptext127:	
 26347 ;; *************** function _I2C1_DO_IDLE *****************
 26348 ;; Defined at:
 26349 ;;		line 333 in file "mcc_generated_files/i2c1_master.c"
 26350 ;; Parameters:    Size  Location     Type
 26351 ;;		None
 26352 ;; Auto vars:     Size  Location     Type
 26353 ;;		None
 26354 ;; Return value:  Size  Location     Type
 26355 ;;                  1    wreg      enum E12565
 26356 ;; Registers used:
 26357 ;;		wreg, status,2
 26358 ;; Tracked objects:
 26359 ;;		On entry : 0/0
 26360 ;;		On exit  : 0/0
 26361 ;;		Unchanged: 0/0
 26362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26367 ;;Total ram usage:        0 bytes
 26368 ;; Hardware stack levels used: 1
 26369 ;; Hardware stack levels required when called: 4
 26370 ;; This function calls:
 26371 ;;		Nothing
 26372 ;; This function is called by:
 26373 ;;		_I2C1_MasterFsm
 26374 ;; This function uses a non-reentrant model
 26375 ;;
 26376                           
 26377     1EFE                     _I2C1_DO_IDLE:	
 26378                           ;psect for function _I2C1_DO_IDLE
 26379                           
 26380     1EFE                     l12657:	
 26381                           ;incstack = 0
 26382                           ; Regs used in _I2C1_DO_IDLE: [wreg+status,2]
 26383                           
 26384                           
 26385                           ;mcc_generated_files/i2c1_master.c: 335:     I2C1_Status.busy = 0;
 26386     1EFE  0141               	movlb	1	; select bank1
 26387     1EFF  10BD               	bcf	(_I2C1_Status^(0+128)+29),1
 26388     1F00                     l12659:
 26389                           
 26390                           ;mcc_generated_files/i2c1_master.c: 336:     I2C1_Status.error = I2C1_NOERR;
 26391     1F00  01BC               	clrf	(_I2C1_Status^(0+128)+28)
 26392     1F01                     l12661:
 26393                           
 26394                           ;mcc_generated_files/i2c1_master.c: 337:     return I2C1_RESET;
 26395     1F01  300E               	movlw	14
 26396     1F02                     l2427:
 26397     1F02  0008               	return
 26398     1F03                     __end_of_I2C1_DO_IDLE:
 26399                           
 26400                           	psect	text128
 26401     15EB                     __ptext128:	
 26402 ;; *************** function _I2C1_DO_TX_EMPTY *****************
 26403 ;; Defined at:
 26404 ;;		line 409 in file "mcc_generated_files/i2c1_master.c"
 26405 ;; Parameters:    Size  Location     Type
 26406 ;;		None
 26407 ;; Auto vars:     Size  Location     Type
 26408 ;;		None
 26409 ;; Return value:  Size  Location     Type
 26410 ;;                  1    wreg      enum E12565
 26411 ;; Registers used:
 26412 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 26413 ;; Tracked objects:
 26414 ;;		On entry : 0/0
 26415 ;;		On exit  : 0/0
 26416 ;;		Unchanged: 0/0
 26417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26420 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26421 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26422 ;;Total ram usage:        2 bytes
 26423 ;; Hardware stack levels used: 1
 26424 ;; Hardware stack levels required when called: 7
 26425 ;; This function calls:
 26426 ;;		NULL
 26427 ;;		_I2C1_CallbackReturnReset
 26428 ;;		_I2C1_CallbackReturnStop
 26429 ;;		_I2C1_DO_SEND_RESTART
 26430 ;;		_I2C1_DO_SEND_STOP
 26431 ;;		_I2C1_MasterSetIrq
 26432 ;;		_rd1RegCompleteHandler
 26433 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1727
 26434 ;;		_rd2RegCompleteHandler
 26435 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1738
 26436 ;;		_rdBlkRegCompleteHandler
 26437 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1761
 26438 ;;		_wr1RegCompleteHandler
 26439 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1744
 26440 ;;		_wr2RegCompleteHandler
 26441 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1750
 26442 ;; This function is called by:
 26443 ;;		_I2C1_MasterFsm
 26444 ;; This function uses a non-reentrant model
 26445 ;;
 26446                           
 26447     15EB                     _I2C1_DO_TX_EMPTY:	
 26448                           ;psect for function _I2C1_DO_TX_EMPTY
 26449                           
 26450     15EB                     l12755:	
 26451                           ;incstack = 0
 26452                           ; Regs used in _I2C1_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 26453                           
 26454                           
 26455                           ;mcc_generated_files/i2c1_master.c: 411:     I2C1_Status.bufferFree = 1;
 26456     15EB  0141               	movlb	1	; select bank1
 26457     15EC  15BD               	bsf	(_I2C1_Status^(0+128)+29),3
 26458                           
 26459                           ;mcc_generated_files/i2c1_master.c: 412:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 26460     15ED  2DFB               	goto	l12773
 26461     15EE                     l12757:
 26462                           
 26463                           ;mcc_generated_files/i2c1_master.c: 416:             return I2C1_DO_SEND_RESTART();
 26464     15EE  319F  270D  3195   	fcall	_I2C1_DO_SEND_RESTART
 26465     15F1  2E17               	goto	l2470
 26466     15F2                     l12761:
 26467                           
 26468                           ;mcc_generated_files/i2c1_master.c: 418:             I2C1_MasterSetIrq();
 26469     15F2  319E  26D3  3195   	fcall	_I2C1_MasterSetIrq
 26470     15F5                     l12763:
 26471                           
 26472                           ;mcc_generated_files/i2c1_master.c: 419:             return I2C1_TX;
 26473     15F5  3003               	movlw	3
 26474     15F6  2E17               	goto	l2470
 26475     15F7                     l12767:
 26476                           
 26477                           ;mcc_generated_files/i2c1_master.c: 422:             return I2C1_DO_SEND_STOP();
 26478     15F7  319F  2712  3195   	fcall	_I2C1_DO_SEND_STOP
 26479     15FA  2E17               	goto	l2470
 26480     15FB                     l12773:
 26481     15FB  082C               	movf	(low ((_I2C1_Status| 0+12)))^(0+128),w
 26482     15FC  00F8               	movwf	I2C1_CallbackReturnReset@funPtr
 26483     15FD  0821               	movf	(_I2C1_Status+1)^(0+128),w
 26484     15FE  008A               	movwf	10
 26485     15FF  0820               	movf	_I2C1_Status^(0+128),w
 26486     1600  000A               	callw
 26487     1601  3195               	pagesel	$
 26488     1602  00F9               	movwf	??_I2C1_DO_TX_EMPTY
 26489     1603  01FA               	clrf	??_I2C1_DO_TX_EMPTY+1
 26490                           
 26491                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26492                           ; Switch size 1, requested type "simple"
 26493                           ; Number of cases is 1, Range of values is 0 to 0
 26494                           ; switch strategies available:
 26495                           ; Name         Instructions Cycles
 26496                           ; simple_byte            4     3 (average)
 26497                           ; direct_byte            8     6 (fixed)
 26498                           ; jumptable            260     6 (fixed)
 26499                           ;	Chosen strategy is simple_byte
 26500     1604  087A               	movf	??_I2C1_DO_TX_EMPTY+1,w
 26501     1605  3A00               	xorlw	0	; case 0
 26502     1606  1903               	skipnz
 26503     1607  2E09               	goto	l16611
 26504     1608  2DF7               	goto	l12767
 26505     1609                     l16611:
 26506                           
 26507                           ; Switch size 1, requested type "simple"
 26508                           ; Number of cases is 4, Range of values is 1 to 4
 26509                           ; switch strategies available:
 26510                           ; Name         Instructions Cycles
 26511                           ; simple_byte           13     7 (average)
 26512                           ; direct_byte           17     9 (fixed)
 26513                           ; jumptable            263     9 (fixed)
 26514                           ;	Chosen strategy is simple_byte
 26515     1609  0879               	movf	??_I2C1_DO_TX_EMPTY,w
 26516     160A  3A01               	xorlw	1	; case 1
 26517     160B  1903               	skipnz
 26518     160C  2DF7               	goto	l12767
 26519     160D  3A03               	xorlw	3	; case 2
 26520     160E  1903               	skipnz
 26521     160F  2DEE               	goto	l12757
 26522     1610  3A01               	xorlw	1	; case 3
 26523     1611  1903               	skipnz
 26524     1612  2DEE               	goto	l12757
 26525     1613  3A07               	xorlw	7	; case 4
 26526     1614  1903               	skipnz
 26527     1615  2DF2               	goto	l12761
 26528     1616  2DF7               	goto	l12767
 26529     1617                     l2470:
 26530     1617  0008               	return
 26531     1618                     __end_of_I2C1_DO_TX_EMPTY:
 26532                           
 26533                           	psect	text129
 26534     1ED3                     __ptext129:	
 26535 ;; *************** function _I2C1_MasterSetIrq *****************
 26536 ;; Defined at:
 26537 ;;		line 645 in file "mcc_generated_files/i2c1_master.c"
 26538 ;; Parameters:    Size  Location     Type
 26539 ;;		None
 26540 ;; Auto vars:     Size  Location     Type
 26541 ;;		None
 26542 ;; Return value:  Size  Location     Type
 26543 ;;                  1    wreg      void 
 26544 ;; Registers used:
 26545 ;;		None
 26546 ;; Tracked objects:
 26547 ;;		On entry : 0/0
 26548 ;;		On exit  : 0/0
 26549 ;;		Unchanged: 0/0
 26550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26555 ;;Total ram usage:        0 bytes
 26556 ;; Hardware stack levels used: 1
 26557 ;; Hardware stack levels required when called: 4
 26558 ;; This function calls:
 26559 ;;		Nothing
 26560 ;; This function is called by:
 26561 ;;		_I2C1_DO_TX_EMPTY
 26562 ;; This function uses a non-reentrant model
 26563 ;;
 26564                           
 26565     1ED3                     _I2C1_MasterSetIrq:	
 26566                           ;psect for function _I2C1_MasterSetIrq
 26567                           
 26568     1ED3                     l12645:	
 26569                           ;incstack = 0
 26570                           ; Regs used in _I2C1_MasterSetIrq: []
 26571                           
 26572                           
 26573                           ;mcc_generated_files/i2c1_master.c: 647:     PIR3bits.SSP1IF = 1;
 26574     1ED3  014E               	movlb	14	; select bank14
 26575     1ED4  140F               	bsf	15,0	;volatile
 26576     1ED5                     l2590:
 26577     1ED5  0008               	return
 26578     1ED6                     __end_of_I2C1_MasterSetIrq:
 26579                           
 26580                           	psect	text130
 26581     1F35                     __ptext130:	
 26582 ;; *************** function _I2C1_MasterIsNack *****************
 26583 ;; Defined at:
 26584 ;;		line 598 in file "mcc_generated_files/i2c1_master.c"
 26585 ;; Parameters:    Size  Location     Type
 26586 ;;		None
 26587 ;; Auto vars:     Size  Location     Type
 26588 ;;		None
 26589 ;; Return value:  Size  Location     Type
 26590 ;;                  1    wreg      _Bool 
 26591 ;; Registers used:
 26592 ;;		wreg, status,2, status,0
 26593 ;; Tracked objects:
 26594 ;;		On entry : 0/0
 26595 ;;		On exit  : 0/0
 26596 ;;		Unchanged: 0/0
 26597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26602 ;;Total ram usage:        0 bytes
 26603 ;; Hardware stack levels used: 1
 26604 ;; Hardware stack levels required when called: 4
 26605 ;; This function calls:
 26606 ;;		Nothing
 26607 ;; This function is called by:
 26608 ;;		_I2C1_MasterFsm
 26609 ;;		_I2C1_DO_TX
 26610 ;; This function uses a non-reentrant model
 26611 ;;
 26612                           
 26613     1F35                     _I2C1_MasterIsNack:	
 26614                           ;psect for function _I2C1_MasterIsNack
 26615                           
 26616     1F35                     l12595:	
 26617                           ;incstack = 0
 26618                           ; Regs used in _I2C1_MasterIsNack: [wreg+status,2+status,0]
 26619                           
 26620                           
 26621                           ;mcc_generated_files/i2c1_master.c: 600:     return SSP1CON2bits.ACKSTAT;
 26622     1F35  0143               	movlb	3	; select bank3
 26623     1F36  0E11               	swapf	17,w	;volatile
 26624     1F37  0C89               	rrf	9,f
 26625     1F38  0C89               	rrf	9,f
 26626     1F39  3901               	andlw	1
 26627     1F3A                     l2563:
 26628     1F3A  0008               	return
 26629     1F3B                     __end_of_I2C1_MasterIsNack:
 26630                           
 26631                           	psect	text131
 26632     1EF9                     __ptext131:	
 26633 ;; *************** function _I2C1_MasterSendTxData *****************
 26634 ;; Defined at:
 26635 ;;		line 568 in file "mcc_generated_files/i2c1_master.c"
 26636 ;; Parameters:    Size  Location     Type
 26637 ;;  data            1    wreg     unsigned char 
 26638 ;; Auto vars:     Size  Location     Type
 26639 ;;  data            1    1[COMMON] unsigned char 
 26640 ;; Return value:  Size  Location     Type
 26641 ;;                  1    wreg      void 
 26642 ;; Registers used:
 26643 ;;		wreg
 26644 ;; Tracked objects:
 26645 ;;		On entry : 0/0
 26646 ;;		On exit  : 0/0
 26647 ;;		Unchanged: 0/0
 26648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26650 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26652 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26653 ;;Total ram usage:        1 bytes
 26654 ;; Hardware stack levels used: 1
 26655 ;; Hardware stack levels required when called: 4
 26656 ;; This function calls:
 26657 ;;		Nothing
 26658 ;; This function is called by:
 26659 ;;		_I2C1_DO_SEND_ADR_READ
 26660 ;;		_I2C1_DO_SEND_ADR_WRITE
 26661 ;;		_I2C1_DO_TX
 26662 ;; This function uses a non-reentrant model
 26663 ;;
 26664                           
 26665     1EF9                     _I2C1_MasterSendTxData:	
 26666                           ;psect for function _I2C1_MasterSendTxData
 26667                           
 26668                           
 26669                           ;incstack = 0
 26670                           ; Regs used in _I2C1_MasterSendTxData: [wreg]
 26671                           ;I2C1_MasterSendTxData@data stored from wreg
 26672     1EF9  00F1               	movwf	I2C1_MasterSendTxData@data
 26673     1EFA                     l12599:
 26674                           
 26675                           ;mcc_generated_files/i2c1_master.c: 568: static __attribute__((inline)) void I2C1_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c1_master.c: 569: {;mcc_generated_files/i
      +                          2c1_master.c: 570:     SSP1BUF = data;
 26676     1EFA  0871               	movf	I2C1_MasterSendTxData@data,w
 26677     1EFB  0143               	movlb	3	; select bank3
 26678     1EFC  008C               	movwf	12	;volatile
 26679     1EFD                     l2545:
 26680     1EFD  0008               	return
 26681     1EFE                     __end_of_I2C1_MasterSendTxData:
 26682                           
 26683                           	psect	text132
 26684     1EED                     __ptext132:	
 26685 ;; *************** function _I2C1_MasterSendAck *****************
 26686 ;; Defined at:
 26687 ;;		line 603 in file "mcc_generated_files/i2c1_master.c"
 26688 ;; Parameters:    Size  Location     Type
 26689 ;;		None
 26690 ;; Auto vars:     Size  Location     Type
 26691 ;;		None
 26692 ;; Return value:  Size  Location     Type
 26693 ;;                  1    wreg      void 
 26694 ;; Registers used:
 26695 ;;		None
 26696 ;; Tracked objects:
 26697 ;;		On entry : 0/0
 26698 ;;		On exit  : 0/0
 26699 ;;		Unchanged: 0/0
 26700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26705 ;;Total ram usage:        0 bytes
 26706 ;; Hardware stack levels used: 1
 26707 ;; Hardware stack levels required when called: 4
 26708 ;; This function calls:
 26709 ;;		Nothing
 26710 ;; This function is called by:
 26711 ;;		_I2C1_DO_RX
 26712 ;;		_I2C1_DO_RX_ACK
 26713 ;; This function uses a non-reentrant model
 26714 ;;
 26715                           
 26716     1EED                     _I2C1_MasterSendAck:	
 26717                           ;psect for function _I2C1_MasterSendAck
 26718                           
 26719     1EED                     l12623:	
 26720                           ;incstack = 0
 26721                           ; Regs used in _I2C1_MasterSendAck: []
 26722                           
 26723                           
 26724                           ;mcc_generated_files/i2c1_master.c: 605:     SSP1CON2bits.ACKDT = 0;
 26725     1EED  0143               	movlb	3	; select bank3
 26726     1EEE  1291               	bcf	17,5	;volatile
 26727                           
 26728                           ;mcc_generated_files/i2c1_master.c: 606:     SSP1CON2bits.ACKEN = 1;
 26729     1EEF  1611               	bsf	17,4	;volatile
 26730     1EF0                     l2566:
 26731     1EF0  0008               	return
 26732     1EF1                     __end_of_I2C1_MasterSendAck:
 26733                           
 26734                           	psect	text133
 26735     1ED0                     __ptext133:	
 26736 ;; *************** function _I2C1_MasterGetRxData *****************
 26737 ;; Defined at:
 26738 ;;		line 563 in file "mcc_generated_files/i2c1_master.c"
 26739 ;; Parameters:    Size  Location     Type
 26740 ;;		None
 26741 ;; Auto vars:     Size  Location     Type
 26742 ;;		None
 26743 ;; Return value:  Size  Location     Type
 26744 ;;                  1    wreg      unsigned char 
 26745 ;; Registers used:
 26746 ;;		wreg
 26747 ;; Tracked objects:
 26748 ;;		On entry : 0/0
 26749 ;;		On exit  : 0/0
 26750 ;;		Unchanged: 0/0
 26751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26756 ;;Total ram usage:        0 bytes
 26757 ;; Hardware stack levels used: 1
 26758 ;; Hardware stack levels required when called: 4
 26759 ;; This function calls:
 26760 ;;		Nothing
 26761 ;; This function is called by:
 26762 ;;		_I2C1_DO_RX
 26763 ;; This function uses a non-reentrant model
 26764 ;;
 26765                           
 26766     1ED0                     _I2C1_MasterGetRxData:	
 26767                           ;psect for function _I2C1_MasterGetRxData
 26768                           
 26769     1ED0                     l12619:	
 26770                           ;incstack = 0
 26771                           ; Regs used in _I2C1_MasterGetRxData: [wreg]
 26772                           
 26773                           
 26774                           ;mcc_generated_files/i2c1_master.c: 565:     return SSP1BUF;
 26775     1ED0  0143               	movlb	3	; select bank3
 26776     1ED1  080C               	movf	12,w	;volatile
 26777     1ED2                     l2542:
 26778     1ED2  0008               	return
 26779     1ED3                     __end_of_I2C1_MasterGetRxData:
 26780                           
 26781                           	psect	text134
 26782     1EE9                     __ptext134:	
 26783 ;; *************** function _I2C1_MasterSendNack *****************
 26784 ;; Defined at:
 26785 ;;		line 609 in file "mcc_generated_files/i2c1_master.c"
 26786 ;; Parameters:    Size  Location     Type
 26787 ;;		None
 26788 ;; Auto vars:     Size  Location     Type
 26789 ;;		None
 26790 ;; Return value:  Size  Location     Type
 26791 ;;                  1    wreg      void 
 26792 ;; Registers used:
 26793 ;;		None
 26794 ;; Tracked objects:
 26795 ;;		On entry : 0/0
 26796 ;;		On exit  : 0/0
 26797 ;;		Unchanged: 0/0
 26798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26803 ;;Total ram usage:        0 bytes
 26804 ;; Hardware stack levels used: 1
 26805 ;; Hardware stack levels required when called: 4
 26806 ;; This function calls:
 26807 ;;		Nothing
 26808 ;; This function is called by:
 26809 ;;		_I2C1_DO_RX_NACK_STOP
 26810 ;;		_I2C1_DO_RX_NACK_RESTART
 26811 ;; This function uses a non-reentrant model
 26812 ;;
 26813                           
 26814     1EE9                     _I2C1_MasterSendNack:	
 26815                           ;psect for function _I2C1_MasterSendNack
 26816                           
 26817     1EE9                     l12517:	
 26818                           ;incstack = 0
 26819                           ; Regs used in _I2C1_MasterSendNack: []
 26820                           
 26821                           
 26822                           ;mcc_generated_files/i2c1_master.c: 611:     SSP1CON2bits.ACKDT = 1;
 26823     1EE9  0143               	movlb	3	; select bank3
 26824     1EEA  1691               	bsf	17,5	;volatile
 26825                           
 26826                           ;mcc_generated_files/i2c1_master.c: 612:     SSP1CON2bits.ACKEN = 1;
 26827     1EEB  1611               	bsf	17,4	;volatile
 26828     1EEC                     l2569:
 26829     1EEC  0008               	return
 26830     1EED                     __end_of_I2C1_MasterSendNack:
 26831                           
 26832                           	psect	text135
 26833     1ECD                     __ptext135:	
 26834 ;; *************** function _I2C1_MasterStartRx *****************
 26835 ;; Defined at:
 26836 ;;		line 583 in file "mcc_generated_files/i2c1_master.c"
 26837 ;; Parameters:    Size  Location     Type
 26838 ;;		None
 26839 ;; Auto vars:     Size  Location     Type
 26840 ;;		None
 26841 ;; Return value:  Size  Location     Type
 26842 ;;                  1    wreg      void 
 26843 ;; Registers used:
 26844 ;;		None
 26845 ;; Tracked objects:
 26846 ;;		On entry : 0/0
 26847 ;;		On exit  : 0/0
 26848 ;;		Unchanged: 0/0
 26849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26854 ;;Total ram usage:        0 bytes
 26855 ;; Hardware stack levels used: 1
 26856 ;; Hardware stack levels required when called: 4
 26857 ;; This function calls:
 26858 ;;		Nothing
 26859 ;; This function is called by:
 26860 ;;		_I2C1_DO_RCEN
 26861 ;; This function uses a non-reentrant model
 26862 ;;
 26863                           
 26864     1ECD                     _I2C1_MasterStartRx:	
 26865                           ;psect for function _I2C1_MasterStartRx
 26866                           
 26867     1ECD                     l12637:	
 26868                           ;incstack = 0
 26869                           ; Regs used in _I2C1_MasterStartRx: []
 26870                           
 26871                           
 26872                           ;mcc_generated_files/i2c1_master.c: 585:     SSP1CON2bits.RCEN = 1;
 26873     1ECD  0143               	movlb	3	; select bank3
 26874     1ECE  1591               	bsf	17,3	;volatile
 26875     1ECF                     l2554:
 26876     1ECF  0008               	return
 26877     1ED0                     __end_of_I2C1_MasterStartRx:
 26878                           
 26879                           	psect	text136
 26880     1EB9                     __ptext136:	
 26881 ;; *************** function _I2C1_CallbackReturnReset *****************
 26882 ;; Defined at:
 26883 ;;		line 525 in file "mcc_generated_files/i2c1_master.c"
 26884 ;; Parameters:    Size  Location     Type
 26885 ;;  funPtr          1    8[COMMON] PTR void 
 26886 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 26887 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 26888 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 26889 ;; Auto vars:     Size  Location     Type
 26890 ;;		None
 26891 ;; Return value:  Size  Location     Type
 26892 ;;                  1    wreg      enum E363
 26893 ;; Registers used:
 26894 ;;		wreg
 26895 ;; Tracked objects:
 26896 ;;		On entry : 0/0
 26897 ;;		On exit  : 0/0
 26898 ;;		Unchanged: 0/0
 26899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26900 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26903 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26904 ;;Total ram usage:        1 bytes
 26905 ;; Hardware stack levels used: 1
 26906 ;; Hardware stack levels required when called: 4
 26907 ;; This function calls:
 26908 ;;		Nothing
 26909 ;; This function is called by:
 26910 ;;		_I2C1_Open
 26911 ;;		_I2C1_DO_TX
 26912 ;;		_I2C1_DO_RX
 26913 ;;		_I2C1_DO_TX_EMPTY
 26914 ;;		_I2C1_DO_ADDRESS_NACK
 26915 ;;		_I2C1_DO_RX_EMPTY
 26916 ;; This function uses a non-reentrant model
 26917 ;;
 26918                           
 26919     1EB9                     _I2C1_CallbackReturnReset:	
 26920                           ;psect for function _I2C1_CallbackReturnReset
 26921                           
 26922     1EB9                     l12651:	
 26923                           ;incstack = 0
 26924                           ; Regs used in _I2C1_CallbackReturnReset: [wreg]
 26925                           
 26926                           
 26927                           ;mcc_generated_files/i2c1_master.c: 525: i2c1_operations_t I2C1_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c1_master.c: 526: {;mcc_generated_files/i2c1_master.c: 5
      +                          27:     return I2C1_RESET_LINK;
 26928     1EB9  3005               	movlw	5
 26929     1EBA                     l2526:
 26930     1EBA  0008               	return
 26931     1EBB                     __end_of_I2C1_CallbackReturnReset:
 26932                           
 26933                           	psect	text137
 26934     1EB7                     __ptext137:	
 26935 ;; *************** function _I2C1_CallbackReturnStop *****************
 26936 ;; Defined at:
 26937 ;;		line 520 in file "mcc_generated_files/i2c1_master.c"
 26938 ;; Parameters:    Size  Location     Type
 26939 ;;  funPtr          1    8[COMMON] PTR void 
 26940 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 26941 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 26942 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 26943 ;; Auto vars:     Size  Location     Type
 26944 ;;		None
 26945 ;; Return value:  Size  Location     Type
 26946 ;;                  1    wreg      enum E363
 26947 ;; Registers used:
 26948 ;;		wreg
 26949 ;; Tracked objects:
 26950 ;;		On entry : 0/0
 26951 ;;		On exit  : 0/0
 26952 ;;		Unchanged: 0/0
 26953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26954 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26957 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26958 ;;Total ram usage:        1 bytes
 26959 ;; Hardware stack levels used: 1
 26960 ;; Hardware stack levels required when called: 4
 26961 ;; This function calls:
 26962 ;;		Nothing
 26963 ;; This function is called by:
 26964 ;;		_I2C1_Open
 26965 ;;		_I2C1_SetCallback
 26966 ;;		_I2C1_DO_TX
 26967 ;;		_I2C1_DO_RX
 26968 ;;		_I2C1_DO_TX_EMPTY
 26969 ;;		_I2C1_DO_ADDRESS_NACK
 26970 ;;		_I2C1_DO_RX_EMPTY
 26971 ;; This function uses a non-reentrant model
 26972 ;;
 26973                           
 26974     1EB7                     _I2C1_CallbackReturnStop:	
 26975                           ;psect for function _I2C1_CallbackReturnStop
 26976                           
 26977     1EB7                     l12647:	
 26978                           ;incstack = 0
 26979                           ; Regs used in _I2C1_CallbackReturnStop: [wreg]
 26980                           
 26981                           
 26982                           ;mcc_generated_files/i2c1_master.c: 520: i2c1_operations_t I2C1_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c1_master.c: 521: {;mcc_generated_files/i2c1_master.c: 52
      +                          2:     return I2C1_STOP;
 26983     1EB7  3001               	movlw	1
 26984     1EB8                     l2523:
 26985     1EB8  0008               	return
 26986     1EB9                     __end_of_I2C1_CallbackReturnStop:
 26987                           
 26988                           	psect	text138
 26989     1330                     __ptext138:	
 26990 ;; *************** function _rdBlkRegCompleteHandler@i2c1_master_example$F1761 *****************
 26991 ;; Defined at:
 26992 ;;		line 170 in file "mcc_generated_files/examples/i2c1_master_example.c"
 26993 ;; Parameters:    Size  Location     Type
 26994 ;;  ptr             1    8[COMMON] PTR void 
 26995 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 26996 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 26997 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 26998 ;; Auto vars:     Size  Location     Type
 26999 ;;		None
 27000 ;; Return value:  Size  Location     Type
 27001 ;;                  1    wreg      enum E363
 27002 ;; Registers used:
 27003 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27004 ;; Tracked objects:
 27005 ;;		On entry : 0/0
 27006 ;;		On exit  : 0/0
 27007 ;;		Unchanged: 0/0
 27008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27009 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27012 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27013 ;;Total ram usage:        1 bytes
 27014 ;; Hardware stack levels used: 1
 27015 ;; Hardware stack levels required when called: 6
 27016 ;; This function calls:
 27017 ;;		_I2C1_SetBuffer
 27018 ;;		_I2C1_SetDataCompleteCallback
 27019 ;; This function is called by:
 27020 ;;		_I2C1_ReadDataBlock
 27021 ;;		_I2C1_DO_TX
 27022 ;;		_I2C1_DO_RX
 27023 ;;		_I2C1_DO_TX_EMPTY
 27024 ;;		_I2C1_DO_ADDRESS_NACK
 27025 ;;		_I2C1_DO_RX_EMPTY
 27026 ;; This function uses a non-reentrant model
 27027 ;;
 27028                           
 27029     1330                     _rdBlkRegCompleteHandler@i2c1_master_example$F1761:	
 27030                           ;psect for function _rdBlkRegCompleteHandler@i2c1_master_example$F1761
 27031                           
 27032     1330                     l12589:	
 27033                           ;incstack = 0
 27034                           ; Regs used in _rdBlkRegCompleteHandler@i2c1_master_example$F1761: [wreg+fsr1l+fsr1h+sta
      +                          tus,2+status,0+pclath+cstack]
 27035                           
 27036     1330  0878               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F1761@ptr,w
 27037     1331  3E02               	addlw	2
 27038     1332  0086               	movwf	6
 27039     1333  0187               	clrf	7
 27040     1334  3F40               	moviw [0]fsr1
 27041     1335  00F1               	movwf	I2C1_SetBuffer@buffer
 27042     1336  3F41               	moviw [1]fsr1
 27043     1337  00F2               	movwf	I2C1_SetBuffer@buffer+1
 27044     1338  0878               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F1761@ptr,w
 27045     1339  0086               	movwf	6
 27046     133A  0187               	clrf	7
 27047     133B  3F40               	moviw [0]fsr1
 27048     133C  00F3               	movwf	I2C1_SetBuffer@bufferSize
 27049     133D  3F41               	moviw [1]fsr1
 27050     133E  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 27051     133F  3190  20C1  3193   	fcall	_I2C1_SetBuffer
 27052     1342  3000               	movlw	0
 27053     1343  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27054     1344  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27055     1345  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27056     1346  3190  2023  3193   	fcall	_I2C1_SetDataCompleteCallback
 27057     1349                     l12591:
 27058     1349  3002               	movlw	2
 27059     134A                     l1367:
 27060     134A  0008               	return
 27061     134B                     __end_of_rdBlkRegCompleteHandler@i2c1_master_example$F1761:
 27062                           
 27063                           	psect	text139
 27064     1197                     __ptext139:	
 27065 ;; *************** function _wr1RegCompleteHandler@i2c1_master_example$F1744 *****************
 27066 ;; Defined at:
 27067 ;;		line 156 in file "mcc_generated_files/examples/i2c1_master_example.c"
 27068 ;; Parameters:    Size  Location     Type
 27069 ;;  ptr             1    8[COMMON] PTR void 
 27070 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27071 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27072 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27073 ;; Auto vars:     Size  Location     Type
 27074 ;;		None
 27075 ;; Return value:  Size  Location     Type
 27076 ;;                  1    wreg      enum E363
 27077 ;; Registers used:
 27078 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27079 ;; Tracked objects:
 27080 ;;		On entry : 0/0
 27081 ;;		On exit  : 0/0
 27082 ;;		Unchanged: 0/0
 27083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27084 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27087 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27088 ;;Total ram usage:        1 bytes
 27089 ;; Hardware stack levels used: 1
 27090 ;; Hardware stack levels required when called: 6
 27091 ;; This function calls:
 27092 ;;		_I2C1_SetBuffer
 27093 ;;		_I2C1_SetDataCompleteCallback
 27094 ;; This function is called by:
 27095 ;;		_I2C1_Write1ByteRegister
 27096 ;;		_I2C1_DO_TX
 27097 ;;		_I2C1_DO_RX
 27098 ;;		_I2C1_DO_TX_EMPTY
 27099 ;;		_I2C1_DO_ADDRESS_NACK
 27100 ;;		_I2C1_DO_RX_EMPTY
 27101 ;; This function uses a non-reentrant model
 27102 ;;
 27103                           
 27104     1197                     _wr1RegCompleteHandler@i2c1_master_example$F1744:	
 27105                           ;psect for function _wr1RegCompleteHandler@i2c1_master_example$F1744
 27106                           
 27107     1197                     l12573:	
 27108                           ;incstack = 0
 27109                           ; Regs used in _wr1RegCompleteHandler@i2c1_master_example$F1744: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 27110                           
 27111     1197  0878               	movf	wr1RegCompleteHandler@i2c1_master_example$F1744@ptr,w
 27112     1198  00F1               	movwf	I2C1_SetBuffer@buffer
 27113     1199  01F2               	clrf	I2C1_SetBuffer@buffer+1
 27114     119A  3001               	movlw	1
 27115     119B  00F3               	movwf	I2C1_SetBuffer@bufferSize
 27116     119C  3000               	movlw	0
 27117     119D  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 27118     119E  3190  20C1  3191   	fcall	_I2C1_SetBuffer
 27119     11A1                     l12575:
 27120     11A1  3000               	movlw	0
 27121     11A2  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27122     11A3  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27123     11A4  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27124     11A5  3190  2023  3191   	fcall	_I2C1_SetDataCompleteCallback
 27125     11A8                     l12577:
 27126     11A8  3004               	movlw	4
 27127     11A9                     l1361:
 27128     11A9  0008               	return
 27129     11AA                     __end_of_wr1RegCompleteHandler@i2c1_master_example$F1744:
 27130                           
 27131                           	psect	text140
 27132     1184                     __ptext140:	
 27133 ;; *************** function _rd2RegCompleteHandler@i2c1_master_example$F1738 *****************
 27134 ;; Defined at:
 27135 ;;		line 149 in file "mcc_generated_files/examples/i2c1_master_example.c"
 27136 ;; Parameters:    Size  Location     Type
 27137 ;;  ptr             1    8[COMMON] PTR void 
 27138 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27139 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27140 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27141 ;; Auto vars:     Size  Location     Type
 27142 ;;		None
 27143 ;; Return value:  Size  Location     Type
 27144 ;;                  1    wreg      enum E363
 27145 ;; Registers used:
 27146 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27147 ;; Tracked objects:
 27148 ;;		On entry : 0/0
 27149 ;;		On exit  : 0/0
 27150 ;;		Unchanged: 0/0
 27151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27152 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27155 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27156 ;;Total ram usage:        1 bytes
 27157 ;; Hardware stack levels used: 1
 27158 ;; Hardware stack levels required when called: 6
 27159 ;; This function calls:
 27160 ;;		_I2C1_SetBuffer
 27161 ;;		_I2C1_SetDataCompleteCallback
 27162 ;; This function is called by:
 27163 ;;		_I2C1_Read2ByteRegister
 27164 ;;		_I2C1_DO_TX
 27165 ;;		_I2C1_DO_RX
 27166 ;;		_I2C1_DO_TX_EMPTY
 27167 ;;		_I2C1_DO_ADDRESS_NACK
 27168 ;;		_I2C1_DO_RX_EMPTY
 27169 ;; This function uses a non-reentrant model
 27170 ;;
 27171                           
 27172     1184                     _rd2RegCompleteHandler@i2c1_master_example$F1738:	
 27173                           ;psect for function _rd2RegCompleteHandler@i2c1_master_example$F1738
 27174                           
 27175     1184                     l12565:	
 27176                           ;incstack = 0
 27177                           ; Regs used in _rd2RegCompleteHandler@i2c1_master_example$F1738: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 27178                           
 27179     1184  0878               	movf	rd2RegCompleteHandler@i2c1_master_example$F1738@ptr,w
 27180     1185  00F1               	movwf	I2C1_SetBuffer@buffer
 27181     1186  01F2               	clrf	I2C1_SetBuffer@buffer+1
 27182     1187  3002               	movlw	2
 27183     1188  00F3               	movwf	I2C1_SetBuffer@bufferSize
 27184     1189  3000               	movlw	0
 27185     118A  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 27186     118B  3190  20C1  3191   	fcall	_I2C1_SetBuffer
 27187     118E                     l12567:
 27188     118E  3000               	movlw	0
 27189     118F  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27190     1190  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27191     1191  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27192     1192  3190  2023  3191   	fcall	_I2C1_SetDataCompleteCallback
 27193     1195                     l12569:
 27194     1195  3002               	movlw	2
 27195     1196                     l1358:
 27196     1196  0008               	return
 27197     1197                     __end_of_rd2RegCompleteHandler@i2c1_master_example$F1738:
 27198                           
 27199                           	psect	text141
 27200     1171                     __ptext141:	
 27201 ;; *************** function _rd1RegCompleteHandler@i2c1_master_example$F1727 *****************
 27202 ;; Defined at:
 27203 ;;		line 142 in file "mcc_generated_files/examples/i2c1_master_example.c"
 27204 ;; Parameters:    Size  Location     Type
 27205 ;;  ptr             1    8[COMMON] PTR void 
 27206 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27207 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27208 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27209 ;; Auto vars:     Size  Location     Type
 27210 ;;		None
 27211 ;; Return value:  Size  Location     Type
 27212 ;;                  1    wreg      enum E363
 27213 ;; Registers used:
 27214 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27215 ;; Tracked objects:
 27216 ;;		On entry : 0/0
 27217 ;;		On exit  : 0/0
 27218 ;;		Unchanged: 0/0
 27219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27220 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27223 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27224 ;;Total ram usage:        1 bytes
 27225 ;; Hardware stack levels used: 1
 27226 ;; Hardware stack levels required when called: 6
 27227 ;; This function calls:
 27228 ;;		_I2C1_SetBuffer
 27229 ;;		_I2C1_SetDataCompleteCallback
 27230 ;; This function is called by:
 27231 ;;		_I2C1_Read1ByteRegister
 27232 ;;		_I2C1_DO_TX
 27233 ;;		_I2C1_DO_RX
 27234 ;;		_I2C1_DO_TX_EMPTY
 27235 ;;		_I2C1_DO_ADDRESS_NACK
 27236 ;;		_I2C1_DO_RX_EMPTY
 27237 ;; This function uses a non-reentrant model
 27238 ;;
 27239                           
 27240     1171                     _rd1RegCompleteHandler@i2c1_master_example$F1727:	
 27241                           ;psect for function _rd1RegCompleteHandler@i2c1_master_example$F1727
 27242                           
 27243     1171                     l12557:	
 27244                           ;incstack = 0
 27245                           ; Regs used in _rd1RegCompleteHandler@i2c1_master_example$F1727: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 27246                           
 27247     1171  0878               	movf	rd1RegCompleteHandler@i2c1_master_example$F1727@ptr,w
 27248     1172  00F1               	movwf	I2C1_SetBuffer@buffer
 27249     1173  01F2               	clrf	I2C1_SetBuffer@buffer+1
 27250     1174  3001               	movlw	1
 27251     1175  00F3               	movwf	I2C1_SetBuffer@bufferSize
 27252     1176  3000               	movlw	0
 27253     1177  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 27254     1178  3190  20C1  3191   	fcall	_I2C1_SetBuffer
 27255     117B                     l12559:
 27256     117B  3000               	movlw	0
 27257     117C  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27258     117D  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27259     117E  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27260     117F  3190  2023  3191   	fcall	_I2C1_SetDataCompleteCallback
 27261     1182                     l12561:
 27262     1182  3002               	movlw	2
 27263     1183                     l1355:
 27264     1183  0008               	return
 27265     1184                     __end_of_rd1RegCompleteHandler@i2c1_master_example$F1727:
 27266                           
 27267                           	psect	text142
 27268     1315                     __ptext142:	
 27269 ;; *************** function _rdBlkRegCompleteHandler *****************
 27270 ;; Defined at:
 27271 ;;		line 185 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 27272 ;; Parameters:    Size  Location     Type
 27273 ;;  p               1    8[COMMON] PTR void 
 27274 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27275 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27276 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27277 ;; Auto vars:     Size  Location     Type
 27278 ;;		None
 27279 ;; Return value:  Size  Location     Type
 27280 ;;                  1    wreg      enum E363
 27281 ;; Registers used:
 27282 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27283 ;; Tracked objects:
 27284 ;;		On entry : 0/0
 27285 ;;		On exit  : 0/0
 27286 ;;		Unchanged: 0/0
 27287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27288 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27291 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27292 ;;Total ram usage:        1 bytes
 27293 ;; Hardware stack levels used: 1
 27294 ;; Hardware stack levels required when called: 6
 27295 ;; This function calls:
 27296 ;;		_I2C1_SetBuffer
 27297 ;;		_I2C1_SetDataCompleteCallback
 27298 ;; This function is called by:
 27299 ;;		_i2c_readDataBlock
 27300 ;;		_I2C1_DO_TX
 27301 ;;		_I2C1_DO_RX
 27302 ;;		_I2C1_DO_TX_EMPTY
 27303 ;;		_I2C1_DO_ADDRESS_NACK
 27304 ;;		_I2C1_DO_RX_EMPTY
 27305 ;; This function uses a non-reentrant model
 27306 ;;
 27307                           
 27308     1315                     _rdBlkRegCompleteHandler:	
 27309                           ;psect for function _rdBlkRegCompleteHandler
 27310                           
 27311     1315                     l12551:	
 27312                           ;incstack = 0
 27313                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 27314                           
 27315                           
 27316                           ;mcc_generated_files/drivers/i2c_simple_master.c: 185: static i2c1_operations_t rdBlkReg
      +                          CompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 186: {;mcc_gen
      +                          erated_files/drivers/i2c_simple_master.c: 187:     I2C1_SetBuffer(((buf_t *)p)->data,((b
      +                          uf_t*)p)->len);
 27317     1315  0878               	movf	rdBlkRegCompleteHandler@p,w
 27318     1316  3E02               	addlw	2
 27319     1317  0086               	movwf	6
 27320     1318  0187               	clrf	7
 27321     1319  3F40               	moviw [0]fsr1
 27322     131A  00F1               	movwf	I2C1_SetBuffer@buffer
 27323     131B  3F41               	moviw [1]fsr1
 27324     131C  00F2               	movwf	I2C1_SetBuffer@buffer+1
 27325     131D  0878               	movf	rdBlkRegCompleteHandler@p,w
 27326     131E  0086               	movwf	6
 27327     131F  0187               	clrf	7
 27328     1320  3F40               	moviw [0]fsr1
 27329     1321  00F3               	movwf	I2C1_SetBuffer@bufferSize
 27330     1322  3F41               	moviw [1]fsr1
 27331     1323  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 27332     1324  3190  20C1  3193   	fcall	_I2C1_SetBuffer
 27333                           
 27334                           ;mcc_generated_files/drivers/i2c_simple_master.c: 188:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 27335     1327  3000               	movlw	0
 27336     1328  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27337     1329  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27338     132A  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27339     132B  3190  2023  3193   	fcall	_I2C1_SetDataCompleteCallback
 27340     132E                     l12553:
 27341                           
 27342                           ;mcc_generated_files/drivers/i2c_simple_master.c: 189:     return I2C1_RESTART_READ;
 27343     132E  3002               	movlw	2
 27344     132F                     l561:
 27345     132F  0008               	return
 27346     1330                     __end_of_rdBlkRegCompleteHandler:
 27347                           
 27348                           	psect	text143
 27349     115E                     __ptext143:	
 27350 ;; *************** function _wr2RegCompleteHandler *****************
 27351 ;; Defined at:
 27352 ;;		line 151 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 27353 ;; Parameters:    Size  Location     Type
 27354 ;;  p               1    8[COMMON] PTR void 
 27355 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27356 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27357 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27358 ;; Auto vars:     Size  Location     Type
 27359 ;;		None
 27360 ;; Return value:  Size  Location     Type
 27361 ;;                  1    wreg      enum E363
 27362 ;; Registers used:
 27363 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27364 ;; Tracked objects:
 27365 ;;		On entry : 0/0
 27366 ;;		On exit  : 0/0
 27367 ;;		Unchanged: 0/0
 27368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27369 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27372 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27373 ;;Total ram usage:        1 bytes
 27374 ;; Hardware stack levels used: 1
 27375 ;; Hardware stack levels required when called: 6
 27376 ;; This function calls:
 27377 ;;		_I2C1_SetBuffer
 27378 ;;		_I2C1_SetDataCompleteCallback
 27379 ;; This function is called by:
 27380 ;;		_i2c_write2ByteRegister
 27381 ;;		_I2C1_DO_TX
 27382 ;;		_I2C1_DO_RX
 27383 ;;		_I2C1_DO_TX_EMPTY
 27384 ;;		_I2C1_DO_ADDRESS_NACK
 27385 ;;		_I2C1_DO_RX_EMPTY
 27386 ;; This function uses a non-reentrant model
 27387 ;;
 27388                           
 27389     115E                     _wr2RegCompleteHandler:	
 27390                           ;psect for function _wr2RegCompleteHandler
 27391                           
 27392     115E                     l12543:	
 27393                           ;incstack = 0
 27394                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 27395                           
 27396                           
 27397                           ;mcc_generated_files/drivers/i2c_simple_master.c: 151: static i2c1_operations_t wr2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 152: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 153:     I2C1_SetBuffer(p,2);
 27398     115E  0878               	movf	wr2RegCompleteHandler@p,w
 27399     115F  00F1               	movwf	I2C1_SetBuffer@buffer
 27400     1160  01F2               	clrf	I2C1_SetBuffer@buffer+1
 27401     1161  3002               	movlw	2
 27402     1162  00F3               	movwf	I2C1_SetBuffer@bufferSize
 27403     1163  3000               	movlw	0
 27404     1164  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 27405     1165  3190  20C1  3191   	fcall	_I2C1_SetBuffer
 27406     1168                     l12545:
 27407                           
 27408                           ;mcc_generated_files/drivers/i2c_simple_master.c: 154:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 27409     1168  3000               	movlw	0
 27410     1169  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27411     116A  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27412     116B  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27413     116C  3190  2023  3191   	fcall	_I2C1_SetDataCompleteCallback
 27414     116F                     l12547:
 27415                           
 27416                           ;mcc_generated_files/drivers/i2c_simple_master.c: 155:     return I2C1_CONTINUE;
 27417     116F  3004               	movlw	4
 27418     1170                     l549:
 27419     1170  0008               	return
 27420     1171                     __end_of_wr2RegCompleteHandler:
 27421                           
 27422                           	psect	text144
 27423     114B                     __ptext144:	
 27424 ;; *************** function _rd2RegCompleteHandler *****************
 27425 ;; Defined at:
 27426 ;;		line 119 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 27427 ;; Parameters:    Size  Location     Type
 27428 ;;  p               1    8[COMMON] PTR void 
 27429 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27430 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27431 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27432 ;; Auto vars:     Size  Location     Type
 27433 ;;		None
 27434 ;; Return value:  Size  Location     Type
 27435 ;;                  1    wreg      enum E363
 27436 ;; Registers used:
 27437 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27438 ;; Tracked objects:
 27439 ;;		On entry : 0/0
 27440 ;;		On exit  : 0/0
 27441 ;;		Unchanged: 0/0
 27442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27443 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27446 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27447 ;;Total ram usage:        1 bytes
 27448 ;; Hardware stack levels used: 1
 27449 ;; Hardware stack levels required when called: 6
 27450 ;; This function calls:
 27451 ;;		_I2C1_SetBuffer
 27452 ;;		_I2C1_SetDataCompleteCallback
 27453 ;; This function is called by:
 27454 ;;		_i2c_read2ByteRegister
 27455 ;;		_I2C1_DO_TX
 27456 ;;		_I2C1_DO_RX
 27457 ;;		_I2C1_DO_TX_EMPTY
 27458 ;;		_I2C1_DO_ADDRESS_NACK
 27459 ;;		_I2C1_DO_RX_EMPTY
 27460 ;; This function uses a non-reentrant model
 27461 ;;
 27462                           
 27463     114B                     _rd2RegCompleteHandler:	
 27464                           ;psect for function _rd2RegCompleteHandler
 27465                           
 27466     114B                     l12535:	
 27467                           ;incstack = 0
 27468                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 27469                           
 27470                           
 27471                           ;mcc_generated_files/drivers/i2c_simple_master.c: 119: static i2c1_operations_t rd2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 120: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 121:     I2C1_SetBuffer(p,2);
 27472     114B  0878               	movf	rd2RegCompleteHandler@p,w
 27473     114C  00F1               	movwf	I2C1_SetBuffer@buffer
 27474     114D  01F2               	clrf	I2C1_SetBuffer@buffer+1
 27475     114E  3002               	movlw	2
 27476     114F  00F3               	movwf	I2C1_SetBuffer@bufferSize
 27477     1150  3000               	movlw	0
 27478     1151  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 27479     1152  3190  20C1  3191   	fcall	_I2C1_SetBuffer
 27480     1155                     l12537:
 27481                           
 27482                           ;mcc_generated_files/drivers/i2c_simple_master.c: 122:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 27483     1155  3000               	movlw	0
 27484     1156  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27485     1157  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27486     1158  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27487     1159  3190  2023  3191   	fcall	_I2C1_SetDataCompleteCallback
 27488     115C                     l12539:
 27489                           
 27490                           ;mcc_generated_files/drivers/i2c_simple_master.c: 123:     return I2C1_RESTART_READ;
 27491     115C  3002               	movlw	2
 27492     115D                     l537:
 27493     115D  0008               	return
 27494     115E                     __end_of_rd2RegCompleteHandler:
 27495                           
 27496                           	psect	text145
 27497     1138                     __ptext145:	
 27498 ;; *************** function _rd1RegCompleteHandler *****************
 27499 ;; Defined at:
 27500 ;;		line 81 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 27501 ;; Parameters:    Size  Location     Type
 27502 ;;  p               1    8[COMMON] PTR void 
 27503 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27504 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27505 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27506 ;; Auto vars:     Size  Location     Type
 27507 ;;		None
 27508 ;; Return value:  Size  Location     Type
 27509 ;;                  1    wreg      enum E363
 27510 ;; Registers used:
 27511 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27512 ;; Tracked objects:
 27513 ;;		On entry : 0/0
 27514 ;;		On exit  : 0/0
 27515 ;;		Unchanged: 0/0
 27516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27517 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27520 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27521 ;;Total ram usage:        1 bytes
 27522 ;; Hardware stack levels used: 1
 27523 ;; Hardware stack levels required when called: 6
 27524 ;; This function calls:
 27525 ;;		_I2C1_SetBuffer
 27526 ;;		_I2C1_SetDataCompleteCallback
 27527 ;; This function is called by:
 27528 ;;		_i2c_read1ByteRegister
 27529 ;;		_I2C1_DO_TX
 27530 ;;		_I2C1_DO_RX
 27531 ;;		_I2C1_DO_TX_EMPTY
 27532 ;;		_I2C1_DO_ADDRESS_NACK
 27533 ;;		_I2C1_DO_RX_EMPTY
 27534 ;; This function uses a non-reentrant model
 27535 ;;
 27536                           
 27537     1138                     _rd1RegCompleteHandler:	
 27538                           ;psect for function _rd1RegCompleteHandler
 27539                           
 27540     1138                     l12527:	
 27541                           ;incstack = 0
 27542                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 27543                           
 27544                           
 27545                           ;mcc_generated_files/drivers/i2c_simple_master.c: 81: static i2c1_operations_t rd1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 82: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 83:     I2C1_SetBuffer(p,1);
 27546     1138  0878               	movf	rd1RegCompleteHandler@p,w
 27547     1139  00F1               	movwf	I2C1_SetBuffer@buffer
 27548     113A  01F2               	clrf	I2C1_SetBuffer@buffer+1
 27549     113B  3001               	movlw	1
 27550     113C  00F3               	movwf	I2C1_SetBuffer@bufferSize
 27551     113D  3000               	movlw	0
 27552     113E  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 27553     113F  3190  20C1  3191   	fcall	_I2C1_SetBuffer
 27554     1142                     l12529:
 27555                           
 27556                           ;mcc_generated_files/drivers/i2c_simple_master.c: 84:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 27557     1142  3000               	movlw	0
 27558     1143  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27559     1144  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27560     1145  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27561     1146  3190  2023  3191   	fcall	_I2C1_SetDataCompleteCallback
 27562     1149                     l12531:
 27563                           
 27564                           ;mcc_generated_files/drivers/i2c_simple_master.c: 85:     return I2C1_RESTART_READ;
 27565     1149  3002               	movlw	2
 27566     114A                     l522:
 27567     114A  0008               	return
 27568     114B                     __end_of_rd1RegCompleteHandler:
 27569                           
 27570                           	psect	text146
 27571     1125                     __ptext146:	
 27572 ;; *************** function _wr1RegCompleteHandler *****************
 27573 ;; Defined at:
 27574 ;;		line 34 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 27575 ;; Parameters:    Size  Location     Type
 27576 ;;  p               1    8[COMMON] PTR void 
 27577 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27578 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27579 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27580 ;; Auto vars:     Size  Location     Type
 27581 ;;		None
 27582 ;; Return value:  Size  Location     Type
 27583 ;;                  1    wreg      enum E363
 27584 ;; Registers used:
 27585 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27586 ;; Tracked objects:
 27587 ;;		On entry : 0/0
 27588 ;;		On exit  : 0/0
 27589 ;;		Unchanged: 0/0
 27590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27591 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27594 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27595 ;;Total ram usage:        1 bytes
 27596 ;; Hardware stack levels used: 1
 27597 ;; Hardware stack levels required when called: 6
 27598 ;; This function calls:
 27599 ;;		_I2C1_SetBuffer
 27600 ;;		_I2C1_SetDataCompleteCallback
 27601 ;; This function is called by:
 27602 ;;		_i2c_write1ByteRegister
 27603 ;;		_I2C1_DO_TX
 27604 ;;		_I2C1_DO_RX
 27605 ;;		_I2C1_DO_TX_EMPTY
 27606 ;;		_I2C1_DO_ADDRESS_NACK
 27607 ;;		_I2C1_DO_RX_EMPTY
 27608 ;; This function uses a non-reentrant model
 27609 ;;
 27610                           
 27611     1125                     _wr1RegCompleteHandler:	
 27612                           ;psect for function _wr1RegCompleteHandler
 27613                           
 27614     1125                     l12519:	
 27615                           ;incstack = 0
 27616                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 27617                           
 27618                           
 27619                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34: static i2c1_operations_t wr1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 35: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 36:     I2C1_SetBuffer(p,1);
 27620     1125  0878               	movf	wr1RegCompleteHandler@p,w
 27621     1126  00F1               	movwf	I2C1_SetBuffer@buffer
 27622     1127  01F2               	clrf	I2C1_SetBuffer@buffer+1
 27623     1128  3001               	movlw	1
 27624     1129  00F3               	movwf	I2C1_SetBuffer@bufferSize
 27625     112A  3000               	movlw	0
 27626     112B  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 27627     112C  3190  20C1  3191   	fcall	_I2C1_SetBuffer
 27628     112F                     l12521:
 27629                           
 27630                           ;mcc_generated_files/drivers/i2c_simple_master.c: 37:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 27631     112F  3000               	movlw	0
 27632     1130  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27633     1131  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27634     1132  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27635     1133  3190  2023  3191   	fcall	_I2C1_SetDataCompleteCallback
 27636     1136                     l12523:
 27637                           
 27638                           ;mcc_generated_files/drivers/i2c_simple_master.c: 38:     return I2C1_CONTINUE;
 27639     1136  3004               	movlw	4
 27640     1137                     l501:
 27641     1137  0008               	return
 27642     1138                     __end_of_wr1RegCompleteHandler:
 27643                           
 27644                           	psect	text147
 27645     1112                     __ptext147:	
 27646 ;; *************** function _wr2RegCompleteHandler@i2c1_master_example$F1750 *****************
 27647 ;; Defined at:
 27648 ;;		line 163 in file "mcc_generated_files/examples/i2c1_master_example.c"
 27649 ;; Parameters:    Size  Location     Type
 27650 ;;  ptr             1    8[COMMON] PTR void 
 27651 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27652 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27653 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27654 ;; Auto vars:     Size  Location     Type
 27655 ;;		None
 27656 ;; Return value:  Size  Location     Type
 27657 ;;                  1    wreg      enum E363
 27658 ;; Registers used:
 27659 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27660 ;; Tracked objects:
 27661 ;;		On entry : 0/0
 27662 ;;		On exit  : 0/0
 27663 ;;		Unchanged: 0/0
 27664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27665 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27668 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27669 ;;Total ram usage:        1 bytes
 27670 ;; Hardware stack levels used: 1
 27671 ;; Hardware stack levels required when called: 6
 27672 ;; This function calls:
 27673 ;;		_I2C1_SetBuffer
 27674 ;;		_I2C1_SetDataCompleteCallback
 27675 ;; This function is called by:
 27676 ;;		_I2C1_Write2ByteRegister
 27677 ;;		_I2C1_DO_TX
 27678 ;;		_I2C1_DO_RX
 27679 ;;		_I2C1_DO_TX_EMPTY
 27680 ;;		_I2C1_DO_ADDRESS_NACK
 27681 ;;		_I2C1_DO_RX_EMPTY
 27682 ;; This function uses a non-reentrant model
 27683 ;;
 27684                           
 27685     1112                     _wr2RegCompleteHandler@i2c1_master_example$F1750:	
 27686                           ;psect for function _wr2RegCompleteHandler@i2c1_master_example$F1750
 27687                           
 27688     1112                     l12581:	
 27689                           ;incstack = 0
 27690                           ; Regs used in _wr2RegCompleteHandler@i2c1_master_example$F1750: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 27691                           
 27692     1112  0878               	movf	wr2RegCompleteHandler@i2c1_master_example$F1750@ptr,w
 27693     1113  00F1               	movwf	I2C1_SetBuffer@buffer
 27694     1114  01F2               	clrf	I2C1_SetBuffer@buffer+1
 27695     1115  3002               	movlw	2
 27696     1116  00F3               	movwf	I2C1_SetBuffer@bufferSize
 27697     1117  3000               	movlw	0
 27698     1118  00F4               	movwf	I2C1_SetBuffer@bufferSize+1
 27699     1119  3190  20C1  3191   	fcall	_I2C1_SetBuffer
 27700     111C                     l12583:
 27701     111C  3000               	movlw	0
 27702     111D  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 27703     111E  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 27704     111F  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 27705     1120  3190  2023  3191   	fcall	_I2C1_SetDataCompleteCallback
 27706     1123                     l12585:
 27707     1123  3004               	movlw	4
 27708     1124                     l1364:
 27709     1124  0008               	return
 27710     1125                     __end_of_wr2RegCompleteHandler@i2c1_master_example$F1750:
 27711                           
 27712                           	psect	text148
 27713     1023                     __ptext148:	
 27714 ;; *************** function _I2C1_SetDataCompleteCallback *****************
 27715 ;; Defined at:
 27716 ;;		line 273 in file "mcc_generated_files/i2c1_master.c"
 27717 ;; Parameters:    Size  Location     Type
 27718 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 27719 ;;		 -> rdBlkRegCompleteHandler@i2c1_master_example$F1761(1), wr2RegCompleteHandler@i2c1_master_example$F1750(1), wr1Reg
      +CompleteHandler@i2c1_master_example$F1744(1), rd2RegCompleteHandler@i2c1_master_example$F1738(1), 
 27720 ;;		 -> rd1RegCompleteHandler@i2c1_master_example$F1727(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2Reg
      +CompleteHandler(1), 
 27721 ;;		 -> rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), NULL(1), 
 27722 ;;  ptr             1    7[COMMON] PTR void 
 27723 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27724 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27725 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27726 ;; Auto vars:     Size  Location     Type
 27727 ;;		None
 27728 ;; Return value:  Size  Location     Type
 27729 ;;                  1    wreg      void 
 27730 ;; Registers used:
 27731 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27732 ;; Tracked objects:
 27733 ;;		On entry : 0/0
 27734 ;;		On exit  : 0/0
 27735 ;;		Unchanged: 0/0
 27736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27737 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27740 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27741 ;;Total ram usage:        3 bytes
 27742 ;; Hardware stack levels used: 1
 27743 ;; Hardware stack levels required when called: 5
 27744 ;; This function calls:
 27745 ;;		_I2C1_SetCallback
 27746 ;; This function is called by:
 27747 ;;		_wr1RegCompleteHandler
 27748 ;;		_i2c_write1ByteRegister
 27749 ;;		_rd1RegCompleteHandler
 27750 ;;		_i2c_read1ByteRegister
 27751 ;;		_rd2RegCompleteHandler
 27752 ;;		_i2c_read2ByteRegister
 27753 ;;		_wr2RegCompleteHandler
 27754 ;;		_rdBlkRegCompleteHandler
 27755 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1727
 27756 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1738
 27757 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1744
 27758 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1750
 27759 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1761
 27760 ;;		_i2c_write2ByteRegister
 27761 ;;		_i2c_readDataBlock
 27762 ;;		_I2C1_Read1ByteRegister
 27763 ;;		_I2C1_Read2ByteRegister
 27764 ;;		_I2C1_Write1ByteRegister
 27765 ;;		_I2C1_Write2ByteRegister
 27766 ;;		_I2C1_ReadDataBlock
 27767 ;; This function uses a non-reentrant model
 27768 ;;
 27769                           
 27770     1023                     _I2C1_SetDataCompleteCallback:	
 27771                           ;psect for function _I2C1_SetDataCompleteCallback
 27772                           
 27773     1023                     l12511:	
 27774                           ;incstack = 0
 27775                           ; Regs used in _I2C1_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 27776                           
 27777                           
 27778                           ;mcc_generated_files/i2c1_master.c: 273: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 274: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 275:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 27779     1023  0876               	movf	I2C1_SetDataCompleteCallback@cb+1,w
 27780     1024  00F2               	movwf	I2C1_SetCallback@cb+1
 27781     1025  0875               	movf	I2C1_SetDataCompleteCallback@cb,w
 27782     1026  00F1               	movwf	I2C1_SetCallback@cb
 27783     1027  0877               	movf	I2C1_SetDataCompleteCallback@ptr,w
 27784     1028  00F3               	movwf	I2C1_SetCallback@ptr
 27785     1029  3000               	movlw	0
 27786     102A  3194  2466  3190   	fcall	_I2C1_SetCallback
 27787     102D                     l2397:
 27788     102D  0008               	return
 27789     102E                     __end_of_I2C1_SetDataCompleteCallback:
 27790                           
 27791                           	psect	text149
 27792     1466                     __ptext149:	
 27793 ;; *************** function _I2C1_SetCallback *****************
 27794 ;; Defined at:
 27795 ;;		line 298 in file "mcc_generated_files/i2c1_master.c"
 27796 ;; Parameters:    Size  Location     Type
 27797 ;;  idx             1    wreg     enum E12583
 27798 ;;  cb              2    1[COMMON] PTR FTN(PTR void ,)enum 
 27799 ;;		 -> rdBlkRegCompleteHandler@i2c1_master_example$F1761(1), wr2RegCompleteHandler@i2c1_master_example$F1750(1), wr1Reg
      +CompleteHandler@i2c1_master_example$F1744(1), rd2RegCompleteHandler@i2c1_master_example$F1738(1), 
 27800 ;;		 -> rd1RegCompleteHandler@i2c1_master_example$F1727(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2Reg
      +CompleteHandler(1), 
 27801 ;;		 -> rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), NULL(1), 
 27802 ;;  ptr             1    3[COMMON] PTR void 
 27803 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 27804 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 27805 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 27806 ;; Auto vars:     Size  Location     Type
 27807 ;;  idx             1    4[COMMON] enum E12583
 27808 ;; Return value:  Size  Location     Type
 27809 ;;                  1    wreg      void 
 27810 ;; Registers used:
 27811 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 27812 ;; Tracked objects:
 27813 ;;		On entry : 0/0
 27814 ;;		On exit  : 0/0
 27815 ;;		Unchanged: 0/0
 27816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27817 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27818 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27820 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27821 ;;Total ram usage:        4 bytes
 27822 ;; Hardware stack levels used: 1
 27823 ;; Hardware stack levels required when called: 4
 27824 ;; This function calls:
 27825 ;;		Nothing
 27826 ;; This function is called by:
 27827 ;;		_I2C1_SetDataCompleteCallback
 27828 ;;		_I2C1_SetAddressNackCallback
 27829 ;;		_I2C1_SetWriteCollisionCallback
 27830 ;;		_I2C1_SetDataNackCallback
 27831 ;;		_I2C1_SetTimeoutCallback
 27832 ;; This function uses a non-reentrant model
 27833 ;;
 27834                           
 27835     1466                     _I2C1_SetCallback:	
 27836                           ;psect for function _I2C1_SetCallback
 27837                           
 27838                           
 27839                           ;incstack = 0
 27840                           ; Regs used in _I2C1_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
 27841                           ;I2C1_SetCallback@idx stored from wreg
 27842     1466  00F4               	movwf	I2C1_SetCallback@idx
 27843     1467                     l12499:
 27844                           
 27845                           ;mcc_generated_files/i2c1_master.c: 298: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 299: {;mcc_gen
      +                          erated_files/i2c1_master.c: 300:     if(cb)
 27846     1467  0871               	movf	I2C1_SetCallback@cb,w
 27847     1468  0472               	iorwf	I2C1_SetCallback@cb+1,w
 27848     1469  1903               	btfsc	3,2
 27849     146A  2C6C               	goto	u9541
 27850     146B  2C6D               	goto	u9540
 27851     146C                     u9541:
 27852     146C  2C7C               	goto	l12503
 27853     146D                     u9540:
 27854     146D                     l12501:
 27855                           
 27856                           ;mcc_generated_files/i2c1_master.c: 301:     {;mcc_generated_files/i2c1_master.c: 302:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 27857     146D  3574               	lslf	I2C1_SetCallback@idx,w
 27858     146E  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 27859     146F  0086               	movwf	6
 27860     1470  0187               	clrf	7
 27861     1471  0871               	movf	I2C1_SetCallback@cb,w
 27862     1472  3FC0               	movwi [0]fsr1
 27863     1473  0872               	movf	I2C1_SetCallback@cb+1,w
 27864     1474  3FC1               	movwi [1]fsr1
 27865                           
 27866                           ;mcc_generated_files/i2c1_master.c: 303:         I2C1_Status.callbackPayload[idx] = ptr;
 27867     1475  0874               	movf	I2C1_SetCallback@idx,w
 27868     1476  3EAC               	addlw	(low ((_I2C1_Status| 0+12)))& (0+255)
 27869     1477  0086               	movwf	6
 27870     1478  0187               	clrf	7
 27871     1479  0873               	movf	I2C1_SetCallback@ptr,w
 27872     147A  0081               	movwf	1
 27873                           
 27874                           ;mcc_generated_files/i2c1_master.c: 304:     }
 27875     147B  2C89               	goto	l2414
 27876     147C                     l12503:
 27877                           
 27878                           ;mcc_generated_files/i2c1_master.c: 306:     {;mcc_generated_files/i2c1_master.c: 307:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 27879     147C  3574               	lslf	I2C1_SetCallback@idx,w
 27880     147D  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 27881     147E  0086               	movwf	6
 27882     147F  0187               	clrf	7
 27883     1480  30B7               	movlw	low _I2C1_CallbackReturnStop
 27884     1481  3FC0               	movwi [0]fsr1
 27885     1482  301E               	movlw	high _I2C1_CallbackReturnStop
 27886     1483  3FC1               	movwi [1]fsr1
 27887                           
 27888                           ;mcc_generated_files/i2c1_master.c: 308:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 27889     1484  0874               	movf	I2C1_SetCallback@idx,w
 27890     1485  3EAC               	addlw	(low ((_I2C1_Status| 0+12)))& (0+255)
 27891     1486  0086               	movwf	6
 27892     1487  0187               	clrf	7
 27893     1488  0181               	clrf	1
 27894     1489                     l2414:
 27895     1489  0008               	return
 27896     148A                     __end_of_I2C1_SetCallback:
 27897                           
 27898                           	psect	text150
 27899     10C1                     __ptext150:	
 27900 ;; *************** function _I2C1_SetBuffer *****************
 27901 ;; Defined at:
 27902 ;;		line 263 in file "mcc_generated_files/i2c1_master.c"
 27903 ;; Parameters:    Size  Location     Type
 27904 ;;  buffer          2    1[COMMON] PTR void 
 27905 ;;		 -> I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteReg
      +ister@data(2), 
 27906 ;;		 -> I2C1_Write1ByteRegister@reg(1), I2C1_Write1ByteRegister@data(1), I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRe
      +gister@returnValue(2), 
 27907 ;;		 -> I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), RAM(8192), i2c_readDataBlock@reg(1), 
 27908 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg
      +(1), 
 27909 ;;		 -> i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegister@d2(1), i2c_write1ByteRegist
      +er@reg(1), 
 27910 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 27911 ;;  bufferSize      2    3[COMMON] unsigned int 
 27912 ;; Auto vars:     Size  Location     Type
 27913 ;;		None
 27914 ;; Return value:  Size  Location     Type
 27915 ;;                  1    wreg      void 
 27916 ;; Registers used:
 27917 ;;		wreg
 27918 ;; Tracked objects:
 27919 ;;		On entry : 0/0
 27920 ;;		On exit  : 0/0
 27921 ;;		Unchanged: 0/0
 27922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 27923 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27926 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 27927 ;;Total ram usage:        4 bytes
 27928 ;; Hardware stack levels used: 1
 27929 ;; Hardware stack levels required when called: 4
 27930 ;; This function calls:
 27931 ;;		Nothing
 27932 ;; This function is called by:
 27933 ;;		_wr1RegCompleteHandler
 27934 ;;		_i2c_write1ByteRegister
 27935 ;;		_rd1RegCompleteHandler
 27936 ;;		_i2c_read1ByteRegister
 27937 ;;		_rd2RegCompleteHandler
 27938 ;;		_i2c_read2ByteRegister
 27939 ;;		_wr2RegCompleteHandler
 27940 ;;		_rdBlkRegCompleteHandler
 27941 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1727
 27942 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1738
 27943 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1744
 27944 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1750
 27945 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1761
 27946 ;;		_i2c_writeNBytes
 27947 ;;		_i2c_write2ByteRegister
 27948 ;;		_i2c_readDataBlock
 27949 ;;		_i2c_readNBytes
 27950 ;;		_I2C1_Read1ByteRegister
 27951 ;;		_I2C1_Read2ByteRegister
 27952 ;;		_I2C1_Write1ByteRegister
 27953 ;;		_I2C1_Write2ByteRegister
 27954 ;;		_I2C1_WriteNBytes
 27955 ;;		_I2C1_ReadNBytes
 27956 ;;		_I2C1_ReadDataBlock
 27957 ;; This function uses a non-reentrant model
 27958 ;;
 27959                           
 27960     10C1                     _I2C1_SetBuffer:	
 27961                           ;psect for function _I2C1_SetBuffer
 27962                           
 27963     10C1                     l12505:	
 27964                           ;incstack = 0
 27965                           ; Regs used in _I2C1_SetBuffer: [wreg]
 27966                           
 27967                           
 27968                           ;mcc_generated_files/i2c1_master.c: 263: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 264: {;mcc_generated_files/i2c1_master.c: 265: 
      +                              if(I2C1_Status.bufferFree)
 27969     10C1  0141               	movlb	1	; select bank1
 27970     10C2  1DBD               	btfss	(_I2C1_Status^(0+128)+29),3
 27971     10C3  28C5               	goto	u9551
 27972     10C4  28C6               	goto	u9550
 27973     10C5                     u9551:
 27974     10C5  28CF               	goto	l2394
 27975     10C6                     u9550:
 27976     10C6                     l12507:
 27977                           
 27978                           ;mcc_generated_files/i2c1_master.c: 266:     {;mcc_generated_files/i2c1_master.c: 267:  
      +                                 I2C1_Status.data_ptr = buffer;
 27979     10C6  0872               	movf	I2C1_SetBuffer@buffer+1,w
 27980     10C7  00B8               	movwf	((low ((_I2C1_Status| 0+23))+1))^(0+128)
 27981     10C8  0871               	movf	I2C1_SetBuffer@buffer,w
 27982     10C9  00B7               	movwf	(low ((_I2C1_Status| 0+23)))^(0+128)
 27983                           
 27984                           ;mcc_generated_files/i2c1_master.c: 268:         I2C1_Status.data_length = bufferSize;
 27985     10CA  0874               	movf	I2C1_SetBuffer@bufferSize+1,w
 27986     10CB  00BA               	movwf	((_I2C1_Status+1)^(0+128)+25)
 27987     10CC  0873               	movf	I2C1_SetBuffer@bufferSize,w
 27988     10CD  00B9               	movwf	(_I2C1_Status^(0+128)+25)
 27989     10CE                     l12509:
 27990                           
 27991                           ;mcc_generated_files/i2c1_master.c: 269:         I2C1_Status.bufferFree = 0;
 27992     10CE  11BD               	bcf	(_I2C1_Status^(0+128)+29),3
 27993     10CF                     l2394:
 27994     10CF  0008               	return
 27995     10D0                     __end_of_I2C1_SetBuffer:
 27996                           
 27997                           	psect	text151
 27998     1ECA                     __ptext151:	
 27999 ;; *************** function _I2C1_MasterStop *****************
 28000 ;; Defined at:
 28001 ;;		line 593 in file "mcc_generated_files/i2c1_master.c"
 28002 ;; Parameters:    Size  Location     Type
 28003 ;;		None
 28004 ;; Auto vars:     Size  Location     Type
 28005 ;;		None
 28006 ;; Return value:  Size  Location     Type
 28007 ;;                  1    wreg      void 
 28008 ;; Registers used:
 28009 ;;		None
 28010 ;; Tracked objects:
 28011 ;;		On entry : 0/0
 28012 ;;		On exit  : 0/0
 28013 ;;		Unchanged: 0/0
 28014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28019 ;;Total ram usage:        0 bytes
 28020 ;; Hardware stack levels used: 1
 28021 ;; Hardware stack levels required when called: 4
 28022 ;; This function calls:
 28023 ;;		Nothing
 28024 ;; This function is called by:
 28025 ;;		_I2C1_DO_SEND_STOP
 28026 ;; This function uses a non-reentrant model
 28027 ;;
 28028                           
 28029     1ECA                     _I2C1_MasterStop:	
 28030                           ;psect for function _I2C1_MasterStop
 28031                           
 28032     1ECA                     l12515:	
 28033                           ;incstack = 0
 28034                           ; Regs used in _I2C1_MasterStop: []
 28035                           
 28036                           
 28037                           ;mcc_generated_files/i2c1_master.c: 595:     SSP1CON2bits.PEN = 1;
 28038     1ECA  0143               	movlb	3	; select bank3
 28039     1ECB  1511               	bsf	17,2	;volatile
 28040     1ECC                     l2560:
 28041     1ECC  0008               	return
 28042     1ECD                     __end_of_I2C1_MasterStop:
 28043                           
 28044                           	psect	text152
 28045     1EC7                     __ptext152:	
 28046 ;; *************** function _I2C1_MasterEnableRestart *****************
 28047 ;; Defined at:
 28048 ;;		line 573 in file "mcc_generated_files/i2c1_master.c"
 28049 ;; Parameters:    Size  Location     Type
 28050 ;;		None
 28051 ;; Auto vars:     Size  Location     Type
 28052 ;;		None
 28053 ;; Return value:  Size  Location     Type
 28054 ;;                  1    wreg      void 
 28055 ;; Registers used:
 28056 ;;		None
 28057 ;; Tracked objects:
 28058 ;;		On entry : 0/0
 28059 ;;		On exit  : 0/0
 28060 ;;		Unchanged: 0/0
 28061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28066 ;;Total ram usage:        0 bytes
 28067 ;; Hardware stack levels used: 1
 28068 ;; Hardware stack levels required when called: 4
 28069 ;; This function calls:
 28070 ;;		Nothing
 28071 ;; This function is called by:
 28072 ;;		_I2C1_DO_SEND_RESTART_READ
 28073 ;;		_I2C1_DO_SEND_RESTART_WRITE
 28074 ;;		_I2C1_DO_SEND_RESTART
 28075 ;;		_I2C1_DO_RX_EMPTY
 28076 ;; This function uses a non-reentrant model
 28077 ;;
 28078                           
 28079     1EC7                     _I2C1_MasterEnableRestart:	
 28080                           ;psect for function _I2C1_MasterEnableRestart
 28081                           
 28082     1EC7                     l12513:	
 28083                           ;incstack = 0
 28084                           ; Regs used in _I2C1_MasterEnableRestart: []
 28085                           
 28086                           
 28087                           ;mcc_generated_files/i2c1_master.c: 575:     SSP1CON2bits.RSEN = 1;
 28088     1EC7  0143               	movlb	3	; select bank3
 28089     1EC8  1491               	bsf	17,1	;volatile
 28090     1EC9                     l2548:
 28091     1EC9  0008               	return
 28092     1ECA                     __end_of_I2C1_MasterEnableRestart:
 28093                           
 28094                           	psect	text153
 28095     1EC4                     __ptext153:	
 28096 ;; *************** function _I2C1_MasterStart *****************
 28097 ;; Defined at:
 28098 ;;		line 588 in file "mcc_generated_files/i2c1_master.c"
 28099 ;; Parameters:    Size  Location     Type
 28100 ;;		None
 28101 ;; Auto vars:     Size  Location     Type
 28102 ;;		None
 28103 ;; Return value:  Size  Location     Type
 28104 ;;                  1    wreg      void 
 28105 ;; Registers used:
 28106 ;;		None
 28107 ;; Tracked objects:
 28108 ;;		On entry : 0/0
 28109 ;;		On exit  : 0/0
 28110 ;;		Unchanged: 0/0
 28111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28116 ;;Total ram usage:        0 bytes
 28117 ;; Hardware stack levels used: 1
 28118 ;; Hardware stack levels required when called: 4
 28119 ;; This function calls:
 28120 ;;		Nothing
 28121 ;; This function is called by:
 28122 ;;		_I2C1_MasterOperation
 28123 ;; This function uses a non-reentrant model
 28124 ;;
 28125                           
 28126     1EC4                     _I2C1_MasterStart:	
 28127                           ;psect for function _I2C1_MasterStart
 28128                           
 28129     1EC4                     l12829:	
 28130                           ;incstack = 0
 28131                           ; Regs used in _I2C1_MasterStart: []
 28132                           
 28133                           
 28134                           ;mcc_generated_files/i2c1_master.c: 590:     SSP1CON2bits.SEN = 1;
 28135     1EC4  0143               	movlb	3	; select bank3
 28136     1EC5  1411               	bsf	17,0	;volatile
 28137     1EC6                     l2557:
 28138     1EC6  0008               	return
 28139     1EC7                     __end_of_I2C1_MasterStart:
 28140                           
 28141                           	psect	text154
 28142     127F                     __ptext154:	
 28143 ;; *************** function _I2C1_Close *****************
 28144 ;; Defined at:
 28145 ;;		line 209 in file "mcc_generated_files/i2c1_master.c"
 28146 ;; Parameters:    Size  Location     Type
 28147 ;;		None
 28148 ;; Auto vars:     Size  Location     Type
 28149 ;;  returnValue     1    1[COMMON] enum E358
 28150 ;; Return value:  Size  Location     Type
 28151 ;;                  1    wreg      enum E358
 28152 ;; Registers used:
 28153 ;;		wreg, status,2, status,0, pclath, cstack
 28154 ;; Tracked objects:
 28155 ;;		On entry : 0/0
 28156 ;;		On exit  : 0/0
 28157 ;;		Unchanged: 0/0
 28158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28160 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28162 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28163 ;;Total ram usage:        1 bytes
 28164 ;; Hardware stack levels used: 1
 28165 ;; Hardware stack levels required when called: 5
 28166 ;; This function calls:
 28167 ;;		_I2C1_MasterClearIrq
 28168 ;;		_I2C1_MasterClose
 28169 ;;		_I2C1_MasterDisableIrq
 28170 ;; This function is called by:
 28171 ;;		_i2c_write1ByteRegister
 28172 ;;		_i2c_read1ByteRegister
 28173 ;;		_i2c_read2ByteRegister
 28174 ;;		_i2c_writeNBytes
 28175 ;;		_i2c_write2ByteRegister
 28176 ;;		_i2c_readDataBlock
 28177 ;;		_i2c_readNBytes
 28178 ;;		_I2C1_Read1ByteRegister
 28179 ;;		_I2C1_Read2ByteRegister
 28180 ;;		_I2C1_Write1ByteRegister
 28181 ;;		_I2C1_Write2ByteRegister
 28182 ;;		_I2C1_WriteNBytes
 28183 ;;		_I2C1_ReadNBytes
 28184 ;;		_I2C1_ReadDataBlock
 28185 ;; This function uses a non-reentrant model
 28186 ;;
 28187                           
 28188     127F                     _I2C1_Close:	
 28189                           ;psect for function _I2C1_Close
 28190                           
 28191     127F                     l13001:	
 28192                           ;incstack = 0
 28193                           ; Regs used in _I2C1_Close: [wreg+status,2+status,0+pclath+cstack]
 28194                           
 28195                           
 28196                           ;mcc_generated_files/i2c1_master.c: 211:     i2c1_error_t returnValue = I2C1_BUSY;
 28197     127F  01F1               	clrf	I2C1_Close@returnValue
 28198     1280  0AF1               	incf	I2C1_Close@returnValue,f
 28199                           
 28200                           ;mcc_generated_files/i2c1_master.c: 212:     if(!I2C1_Status.busy)
 28201     1281  0141               	movlb	1	; select bank1
 28202     1282  18BD               	btfsc	(_I2C1_Status^(0+128)+29),1
 28203     1283  2A85               	goto	u9771
 28204     1284  2A86               	goto	u9770
 28205     1285                     u9771:
 28206     1285  2A95               	goto	l13015
 28207     1286                     u9770:
 28208     1286                     l13003:
 28209                           
 28210                           ;mcc_generated_files/i2c1_master.c: 213:     {;mcc_generated_files/i2c1_master.c: 214:  
      +                                 I2C1_Status.inUse = 0;
 28211     1286  113D               	bcf	(_I2C1_Status^(0+128)+29),2
 28212     1287                     l13005:
 28213                           
 28214                           ;mcc_generated_files/i2c1_master.c: 215:         I2C1_Status.address = 0xff;
 28215     1287  30FF               	movlw	255
 28216     1288  00B6               	movwf	(_I2C1_Status^(0+128)+22)
 28217     1289                     l13007:
 28218                           
 28219                           ;mcc_generated_files/i2c1_master.c: 216:         I2C1_MasterClearIrq();
 28220     1289  319E  26BB  3192   	fcall	_I2C1_MasterClearIrq
 28221     128C                     l13009:
 28222                           
 28223                           ;mcc_generated_files/i2c1_master.c: 217:         I2C1_MasterDisableIrq();
 28224     128C  319E  26C1  3192   	fcall	_I2C1_MasterDisableIrq
 28225     128F                     l13011:
 28226                           
 28227                           ;mcc_generated_files/i2c1_master.c: 218:         I2C1_MasterClose();
 28228     128F  319E  26BE  3192   	fcall	_I2C1_MasterClose
 28229     1292                     l13013:
 28230                           
 28231                           ;mcc_generated_files/i2c1_master.c: 219:         returnValue = I2C1_Status.error;
 28232     1292  0141               	movlb	1	; select bank1
 28233     1293  083C               	movf	(_I2C1_Status^(0+128)+28),w
 28234     1294  00F1               	movwf	I2C1_Close@returnValue
 28235     1295                     l13015:
 28236                           
 28237                           ;mcc_generated_files/i2c1_master.c: 221:     return returnValue;
 28238     1295  0871               	movf	I2C1_Close@returnValue,w
 28239     1296                     l2375:
 28240     1296  0008               	return
 28241     1297                     __end_of_I2C1_Close:
 28242                           
 28243                           	psect	text155
 28244     1EC1                     __ptext155:	
 28245 ;; *************** function _I2C1_MasterDisableIrq *****************
 28246 ;; Defined at:
 28247 ;;		line 635 in file "mcc_generated_files/i2c1_master.c"
 28248 ;; Parameters:    Size  Location     Type
 28249 ;;		None
 28250 ;; Auto vars:     Size  Location     Type
 28251 ;;		None
 28252 ;; Return value:  Size  Location     Type
 28253 ;;                  1    wreg      void 
 28254 ;; Registers used:
 28255 ;;		None
 28256 ;; Tracked objects:
 28257 ;;		On entry : 0/0
 28258 ;;		On exit  : 0/0
 28259 ;;		Unchanged: 0/0
 28260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28265 ;;Total ram usage:        0 bytes
 28266 ;; Hardware stack levels used: 1
 28267 ;; Hardware stack levels required when called: 4
 28268 ;; This function calls:
 28269 ;;		Nothing
 28270 ;; This function is called by:
 28271 ;;		_I2C1_Close
 28272 ;;		_I2C1_SetTimeOut
 28273 ;; This function uses a non-reentrant model
 28274 ;;
 28275                           
 28276     1EC1                     _I2C1_MasterDisableIrq:	
 28277                           ;psect for function _I2C1_MasterDisableIrq
 28278                           
 28279     1EC1                     l12939:	
 28280                           ;incstack = 0
 28281                           ; Regs used in _I2C1_MasterDisableIrq: []
 28282                           
 28283                           
 28284                           ;mcc_generated_files/i2c1_master.c: 637:     PIE3bits.SSP1IE = 0;
 28285     1EC1  014E               	movlb	14	; select bank14
 28286     1EC2  1019               	bcf	25,0	;volatile
 28287     1EC3                     l2584:
 28288     1EC3  0008               	return
 28289     1EC4                     __end_of_I2C1_MasterDisableIrq:
 28290                           
 28291                           	psect	text156
 28292     1EBE                     __ptext156:	
 28293 ;; *************** function _I2C1_MasterClose *****************
 28294 ;; Defined at:
 28295 ;;		line 557 in file "mcc_generated_files/i2c1_master.c"
 28296 ;; Parameters:    Size  Location     Type
 28297 ;;		None
 28298 ;; Auto vars:     Size  Location     Type
 28299 ;;		None
 28300 ;; Return value:  Size  Location     Type
 28301 ;;                  1    wreg      void 
 28302 ;; Registers used:
 28303 ;;		None
 28304 ;; Tracked objects:
 28305 ;;		On entry : 0/0
 28306 ;;		On exit  : 0/0
 28307 ;;		Unchanged: 0/0
 28308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28313 ;;Total ram usage:        0 bytes
 28314 ;; Hardware stack levels used: 1
 28315 ;; Hardware stack levels required when called: 4
 28316 ;; This function calls:
 28317 ;;		Nothing
 28318 ;; This function is called by:
 28319 ;;		_I2C1_Close
 28320 ;; This function uses a non-reentrant model
 28321 ;;
 28322                           
 28323     1EBE                     _I2C1_MasterClose:	
 28324                           ;psect for function _I2C1_MasterClose
 28325                           
 28326     1EBE                     l12941:	
 28327                           ;incstack = 0
 28328                           ; Regs used in _I2C1_MasterClose: []
 28329                           
 28330                           
 28331                           ;mcc_generated_files/i2c1_master.c: 560:     SSP1CON1bits.SSPEN = 0;
 28332     1EBE  0143               	movlb	3	; select bank3
 28333     1EBF  1290               	bcf	16,5	;volatile
 28334     1EC0                     l2539:
 28335     1EC0  0008               	return
 28336     1EC1                     __end_of_I2C1_MasterClose:
 28337                           
 28338                           	psect	text157
 28339     1EBB                     __ptext157:	
 28340 ;; *************** function _I2C1_MasterClearIrq *****************
 28341 ;; Defined at:
 28342 ;;		line 640 in file "mcc_generated_files/i2c1_master.c"
 28343 ;; Parameters:    Size  Location     Type
 28344 ;;		None
 28345 ;; Auto vars:     Size  Location     Type
 28346 ;;		None
 28347 ;; Return value:  Size  Location     Type
 28348 ;;                  1    wreg      void 
 28349 ;; Registers used:
 28350 ;;		None
 28351 ;; Tracked objects:
 28352 ;;		On entry : 0/0
 28353 ;;		On exit  : 0/0
 28354 ;;		Unchanged: 0/0
 28355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28360 ;;Total ram usage:        0 bytes
 28361 ;; Hardware stack levels used: 1
 28362 ;; Hardware stack levels required when called: 4
 28363 ;; This function calls:
 28364 ;;		Nothing
 28365 ;; This function is called by:
 28366 ;;		_I2C1_Open
 28367 ;;		_I2C1_Close
 28368 ;;		_I2C1_MasterFsm
 28369 ;; This function uses a non-reentrant model
 28370 ;;
 28371                           
 28372     1EBB                     _I2C1_MasterClearIrq:	
 28373                           ;psect for function _I2C1_MasterClearIrq
 28374                           
 28375     1EBB                     l12655:	
 28376                           ;incstack = 0
 28377                           ; Regs used in _I2C1_MasterClearIrq: []
 28378                           
 28379                           
 28380                           ;mcc_generated_files/i2c1_master.c: 642:     PIR3bits.SSP1IF = 0;
 28381     1EBB  014E               	movlb	14	; select bank14
 28382     1EBC  100F               	bcf	15,0	;volatile
 28383     1EBD                     l2587:
 28384     1EBD  0008               	return
 28385     1EBE                     __end_of_I2C1_MasterClearIrq:
 28386                           
 28387                           	psect	intentry
 28388     0004                     __pintentry:	
 28389 ;; *************** function _INTERRUPT_InterruptManager *****************
 28390 ;; Defined at:
 28391 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 28392 ;; Parameters:    Size  Location     Type
 28393 ;;		None
 28394 ;; Auto vars:     Size  Location     Type
 28395 ;;		None
 28396 ;; Return value:  Size  Location     Type
 28397 ;;                  1    wreg      void 
 28398 ;; Registers used:
 28399 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 28400 ;; Tracked objects:
 28401 ;;		On entry : 0/0
 28402 ;;		On exit  : 0/0
 28403 ;;		Unchanged: 0/0
 28404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28409 ;;Total ram usage:        0 bytes
 28410 ;; Hardware stack levels used: 1
 28411 ;; Hardware stack levels required when called: 3
 28412 ;; This function calls:
 28413 ;;		NULL
 28414 ;;		_EUSART1_Receive_ISR
 28415 ;;		_EUSART1_Transmit_ISR
 28416 ;;		_EUSART2_Receive_ISR
 28417 ;;		_EUSART2_Transmit_ISR
 28418 ;;		_PIN_MANAGER_IOC
 28419 ;; This function is called by:
 28420 ;;		Interrupt level 1
 28421 ;; This function uses a non-reentrant model
 28422 ;;
 28423                           
 28424     0004                     _INTERRUPT_InterruptManager:
 28425                           
 28426                           ;incstack = 0
 28427 ;; hardware stack exceeded
 28428     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 28429                           
 28430                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 28431     0005  3180               	pagesel	$
 28432     0006                     i1l16357:
 28433                           
 28434                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.IOCIE == 1 && PIR0bits.IOC
      +                          IF == 1)
 28435     0006  014E               	movlb	14	; select bank14
 28436     0007  1E16               	btfss	22,4	;volatile
 28437     0008  280A               	goto	u1383_21
 28438     0009  280B               	goto	u1383_20
 28439     000A                     u1383_21:
 28440     000A  2813               	goto	i1l1920
 28441     000B                     u1383_20:
 28442     000B                     i1l16359:
 28443     000B  1E0C               	btfss	12,4	;volatile
 28444     000C  280E               	goto	u1384_21
 28445     000D  280F               	goto	u1384_20
 28446     000E                     u1384_21:
 28447     000E  2813               	goto	i1l1920
 28448     000F                     u1384_20:
 28449     000F                     i1l16361:
 28450                           
 28451                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
 28452     000F  319F  27BF  3180   	fcall	_PIN_MANAGER_IOC
 28453                           
 28454                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 28455     0012  2853               	goto	i1l1932
 28456     0013                     i1l1920:	
 28457                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 28458                           
 28459     0013  1F0B               	btfss	11,6	;volatile
 28460     0014  2816               	goto	u1385_21
 28461     0015  2817               	goto	u1385_20
 28462     0016                     u1385_21:
 28463     0016  2853               	goto	i1l1932
 28464     0017                     u1385_20:
 28465     0017                     i1l16363:
 28466                           
 28467                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 28468     0017  1F19               	btfss	25,6	;volatile
 28469     0018  281A               	goto	u1386_21
 28470     0019  281B               	goto	u1386_20
 28471     001A                     u1386_21:
 28472     001A  2826               	goto	i1l1923
 28473     001B                     u1386_20:
 28474     001B                     i1l16365:
 28475     001B  1F0F               	btfss	15,6	;volatile
 28476     001C  281E               	goto	u1387_21
 28477     001D  281F               	goto	u1387_20
 28478     001E                     u1387_21:
 28479     001E  2826               	goto	i1l1923
 28480     001F                     u1387_20:
 28481     001F                     i1l16367:
 28482                           
 28483                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART2_TxDefaultInterruptHandler();
 28484     001F  0141               	movlb	1	; select bank1
 28485     0020  086F               	movf	(_EUSART2_TxDefaultInterruptHandler+1)^(0+128),w
 28486     0021  008A               	movwf	10
 28487     0022  086E               	movf	_EUSART2_TxDefaultInterruptHandler^(0+128),w
 28488     0023  000A               	callw
 28489     0024  3180               	pagesel	$
 28490                           
 28491                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 28492     0025  2853               	goto	i1l1932
 28493     0026                     i1l1923:	
 28494                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.RC2IE == 1 && PIR
      +                          3bits.RC2IF == 1)
 28495                           
 28496     0026  1F99               	btfss	25,7	;volatile
 28497     0027  2829               	goto	u1388_21
 28498     0028  282A               	goto	u1388_20
 28499     0029                     u1388_21:
 28500     0029  2835               	goto	i1l1925
 28501     002A                     u1388_20:
 28502     002A                     i1l16369:
 28503     002A  1F8F               	btfss	15,7	;volatile
 28504     002B  282D               	goto	u1389_21
 28505     002C  282E               	goto	u1389_20
 28506     002D                     u1389_21:
 28507     002D  2835               	goto	i1l1925
 28508     002E                     u1389_20:
 28509     002E                     i1l16371:
 28510                           
 28511                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             EUSART2_RxDefaultInterruptHandler();
 28512     002E  0141               	movlb	1	; select bank1
 28513     002F  086D               	movf	(_EUSART2_RxDefaultInterruptHandler+1)^(0+128),w
 28514     0030  008A               	movwf	10
 28515     0031  086C               	movf	_EUSART2_RxDefaultInterruptHandler^(0+128),w
 28516     0032  000A               	callw
 28517     0033  3180               	pagesel	$
 28518                           
 28519                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 28520     0034  2853               	goto	i1l1932
 28521     0035                     i1l1925:	
 28522                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.TX1IE == 1 && PIR
      +                          3bits.TX1IF == 1)
 28523                           
 28524     0035  1E19               	btfss	25,4	;volatile
 28525     0036  2838               	goto	u1390_21
 28526     0037  2839               	goto	u1390_20
 28527     0038                     u1390_21:
 28528     0038  2844               	goto	i1l1927
 28529     0039                     u1390_20:
 28530     0039                     i1l16373:
 28531     0039  1E0F               	btfss	15,4	;volatile
 28532     003A  283C               	goto	u1391_21
 28533     003B  283D               	goto	u1391_20
 28534     003C                     u1391_21:
 28535     003C  2844               	goto	i1l1927
 28536     003D                     u1391_20:
 28537     003D                     i1l16375:
 28538                           
 28539                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             EUSART1_TxDefaultInterruptHandler();
 28540     003D  0142               	movlb	2	; select bank2
 28541     003E  0866               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+256),w
 28542     003F  008A               	movwf	10
 28543     0040  0865               	movf	_EUSART1_TxDefaultInterruptHandler^(0+256),w
 28544     0041  000A               	callw
 28545     0042  3180               	pagesel	$
 28546                           
 28547                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 28548     0043  2853               	goto	i1l1932
 28549     0044                     i1l1927:	
 28550                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 28551                           
 28552     0044  1E99               	btfss	25,5	;volatile
 28553     0045  2847               	goto	u1392_21
 28554     0046  2848               	goto	u1392_20
 28555     0047                     u1392_21:
 28556     0047  2853               	goto	i1l1926
 28557     0048                     u1392_20:
 28558     0048                     i1l16377:
 28559     0048  1E8F               	btfss	15,5	;volatile
 28560     0049  284B               	goto	u1393_21
 28561     004A  284C               	goto	u1393_20
 28562     004B                     u1393_21:
 28563     004B  2853               	goto	i1l1926
 28564     004C                     u1393_20:
 28565     004C                     i1l16379:
 28566                           
 28567                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART1_RxDefaultInterruptHandler();
 28568     004C  0142               	movlb	2	; select bank2
 28569     004D  0864               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256),w
 28570     004E  008A               	movwf	10
 28571     004F  0863               	movf	_EUSART1_RxDefaultInterruptHandler^(0+256),w
 28572     0050  000A               	callw
 28573     0051  3180               	pagesel	$
 28574                           
 28575                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 28576     0052  2853               	goto	i1l1932
 28577     0053                     i1l1926:
 28578     0053                     i1l1932:
 28579     0053  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 28580     0054  0009               	retfie
 28581     0055                     __end_of_INTERRUPT_InterruptManager:
 28582                           
 28583                           	psect	text159
 28584     1FBF                     __ptext159:	
 28585 ;; *************** function _PIN_MANAGER_IOC *****************
 28586 ;; Defined at:
 28587 ;;		line 142 in file "mcc_generated_files/pin_manager.c"
 28588 ;; Parameters:    Size  Location     Type
 28589 ;;		None
 28590 ;; Auto vars:     Size  Location     Type
 28591 ;;		None
 28592 ;; Return value:  Size  Location     Type
 28593 ;;                  1    wreg      void 
 28594 ;; Registers used:
 28595 ;;		wreg, status,2, status,0, pclath, cstack
 28596 ;; Tracked objects:
 28597 ;;		On entry : 0/0
 28598 ;;		On exit  : 0/0
 28599 ;;		Unchanged: 0/0
 28600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28605 ;;Total ram usage:        0 bytes
 28606 ;; Hardware stack levels used: 1
 28607 ;; Hardware stack levels required when called: 2
 28608 ;; This function calls:
 28609 ;;		_IOCAF6_ISR
 28610 ;; This function is called by:
 28611 ;;		_INTERRUPT_InterruptManager
 28612 ;; This function uses a non-reentrant model
 28613 ;;
 28614                           
 28615     1FBF                     _PIN_MANAGER_IOC:	
 28616                           ;psect for function _PIN_MANAGER_IOC
 28617                           
 28618     1FBF                     i1l10309:	
 28619                           ;incstack = 0
 28620 ;; hardware stack exceeded
 28621                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
 28622                           
 28623                           
 28624                           ;mcc_generated_files/pin_manager.c: 145:     if(IOCAFbits.IOCAF6 == 1)
 28625     1FBF  017E               	movlb	62	; select bank62
 28626     1FC0  1F3F               	btfss	63,6	;volatile
 28627     1FC1  2FC3               	goto	u712_21
 28628     1FC2  2FC4               	goto	u712_20
 28629     1FC3                     u712_21:
 28630     1FC3  2FC7               	goto	i1l2072
 28631     1FC4                     u712_20:
 28632     1FC4                     i1l10311:
 28633                           
 28634                           ;mcc_generated_files/pin_manager.c: 146:     {;mcc_generated_files/pin_manager.c: 147:  
      +                                 IOCAF6_ISR();
 28635     1FC4  3190  20B2  319F   	fcall	_IOCAF6_ISR
 28636     1FC7                     i1l2072:
 28637     1FC7  0008               	return
 28638     1FC8                     __end_of_PIN_MANAGER_IOC:
 28639                           
 28640                           	psect	text160
 28641     10B2                     __ptext160:	
 28642 ;; *************** function _IOCAF6_ISR *****************
 28643 ;; Defined at:
 28644 ;;		line 154 in file "mcc_generated_files/pin_manager.c"
 28645 ;; Parameters:    Size  Location     Type
 28646 ;;		None
 28647 ;; Auto vars:     Size  Location     Type
 28648 ;;		None
 28649 ;; Return value:  Size  Location     Type
 28650 ;;                  1    wreg      void 
 28651 ;; Registers used:
 28652 ;;		wreg, status,2, status,0, pclath, cstack
 28653 ;; Tracked objects:
 28654 ;;		On entry : 0/0
 28655 ;;		On exit  : 0/0
 28656 ;;		Unchanged: 0/0
 28657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28662 ;;Total ram usage:        0 bytes
 28663 ;; Hardware stack levels used: 1
 28664 ;; Hardware stack levels required when called: 1
 28665 ;; This function calls:
 28666 ;;		NULL
 28667 ;;		_IOCAF6_DefaultInterruptHandler
 28668 ;; This function is called by:
 28669 ;;		_PIN_MANAGER_IOC
 28670 ;; This function uses a non-reentrant model
 28671 ;;
 28672                           
 28673     10B2                     _IOCAF6_ISR:	
 28674                           ;psect for function _IOCAF6_ISR
 28675                           
 28676     10B2                     i1l9793:	
 28677                           ;incstack = 0
 28678 ;; hardware stack exceeded
 28679                           ; Regs used in _IOCAF6_ISR: [wreg+status,2+status,0+pclath+cstack]
 28680                           
 28681                           
 28682                           ;mcc_generated_files/pin_manager.c: 159:     if(IOCAF6_InterruptHandler)
 28683     10B2  0141               	movlb	1	; select bank1
 28684     10B3  086A               	movf	_IOCAF6_InterruptHandler^(0+128),w
 28685     10B4  046B               	iorwf	(_IOCAF6_InterruptHandler+1)^(0+128),w
 28686     10B5  1903               	btfsc	3,2
 28687     10B6  28B8               	goto	u669_21
 28688     10B7  28B9               	goto	u669_20
 28689     10B8                     u669_21:
 28690     10B8  28BE               	goto	i1l9797
 28691     10B9                     u669_20:
 28692     10B9                     i1l9795:
 28693                           
 28694                           ;mcc_generated_files/pin_manager.c: 160:     {;mcc_generated_files/pin_manager.c: 161:  
      +                                 IOCAF6_InterruptHandler();
 28695     10B9  086B               	movf	(_IOCAF6_InterruptHandler+1)^(0+128),w
 28696     10BA  008A               	movwf	10
 28697     10BB  086A               	movf	_IOCAF6_InterruptHandler^(0+128),w
 28698     10BC  000A               	callw
 28699     10BD  3190               	pagesel	$
 28700     10BE                     i1l9797:
 28701                           
 28702                           ;mcc_generated_files/pin_manager.c: 163:     IOCAFbits.IOCAF6 = 0;
 28703     10BE  017E               	movlb	62	; select bank62
 28704     10BF  133F               	bcf	63,6	;volatile
 28705     10C0                     i1l2076:
 28706     10C0  0008               	return
 28707     10C1                     __end_of_IOCAF6_ISR:
 28708                           
 28709                           	psect	text161
 28710     07FF                     __ptext161:	
 28711 ;; *************** function _IOCAF6_DefaultInterruptHandler *****************
 28712 ;; Defined at:
 28713 ;;		line 176 in file "mcc_generated_files/pin_manager.c"
 28714 ;; Parameters:    Size  Location     Type
 28715 ;;		None
 28716 ;; Auto vars:     Size  Location     Type
 28717 ;;		None
 28718 ;; Return value:  Size  Location     Type
 28719 ;;                  1    wreg      void 
 28720 ;; Registers used:
 28721 ;;		None
 28722 ;; Tracked objects:
 28723 ;;		On entry : 0/0
 28724 ;;		On exit  : 0/0
 28725 ;;		Unchanged: 0/0
 28726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28731 ;;Total ram usage:        0 bytes
 28732 ;; Hardware stack levels used: 1
 28733 ;; This function calls:
 28734 ;;		Nothing
 28735 ;; This function is called by:
 28736 ;;		_PIN_MANAGER_Initialize
 28737 ;;		_IOCAF6_ISR
 28738 ;; This function uses a non-reentrant model
 28739 ;;
 28740                           
 28741     07FF                     _IOCAF6_DefaultInterruptHandler:	
 28742                           ;psect for function _IOCAF6_DefaultInterruptHandler
 28743                           
 28744     07FF                     i1l2082:	
 28745                           ;incstack = 0
 28746 ;; hardware stack exceeded
 28747                           ; Regs used in _IOCAF6_DefaultInterruptHandler: []
 28748                           
 28749     07FF  0008               	return
 28750     0800                     __end_of_IOCAF6_DefaultInterruptHandler:
 28751                           
 28752                           	psect	text162
 28753     13FF                     __ptext162:	
 28754 ;; *************** function _EUSART1_Transmit_ISR *****************
 28755 ;; Defined at:
 28756 ;;		line 206 in file "mcc_generated_files/eusart1.c"
 28757 ;; Parameters:    Size  Location     Type
 28758 ;;		None
 28759 ;; Auto vars:     Size  Location     Type
 28760 ;;		None
 28761 ;; Return value:  Size  Location     Type
 28762 ;;                  1    wreg      void 
 28763 ;; Registers used:
 28764 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 28765 ;; Tracked objects:
 28766 ;;		On entry : 0/0
 28767 ;;		On exit  : 0/0
 28768 ;;		Unchanged: 0/0
 28769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28772 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28773 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28774 ;;Total ram usage:        1 bytes
 28775 ;; Hardware stack levels used: 1
 28776 ;; This function calls:
 28777 ;;		Nothing
 28778 ;; This function is called by:
 28779 ;;		_EUSART1_Initialize
 28780 ;;		_INTERRUPT_InterruptManager
 28781 ;; This function uses a non-reentrant model
 28782 ;;
 28783                           
 28784     13FF                     _EUSART1_Transmit_ISR:	
 28785                           ;psect for function _EUSART1_Transmit_ISR
 28786                           
 28787     13FF                     i1l10277:	
 28788                           ;incstack = 0
 28789                           ; Regs used in _EUSART1_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 28790                           
 28791                           
 28792                           ;mcc_generated_files/eusart1.c: 210:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 28793     13FF  3008               	movlw	8
 28794     1400  0140               	movlb	0	; select bank0
 28795     1401  025B               	subwf	_eusart1TxBufferRemaining,w	;volatile
 28796     1402  1803               	skipnc
 28797     1403  2C05               	goto	u707_21
 28798     1404  2C06               	goto	u707_20
 28799     1405                     u707_21:
 28800     1405  2C1E               	goto	i1l1857
 28801     1406                     u707_20:
 28802     1406                     i1l10279:
 28803                           
 28804                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 28805     1406  085C               	movf	_eusart1TxTail,w
 28806     1407  3EC6               	addlw	(low (_eusart1TxBuffer| 0))& (0+255)
 28807     1408  0086               	movwf	6
 28808     1409  0187               	clrf	7
 28809     140A  0801               	movf	1,w
 28810     140B  0142               	movlb	2	; select bank2
 28811     140C  009A               	movwf	26	;volatile
 28812     140D                     i1l10281:
 28813     140D  3001               	movlw	1
 28814     140E  00F0               	movwf	??_EUSART1_Transmit_ISR
 28815     140F  0870               	movf	??_EUSART1_Transmit_ISR,w
 28816     1410  0140               	movlb	0	; select bank0
 28817     1411  07DC               	addwf	_eusart1TxTail,f	;volatile
 28818     1412                     i1l10283:
 28819                           
 28820                           ;mcc_generated_files/eusart1.c: 213:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 28821     1412  3008               	movlw	8
 28822     1413  025C               	subwf	_eusart1TxTail,w	;volatile
 28823     1414  1C03               	skipc
 28824     1415  2C17               	goto	u708_21
 28825     1416  2C18               	goto	u708_20
 28826     1417                     u708_21:
 28827     1417  2C19               	goto	i1l10287
 28828     1418                     u708_20:
 28829     1418                     i1l10285:
 28830                           
 28831                           ;mcc_generated_files/eusart1.c: 214:         {;mcc_generated_files/eusart1.c: 215:      
      +                                 eusart1TxTail = 0;
 28832     1418  01DC               	clrf	_eusart1TxTail	;volatile
 28833     1419                     i1l10287:
 28834                           
 28835                           ;mcc_generated_files/eusart1.c: 217:         eusart1TxBufferRemaining++;
 28836     1419  3001               	movlw	1
 28837     141A  00F0               	movwf	??_EUSART1_Transmit_ISR
 28838     141B  0870               	movf	??_EUSART1_Transmit_ISR,w
 28839     141C  07DB               	addwf	_eusart1TxBufferRemaining,f	;volatile
 28840                           
 28841                           ;mcc_generated_files/eusart1.c: 218:     }
 28842     141D  2C20               	goto	i1l1860
 28843     141E                     i1l1857:	
 28844                           ;mcc_generated_files/eusart1.c: 219:     else
 28845                           
 28846                           
 28847                           ;mcc_generated_files/eusart1.c: 220:     {;mcc_generated_files/eusart1.c: 221:         P
      +                          IE3bits.TX1IE = 0;
 28848     141E  014E               	movlb	14	; select bank14
 28849     141F  1219               	bcf	25,4	;volatile
 28850     1420                     i1l1860:
 28851     1420  0008               	return
 28852     1421                     __end_of_EUSART1_Transmit_ISR:
 28853                           
 28854                           	psect	text163
 28855     13DD                     __ptext163:	
 28856 ;; *************** function _EUSART2_Transmit_ISR *****************
 28857 ;; Defined at:
 28858 ;;		line 197 in file "mcc_generated_files/eusart2.c"
 28859 ;; Parameters:    Size  Location     Type
 28860 ;;		None
 28861 ;; Auto vars:     Size  Location     Type
 28862 ;;		None
 28863 ;; Return value:  Size  Location     Type
 28864 ;;                  1    wreg      void 
 28865 ;; Registers used:
 28866 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 28867 ;; Tracked objects:
 28868 ;;		On entry : 0/0
 28869 ;;		On exit  : 0/0
 28870 ;;		Unchanged: 0/0
 28871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28874 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28875 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28876 ;;Total ram usage:        1 bytes
 28877 ;; Hardware stack levels used: 1
 28878 ;; This function calls:
 28879 ;;		Nothing
 28880 ;; This function is called by:
 28881 ;;		_EUSART2_Initialize
 28882 ;;		_INTERRUPT_InterruptManager
 28883 ;; This function uses a non-reentrant model
 28884 ;;
 28885                           
 28886     13DD                     _EUSART2_Transmit_ISR:	
 28887                           ;psect for function _EUSART2_Transmit_ISR
 28888                           
 28889     13DD                     i1l10245:	
 28890                           ;incstack = 0
 28891                           ; Regs used in _EUSART2_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 28892                           
 28893                           
 28894                           ;mcc_generated_files/eusart2.c: 201:     if(sizeof(eusart2TxBuffer) > eusart2TxBufferRem
      +                          aining)
 28895     13DD  3008               	movlw	8
 28896     13DE  0140               	movlb	0	; select bank0
 28897     13DF  0261               	subwf	_eusart2TxBufferRemaining,w	;volatile
 28898     13E0  1803               	skipnc
 28899     13E1  2BE3               	goto	u702_21
 28900     13E2  2BE4               	goto	u702_20
 28901     13E3                     u702_21:
 28902     13E3  2BFC               	goto	i1l1707
 28903     13E4                     u702_20:
 28904     13E4                     i1l10247:
 28905                           
 28906                           ;mcc_generated_files/eusart2.c: 202:     {;mcc_generated_files/eusart2.c: 203:         T
      +                          X2REG = eusart2TxBuffer[eusart2TxTail++];
 28907     13E4  0862               	movf	_eusart2TxTail,w
 28908     13E5  3EDE               	addlw	(low (_eusart2TxBuffer| 0))& (0+255)
 28909     13E6  0086               	movwf	6
 28910     13E7  0187               	clrf	7
 28911     13E8  0801               	movf	1,w
 28912     13E9  0154               	movlb	20	; select bank20
 28913     13EA  009A               	movwf	26	;volatile
 28914     13EB                     i1l10249:
 28915     13EB  3001               	movlw	1
 28916     13EC  00F0               	movwf	??_EUSART2_Transmit_ISR
 28917     13ED  0870               	movf	??_EUSART2_Transmit_ISR,w
 28918     13EE  0140               	movlb	0	; select bank0
 28919     13EF  07E2               	addwf	_eusart2TxTail,f	;volatile
 28920     13F0                     i1l10251:
 28921                           
 28922                           ;mcc_generated_files/eusart2.c: 204:         if(sizeof(eusart2TxBuffer) <= eusart2TxTail
      +                          )
 28923     13F0  3008               	movlw	8
 28924     13F1  0262               	subwf	_eusart2TxTail,w	;volatile
 28925     13F2  1C03               	skipc
 28926     13F3  2BF5               	goto	u703_21
 28927     13F4  2BF6               	goto	u703_20
 28928     13F5                     u703_21:
 28929     13F5  2BF7               	goto	i1l10255
 28930     13F6                     u703_20:
 28931     13F6                     i1l10253:
 28932                           
 28933                           ;mcc_generated_files/eusart2.c: 205:         {;mcc_generated_files/eusart2.c: 206:      
      +                                 eusart2TxTail = 0;
 28934     13F6  01E2               	clrf	_eusart2TxTail	;volatile
 28935     13F7                     i1l10255:
 28936                           
 28937                           ;mcc_generated_files/eusart2.c: 208:         eusart2TxBufferRemaining++;
 28938     13F7  3001               	movlw	1
 28939     13F8  00F0               	movwf	??_EUSART2_Transmit_ISR
 28940     13F9  0870               	movf	??_EUSART2_Transmit_ISR,w
 28941     13FA  07E1               	addwf	_eusart2TxBufferRemaining,f	;volatile
 28942                           
 28943                           ;mcc_generated_files/eusart2.c: 209:     }
 28944     13FB  2BFE               	goto	i1l1710
 28945     13FC                     i1l1707:	
 28946                           ;mcc_generated_files/eusart2.c: 210:     else
 28947                           
 28948                           
 28949                           ;mcc_generated_files/eusart2.c: 211:     {;mcc_generated_files/eusart2.c: 212:         P
      +                          IE3bits.TX2IE = 0;
 28950     13FC  014E               	movlb	14	; select bank14
 28951     13FD  1319               	bcf	25,6	;volatile
 28952     13FE                     i1l1710:
 28953     13FE  0008               	return
 28954     13FF                     __end_of_EUSART2_Transmit_ISR:
 28955                           
 28956                           	psect	text164
 28957     0888                     __ptext164:	
 28958 ;; *************** function _EUSART1_Receive_ISR *****************
 28959 ;; Defined at:
 28960 ;;		line 225 in file "mcc_generated_files/eusart1.c"
 28961 ;; Parameters:    Size  Location     Type
 28962 ;;		None
 28963 ;; Auto vars:     Size  Location     Type
 28964 ;;		None
 28965 ;; Return value:  Size  Location     Type
 28966 ;;                  1    wreg      void 
 28967 ;; Registers used:
 28968 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 28969 ;; Tracked objects:
 28970 ;;		On entry : 0/0
 28971 ;;		On exit  : 0/0
 28972 ;;		Unchanged: 0/0
 28973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 28974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 28978 ;;Total ram usage:        0 bytes
 28979 ;; Hardware stack levels used: 1
 28980 ;; Hardware stack levels required when called: 2
 28981 ;; This function calls:
 28982 ;;		NULL
 28983 ;;		_EUSART1_DefaultErrorHandler
 28984 ;;		_EUSART1_DefaultFramingErrorHandler
 28985 ;;		_EUSART1_DefaultOverrunErrorHandler
 28986 ;;		_EUSART1_RxDataHandler
 28987 ;; This function is called by:
 28988 ;;		_EUSART1_Initialize
 28989 ;;		_INTERRUPT_InterruptManager
 28990 ;; This function uses a non-reentrant model
 28991 ;;
 28992                           
 28993     0888                     _EUSART1_Receive_ISR:	
 28994                           ;psect for function _EUSART1_Receive_ISR
 28995                           
 28996     0888                     i1l10289:	
 28997                           ;incstack = 0
 28998 ;; hardware stack exceeded
 28999                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 29000                           
 29001                           
 29002                           ;mcc_generated_files/eusart1.c: 228:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 29003     0888  0140               	movlb	0	; select bank0
 29004     0889  085A               	movf	_eusart1RxHead,w	;volatile
 29005     088A  3EBE               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 29006     088B  0086               	movwf	6
 29007     088C  0187               	clrf	7
 29008     088D  0181               	clrf	1
 29009     088E                     i1l10291:
 29010                           
 29011                           ;mcc_generated_files/eusart1.c: 230:     if(RC1STAbits.FERR){
 29012     088E  0142               	movlb	2	; select bank2
 29013     088F  1D1D               	btfss	29,2	;volatile
 29014     0890  2892               	goto	u709_21
 29015     0891  2893               	goto	u709_20
 29016     0892                     u709_21:
 29017     0892  289F               	goto	i1l10297
 29018     0893                     u709_20:
 29019     0893                     i1l10293:
 29020                           
 29021                           ;mcc_generated_files/eusart1.c: 231:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 29022     0893  0140               	movlb	0	; select bank0
 29023     0894  085A               	movf	_eusart1RxHead,w	;volatile
 29024     0895  3EBE               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 29025     0896  0086               	movwf	6
 29026     0897  0187               	clrf	7
 29027     0898  1481               	bsf	1,1
 29028     0899                     i1l10295:
 29029                           
 29030                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_FramingErrorHandler();
 29031     0899  0142               	movlb	2	; select bank2
 29032     089A  0862               	movf	(_EUSART1_FramingErrorHandler+1)^(0+256),w
 29033     089B  008A               	movwf	10
 29034     089C  0861               	movf	_EUSART1_FramingErrorHandler^(0+256),w
 29035     089D  000A               	callw
 29036     089E  3188               	pagesel	$
 29037     089F                     i1l10297:
 29038                           
 29039                           ;mcc_generated_files/eusart1.c: 235:     if(RC1STAbits.OERR){
 29040     089F  0142               	movlb	2	; select bank2
 29041     08A0  1C9D               	btfss	29,1	;volatile
 29042     08A1  28A3               	goto	u710_21
 29043     08A2  28A4               	goto	u710_20
 29044     08A3                     u710_21:
 29045     08A3  28B0               	goto	i1l10303
 29046     08A4                     u710_20:
 29047     08A4                     i1l10299:
 29048                           
 29049                           ;mcc_generated_files/eusart1.c: 236:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 29050     08A4  0140               	movlb	0	; select bank0
 29051     08A5  085A               	movf	_eusart1RxHead,w	;volatile
 29052     08A6  3EBE               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 29053     08A7  0086               	movwf	6
 29054     08A8  0187               	clrf	7
 29055     08A9  1501               	bsf	1,2
 29056     08AA                     i1l10301:
 29057                           
 29058                           ;mcc_generated_files/eusart1.c: 237:         EUSART1_OverrunErrorHandler();
 29059     08AA  0142               	movlb	2	; select bank2
 29060     08AB  0860               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+256),w
 29061     08AC  008A               	movwf	10
 29062     08AD  085F               	movf	_EUSART1_OverrunErrorHandler^(0+256),w
 29063     08AE  000A               	callw
 29064     08AF  3188               	pagesel	$
 29065     08B0                     i1l10303:
 29066                           
 29067                           ;mcc_generated_files/eusart1.c: 240:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 29068     08B0  0140               	movlb	0	; select bank0
 29069     08B1  085A               	movf	_eusart1RxHead,w	;volatile
 29070     08B2  3EBE               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 29071     08B3  0086               	movwf	6
 29072     08B4  0187               	clrf	7
 29073     08B5  0801               	movf	1,w
 29074     08B6  1903               	btfsc	3,2
 29075     08B7  28B9               	goto	u711_21
 29076     08B8  28BA               	goto	u711_20
 29077     08B9                     u711_21:
 29078     08B9  28C1               	goto	i1l10307
 29079     08BA                     u711_20:
 29080     08BA                     i1l10305:
 29081                           
 29082                           ;mcc_generated_files/eusart1.c: 241:         EUSART1_ErrorHandler();
 29083     08BA  0142               	movlb	2	; select bank2
 29084     08BB  085E               	movf	(_EUSART1_ErrorHandler+1)^(0+256),w
 29085     08BC  008A               	movwf	10
 29086     08BD  085D               	movf	_EUSART1_ErrorHandler^(0+256),w
 29087     08BE  000A               	callw
 29088     08BF  3188               	pagesel	$
 29089                           
 29090                           ;mcc_generated_files/eusart1.c: 242:     } else {
 29091     08C0  28C4               	goto	i1l1867
 29092     08C1                     i1l10307:
 29093                           
 29094                           ;mcc_generated_files/eusart1.c: 243:         EUSART1_RxDataHandler();
 29095     08C1  3192  22E1  3188   	fcall	_EUSART1_RxDataHandler
 29096     08C4                     i1l1867:
 29097     08C4  0008               	return
 29098     08C5                     __end_of_EUSART1_Receive_ISR:
 29099                           
 29100                           	psect	text165
 29101     084F                     __ptext165:	
 29102 ;; *************** function _EUSART2_Receive_ISR *****************
 29103 ;; Defined at:
 29104 ;;		line 216 in file "mcc_generated_files/eusart2.c"
 29105 ;; Parameters:    Size  Location     Type
 29106 ;;		None
 29107 ;; Auto vars:     Size  Location     Type
 29108 ;;		None
 29109 ;; Return value:  Size  Location     Type
 29110 ;;                  1    wreg      void 
 29111 ;; Registers used:
 29112 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 29113 ;; Tracked objects:
 29114 ;;		On entry : 0/0
 29115 ;;		On exit  : 0/0
 29116 ;;		Unchanged: 0/0
 29117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29122 ;;Total ram usage:        0 bytes
 29123 ;; Hardware stack levels used: 1
 29124 ;; Hardware stack levels required when called: 2
 29125 ;; This function calls:
 29126 ;;		NULL
 29127 ;;		_EUSART2_DefaultErrorHandler
 29128 ;;		_EUSART2_DefaultFramingErrorHandler
 29129 ;;		_EUSART2_DefaultOverrunErrorHandler
 29130 ;;		_EUSART2_RxDataHandler
 29131 ;; This function is called by:
 29132 ;;		_EUSART2_Initialize
 29133 ;;		_INTERRUPT_InterruptManager
 29134 ;; This function uses a non-reentrant model
 29135 ;;
 29136                           
 29137     084F                     _EUSART2_Receive_ISR:	
 29138                           ;psect for function _EUSART2_Receive_ISR
 29139                           
 29140     084F                     i1l14541:	
 29141                           ;incstack = 0
 29142 ;; hardware stack exceeded
 29143                           ; Regs used in _EUSART2_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 29144                           
 29145                           
 29146                           ;mcc_generated_files/eusart2.c: 219:     eusart2RxStatusBuffer[eusart2RxHead].status = 0
      +                          ;
 29147     084F  087C               	movf	_eusart2RxHead,w	;volatile
 29148     0850  3ECE               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 29149     0851  0086               	movwf	6
 29150     0852  0187               	clrf	7
 29151     0853  0181               	clrf	1
 29152     0854                     i1l14543:
 29153                           
 29154                           ;mcc_generated_files/eusart2.c: 221:     if(RC2STAbits.FERR){
 29155     0854  0154               	movlb	20	; select bank20
 29156     0855  1D1D               	btfss	29,2	;volatile
 29157     0856  2858               	goto	u1169_21
 29158     0857  2859               	goto	u1169_20
 29159     0858                     u1169_21:
 29160     0858  2864               	goto	i1l14549
 29161     0859                     u1169_20:
 29162     0859                     i1l14545:
 29163                           
 29164                           ;mcc_generated_files/eusart2.c: 222:         eusart2RxStatusBuffer[eusart2RxHead].ferr =
      +                           1;
 29165     0859  087C               	movf	_eusart2RxHead,w	;volatile
 29166     085A  3ECE               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 29167     085B  0086               	movwf	6
 29168     085C  0187               	clrf	7
 29169     085D  1481               	bsf	1,1
 29170     085E                     i1l14547:
 29171                           
 29172                           ;mcc_generated_files/eusart2.c: 223:         EUSART2_FramingErrorHandler();
 29173     085E  0142               	movlb	2	; select bank2
 29174     085F  086C               	movf	(_EUSART2_FramingErrorHandler+1)^(0+256),w
 29175     0860  008A               	movwf	10
 29176     0861  086B               	movf	_EUSART2_FramingErrorHandler^(0+256),w
 29177     0862  000A               	callw
 29178     0863  3188               	pagesel	$
 29179     0864                     i1l14549:
 29180                           
 29181                           ;mcc_generated_files/eusart2.c: 226:     if(RC2STAbits.OERR){
 29182     0864  0154               	movlb	20	; select bank20
 29183     0865  1C9D               	btfss	29,1	;volatile
 29184     0866  2868               	goto	u1170_21
 29185     0867  2869               	goto	u1170_20
 29186     0868                     u1170_21:
 29187     0868  2874               	goto	i1l14555
 29188     0869                     u1170_20:
 29189     0869                     i1l14551:
 29190                           
 29191                           ;mcc_generated_files/eusart2.c: 227:         eusart2RxStatusBuffer[eusart2RxHead].oerr =
      +                           1;
 29192     0869  087C               	movf	_eusart2RxHead,w	;volatile
 29193     086A  3ECE               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 29194     086B  0086               	movwf	6
 29195     086C  0187               	clrf	7
 29196     086D  1501               	bsf	1,2
 29197     086E                     i1l14553:
 29198                           
 29199                           ;mcc_generated_files/eusart2.c: 228:         EUSART2_OverrunErrorHandler();
 29200     086E  0142               	movlb	2	; select bank2
 29201     086F  086A               	movf	(_EUSART2_OverrunErrorHandler+1)^(0+256),w
 29202     0870  008A               	movwf	10
 29203     0871  0869               	movf	_EUSART2_OverrunErrorHandler^(0+256),w
 29204     0872  000A               	callw
 29205     0873  3188               	pagesel	$
 29206     0874                     i1l14555:
 29207                           
 29208                           ;mcc_generated_files/eusart2.c: 231:     if(eusart2RxStatusBuffer[eusart2RxHead].status)
      +                          {
 29209     0874  087C               	movf	_eusart2RxHead,w	;volatile
 29210     0875  3ECE               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 29211     0876  0086               	movwf	6
 29212     0877  0187               	clrf	7
 29213     0878  0801               	movf	1,w
 29214     0879  1903               	btfsc	3,2
 29215     087A  287C               	goto	u1171_21
 29216     087B  287D               	goto	u1171_20
 29217     087C                     u1171_21:
 29218     087C  2884               	goto	i1l14559
 29219     087D                     u1171_20:
 29220     087D                     i1l14557:
 29221                           
 29222                           ;mcc_generated_files/eusart2.c: 232:         EUSART2_ErrorHandler();
 29223     087D  0142               	movlb	2	; select bank2
 29224     087E  0868               	movf	(_EUSART2_ErrorHandler+1)^(0+256),w
 29225     087F  008A               	movwf	10
 29226     0880  0867               	movf	_EUSART2_ErrorHandler^(0+256),w
 29227     0881  000A               	callw
 29228     0882  3188               	pagesel	$
 29229                           
 29230                           ;mcc_generated_files/eusart2.c: 233:     } else {
 29231     0883  2887               	goto	i1l1717
 29232     0884                     i1l14559:
 29233                           
 29234                           ;mcc_generated_files/eusart2.c: 234:         EUSART2_RxDataHandler();
 29235     0884  3192  2267  3188   	fcall	_EUSART2_RxDataHandler
 29236     0887                     i1l1717:
 29237     0887  0008               	return
 29238     0888                     __end_of_EUSART2_Receive_ISR:
 29239                           
 29240                           	psect	text166
 29241     1EE5                     __ptext166:	
 29242 ;; *************** function _EUSART2_DefaultOverrunErrorHandler *****************
 29243 ;; Defined at:
 29244 ;;		line 252 in file "mcc_generated_files/eusart2.c"
 29245 ;; Parameters:    Size  Location     Type
 29246 ;;		None
 29247 ;; Auto vars:     Size  Location     Type
 29248 ;;		None
 29249 ;; Return value:  Size  Location     Type
 29250 ;;                  1    wreg      void 
 29251 ;; Registers used:
 29252 ;;		None
 29253 ;; Tracked objects:
 29254 ;;		On entry : 0/0
 29255 ;;		On exit  : 0/0
 29256 ;;		Unchanged: 0/0
 29257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29262 ;;Total ram usage:        0 bytes
 29263 ;; Hardware stack levels used: 1
 29264 ;; This function calls:
 29265 ;;		Nothing
 29266 ;; This function is called by:
 29267 ;;		_EUSART2_Initialize
 29268 ;;		_EUSART2_Receive_ISR
 29269 ;; This function uses a non-reentrant model
 29270 ;;
 29271                           
 29272     1EE5                     _EUSART2_DefaultOverrunErrorHandler:	
 29273                           ;psect for function _EUSART2_DefaultOverrunErrorHandler
 29274                           
 29275     1EE5                     i1l14151:	
 29276                           ;incstack = 0
 29277 ;; hardware stack exceeded
 29278                           ; Regs used in _EUSART2_DefaultOverrunErrorHandler: []
 29279                           
 29280                           
 29281                           ;mcc_generated_files/eusart2.c: 255:     RC2STAbits.CREN = 0;
 29282     1EE5  0154               	movlb	20	; select bank20
 29283     1EE6  121D               	bcf	29,4	;volatile
 29284                           
 29285                           ;mcc_generated_files/eusart2.c: 256:     RC2STAbits.CREN = 1;
 29286     1EE7  161D               	bsf	29,4	;volatile
 29287     1EE8                     i1l1727:
 29288     1EE8  0008               	return
 29289     1EE9                     __end_of_EUSART2_DefaultOverrunErrorHandler:
 29290                           
 29291                           	psect	text167
 29292     1EB6                     __ptext167:	
 29293 ;; *************** function _EUSART2_DefaultFramingErrorHandler *****************
 29294 ;; Defined at:
 29295 ;;		line 250 in file "mcc_generated_files/eusart2.c"
 29296 ;; Parameters:    Size  Location     Type
 29297 ;;		None
 29298 ;; Auto vars:     Size  Location     Type
 29299 ;;		None
 29300 ;; Return value:  Size  Location     Type
 29301 ;;                  1    wreg      void 
 29302 ;; Registers used:
 29303 ;;		None
 29304 ;; Tracked objects:
 29305 ;;		On entry : 0/0
 29306 ;;		On exit  : 0/0
 29307 ;;		Unchanged: 0/0
 29308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29313 ;;Total ram usage:        0 bytes
 29314 ;; Hardware stack levels used: 1
 29315 ;; This function calls:
 29316 ;;		Nothing
 29317 ;; This function is called by:
 29318 ;;		_EUSART2_Initialize
 29319 ;;		_EUSART2_Receive_ISR
 29320 ;; This function uses a non-reentrant model
 29321 ;;
 29322                           
 29323     1EB6                     _EUSART2_DefaultFramingErrorHandler:	
 29324                           ;psect for function _EUSART2_DefaultFramingErrorHandler
 29325                           
 29326     1EB6                     i1l1724:	
 29327                           ;incstack = 0
 29328 ;; hardware stack exceeded
 29329                           ; Regs used in _EUSART2_DefaultFramingErrorHandler: []
 29330                           
 29331     1EB6  0008               	return
 29332     1EB7                     __end_of_EUSART2_DefaultFramingErrorHandler:
 29333                           
 29334                           	psect	text168
 29335     1EE1                     __ptext168:	
 29336 ;; *************** function _EUSART2_DefaultErrorHandler *****************
 29337 ;; Defined at:
 29338 ;;		line 260 in file "mcc_generated_files/eusart2.c"
 29339 ;; Parameters:    Size  Location     Type
 29340 ;;		None
 29341 ;; Auto vars:     Size  Location     Type
 29342 ;;		None
 29343 ;; Return value:  Size  Location     Type
 29344 ;;                  1    wreg      void 
 29345 ;; Registers used:
 29346 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 29347 ;; Tracked objects:
 29348 ;;		On entry : 0/0
 29349 ;;		On exit  : 0/0
 29350 ;;		Unchanged: 0/0
 29351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29356 ;;Total ram usage:        0 bytes
 29357 ;; Hardware stack levels used: 1
 29358 ;; Hardware stack levels required when called: 1
 29359 ;; This function calls:
 29360 ;;		_EUSART2_RxDataHandler
 29361 ;; This function is called by:
 29362 ;;		_EUSART2_Initialize
 29363 ;;		_EUSART2_Receive_ISR
 29364 ;; This function uses a non-reentrant model
 29365 ;;
 29366                           
 29367     1EE1                     _EUSART2_DefaultErrorHandler:	
 29368                           ;psect for function _EUSART2_DefaultErrorHandler
 29369                           
 29370     1EE1                     i1l14153:	
 29371                           ;incstack = 0
 29372 ;; hardware stack exceeded
 29373                           ; Regs used in _EUSART2_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 29374                           
 29375                           
 29376                           ;mcc_generated_files/eusart2.c: 261:     EUSART2_RxDataHandler();
 29377     1EE1  3192  2267  319E   	fcall	_EUSART2_RxDataHandler
 29378     1EE4                     i1l1730:
 29379     1EE4  0008               	return
 29380     1EE5                     __end_of_EUSART2_DefaultErrorHandler:
 29381                           
 29382                           	psect	text169
 29383     1267                     __ptext169:	
 29384 ;; *************** function _EUSART2_RxDataHandler *****************
 29385 ;; Defined at:
 29386 ;;		line 240 in file "mcc_generated_files/eusart2.c"
 29387 ;; Parameters:    Size  Location     Type
 29388 ;;		None
 29389 ;; Auto vars:     Size  Location     Type
 29390 ;;		None
 29391 ;; Return value:  Size  Location     Type
 29392 ;;                  1    wreg      void 
 29393 ;; Registers used:
 29394 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 29395 ;; Tracked objects:
 29396 ;;		On entry : 0/0
 29397 ;;		On exit  : 0/0
 29398 ;;		Unchanged: 0/0
 29399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29402 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29403 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29404 ;;Total ram usage:        1 bytes
 29405 ;; Hardware stack levels used: 1
 29406 ;; This function calls:
 29407 ;;		Nothing
 29408 ;; This function is called by:
 29409 ;;		_EUSART2_Receive_ISR
 29410 ;;		_EUSART2_DefaultErrorHandler
 29411 ;; This function uses a non-reentrant model
 29412 ;;
 29413                           
 29414     1267                     _EUSART2_RxDataHandler:	
 29415                           ;psect for function _EUSART2_RxDataHandler
 29416                           
 29417     1267                     i1l13505:	
 29418                           ;incstack = 0
 29419 ;; hardware stack exceeded
 29420                           ; Regs used in _EUSART2_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 29421                           
 29422                           
 29423                           ;mcc_generated_files/eusart2.c: 242:     eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 29424     1267  087C               	movf	_eusart2RxHead,w
 29425     1268  3ED6               	addlw	(low (_eusart2RxBuffer| 0))& (0+255)
 29426     1269  0086               	movwf	6
 29427     126A  0187               	clrf	7
 29428     126B  0154               	movlb	20	; select bank20
 29429     126C  0819               	movf	25,w	;volatile
 29430     126D  0081               	movwf	1
 29431     126E                     i1l13507:
 29432     126E  3001               	movlw	1
 29433     126F  00F0               	movwf	??_EUSART2_RxDataHandler
 29434     1270  0870               	movf	??_EUSART2_RxDataHandler,w
 29435     1271  07FC               	addwf	_eusart2RxHead,f	;volatile
 29436     1272                     i1l13509:
 29437                           
 29438                           ;mcc_generated_files/eusart2.c: 243:     if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 29439     1272  3008               	movlw	8
 29440     1273  027C               	subwf	_eusart2RxHead,w	;volatile
 29441     1274  1C03               	skipc
 29442     1275  2A77               	goto	u1038_21
 29443     1276  2A78               	goto	u1038_20
 29444     1277                     u1038_21:
 29445     1277  2A79               	goto	i1l13513
 29446     1278                     u1038_20:
 29447     1278                     i1l13511:
 29448                           
 29449                           ;mcc_generated_files/eusart2.c: 244:     {;mcc_generated_files/eusart2.c: 245:         e
      +                          usart2RxHead = 0;
 29450     1278  01FC               	clrf	_eusart2RxHead	;volatile
 29451     1279                     i1l13513:
 29452                           
 29453                           ;mcc_generated_files/eusart2.c: 247:     eusart2RxCount++;
 29454     1279  3001               	movlw	1
 29455     127A  00F0               	movwf	??_EUSART2_RxDataHandler
 29456     127B  0870               	movf	??_EUSART2_RxDataHandler,w
 29457     127C  0140               	movlb	0	; select bank0
 29458     127D  07DF               	addwf	_eusart2RxCount,f	;volatile
 29459     127E                     i1l1721:
 29460     127E  0008               	return
 29461     127F                     __end_of_EUSART2_RxDataHandler:
 29462                           
 29463                           	psect	text170
 29464     1EDD                     __ptext170:	
 29465 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 29466 ;; Defined at:
 29467 ;;		line 261 in file "mcc_generated_files/eusart1.c"
 29468 ;; Parameters:    Size  Location     Type
 29469 ;;		None
 29470 ;; Auto vars:     Size  Location     Type
 29471 ;;		None
 29472 ;; Return value:  Size  Location     Type
 29473 ;;                  1    wreg      void 
 29474 ;; Registers used:
 29475 ;;		None
 29476 ;; Tracked objects:
 29477 ;;		On entry : 0/0
 29478 ;;		On exit  : 0/0
 29479 ;;		Unchanged: 0/0
 29480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29485 ;;Total ram usage:        0 bytes
 29486 ;; Hardware stack levels used: 1
 29487 ;; This function calls:
 29488 ;;		Nothing
 29489 ;; This function is called by:
 29490 ;;		_EUSART1_Initialize
 29491 ;;		_EUSART1_Receive_ISR
 29492 ;; This function uses a non-reentrant model
 29493 ;;
 29494                           
 29495     1EDD                     _EUSART1_DefaultOverrunErrorHandler:	
 29496                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 29497                           
 29498     1EDD                     i1l9699:	
 29499                           ;incstack = 0
 29500 ;; hardware stack exceeded
 29501                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 29502                           
 29503                           
 29504                           ;mcc_generated_files/eusart1.c: 264:     RC1STAbits.CREN = 0;
 29505     1EDD  0142               	movlb	2	; select bank2
 29506     1EDE  121D               	bcf	29,4	;volatile
 29507                           
 29508                           ;mcc_generated_files/eusart1.c: 265:     RC1STAbits.CREN = 1;
 29509     1EDF  161D               	bsf	29,4	;volatile
 29510     1EE0                     i1l1877:
 29511     1EE0  0008               	return
 29512     1EE1                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 29513                           
 29514                           	psect	text171
 29515     1EB5                     __ptext171:	
 29516 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 29517 ;; Defined at:
 29518 ;;		line 259 in file "mcc_generated_files/eusart1.c"
 29519 ;; Parameters:    Size  Location     Type
 29520 ;;		None
 29521 ;; Auto vars:     Size  Location     Type
 29522 ;;		None
 29523 ;; Return value:  Size  Location     Type
 29524 ;;                  1    wreg      void 
 29525 ;; Registers used:
 29526 ;;		None
 29527 ;; Tracked objects:
 29528 ;;		On entry : 0/0
 29529 ;;		On exit  : 0/0
 29530 ;;		Unchanged: 0/0
 29531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29536 ;;Total ram usage:        0 bytes
 29537 ;; Hardware stack levels used: 1
 29538 ;; This function calls:
 29539 ;;		Nothing
 29540 ;; This function is called by:
 29541 ;;		_EUSART1_Initialize
 29542 ;;		_EUSART1_Receive_ISR
 29543 ;; This function uses a non-reentrant model
 29544 ;;
 29545                           
 29546     1EB5                     _EUSART1_DefaultFramingErrorHandler:	
 29547                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 29548                           
 29549     1EB5                     i1l1874:	
 29550                           ;incstack = 0
 29551 ;; hardware stack exceeded
 29552                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 29553                           
 29554     1EB5  0008               	return
 29555     1EB6                     __end_of_EUSART1_DefaultFramingErrorHandler:
 29556                           
 29557                           	psect	text172
 29558     1ED9                     __ptext172:	
 29559 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 29560 ;; Defined at:
 29561 ;;		line 269 in file "mcc_generated_files/eusart1.c"
 29562 ;; Parameters:    Size  Location     Type
 29563 ;;		None
 29564 ;; Auto vars:     Size  Location     Type
 29565 ;;		None
 29566 ;; Return value:  Size  Location     Type
 29567 ;;                  1    wreg      void 
 29568 ;; Registers used:
 29569 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 29570 ;; Tracked objects:
 29571 ;;		On entry : 0/0
 29572 ;;		On exit  : 0/0
 29573 ;;		Unchanged: 0/0
 29574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29579 ;;Total ram usage:        0 bytes
 29580 ;; Hardware stack levels used: 1
 29581 ;; Hardware stack levels required when called: 1
 29582 ;; This function calls:
 29583 ;;		_EUSART1_RxDataHandler
 29584 ;; This function is called by:
 29585 ;;		_EUSART1_Initialize
 29586 ;;		_EUSART1_Receive_ISR
 29587 ;; This function uses a non-reentrant model
 29588 ;;
 29589                           
 29590     1ED9                     _EUSART1_DefaultErrorHandler:	
 29591                           ;psect for function _EUSART1_DefaultErrorHandler
 29592                           
 29593     1ED9                     i1l9701:	
 29594                           ;incstack = 0
 29595 ;; hardware stack exceeded
 29596                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 29597                           
 29598                           
 29599                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_RxDataHandler();
 29600     1ED9  3192  22E1  319E   	fcall	_EUSART1_RxDataHandler
 29601     1EDC                     i1l1880:
 29602     1EDC  0008               	return
 29603     1EDD                     __end_of_EUSART1_DefaultErrorHandler:
 29604                           
 29605                           	psect	text173
 29606     12E1                     __ptext173:	
 29607 ;; *************** function _EUSART1_RxDataHandler *****************
 29608 ;; Defined at:
 29609 ;;		line 249 in file "mcc_generated_files/eusart1.c"
 29610 ;; Parameters:    Size  Location     Type
 29611 ;;		None
 29612 ;; Auto vars:     Size  Location     Type
 29613 ;;		None
 29614 ;; Return value:  Size  Location     Type
 29615 ;;                  1    wreg      void 
 29616 ;; Registers used:
 29617 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 29618 ;; Tracked objects:
 29619 ;;		On entry : 0/0
 29620 ;;		On exit  : 0/0
 29621 ;;		Unchanged: 0/0
 29622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 29623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29625 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29626 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 29627 ;;Total ram usage:        1 bytes
 29628 ;; Hardware stack levels used: 1
 29629 ;; This function calls:
 29630 ;;		Nothing
 29631 ;; This function is called by:
 29632 ;;		_EUSART1_Receive_ISR
 29633 ;;		_EUSART1_DefaultErrorHandler
 29634 ;; This function uses a non-reentrant model
 29635 ;;
 29636                           
 29637     12E1                     _EUSART1_RxDataHandler:	
 29638                           ;psect for function _EUSART1_RxDataHandler
 29639                           
 29640     12E1                     i1l8991:	
 29641                           ;incstack = 0
 29642 ;; hardware stack exceeded
 29643                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 29644                           
 29645                           
 29646                           ;mcc_generated_files/eusart1.c: 251:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 29647     12E1  0140               	movlb	0	; select bank0
 29648     12E2  085A               	movf	_eusart1RxHead,w
 29649     12E3  3E44               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 29650     12E4  0086               	movwf	6
 29651     12E5  3001               	movlw	1	; select bank2/3
 29652     12E6  0087               	movwf	7
 29653     12E7  0142               	movlb	2	; select bank2
 29654     12E8  0819               	movf	25,w	;volatile
 29655     12E9  0081               	movwf	1
 29656     12EA                     i1l8993:
 29657     12EA  3001               	movlw	1
 29658     12EB  00F0               	movwf	??_EUSART1_RxDataHandler
 29659     12EC  0870               	movf	??_EUSART1_RxDataHandler,w
 29660     12ED  0140               	movlb	0	; select bank0
 29661     12EE  07DA               	addwf	_eusart1RxHead,f	;volatile
 29662     12EF                     i1l8995:
 29663                           
 29664                           ;mcc_generated_files/eusart1.c: 252:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 29665     12EF  3008               	movlw	8
 29666     12F0  025A               	subwf	_eusart1RxHead,w	;volatile
 29667     12F1  1C03               	skipc
 29668     12F2  2AF4               	goto	u564_21
 29669     12F3  2AF5               	goto	u564_20
 29670     12F4                     u564_21:
 29671     12F4  2AF6               	goto	i1l8999
 29672     12F5                     u564_20:
 29673     12F5                     i1l8997:
 29674                           
 29675                           ;mcc_generated_files/eusart1.c: 253:     {;mcc_generated_files/eusart1.c: 254:         e
      +                          usart1RxHead = 0;
 29676     12F5  01DA               	clrf	_eusart1RxHead	;volatile
 29677     12F6                     i1l8999:
 29678                           
 29679                           ;mcc_generated_files/eusart1.c: 256:     eusart1RxCount++;
 29680     12F6  3001               	movlw	1
 29681     12F7  00F0               	movwf	??_EUSART1_RxDataHandler
 29682     12F8  0870               	movf	??_EUSART1_RxDataHandler,w
 29683     12F9  07D8               	addwf	_eusart1RxCount,f	;volatile
 29684     12FA                     i1l1871:
 29685     12FA  0008               	return
 29686     12FB                     __end_of_EUSART1_RxDataHandler:
 29687     007E                     btemp	set	126	;btemp
 29688     007E                     int$flags	set	126
 29689     007E                     wtemp0	set	126
 29690                           
 29691                           	psect	idloc
 29692                           
 29693                           ;Config register IDLOC0 @ 0x8000
 29694                           ;	unspecified, using default values
 29695     8000                     	org	32768
 29696     8000  3FFF               	dw	16383
 29697                           
 29698                           ;Config register IDLOC1 @ 0x8001
 29699                           ;	unspecified, using default values
 29700     8001                     	org	32769
 29701     8001  3FFF               	dw	16383
 29702                           
 29703                           ;Config register IDLOC2 @ 0x8002
 29704                           ;	unspecified, using default values
 29705     8002                     	org	32770
 29706     8002  3FFF               	dw	16383
 29707                           
 29708                           ;Config register IDLOC3 @ 0x8003
 29709                           ;	unspecified, using default values
 29710     8003                     	org	32771
 29711     8003  3FFF               	dw	16383
 29712                           
 29713                           	psect	config
 29714                           
 29715                           ;Config register CONFIG1 @ 0x8007
 29716                           ;	External Oscillator mode selection bits
 29717                           ;	FEXTOSC = OFF, Oscillator not enabled
 29718                           ;	Power-up default value for COSC bits
 29719                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 29720                           ;	Clock Out Enable bit
 29721                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 29722                           ;	Clock Switch Enable bit
 29723                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 29724                           ;	Fail-Safe Clock Monitor Enable bit
 29725                           ;	FCMEN = ON, FSCM timer enabled
 29726     8007                     	org	32775
 29727     8007  3FEC               	dw	16364
 29728                           
 29729                           ;Config register CONFIG2 @ 0x8008
 29730                           ;	Master Clear Enable bit
 29731                           ;	MCLRE = ON, MCLR pin is Master Clear function
 29732                           ;	Power-up Timer Enable bit
 29733                           ;	PWRTS = OFF, PWRT disabled
 29734                           ;	Low-Power BOR enable bit
 29735                           ;	LPBOREN = OFF, ULPBOR disabled
 29736                           ;	Brown-out reset enable bits
 29737                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 29738                           ;	Brown-out Reset Voltage Selection
 29739                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
 29740                           ;	Zero-cross detect disable
 29741                           ;	ZCDDIS = OFF, Zero-cross detect circuit is disabled at POR.
 29742                           ;	Peripheral Pin Select one-way control
 29743                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 29744                           ;	Stack Overflow/Underflow Reset Enable bit
 29745                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 29746     8008                     	org	32776
 29747     8008  3FFF               	dw	16383
 29748                           
 29749                           ;Config register CONFIG3 @ 0x8009
 29750                           ;	WDT Period Select bits
 29751                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 29752                           ;	WDT operating mode
 29753                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 29754                           ;	WDT Window Select bits
 29755                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 29756                           ;	WDT input clock selector
 29757                           ;	WDTCCS = SC, Software Control
 29758     8009                     	org	32777
 29759     8009  3F9F               	dw	16287
 29760                           
 29761                           ;Config register CONFIG4 @ 0x800A
 29762                           ;	Boot Block Size Selection bits
 29763                           ;	BBSIZE = BB512, 512 words boot block size
 29764                           ;	Boot Block Enable bit
 29765                           ;	BBEN = OFF, Boot Block disabled
 29766                           ;	SAF Enable bit
 29767                           ;	SAFEN = OFF, SAF disabled
 29768                           ;	Application Block Write Protection bit
 29769                           ;	WRTAPP = OFF, Application Block not write protected
 29770                           ;	Boot Block Write Protection bit
 29771                           ;	WRTB = OFF, Boot Block not write protected
 29772                           ;	Configuration Register Write Protection bit
 29773                           ;	WRTC = OFF, Configuration Register not write protected
 29774                           ;	Data EEPROM write protection bit
 29775                           ;	WRTD = OFF, Data EEPROM NOT write protected
 29776                           ;	Storage Area Flash Write Protection bit
 29777                           ;	WRTSAF = OFF, SAF not write protected
 29778                           ;	Low Voltage Programming Enable bit
 29779                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 29780     800A                     	org	32778
 29781     800A  3FFF               	dw	16383
 29782                           
 29783                           ;Config register CONFIG5 @ 0x800B
 29784                           ;	UserNVM Program memory code protection bit
 29785                           ;	CP = OFF, UserNVM code protection disabled
 29786     800B                     	org	32779
 29787     800B  3FFF               	dw	16383

Data Sizes:
    Strings     29
    Constant    147
    Data        19
    BSS         459
    Persistent  54
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     42      80
    BANK1            80      0      80
    BANK2            80      1      78
    BANK3            80      0      64
    BANK4            80      0      80
    BANK5            80      0      80
    BANK6            80      0      80
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    asyncBuffer	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F4268(BANK6[80]), NULL(NULL[0]), 

    bitRead@reg	PTR unsigned short  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    bitWrite@reg	PTR unsigned short  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    BMA253_GetAccelDataXYZ@accelData	PTR struct . size(1) Largest target is 6
		 -> LIGHTBLUE_AccelSensor@accelData(BANK0[6]), 

    BMA253_GetAccelDataY@yAccelData	PTR short  size(1) Largest target is 2
		 -> BMA253_GetAccelDataXYZ@sensorValue(BANK0[2]), 

    BMA253_GetAccelDataZ@zAccelData	PTR short  size(1) Largest target is 2
		 -> BMA253_GetAccelDataXYZ@sensorValue(BANK0[2]), 

    bufferBlock$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    d$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), NULL(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), NULL(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), NULL(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), NULL(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), NULL(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), NULL(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), NULL(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), NULL(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), NULL(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), NULL(), 

    fsmStateTable	const PTR FTN()enum E12652[16] size(2) Largest target is 1
		 -> do_I2C_DO_ACK(), do_I2C_DO_ADDRESS_NACK(), do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), 
		 -> do_I2C_IDLE(), do_I2C_RCEN(), do_I2C_RESET(), do_I2C_RX(), 
		 -> do_I2C_SEND_ADR_READ(), do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_RESTART(), do_I2C_SEND_RESTART_READ(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_STOP(), do_I2C_TX(), do_I2C_TX_EMPTY(), 

    I2C1_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_DO_TX$5456	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1727(), 
		 -> rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1738(), rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1761(), 
		 -> wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1744(), wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1750(), 
		 -> NULL(), 

    I2C1_DO_TX$5456$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_DO_TX$5461	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_busCollisionISR(), NULL(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_ISR(), NULL(), 

    i2c1_fsmStateTable	const PTR FTN()enum E12565[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_IDLE(), I2C1_DO_RCEN(), I2C1_DO_RESET(), 
		 -> I2C1_DO_RX(), I2C1_DO_RX_ACK(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_SEND_ADR_READ(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_READ(), 
		 -> I2C1_DO_SEND_RESTART_WRITE(), I2C1_DO_SEND_STOP(), I2C1_DO_TX(), I2C1_DO_TX_EMPTY(), 

    I2C1_MasterFsm$5455	const PTR FTN()enum E12565 size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_IDLE(), I2C1_DO_RCEN(), I2C1_DO_RESET(), 
		 -> I2C1_DO_RX(), I2C1_DO_RX_ACK(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_SEND_ADR_READ(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_READ(), 
		 -> I2C1_DO_SEND_RESTART_WRITE(), I2C1_DO_SEND_STOP(), I2C1_DO_TX(), I2C1_DO_TX_EMPTY(), 

    I2C1_Read1ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    I2C1_Read2ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    I2C1_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), 

    I2C1_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_SetBuffer@buffer	PTR void  size(2) Largest target is 8192
		 -> I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read1ByteRegister@reg(BANK0[1]), 
		 -> i2c_read2ByteRegister@reg(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), i2c_readDataBlock@reg(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write1ByteRegister@reg(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), i2c_write2ByteRegister@reg(COMMON[1]), 
		 -> RAM(DATA[8192]), NULL(NULL[0]), 

    I2C1_SetCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1727(), rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1738(), 
		 -> rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1761(), wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1744(), 
		 -> wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1750(), NULL(), 

    I2C1_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1727(), rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1738(), 
		 -> rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1761(), wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1744(), 
		 -> wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1750(), NULL(), 

    I2C1_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_Status$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_Status$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1727(), 
		 -> rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1738(), rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1761(), 
		 -> wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1744(), wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1750(), 
		 -> NULL(), 

    I2C1_Status$data_ptr	PTR unsigned char  size(2) Largest target is 8192
		 -> I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read1ByteRegister@reg(BANK0[1]), 
		 -> i2c_read2ByteRegister@reg(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), i2c_readDataBlock@reg(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write1ByteRegister@reg(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), i2c_write2ByteRegister@reg(COMMON[1]), 
		 -> RAM(DATA[8192]), NULL(NULL[0]), 

    I2C1_Write1ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    I2C1_Write2ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    i2c_read1ByteRegister@d2$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    i2c_read2ByteRegister@result$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    i2c_status$callbackPayload	PTR void [6] size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c_status$callbackTable	PTR FTN(PTR void ,)enum E12498[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    i2c_status$data_ptr	PTR unsigned char  size(2) Largest target is 0

    i2c_write1ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    i2c_write2ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    IOCAF6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF6_DefaultInterruptHandler(), NULL(), 

    IOCAF6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF6_DefaultInterruptHandler(), 

    LIGHTBLUE_SendPacket@payload	PTR unsigned char  size(1) Largest target is 19
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_LedState@payload(BANK0[3]), LIGHTBLUE_PushButton@payload(BANK0[3]), LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), 
		 -> LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), 

    LIGHTBLUE_SendSerialData@serialData	PTR unsigned char  size(1) Largest target is 80
		 -> lightBlueSerial(BANK4[80]), 

    LIGHTBLUE_SplitByte@payload	PTR unsigned char  size(1) Largest target is 19
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_LedState@payload(BANK0[3]), LIGHTBLUE_PushButton@payload(BANK0[3]), LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), 
		 -> LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), 

    LIGHTBLUE_SplitWord@payload	PTR unsigned char  size(1) Largest target is 13
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), 

    NULL$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    pHead	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F4268(BANK6[80]), NULL(NULL[0]), 

    protocol_version_number	const PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    rd1RegCompleteHandler@i2c1_master_example$F1727@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rd2RegCompleteHandler@i2c1_master_example$F1738@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@i2c1_master_example$F1761@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@i2c1_master_example$F1761@ptr$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@p$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    RN487X$AsyncHandler	PTR FTN(PTR unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_MessageHandler(), 

    RN487X$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_rx_ready(), 

    RN487X$DelayMs	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> RN487X_Delay(), 

    RN487X$IndicateRx	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_IndicateRx(), 

    RN487X$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> RN487X_Read@rn487x_interface$F1869(), 

    RN487X$ResetModule	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_Reset(), 

    RN487X$SetSystemMode	PTR FTN(enum E271,)void  size(2) Largest target is 1
		 -> RN487X_SetSystemMode(), 

    RN487X$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_tx_done(), 

    RN487X$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_Write(), 

    rn487x_driver_version	const PTR const unsigned char  size(2) Largest target is 6
		 -> STR_6(CODE[6]), 

    RN487X_MessageHandler@message	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F4268(BANK6[80]), NULL(NULL[0]), 

    rn487x_PrintMessage@passedMessage	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F4268(BANK6[80]), NULL(NULL[0]), 

    RN487X_ReadMsg@expectedMsg	PTR const unsigned char  size(2) Largest target is 11
		 -> RN487X_EnterCmdMode@cmdPrompt(CODE[5]), RN487X_EnterDataMode@cmdPrompt(CODE[5]), RN487X_GetInputsValues@ioValue(COMMON[2]), RN487X_RebootCmd@reboot(CODE[11]), 

    RN487X_SendCmd@cmd	PTR const unsigned char  size(1) Largest target is 64
		 -> cmdBuf(BANK3[64]), 

    RN487X_SetAsyncMessageHandler@pBuffer	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F4268(BANK6[80]), 

    S1046$data	PTR unsigned char  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    S257$8$0	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F4268(BANK6[80]), NULL(NULL[0]), 

    S257$AsyncHandler	PTR FTN(PTR unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_MessageHandler(), 

    S257$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_rx_ready(), 

    S257$DelayMs	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> RN487X_Delay(), 

    S257$IndicateRx	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_IndicateRx(), 

    S257$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> RN487X_Read@rn487x_interface$F1869(), 

    S257$ResetModule	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_Reset(), 

    S257$SetSystemMode	PTR FTN(enum E271,)void  size(2) Largest target is 1
		 -> RN487X_SetSystemMode(), 

    S257$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_tx_done(), 

    S257$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_Write(), 

    S3636$0$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    S3636$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    S3636$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1727(), 
		 -> rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1738(), rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1761(), 
		 -> wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1744(), wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1750(), 
		 -> NULL(), 

    S3636$data_ptr	PTR unsigned char  size(2) Largest target is 8192
		 -> I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read1ByteRegister@reg(BANK0[1]), 
		 -> i2c_read2ByteRegister@reg(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), i2c_readDataBlock@reg(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write1ByteRegister@reg(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), i2c_write2ByteRegister@reg(COMMON[1]), 
		 -> RAM(DATA[8192]), NULL(NULL[0]), 

    S386$4$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    S386$6$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    S386$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_rx_ready(), EUSART2_is_rx_ready(), 

    S386$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Initialize(), EUSART2_Initialize(), 

    S386$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_Read(), EUSART2_Read(), 

    S386$RxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    S386$SetRxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetRxInterruptHandler(), EUSART2_SetRxInterruptHandler(), 

    S386$SetTxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetTxInterruptHandler(), EUSART2_SetTxInterruptHandler(), 

    S386$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_done(), EUSART2_is_tx_done(), 

    S386$TransmitReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_ready(), EUSART2_is_tx_ready(), 

    S386$TxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    S386$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART1_Write(), EUSART2_Write(), 

    S700$11$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S700$callbackPayload	PTR void [6] size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S700$callbackTable	PTR FTN(PTR void ,)enum E12498[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    S700$data_ptr	PTR unsigned char  size(2) Largest target is 0

    sp__strchr	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F4268(BANK6[80]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 32
		 -> rn487x_PrintMessage@printCharacter(BANK0[32]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F4268(BANK6[80]), NULL(NULL[0]), 

    strchr@s	PTR const unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F4268(BANK6[80]), NULL(NULL[0]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 32
		 -> rn487x_PrintMessage@printCharacter(BANK0[32]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 32
		 -> rn487x_PrintMessage@printCharacter(BANK0[32]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F4268(BANK6[80]), NULL(NULL[0]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_LedState@payload(BANK0[3]), LIGHTBLUE_PushButton@payload(BANK0[3]), LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), 
		 -> LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), lightBlueSerial(BANK4[80]), statusBuffer(BANK5[80]), statusBuffer@main$F4268(BANK6[80]), 
		 -> STR_1(CODE[6]), STR_3(CODE[11]), STR_5(CODE[12]), NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_LedState@payload(BANK0[3]), LIGHTBLUE_PushButton@payload(BANK0[3]), LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), 
		 -> LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), lightBlueSerial(BANK4[80]), statusBuffer(BANK5[80]), statusBuffer@main$F4268(BANK6[80]), 
		 -> STR_1(CODE[6]), STR_3(CODE[11]), STR_5(CODE[12]), NULL(NULL[0]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F4268(BANK6[80]), NULL(NULL[0]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[11]), STR_5(CODE[12]), 

    strstr@h	PTR const unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F4268(BANK6[80]), NULL(NULL[0]), 

    strstr@n	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[11]), STR_5(CODE[12]), 

    uart$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_rx_ready(), EUSART2_is_rx_ready(), 

    uart$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Initialize(), EUSART2_Initialize(), 

    uart$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_Read(), EUSART2_Read(), 

    uart$RxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    uart$SetRxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetRxInterruptHandler(), EUSART2_SetRxInterruptHandler(), 

    uart$SetTxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetTxInterruptHandler(), EUSART2_SetTxInterruptHandler(), 

    uart$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_done(), EUSART2_is_tx_done(), 

    uart$TransmitReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_ready(), EUSART2_is_tx_ready(), 

    uart$TxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    uart$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART1_Write(), EUSART2_Write(), 

    wr1RegCompleteHandler@i2c1_master_example$F1744@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    wr2RegCompleteHandler@i2c1_master_example$F1750@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    _writeRegister->_i2c_write1ByteRegister
    _getError->_getDeviceStatus
    _PIN_MANAGER_Initialize->_IOCAF6_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _RN487X_MessageHandler->_strstr
    _strstr->_strncmp
    _rn487x_PrintMessageStart->_EUSART1_Write
    _rn487x_PrintMessageStart->_EUSART2_Write
    _rn487x_PrintMessageEnd->_EUSART1_Write
    _rn487x_PrintMessageEnd->_EUSART2_Write
    _rn487x_PrintMessage->_strcpy
    _rn487x_PrintIndicatorCharacters->_EUSART1_Write
    _rn487x_PrintIndicatorCharacters->_EUSART2_Write
    _RN487X_Init->_RN487X_Delay
    _LIGHTBLUE_TemperatureSensor->_LIGHTBLUE_SplitWord
    _LIGHTBLUE_SendSerialData->_RN487X_Write
    _LIGHTBLUE_SendProtocolVersion->_LIGHTBLUE_SendPacket
    _LIGHTBLUE_PushButton->_LIGHTBLUE_SendPacket
    _LIGHTBLUE_PerformAction->_LIGHTBLUE_SetErrorLedValue
    _RN487X_SetOutputs->_RN487X_SendCmd
    _RN487X_EnterDataMode->_RN487X_SendCmd
    _RN487X_EnterCmdMode->_RN487X_SendCmd
    _RN487X_SendCmd->_RN487X_Write
    _RN487X_Read@rn487x_interface$F1869->_EUSART1_Read
    _RN487X_Read@rn487x_interface$F1869->_EUSART2_Read
    _RN487X_Delay->_DELAY_milliseconds
    _LIGHTBLUE_LedState->_LIGHTBLUE_SendPacket
    _LIGHTBLUE_AccelSensor->_LIGHTBLUE_SplitWord
    _LIGHTBLUE_SplitWord->_LIGHTBLUE_SplitByte
    _LIGHTBLUE_SplitByte->_strlen
    _LIGHTBLUE_SendPacket->_RN487X_Write
    _RN487X_Write->_strlen
    _BMA253_GetAccelDataXYZ->_BMA253_NewAccelDataRdyY
    _BMA253_GetAccelDataXYZ->_BMA253_NewAccelDataRdyZ
    _BMA253_GetAccelDataZ->_BMA253_NewAccelDataRdyZ
    _BMA253_GetAccelDataY->_BMA253_NewAccelDataRdyY
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_MasterFsm->_I2C1_DO_ADDRESS_NACK
    _I2C1_MasterFsm->_I2C1_DO_RX
    _I2C1_MasterFsm->_I2C1_DO_TX
    _I2C1_MasterFsm->_I2C1_DO_TX_EMPTY
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnReset
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnStop
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler@i2c1_master_example$F1727
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler@i2c1_master_example$F1738
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler@i2c1_master_example$F1761
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler@i2c1_master_example$F1744
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler@i2c1_master_example$F1750
    _I2C1_DO_TX->_I2C1_CallbackReturnReset
    _I2C1_DO_TX->_I2C1_CallbackReturnStop
    _I2C1_DO_TX->_rd1RegCompleteHandler
    _I2C1_DO_TX->_rd1RegCompleteHandler@i2c1_master_example$F1727
    _I2C1_DO_TX->_rd2RegCompleteHandler
    _I2C1_DO_TX->_rd2RegCompleteHandler@i2c1_master_example$F1738
    _I2C1_DO_TX->_rdBlkRegCompleteHandler
    _I2C1_DO_TX->_rdBlkRegCompleteHandler@i2c1_master_example$F1761
    _I2C1_DO_TX->_wr1RegCompleteHandler
    _I2C1_DO_TX->_wr1RegCompleteHandler@i2c1_master_example$F1744
    _I2C1_DO_TX->_wr2RegCompleteHandler
    _I2C1_DO_TX->_wr2RegCompleteHandler@i2c1_master_example$F1750
    _I2C1_DO_SEND_ADR_WRITE->_I2C1_MasterSendTxData
    _I2C1_DO_RX->_I2C1_CallbackReturnReset
    _I2C1_DO_RX->_I2C1_CallbackReturnStop
    _I2C1_DO_RX->_rd1RegCompleteHandler
    _I2C1_DO_RX->_rd1RegCompleteHandler@i2c1_master_example$F1727
    _I2C1_DO_RX->_rd2RegCompleteHandler
    _I2C1_DO_RX->_rd2RegCompleteHandler@i2c1_master_example$F1738
    _I2C1_DO_RX->_rdBlkRegCompleteHandler
    _I2C1_DO_RX->_rdBlkRegCompleteHandler@i2c1_master_example$F1761
    _I2C1_DO_RX->_wr1RegCompleteHandler
    _I2C1_DO_RX->_wr1RegCompleteHandler@i2c1_master_example$F1744
    _I2C1_DO_RX->_wr2RegCompleteHandler
    _I2C1_DO_RX->_wr2RegCompleteHandler@i2c1_master_example$F1750
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnReset
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnStop
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler@i2c1_master_example$F1727
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler@i2c1_master_example$F1738
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler@i2c1_master_example$F1761
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler@i2c1_master_example$F1744
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler@i2c1_master_example$F1750
    _wr2RegCompleteHandler@i2c1_master_example$F1750->_I2C1_SetDataCompleteCallback
    _wr2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler@i2c1_master_example$F1744->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler@i2c1_master_example$F1761->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler@i2c1_master_example$F1738->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler@i2c1_master_example$F1727->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _I2C1_SetDataCompleteCallback->_I2C1_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART1_Transmit_ISR
    _INTERRUPT_InterruptManager->_EUSART2_Transmit_ISR
    _EUSART2_Receive_ISR->_EUSART2_RxDataHandler
    _EUSART2_DefaultErrorHandler->_EUSART2_RxDataHandler
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _main->_LIGHTBLUE_AccelSensor
    _begin->_setMagneticChannel
    _begin->_setOperatingMode
    _begin->_setTemperatureEn
    _begin->_setXYAxisRange
    _begin->_setZAxisRange
    _setZAxisRange->_getError
    _setXYAxisRange->_getError
    _setTemperatureEn->_getError
    _setOperatingMode->_getError
    _setMagneticChannel->_getError
    _writeRegister->_i2c_write1ByteRegister
    _getDeviceStatus->_readRegister
    _isConnected->_TMAG5273_GetManufacture
    _TMAG5273_GetManufacture->_i2c_read2ByteRegister
    _getTemperatureEN->_readRegister
    _getOperatingMode->_readRegister
    _getMagneticChannel->_readRegister
    _getLowPower->_readRegister
    _getAngleEn->_readRegister
    _RN487X_DataReady->_RN487X_FilterData
    _RN487X_FilterData->_RN487X_MessageHandler
    _RN487X_MessageHandler->_rn487x_PrintMessage
    _LIGHTBLUE_TemperatureSensor->_readRegister
    _LIGHTBLUE_ParseIncomingPacket->_LIGHTBLUE_PerformAction
    _LIGHTBLUE_PerformAction->_LIGHTBLUE_SetErrorLedValue
    _LIGHTBLUE_UpdateErrorLed->_RN487X_SetOutputs
    _LIGHTBLUE_AccelSensor->_BMA253_GetAccelDataXYZ
    _BMA253_GetAccelDataXYZ->_BMA253_GetAccelDataY
    _BMA253_GetAccelDataXYZ->_BMA253_GetAccelDataZ
    _readRegister->_i2c_read1ByteRegister
    _BMA253_GetAccelDataZ->_i2c_read1ByteRegister
    _BMA253_NewAccelDataRdyZ->_i2c_read1ByteRegister
    _BMA253_GetAccelDataY->_i2c_read1ByteRegister
    _BMA253_NewAccelDataRdyY->_i2c_read1ByteRegister
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _I2C1_Poller->_I2C1_MasterFsm

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0 13748612
                                             41 BANK0      1     1      0
                                              0 BANK2      1     1      0
                       _EUSART1_Read *
                      _EUSART1_Write *
                _EUSART1_is_rx_ready *
                       _EUSART2_Read *
                      _EUSART2_Write *
                _EUSART2_is_rx_ready *
              _LIGHTBLUE_AccelSensor
               _LIGHTBLUE_Initialize
                 _LIGHTBLUE_LedState
      _LIGHTBLUE_ParseIncomingPacket
               _LIGHTBLUE_PushButton
      _LIGHTBLUE_SendProtocolVersion
           _LIGHTBLUE_SendSerialData
        _LIGHTBLUE_TemperatureSensor
                   _RN487X_DataReady
                        _RN487X_Init
                 _RN487X_IsConnected
                        _RN487X_Read
      _RN487X_SetAsyncMessageHandler
                       _RN487X_Write *
                  _SYSTEM_Initialize
            _TMR0_HasOverflowOccured
                              _begin
 ---------------------------------------------------------------------------------
 (1) _begin                                                0     0      0 10135242
                         _getAngleEn
                           _getError
                        _getLowPower
                 _getMagneticChannel
                   _getOperatingMode
                   _getTemperatureEN
                        _isConnected
                 _setMagneticChannel
                   _setOperatingMode
                   _setTemperatureEn
                     _setXYAxisRange
                      _setZAxisRange
 ---------------------------------------------------------------------------------
 (2) _setZAxisRange                                        5     5      0 1397408
                                             19 BANK0      5     5      0
                           _bitWrite
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (2) _setXYAxisRange                                       5     5      0 1397408
                                             19 BANK0      5     5      0
                           _bitWrite
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (2) _setTemperatureEn                                     5     5      0 1397408
                                             19 BANK0      5     5      0
                           _bitWrite
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (2) _setOperatingMode                                     5     5      0 1397718
                                             19 BANK0      5     5      0
                           _bitWrite
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (2) _setMagneticChannel                                   5     5      0 1399454
                                             19 BANK0      5     5      0
                           _bitWrite
                           _getError
                       _readRegister
                      _writeRegister
 ---------------------------------------------------------------------------------
 (3) _writeRegister                                        2     1      1  448722
                                              6 BANK0      2     1      1
             _i2c_write1ByteRegister
 ---------------------------------------------------------------------------------
 (4) _i2c_write1ByteRegister                               3     1      2  439917
                                             11 COMMON     1     1      0
                                              4 BANK0      2     0      2
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _getError                                             7     7      0  450807
                                             12 BANK0      7     7      0
                            _bitRead
                    _getDeviceStatus
 ---------------------------------------------------------------------------------
 (4) _getDeviceStatus                                      1     1      0  440464
                                             11 COMMON     1     1      0
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _bitWrite                                            10     6      4   57257
                                              1 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 (2) _isConnected                                          0     0      0  440073
            _TMAG5273_GetManufacture
 ---------------------------------------------------------------------------------
 (3) _TMAG5273_GetManufacture                              4     2      2  440073
                                             13 BANK0      4     2      2
              _i2c_read2ByteRegister
                               _swap
 ---------------------------------------------------------------------------------
 (4) _swap                                                 9     7      2     268
                                              1 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (4) _i2c_read2ByteRegister                                9     7      2  439771
                                              4 BANK0      9     7      2
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (2) _getTemperatureEN                                     4     4      0  450581
                                             12 BANK0      4     4      0
                            _bitRead
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _getOperatingMode                                     5     5      0  450832
                                             12 BANK0      5     5      0
                            _bitRead
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _getMagneticChannel                                   7     7      0  452140
                                             12 BANK0      7     7      0
                            _bitRead
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _getLowPower                                          4     4      0  450581
                                             12 BANK0      4     4      0
                            _bitRead
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _getAngleEn                                           5     5      0  450832
                                             12 BANK0      5     5      0
                            _bitRead
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) _bitRead                                              9     6      3   10080
                                              1 COMMON     9     6      3
 ---------------------------------------------------------------------------------
 (1) _TMR0_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1485
                 _EUSART1_Initialize
                 _EUSART2_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     135
         _IOCAF6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCAF6_SetInterruptHandler                           2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     675
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     675
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _RN487X_SetAsyncMessageHandler                        3     0      3     418
                                              1 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (1) _RN487X_Read                                          0     0      0   10887
                   _RN487X_DataReady
 ---------------------------------------------------------------------------------
 (2) _RN487X_DataReady                                     0     0      0   10887
                  _RN487X_FilterData
                 _RN487X_is_rx_ready *
 ---------------------------------------------------------------------------------
 (3) _RN487X_FilterData                                    5     5      0   10887
                                             36 BANK0      5     5      0
              _RN487X_MessageHandler *
 _RN487X_Read@rn487x_interface$F1869 *
 ---------------------------------------------------------------------------------
 (4) _RN487X_MessageHandler                                3     1      2   10686
                                             33 BANK0      3     1      2
    _rn487x_PrintIndicatorCharacters
                _rn487x_PrintMessage
             _rn487x_PrintMessageEnd
           _rn487x_PrintMessageStart
                             _strstr
 ---------------------------------------------------------------------------------
 (5) _strstr                                               8     4      4    2291
                                              8 COMMON     4     0      4
                                              0 BANK0      4     4      0
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (6) _strncmp                                              7     1      6     519
                                              1 COMMON     7     1      6
 ---------------------------------------------------------------------------------
 (6) _strchr                                               6     2      4     282
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintMessageStart                             0     0      0    1691
                      _EUSART1_Write *
                      _EUSART2_Write *
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintMessageEnd                               0     0      0    1691
                      _EUSART1_Write *
                      _EUSART2_Write *
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintMessage                                 37    35      2    3050
                                              7 COMMON     4     2      2
                                              0 BANK0     33    33      0
                      _EUSART1_Write *
                      _EUSART2_Write *
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               6     4      2     246
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintIndicatorCharacters                      1     1      0    1753
                                              3 COMMON     1     1      0
                      _EUSART1_Write *
                      _EUSART2_Write *
 ---------------------------------------------------------------------------------
 (1) _RN487X_IsConnected                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RN487X_Init                                          0     0      0     872
                       _RN487X_Delay *
                  _RN487X_IndicateRx *
 _RN487X_Read@rn487x_interface$F1869 *
                       _RN487X_Reset *
               _RN487X_SetSystemMode *
                 _RN487X_is_rx_ready *
 ---------------------------------------------------------------------------------
 (3) _RN487X_is_rx_ready                                   0     0      0       0
                _EUSART1_is_rx_ready *
                _EUSART2_is_rx_ready *
 ---------------------------------------------------------------------------------
 (4) _EUSART2_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RN487X_SetSystemMode                                 1     0      1     108
                                              1 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (2) _RN487X_Reset                                         1     0      1     185
                                              1 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (2) _RN487X_IndicateRx                                    1     0      1     108
                                              1 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_TemperatureSensor                          8     8      0  447988
                                             12 BANK0      7     7      0
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitWord
                       _readRegister
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_SendSerialData                             3     3      0    4274
                                              7 COMMON     3     3      0
                       _RN487X_Write *
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_SendProtocolVersion                       23    23      0    7788
                                              0 BANK0     23    23      0
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitByte
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_PushButton                                 4     4      0    6862
                                              0 BANK0      4     4      0
           _LIGHTBLUE_GetButtonValue
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitByte
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_GetButtonValue                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_ParseIncomingPacket                        9     9      0   18822
                                             11 BANK0      9     9      0
            _LIGHTBLUE_PerformAction
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_PerformAction                              4     3      1   18277
                                              7 BANK0      4     3      1
                      _EUSART1_Write *
                      _EUSART2_Write *
         _LIGHTBLUE_SetErrorLedValue
 ---------------------------------------------------------------------------------
 (3) _LIGHTBLUE_SetErrorLedValue                           2     2      0   16293
                                             11 COMMON     1     1      0
                                              6 BANK0      1     1      0
           _LIGHTBLUE_UpdateErrorLed
 ---------------------------------------------------------------------------------
 (4) _LIGHTBLUE_UpdateErrorLed                             0     0      0   16262
                       _RN487X_Delay *
                _RN487X_EnterCmdMode
               _RN487X_EnterDataMode
                  _RN487X_SetOutputs
 ---------------------------------------------------------------------------------
 (5) _RN487X_SetOutputs                                    6     4      2    5093
                                              0 BANK0      6     4      2
         _RN487X_ReadDefaultResponse
                     _RN487X_SendCmd
 ---------------------------------------------------------------------------------
 (6) _RN487X_ReadDefaultResponse                           4     4      0     389
                                              3 COMMON     4     4      0
 _RN487X_Read@rn487x_interface$F1869 *
 ---------------------------------------------------------------------------------
 (5) _RN487X_EnterDataMode                                 0     0      0    5386
                     _RN487X_ReadMsg
                     _RN487X_SendCmd
 ---------------------------------------------------------------------------------
 (5) _RN487X_EnterCmdMode                                  0     0      0    5386
                     _RN487X_ReadMsg
                     _RN487X_SendCmd
 ---------------------------------------------------------------------------------
 (6) _RN487X_SendCmd                                       4     3      1    4316
                                              7 COMMON     4     3      1
                       _RN487X_Write *
                  _RN487X_is_tx_done *
 ---------------------------------------------------------------------------------
 (7) _RN487X_is_tx_done                                    0     0      0       0
                 _EUSART1_is_tx_done *
                 _EUSART2_is_tx_done *
 ---------------------------------------------------------------------------------
 (8) _EUSART2_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RN487X_ReadMsg                                       7     4      3    1070
                                              3 COMMON     7     4      3
 _RN487X_Read@rn487x_interface$F1869 *
 ---------------------------------------------------------------------------------
 (4) _RN487X_Read@rn487x_interface$F1869                   0     0      0      74
                       _EUSART1_Read *
                       _EUSART2_Read *
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Read                                         2     2      0      37
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Read                                         2     2      0      37
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _RN487X_Delay                                         2     0      2     397
                                              4 COMMON     2     0      2
                 _DELAY_milliseconds
 ---------------------------------------------------------------------------------
 (3) _DELAY_milliseconds                                   3     1      2     135
                                              1 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_LedState                                   4     4      0    6961
                                              0 BANK0      4     4      0
          _LIGHTBLUE_GetDataLedValue
         _LIGHTBLUE_GetErrorLedValue
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitByte
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_GetErrorLedValue                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_GetDataLedValue                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_AccelSensor                               19    19      0 3091142
                                             22 BANK0     19    19      0
             _BMA253_GetAccelDataXYZ
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitWord
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_SplitWord                                  3     1      2    2607
                                              9 COMMON     3     1      2
                _LIGHTBLUE_SplitByte
 ---------------------------------------------------------------------------------
 (3) _LIGHTBLUE_SplitByte                                  3     2      1    1911
                                              6 COMMON     3     2      1
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_SendPacket                                 4     3      1    4825
                                              7 COMMON     4     3      1
                       _RN487X_Write *
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     858
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _RN487X_Write                                         1     0      1    3185
                                              6 COMMON     1     0      1
                       _EUSART1_Read (ARG) *
                      _EUSART1_Write *
                       _EUSART2_Read (ARG) *
                      _EUSART2_Write *
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Write                                        2     1      1    1525
                                              1 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        2     1      1     166
                                              1 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (2) _BMA253_GetAccelDataXYZ                               6     6      0 3083408
                                             16 BANK0      6     6      0
               _BMA253_GetAccelDataY
               _BMA253_GetAccelDataZ
            _BMA253_NewAccelDataRdyY
            _BMA253_NewAccelDataRdyZ
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _readRegister                                         2     2      0  440430
                                             10 BANK0      2     2      0
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_GetAccelDataZ                                 6     6      0  880902
                                             10 BANK0      6     6      0
            _BMA253_NewAccelDataRdyZ
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_NewAccelDataRdyZ                              1     1      0  440399
                                             11 COMMON     1     1      0
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_GetAccelDataY                                 6     6      0  880902
                                             10 BANK0      6     6      0
            _BMA253_NewAccelDataRdyY
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_NewAccelDataRdyY                              1     1      0  440399
                                             11 COMMON     1     1      0
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (4) _i2c_read1ByteRegister                                6     5      1  440365
                                              4 BANK0      6     5      1
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetAddressNackCallback                          4     0      4    3815
                                              5 COMMON     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (5) _I2C1_Open                                            2     2      0      68
                                              1 COMMON     2     2      0
                _I2C1_MasterClearIrq
                    _I2C1_MasterOpen
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterWrite                                     0     0      0  424509
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterOperation                                 2     2      0  424509
                                              2 BANK0      2     2      0
                   _I2C1_MasterStart
                        _I2C1_Poller
 ---------------------------------------------------------------------------------
 (7) _I2C1_Poller                                          0     0      0  424441
                     _I2C1_MasterFsm
            _I2C1_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterWaitForEvent                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterFsm                                       2     2      0  424441
                                              0 BANK0      2     2      0
               _I2C1_DO_ADDRESS_NACK *
                       _I2C1_DO_IDLE *
                       _I2C1_DO_RCEN *
                      _I2C1_DO_RESET *
                         _I2C1_DO_RX *
                     _I2C1_DO_RX_ACK *
            _I2C1_DO_RX_NACK_RESTART *
               _I2C1_DO_RX_NACK_STOP *
              _I2C1_DO_SEND_ADR_READ *
             _I2C1_DO_SEND_ADR_WRITE *
               _I2C1_DO_SEND_RESTART *
          _I2C1_DO_SEND_RESTART_READ *
         _I2C1_DO_SEND_RESTART_WRITE *
                  _I2C1_DO_SEND_STOP *
                         _I2C1_DO_TX *
                   _I2C1_DO_TX_EMPTY *
                _I2C1_MasterClearIrq
                  _I2C1_MasterIsNack
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_TX_EMPTY                                     2     2      0  106087
                                              9 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterSetIrq
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSetIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_TX                                           2     2      0  106118
                                              9 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterIsNack                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART_WRITE                          0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART_READ                           0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_SEND_ADR_WRITE                               0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_SEND_ADR_READ                                0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendTxData                               1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_ACK                                       0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX                                           2     2      0  106087
                                              9 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
            _I2C1_DO_RX_NACK_RESTART
               _I2C1_DO_RX_NACK_STOP
               _I2C1_MasterGetRxData
                 _I2C1_MasterSendAck
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendAck                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterGetRxData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_NACK_STOP                                 0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_NACK_RESTART                              0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendNack                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RESET                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RCEN                                         0     0      0       0
                 _I2C1_MasterStartRx
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterStartRx                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_IDLE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_ADDRESS_NACK                                 2     2      0  106087
                                              9 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _wr2RegCompleteHandler@i2c1_master_example$F1750     1     0      1   10564
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr2RegCompleteHandler                               1     0      1   10564
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr1RegCompleteHandler@i2c1_master_example$F1744     1     0      1   10564
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr1RegCompleteHandler                               1     0      1   10564
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rdBlkRegCompleteHandler@i2c1_master_example$F1761   1     0      1   10595
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rdBlkRegCompleteHandler                             1     0      1   10595
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd2RegCompleteHandler@i2c1_master_example$F1738     1     0      1   10564
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd2RegCompleteHandler                               1     0      1   10564
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd1RegCompleteHandler@i2c1_master_example$F1727     1     0      1   10564
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd1RegCompleteHandler                               1     0      1   10564
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetDataCompleteCallback                         3     0      3    5479
                                              5 COMMON     3     0      3
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetCallback                                     4     1      3    1257
                                              1 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetBuffer                                       4     0      4    5054
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_STOP                                   0     0      0       0
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterStop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART                                0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterEnableRestart                            0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_CallbackReturnStop                             1     0      1       0
                                              8 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (10) _I2C1_CallbackReturnReset                            1     0      1     385
                                              8 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (18) NULL(Fake)                                           1     0      1       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_Close                                           1     1      0      37
                                              1 COMMON     1     1      0
                _I2C1_MasterClearIrq
                   _I2C1_MasterClose
              _I2C1_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INTERRUPT_InterruptManager                          0     0      0       0
                                NULL *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (16) _PIN_MANAGER_IOC                                     0     0      0       0
                         _IOCAF6_ISR
 ---------------------------------------------------------------------------------
 (17) _IOCAF6_ISR                                          0     0      0       0
                                NULL *
     _IOCAF6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (18) _IOCAF6_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART2_Transmit_ISR                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (16) _EUSART2_Receive_ISR                                 0     0      0       0
                                NULL *
        _EUSART2_DefaultErrorHandler *
 _EUSART2_DefaultFramingErrorHandler *
 _EUSART2_DefaultOverrunErrorHandler *
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (17) _EUSART2_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART2_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART2_DefaultErrorHandler                         0     0      0       0
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (17) _EUSART2_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_Transmit_ISR                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_Receive_ISR                                 0     0      0       0
                                NULL *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (17) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (17) _EUSART1_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (18) NULL(Fake)                                           1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read *
   _EUSART1_Write *
   _EUSART1_is_rx_ready *
   _EUSART2_Read *
   _EUSART2_Write *
   _EUSART2_is_rx_ready *
   _LIGHTBLUE_AccelSensor *
     _BMA253_GetAccelDataXYZ
       _BMA253_GetAccelDataY
         _BMA253_NewAccelDataRdyY
           _i2c_read1ByteRegister
             _I2C1_Close
               _I2C1_MasterClearIrq
               _I2C1_MasterClose
               _I2C1_MasterDisableIrq
             _I2C1_MasterWrite
               _I2C1_MasterOperation
                 _I2C1_MasterStart
                 _I2C1_Poller
                   _I2C1_MasterFsm
                     _I2C1_DO_ADDRESS_NACK *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_SEND_RESTART *
                         _I2C1_MasterEnableRestart
                       _I2C1_DO_SEND_STOP *
                         _I2C1_MasterStop
                       _rd1RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                           _I2C1_SetCallback
                       _rd1RegCompleteHandler@i2c1_master_example$F1727 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rd2RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rd2RegCompleteHandler@i2c1_master_example$F1738 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rdBlkRegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1761 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr1RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr1RegCompleteHandler@i2c1_master_example$F1744 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr2RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr2RegCompleteHandler@i2c1_master_example$F1750 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                     _I2C1_DO_IDLE *
                     _I2C1_DO_RCEN *
                       _I2C1_MasterStartRx
                     _I2C1_DO_RESET *
                     _I2C1_DO_RX *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_RX_NACK_RESTART *
                         _I2C1_MasterSendNack
                       _I2C1_DO_RX_NACK_STOP *
                         _I2C1_MasterSendNack
                       _I2C1_MasterGetRxData *
                       _I2C1_MasterSendAck *
                       _rd1RegCompleteHandler *
                       _rd1RegCompleteHandler@i2c1_master_example$F1727 *
                       _rd2RegCompleteHandler *
                       _rd2RegCompleteHandler@i2c1_master_example$F1738 *
                       _rdBlkRegCompleteHandler *
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1761 *
                       _wr1RegCompleteHandler *
                       _wr1RegCompleteHandler@i2c1_master_example$F1744 *
                       _wr2RegCompleteHandler *
                       _wr2RegCompleteHandler@i2c1_master_example$F1750 *
                     _I2C1_DO_RX_ACK *
                       _I2C1_MasterSendAck
                     _I2C1_DO_RX_NACK_RESTART *
                     _I2C1_DO_RX_NACK_STOP *
                     _I2C1_DO_SEND_ADR_READ *
                       _I2C1_MasterSendTxData
                     _I2C1_DO_SEND_ADR_WRITE *
                       _I2C1_MasterSendTxData
                     _I2C1_DO_SEND_RESTART *
                     _I2C1_DO_SEND_RESTART_READ *
                       _I2C1_MasterEnableRestart
                     _I2C1_DO_SEND_RESTART_WRITE *
                       _I2C1_MasterEnableRestart
                     _I2C1_DO_SEND_STOP *
                     _I2C1_DO_TX *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_SEND_RESTART_READ *
                       _I2C1_DO_SEND_RESTART_WRITE *
                       _I2C1_DO_SEND_STOP *
                       _I2C1_MasterIsNack *
                       _I2C1_MasterSendTxData *
                       _rd1RegCompleteHandler *
                       _rd1RegCompleteHandler@i2c1_master_example$F1727 *
                       _rd2RegCompleteHandler *
                       _rd2RegCompleteHandler@i2c1_master_example$F1738 *
                       _rdBlkRegCompleteHandler *
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1761 *
                       _wr1RegCompleteHandler *
                       _wr1RegCompleteHandler@i2c1_master_example$F1744 *
                       _wr2RegCompleteHandler *
                       _wr2RegCompleteHandler@i2c1_master_example$F1750 *
                     _I2C1_DO_TX_EMPTY *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_SEND_RESTART *
                       _I2C1_DO_SEND_STOP *
                       _I2C1_MasterSetIrq *
                       _rd1RegCompleteHandler *
                       _rd1RegCompleteHandler@i2c1_master_example$F1727 *
                       _rd2RegCompleteHandler *
                       _rd2RegCompleteHandler@i2c1_master_example$F1738 *
                       _rdBlkRegCompleteHandler *
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1761 *
                       _wr1RegCompleteHandler *
                       _wr1RegCompleteHandler@i2c1_master_example$F1744 *
                       _wr2RegCompleteHandler *
                       _wr2RegCompleteHandler@i2c1_master_example$F1750 *
                     _I2C1_MasterClearIrq *
                     _I2C1_MasterIsNack *
                   _I2C1_MasterWaitForEvent
             _I2C1_Open
               _I2C1_MasterClearIrq
               _I2C1_MasterOpen
             _I2C1_SetAddressNackCallback
               _I2C1_SetCallback
             _I2C1_SetBuffer
             _I2C1_SetDataCompleteCallback
         _i2c_read1ByteRegister
       _BMA253_GetAccelDataZ
         _BMA253_NewAccelDataRdyZ
           _i2c_read1ByteRegister
         _i2c_read1ByteRegister
       _BMA253_NewAccelDataRdyY
       _BMA253_NewAccelDataRdyZ
       _readRegister
         _i2c_read1ByteRegister
     _LIGHTBLUE_SendPacket
       _RN487X_Write *
         _EUSART1_Read (ARG) *
         _EUSART1_Write (ARG) *
         _EUSART2_Read (ARG) *
         _EUSART2_Write (ARG) *
         _strlen (ARG) *
       _strlen *
     _LIGHTBLUE_SplitWord
       _LIGHTBLUE_SplitByte
         _strlen
   _LIGHTBLUE_Initialize *
   _LIGHTBLUE_LedState *
     _LIGHTBLUE_GetDataLedValue
     _LIGHTBLUE_GetErrorLedValue
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitByte
   _LIGHTBLUE_ParseIncomingPacket *
     _LIGHTBLUE_PerformAction
       _EUSART1_Write *
       _EUSART2_Write *
       _LIGHTBLUE_SetErrorLedValue *
         _LIGHTBLUE_UpdateErrorLed
           _RN487X_Delay *
             _DELAY_milliseconds
           _RN487X_EnterCmdMode *
             _RN487X_ReadMsg
               _RN487X_Read@rn487x_interface$F1869 *
                 _EUSART1_Read *
                 _EUSART2_Read *
             _RN487X_SendCmd
               _RN487X_Write *
               _RN487X_is_tx_done *
                 _EUSART1_is_tx_done *
                 _EUSART2_is_tx_done *
           _RN487X_EnterDataMode *
             _RN487X_ReadMsg
             _RN487X_SendCmd
           _RN487X_SetOutputs *
             _RN487X_ReadDefaultResponse
               _RN487X_Read@rn487x_interface$F1869 *
             _RN487X_SendCmd
   _LIGHTBLUE_PushButton *
     _LIGHTBLUE_GetButtonValue
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitByte
   _LIGHTBLUE_SendProtocolVersion *
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitByte
     _strlen
   _LIGHTBLUE_SendSerialData *
     _RN487X_Write *
     _strlen *
   _LIGHTBLUE_TemperatureSensor *
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitWord
     _readRegister
   _RN487X_DataReady *
     _RN487X_FilterData
       _RN487X_MessageHandler *
         _rn487x_PrintIndicatorCharacters
           _EUSART1_Write *
           _EUSART2_Write *
         _rn487x_PrintMessage
           _EUSART1_Write *
           _EUSART2_Write *
           _strcpy *
           _strlen *
         _rn487x_PrintMessageEnd
           _EUSART1_Write *
           _EUSART2_Write *
         _rn487x_PrintMessageStart
           _EUSART1_Write *
           _EUSART2_Write *
         _strstr
           _strchr
           _strlen
           _strncmp
       _RN487X_Read@rn487x_interface$F1869 *
     _RN487X_is_rx_ready *
       _EUSART1_is_rx_ready *
       _EUSART2_is_rx_ready *
   _RN487X_Init *
     _RN487X_Delay *
     _RN487X_IndicateRx *
     _RN487X_Read@rn487x_interface$F1869 *
     _RN487X_Reset *
     _RN487X_SetSystemMode *
     _RN487X_is_rx_ready *
   _RN487X_IsConnected *
   _RN487X_Read *
     _RN487X_DataReady
   _RN487X_SetAsyncMessageHandler *
   _RN487X_Write *
   _SYSTEM_Initialize *
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCAF6_SetInterruptHandler
     _PMD_Initialize
     _TMR0_Initialize
   _TMR0_HasOverflowOccured *
   _begin *
     _getAngleEn
       _bitRead
       _readRegister
     _getError
       _bitRead
       _getDeviceStatus
         _readRegister
     _getLowPower
       _bitRead
       _readRegister
     _getMagneticChannel
       _bitRead
       _readRegister
     _getOperatingMode
       _bitRead
       _readRegister
     _getTemperatureEN
       _bitRead
       _readRegister
     _isConnected
       _TMAG5273_GetManufacture
         _i2c_read2ByteRegister
           _I2C1_Close
           _I2C1_MasterWrite
           _I2C1_Open
           _I2C1_SetAddressNackCallback
           _I2C1_SetBuffer
           _I2C1_SetDataCompleteCallback
         _swap
     _setMagneticChannel
       _bitWrite
       _getError
       _readRegister
       _writeRegister
         _i2c_write1ByteRegister
           _I2C1_Close
           _I2C1_MasterWrite
           _I2C1_Open
           _I2C1_SetAddressNackCallback
           _I2C1_SetBuffer
           _I2C1_SetDataCompleteCallback
     _setOperatingMode
       _bitWrite
       _getError
       _readRegister
       _writeRegister
     _setTemperatureEn
       _bitWrite
       _getError
       _readRegister
       _writeRegister
     _setXYAxisRange
       _bitWrite
       _getError
       _readRegister
       _writeRegister
     _setZAxisRange
       _bitWrite
       _getError
       _readRegister
       _writeRegister

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART1_Receive_ISR *
     NULL(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _EUSART2_Receive_ISR *
     NULL(Fake) *
     _EUSART2_DefaultErrorHandler *
       _EUSART2_RxDataHandler
     _EUSART2_DefaultFramingErrorHandler *
     _EUSART2_DefaultOverrunErrorHandler *
     _EUSART2_RxDataHandler *
   _EUSART2_Transmit_ISR *
   _PIN_MANAGER_IOC *
     _IOCAF6_ISR
       NULL(Fake) *
       _IOCAF6_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2A      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     22B       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      1      4E      10       97.5%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      40      12       80.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      50      14      100.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      50      16      100.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0      50      18      100.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              50      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BANK23              50      0       0      52        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BANK24              50      0       0      54        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BANK25              20      0       0      56        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     22B      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Dec 23 18:21:54 2024

                                 _eusart1TxBufferRemaining 005B  
                                   ?_EUSART2_RxDataHandler 0070  
                          __end_of_TMR0_HasOverflowOccured 1005  
                                                       l35 16A0  
                                                       l44 0C97  
                                                       l53 10EF  
                                                       l29 1672  
                                                       l56 1100  
                                      _do_I2C_SEND_RESTART 0000  
                                         ?_getDeviceStatus 0070  
                                  getLowPower@lowPowerMode 002F  
                                                      l121 1F46  
                                                      l202 1F52  
                                                      l130 11BC  
                                                      l211 10DE  
                                                      l124 123A  
                                                      l205 1F4C  
                                                      l133 14D3  
                                                      l221 082C  
                                                      l214 1381  
                                                      l230 084E  
                                                      l127 16CE  
                                                      l208 1F34  
                                                      l224 082E  
                                                      l145 0705  
                                                      l139 1794  
                                                      l164 05B1  
                                                      l501 1137  
                                                      l510 1760  
                                                      l193 0FFF  
                                                      l522 114A  
                                                      l187 065B  
                                                      l196 10B1  
                                                      l534 0BAB  
                                                      l199 172D  
                                                      l537 115D  
                                                      l561 132F  
                                                      l546 0A83  
                                                      l549 1170  
                                                      l661 1065  
                                                      l741 079D  
                                                      l645 0C47  
                                                      l655 120E  
                                                      l664 1059  
                                                      l745 07A0  
                                                      l771 0376  
                                                      l851 09F9  
                                                      l765 0373  
                                                      l857 093E  
                                                      l875 0901  
                                                      l980 0D3B  
                                                      l967 1266  
                                                      l977 0D3C  
                                                      l987 04BC  
                                             ?_RN487X_Init 0070  
                                             ?_RN487X_Read 0070  
                               __end_of_DELAY_milliseconds 1225  
                             LIGHTBLUE_SendPacket@packetID 007A  
                                    ?_I2C1_MasterOperation 0070  
                   __end_of_EUSART2_SetFramingErrorHandler 1F7D  
                           _EUSART2_SetFramingErrorHandler 1F77  
                               __end_of_getMagneticChannel 04BD  
                               __end_of_setMagneticChannel 0377  
                                                      wreg 0009  
                                   ?_I2C1_MasterSendTxData 0070  
                                     _I2C1_DO_RX_NACK_STOP 1F1C  
                                ?_I2C1_MasterEnableRestart 0070  
                          BMA253_NewAccelDataRdyY@yNewData 007B  
                                     I2C1_SetBuffer@buffer 0071  
                                                     l1105 11F9  
                                                     l1201 14AD  
                                                     l1204 12E0  
                                  ??_rd2RegCompleteHandler 0079  
                                                     l1207 11E4  
                                                     l1072 0D90  
                                                     l1161 1FAE  
                                                     l1411 1071  
                                                     l1075 0D8F  
                                                     l1420 100E  
                                                     l2117 1004  
                                                     l1165 0DE4  
                                                     l1414 1FF5  
                                                     l1430 104C  
                                                     l1423 1FBE  
                                                     l1511 16FC  
                                            ?_RN487X_Delay 0074  
                                                     l1432 104E  
                                                     l1504 07FE  
                                                     l1408 1ED8  
                                                     l1361 11A9  
                                                     l1417 1FFF  
                                                     l1441 1043  
                                                     l1601 0EEB  
                                                     l1522 15EA  
                                                     l1450 107B  
                                                     l1355 1183  
                                                     l2403 1038  
                                                     l1427 1049  
                                                     l1364 1124  
                                                     l2500 1F1B  
                                                     l2420 1096  
                                                     l1700 1500  
                                                     l1436 103E  
                                                     l1452 107C  
                                                     l1444 1072  
                                                     l1460 0BF9  
                                                     l2068 0B5D  
                                                     l1701 1509  
                                                     l1533 0F73  
                                                     l1197 1442  
                                                     l2414 1489  
                                                     l1358 1196  
                                                     l2430 1FD0  
                                                     l3310 12C7  
                                                     l1454 107D  
                                                     l1367 134A  
                                                     l2503 1F20  
                                                     l1551 1365  
                                                     l1439 1041  
                                                     l1447 1079  
                                                     l2079 1F94  
                                                     l2424 15BF  
                                                     l1704 1520  
                                                     l3304 1314  
                                                     l1480 0A3D  
                                                     l2433 1FB6  
                                                     l1473 17C9  
                                                     l1457 1644  
                                                     l2506 1F25  
                                                     l2370 17FE  
                                                     l1546 0816  
                                                     l2523 1EB8  
                                                     l2427 1F02  
                                                     l2515 1596  
                                                     l2371 17FF  
                                                     l1467 1465  
                                                     l3331 13BB  
                                                     l3323 0E39  
                                                     l2099 11D0  
                                                     l2436 0E70  
                                                     l2452 0AEE  
                                                     l1820 097C  
                                                     l2453 0B14  
                                                     l2509 1F2A  
                                                     l2381 13DC  
                                                     l2605 1224  
                                                     l1733 1F7C  
                                                     l2526 1EBA  
                                                     l2542 1ED2  
                                                     l2470 1617  
                                                     l1558 0ACB  
                                                     l1582 139D  
                                                     l1742 1F8E  
                                                     l2375 1296  
                                                     l2439 0E8F  
                                                     l2367 1FEB  
                                                     l2560 1ECC  
                                                     l2464 1FA7  
                                                     l2536 10A3  
                                                     l3336 0CE9  
                                                     l1736 1F82  
                                                     l2545 1EFD  
                                                     l3329 139E  
                                                     l1577 12AE  
                                                     l1745 1F88  
                                                     l2394 10CF  
                                                     l2554 1ECF  
                                                     l1682 1FD9  
                                                     l1826 1FE2  
                                                     l2539 1EC0  
                                                     l2563 1F3A  
                                                     l2491 1F0C  
                                                     l2387 1F2F  
                                                     l1739 1F76  
                                                     l2548 1EC9  
                                                     l1844 1527  
                                                     l1676 09BA  
                                                     l2557 1EC6  
                                                     l2397 102D  
                                                     l1845 1530  
                                                     l1685 1EF4  
                                                     l1829 1EF8  
                                                     l1589 1089  
                                                     l2566 1EF0  
                                                     l2590 1ED5  
                                                     l2494 1F11  
                                                     l1598 0EE9  
                                                     l1695 14F9  
                                                     l1839 156E  
                                                     l1599 0EE5  
                                                     l2671 04FC  
                                                     l2584 1EC3  
                                                     l2488 1F07  
                                                     l1848 1547  
                                                     l2569 1EEC  
                                                     l2497 1F16  
                                                     l2593 1F3B  
                                                     l2682 0563  
                                                     l2587 1EBD  
                                                     l1883 1F5E  
                                                     l1892 1F70  
                                                     l1980 1018  
                                                     l2597 1F40  
                                                     l1886 1F64  
                                                     l1895 1F6A  
                                                     l1983 1022  
                                                     l1889 1F58  
                                                     l1977 1250  
                          BMA253_NewAccelDataRdyZ@zNewData 007B  
                                                     STR_1 2000  
                                                     STR_2 1891  
                                                     STR_3 1891  
                                                     STR_4 187A  
                                                     STR_5 187A  
                                                     STR_6 2000  
                                                     _LATA 0018  
                                                     _LATB 0019  
                                                     _LATC 001A  
                                                     _LATE 001C  
                               LIGHTBLUE_PushButton@button 0020  
                                                     _PMD0 0796  
                                                     _PMD1 0797  
                                                     _PMD2 0798  
                                                     _PMD3 0799  
                                                     _PMD4 079A  
                                                     _PMD5 079B  
                                                     _PMD6 079C  
                                                     _PMD7 079D  
                                                     u9600 159F  
                                                     u9601 159E  
                                                     u9610 15A7  
                                                     u9611 15A6  
                                                     u9540 146D  
                                                     u9620 1096  
                                                     u9700 1527  
                                                     u9541 146C  
                                                     u9621 1095  
                                                     u9701 1526  
                                                     u9550 10C6  
                                                     u9710 152C  
                                                     u9630 14DA  
                                                     u9551 10C5  
                                                     u9711 152B  
                                                     u9631 14D9  
                                                     u9560 0E42  
                                                     u9800 0B9F  
                                                     u9720 1542  
                                                     u9640 14F0  
                                                     u9561 0E41  
                                                     u9801 0B9E  
                                                     u9721 1541  
                                                     u9641 14EF  
                                                     u9570 0E8C  
                                                     u9730 109C  
                                                     u9810 0BAA  
                                                     u9650 1500  
                                                     u9571 0E8B  
                                                     u9731 109B  
                                                     u9811 0BA9  
                                                     u9651 14FF  
                                                     u9580 0AE9  
                                                     u9740 13C5  
                                                     u9660 1505  
                                                     u9820 12C1  
                                                     u9900 0F18  
                                                     u9581 0AE8  
                                                     u9741 13C4  
                                                     u9661 1504  
                                                     u9821 12C0  
                                                     u9901 0F17  
                                                     u9590 1F40  
                                                     u9750 13CD  
                                                     u9670 151B  
                                                     u9830 1224  
                                                     u9910 0F21  
                                                     u9591 1F3F  
                                                     u9751 13CC  
                                                     u9671 151A  
                                                     u9831 1223  
                                                     u9911 0F20  
                                                     u9760 17D2  
                                                     u9680 154E  
                                                     u9920 0F27  
                                                     u9840 1314  
                                                     u9761 17D1  
                                                     u9681 154D  
                                                     u9921 0F26  
                                                     u9841 1313  
                                                     u9770 1286  
                                                     u9690 1565  
                                                     u9850 16E0  
                                                     u9930 0CA4  
                                                     u9771 1285  
                                                     u9691 1564  
                                                     u9851 16DF  
                                                     u9931 0CA3  
                                                     u9780 0B70  
                                                     u9860 16FC  
                                                     u9940 0CBC  
                                                     u9781 0B6F  
                                                     u9861 16FB  
                                                     u9941 0CBB  
                                                     u9790 0B9A  
                                                     u9870 15DD  
                                                     u9950 0CC5  
                                                     u9791 0B99  
                                                     u9871 15DC  
                                                     u9951 0CC4  
                                                     u9880 15E9  
                                                     u9960 0CCB  
                                                     u9881 15E8  
                                                     u9961 0CCA  
                                                     u9890 0F12  
                                                     u9970 0CDB  
                                                     u9891 0F11  
                                                     u9971 0CDA  
                                                     u9980 13A8  
                                                     u9981 13A7  
                                                     u9990 13B9  
                                                     u9991 13B8  
                                            ?_RN487X_Reset 0071  
                          BMA253_GetAccelDataXYZ@accelData 0033  
                                                     _WPUA 1F39  
                                                     _WPUB 1F44  
                                                     _WPUC 1F4F  
                                                     _WPUE 1F65  
                                    ??_EUSART2_Receive_ISR 0071  
                                  ??_wr2RegCompleteHandler 0079  
                                         ??_I2C1_MasterFsm 0020  
                                            _EUSART1_Write 1521  
                                            ?_RN487X_Write 0076  
                                            _EUSART2_Write 14FA  
                                ??_I2C1_CallbackReturnStop 0079  
                                BMA253_GetAccelDataXYZ@lSB 0031  
                                BMA253_GetAccelDataXYZ@mSB 0032  
                                                     __hex 014C  
                                                     _main 04BD  
                                                     _peek 0066  
                                            ?_EUSART1_Read 0070  
                                                     _uart 1800  
                                            ?_EUSART2_Read 0070  
                                           _RN487X_ReadMsg 15C0  
                                                     fsr0h 0005  
                                                     fsr1h 0007  
                                                     indf0 0000  
                                                     fsr0l 0004  
                                                     indf1 0001  
                                                     fsr1l 0006  
                                                     _swap 11D1  
                                                     btemp 007E  
                            ??_LIGHTBLUE_TemperatureSensor 007C  
                                           _RN487X_SendCmd 16CF  
                         RN487X_SetOutputs@stateHighNibble 0025  
                                                     start 0055  
                                           _setXYAxisRange 09BB  
                                         ??_I2C1_SetBuffer 0075  
                             __end_of_EUSART2_Transmit_ISR 13FF  
                              __end_of_RN487X_EnterCmdMode 0817  
                                             _statusBuffer 02A0  
                                         _setTemperatureEn 08C5  
                                        ?_getTemperatureEN 0070  
                                  ??_LIGHTBLUE_AccelSensor 007C  
                            I2C1_CallbackReturnStop@funPtr 0078  
                                    __end_of_setZAxisRange 093F  
                    __end_of_LIGHTBLUE_ParseIncomingPacket 065C  
                            _LIGHTBLUE_ParseIncomingPacket 0590  
                                  __end_of_TMR0_Initialize 11D1  
                                             _do_I2C_RESET 0000  
                                       ??_getTemperatureEN 002C  
                                   _i2c_write1ByteRegister 172E  
                                         bitWrite@position 0073  
                            __end_of_OSCILLATOR_Initialize 1019  
                                                    l13001 127F  
                                                    l13011 128F  
                                                    l13003 1286  
                                                    l13013 1292  
                                                    l13005 1287  
                                                    l13021 1FEC  
                                                    l13101 15E3  
                                                    l13007 1289  
                                                    l13015 1295  
                                                    l13103 15E9  
                                                    l13111 0EF7  
                                                    l13009 128C  
                                                    l13041 0B84  
                                                    l13025 1FF6  
                                                    l13121 0F1B  
                                                    l13113 0F01  
                                                    l13201 0AA1  
                                                    l13051 0BA0  
                                                    l13043 0B8D  
                                                    l13035 0B66  
                                                    l13019 1066  
                                                    l13123 0F21  
                                                    l13115 0F0C  
                                                    l13107 0EEC  
                                                    l13211 0AB0  
                                                    l13203 0AA5  
                                                    l14011 04A0  
                                                    l12501 146D  
                                                    l13053 0BA4  
                                                    l13045 0B90  
                                                    l13037 0B70  
                                                    l13029 0B60  
                                                    l13301 10F0  
                                                    l13061 12B4  
                                                    l13125 0F27  
                                                    l13117 0F12  
                                                    l13133 0F2B  
                                                    l13109 0EED  
                                                    l13221 0AC0  
                                                    l13213 0AB4  
                                                    l13205 0AA8  
                                                    l13141 0C98  
                                                    l14021 04AC  
                                                    l14013 04A5  
                                                    l14005 0491  
                                                    l12503 147C  
                                                    l12511 1023  
                                                    l13055 0BAA  
                                                    l13047 0B9A  
                                                    l13039 0B79  
                                                    l13303 10FF  
                                                    l13063 12B8  
                                                    l13071 1210  
                                                    l13231 1356  
                                                    l13127 0F29  
                                                    l13119 0F18  
                                                    l13135 0F33  
                                                    l13223 0AC2  
                                                    l13215 0AB6  
                                                    l13207 0AAA  
                                                    l13151 0CBC  
                                                    l13143 0CA4  
                                                    l14103 138A  
                                                    l14023 04B1  
                                                    l14007 0496  
                                                    l13311 0A4A  
                                                    l12513 1EC7  
                                                    l12505 10C1  
                                                    l12521 112F  
                                                    l12601 1F03  
                                                    l13401 168E  
                                                    l13065 12C1  
                                                    l13073 1218  
                                                    l13081 16D2  
                                                    l13233 135C  
                                                    l13137 0F72  
                                                    l13225 0AC8  
                                                    l13217 0ABA  
                                                    l13209 0AAC  
                                                    l14113 1044  
                                                    l13241 1618  
                                                    l13161 139E  
                                                    l13153 0CC5  
                                                    l14105 1398  
                                                    l14121 097F  
                                                    l14201 0B19  
                                                    l14025 04B6  
                                                    l14009 049B  
                                                    l14041 11EB  
                                                    l13321 0A72  
                                                    l13313 0A53  
                                                    l12515 1ECA  
                                                    l12507 10C6  
                                                    l12523 1136  
                                                    l12531 1149  
                                                    l12603 1F06  
                                                    l13171 105C  
                                                    l13059 12AF  
                                                    l13411 1725  
                                                    l13403 16FE  
                                                    l13091 15C2  
                                                    l13083 16E0  
                                                    l13219 0ABE  
                                                    l13331 137E  
                                                    l14115 1039  
                                                    l13251 145A  
                                                    l13075 12FC  
                                                    l13243 0BAC  
                                                    l13163 13A8  
                                                    l13155 0CCB  
                                                    l13147 0CA7  
                                                    l14131 0996  
                                                    l14123 0986  
                                                    l14211 0B2B  
                                                    l14203 0B24  
                                                    l14051 0D43  
                                                    l14027 04BB  
                                                    l14019 04A7  
                                                    l14043 11F8  
                                                    l13315 0A5E  
                                                    l13307 0A40  
                                                    l12509 10CE  
                                                    l12517 1EE9  
                                                    l12701 0E72  
                                                    l12613 1F12  
                                                    l13173 1064  
                                                    l13413 1729  
                                                    l13405 1708  
                                                    l13069 120F  
                                                    l13237 1FB7  
                                                    l13093 15CC  
                                                    l13085 16F2  
                                                    l13181 080D  
                                                    l13229 134B  
                                                    l13325 1366  
                                                    l14301 11AF  
                                                    l14117 1074  
                                                    l13245 1444  
                                                    l13077 12FE  
                                                    l13261 17B4  
                                                    l13253 1795  
                                                    l13165 13A9  
                                                    l13157 0CDB  
                                                    l13149 0CB3  
                                                    l14109 139C  
                                                    l13501 1F7D  
                                                    l14141 09AF  
                                                    l14133 0998  
                                                    l14125 098F  
                                                    l14221 0B30  
                                                    l14213 0B2C  
                                                    l14205 0B26  
                                                    l13333 1421  
                                                    l14053 0D51  
                                                    l14037 11E5  
                                                    l13317 0A67  
                                                    l13309 0A40  
                                                    l13421 0D96  
                                                    l12519 1125  
                                                    l12527 1138  
                                                    l12535 114B  
                                                    l12543 115E  
                                                    l12551 1315  
                                                    l12623 1EED  
                                                    l12703 0E81  
                                                    l12607 1F08  
                                                    l12615 1F15  
                                                    l12631 1F1C  
                                                    l13407 1716  
                                                    l14311 14B4  
                                                    l13095 15DD  
                                                    l13087 16F6  
                                                    l13079 16D0  
                                                    l13191 0A92  
                                                    l13327 1369  
                                                    l13415 10D2  
                                                    l14303 11B0  
                                                    l13247 1449  
                                                    l13255 179D  
                                                    l13167 13B9  
                                                    l13271 0E0F  
                                                    l13263 0DE5  
                                                    l13503 1F71  
                                                    l14143 09B1  
                                                    l14135 099A  
                                                    l14127 0992  
                                                    l14119 097D  
                                                    l14231 0B38  
                                                    l14223 0B31  
                                                    l14215 0B2D  
                                                    l14207 0B28  
                                                    l13343 1441  
                                                    l13335 1439  
                                                    l14055 0D5F  
                                                    l14047 0D3D  
                                                    l14039 11E5  
                                                    l13319 0A6A  
                                                    l13431 0DD2  
                                                    l13423 0DA3  
                                                    l12529 1142  
                                                    l12537 1155  
                                                    l12545 1168  
                                                    l12553 132E  
                                                    l12561 1182  
                                                    l12705 0E8C  
                                                    l12721 0AE9  
                                                    l12609 1F0B  
                                                    l12641 1F10  
                                                    l12633 1F1F  
                                                    l12625 1F21  
                                                    l13409 171A  
                                                    l14313 14BA  
                                                    l13089 15C0  
                                                    l13177 0800  
                                                    l13193 0A94  
                                                    l13185 0A84  
                                                    l13329 1376  
                                                    l13417 10DB  
                                                    l14401 062A  
                                                    l14305 11B6  
                                                    l14321 1761  
                                                    l13249 1455  
                                                    l13257 17A0  
                                                    l13273 0E28  
                                                    l13265 0DEB  
                                                    l13521 1F5F  
                                                    l14161 0951  
                                                    l14145 09B2  
                                                    l14137 09A1  
                                                    l14129 0994  
                                                    l14241 0B40  
                                                    l14233 0B3A  
                                                    l14225 0B32  
                                                    l14217 0B2E  
                                                    l14209 0B2A  
                                                    l13337 143F  
                                                    l14057 0D64  
                                                    l14065 0D6B  
                                                    l14049 0D3D  
                                                    l13353 11D1  
                                                    l13433 0DD7  
                                                    l13425 0DB1  
                                                    l13281 172F  
                                                    l12539 115C  
                                                    l12547 116F  
                                                    l12651 1EB9  
                                                    l12619 1ED0  
                                                    l12707 0E8E  
                                                    l12723 0AEC  
                                                    l12715 0ACC  
                                                    l12627 1F24  
                                                    l12803 1578  
                                                    l13531 0C51  
                                                    l14315 14C0  
                                                    l14307 14AE  
                                                    l13099 15DF  
                                                    l13179 0807  
                                                    l13195 0A98  
                                                    l13187 0A8B  
                                                    l14411 0639  
                                                    l14403 062D  
                                                    l14331 178E  
                                                    l14323 1765  
                                                    l13259 17AF  
                                                    l13275 0E2E  
                                                    l13267 0DF8  
                                                    l13371 0A2B  
                                                    l13363 09FA  
                                                    l13523 1F53  
                                                    l13515 1F65  
                                                    l14171 095C  
                                                    l14163 0954  
                                                    l14155 093F  
                                                    l14147 09B3  
                                                    l14139 09A8  
                                                    l14251 0B50  
                                                    l14243 0B41  
                                                    l14235 0B3C  
                                                    l14227 0B34  
                                                    l14219 0B2F  
                                                    l14067 0D70  
                                                    l14075 0D77  
                                                    l14059 0D69  
                                                    l13355 11D3  
                                                    l13611 1202  
                                                    l13347 1FA8  
                                                    l13435 0DDC  
                                                    l13443 0DE3  
                                                    l13427 0DBF  
                                                    l13419 0D91  
                                                    l13291 1755  
                                                    l13283 172F  
                                                    l12581 1112  
                                                    l12557 1171  
                                                    l12565 1184  
                                                    l12573 1197  
                                                    l12637 1ECD  
                                                    l12645 1ED3  
                                                    l12661 1F01  
                                                    l12733 0AF4  
                                                    l12717 0ADA  
                                                    l12821 159A  
                                                    l13541 0C79  
                                                    l13533 0C57  
                                                    l14317 14C7  
                                                    l14309 14B3  
                                                    l12901 1568  
                                                    l13197 0A9C  
                                                    l13189 0A8F  
                                                    l14325 176E  
                                                    l14341 0689  
                                                    l14333 065D  
                                                    l13269 0E0E  
                                                    l13277 0E37  
                                                    l13373 0A2E  
                                                    l13365 0A0F  
                                                    l13517 1F6B  
                                                    l14181 0974  
                                                    l14173 0963  
                                                    l14165 0956  
                                                    l14157 0941  
                                                    l14149 09B8  
                                                    l13525 1F8F  
                                                    l14261 0B5B  
                                                    l14253 0B52  
                                                    l14245 0B48  
                                                    l14237 0B3E  
                                                    l14229 0B36  
                                                    l14077 0D7C  
                                                    l14085 0D83  
                                                    l14069 0D75  
                                                    l13357 11D5  
                                                    l13613 120B  
                                                    l13461 1497  
                                                    l13349 1FAD  
                                                    l13437 0DE1  
                                                    l13429 0DCD  
                                                    l13293 1758  
                                                    l13285 1738  
                                                    l13453 1051  
                                                    l13621 00AA  
                                                    l13701 08C7  
                                                    l12655 1EBB  
                                                    l12583 111C  
                                                    l12559 117B  
                                                    l12567 118E  
                                                    l12575 11A1  
                                                    l12591 1349  
                                                    l12647 1EB7  
                                                    l12719 0ADF  
                                                    l12751 1FA6  
                                                    l12639 1F0D  
                                                    l12823 159F  
                                                    l12831 108A  
                                                    l13295 10DF  
                                                    l13391 164F  
                                                    l13543 0C82  
                                                    l13535 0C66  
                                                    l13527 0C4A  
                                                    l12911 1521  
                                                    l13551 0F75  
                                                    l14319 14CD  
                                                    l12903 156B  
                                                    l13199 0A9F  
                                                    l14415 063C  
                                                    l14327 1774  
                                                    l14351 06F1  
                                                    l14343 0694  
                                                    l14335 0667  
                                                    l13383 1FDA  
                                                    l13463 1005  
                                                    l13375 0A35  
                                                    l13367 0A13  
                                                    l13471 0EA0  
                                                    l14511 12AB  
                                                    l14503 1297  
                                                    l13519 1F59  
                                                    l14183 0975  
                                                    l14175 096A  
                                                    l14167 0958  
                                                    l14159 0948  
                                                    l14191 1FE5  
                                                    l14271 1017  
                                                    l14263 100F  
                                                    l14255 0B54  
                                                    l14247 0B4A  
                                                    l14239 0B3F  
                                                    l14087 0D88  
                                                    l14079 0D81  
                                                    l13359 11E4  
                                                    l13447 12C8  
                                                    l13287 1741  
                                                    l13631 00ED  
                                                    l13623 00AA  
                                                    l13711 08E8  
                                                    l13703 08C7  
                                                    l14431 0C20  
                                                    l14423 0BFA  
                                                    l12585 1123  
                                                    l12569 1195  
                                                    l12577 11A8  
                                                    l12761 15F2  
                                                    l12657 1EFE  
                                                    l12665 1FC8  
                                                    l12673 1FAF  
                                                    l12681 0E3A  
                                                    l12729 0AF0  
                                                    l12809 157C  
                                                    l12825 15A7  
                                                    l12833 108B  
                                                    l13297 10EE  
                                                    l13393 1660  
                                                    l13545 0C8A  
                                                    l13537 0C6D  
                                                    l13529 0C4B  
                                                    l12921 1542  
                                                    l12913 152C  
                                                    l13561 0FDA  
                                                    l13553 0F92  
                                                    l12905 156D  
                                                    l14409 0633  
                                                    l14361 059B  
                                                    l14329 1779  
                                                    l14353 06FA  
                                                    l14345 06AB  
                                                    l14337 0672  
                                                    l14281 1227  
                                                    l14521 1ED6  
                                                    l13377 0A38  
                                                    l13369 0A25  
                                                    l13481 0ECD  
                                                    l13473 0EA6  
                                                    l14097 1382  
                                                    l14505 129D  
                                                    l14185 097A  
                                                    l14177 0971  
                                                    l14169 095A  
                                                    l14193 1FE7  
                                                    l14265 1012  
                                                    l14257 0B56  
                                                    l14249 0B4D  
                                                    l14273 11BD  
                                                    l14089 0D8D  
                                                    l13449 12D4  
                                                    l13617 120D  
                                                    l13609 11FA  
                                                    l13457 148A  
                                                    l13289 174C  
                                                    l13641 0158  
                                                    l13633 00F2  
                                                    l13625 00B5  
                                                    l13721 0708  
                                                    l13713 08ED  
                                                    l13705 08D2  
                                                    l12499 1467  
                                                    l12595 1F35  
                                                    l12763 15F5  
                                                    l12755 15EB  
                                                    l12659 1F00  
                                                    l12667 1FCA  
                                                    l12675 1FB1  
                                                    l12739 0AF8  
                                                    l12747 1FA1  
                                                    l12827 15AA  
                                                    l12819 1597  
                                                    l12835 108E  
                                                    l12931 109D  
                                                    l13387 1647  
                                                    l13395 1675  
                                                    l13547 0C8E  
                                                    l13539 0C75  
                                                    l12923 1543  
                                                    l12915 1531  
                                                    l13563 0FE8  
                                                    l13555 0F97  
                                                    l14291 16A7  
                                                    l12851 14EA  
                                                    l12843 14D4  
                                                    l14371 05C5  
                                                    l14363 05A1  
                                                    l14355 0592  
                                                    l14347 06BD  
                                                    l14339 0684  
                                                    l14283 122B  
                                                    l13379 1FD1  
                                                    l13491 0EE7  
                                                    l13483 0ED3  
                                                    l13475 0EA7  
                                                    l13467 0E90  
                                                    l14099 1388  
                                                    l14531 1088  
                                                    l14507 12A3  
                                                    l14179 0973  
                                                    l14195 1FEA  
                                                    l14267 1013  
                                                    l14259 0B59  
                                                    l14187 1019  
                                                    l14275 11CB  
                                                    l13811 0D0B  
                                                    l13803 0CEA  
                                                    l13459 148A  
                                                    l13651 01A1  
                                                    l13643 0160  
                                                    l13635 011E  
                                                    l13627 00BA  
                                                    l13731 0734  
                                                    l13723 0708  
                                                    l13715 08F7  
                                                    l13707 08D7  
                                                    l14443 0C3B  
                                                    l14435 0C29  
                                                    l14427 0C03  
                                                    l12941 1EBE  
                                                    l12829 1EC4  
                                                    l12589 1330  
                                                    l12757 15EE  
                                                    l12773 15FB  
                                                    l12669 1FCF  
                                                    l12677 1FB5  
                                                    l12693 0E4B  
                                                    l12685 0E43  
                                                    l12749 1FA3  
                                                    l12781 1F17  
                                                    l12837 1091  
                                                    l12933 109F  
                                                    l13389 1647  
                                                    l13397 1675  
                                                    l12917 1538  
                                                    l12925 1545  
                                                    l12909 1521  
                                                    l13565 0FEC  
                                                    l13557 0FA2  
                                                    l13549 10A5  
                                                    l14293 16B2  
                                                    l14277 1F41  
                                                    l13573 1F47  
                                                    l12861 14F8  
                                                    l12853 14F0  
                                                    l12845 14D4  
                                                    l13581 0819  
                                                    l14381 05E8  
                                                    l14373 05CC  
                                                    l14365 05AA  
                                                    l14357 0593  
                                                    l14349 06ED  
                                                    l14285 1234  
                                                    l13477 0EAC  
                                                    l13485 0ED8  
                                                    l13469 0E9B  
                                                    l14525 107E  
                                                    l14509 12A8  
                                                    l14517 12AD  
                                                    l14189 1FE3  
                                                    l14269 1016  
                                                    l14197 0B15  
                                                    l13901 03F5  
                                                    l13813 0D10  
                                                    l13821 0D17  
                                                    l13805 0CEA  
                                                    l13661 0210  
                                                    l13653 01CD  
                                                    l13645 0166  
                                                    l13637 0126  
                                                    l13629 00E5  
                                                    l13741 0771  
                                                    l13733 0739  
                                                    l13725 0713  
                                                    l13717 08FE  
                                                    l13709 08E0  
                                                    l12599 1EFA  
                                                    l12767 15F7  
                                                    l12783 1F1A  
                                                    l12791 1F29  
                                                    l12951 13CD  
                                                    l12943 13BE  
                                                    l12935 10A2  
                                                    l12927 1097  
                                                    l13399 167D  
                                                    l12871 150A  
                                                    l12919 153C  
                                                    l13567 0FF4  
                                                    l13559 0FC2  
                                                    l14295 16BD  
                                                    l14287 16A1  
                                                    l12855 14F1  
                                                    l12847 14DA  
                                                    l12839 1EF1  
                                                    l13583 081A  
                                                    l14391 05FB  
                                                    l14383 05EF  
                                                    l14375 05D6  
                                                    l14367 05B6  
                                                    l14359 0596  
                                                    l14279 1225  
                                                    l14535 07A1  
                                                    l13487 0EDE  
                                                    l13479 0EBA  
                                                    l14527 107E  
                                                    l13495 1F83  
                                                    l14199 0B17  
                                                    l13911 0401  
                                                    l13823 0D1C  
                                                    l13831 0D23  
                                                    l13815 0D15  
                                                    l13807 0CF0  
                                                    l13671 027F  
                                                    l13663 0216  
                                                    l13655 01D5  
                                                    l13647 0193  
                                                    l13639 012C  
                                                    l13743 0779  
                                                    l13735 074E  
                                                    l13727 0718  
                                                    l14447 0C44  
                                                    l14439 0C32  
                                                    l12689 0E47  
                                                    l12953 13D1  
                                                    l12945 13C5  
                                                    l12929 109C  
                                                    l12873 1511  
                                                    l12881 151E  
                                                    l12865 14FA  
                                                    l14297 16C8  
                                                    l14289 16A3  
                                                    l13577 1F30  
                                                    l12857 14F3  
                                                    l12849 14E6  
                                                    l13585 0828  
                                                    l13593 0846  
                                                    l14393 0601  
                                                    l14385 05F1  
                                                    l14377 05D9  
                                                    l14369 05BC  
                                                    l13569 1F4D  
                                                    l14537 07E7  
                                                    l13489 0EE0  
                                                    l14529 1086  
                                                    l13497 1F89  
                                                    l14561 123B  
                                                    l13913 0406  
                                                    l13921 040D  
                                                    l13833 0D28  
                                                    l13841 0D2F  
                                                    l13825 0D21  
                                                    l13809 0CFD  
                                                    l13681 02C7  
                                                    l13673 0287  
                                                    l13665 0243  
                                                    l13657 01DB  
                                                    l13649 019B  
                                                    l13745 077F  
                                                    l13737 0756  
                                                    l13729 072C  
                                                    l13761 09D7  
                                                    l13753 09BD  
                                                    l12939 1EC1  
                                                    l12699 0E4F  
                                                    l12787 1F26  
                                                    l12795 156F  
                                                    l12955 13D4  
                                                    l12947 13C6  
                                                    l12971 17D6  
                                                    l12963 17CB  
                                                    l12875 1515  
                                                    l12867 14FA  
                                                    l12859 14F6  
                                                    l12891 154E  
                                                    l12883 1EF5  
                                                    l13587 0830  
                                                    l14395 060A  
                                                    l14387 05F6  
                                                    l14379 05DF  
                                                    l14299 11AA  
                                                    l14539 07F0  
                                                    l13499 1F77  
                                                    l14571 124A  
                                                    l14563 123E  
                                                    l13923 0412  
                                                    l13915 040B  
                                                    l13907 03F7  
                                                    l13843 0D34  
                                                    l13835 0D2D  
                                                    l13691 0337  
                                                    l13683 02F4  
                                                    l13675 028D  
                                                    l13667 024B  
                                                    l13659 0208  
                                                    l13747 0795  
                                                    l13739 075C  
                                                    l13763 09DF  
                                                    l13755 09BD  
                                                    l12789 1F28  
                                                    l12797 1571  
                                                    l12957 13D7  
                                                    l12949 13C8  
                                                    l12981 17EC  
                                                    l12973 17DD  
                                                    l12965 17D2  
                                                    l12877 151B  
                                                    l12869 1505  
                                                    l12893 155B  
                                                    l13589 083A  
                                                    l14397 0611  
                                                    l14389 05F8  
                                                    l14573 124D  
                                                    l14565 1241  
                                                    l13941 0432  
                                                    l13925 0417  
                                                    l13909 03FC  
                                                    l13861 0399  
                                                    l13853 0377  
                                                    l13845 0D39  
                                                    l13693 033D  
                                                    l13685 02FC  
                                                    l13677 02B9  
                                                    l13669 0251  
                                                    l13749 079D  
                                                    l13765 09E4  
                                                    l13757 09C8  
                                                    l13781 091D  
                                                    l13773 0904  
                                                    l16421 04C9  
                                                    l12799 1574  
                                                    l12959 13DA  
                                                    l12991 17FD  
                                                    l12983 17F1  
                                                    l12975 17E2  
                                                    l12967 17D4  
                                                    l12879 151C  
                                                    l12895 155F  
                                                    l12887 1548  
                                                    l14399 0624  
                                                    l14567 1244  
                                                    l14575 1000  
                                                    l13951 043E  
                                                    l13943 0437  
                                                    l13927 041C  
                                                    l13935 0423  
                                                    l13871 03C4  
                                                    l13863 03A7  
                                                    l13855 0377  
                                                    l13695 036B  
                                                    l13687 0302  
                                                    l13679 02C1  
                                                    l13767 09EF  
                                                    l13759 09CD  
                                                    l13783 0925  
                                                    l13775 0904  
                                                    l16431 04DC  
                                                    l16423 04CA  
                                                    l12985 17F2  
                                                    l12977 17E3  
                                                    l12969 17D5  
                                                    l12897 1565  
                                                    l12889 1548  
                                                    l14569 1247  
                                                    l13793 1251  
                                                    l13953 0443  
                                                    l13937 0428  
                                                    l13929 0421  
                                                    l13881 03D0  
                                                    l13873 03C9  
                                                    l13865 03B5  
                                                    l13857 037D  
                                                    l13689 032F  
                                                    l13697 0373  
                                                    l13769 09F6  
                                                    l13785 092A  
                                                    l13777 090F  
                                                    l16441 0517  
                                                    l16433 04E4  
                                                    l16425 04CB  
                                                    l16611 1609  
                                                    l12987 17F7  
                                                    l12979 17E8  
                                                    l12995 102E  
                                                    l12899 1566  
                                                    l16603 0644  
                                                    l13795 1251  
                                                    l13971 0463  
                                                    l13955 0448  
                                                    l13963 044F  
                                                    l13939 042D  
                                                    l13883 03D5  
                                                    l13867 03BA  
                                                    l13859 038B  
                                                    l13787 0934  
                                                    l13779 0914  
                                                    l16451 053D  
                                                    l16443 0522  
                                                    l16435 04E6  
                                                    l16427 04CE  
                                                    l16419 04BD  
                                                    l16605 158E  
                                                    l12997 1F2B  
                                                    l12989 17FA  
                                                    l13797 1257  
                                                    l13981 046F  
                                                    l13965 0454  
                                                    l13957 044D  
                                                    l13949 0439  
                                                    l13885 03DA  
                                                    l13893 03E1  
                                                    l13869 03BF  
                                                    l13789 093B  
                                                    l16461 057F  
                                                    l16453 0540  
                                                    l16445 052D  
                                                    l16437 04F6  
                                                    l16429 04D4  
                                                    l16607 0B06  
                                                    l13799 1265  
                                                    l13983 0474  
                                                    l13991 047B  
                                                    l13967 0459  
                                                    l13895 03E6  
                                                    l13887 03DF  
                                                    l13879 03CB  
                                                    l16447 0533  
                                                    l16439 0505  
                                                    l16455 0544  
                                                    l16609 0E62  
                                                    l13993 0480  
                                                    l13985 0479  
                                                    l13969 045E  
                                                    l13977 0465  
                                                    l13897 03EB  
                                                    l16457 0553  
                                                    l16449 0539  
                                                    l13995 0485  
                                                    l13979 046A  
                                                    l13899 03F0  
                                                    l16459 056C  
                                                    l13997 048A  
                                                    l13999 048F  
                                    _eusart1RxStatusBuffer 00BE  
                                        __end_of_I2C1_Open 1800  
                                                    ?_main 0070  
                           ?_RN487X_SetAsyncMessageHandler 0071  
                                                    ?_swap 0071  
                                                    u10000 0A8F  
                                                    u10001 0A8E  
                                                    u10010 0A9C  
                                                    u10011 0A9B  
                                                    u10020 1449  
                                                    u10100 1760  
                                                    u10021 1448  
                                                    u10101 175F  
                                                    u10110 10EC  
                                                    u10030 145A  
                                                    u10111 10EA  
                                                    u10031 1459  
                                                    u10120 10ED  
                                                    u10040 17C9  
                                                    u10200 0A25  
                                                    u11000 041C  
                                                    u10041 17C8  
                                                    u10201 0A24  
                                                    u11001 041B  
                                                    u10130 10FD  
                                                    u10210 1FD8  
                                                    u10050 0DEB  
                                                    u11010 0421  
                                                    u10131 10FB  
                                                    u10211 1FD6  
                                                    u10051 0DEA  
                                                    u11011 0420  
                                                    u10140 10FE  
                                                    u10220 1FD9  
                                                    u10060 0E0E  
                                                    u11100 0454  
                                                    u11020 0428  
                                                    u10300 0DD7  
                                                    u10045 17C5  
                                                    u10061 0E0D  
                                                    u11101 0453  
                                                    u11021 0427  
                                                    u10301 0DD6  
                                                    u10230 1FE1  
                                                    u10070 0E2E  
                                                    u11110 0459  
                                                    u11030 042D  
                                                    u10150 0A4A  
                                                    u10310 0DDC  
                                                    u10231 1FDF  
                                                    u10071 0E2D  
                                                    u11111 0458  
                                                    u11031 042C  
                                                    u10151 0A49  
                                                    u10311 0DDB  
                                                    u10400 0C75  
                                                    u10240 1FE2  
                                                    u10080 0E37  
                                                    u11200 048A  
                                                    u11120 045E  
                                                    u11040 0432  
                                                    u10160 0A72  
                                                    u10320 0DE1  
                                                    u10401 0C74  
                                                    u10081 0E36  
                                                    u11201 0489  
                                                    u11121 045D  
                                                    u11041 0431  
                                                    u10161 0A71  
                                                    u10321 0DE0  
                                                    u10250 164F  
                                                    u10410 0C8A  
                                                    u11210 048F  
                                                    u11130 0463  
                                                    u11050 0437  
                                                    u10090 1738  
                                                    u10251 164E  
                                                    u10411 0C89  
                                                    u11211 048E  
                                                    u11131 0462  
                                                    u11051 0436  
                                                    u10091 1737  
                                                    u10340 0EA0  
                                                    u10180 143F  
                                                    u11300 0D64  
                                                    u11220 0496  
                                                    u11140 046A  
                                                    u11060 043E  
                                                    u10341 0E9F  
                                                    u10181 143E  
                                                    u11301 0D63  
                                                    u11221 0495  
                                                    u11141 0469  
                                                    u11061 043D  
                                                    u10270 167D  
                                                    u10430 0FF4  
                                                    u10190 0A0F  
                                                    u10350 0EA6  
                                                    u10174 1431  
                                                    u11310 0D69  
                                                    u11230 049B  
                                                    u11150 046F  
                                                    u11070 0443  
                                                    u10510 120B  
                                                    u10334 1491  
                                                    u10271 167C  
                                                    u10431 0FF3  
                                                    u10191 0A0E  
                                                    u10351 0EA5  
                                                    u10175 142F  
                                                    u11311 0D68  
                                                    u11231 049A  
                                                    u11151 046E  
                                                    u11071 0442  
                                                    u10511 120A  
                                                    u10335 148F  
                                                    u11400 1049  
                                                    u10360 0ECD  
                                                    u11320 0D70  
                                                    u11240 04A0  
                                                    u11160 0474  
                                                    u11080 0448  
                                                    u10600 028D  
                                                    u10520 00BA  
                                                    u10265 1666  
                                                    u10425 0FAD  
                                                    u11401 1048  
                                                    u10361 0ECC  
                                                    u11321 0D6F  
                                                    u11241 049F  
                                                    u11161 0473  
                                                    u11081 0447  
                                                    u10601 028C  
                                                    u10521 00B9  
                                                    u10450 0828  
                                                    u11410 103E  
                                                    u10370 0EDE  
                                                    u11330 0D75  
                                                    u11250 04A5  
                                                    u11170 0479  
                                                    u11090 044D  
                                                    u10290 0DD2  
                                                    u10610 02C7  
                                                    u10530 00F2  
                                                    u10451 0827  
                                                    u11411 103D  
                                                    u10371 0EDD  
                                                    u11331 0D74  
                                                    u11251 04A4  
                                                    u11171 0478  
                                                    u11091 044C  
                                                    u10291 0DD1  
                                                    u10611 02C6  
                                                    u10531 00F1  
                                                    u10460 082C  
                                                    u11500 05DF  
                                                    u11420 1079  
                                                    u11340 0D7C  
                                                    u11260 04AC  
                                                    u11180 0480  
                                                    u10620 0302  
                                                    u10540 012C  
                                                    u10700 09CD  
                                                    u10285 1694  
                                                    u10461 082B  
                                                    u10445 081D  
                                                    u11501 05DE  
                                                    u11421 1078  
                                                    u10365 0EC9  
                                                    u11341 0D7B  
                                                    u11261 04AB  
                                                    u11181 047F  
                                                    u10621 0301  
                                                    u10541 012B  
                                                    u10701 09CC  
                                                    u10470 0835  
                                                    u11510 05F6  
                                                    u11430 178E  
                                                    u11350 0D81  
                                                    u11270 04B1  
                                                    u11190 0485  
                                                    u10630 033D  
                                                    u10550 0166  
                                                    u10710 09E4  
                                                    u10471 0833  
                                                    u11511 05F5  
                                                    u11431 178D  
                                                    u11351 0D80  
                                                    u11271 04B0  
                                                    u11191 0484  
                                                    u10631 033C  
                                                    u10551 0165  
                                                    u10711 09E3  
                                                    u10480 0836  
                                                    u11520 0601  
                                                    u11360 0D88  
                                                    u11280 04B6  
                                                    u10800 0D34  
                                                    u10560 01A1  
                                                    u10640 08D7  
                                                    u10720 0914  
                                                    u11600 0C43  
                                                    u14000 0533  
                                                    u11521 0600  
                                                    u11361 0D87  
                                                    u11281 04B5  
                                                    u10801 0D33  
                                                    u10561 01A0  
                                                    u10641 08D6  
                                                    u10721 0913  
                                                    u11601 0C42  
                                                    u14001 0532  
                                                    u11530 0632  
                                                    u11370 0D8D  
                                                    u11290 04BB  
                                                    u10810 0D39  
                                                    u10570 01DB  
                                                    u10650 08ED  
                                                    u10730 092A  
                                                    u14010 0552  
                                                    u10395 0C5A  
                                                    u11531 0631  
                                                    u11435 178A  
                                                    u11371 0D8C  
                                                    u11291 04BA  
                                                    u10811 0D38  
                                                    u10571 01DA  
                                                    u10651 08EC  
                                                    u10731 0929  
                                                    u14011 0551  
                                                    u11540 0639  
                                                    u11460 06FA  
                                                    u11380 1388  
                                                    u10900 03E6  
                                                    u10820 03BA  
                                                    u10740 0D10  
                                                    u10580 0216  
                                                    u10660 0718  
                                                    u14020 056B  
                                                    u11541 0638  
                                                    u11461 06F9  
                                                    u11445 0697  
                                                    u11381 1387  
                                                    u10901 03E5  
                                                    u10821 03B9  
                                                    u10741 0D0F  
                                                    u10581 0215  
                                                    u10661 0717  
                                                    u14021 056A  
                                                    u11470 05A1  
                                                    u11390 1398  
                                                    u10910 03EB  
                                                    u10830 03BF  
                                                    u10750 0D15  
                                                    u10590 0251  
                                                    u10670 0739  
                                                    u11550 0C02  
                                                    u14030 058D  
                                                    u11471 05A0  
                                                    u11455 06C4  
                                                    u11391 1397  
                                                    u10911 03EA  
                                                    u10831 03BE  
                                                    u10751 0D14  
                                                    u10591 0250  
                                                    u10671 0738  
                                                    u11551 0C01  
                                                    u14031 058C  
                                                    u11480 05BC  
                                                    u10920 03F0  
                                                    u10840 03C4  
                                                    u10760 0D1C  
                                                    u10680 075C  
                                                    u11560 0C1F  
                                                    u11481 05BB  
                                                    u10921 03EF  
                                                    u10841 03C3  
                                                    u10761 0D1B  
                                                    u10681 075B  
                                                    u11561 0C1E  
                                                    u11650 129D  
                                                    u10930 03F5  
                                                    u10850 03C9  
                                                    u10770 0D21  
                                                    u10690 077F  
                                                    u11570 0C28  
                                                    u11651 129C  
                                                    u10931 03F4  
                                                    u10851 03C8  
                                                    u10771 0D20  
                                                    u10691 077E  
                                                    u11571 0C27  
                                                    u11660 12A3  
                                                    u10940 03FC  
                                                    u10860 03D0  
                                                    u10780 0D28  
                                                    u11580 0C31  
                                                    u11661 12A2  
                                                    u10941 03FB  
                                                    u10861 03CF  
                                                    u10781 0D27  
                                                    u11581 0C30  
                                                    u11670 1086  
                                                    u10950 0401  
                                                    u10870 03D5  
                                                    u10790 0D2D  
                                                    u11590 0C3A  
                                                    u14047 1213  
                                                    u11495 05CF  
                                                    u11671 1085  
                                                    u10951 0400  
                                                    u10871 03D4  
                                                    u10791 0D2C  
                                                    u11591 0C39  
                                                    u11680 07FE  
                                                    u10960 0406  
                                                    u10880 03DA  
                                                    u11681 07FD  
                                                    u10961 0405  
                                                    u10881 03D9  
                                                    u10970 040B  
                                                    u10890 03DF  
                                                    u10971 040A  
                                                    u10891 03DE  
                                                    u10980 0412  
                                                    u10981 0411  
                                                    u10990 0417  
                                                    u10991 0416  
                            __end_of_rn487x_driver_version 2012  
                                                    u13950 04DC  
                                                    u13951 04DB  
                                                    u13960 04E4  
                                                    u13961 04E3  
                                                    u13970 0504  
                                                    u13971 0503  
                                                    u13980 0522  
                                                    u13981 0521  
                                                    u13990 052D  
                                                    u13991 052C  
                               __end_of_i2c1_fsmStateTable 1848  
                                                    _OSCEN 0891  
                                                    _TMR0H 059D  
                                                    _TMR0L 059C  
                                                    _TRISA 0012  
                                                    _TRISB 0013  
                                                    _TRISC 0014  
                                                    _TRISE 0016  
                                   ??_I2C1_MasterGetRxData 0071  
                              LIGHTBLUE_PushButton@payload 0021  
                                          __end_of_bitRead 1443  
                                    ?_I2C1_DO_RX_NACK_STOP 0070  
                               ??_I2C1_CallbackReturnReset 0079  
                                        ??_I2C1_MasterOpen 0071  
                                     _EUSART1_Transmit_ISR 13FF  
                                        ??_I2C1_MasterStop 0071  
                                        ??_I2C1_Initialize 0071  
                                                    _pHead 004C  
                                                    _begin 0BFA  
                                  __end_of_PIN_MANAGER_IOC 1FC8  
                                           ??_RN487X_Delay 0076  
                           BMA253_GetAccelDataY@yAccelData 002D  
                                           ??_RN487X_Reset 0072  
                                    _i2c_read1ByteRegister 0B5E  
                                           ?_EUSART1_Write 0071  
                                           ??_RN487X_Write 0077  
                                           ?_EUSART2_Write 0071  
                                   __end_of_RN487X_ReadMsg 15EB  
                                                    pclath 000A  
                                i2c_write1ByteRegister@reg 0024  
                                   __end_of_RN487X_SendCmd 16FD  
                                           ??_EUSART1_Read 0071  
                                LIGHTBLUE_PerformAction@id 0029  
                                           ??_EUSART2_Read 0071  
                                                    status 0003  
                                   __end_of_setXYAxisRange 09FA  
                                                    wtemp0 007E  
                                             ??_I2C1_DO_RX 0079  
                                             ??_I2C1_DO_TX 0079  
                                          __end_of_strncmp 0CEA  
                                   ??_RN487X_SetSystemMode 0072  
               __end_of_EUSART1_DefaultFramingErrorHandler 1EB6  
                     ??_EUSART1_DefaultFramingErrorHandler 0070  
                      ?_EUSART1_DefaultFramingErrorHandler 0070  
                       _EUSART1_DefaultFramingErrorHandler 1EB5  
                                   ??_I2C1_DO_ADDRESS_NACK 0079  
                             __end_of_RN487X_EnterDataMode 1366  
                                             ??_I2C1_Close 0071  
                    __end_of_EUSART2_SetTxInterruptHandler 1F8F  
                            _EUSART2_SetTxInterruptHandler 1F89  
                                            _fsmStateTable 1848  
                                          __initialization 0057  
                                   _rn487x_PrintMessageEnd 0BAC  
                                               _i2c_status 0120  
                               __end_of_EUSART1_Initialize 097D  
                                             __end_of_main 0590  
                                             __end_of_uart 1828  
                              ?_LIGHTBLUE_GetErrorLedValue 0070  
                                             __end_of_swap 11E5  
                                 _LIGHTBLUE_UpdateErrorLed 1366  
                               __end_of_RN487X_is_rx_ready 100F  
                              ?_INTERRUPT_InterruptManager 0070  
                               ?_LIGHTBLUE_GetDataLedValue 0070  
                           BMA253_GetAccelDataZ@zAccelData 002D  
                                            _do_I2C_DO_ACK 0000  
                                   ??_I2C1_MasterOperation 007B  
                                                   ??_main 0049  
                                                   ??_swap 0073  
                                ?_rn487x_PrintMessageStart 0070  
                      __end_of_EUSART2_DefaultErrorHandler 1EE5  
                              _EUSART2_DefaultErrorHandler 1EE1  
                                  _LIGHTBLUE_PerformAction 0817  
                         RN487X_MessageHandler@messageType 0043  
                         __end_of_LIGHTBLUE_SendSerialData 0706  
                                    ?_EUSART1_Transmit_ISR 0070  
                                       __end_of_I2C1_DO_RX 0B15  
                                       __end_of_I2C1_DO_TX 0E90  
                                         _RN487X_DataReady 1382  
                                       __end_of_I2C1_Close 1297  
                                            ?_readRegister 0070  
                                                   ?_begin 0070  
                               __end_of_EUSART2_Initialize 09BB  
                             ??_IOCAF6_SetInterruptHandler 0073  
                                 _eusart2TxBufferRemaining 0061  
                                                   _ANSELA 1F38  
                                                   _ANSELB 1F43  
                                                   _ANSELC 1F4E  
                             ??_LIGHTBLUE_SetErrorLedValue 007B  
                                                   _T0CON0 059E  
                                                   _T0CON1 059F  
                                    _i2c_read2ByteRegister 0A3E  
                                                   _RC1REG 0119  
                                                   _RC2REG 0A19  
                                                   _RB1PPS 1F19  
                                                   _RB2PPS 1F1A  
                                                   _RC1STA 011D  
                                                   _RB4PPS 1F1C  
                                                   _RC2STA 0A1D  
                                                   _RC4PPS 1F24  
                                                   i1l2072 1FC7  
                                                   _ODCONA 1F3A  
                                                   i1l2082 07FF  
                                                   _ODCONB 1F45  
                                                   _ODCONC 1F50  
                                                   i1l2076 10C0  
                                                   _ODCONE 1F66  
                                                   i1l1710 13FE  
                                                   i1l1721 127E  
                                                   i1l1730 1EE4  
                                                   i1l1707 13FC  
                                                   i1l1724 1EB6  
                                                   i1l1717 0887  
                                                   i1l1727 1EE8  
                                                   i1l1920 0013  
                                                   i1l1923 0026  
                                                   i1l1860 1420  
                                                   i1l1932 0053  
                                                   i1l1925 0035  
                                                   i1l1926 0053  
                                                   _RN487X 1868  
                                                   i1l1871 12FA  
                                                   i1l1927 0044  
                                                   i1l1880 1EDC  
                                                   i1l1857 141E  
                                                   i1l1874 1EB5  
                                                   i1l1867 08C4  
                                                   i1l1877 1EE0  
                                          ?_RN487X_ReadMsg 0073  
                                                   _INLVLA 1F3C  
                                                   _INLVLB 1F47  
                                                   _INLVLC 1F52  
                                                   i1l9701 1ED9  
                                                   i1l8991 12E1  
                                                   i1l8993 12EA  
                                                   i1l9793 10B2  
                                                   i1l8995 12EF  
                                                   i1l9699 1EDD  
                                                   i1l9795 10B9  
                                                   i1l8997 12F5  
                                                   i1l9797 10BE  
                                                   i1l8999 12F6  
                                                   u710_20 08A4  
                                                   u702_20 13E4  
                                                   u710_21 08A3  
                                                   u702_21 13E3  
                                                   u711_20 08BA  
                                                   u703_20 13F6  
                                                   u711_21 08B9  
                                                   u703_21 13F5  
                                                   u712_20 1FC4  
                                                   u712_21 1FC3  
                       __end_of_RN487X_ReadDefaultResponse 0F74  
                               _RN487X_ReadDefaultResponse 0EEC  
                                                   u707_20 1406  
                                                   u707_21 1405  
                                                   u564_20 12F5  
                                                   u708_20 1418  
                                                   u564_21 12F4  
                                                   u708_21 1417  
                                                   _OSCFRQ 0893  
                                                   u709_20 0893  
                                                   u709_21 0892  
                                          ?_RN487X_SendCmd 0077  
                                                   u669_20 10B9  
                                                   u669_21 10B8  
                                                   _TX1REG 011A  
                                                   _TX2REG 0A1A  
                                                   _TX1STA 011E  
                                                   _TX2STA 0A1E  
                                        ?_I2C1_MasterClose 0070  
                                 rdBlkRegCompleteHandler@p 0078  
                                          ?_setXYAxisRange 0070  
                                  ??_I2C1_MasterDisableIrq 0071  
                                        ?_I2C1_MasterStart 0070  
                                        ?_I2C1_MasterWrite 0070  
                                 ?_I2C1_MasterWaitForEvent 0070  
                                       ??_I2C1_MasterClose 0071  
                                         _I2C1_DO_TX_EMPTY 15EB  
                                         __end_of_bitWrite 14AE  
                                setXYAxisRange@xyAxisRange 0035  
                                         __end_of_getError 0DE5  
                    __end_ofRN487X_EnterDataMode@cmdPrompt 200B  
                            RN487X_EnterDataMode@cmdPrompt 2006  
                                       ??_I2C1_MasterStart 0071  
                              BMA253_GetAccelDataY@lsbData 002E  
                        BMA253_GetAccelDataXYZ@sensorValue 0034  
                                       ??_I2C1_MasterWrite 007B  
                              BMA253_GetAccelDataY@msbData 002F  
                   LIGHTBLUE_TemperatureSensor@temperature 0031  
                              BMA253_GetAccelDataZ@lsbData 002E  
                                 __end_of_setOperatingMode 07A1  
                              BMA253_GetAccelDataZ@msbData 002F  
                                                   _cmdBuf 01A0  
                                                   _bitMap 0054  
                             __end_of_BMA253_GetAccelDataY 1673  
                             __end_of_BMA253_GetAccelDataZ 16A1  
                                RN487X_FilterData@readChar 0048  
                                 ?_EUSART1_SetErrorHandler 0071  
                                         ?_TMR0_Initialize 0070  
                                                ??_bitRead 0074  
                              _EUSART2_FramingErrorHandler 016B  
                         ??_EUSART1_SetOverrunErrorHandler 0073  
                          ?_EUSART1_SetOverrunErrorHandler 0071  
                        __end_of_LIGHTBLUE_GetDataLedValue 1F4D  
                                                   _strchr 139E  
                                 ??_I2C1_DO_SEND_ADR_WRITE 0072  
                                                   _strcpy 12FB  
                                                   _strlen 12AF  
                                                   _strstr 0DE5  
                                        ?_I2C1_SetCallback 0071  
                                   ??_I2C1_DO_RX_NACK_STOP 0071  
                              LIGHTBLUE_SendPacket@payload 0077  
                                    _I2C1_DO_SEND_ADR_READ 1FC8  
                                           _PMD_Initialize 1019  
                                  _BMA253_NewAccelDataRdyY 10DF  
                                  _BMA253_NewAccelDataRdyZ 10F0  
                            ?_I2C1_SetDataCompleteCallback 0075  
                               i2c_write1ByteRegister@data 0025  
                                       ??_I2C1_SetCallback 0074  
                                           ??_readRegister 007B  
                                     _EUSART2_Transmit_ISR 13DD  
                               LIGHTBLUE_PerformAction@led 002A  
                           __end_ofRN487X_RebootCmd@reboot 1891  
                                   ?_i2c_read1ByteRegister 0024  
                                          ??_EUSART1_Write 0072  
                                          ??_EUSART2_Write 0072  
               IOCAF6_SetInterruptHandler@InterruptHandler 0071  
                                         ?_PIN_MANAGER_IOC 0070  
                                          _eusart1RxBuffer 0144  
                                                ??_strncmp 0077  
                                            _manufactureId 0050  
                                  _I2C1_DO_RX_NACK_RESTART 1F21  
                                             ??_IOCAF6_ISR 0070  
                                    _RN487X_MessageHandler 09FA  
                                        RN487X_SendCmd@cmd 007A  
                                          _eusart2RxBuffer 00D6  
                                          _eusart1TxBuffer 00C6  
                                 ?_TMAG5273_GetManufacture 002D  
                                        _SYSTEM_Initialize 123B  
                           I2C1_SetDataCompleteCallback@cb 0075  
                                          _eusart2TxBuffer 00DE  
                                  __end_of__initialization 00A4  
                                  _protocol_version_number 2012  
                                         _do_I2C_SEND_STOP 0000  
                                   getOperatingMode@opMode 002E  
                          I2C1_MasterOperation@returnValue 0023  
                                       ?_SYSTEM_Initialize 0070  
                                            ??_I2C1_Poller 007B  
                                  ??_EUSART2_RxDataHandler 0070  
                     __end_ofRN487X_EnterCmdMode@cmdPrompt 2010  
                             RN487X_EnterCmdMode@cmdPrompt 200B  
                            __end_of_EUSART1_RxDataHandler 12FB  
                                  _rdBlkRegCompleteHandler 1315  
                                           __pcstackCOMMON 0070  
                                             __pidataBANK0 0002  
                                             __pidataBANK2 1101  
                                      ??_SYSTEM_Initialize 0073  
                         __end_of_I2C1_MasterEnableRestart 1ECA  
                                            __end_of_begin 0C48  
                                     __end_of_RN487X_Delay 1FBF  
                                            swap@lowerByte 0079  
                           ?_EUSART2_SetTxInterruptHandler 0071  
                                 ??_BMA253_GetAccelDataXYZ 0030  
                                     __end_of_RN487X_Reset 104F  
                                   setOperatingMode@opMode 0035  
                                     __end_of_RN487X_Write 1072  
                                ??_LIGHTBLUE_PerformAction 0028  
                                   __end_of_PMD_Initialize 1023  
                             ??_I2C1_DO_SEND_RESTART_WRITE 0071  
                           ?_LIGHTBLUE_SendProtocolVersion 0070  
                                  ??_I2C1_MasterSendTxData 0071  
                                       __end_of_IOCAF6_ISR 10C1  
                                     __end_of_EUSART1_Read 156F  
                                     __end_of_EUSART2_Read 14FA  
                                      _LIGHTBLUE_SplitByte 16FD  
                                        RN487X_Reset@value 0071  
                                   ??_EUSART1_Transmit_ISR 0070  
                                      _LIGHTBLUE_SplitWord 10A4  
                                ?_LIGHTBLUE_GetButtonValue 0070  
                                 ?_EUSART2_SetErrorHandler 0071  
                                     _RN487X_EnterDataMode 134B  
                                    ?_EUSART2_Transmit_ISR 0070  
                              __end_of_EUSART1_Receive_ISR 08C5  
                                    __end_of_I2C1_DO_RESET 1F2B  
                                       readRegister@regVal 002B  
                                 __end_of_setTemperatureEn 0902  
                                                  ??_begin 007C  
                                   ?_i2c_read2ByteRegister 0024  
                                   _do_I2C_DO_NACK_RESTART 0000  
                                __end_of_SYSTEM_Initialize 1251  
                                 _LIGHTBLUE_SendSerialData 065C  
                                  writeRegister@regAddress 0027  
                                            _eusart1RxHead 005A  
                                            swap@upperByte 0078  
                                            _eusart1TxHead 005D  
                                            _eusart2RxHead 007C  
                                            _eusart1RxTail 0059  
                                            _eusart2TxHead 0063  
                                               __pbssBANK0 004A  
                                               __pbssBANK1 00A0  
                                               __pbssBANK2 0120  
                                               __pbssBANK3 01A0  
                                               __pbssBANK4 0220  
                                               __pbssBANK5 02A0  
                                               __pbssBANK6 0320  
                                            _eusart2RxTail 0060  
                                            _eusart1TxTail 005C  
                          __end_of_I2C1_MasterWaitForEvent 1F41  
                        _EUSART1_TxDefaultInterruptHandler 0165  
                                            _eusart2TxTail 0062  
                          ??_EUSART1_SetRxInterruptHandler 0073  
                               __end_of_LIGHTBLUE_LedState 14D4  
                            __end_of_rd2RegCompleteHandler 115E  
                                       _DELAY_milliseconds 120F  
                             __end_of_LIGHTBLUE_Initialize 1F47  
                                     I2C1_Open@returnValue 0072  
                         ??_EUSART2_SetFramingErrorHandler 0073  
                          ?_EUSART2_SetFramingErrorHandler 0071  
                                     ?_LIGHTBLUE_SplitByte 0076  
                                       _getMagneticChannel 0377  
                                       _setMagneticChannel 00A8  
                                     ?_LIGHTBLUE_SplitWord 0079  
                            __end_of_wr2RegCompleteHandler 1171  
                                    _rd1RegCompleteHandler 1138  
                                    EUSART2_Read@readValue 0072  
                                        _I2C1_DO_SEND_STOP 1F12  
                                    _wr1RegCompleteHandler 1125  
                          __end_of_EUSART1_SetErrorHandler 1F59  
                                      ?_DELAY_milliseconds 0071  
                                               __pmaintext 04BD  
                                               _getAngleEn 0D3D  
                                  ?_i2c_write1ByteRegister 0024  
                           LIGHTBLUE_SendSerialData@length 0078  
                                      ?_getMagneticChannel 0070  
                                      ?_setMagneticChannel 0070  
                                       ?_I2C1_DO_SEND_STOP 0070  
                                       getAngleEn@angleReg 002E  
                         rn487x_PrintMessage@passedMessage 0077  
                          rn487x_PrintMessage@messageIndex 0040  
                                          _I2C1_MasterOpen 1097  
                                               __pintentry 0004  
                                          _I2C1_MasterStop 1ECA  
                                          _I2C1_Initialize 1FE3  
                             __end_of_LIGHTBLUE_SendPacket 1000  
                                      __end_of_I2C1_Poller 1097  
                            __end_of_LIGHTBLUE_AccelSensor 16CF  
                                ??_BMA253_NewAccelDataRdyY 007B  
                                ??_BMA253_NewAccelDataRdyZ 007B  
                                          ?_PMD_Initialize 0070  
                                   ?_I2C1_DO_SEND_ADR_READ 0070  
                                                  ?_strchr 0071  
                                      ??_I2C1_DO_SEND_STOP 0071  
                                                  ?_strcpy 0071  
                                                  ?_strlen 0071  
                   __end_of_EUSART1_SetFramingErrorHandler 1F5F  
                           _EUSART1_SetFramingErrorHandler 1F59  
                                                  ?_strstr 0078  
                                                  u1038_20 1278  
                                                  u1038_21 1277  
                                    _eusart2RxStatusBuffer 00CE  
                                                  u1170_20 0869  
                                                  u1170_21 0868  
                                                  u1171_20 087D  
                                                  u1171_21 087C  
                                                  u1169_20 0859  
                                                  u1169_21 0858  
                                                  i1l10301 08AA  
                                                  i1l10303 08B0  
                                                  i1l10311 1FC4  
                                                  i1l10305 08BA  
                                                  i1l10307 08C1  
                                                  i1l10251 13F0  
                                                  i1l10253 13F6  
                                                  i1l10245 13DD  
                                                  i1l10309 1FBF  
                                                  i1l10255 13F7  
                                                  i1l10247 13E4  
                                                  i1l10249 13EB  
                                                  i1l10281 140D  
                                                  i1l10291 088E  
                                                  i1l10283 1412  
                                                  i1l10293 0893  
                                                  i1l10285 1418  
                                                  i1l10277 13FF  
                                                  i1l10295 0899  
                                                  i1l10287 1419  
                                                  i1l10279 1406  
                                                  u1390_20 0039  
                                                  i1l10297 089F  
                                                  i1l10289 0888  
                                                  u1390_21 0038  
                                                  i1l10299 08A4  
                                                  u1391_20 003D  
                                                  u1383_20 000B  
                                                  u1391_21 003C  
                                                  u1383_21 000A  
                                                  i1l13511 1278  
                                                  i1l14151 1EE5  
                                                  u1392_20 0048  
                                                  u1384_20 000F  
                                                  i1l13513 1279  
                                                  i1l13505 1267  
                                                  i1l14153 1EE1  
                                                  u1392_21 0047  
                                                  u1384_21 000E  
                                                  i1l13507 126E  
                                                  i1l13509 1272  
                                                  u1393_20 004C  
                                                  u1385_20 0017  
                                                  u1393_21 004B  
                                                  u1385_21 0016  
                                                  i1l14541 084F  
                                                  i1l14551 0869  
                                                  i1l14543 0854  
                                                  u1386_20 001B  
                                                  i1l14553 086E  
                                                  i1l14545 0859  
                                                  u1386_21 001A  
                                                  i1l14555 0874  
                                                  i1l14547 085E  
                                                  i1l14557 087D  
                                                  i1l14549 0864  
                                                  i1l14559 0884  
                                                  u1387_20 001F  
                                                  u1387_21 001E  
                                                  i1l16361 000F  
                                                  i1l16371 002E  
                                                  i1l16363 0017  
                                                  i1l16373 0039  
                                                  i1l16365 001B  
                                                  i1l16357 0006  
                                                  i1l16375 003D  
                                                  i1l16367 001F  
                                                  i1l16359 000B  
                                                  u1388_20 002A  
                                                  i1l16377 0048  
                                                  i1l16369 002A  
                                                  u1388_21 0029  
                                                  i1l16379 004C  
                                                  u1389_20 002E  
                                                  u1389_21 002D  
                             getMagneticChannel@magChannel 002E  
                                    ?_RN487X_EnterDataMode 0070  
                                            _writeRegister 104F  
                             ?_EUSART1_DefaultErrorHandler 0070  
                                        _I2C1_MasterIsNack 1F35  
                                                  _SP1BRGH 011C  
                                                  _SP1BRGL 011B  
                                                  _SP2BRGH 0A1C  
                                                  _SP2BRGL 0A1B  
                                     ??_DELAY_milliseconds 0073  
                                                  _OSCCON1 088D  
                                                  _OSCCON3 088F  
                                                _I2C1_Open 17CA  
  __end_of_wr2RegCompleteHandler@i2c1_master_example$F1750 1125  
          _wr2RegCompleteHandler@i2c1_master_example$F1750 1112  
  __end_of_rd1RegCompleteHandler@i2c1_master_example$F1727 1184  
          _rd1RegCompleteHandler@i2c1_master_example$F1727 1171  
  __end_of_wr1RegCompleteHandler@i2c1_master_example$F1744 11AA  
          _wr1RegCompleteHandler@i2c1_master_example$F1744 1197  
                              __end_of_EUSART2_Receive_ISR 0888  
__end_of_rdBlkRegCompleteHandler@i2c1_master_example$F1761 134B  
        _rdBlkRegCompleteHandler@i2c1_master_example$F1761 1330  
  __end_of_rd2RegCompleteHandler@i2c1_master_example$F1738 1197  
          _rd2RegCompleteHandler@i2c1_master_example$F1738 1184  
                       __end_of_IOCAF6_SetInterruptHandler 1F95  
                               _IOCAF6_SetInterruptHandler 1F8F  
                                ??_I2C1_DO_RX_NACK_RESTART 0071  
                          __end_of_TMAG5273_GetManufacture 12E1  
                                                ?_bitWrite 0071  
                                                  _OSCSTAT 0890  
                                                  _OSCTUNE 0892  
                                        _I2C1_MasterSetIrq 1ED3  
                                     ??_getMagneticChannel 002C  
                                                ?_getError 0070  
                                                  _SSP1ADD 018D  
                                     ??_setMagneticChannel 0033  
                                                  _SLRCONA 1F3B  
                                                  _SLRCONB 1F46  
                                                  _SLRCONC 1F51  
                                                  _SSP1BUF 018C  
                                                  _SSP1MSK 018E  
                       __end_of_LIGHTBLUE_SetErrorLedValue 10DF  
                               _LIGHTBLUE_SetErrorLedValue 10D0  
                                       ?_I2C1_MasterIsNack 0070  
                               ?_I2C1_DO_SEND_RESTART_READ 0070  
                                   ?_RN487X_MessageHandler 0041  
                            i2c_write1ByteRegister@address 007B  
                           ??_I2C1_SetDataCompleteCallback 0078  
                                       ?_I2C1_MasterSetIrq 0070  
                                     _BMA253_GetAccelDataY 1645  
                                     _BMA253_GetAccelDataZ 1673  
                                       RN487X_ReadMsg@resp 0078  
                                  _TMR0_HasOverflowOccured 1000  
                                          _asyncBufferSize 0067  
                                    ??_LIGHTBLUE_SplitByte 0077  
                                       _i2c1_fsmStateTable 1828  
                                       _i2c1_driver_i2cISR 00E6  
                                    ??_LIGHTBLUE_SplitWord 007B  
                                      ??_I2C1_MasterIsNack 0071  
                                                  _i2c_ISR 0000  
                                __end_of_I2C1_DO_SEND_STOP 1F17  
                                ??_rdBlkRegCompleteHandler 0079  
                               ??_LIGHTBLUE_UpdateErrorLed 007B  
                                       I2C1_SetCallback@cb 0071  
                                  ?_rn487x_PrintMessageEnd 0070  
                                      _rn487x_PrintMessage 1795  
                                      ??_I2C1_MasterSetIrq 0071  
                         RN487X_SetAsyncMessageHandler@len 0073  
                           __end_of_i2c_write1ByteRegister 1761  
                                        _RN487X_FilterData 0E90  
                                 __end_of_RN487X_DataReady 139E  
                             __end_of_LIGHTBLUE_PushButton 11BD  
                                     __end_of_readRegister 1066  
                                       ?_RN487X_FilterData 0070  
                                      _EUSART1_is_rx_ready 1FDA  
                                                  _bitRead 1421  
                               __end_of_EUSART1_is_tx_done 1EF9  
                          __end_of_EUSART2_SetErrorHandler 1F77  
                                            ?_I2C1_DO_IDLE 0070  
                                            ?_I2C1_DO_RCEN 0070  
                LIGHTBLUE_ParseIncomingPacket@receivedByte 0033  
                                      _EUSART1_is_tx_ready 0000  
                                        _RN487X_IndicateRx 1039  
                              ??_LIGHTBLUE_GetDataLedValue 0071  
                                                  __ptext1 0BFA  
                                                  __ptext2 0902  
                                                  __ptext3 09BB  
                                                  __ptext4 08C5  
                                                  __ptext5 0706  
                                                  __ptext6 00A8  
                                                  __ptext7 104F  
                                                  __ptext8 172E  
                                                  __ptext9 0D91  
                                               bitRead@reg 0071  
                                 _I2C1_MasterEnableRestart 1EC7  
                                __end_of_I2C1_MasterIsNack 1F3B  
                             ?_I2C1_SetAddressNackCallback 0075  
                                      ??_RN487X_FilterData 0044  
                                           ?_writeRegister 0026  
                                     ?_rn487x_PrintMessage 0077  
               __end_of_EUSART2_DefaultOverrunErrorHandler 1EE9  
                     ??_EUSART2_DefaultOverrunErrorHandler 0070  
                      ?_EUSART2_DefaultOverrunErrorHandler 0070  
                       _EUSART2_DefaultOverrunErrorHandler 1EE5  
                                    _OSCILLATOR_Initialize 100F  
                                   ??_EUSART2_Transmit_ISR 0070  
                                       ?_RN487X_IndicateRx 0071  
                                __end_of_I2C1_MasterSetIrq 1ED6  
                                 __end_of_I2C1_DO_TX_EMPTY 1618  
                                       _EUSART1_Initialize 093F  
                                 ??_PIN_MANAGER_Initialize 0073  
                                                _IOCAFbits 1F3F  
                                    _rn487x_driver_version 2010  
                                               ?_I2C1_Open 0070  
                                         ??_RN487X_ReadMsg 0076  
                                                _IOCANbits 1F3E  
                                               ??_bitWrite 0075  
                                                _IOCAPbits 1F3D  
                                          bitRead@position 0073  
                                               ??_getError 002C  
                                         ??_RN487X_SendCmd 0078  
                            ??_EUSART1_DefaultErrorHandler 0071  
                                 ?_I2C1_CallbackReturnStop 0078  
                                       _RN487X_is_rx_ready 1005  
                                         ??_setXYAxisRange 0033  
                                 _do_I2C_SEND_RESTART_READ 0000  
                                  i2c_read1ByteRegister@d2 0029  
                                                  clrloop0 1F96  
                                      ??_RN487X_IndicateRx 0072  
                                    ?_BMA253_GetAccelDataY 0070  
                                    ?_BMA253_GetAccelDataZ 0070  
                                                  _strncmp 0C98  
                        rn487x_PrintMessage@printCharacter 0020  
                        __end_of_I2C1_DO_SEND_RESTART_READ 1F08  
                                     end_of_initialization 00A4  
                               __end_of_I2C1_MasterSendAck 1EF1  
                      ?_RN487X_Read@rn487x_interface$F1870 0070  
                     ??_RN487X_Read@rn487x_interface$F1872 0073  
               __end_of_RN487X_Read@rn487x_interface$F1869 1FF6  
                       _RN487X_Read@rn487x_interface$F1869 1FEC  
                                     ?_EUSART1_is_rx_ready 0070  
                      __end_of_LIGHTBLUE_TemperatureSensor 123B  
                              _LIGHTBLUE_TemperatureSensor 1225  
                                      _I2C1_MasterClearIrq 1EBB  
                                      ?_EUSART1_Initialize 0070  
                               __end_of_EUSART2_is_tx_done 1EF5  
                           __end_of_rn487x_PrintMessageEnd 0BFA  
                              ?_RN487X_ReadDefaultResponse 0070  
                                                  init_ram 1F9B  
                               __end_of_I2C1_MasterStartRx 1ED0  
                              _EUSART1_OverrunErrorHandler 015F  
                                   ?_rd1RegCompleteHandler 0078  
                                                  initloop 1F9C  
                                   _I2C1_DO_SEND_ADR_WRITE 1FAF  
                                      ?_RN487X_is_rx_ready 0070  
                                        getError@statusReg 0032  
                                __end_of_RN487X_FilterData 0EEC  
                             __end_of_I2C1_DO_SEND_RESTART 1F12  
                                  __end_of_I2C1_MasterOpen 10A4  
                                   ?_wr1RegCompleteHandler 0078  
                                  __end_of_I2C1_MasterStop 1ECD  
                                  __end_of_I2C1_Initialize 1FEC  
                    __end_of_EUSART1_SetRxInterruptHandler 1F6B  
                            _EUSART1_SetRxInterruptHandler 1F65  
                                              _I2C1_Poller 108A  
                                ?_I2C1_CallbackReturnReset 0078  
                                       _EUSART2_Initialize 097D  
                            __end_of_I2C1_MasterDisableIrq 1EC4  
                                              _I2C1_Status 00A0  
                                              ?_getAngleEn 0070  
                              LIGHTBLUE_PerformAction@data 0027  
                                         _getOperatingMode 0CEA  
                                                  swap@reg 0071  
                                        ?_setOperatingMode 0070  
                          __end_of_protocol_version_number 2014  
                               __end_of_RN487X_IsConnected 1ED9  
                                _do_I2C_SEND_RESTART_WRITE 0000  
                                      _I2C1_MasterSendNack 1EE9  
                      __end_of_I2C1_SetAddressNackCallback 1039  
                              _I2C1_SetAddressNackCallback 102E  
                                __end_of_RN487X_IndicateRx 1044  
                                     ?_I2C1_MasterClearIrq 0070  
                                           ??_I2C1_DO_IDLE 0071  
                                     ??_EUSART1_Initialize 0073  
                                                  strchr@c 0073  
                                                  strchr@s 0071  
                                           ??_I2C1_DO_RCEN 0071  
                               LIGHTBLUE_SplitByte@payload 0078  
                       __end_of_I2C1_DO_SEND_RESTART_WRITE 1F0D  
                               _I2C1_DO_SEND_RESTART_WRITE 1F08  
                                      ?_EUSART2_Initialize 0070  
                                                  strcpy@d 0075  
                                                  strlen@a 0074  
                                       ??_setOperatingMode 0033  
                                      _EUSART2_is_rx_ready 1FD1  
                                                  strlen@s 0071  
                                           __deviceAddress 006D  
                                               _returnStop 0000  
                                                  strstr@h 0078  
                                                  strstr@n 007A  
                                      _EUSART2_is_tx_ready 0000  
                                                _PORTAbits 000C  
                                     ??_RN487X_is_rx_ready 0071  
                                        _RN487X_SetOutputs 0A84  
                          __end_of_rdBlkRegCompleteHandler 1330  
                                    ??_rn487x_PrintMessage 0079  
                                   ??_RN487X_EnterDataMode 007B  
                                     _LIGHTBLUE_Initialize 1F41  
                                  _statusBuffer@main$F4268 0320  
                                  ??_i2c_read1ByteRegister 007B  
                                            ??_getLowPower 002C  
                                       ?_RN487X_SetOutputs 0020  
                                  _IOCAF6_InterruptHandler 00EA  
                            ??_I2C1_SetAddressNackCallback 0079  
                                   RN487X_Delay@delayCount 0074  
                                                _TRISAbits 0012  
                          I2C1_SetDataCompleteCallback@ptr 0077  
                           getDeviceStatus@deviceStatusReg 007B  
                                ??_TMR0_HasOverflowOccured 0071  
                           I2C1_CallbackReturnReset@funPtr 0078  
                                     ?_I2C1_MasterSendNack 0070  
                                      EUSART1_Write@txData 0071  
                                    ??_EUSART1_is_rx_ready 0071  
                                      ??_RN487X_SetOutputs 007B  
                                             _RN487X_Delay 1FB7  
                                            ??_isConnected 007B  
                                  getOperatingMode@opMode0 002F  
                                  getOperatingMode@opMode1 0030  
                                     RN487X_ReadMsg@msgLen 0075  
                                     ??_EUSART2_Initialize 0073  
                                     ?_EUSART2_is_rx_ready 0070  
                                   _BMA253_GetAccelDataXYZ 0C48  
                                     _LIGHTBLUE_SendPacket 0F74  
                                             _RN487X_Reset 1044  
                                _LIGHTBLUE_GetDataLedValue 1F47  
                                             _RN487X_Write 1066  
                                        ??_getDeviceStatus 007B  
                                           __end_of_RN487X 187A  
                                             _EUSART1_Read 1548  
                                             _EUSART2_Read 14D4  
                         __end_of_LIGHTBLUE_GetButtonValue 1F53  
                            RN487X_SetOutputs@ioHighNibble 0024  
                                     _timer0ReloadVal16bit 004A  
                            __end_of_EUSART2_RxDataHandler 127F  
                                              _do_I2C_IDLE 0000  
                                              _do_I2C_RCEN 0000  
                                    ??_I2C1_MasterClearIrq 0071  
                                 _rn487x_PrintMessageStart 1618  
                                __end_of_RN487X_SetOutputs 0ACC  
                                            _setZAxisRange 0902  
                                           _I2C1_DO_RX_ACK 1F17  
                                          ??_writeRegister 007C  
                                   ?_OSCILLATOR_Initialize 0070  
                                    ?_LIGHTBLUE_Initialize 0070  
                                            ??_RN487X_Init 0076  
                                            ??_RN487X_Read 007C  
                               ??_LIGHTBLUE_SendSerialData 0077  
                          RN487X_FilterData@asyncBuffering 0064  
                          __end_of_I2C1_CallbackReturnStop 1EB9  
                            __end_of_I2C1_MasterSendTxData 1EFE  
                                           __end_of_strchr 13BC  
                                  ??_i2c_read2ByteRegister 0026  
                                           __end_of_strcpy 1315  
                                           __end_of_strlen 12C8  
                                           __end_of_strstr 0E3A  
                                      start_initialization 0057  
                             LIGHTBLUE_AccelSensor@payload 0036  
                                              ??_I2C1_Open 0071  
                            setMagneticChannel@channelMode 0035  
                                      _i2c_busCollisionISR 0000  
                                         _getTemperatureEN 11E5  
                          RN487X_SetOutputs@stateLowNibble 0023  
                   LIGHTBLUE_SendProtocolVersion@dataIndex 0036  
                                   ??_BMA253_GetAccelDataY 002A  
                                   ??_BMA253_GetAccelDataZ 002A  
                                    ??_I2C1_MasterSendNack 0071  
                                     setOperatingMode@mode 0036  
                                        ?_setTemperatureEn 0070  
            EUSART1_SetRxInterruptHandler@interruptHandler 0071  
            EUSART1_SetTxInterruptHandler@interruptHandler 0071  
            EUSART2_SetRxInterruptHandler@interruptHandler 0071  
            EUSART2_SetTxInterruptHandler@interruptHandler 0071  
                                     _LIGHTBLUE_PushButton 11AA  
                                 LIGHTBLUE_SplitByte@value 0076  
                                    ??_EUSART2_is_rx_ready 0071  
                                   setMagneticChannel@mode 0036  
                                    __end_of_EUSART1_Write 1548  
                                    __end_of_EUSART2_Write 1521  
                                    ?_LIGHTBLUE_SendPacket 0077  
                                      __end_of_getLowPower 1267  
                                       ??_setTemperatureEn 0033  
                          ??_LIGHTBLUE_SendProtocolVersion 0020  
                                   rd1RegCompleteHandler@p 0078  
                               getMagneticChannel@magMode4 002F  
                               getMagneticChannel@magMode5 0030  
                               getMagneticChannel@magMode6 0031  
                               getMagneticChannel@magMode7 0032  
                                 I2C1_SetBuffer@bufferSize 0073  
                                         ?_I2C1_MasterOpen 0070  
                   __end_of_EUSART2_SetOverrunErrorHandler 1F83  
                           _EUSART2_SetOverrunErrorHandler 1F7D  
                                         ?_I2C1_MasterStop 0070  
                                         ?_I2C1_Initialize 0070  
                                      getError@intPinError 0030  
                                      __end_of_isConnected 120F  
                                getTemperatureEN@tempENreg 002F  
                                         ??_PMD_Initialize 0071  
                             i2c_read1ByteRegister@address 0025  
                                       setXYAxisRange@mode 0036  
                                   __end_of_I2C1_DO_RX_ACK 1F1C  
                                   wr1RegCompleteHandler@p 0078  
                                    _EUSART1_RxDataHandler 12E1  
                                  ??_I2C1_DO_SEND_ADR_READ 0071  
                                           ?_setZAxisRange 0070  
                           ?_EUSART1_SetRxInterruptHandler 0071  
                                       _LIGHTBLUE_LedState 14AE  
                                              __pdataBANK0 006E  
                                              __pdataBANK2 014C  
                                                 ??_strchr 0075  
                                                 ??_strcpy 0073  
                                                 ??_strlen 0073  
                                         I2C1_Open@address 0071  
                                           _eusart1RxCount 0058  
                                                 ??_strstr 0020  
                                           _eusart2RxCount 005F  
                                      ?_LIGHTBLUE_LedState 0070  
                                  ??_RN487X_MessageHandler 007C  
                                              __pbssCOMMON 007C  
                                     _I2C1_DO_SEND_RESTART 1F0D  
                        _EUSART1_RxDefaultInterruptHandler 0163  
                                                ___latbits 0003  
                                            __pcstackBANK0 0020  
                                            __pcstackBANK2 016D  
                           ?_LIGHTBLUE_ParseIncomingPacket 0070  
                                            bitWrite@value 0074  
                              ?_IOCAF6_SetInterruptHandler 0071  
                                                _do_I2C_RX 0000  
                                                _do_I2C_TX 0000  
                                    ?_LIGHTBLUE_PushButton 0070  
                                             _readRegister 105A  
                                      __end_of_RN487X_Init 07FF  
                                      __end_of_RN487X_Read 108A  
                              ?_LIGHTBLUE_SetErrorLedValue 0070  
                              ??_I2C1_DO_SEND_RESTART_READ 0071  
                                      EUSART2_Write@txData 0071  
                          ??_EUSART1_SetTxInterruptHandler 0073  
                                      _RN487X_EnterCmdMode 0800  
                                     __end_of_I2C1_DO_IDLE 1F03  
                         ??_EUSART1_SetFramingErrorHandler 0073  
                          ?_EUSART1_SetFramingErrorHandler 0071  
                          ??_EUSART2_SetRxInterruptHandler 0073  
                                     __end_of_I2C1_DO_RCEN 1FA8  
                            I2C1_SetAddressNackCallback@cb 0075  
                                                _dataReady 0065  
                                          _do_I2C_TX_EMPTY 0000  
                                     ??_LIGHTBLUE_LedState 007B  
                                                __pnvBANK1 00EA  
                                                __pnvBANK2 015D  
                                    _rd2RegCompleteHandler 114B  
                                    __end_of_fsmStateTable 1868  
                                                _main$5462 016D  
                                   _PIN_MANAGER_Initialize 0B15  
                                    _wr2RegCompleteHandler 115E  
                         ??_IOCAF6_DefaultInterruptHandler 0070  
                          ?_IOCAF6_DefaultInterruptHandler 0070  
                               ??_I2C1_MasterEnableRestart 0071  
                                 ?_LIGHTBLUE_PerformAction 0027  
                                           _I2C1_MasterFsm 1597  
                                        ?_RN487X_DataReady 0070  
                                          ?_I2C1_DO_RX_ACK 0070  
                                                __ptext100 1673  
                                                __ptext101 10F0  
                                                __ptext110 108A  
                                                __ptext102 1645  
                                                __ptext111 1F3B  
                                                __ptext103 10DF  
                                                __ptext120 1F08  
                                                __ptext112 1597  
                                                __ptext104 0B5E  
                                                __ptext121 1F03  
                                                __ptext113 156F  
                                                __ptext105 102E  
                                                __ptext130 1F35  
                                                __ptext122 1FA1  
                                                __ptext114 1F26  
                                                __ptext106 17CA  
                                                __ptext131 1EF9  
                                                __ptext123 0ACC  
                                                __ptext115 1F21  
                                                __ptext107 1097  
                                                __ptext140 1184  
                                                __ptext132 1EED  
                                                __ptext124 0E3A  
                                                __ptext116 1F1C  
                                                __ptext108 1F2B  
                                                __ptext141 1171  
                                                __ptext133 1ED0  
                                                __ptext125 1FAF  
                                                __ptext117 1F17  
                                                __ptext109 13BC  
                                                __ptext150 10C1  
                                                __ptext142 1315  
                                                __ptext134 1EE9  
                                                __ptext126 1FC8  
                                                __ptext118 1F12  
                                                __ptext151 1ECA  
                                                __ptext143 115E  
                                                __ptext135 1ECD  
                                                __ptext127 1EFE  
                                                __ptext119 1F0D  
                                                __ptext160 10B2  
                                                __ptext152 1EC7  
                                                __ptext144 114B  
                                                __ptext136 1EB9  
                                                __ptext128 15EB  
                                                __ptext161 07FF  
                                                __ptext153 1EC4  
                                                __ptext145 1138  
                                                __ptext137 1EB7  
                                                __ptext129 1ED3  
                                                __ptext170 1EDD  
                                                __ptext162 13FF  
                                                __ptext154 127F  
                                                __ptext146 1125  
                                                __ptext138 1330  
                                                __ptext171 1EB5  
                                                __ptext163 13DD  
                                                __ptext155 1EC1  
                                                __ptext147 1112  
                                                __ptext139 1197  
                                                __ptext172 1ED9  
                                                __ptext164 0888  
                                                __ptext156 1EBE  
                                                __ptext148 1023  
                                                __ptext173 12E1  
                                                __ptext165 084F  
                                                __ptext157 1EBB  
                                                __ptext149 1466  
                                                __ptext166 1EE5  
                                                __ptext167 1EB6  
                                                __ptext159 1FBF  
                                                __ptext168 1EE1  
                                                __ptext169 1267  
                                      getAngleEn@angleDir2 002F  
                                      getAngleEn@angleDir3 0030  
                             ??_LIGHTBLUE_GetErrorLedValue 0071  
                              _i2c1_driver_busCollisionISR 00E8  
                                 _LIGHTBLUE_GetButtonValue 1F4D  
                        _EUSART2_TxDefaultInterruptHandler 00EE  
                                       ??_RN487X_DataReady 007C  
                       LIGHTBLUE_SendProtocolVersion@value 0035  
                                     ?_RN487X_EnterCmdMode 0070  
                                   ??_LIGHTBLUE_Initialize 0071  
                                                 ?_bitRead 0071  
                                  _I2C1_MasterWaitForEvent 1F3B  
                                         _I2C1_MasterClose 1EBE  
                                  getError@oscillatorError 0031  
                                           _I2C1_SetBuffer 10C1  
                             ??_INTERRUPT_InterruptManager 0071  
                                           _sequenceNumber 006C  
                              i2c_read2ByteRegister@result 002B  
                                         _I2C1_MasterStart 1EC4  
                                                _connected 0068  
                                         _I2C1_MasterWrite 1F2B  
                                    _LIGHTBLUE_AccelSensor 16A1  
                                                 _BAUD1CON 011F  
                                                 _BAUD2CON 0A1F  
                    ??_wr2RegCompleteHandler@strncmp$F4890 0079  
                     ?_rd1RegCompleteHandler@strncmp$F4882 0078  
                    ??_rd1RegCompleteHandler@strncmp$F4884 0079  
                     ?_wr1RegCompleteHandler@strncmp$F4876 0078  
                     ?_rd2RegCompleteHandler@strncmp$F4885 0078  
                    ??_wr1RegCompleteHandler@strncmp$F4878 0079  
                   ?_rdBlkRegCompleteHandler@strncmp$F4894 0078  
                    ??_rd2RegCompleteHandler@strncmp$F4887 0079  
                  ??_rdBlkRegCompleteHandler@strncmp$F4896 0079  
                     ?_wr2RegCompleteHandler@strncmp$F4888 0078  
               __end_of_EUSART1_DefaultOverrunErrorHandler 1EE1  
                     ??_EUSART1_DefaultOverrunErrorHandler 0070  
                      ?_EUSART1_DefaultOverrunErrorHandler 0070  
                       _EUSART1_DefaultOverrunErrorHandler 1EDD  
                                    ?_I2C1_DO_SEND_RESTART 0070  
                                     _EUSART1_ErrorHandler 015D  
                             ?_EUSART2_DefaultErrorHandler 0070  
                                              _getLowPower 1251  
                                        ?_I2C1_DO_TX_EMPTY 0070  
                                  _EUSART1_SetErrorHandler 1F53  
                              __end_of_LIGHTBLUE_SplitByte 172E  
                                 __end_of_getOperatingMode 0D3D  
                         __end_of_I2C1_CallbackReturnReset 1EBB  
                              __end_of_LIGHTBLUE_SplitWord 10B2  
                                 LIGHTBLUE_SplitWord@value 0079  
                                       ??_I2C1_DO_TX_EMPTY 0079  
                                   ??_LIGHTBLUE_SendPacket 0078  
                                      getError@otpCrcError 002F  
                                       _EUSART1_is_tx_done 1EF5  
                                  ??_rd1RegCompleteHandler 0079  
                                                 ?_strncmp 0071  
                                  ?_I2C1_DO_SEND_ADR_WRITE 0070  
                                I2C1_MasterSendTxData@data 0071  
                                              _isConnected 11FA  
                                  ??_wr1RegCompleteHandler 0079  
                     LIGHTBLUE_SendProtocolVersion@payload 0022  
                                        ??_TMR0_Initialize 0071  
                                         _I2C1_SetCallback 1466  
                                        _RN487X_is_tx_done 1FF6  
                                   i2c_read1ByteRegister@e 0026  
                                                 _LATAbits 0018  
                  EUSART1_SetErrorHandler@interruptHandler 0071  
                  EUSART2_SetErrorHandler@interruptHandler 0071  
                                   i2c_read1ByteRegister@x 0027  
                                                 _LATCbits 001A  
                                               _I2C1_DO_RX 0ACC  
                                               _I2C1_DO_TX 0E3A  
                                      ?_EUSART1_is_tx_done 0070  
                                                clear_ram0 1F95  
                                                 _PIE0bits 0716  
                                                 _PIE3bits 0719  
                 LIGHTBLUE_ParseIncomingPacket@parserState 006B  
                                               _I2C1_Close 127F  
                    __end_of_LIGHTBLUE_SendProtocolVersion 1795  
                            _LIGHTBLUE_SendProtocolVersion 1761  
                                       ?_RN487X_is_tx_done 0070  
                                             ?_I2C1_Poller 0070  
                                   __end_of_I2C1_MasterFsm 15C0  
                             __end_of_I2C1_MasterGetRxData 1ED3  
                                                 _PIR0bits 070C  
                                             ??_getAngleEn 002C  
                                                 _PIR3bits 070F  
                                                 _RX1DTPPS 1ECB  
                                          ??_setZAxisRange 0033  
                                                 _RX2DTPPS 1ECD  
                                   ?_EUSART1_RxDataHandler 0070  
                                  _TMAG5273_GetManufacture 12C8  
                                       _I2C1_MasterSendAck 1EED  
                           DELAY_milliseconds@milliseconds 0071  
                                 ?_BMA253_NewAccelDataRdyY 0070  
                                 ?_BMA253_NewAccelDataRdyZ 0070  
                  __end_of_rn487x_PrintIndicatorCharacters 1466  
                        ??_rn487x_PrintIndicatorCharacters 0073  
                         ?_rn487x_PrintIndicatorCharacters 0070  
                          _rn487x_PrintIndicatorCharacters 1443  
                                _I2C1_DO_SEND_RESTART_READ 1F03  
                                                 _SSP1CON1 0190  
                                                 _SSP1CON2 0191  
                                     setTemperatureEn@mode 0036  
                                       _EUSART2_is_tx_done 1EF1  
                                   __end_of_I2C1_SetBuffer 10D0  
                                                 _SSP1STAT 018F  
                                        ??_PIN_MANAGER_IOC 0070  
                                      ??_RN487X_is_tx_done 0071  
                                    ??_RN487X_EnterCmdMode 007B  
                     __end_of_I2C1_SetDataCompleteCallback 102E  
                             _I2C1_SetDataCompleteCallback 1023  
                                       _I2C1_MasterStartRx 1ECD  
                              ?_I2C1_DO_SEND_RESTART_WRITE 0070  
                                      ?_I2C1_MasterSendAck 0070  
                           LIGHTBLUE_AccelSensor@accelData 0043  
                                 ?_I2C1_DO_RX_NACK_RESTART 0070  
                                ?_LIGHTBLUE_UpdateErrorLed 0070  
                                      RN487X_ReadMsg@index 0079  
               rn487x_PrintIndicatorCharacters@messageType 0073  
                                     ??_EUSART1_is_tx_done 0071  
                                              _RN487X_Init 07A1  
                                              _RN487X_Read 107E  
                                      ?_EUSART2_is_tx_done 0070  
                                getError@undervoltageError 002E  
                             __end_of_RN487X_SetSystemMode 107E  
                                      ?_I2C1_MasterStartRx 0070  
                                          _getDeviceStatus 1FA8  
                             __end_of_I2C1_DO_ADDRESS_NACK 1597  
                                   ??_LIGHTBLUE_PushButton 007B  
                                       _RN487X_IsConnected 1ED6  
                            __end_of_i2c_read1ByteRegister 0BAC  
                                  ?_BMA253_GetAccelDataXYZ 0070  
                           __end_of_I2C1_DO_SEND_ADR_WRITE 1FB7  
                            ??_EUSART2_DefaultErrorHandler 0071  
                                            _I2C1_DO_RESET 1F26  
                                              _asyncBuffer 004E  
                                       __end_of_getAngleEn 0D91  
                                    I2C1_Close@returnValue 0071  
                                 ?_rdBlkRegCompleteHandler 0078  
                                        setZAxisRange@mode 0036  
                                __end_of_RN487X_is_tx_done 2000  
                                      I2C1_SetCallback@idx 0074  
                                      I2C1_SetCallback@ptr 0073  
                                      ?_RN487X_IsConnected 0070  
                                LIGHTBLUE_LedState@payload 0020  
                                  _EUSART2_SetErrorHandler 1F71  
                                     ??_I2C1_MasterSendAck 0071  
                    LIGHTBLUE_ParseIncomingPacket@packetID 0069  
                                    EUSART1_Read@readValue 0072  
                                   ?_rd2RegCompleteHandler 0078  
                              _EUSART2_OverrunErrorHandler 0169  
                                      _do_I2C_DO_NACK_STOP 0000  
                                     ??_EUSART2_is_tx_done 0071  
                        setTemperatureEn@temperatureEnable 0035  
                             __end_of_I2C1_MasterOperation 13DD  
                               ??_rn487x_PrintMessageStart 0073  
                          __end_of_LIGHTBLUE_PerformAction 084F  
                          ??_RN487X_SetAsyncMessageHandler 0074  
                                   ?_wr2RegCompleteHandler 0078  
                                     ??_I2C1_MasterStartRx 0071  
                       LIGHTBLUE_SendSerialData@serialData 0079  
                    __end_of_EUSART1_SetTxInterruptHandler 1F71  
                            _EUSART1_SetTxInterruptHandler 1F6B  
                                          ?_I2C1_MasterFsm 0070  
                    __end_of_EUSART2_SetRxInterruptHandler 1F89  
                            _EUSART2_SetRxInterruptHandler 1F83  
                      LIGHTBLUE_ParseIncomingPacket@length 006A  
                                 __end_of_getTemperatureEN 11FA  
                                  setZAxisRange@zAxisRange 0035  
                                ??_I2C1_MasterWaitForEvent 0071  
                             RN487X_SetOutputs@ioLowNibble 0022  
                              __end_of_rn487x_PrintMessage 17CA  
                                    _I2C1_MasterDisableIrq 1EC1  
       wr2RegCompleteHandler@i2c1_master_example$F1750@ptr 0078  
       rd1RegCompleteHandler@i2c1_master_example$F1727@ptr 0078  
       wr1RegCompleteHandler@i2c1_master_example$F1744@ptr 0078  
                                  ??_OSCILLATOR_Initialize 0071  
     rdBlkRegCompleteHandler@i2c1_master_example$F1761@ptr 0078  
       rd2RegCompleteHandler@i2c1_master_example$F1738@ptr 0078  
                                          ?_I2C1_SetBuffer 0071  
                                   readRegister@regAddress 002A  
                                     ??_RN487X_IsConnected 0071  
                                             bitWrite@mask 0079  
                                   ?_LIGHTBLUE_AccelSensor 0070  
                                   ??_I2C1_DO_SEND_RESTART 0071  
                                ??_EUSART1_SetErrorHandler 0073  
                      __end_of_EUSART1_DefaultErrorHandler 1EDD  
                              _EUSART1_DefaultErrorHandler 1ED9  
                                  RN487X_SetOutputs@bitMap 0020  
                              __end_of_EUSART1_is_rx_ready 1FE3  
                                               _T0CON0bits 059E  
                           __end_of_BMA253_GetAccelDataXYZ 0C98  
                                     _EUSART2_ErrorHandler 0167  
                                           ?_I2C1_DO_RESET 0070  
                                                 _bitWrite 148A  
                       LIGHTBLUE_TemperatureSensor@payload 002C  
                            __end_of_i2c_read2ByteRegister 0A84  
                                                 _getError 0D91  
                                                 __ptext10 1FA8  
                                                 __ptext11 148A  
                                                 __ptext20 0D3D  
                                                 __ptext12 11FA  
                                                 __ptext21 1421  
                                                 __ptext13 12C8  
                                                 __ptext30 097D  
                                                 __ptext22 1000  
                                                 __ptext14 11D1  
                                                 __ptext31 1F89  
                                                 __ptext23 123B  
                                                 __ptext15 0A3E  
                                                 __ptext40 1F59  
                                                 __ptext32 1F83  
                                                 __ptext24 11BD  
                                                 __ptext16 11E5  
                                                 __ptext41 1F53  
                                                 __ptext33 1F7D  
                                                 __ptext25 1019  
                                                 __ptext17 0CEA  
                                                 __ptext50 1618  
                                                 __ptext42 1297  
                                                 __ptext34 1F77  
                                                 __ptext26 0B15  
                                                 __ptext18 0377  
                                                 __ptext51 0BAC  
                                                 __ptext43 107E  
                                                 __ptext35 1F71  
                                                 __ptext27 1F8F  
                                                 __ptext19 1251  
                                                 __ptext60 1072  
                                                 __ptext52 1795  
                                                 __ptext44 1382  
                                                 __ptext36 093F  
                                                 __ptext28 100F  
                                                 __ptext61 1044  
                                                 __ptext53 12FB  
                                                 __ptext45 0E90  
                                                 __ptext37 1F6B  
                                                 __ptext29 1FE3  
                                                 __ptext70 10D0  
                                                 __ptext62 1039  
                                                 __ptext54 1443  
                                                 __ptext46 09FA  
                                                 __ptext38 1F65  
                                                 __ptext71 1366  
                                                 __ptext63 1225  
                                                 __ptext55 1ED6  
                                                 __ptext47 0DE5  
                                                 __ptext39 1F5F  
                                                 __ptext80 15C0  
                                                 __ptext72 0A84  
                                                 __ptext64 065C  
                                                 __ptext56 07A1  
                                                 __ptext48 0C98  
                                                 __ptext81 1FEC  
                                                 __ptext73 0EEC  
                                                 __ptext65 1761  
                                                 __ptext57 1005  
                                                 __ptext49 139E  
                                                 __ptext90 16A1  
                                                 __ptext82 1548  
                                                 __ptext74 134B  
                                                 __ptext66 11AA  
                                                 __ptext58 1FDA  
                                                 __ptext91 10A4  
                                                 __ptext83 14D4  
                                                 __ptext75 0800  
                                                 __ptext67 1F4D  
                                                 __ptext59 1FD1  
                                                 __ptext92 16FD  
                                                 __ptext84 1FB7  
                                                 __ptext76 16CF  
                                                 __ptext68 0590  
                                                 __ptext93 0F74  
                                                 __ptext85 120F  
                                                 __ptext77 1FF6  
                                                 __ptext69 0817  
                                                 __ptext94 12AF  
                                                 __ptext86 14AE  
                                                 __ptext78 1EF5  
                                                 __ptext95 1066  
                                                 __ptext87 1F30  
                                                 __ptext79 1EF1  
                                                 __ptext96 1521  
                                                 __ptext88 1F47  
                                                 __ptext97 14FA  
                                                 __ptext89 1F41  
                                                 __ptext98 0C48  
                                                 __ptext99 105A  
                                              bitRead@mask 0078  
                                             _SSP1CON1bits 0190  
                                             _SSP1CON2bits 0191  
                                               _IOCAF6_ISR 10B2  
                                 ??_i2c_write1ByteRegister 007B  
                                               strcpy@dest 0076  
                                 _I2C1_CallbackReturnReset 1EB9  
                                              ?_I2C1_DO_RX 0070  
                                              ?_I2C1_DO_TX 0070  
               __end_of_EUSART2_DefaultFramingErrorHandler 1EB7  
                     ??_EUSART2_DefaultFramingErrorHandler 0070  
                      ?_EUSART2_DefaultFramingErrorHandler 0070  
                       _EUSART2_DefaultFramingErrorHandler 1EB6  
                          __end_of_BMA253_NewAccelDataRdyY 10F0  
                          __end_of_BMA253_NewAccelDataRdyZ 1101  
                                          _lightBlueSerial 0220  
                                ??_TMAG5273_GetManufacture 007B  
                              __end_of_I2C1_MasterClearIrq 1EBE  
                             __end_of_I2C1_DO_RX_NACK_STOP 1F21  
                                              ?_I2C1_Close 0070  
                                        writeRegister@data 0026  
                                               _RC1STAbits 011D  
                                               _RC2STAbits 0A1D  
           EUSART1_SetOverrunErrorHandler@interruptHandler 0071  
           EUSART2_SetOverrunErrorHandler@interruptHandler 0071  
                     RN487X_SetAsyncMessageHandler@pBuffer 0071  
                       __end_of_LIGHTBLUE_GetErrorLedValue 1F35  
                               _LIGHTBLUE_GetErrorLedValue 1F30  
                                                 int$flags 007E  
                          __end_of_I2C1_DO_RX_NACK_RESTART 1F26  
                             RN487X_GetInputsValues@F12901 006E  
                                   getTemperatureEN@tempEN 002E  
                                 I2C1_MasterOperation@read 0022  
                       __end_of_INTERRUPT_InterruptManager 0055  
                               _INTERRUPT_InterruptManager 0004  
                                    _EUSART2_RxDataHandler 1267  
                                  __end_of_getDeviceStatus 1FAF  
                                             _SSP1STATbits 018F  
                                 i2c_read1ByteRegister@reg 0024  
                            __end_of_I2C1_DO_SEND_ADR_READ 1FD1  
                              _EUSART1_FramingErrorHandler 0161  
                                             _I2C1_DO_IDLE 1EFE  
                                      _EUSART1_Receive_ISR 0888  
                                             _I2C1_DO_RCEN 1FA1  
                                    LIGHTBLUE_LedState@led 0023  
                              __end_of_I2C1_MasterSendNack 1EED  
                         ??_EUSART2_SetOverrunErrorHandler 0073  
                          ?_EUSART2_SetOverrunErrorHandler 0071  
                                 ?_TMR0_HasOverflowOccured 0070  
                                    __end_of_writeRegister 105A  
                                               _INTCONbits 000B  
                              __end_of_EUSART2_is_rx_ready 1FDA  
                           I2C1_SetAddressNackCallback@ptr 0077  
                                 ??_rn487x_PrintMessageEnd 0073  
                               getLowPower@lowPowerModeBit 002E  
                                           __pstringtext10 187A  
                                           __pstringtext11 1891  
                                           __pstringtext12 2000  
                                           __pstringtext13 0000  
                                     _I2C1_MasterGetRxData 1ED0  
                                    _I2C1_MasterSendTxData 1EF9  
                            __end_of_RN487X_MessageHandler 0A3E  
                              TMAG5273_GetManufacture@read 002F  
                                ??_EUSART2_SetErrorHandler 0073  
                                              bitWrite@reg 0071  
                                   _do_I2C_DO_ADDRESS_NACK 0000  
                                                 intlevel1 0000  
                             RN487X_MessageHandler@message 0041  
                                       RN487X_Write@txData 0076  
                                 __end_of_I2C1_MasterClose 1EC1  
                                     ?_EUSART1_Receive_ISR 0070  
                                   rd2RegCompleteHandler@p 0078  
                                  ?_PIN_MANAGER_Initialize 0070  
                                 __end_of_I2C1_MasterStart 1EC7  
                                ?_LIGHTBLUE_SendSerialData 0070  
                                 __end_of_I2C1_MasterWrite 1F30  
                                   RN487X_RebootCmd@reboot 1886  
                   __end_of_EUSART1_SetOverrunErrorHandler 1F65  
                           _EUSART1_SetOverrunErrorHandler 1F5F  
                                                strcpy@src 0071  
                                         ??_I2C1_DO_RX_ACK 0071  
                               ??_LIGHTBLUE_GetButtonValue 0071  
                                  _I2C1_CallbackReturnStop 1EB7  
                             __end_of_EUSART1_Transmit_ISR 1421  
                          ??_LIGHTBLUE_ParseIncomingPacket 002B  
                                              _serialIndex 0056  
                                     _RN487X_SetSystemMode 1072  
                                     _I2C1_DO_ADDRESS_NACK 156F  
                                   ?_I2C1_MasterDisableIrq 0070  
                             i2c_read2ByteRegister@address 002A  
                    __end_of_RN487X_SetAsyncMessageHandler 12AF  
                            _RN487X_SetAsyncMessageHandler 1297  
                                   wr2RegCompleteHandler@p 0078  
           EUSART1_SetFramingErrorHandler@interruptHandler 0071  
           EUSART2_SetFramingErrorHandler@interruptHandler 0071  
                           ?_EUSART1_SetTxInterruptHandler 0071  
                                 RN487X_SetSystemMode@mode 0071  
                           ?_EUSART2_SetRxInterruptHandler 0071  
                        LIGHTBLUE_ParseIncomingPacket@data 0052  
                                       _eusart1RxLastError 0057  
                           RN487X_ReadDefaultResponse@resp 0073  
                                            __pstringtext1 1800  
                                            __pstringtext2 1828  
                                            __pstringtext3 1848  
                                            __pstringtext4 1868  
                                            __pstringtext5 2010  
                                            __pstringtext6 2012  
                                            __pstringtext7 1886  
                                            __pstringtext8 2006  
                                            __pstringtext9 200B  
                                      _EUSART2_Receive_ISR 084F  
                          LIGHTBLUE_SetErrorLedValue@value 0026  
                                 __end_of_I2C1_SetCallback 148A  
                                               _SSP1DATPPS 1EC6  
                                               _SSP1CLKPPS 1EC5  
                                          ??_I2C1_DO_RESET 0071  
                   __end_of_IOCAF6_DefaultInterruptHandler 0800  
                           _IOCAF6_DefaultInterruptHandler 07FF  
                                     _I2C1_MasterOperation 13BC  
                                          _TMR0_Initialize 11BD  
                                             ?_getLowPower 0070  
                                     RN487X_SendCmd@cmdLen 0077  
                                                 strncmp@l 0071  
                                                 strncmp@n 0075  
                                                 strncmp@r 0073  
                        _LIGHTBLUE_ParseIncomingPacket$490 002F  
                        _LIGHTBLUE_ParseIncomingPacket$491 0031  
                        _LIGHTBLUE_ParseIncomingPacket$489 002D  
                                    ?_I2C1_MasterGetRxData 0070  
                                 i2c_read2ByteRegister@reg 0024  
                                              _returnReset 0000  
                                         _setOperatingMode 0706  
                                                 strstr@nl 0022  
                                               _TX1STAbits 011E  
                                        ?_getOperatingMode 0070  
                                RN487X_ReadMsg@expectedMsg 0073  
                                               _TX2STAbits 0A1E  
                                              ?_IOCAF6_ISR 0070  
                                             ?_isConnected 0070  
                                    ??_EUSART1_Receive_ISR 0071  
                           __end_of_PIN_MANAGER_Initialize 0B5E  
                                       ??_getOperatingMode 002C  
                             ?_LIGHTBLUE_TemperatureSensor 0070  
                          ??_EUSART2_SetTxInterruptHandler 0073  
                            __end_of_rd1RegCompleteHandler 114B  
                                     ?_EUSART2_Receive_ISR 0070  
                                       _eusart2RxLastError 005E  
                                      RN487X_SendCmd@index 0079  
                         __end_of_rn487x_PrintMessageStart 1645  
                                          _PIN_MANAGER_IOC 1FBF  
                         RN487X_ReadDefaultResponse@status 0076  
                             ??_RN487X_ReadDefaultResponse 0073  
                            __end_of_wr1RegCompleteHandler 1138  
                                    _do_I2C_SEND_ADR_WRITE 0000  
                                  ??_EUSART1_RxDataHandler 0070  
                                     _do_I2C_SEND_ADR_READ 0000  
                         __end_of_LIGHTBLUE_UpdateErrorLed 1382  
                                    ?_RN487X_SetSystemMode 0071  
                        _EUSART2_RxDefaultInterruptHandler 00EC  
                                    ?_I2C1_DO_ADDRESS_NACK 0070  
                               LIGHTBLUE_SplitWord@payload 007B  
                                   RN487X_IndicateRx@value 0071  
